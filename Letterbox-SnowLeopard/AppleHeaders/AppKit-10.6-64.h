/*
 *     Generated by class-dump 3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

#pragma mark Named Structures

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGFunctionCallbacks {
    unsigned int _field1;
    void *_field2;
    void *_field3;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CMNamedColorPageInfoEntryType {
    unsigned short pageNum;
    unsigned short pageLen;
    unsigned short pageRep;
    unsigned short reserved[3];
};

struct CMNamedColorPageInfoType {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    struct CMNamedColorPageInfoEntryType _field4[1];
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct ComponentInstanceRecord {
    long long _field1[1];
};

struct EventTypeSpec {
    unsigned int _field1;
    unsigned int _field2;
};

struct FSRef {
    unsigned char hidden[80];
};

struct NSButtonState {
    long long _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct NSMenuServicesViewMetrics {
    unsigned int _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
};

struct NSNavSimpleButtonState {
    long long _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct NSThreadPrivate {
    unsigned int _field1;
    struct __CFRunLoopObserver *_field2;
    struct __CFRunLoop *_field3;
    NSDockTile *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    void *_field7;
    long long _field8;
    long long _field9;
};

struct NSWorkspaceNotificationCenterSubsystemContext_t {
    id token;
};

struct OpaqueAEDataStorageType;

struct OpaqueMenuRef;

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct Point {
    short _field1;
    short _field2;
};

struct ProcessSerialNumber {
    unsigned int _field1;
    unsigned int _field2;
};

struct RTFColor;

struct RTFFont;

struct RTFStyle;

struct SpeechChannelRecord {
    long long _field1[1];
};

struct _CGEventProcess {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _CGSEventRecord {
    unsigned short _field1;
    unsigned short _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    unsigned long long _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    struct __CGEventSourceData {
        int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned long long _field5;
        unsigned int _field6;
        unsigned short _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned long long _field10;
    } _field11;
    struct _CGEventProcess _field12;
    union {
        CDStruct_e29a92ac _field1;
        CDStruct_e29a92ac _field2;
        struct {
            unsigned short _field1;
            short _field2;
            unsigned short _field3;
            unsigned short _field4;
            unsigned short _field5;
            short _field6;
            short _field7;
            char _field8;
            unsigned char _field9;
            unsigned int _field10;
            unsigned int _field11;
            unsigned short _field12[20];
        } _field3;
        struct {
            short _field1;
            short _field2;
            int _field3;
            int _field4;
            unsigned int _field5;
            long long _field6;
            long long _field7;
            int _field8[8];
        } _field4;
        struct {
            unsigned short _field1;
            unsigned short _field2;
            unsigned int _field3;
            unsigned int _field4;
            int _field5;
            int _field6;
            int _field7;
            int _field8;
            int _field9;
            int _field10;
            int _field11;
            int _field12;
            int _field13[5];
        } _field5;
        CDStruct_fb191204 _field6;
        CDStruct_fb191204 _field7;
        struct _CGSTabletPointData _field8;
        struct _CGSTabletProximityData _field9;
        struct {
            short _field1;
            short _field2;
            union {
                float _field1[15];
                int _field2[15];
                short _field3[30];
                char _field4[60];
            } _field3;
        } _field10;
        struct {
            short _field1;
            short _field2;
            unsigned int _field3;
            unsigned long long _field4;
            unsigned short _field5;
            short _field6;
            int _field7[11];
        } _field11;
        struct {
            unsigned int _field1;
            unsigned char _field2;
            unsigned char _field3;
            unsigned char _field4[2];
            union {
                CDStruct_31ad8352 _field1;
                CDStruct_31ad8352 _field2;
                struct {
                    float _field1;
                    float _field2;
                    float _field3;
                    int _field4[11];
                } _field3;
                CDStruct_d2a7e547 _field4;
                CDStruct_31ad8352 _field5;
                CDStruct_d2a7e547 _field6;
            } _field5;
        } _field12;
    } _field13;
    void *_field14;
    unsigned int _field15[4];
    unsigned short _field16;
    unsigned short _field17;
    unsigned short *_field18;
};

struct _CGSTabletPointData {
    int _field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct {
        short _field1;
        short _field2;
    } _field6;
    unsigned short _field7;
    short _field8;
    unsigned short _field9;
    short _field10;
    short _field11;
    short _field12;
};

struct _CGSTabletProximityData {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned char _field10;
    unsigned char _field11;
    short _field12;
};

struct _NSAttributeDictionaryElement {
    unsigned long long hash;
    id key;
    id value;
};

struct _NSAttributeInfo {
    unsigned int toUniCharEncoding;
    unsigned int codePageEncoding;
    NSFont *font;
    double fontSize;
    double kern;
    NSMutableParagraphStyle *paraStyle;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int fontIsValid:1;
    unsigned int paraStyleIsValid:1;
    unsigned int kernIsValid:1;
    unsigned int attributesSameAsBefore:1;
    unsigned int multiByteEncoding:1;
    unsigned int unicodeAlternativeLength:3;
    unsigned int tabStopType:4;
    unsigned int curAttributesNeedsCopying:1;
    unsigned int paraStyleNeedsCopying:1;
    unsigned int hasWritingDirectionAttribute:1;
    unsigned int :15;
};

struct _NSBrowserColumnResizeInfo {
    char _field1;
    char _field2;
    char _field3;
    id _field4;
    long long _field5;
    double _field6;
    struct CGSize _field7;
};

struct _NSCarbonMenuSearchReturn {
    id _field1;
    struct OpaqueMenuRef *_field2;
    unsigned short _field3;
};

struct _NSDrawingParameters {
    id _field1;
    id _field2;
};

struct _NSGlyphNode;

struct _NSGlyphTree {
    struct _NSGlyphNode *rootNode;
    struct _NSGlyphNode *curNode;
    unsigned long long curCharIndex;
    unsigned long long curGlyphIndex;
};

struct _NSImageCellAnimationState {
    NSTimer *_field1;
    double _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct _NSLayoutNode;

struct _NSLayoutTree {
    struct _NSLayoutNode *rootNode;
    struct _NSLayoutNode *curNode;
    unsigned long long curGlyphIndex;
    double curLongitudinalOrigin;
    struct CGRect extraLineFragmentRect;
    struct CGRect extraLineFragmentUsedRect;
    unsigned long long glyphsPerLineEstimate;
    double offsetPerLineEstimate;
};

struct _NSModalSession {
    id _field1;
    id _field2;
    struct _NSModalSession *_field3;
    int _field4;
    char _field5;
    long long _field6;
    unsigned long long _field7;
    char _field8;
    char _field9;
    short _field10;
    long long _field11;
    NSWindow *_field12;
    id _field13;
    SEL _field14;
    void *_field15;
    long long _field16;
    NSEvent *_field17;
};

struct _NSNibFlags {
    unsigned int _isKeyed:1;
    unsigned int _reserved:31;
};

struct _NSRTFPriv {
    void *reader;
    char *rtfInput;
    unsigned long long rtfInputLength;
    unsigned long long rtfInputLocation;
    unsigned long long rtfHeaderEndLocation;
    int pushedChar;
    int pushedClass;
    int pushedMajor;
    int pushedMinor;
    int pushedParam;
    char pushedTextBuf[1024];
    int prevChar;
    int bumpLine;
    struct RTFFont *fontList;
    struct RTFColor *colorList;
    struct RTFStyle *styleList;
    char *inputName;
    char *outputName;
    void *ccb[5];
    void *readHook;
    void *msgProc;
    void *panicProc;
    char textBuf[1024];
    int textLen;
    int class;
    int major;
    int minor;
    int param;
    long long lineNum;
    long long linePos;
    int groupState;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRunBlock {
    unsigned long long _field1;
    unsigned char _field2[0];
};

struct _NSStoredContainerUsage {
    struct CGRect _field1;
    struct CGRect _field2;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :29;
    } _field3;
    struct CGRect _field4;
    struct _NSRange _field5;
};

struct _NSTextDragInfo {
    struct CGRect _field1;
    char _field2;
    NSViewWindowBackingStoreBuffer *_field3;
    char _field4;
};

struct _NSToolbarMotion {
    double _field1;
    double _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    double _field6;
};

struct _NSViewTrackingRect {
    long long _field1;
    struct _NSViewTrackingRect *_field2;
};

struct _PartStruct {
    long long _field1;
    double _field2;
};

struct _PrivatePrintOperationInfo {
    struct CGRect _field1;
    struct CGRect _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    id _field18;
    id _field19;
    struct CGRect _field20;
    char _field21;
    char _field22;
    char _field23;
    long long _field24;
    double _field25;
    double _field26;
    double _field27;
    double _field28;
    long long _field29;
    long long _field30;
    struct CGPoint _field31;
    unsigned int _field32;
    void *_field33;
    long long _field34;
    long long _field35;
    char _field36;
    long long _field37;
    long long _field38;
    long long _field39;
    id _field40;
    char _field41;
    id _field42;
    long long _field43;
    char _field44;
    id _field45;
    id _field46;
    long long _field47;
    id _field48;
    double *_field49;
    long long _field50;
    double *_field51;
    long long _field52;
};

struct _SelectionAnchor {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct _TvFlags3 {
    unsigned int reserved:8;
    unsigned int subscribedToWindowWillOrderOnScreen:1;
    unsigned int supressRowChangedNotifications:1;
    unsigned int drawingEverything:1;
    unsigned int flashingDropFeedbackRow:1;
    unsigned int wantsFirstResponderOnlyOnNonMouseEvents:1;
    unsigned int handlingViewBasedMouseDown:1;
    unsigned int isViewBased:1;
    unsigned int selectionChangingType:2;
    unsigned int selectionType:2;
    unsigned int delegateRespondsTo_shouldReorderColumn:1;
    unsigned int unarchiving:1;
    unsigned int subclassOverrides_selectMultiIndexVersion:1;
    unsigned int tileNeeded:1;
    unsigned int delegateRespondsTo_isGroupRow:1;
    unsigned int delegateRespondsTo_selectionIndexesForProposedSelection:1;
    unsigned int delegateRespondsTo_dataCellForRow:1;
    unsigned int drawingContextMenuHighlightOnAllSelectedRows:1;
    unsigned int drawingContextMenuHighlight:1;
    unsigned int allowsTypeSelect:1;
    unsigned int editOnSingleClick:1;
    unsigned int delegateRespondsTo_shouldTrackCell:1;
    unsigned int hasRowHeaderView:1;
};

struct __NSKeyValueCodingControllerModeType {
    long long mode;
    unsigned long long index;
    id indexPath;
};

struct __NSOVRowEntry {
    struct __NSOVRowEntry *_field1;
    long long _field2;
    id _field3;
    short _field4;
    long long _field5;
    struct __NSOVRowEntry **_field6;
    long long *_field7;
    struct __REFlags {
        unsigned int expandable:1;
        unsigned int expanded:1;
        unsigned int inited:1;
        unsigned int initedItemData:1;
        unsigned int initedIsExpandableData:1;
        unsigned int overwritten:1;
        unsigned int reserved:26;
    } _field8;
};

struct __NSRowHeightBucket {
    double _field1;
    long long _field2;
    struct _flags {
        unsigned int equalRowSizes:1;
        unsigned int reserved:31;
    } _field3;
};

struct __NSRowHeightBucketLocation {
    double _field1;
    long long _field2;
    long long _field3;
};

struct __NSToolbarMetrics {
    struct __NSToolbarLayoutMetrics {
        double _field1;
        double _field2;
        double _field3;
        double _field4;
        double _field5;
    } _field1;
    struct __NSToolbarItemLayoutMetrics {
        double _field1;
        double _field2;
        double _field3;
        double _field4;
        double _field5;
        double _field6;
        double _field7;
        double _field8;
        double _field9;
        double _field10;
        double _field11;
        double _field12;
        double _field13;
        double _field14;
        double _field15;
    } _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct timespec {
    long long _field1;
    long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    SEL _field2;
    SEL _field3;
    SEL _field4;
} CDStruct_4fdc8b6f;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    id _field4;
} CDStruct_c851af33;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    unsigned long long _field4;
} CDStruct_9d861a21;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    long long _field4;
    long long _field5;
} CDStruct_9c3019a5;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
} CDStruct_f8f0024c;

typedef struct {
    id _field1;
    SEL _field2;
} CDStruct_b2dc443c;

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    NSData *stream;
    char *currentPtr;
    char *endPtr;
} CDStruct_d87b8232;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
} CDStruct_19b88e92;

typedef struct {
    unsigned int _field1;
    int _field2[13];
} CDStruct_d2a7e547;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    char *data;
    int len;
} CDStruct_815caf98;

typedef struct {
    unsigned int reserved:32;
} CDStruct_9fab449c;

typedef struct {
    char _field1;
    id _field2;
    id _field3;
} CDStruct_55e19097;

typedef struct {
    char _field1;
    char _field2;
    double _field3;
} CDStruct_8e9e3288;

typedef struct {
    double minPossiblePosition;
    double minAllowablePosition;
    double maxAllowablePosition;
    double maxPossiblePosition;
    char canCollapseBeforeView;
    char canCollapseAfterView;
} CDStruct_0a28aba5;

typedef struct {
    float _field1;
    int _field2[13];
} CDStruct_31ad8352;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11[2];
    int _field12;
    unsigned int _field13;
    unsigned int :1;
    unsigned int :1;
    unsigned int :30;
    unsigned int _field14;
    unsigned int _field15;
    int _field16[1];
} CDStruct_fb191204;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    long long _field2;
    long long _field3;
    struct _flags {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :12;
    } _field4;
} CDStruct_03e0cfc4;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    double _currentDate;
    double _birthDate;
    double _lastDate;
    struct {
        unsigned int _skipped:1;
        unsigned int _reserved:31;
    } _flags;
} CDStruct_d41e72e8;

typedef struct {
    struct CGSize _field1;
    struct CGSize _field2;
    struct CGSize _field3;
    unsigned long long _field4;
    unsigned long long _field5;
} CDStruct_22276b4c;

typedef struct {
    NSDictionary *_field1;
    NSFont *_field2;
    long long _field3;
    long long _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    struct CGRect _field9;
    struct {
        unsigned int _isAttachmentRun:1;
        unsigned int _hasPositionalStake:1;
        unsigned int _isDefaultFace:1;
        unsigned int _hasCombiningMarks:1;
        unsigned int _isScreenFont:1;
        unsigned int _hasTrackingAttribute:1;
        unsigned int _reserved:26;
    } _field10;
} CDStruct_1400a419;

typedef struct {
    CDStruct_183601bc *_field1;
    struct _NSRange _field2;
    struct _NSRange _field3;
    float _field4;
    float _field5;
    void *_field6;
    void *_field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    struct CGRect _field14;
    struct CGRect _field15;
    struct _NSRange _field16;
    NSTextBlock *_field17;
    double _field18;
    long long _field19;
    struct {
        unsigned int _currentLevel:4;
        unsigned int _usesFontLeading:1;
        unsigned int _performBidi:1;
        unsigned int _forceOrigFontBaseline:1;
        unsigned int _textAlignment:4;
        unsigned int _lineBreakMode:4;
        unsigned int _hasStrongRight:1;
        unsigned int _hasComplexScript:1;
        unsigned int _shouldInvalidateGlyphs:1;
        unsigned int _isGlyphIndexIdentity:1;
        unsigned int _writingDirection:2;
        unsigned int _reserved:11;
    } _field20;
    void *_field21[0];
} CDStruct_e7e3bfe6;

typedef struct {
    unsigned int :4;
    unsigned int :1;
    unsigned int :24;
    union {
        char *_field1;
        CDStruct_183601bc *_field2;
        struct __CFDictionary *_field3;
    } _field1;
} CDStruct_d48118a8;

typedef struct {
    long long _field1;
    id _field2;
    id _field3;
    struct CGRect _field4;
    double _field5;
    char _field6;
    char _field7;
} CDStruct_602775a4;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    short _field3;
    int _field4;
    unsigned char _field5;
    char _field6;
    unsigned char _field7;
    unsigned char _field8;
    short _field9;
    short _field10;
    union {
        struct _CGSTabletPointData _field1;
        struct _CGSTabletProximityData _field2;
    } _field11;
    unsigned int :1;
    unsigned int :31;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
} CDStruct_e29a92ac;

#pragma mark Typedef'd Unions

typedef union {
    struct {
        double _lineSpacing;
        double _paraSpacingBefore;
        double _paraSpacingAfter;
        long long _startingGlyphIndex;
    } _field1;
    struct {
        struct CGRect _lineFragmentUsedRect;
    } _field2;
} CDUnion_9d5d46db;

#pragma mark -

/*
 * File: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 1038.0.0, Compatibility version: 45.0.0
 *
 *       Objective-C Garbage Collection: Supported
 */

@protocol NSAnimatablePropertyContainer
+ (id)defaultAnimationForKey:(id)arg1;
- (id)animator;
- (id)animations;
- (void)setAnimations:(id)arg1;
- (id)animationForKey:(id)arg1;
@end

@protocol NSAnimationDelegate <NSObject>

@optional
- (BOOL)animationShouldStart:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (float)animation:(id)arg1 valueForProgress:(float)arg2;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
@end

@protocol NSBrowserDelegate <NSObject>

@optional
- (long long)browser:(id)arg1 numberOfRowsInColumn:(long long)arg2;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (double)browser:(id)arg1 heightOfRow:(long long)arg2 inColumn:(long long)arg3;
- (id)rootItemForBrowser:(id)arg1;
- (void)browser:(id)arg1 setObjectValue:(id)arg2 forItem:(id)arg3;
- (BOOL)browser:(id)arg1 shouldEditItem:(id)arg2;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (id)browser:(id)arg1 titleOfColumn:(long long)arg2;
- (BOOL)browser:(id)arg1 selectCellWithString:(id)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 selectRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 isColumnValid:(long long)arg2;
- (void)browserWillScroll:(id)arg1;
- (void)browserDidScroll:(id)arg1;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (BOOL)browser:(id)arg1 shouldShowCellExpansionForRow:(long long)arg2 column:(long long)arg3;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (id)browser:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3 inColumn:(long long)arg4;
- (BOOL)browser:(id)arg1 canDragRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4;
- (id)browser:(id)arg1 draggingImageForRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 withEvent:(id)arg4 offset:(struct CGPoint *)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (id)browser:(id)arg1 typeSelectStringForRow:(long long)arg2 inColumn:(long long)arg3;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (long long)browser:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(id)arg5;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
@end

@protocol NSCellProtocol <NSObject>
@end

@protocol NSChangeSpelling
- (void)changeSpelling:(id)arg1;
@end

@protocol NSCoding
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@protocol NSColorPickingCustom <NSColorPickingDefault>
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (id)provideNewView:(BOOL)arg1;
- (void)setColor:(id)arg1;
@end

@protocol NSColorPickingDefault
- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (id)provideNewButtonImage;
- (void)insertNewButtonImage:(id)arg1 in:(id)arg2;
- (void)viewSizeChanged:(id)arg1;
- (void)alphaControlAddedOrRemoved:(id)arg1;
- (void)attachColorList:(id)arg1;
- (void)detachColorList:(id)arg1;
- (void)setMode:(long long)arg1;
- (id)buttonToolTip;
- (struct CGSize)minContentSize;
@end

@protocol NSComboBoxDataSource <NSObject>

@optional
- (long long)numberOfItemsInComboBox:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBox:(id)arg1 completedString:(id)arg2;
@end

@protocol NSComboBoxDelegate <NSTextFieldDelegate>

@optional
- (void)comboBoxWillPopUp:(id)arg1;
- (void)comboBoxWillDismiss:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (void)comboBoxSelectionIsChanging:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDefinitionExternalModule
- (void)showDefinitionForString:(id)arg1 range:(struct _NSRange)arg2 options:(id)arg3 originProvider:(void *)arg4 inView:(id)arg5;
- (void)showDefinitionByHotKey;
@end

@protocol NSDeserializerStream
- (int)readInt;
- (unsigned long long)readAlignedDataSize;
- (void)readData:(void *)arg1 length:(unsigned long long)arg2;
- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
@end

@protocol NSDraggingInfo
- (id)draggingDestinationWindow;
- (unsigned long long)draggingSourceOperationMask;
- (struct CGPoint)draggingLocation;
- (struct CGPoint)draggedImageLocation;
- (id)draggedImage;
- (id)draggingPasteboard;
- (id)draggingSource;
- (long long)draggingSequenceNumber;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
@end

@protocol NSDraggingInfoPrivate
- (unsigned long long)_lastDragDestinationOperation;
@end

@protocol NSGlyphStorage
- (void)insertGlyphs:(const unsigned int *)arg1 length:(unsigned long long)arg2 forStartingGlyphAtIndex:(unsigned long long)arg3 characterIndex:(unsigned long long)arg4;
- (void)setIntAttribute:(long long)arg1 value:(long long)arg2 forGlyphAtIndex:(unsigned long long)arg3;
- (id)attributedString;
- (unsigned long long)layoutOptions;
@end

@protocol NSIconViewDelegate <NSMatrixDelegate>
- (long long)numberOfItemsInIconView:(id)arg1;
- (void)iconView:(id)arg1 loadCell:(id)arg2 forIndex:(long long)arg3;

@optional
- (id)iconView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)iconView:(id)arg1 writeIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)iconView:(id)arg1 validateDrop:(id)arg2 proposedIndex:(long long)arg3;
- (BOOL)iconView:(id)arg1 acceptDrop:(id)arg2 atIndex:(long long)arg3;
- (long long)iconView:(id)arg1 nextTypeSelectMatchFromIndex:(long long)arg2 toIndex:(long long)arg3 forString:(id)arg4;
- (id)iconView:(id)arg1 typeSelectStringForIndex:(long long)arg2;
- (BOOL)iconView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
@end

@protocol NSIgnoreMisspelledWords
- (void)ignoreSpelling:(id)arg1;
@end

@protocol NSInputServerMouseTracker
- (BOOL)mouseDownOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;
- (BOOL)mouseDraggedOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;
- (void)mouseUpOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;
@end

@protocol NSInputServiceProvider
- (void)insertText:(id)arg1 client:(id)arg2;
- (void)doCommandBySelector:(SEL)arg1 client:(id)arg2;
- (void)markedTextAbandoned:(id)arg1;
- (void)markedTextSelectionChanged:(struct _NSRange)arg1 client:(id)arg2;
- (void)terminate:(id)arg1;
- (BOOL)canBeDisabled;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)wantsToDelayTextChangeNotifications;
- (void)inputClientBecomeActive:(id)arg1;
- (void)inputClientResignActive:(id)arg1;
- (void)inputClientEnabled:(id)arg1;
- (void)inputClientDisabled:(id)arg1;
- (void)activeConversationWillChange:(id)arg1 fromOldConversation:(long long)arg2;
- (void)activeConversationChanged:(id)arg1 toNewConversation:(long long)arg2;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (void)layoutManagerDidInvalidateLayout:(id)arg1;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(BOOL)arg3;
- (id)layoutManager:(id)arg1 shouldUseTemporaryAttributes:(id)arg2 forDrawingToScreen:(BOOL)arg3 atCharacterIndex:(unsigned long long)arg4 effectiveRange:(struct _NSRange *)arg5;
@end

@protocol NSLocking
- (void)lock;
- (void)unlock;
@end

@protocol NSMatrixDelegate <NSControlTextEditingDelegate>
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (void)menuNeedsUpdate:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuWillOpen:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
@end

@protocol NSMenuItem <NSObject, NSCopying, NSCoding, NSValidatedUserInterfaceItem>
+ (void)setUsesUserKeyEquivalents:(BOOL)arg1;
+ (BOOL)usesUserKeyEquivalents;
+ (id)separatorItem;
- (id)initWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (void)setMenu:(id)arg1;
- (id)menu;
- (BOOL)hasSubmenu;
- (void)setSubmenu:(id)arg1;
- (id)submenu;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setAttributedTitle:(id)arg1;
- (id)attributedTitle;
- (BOOL)isSeparatorItem;
- (void)setKeyEquivalent:(id)arg1;
- (id)keyEquivalent;
- (void)setKeyEquivalentModifierMask:(unsigned long long)arg1;
- (unsigned long long)keyEquivalentModifierMask;
- (id)userKeyEquivalent;
- (unsigned long long)userKeyEquivalentModifierMask;
- (void)setMnemonicLocation:(unsigned long long)arg1;
- (unsigned long long)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setState:(long long)arg1;
- (long long)state;
- (void)setOnStateImage:(id)arg1;
- (id)onStateImage;
- (void)setOffStateImage:(id)arg1;
- (id)offStateImage;
- (void)setMixedStateImage:(id)arg1;
- (id)mixedStateImage;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setAlternate:(BOOL)arg1;
- (BOOL)isAlternate;
- (void)setIndentationLevel:(long long)arg1;
- (long long)indentationLevel;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTag:(long long)arg1;
- (long long)tag;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setToolTip:(id)arg1;
- (id)toolTip;
@end

@protocol NSMenuTrackingInfo <NSObject>
@property(readonly) struct CGRect targetedItemFrame;
@property(readonly) NSMenuItem *targetedItem;
@property(readonly) NSMenuItem *selectedItem;
@property(readonly) NSMenu *menu;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNavOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (void)outlineView:(id)arg1 didClickOnDisabledCell:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 performKeyEquivalent:(id)arg2;
- (int)navOutlineView:(id)arg1 displayStateForItem:(id)arg2;
- (long long)navOutlineView:(id)arg1 labelColorIndexForItem:(id)arg2;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)description;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (void)panelSelectionDidChange:(id)arg1;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 itemForPersistentObject:(id)arg2;
- (id)outlineView:(id)arg1 persistentObjectForItem:(id)arg2;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (id)outlineView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedItems:(id)arg3;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)selectionShouldChangeInOutlineView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didDragTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)outlineView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (double)outlineView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
@end

@protocol NSPasteboardItemDataProvider <NSObject>
- (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3;

@optional
- (void)pasteboardFinishedWithDataProvider:(id)arg1;
@end

@protocol NSPasteboardReading <NSObject>
+ (id)readableTypesForPasteboard:(id)arg1;

@optional
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
@end

@protocol NSPasteboardWriting <NSObject>
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;

@optional
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
@end

@protocol NSPathControlDelegate <NSObject>

@optional
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (void)pathControl:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (void)pathControl:(id)arg1 willPopUpMenu:(id)arg2;
@end

@protocol NSPredicateVisitor
- (void)visitPredicate:(id)arg1;
- (void)visitPredicateExpression:(id)arg1;
- (void)visitPredicateOperator:(id)arg1;
@end

@protocol NSPreferencesModule
- (id)viewForPreferenceNamed:(id)arg1;
- (id)imageForPreferenceNamed:(id)arg1;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (void)didChange;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
@end

@protocol NSPrintGraphicsContextAdvancing
- (void)beginDocumentWithTitle:(id)arg1;
- (void)beginPageWithBounds:(struct CGRect)arg1;
- (void)endPage;
- (void)endDocument;
@end

@protocol NSPrintPanelAccessorizing
- (id)localizedSummaryItems;

@optional
- (id)keyPathsForValuesAffectingPreview;
@end

@protocol NSRuleEditorDelegate <NSObject>
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;

@optional
- (id)ruleEditor:(id)arg1 predicatePartsForCriterion:(id)arg2 withDisplayValue:(id)arg3 inRow:(long long)arg4;
- (void)ruleEditorRowsDidChange:(id)arg1;
@end

@protocol NSSerializerStream
- (unsigned long long)writeInt:(unsigned long long)arg1;
- (unsigned long long)writeAlignedDataSize:(unsigned long long)arg1;
- (unsigned long long)writeData:(const void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)writeRoomForInt:(int *)arg1;
- (void)writeDelayedInt:(unsigned long long)arg1 for:(int)arg2;
- (void)copySerializationInto:(void *)arg1;
@end

@protocol NSServiceListenerProto
- (id)_doInvokeServiceIn:(id)arg1 msg:(id)arg2 pb:(id)arg3 userData:(id)arg4 error:(id *)arg5 unhide:(BOOL)arg6;
@end

@protocol NSServiceMasterProto
- (id)objectForServicePath:(id)arg1;
@end

@protocol NSSliderViewRequiredMethods
+ (id)genericColorSpace;
- (id)provideNewSubview:(id)arg1;
- (void)viewSizeChanged:(id)arg1;
- (void)setColor:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;
- (void)adjustControls:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
@end

@protocol NSSpellServerPrivateNewDO
- (struct _NSRange)_findMisspelledWordInString:(in id)arg1 language:(in bycopy id)arg2 learnedDictionaries:(in bycopy id)arg3 wordCount:(out long long *)arg4 countOnly:(in char)arg5;
- (struct _NSRange)_checkGrammarInString:(in id)arg1 language:(in bycopy id)arg2 details:(out bycopy id *)arg3;
- (bycopy id)_checkString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_dataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_dataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthographyData:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_unkeyedDataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_unkeyedDataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthographyData:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_suggestGuessesForWord:(in bycopy id)arg1 inLanguage:(in bycopy id)arg2;
- (bycopy id)_suggestCompletionsForPartialWordRange:(struct _NSRange)arg1 inString:(in bycopy id)arg2 language:(in bycopy id)arg3;
- (BOOL)_learnWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (BOOL)_forgetWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (BOOL)_isWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (bycopy id)_wordsInDictionary:(in bycopy id)arg1;
- (oneway void)_setWords:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (oneway void)_invalidateDictionary:(in bycopy id)arg1 newTime:(in long long)arg2;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewSelectionIsChanging:(id)arg1;
@end

@protocol NSTextAttachmentCell <NSObject>
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)wantsToTrackMouse;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGSize)cellSize;
- (struct CGPoint)cellBaselineOffset;
- (void)setAttachment:(id)arg1;
- (id)attachment;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (BOOL)wantsToTrackMouseForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4 untilMouseUp:(BOOL)arg5;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)textShouldEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>
@end

@protocol NSTextInput
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)validAttributesForMarkedText;
@end

@protocol NSTextInputClient
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)unmarkText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)validAttributesForMarkedText;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;

@optional
- (id)attributedString;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1;
- (long long)windowLevel;
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4 atIndex:(unsigned long long)arg5;
- (id)textView:(id)arg1 writablePasteboardTypesForCell:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)textView:(id)arg1 writeCell:(id)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(id)arg4 type:(id)arg5;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (id)textView:(id)arg1 willChangeSelectionFromCharacterRanges:(id)arg2 toCharacterRanges:(id)arg3;
- (BOOL)textView:(id)arg1 shouldChangeTextInRanges:(id)arg2 replacementStrings:(id)arg3;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChangeTypingAttributes:(id)arg1;
- (id)textView:(id)arg1 willDisplayToolTip:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (long long)textView:(id)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
- (id)textView:(id)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(id)arg3 types:(unsigned long long *)arg4;
- (id)textView:(id)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 results:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2;
- (void)textView:(id)arg1 clickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 doubleClickedOnCell:(id)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(id)arg1 draggedCell:(id)arg2 inRect:(struct CGRect)arg3 event:(id)arg4;
- (id)undoManagerForTextView:(id)arg1;
@end

@protocol NSToolbarDelegate <NSObject>

@optional
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (void)toolbarWillAddItem:(id)arg1;
- (void)toolbarDidRemoveItem:(id)arg1;
@end

@protocol NSUserInterfaceItemIdentification
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@protocol NSValidatedUserInterfaceItem
- (SEL)action;
- (long long)tag;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (BOOL)windowShouldClose:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (id)windowWillReturnUndoManager:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (void)windowDidResize:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parserDidStartDocument:(id)arg1;
- (void)parserDidEndDocument:(id)arg1;
- (void)parser:(id)arg1 foundNotationDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 foundUnparsedEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 notationName:(id)arg5;
- (void)parser:(id)arg1 foundAttributeDeclarationWithName:(id)arg2 forElement:(id)arg3 type:(id)arg4 defaultValue:(id)arg5;
- (void)parser:(id)arg1 foundElementDeclarationWithName:(id)arg2 model:(id)arg3;
- (void)parser:(id)arg1 foundInternalEntityDeclarationWithName:(id)arg2 value:(id)arg3;
- (void)parser:(id)arg1 foundExternalEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 foundProcessingInstructionWithTarget:(id)arg2 data:(id)arg3;
- (void)parser:(id)arg1 foundComment:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (id)parser:(id)arg1 resolveExternalEntityName:(id)arg2 systemID:(id)arg3;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewViewDelegate <NSObject>

@optional
- (void)previewView:(id)arg1 willLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didLoadPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didShowPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 didChangeDisplayStateForPreviewItem:(id)arg2;
- (void)previewView:(id)arg1 timedOutLoadingPreviewItem:(id)arg2;
- (BOOL)previewView:(id)arg1 shouldPreviewItem:(id)arg2;
- (id)previewView:(id)arg1 customViewForPreviewItem:(id)arg2;
- (unsigned long long)previewView:(id)arg1 validateDrop:(id)arg2 onPreviewItem:(id)arg3;
- (BOOL)previewView:(id)arg1 acceptDrop:(id)arg2 onPreviewItem:(id)arg3;
- (id)previewView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forPreviewItem:(id)arg3;
- (BOOL)previewView:(id)arg1 writePreviewItem:(id)arg2 toPasteboard:(id)arg3;
@end

@protocol _NSActionBinderPlugin <_NSEditorBinderPlugin>
- (BOOL)targetAndArgumentsAcceptableForPerformAction;
- (BOOL)invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3 object:(id)arg4;
@end

@protocol _NSBinderPlugin <NSObject>
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)_deprecatedBindings;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (BOOL)handleObservingRefresh:(id)arg1;
- (BOOL)observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(BOOL)arg2 object:(id)arg3;
- (void)connectionWasEstablished:(id)arg1;
- (void)connectionWasBroken:(id)arg1;
- (Class)defaultPlaceholderLookupClassForBinding:(id)arg1 object:(id)arg2;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (BOOL)shouldUseInvalidationForObject:(id)arg1;
@end

@protocol _NSBindingTree
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndexPath:(id)arg2;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndexPath:(id)arg3;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 ofObjectAtIndexPath:(id)arg4;
- (BOOL)_validateValue:(id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndexPath:(id)arg3 error:(id *)arg4;
- (id)objectAtIndexPath:(id)arg1;
- (id)nodeAtIndexPath:(id)arg1;
- (unsigned long long)countForIndexPath:(id)arg1;
- (BOOL)isExpandableAtArrangedObjectIndexPath:(id)arg1;
@end

@protocol _NSDisplayFontBinderPlugin <_NSBinderPlugin>
- (id)fontInvalidationCapableObjectForObject:(id)arg1;
@end

@protocol _NSEditorBinderPlugin <_NSBinderPlugin>
- (BOOL)prefersEnabledOverEditable:(id)arg1;
- (BOOL)conditionalBehaviorOffByDefault:(id)arg1;
@end

@protocol _NSMultipleSelectionBinderPlugin <_NSSelectionBinderPlugin>
@end

@protocol _NSPICTConverting
- (bycopy out id)renderedBitmapInfoFromPICTDataRecord:(bycopy in id)arg1;
- (bycopy out id)PICTDataRecordFromImageDataRecord:(bycopy in id)arg1;
- (bycopy out id)imageDataRecordFromPICTDataRecord:(bycopy in id)arg1;
@end

@protocol _NSSelectionBinderPlugin <NSObject, _NSValueBinderPlugin>
- (unsigned long long)allowedContentBindingMask;
- (BOOL)canPopulateWithPlaceholders;
- (BOOL)canMixDynamicAndStaticContent;
- (void)populateObject:(id)arg1 withContent:(id)arg2 valueKey:(id)arg3 objectKey:(id)arg4 insertsNullPlaceholder:(BOOL)arg5;
- (BOOL)canIgnorePopulatingObject:(id)arg1;
- (void)storeModeWhenIgnoringObjectPopulation:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)shouldRefreshDisplayAfterSelectionMechanismWasDismissed:(id)arg1;
@end

@protocol _NSServiceAction <NSObject>
- (void)resetToDefaultKeyboardShortcut;
- (void)resetToDefaultAvailability;
@property(readonly, nonatomic) BOOL isSpellChecker;
@property(copy, nonatomic) NSString *keyEquivalent;
@property(nonatomic) BOOL isAvailableInServicesMenu;
@property(nonatomic) BOOL isAvailableInContextMenu;
@property(readonly, nonatomic) BOOL isWorkflow;
@property(readonly, nonatomic) NSString *localizedServiceDescription;
@property(readonly, nonatomic) NSString *bundlePath;
@property(readonly, nonatomic) NSString *localizedCategoryTitle;
@property(readonly, nonatomic) NSString *categoryTitle;
@property(copy, nonatomic) NSKeyboardShortcut *keyboardShortcut;
@property(readonly, nonatomic) NSKeyboardShortcut *defaultKeyboardShortcut;
@property(readonly, nonatomic) NSString *localizedTitle;
@property(readonly, nonatomic) NSString *title;
@end

@protocol _NSTextColorBinderPlugin <_NSBinderPlugin>
- (id)textColorInvalidationCapableObjectForObject:(id)arg1;
@end

@protocol _NSValueBinderPlugin <_NSEditorBinderPlugin>
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)arg1;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (BOOL)isBooleanValueBindingForObject:(id)arg1;
- (Class)valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (BOOL)needsDelegate;
- (struct __NSKeyValueCodingControllerModeType)editedMode:(id)arg1 forEditingOrAction:(BOOL)arg2;
- (void)editingHasBegun:(id)arg1;
- (void)editingHasEnded:(id)arg1;
- (void)editingWasAborted:(id)arg1;
- (void)_actionHasBegun:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_actionHasBegun:(id)arg1 atIndexPath:(id)arg2;
- (void)actionHasBegun:(id)arg1 sender:(id)arg2;
- (void)actionHasEnded:(id)arg1 sender:(id)arg2;
- (id)editingBinderForControl:(id)arg1;
- (BOOL)shouldIgnoreAction:(id)arg1;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)formattedValueInObject:(id)arg1 errorEncountered:(char *)arg2 error:(id *)arg3;
- (id)shownValueInObject:(id)arg1;
- (id)binderReferenceObjectValue;
- (id)formatterOfObject:(id)arg1;
- (BOOL)isObjectTableColumnDataCell:(id)arg1;
- (BOOL)shouldProvideSortDescriptor:(id)arg1 optionsAdvertisingOnly:(BOOL)arg2;
- (id)objectValueInvalidationCapableObjectForObject:(id)arg1;
- (void)invalidateObjectValueInObject:(id)arg1;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)applyObjectValue:(id *)arg1 forBinding:(id)arg2 operation:(int *)arg3 needToRunAlert:(char *)arg4 error:(id *)arg5;
@end

@interface NSSingleLineTypesetter : NSATSTypesetter <NSGlyphStorage>
{
    double _lineWidth;
    struct _NSRange _currentBufferRange;
    unsigned int *_glyphBuffer;
    unsigned long long *_inscriptionBuffer;
    char *_elasticBuffer;
    struct {
        unsigned int _usesScreenFonts:1;
        unsigned int _reserved:31;
    } _slFlags;
}

+ (id)singleLineTypesetter;
+ (void)initialize;
+ (_Bool)_validateAttributes:(id)arg1;
- (void)done;
- (BOOL)_usesScreenFonts;
- (id)init;
- (id)createRenderingContextForCharacterRange:(struct _NSRange)arg1 typesetterBehavior:(long long)arg2 usesScreenFonts:(BOOL)arg3 hasStrongRight:(BOOL)arg4 maximumWidth:(double)arg5;
- (void)insertGlyphs:(const unsigned int *)arg1 length:(unsigned long long)arg2 forStartingGlyphAtIndex:(unsigned long long)arg3 characterIndex:(unsigned long long)arg4;
- (void)setIntAttribute:(long long)arg1 value:(long long)arg2 forGlyphAtIndex:(unsigned long long)arg3;
- (unsigned long long)layoutOptions;
- (id)attributedString;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(char *)arg5 bidiLevels:(char *)arg6;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (id)substituteFontForFont:(id)arg1;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (void)substituteGlyphsInRange:(struct _NSRange)arg1 withGlyphs:(unsigned int *)arg2;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)setNotShownAttribute:(BOOL)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setDrawsOutsideLineFragment:(BOOL)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setBidiLevels:(const char *)arg1 forGlyphRange:(struct _NSRange)arg2;

@end

@interface NSLineFragmentRenderingContext : NSObject
{
    void *_runs;
    long long _numRuns;
    unsigned short *_glyphs;
    struct CGSize *_advancements;
    double _leftSideDelta;
    double _lineWidth;
    double _leftControlWidth;
    double _rightControlWidth;
    double _elasticWidth;
    struct CGRect _imageBounds;
    struct {
        unsigned int _isRTL:1;
        unsigned int _vAdvance:1;
        unsigned int _flipped:1;
        unsigned int _reserved:29;
    } _flags;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)release;
- (id)initWithRuns:(struct __CFArray *)arg1 glyphOrigin:(double)arg2 lineFragmentWidth:(double)arg3 elasticWidth:(double)arg4 usesScreenFonts:(BOOL)arg5 isRTL:(BOOL)arg6;
- (void)dealloc;
- (void)finalize;
- (void)drawAtPoint:(struct CGPoint)arg1 inContext:(id)arg2;
- (struct CGSize)sizeWithBehavior:(long long)arg1 usesFontLeading:(BOOL)arg2 baselineDelta:(double *)arg3;
- (void)getMaximumAscender:(double *)arg1 minimumDescender:(double *)arg2;
- (double)lineFragmentWidth;
- (double)elasticWidth;
- (BOOL)isRTL;
- (struct CGRect)imageBounds;

@end

@interface NSATSLineFragment : NSObject
{
    void *_line;
    NSATSTypesetter *_typesetter;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    double _minPosition;
    double _maxPosition;
    long long _elasticCharIndex;
    double _elasticRangeWidth;
    unsigned int _hyphenGlyph;
    double _hyphenGlyphWidth;
    struct {
        unsigned int _directionState:2;
        unsigned int _drawsOutside:1;
        unsigned int _isLineArray:1;
        unsigned int _reserved:28;
    } _flags;
}

- (void)_flushCachedObjects;
- (void)_invalidate;
- (id)_copyRenderingContextWithGlyphOrigin:(double)arg1;
- (long long)_charIndexToBreakLineByWordWrappingAtIndex:(long long)arg1 lineFragmentWidth:(double)arg2 hyphenate:(char *)arg3;
- (void)dealloc;
- (void)finalize;
- (id)initWithTypesetter:(id)arg1;
- (void)layoutForStartingGlyphAtIndex:(unsigned long long)arg1 characterIndex:(unsigned long long)arg2 minPosition:(double)arg3 maxPosition:(double)arg4 lineFragmentRect:(struct CGRect)arg5;
- (struct _NSRange)glyphRange;
- (struct _NSRange)characterRange;
- (double)lineWidthForType:(int)arg1;
- (void)getTypographicLineHeight:(double *)arg1 baselineOffset:(double *)arg2 leading:(double *)arg3;
- (void)saveMorphedGlyphs:(struct _NSRange *)arg1;
- (void)saveWithGlyphOrigin:(double)arg1;
- (void)justifyWithFactor:(double)arg1;
- (BOOL)hasElasticRange;

@end

@interface NSATSGlyphStorage : CTGlyphStorageInterface
{
    struct __CTGlyphStorage *_glyphStorage;
    struct __CFArray *_masterRuns;
    NSATSTypesetter *_typesetter;
    CDStruct_1400a419 *_runs;
    long long _numRuns;
    long long _runBufferSize;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    long long _bufferSize;
    NSATSGlyphStorage *_parent;
    struct __CFSet *_children;
    long long _paraEndElasticCharIndex;
    double _paraEndElasticCharWidth;
    NSString *_textString;
    struct {
        long long _field1;
        struct {
            unsigned short glyph;
            struct CGSize advance;
            unsigned int prop;
            long long stringIndex;
            long long absorbedCount;
        } _field2[0];
    } *_stack;
    CDStruct_1400a419 *_lastElasticRun;
    long long _lastElasticRunLocation;
    long long _totalAbsorbedCount;
    struct {
        unsigned int _hasNonNominalGlyph:1;
        unsigned int _hasPositionalStake:1;
        unsigned int _hasBidiRun:1;
        unsigned int _isEllipsisStorage:1;
        unsigned int _hasNonNominalStringIndexes:1;
        unsigned int _isUnordered:1;
        unsigned int _hasTotalAbsorbedCount:1;
        unsigned int _reserved:25;
    } _gFlags;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)release;
- (void)_flushCachedObjects;
- (void)_invalidate;
- (id)initWithTypesetter:(id)arg1;
- (id)typesetter;
- (void)setGlyphRange:(struct _NSRange)arg1 characterRange:(struct _NSRange)arg2;
- (struct __CTTypesetter *)createCTTypesetter;
- (id)childGlyphStorageWithCharacterRange:(struct _NSRange)arg1;
- (struct __CTRun *)_createEllipsisRunWithStringRange:(CDStruct_627e0f85)arg1 attributes:(struct __CFDictionary *)arg2;
- (_Bool)_resolvePositionalStakeGlyphsForLineFragment:(struct __CTLine *)arg1 lineFragmentRect:(struct CGRect)arg2 minPosition:(double)arg3 maxPosition:(double)arg4 maxLineFragmentWidth:(double)arg5 breakHint:(long long *)arg6;
- (struct _NSRange)_collectElasticRangeSurroundingCharacterAtIndex:(long long)arg1 minimumCharacterIndex:(long long)arg2;
- (double)_widthForStringRange:(struct _NSRange)arg1;
- (const CDStruct_1400a419 *)_attributeRunForCharacterAtIndex:(long long)arg1;
- (void)dealloc;
- (void)finalize;
- (struct __CTGlyphStorage *)createCopy:(CDStruct_627e0f85)arg1;
- (void)getCustomAdvance:(struct CGSize *)arg1 forIndex:(long long)arg2;
- (void)setGlyphID:(unsigned short)arg1 forIndex:(long long)arg2;
- (void)setAdvance:(struct CGSize)arg1 forIndex:(long long)arg2;
- (void)setProps:(unsigned int)arg1 forIndex:(long long)arg2;
- (void)setAbsorbedCount:(long long)arg1 forIndex:(long long)arg2;
- (void)setStringIndex:(long long)arg1 forIndex:(long long)arg2;
- (void)swapGlyph:(long long)arg1 withIndex:(long long)arg2;
- (void)moveGlyphsTo:(long long)arg1 from:(CDStruct_627e0f85)arg2;
- (void)insertGlyphs:(CDStruct_627e0f85)arg1;
- (void)initGlyphStack:(long long)arg1;
- (void)pushGlyph:(long long)arg1;
- (void)popGlyph:(long long)arg1;
- (void)disposeGlyphStack;

@end

@interface __NSATSStringSegment : NSString
{
    struct __CFString *_originalString;
    long long _originalStringLength;
    CDStruct_627e0f85 _range;
    unsigned short *_characters;
    unsigned short _buffer[128];
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)release;
- (void)_setOriginalString:(id)arg1 range:(struct _NSRange)arg2;
- (id)initWithOriginalString:(id)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (const unsigned short *)_fastCharacterContents;

@end

@interface NSATSTypesetter : NSTypesetter
{
    NSAttributedString *attributedString;
    struct _NSRange paragraphGlyphRange;
    struct _NSRange paragraphSeparatorGlyphRange;
    double lineFragmentPadding;
    NSLayoutManager *layoutManager;
    NSArray *textContainers;
    NSTextContainer *currentTextContainer;
    unsigned long long currentTextContainerIndex;
    struct CGSize currentTextContainerSize;
    NSParagraphStyle *currentParagraphStyle;
    void *_atsReserved[8];
    id _private;
}

+ (void)initialize;
+ (id)sharedInstance;
+ (id)sharedTypesetter;
+ (BOOL)_allowsScreenFontKerning;
- (void)release;
- (void)dealloc;
- (void)_doBidiProcessing;
- (long long)_baseWritingDirection;
- (const char *)_bidiLevels;
- (struct __CTTypesetter *)_ctTypesetter;
- (id)_getATSTypesetterGuts;
- (BOOL)_baselineRenderingMode;
- (void)_setBaselineRenderingMode:(BOOL)arg1;
- (void)_setForceTailTruncation:(BOOL)arg1;
- (BOOL)_layoutLineFragmentStartingWithGlyphAtIndex:(unsigned long long *)arg1 characterIndex:(unsigned long long *)arg2 atPoint:(struct CGPoint *)arg3 renderingContext:(id *)arg4;
- (void)_flushCachedObjects;
- (BOOL)_usesScreenFonts;
- (unsigned long long)_sweepDirectionForGlyphAtIndex:(long long)arg1;
- (void)beginParagraph;
- (void)endParagraph;
- (void)beginLineWithGlyphAtIndex:(unsigned long long)arg1;
- (void)endLineWithGlyphRange:(struct _NSRange)arg1;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)layoutParagraphAtPoint:(struct CGPoint *)arg1;
- (float)hyphenationFactorForGlyphAtIndex:(unsigned long long)arg1;
- (unsigned int)hyphenCharacterForGlyphAtIndex:(unsigned long long)arg1;
- (void)layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 nextGlyphIndex:(unsigned long long *)arg4;
- (struct _NSRange)layoutCharactersInRange:(struct _NSRange)arg1 forLayoutManager:(id)arg2 maximumNumberOfLineFragments:(unsigned long long)arg3;
- (double)baselineOffsetInLayoutManager:(id)arg1 glyphIndex:(unsigned long long)arg2;
- (CDStruct_e7e3bfe6 *)_allocateAuxData;
- (CDUnion_9d5d46db *)_lineFragmentRectForProposedRectArgs;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 remainingRect:(struct CGRect *)arg2;

@end

@interface _NSATSTypesetterGuts : NSObject
{
    NSATSLineFragment *_lineFragment;
    NSATSGlyphStorage *_glyphStorage;
    unsigned long long _lastGlyphIndex;
    unsigned long long _lastContainerIndex;
    CDStruct_e7e3bfe6 *_typesetterAuxiliary;
    CDUnion_9d5d46db *_lineFragmentRectArgs;
    char *_bidiLevels;
    struct {
        unsigned int _isiChatTypesetter:1;
        unsigned int _resToWillSetLineFragmentRect:1;
        unsigned int _resToShouldBreakLineByWordWithCharacterAtIndex:1;
        unsigned int _resToShouldBreakLineByHyphenatingWithCharacterAtIndex:1;
        unsigned int _resToBBoxForControlGlyph:1;
        unsigned int _isBusy:1;
        unsigned int _baselineRendering:1;
        unsigned int _forceTailTruncation:1;
        unsigned int _reserved:24;
    } _flags;
    struct {
        unsigned int _resolvedWritingDirection:2;
        unsigned int _reserved:30;
    } _paragraphState;
    struct __CTTypesetter *_ctTypesetter;
}

- (id)initWithTypesetter:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSATSUStyleObject : NSObject
{
    struct OpaqueATSUStyle *style;
    NSMutableArray *exclusives;
}

- (id)init;
- (id)initWithStyle:(struct OpaqueATSUStyle *)arg1;
- (void)dealloc;
- (void)finalize;
- (struct OpaqueATSUStyle *)style;
- (void)setFeatures:(unsigned short *)arg1 selectors:(unsigned short *)arg2 count:(unsigned long long)arg3;
- (void)setVariations:(unsigned int *)arg1 Values:(int *)arg2 Count:(unsigned long long)arg3;
- (void)addVariationDescriptions:(id)arg1;
- (void)addFeatureDescriptions:(id)arg1;
- (id)description;
- (void)mergeInVariations:(struct OpaqueATSUStyle *)arg1;
- (void)merge:(struct OpaqueATSUStyle *)arg1;
- (void)setAttributes:(unsigned int *)arg1 Values:(void *)arg2 ValueSizes:(unsigned long long *)arg3 Count:(unsigned long long)arg4;
- (void)mergeFontVariationsInto:(id)arg1;
- (void)mergeFontFeaturesInto:(id)arg1;
- (void)mergeAttributesInto:(id)arg1;
- (void)mergeStyleInto:(id)arg1;
- (id)exclusives;
- (void)typeIsNotExclusive:(unsigned short)arg1;
- (BOOL)isTypeNotExclusive:(unsigned short)arg1;
- (id)convertToDictionary;

@end

@interface NSAccessibilityAXUIElementWrapper : NSObject
{
    struct __AXUIElement *_elementRef;
}

- (id)initWithAXUIElementRef:(struct __AXUIElement *)arg1;
- (void)dealloc;
- (struct __AXUIElement *)getAXUIElementRef;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityWindowAttributeValueHelper;
- (id)accessibilityTopLevelUIElementAttributeValueHelper;

@end

@interface NSAccessibilityObjectWrapper : NSObject
{
    void *_val;
}

+ (id)wrapperWithValue:(void *)arg1;
- (id)initWithValue:(void *)arg1;
- (void)dealloc;

@end

@interface NSAccessibilityNotifier : NSObject
{
}

+ (void)handleAppTermination:(id)arg1;

@end

@interface NSAccessibilityIndexedMockUIElement : NSAccessibilityMockUIElement
{
    long long _index;
}

+ (id)elementWithRole:(id)arg1 index:(long long)arg2 parent:(id)arg3;
+ (id)elementWithRole:(id)arg1 subrole:(id)arg2 index:(long long)arg3 parent:(id)arg4;
- (id)initWithRole:(id)arg1 index:(long long)arg2 parent:(id)arg3;
- (id)initWithRole:(id)arg1 subrole:(id)arg2 index:(long long)arg3 parent:(id)arg4;
- (long long)index;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface NSAccessibilityMockUIElement : NSObject
{
    NSString *_role;
    NSString *_subrole;
    id _parent;
}

+ (id)elementWithRole:(id)arg1 subrole:(id)arg2 parent:(id)arg3;
+ (id)elementWithRole:(id)arg1 parent:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)initWithRole:(id)arg1 subrole:(id)arg2 parent:(id)arg3;
- (id)initWithRole:(id)arg1 parent:(id)arg2;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;

@end

@interface _NSAccessibilityOverriddenAttributeUIElementValue : NSObject
{
    NSValue *_value;
}

- (id)initWithUIElementValue:(id)arg1;
- (void)dealloc;
- (id)UIElementValue;

@end

@interface NSAccessibilityReparentingProxy : NSAccessibilityProxy
{
    id _realElement;
    id _fauxParent;
}

+ (id)proxyFor:(id)arg1 fauxParent:(id)arg2;
- (id)initWithElement:(id)arg1 fauxParent:(id)arg2;
- (void)dealloc;
- (id)realElement;
- (id)accessibilityParentAttribute;
- (id)description;

@end

@interface NSAccessibilityProxy : NSObject
{
}

- (id)realElement;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityAttributeNames;
- (id)accessibilityOverriddenAttributes;
- (id)accessibilityFocusedAttribute;
- (id)_proxyParentedChild:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1 forParameter:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)accessibilityFocusRingBoundsForBounds:(struct CGRect)arg1;
- (id)_proxyForUIElement:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;

@end

@interface NSDoubleClickActionBinder : NSActionBinder
{
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)_enumerationBinding;
+ (id)_targetBinding;
+ (id)_enumeratedArgumentBindings:(unsigned long long)arg1;
+ (id)bindingsForObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)_referenceBinding;
- (unsigned long long)_argumentBindingCount;
- (BOOL)_targetBindingBound;
- (BOOL)bindingRunsAlerts:(id)arg1;

@end

@interface NSActionBinder : NSEditorBinder
{
    SEL _selector;
    struct __actionBinderFlags {
        unsigned int _allSeparateArrayArgumentsBoundToIdenticalController:1;
        unsigned int _reservedActionBinder:31;
    } _actionBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)_enumerationBinding;
+ (id)_targetBinding;
+ (id)_enumeratedArgumentBindings:(unsigned long long)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (id)bindingCategory;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (unsigned long long)_argumentBindingCount;
- (void)_connectionWasEstablished;
- (id)availableBindings;
- (BOOL)_targetBindingBound;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)bindingRunsAlerts:(id)arg1;
- (BOOL)selectionSupportsEnabledState;
- (BOOL)canApplyValueTransformer:(id)arg1 toBinding:(id)arg2;
- (void)removeBinding:(id)arg1;
- (id)_referenceBinding;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)setSelector:(SEL)arg1;
- (SEL)selector;
- (void)setAllowsNullArgument:(BOOL)arg1 withBinding:(id)arg2;
- (BOOL)allowsNullArgumentWithBinding:(id)arg1;
- (void)setInvokesSeparatelyWithArrayObjects:(BOOL)arg1 withBinding:(id)arg2;
- (BOOL)invokesSeparatelyWithArrayObjectsWithBinding:(id)arg1;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3;
- (BOOL)_targetAndArgumentsAcceptableForMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)targetAndArgumentsAcceptable;
- (BOOL)targetAndArgumentsAcceptableAtIndex:(unsigned long long)arg1;
- (BOOL)targetAndArgumentsAcceptableAtIndexPath:(id)arg1;
- (void)_executePerformAction;
- (void)_performActionWithCommitEditing:(id)arg1 didCommit:(BOOL)arg2 contextInfo:(id)arg3;
- (BOOL)_performActionWithCommitEditing;
- (void)performAction:(id)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSActionCell : NSCell
{
    long long _tag;
    id _target;
    SEL _action;
    id _controlView;
}

+ (void)initialize;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (long long)tag;
- (void)setTag:(long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setControlView:(id)arg1;
- (id)controlView;

@end

@interface NSAlert : NSObject
{
    NSTextField *_informationField;
    id _first;
    id _second;
    id _third;
    NSArray *_buttons;
    NSPanel *_panel;
    id _messageField;
    id _imageView;
    struct CGSize _minButtonSize;
    double _buttonSpacing;
    double _buttonPadding;
    double _messagePadding;
    double _buttonSpacingMaxX;
    double _buttonSpacingY;
    id _modalDelegate;
    NSWindow *_docWindow;
    SEL _didEndSelector;
    SEL _didDismissSelector;
    NSImage *_unbadgedImage;
    struct CGSize _defaultPanelSize;
    id _helpButton;
    id _delegate;
    unsigned long long _alertStyle;
    id _helpAnchor;
    BOOL _layoutDone;
    BOOL _showsHelp;
    BOOL _showsSuppressionButton;
    BOOL reserved;
    id _suppressionButton;
    id _accessoryView;
}

+ (id)alertWithMessageText:(id)arg1 defaultButton:(id)arg2 alternateButton:(id)arg3 otherButton:(id)arg4 informativeTextWithFormat:(id)arg5;
+ (id)alertWithError:(id)arg1;
+ (id)_dontSaveButtonTitle;
+ (id)_dontShowMessageAgainTitle;
+ (void)stopAllTimersForSpeaking;
- (id)init;
- (void)dealloc;
- (void)setMessageText:(id)arg1;
- (id)messageText;
- (void)setInformativeText:(id)arg1;
- (id)informativeText;
- (void)setIcon:(id)arg1;
- (id)icon;
- (id)addButtonWithTitle:(id)arg1;
- (id)buttons;
- (void)setShowsHelp:(BOOL)arg1;
- (BOOL)showsHelp;
- (BOOL)_showsDontWarnAgain;
- (void)_setDontWarnMessage:(id)arg1;
- (BOOL)_dontWarnAgain;
- (void)setHelpAnchor:(id)arg1;
- (id)helpAnchor;
- (void)setAlertStyle:(unsigned long long)arg1;
- (unsigned long long)alertStyle;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)layout;
- (void)prepare;
- (long long)runModal;
- (void)beginSheetModalForWindow:(id)arg1 modalDelegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)didEndAlert:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)window;
- (void)setShowsSuppressionButton:(BOOL)arg1;
- (BOOL)showsSuppressionButton;
- (id)suppressionButton;
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (id)buttonPressed:(id)arg1;
- (void)placeButtons:(long long)arg1 firstWidth:(double)arg2 secondWidth:(double)arg3 thirdWidth:(double)arg4;
- (double)messageWidthForMessage:(id)arg1;
- (id)setTitle:(id)arg1 andMessage:(id)arg2;
- (void)windowDidBecomeKey:(id)arg1;
- (void)stopTimerForSpeaking;
- (void)startTimerForSpeaking;
- (void)startSpeaking:(id)arg1;
- (id)buildAlertStyle:(unsigned long long)arg1 title:(id)arg2 formattedMsg:(id)arg3 first:(id)arg4 second:(id)arg5 third:(id)arg6 oldStyle:(BOOL)arg7;
- (id)buildAlertStyle:(unsigned long long)arg1 title:(id)arg2 message:(id)arg3 first:(id)arg4 second:(id)arg5 third:(id)arg6 oldStyle:(BOOL)arg7 args:(CDStruct_19b88e92 [1])arg8;
- (void)didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface NSAnimation : NSObject <NSCopying, NSCoding>
{
    double _duration;
    float _currentProgress;
    float _framesPerSecond;
    id _delegate;
    NSTimer *_timer;
    double _startTime;
    NSMutableArray *_progressMarks;
    NSAnimation *_startAnimation;
    NSAnimation *_stopAnimation;
    int _nextProgressMark;
    struct __aFlags {
        unsigned int delegateAnimationShouldStart:1;
        unsigned int delegateAnimationDidStop:1;
        unsigned int delegateAnimationDidEnd:1;
        unsigned int delegateAnimationValueForProgress:1;
        unsigned int delegateAnimationDidReachProgressMark:1;
        unsigned int animating:1;
        unsigned int blocking:1;
        unsigned int reserved:25;
    } _aFlags;
    struct __aSettings {
        unsigned int animationCurve:8;
        unsigned int animationBlockingMode:2;
        unsigned int reserved:22;
    } _aSettings;
    NSRunLoop *_scheduledRunLoop;
    long long _reserved2;
    long long _reserved3;
    long long _reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initWithDuration:(double)arg1 animationCurve:(unsigned long long)arg2;
- (void)dealloc;
- (void)finalize;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)startAnimation;
- (void)stopAnimation;
- (BOOL)isAnimating;
- (float)currentProgress;
- (void)setCurrentProgress:(float)arg1;
- (void)setDuration:(double)arg1;
- (double)duration;
- (unsigned long long)animationBlockingMode;
- (void)setAnimationBlockingMode:(unsigned long long)arg1;
- (void)setFrameRate:(float)arg1;
- (float)frameRate;
- (void)setAnimationCurve:(unsigned long long)arg1;
- (unsigned long long)animationCurve;
- (float)currentValue;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)progressMarks;
- (void)setProgressMarks:(id)arg1;
- (void)addProgressMark:(float)arg1;
- (void)removeProgressMark:(float)arg1;
- (void)startWhenAnimation:(id)arg1 reachesProgress:(float)arg2;
- (void)stopWhenAnimation:(id)arg1 reachesProgress:(float)arg2;
- (void)clearStartAnimation;
- (void)clearStopAnimation;
- (id)runLoopModesForAnimating;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSTargetAnimationInfo : NSObject <NSCoding>
{
    NSAnimation *_animation;
    float _progress;
    BOOL _start;
}

- (id)initWithAnimation:(id)arg1 progress:(float)arg2 start:(BOOL)arg3;
- (float)floatValue;
- (void)startOrStopTargetAnimation;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSAnimationHelper : NSObject
{
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopTimer *_moveTimer;
    double _moveTimerFiringInterval;
    double _startTime;
    double _totalTime;
    BOOL _done;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)_isAnimating;
- (double)_timeRemaining;
- (void)_doAnimationStepWithProgress:(double)arg1;
- (void)_doFinalAnimationStep;
- (void)_runBlockingWithDuration:(double)arg1 firingInterval:(double)arg2;
- (void)_startRunWithDuration:(double)arg1 firingInterval:(double)arg2;
- (void)_continueRunWithStartTime:(double)arg1 duration:(double)arg2;
- (void)_stopRun;
- (double)_progress;
- (void)_resetTimer;

@end

@interface NSApplication : NSResponder <NSUserInterfaceValidations>
{
    NSEvent *_currentEvent;
    id _windowList;
    id _keyWindow;
    id _mainWindow;
    id _delegate;
    id *_hiddenList;
    int _hiddenCount;
    long long _context;
    void *_appleEventSuspensionID;
    id _previousKeyWindow;
    short _unusedApp;
    short _running;
    struct __appFlags {
        unsigned int _hidden:1;
        unsigned int _RESERVED1:1;
        unsigned int _active:1;
        unsigned int _hasBeenRun:1;
        unsigned int _doingUnhide:1;
        unsigned int _delegateReturnsValidRequestor:1;
        unsigned int _deactPending:1;
        unsigned int _invalidState:1;
        unsigned int _invalidEvent:1;
        unsigned int _postedWindowsNeedUpdateNote:1;
        unsigned int _wantsToActivate:1;
        unsigned int _doingHide:1;
        unsigned int _dontSendShouldTerminate:1;
        unsigned int _skipWin32DelayedRestoreKeyWindowAfterHide:1;
        unsigned int _finishedLaunching:1;
        unsigned int _hasEventDelegate:1;
        unsigned int _appDying:1;
        unsigned int _didNSOpenOrPrint:1;
        unsigned int _inDealloc:1;
        unsigned int _pendingDidFinish:1;
        unsigned int _hasKeyFocus:1;
        unsigned int _panelsNonactivating:1;
        unsigned int _hiddenOnLaunch:1;
        unsigned int _openStatus:2;
        unsigned int _batchOrdering:1;
        unsigned int _waitingForTerminationReply:1;
        unsigned int _windowMoveDisabled:1;
        unsigned int _reserved:4;
    } _appFlags;
    id _mainMenu;
    id _appIcon;
    id _nameTable;
    id _eventDelegate;
    struct NSThreadPrivate *_threadingSupport;
}

+ (void)_initializeArchiverMappings;
+ (void)_initializeRegisteredDefaults;
+ (void)_taskNowMultiThreaded:(id)arg1;
+ (void)load;
+ (void)initialize;
+ (void)_userLoggedOut;
+ (id)sharedApplication;
+ (void)_initializeSharedApplicationForCarbonAppIfNecessary;
+ (void)detachDrawingThread:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
+ (void)_startDrawingThread:(id)arg1;
- (void)_copyWindowsSnapShotInThreadData;
- (void)_cleanUpForCarbonAppTermination;
- (void)_installAutoreleasePoolsOnCurrentThreadIfNecessary;
- (void)_registerWithDock;
- (void)_removeSystemUIModeHandler;
- (void)_updateButtonsForSystemUIModeChanged;
- (void)_setSpacesSwitchOnActivation;
- (BOOL)_spacesSwitchOnActivation;
- (void)_spacesSwitchOnActivationChanged:(id)arg1;
- (id)init;
- (void)_aquaColorVariantChanged;
- (void)_setMinimizeOnDoubleClick;
- (void)_minimizeOnDoubleClickChanged;
- (void)_deallocHardCore:(BOOL)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_setEventDelegate:(id)arg1;
- (id)_eventDelegate;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (unsigned int)contextID;
- (id)context;
- (void)_addHiddenWindow:(id)arg1;
- (id)_removeHiddenWindow:(id)arg1;
- (id)_hiddenWindows;
- (void)_doHide;
- (BOOL)_startBatchWindowAccumulation:(long long)arg1;
- (void)_scheduleWindow:(long long)arg1 forBatchOrdering:(long long)arg2 relativeTo:(long long)arg3;
- (void)_performBatchWindowOrdering:(BOOL)arg1;
- (void)hide:(id)arg1;
- (void)unhide:(id)arg1;
- (BOOL)_batchOrdering;
- (void)_doUnhideWithoutActivation;
- (void)unhideWithoutActivation;
- (void)hideOtherApplications:(id)arg1;
- (void)unhideAllApplications:(id)arg1;
- (void)_windowNumber:(long long)arg1 changedTo:(long long)arg2;
- (id)_windowWithRealWindowNumber:(long long)arg1;
- (id)windowWithWindowNumber:(long long)arg1;
- (id)mainWindow;
- (id)_mainWindow;
- (id)_setMainWindow:(id)arg1;
- (id)keyWindow;
- (id)_keyWindow;
- (id)_previousKeyWindow;
- (void)_setPreviousKeyWindow:(id)arg1;
- (id)_keyWindowForHeartBeat;
- (id)_setKeyWindow:(id)arg1;
- (id)_setMouseActivationInProgress:(BOOL)arg1;
- (BOOL)_mouseActivationInProgress;
- (void)_setAppleEventActivationInProgress:(BOOL)arg1;
- (BOOL)_appleEventActivationInProgress;
- (BOOL)_isDeactPending;
- (long long)unhide;
- (BOOL)_isDoingOpenFile;
- (long long)openFile:(id)arg1 ok:(long long *)arg2;
- (long long)openTempFile:(id)arg1 ok:(long long *)arg2;
- (BOOL)_openFileWithoutUI:(id)arg1;
- (void)replyToOpenOrPrint:(unsigned long long)arg1;
- (void)_doOpenFile:(id)arg1 ok:(long long *)arg2 tryTemp:(BOOL)arg3;
- (BOOL)_doOpenUntitled;
- (void)setIsActive:(BOOL)arg1;
- (BOOL)isActive;
- (void)_setWantsToActivate:(BOOL)arg1;
- (BOOL)_wantsToActivate;
- (BOOL)isHidden;
- (BOOL)_hiddenOnLaunch;
- (BOOL)_isDoingUnhide;
- (BOOL)_isDoingHide;
- (BOOL)_isRunningAppModal;
- (BOOL)_isRunningDocModal;
- (BOOL)_isRunningModal;
- (BOOL)isRunning;
- (void)deactivate;
- (void)activateIgnoringOtherApps:(BOOL)arg1;
- (void)_deactivateWindows;
- (void)_activateWindows;
- (void)_postDidFinishNotification;
- (void)_sendFinishLaunchingNotification;
- (BOOL)_replyToLaunch;
- (id)_replyToOpen:(long long)arg1;
- (void)finishLaunching;
- (BOOL)_didNSOpenOrPrint;
- (void)_startRunMethod;
- (void)_endRunMethod;
- (void)_preEventHandling;
- (void)_postEventHandling;
- (void)run;
- (void)_modalSession:(struct _NSModalSession *)arg1 sendEvent:(id)arg2;
- (void)_realDoModalLoop:(struct _NSModalSession *)arg1 peek:(BOOL)arg2;
- (void)_doModalLoop:(struct _NSModalSession *)arg1 peek:(BOOL)arg2;
- (void)_doModalLoopForSecondaryThread:(id)arg1;
- (long long)runModalForWindow:(id)arg1;
- (BOOL)_wantsDeviceDependentEventModifierFlags;
- (long long)runModalForWindow:(id)arg1 relativeToWindow:(id)arg2;
- (void)beginSheet:(id)arg1 modalForWindow:(id)arg2 modalDelegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)stop:(id)arg1;
- (void)stopModal;
- (void)endSheet:(id)arg1;
- (void)stopModalWithCode:(long long)arg1;
- (void)endSheet:(id)arg1 returnCode:(long long)arg2;
- (void)abortModal;
- (id)_orderFrontModalWindow:(id)arg1 relativeToWindow:(id)arg2;
- (struct _NSModalSession *)_commonBeginModalSessionForWindow:(id)arg1 relativeToWindow:(id)arg2 modalDelegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (struct _NSModalSession *)beginModalSessionForWindow:(id)arg1 relativeToWindow:(id)arg2;
- (struct _NSModalSession *)beginModalSessionForWindow:(id)arg1;
- (long long)runModalSession:(struct _NSModalSession *)arg1;
- (void)endModalSession:(struct _NSModalSession *)arg1;
- (id)modalWindow;
- (void)_clearModalWindowLevels;
- (BOOL)_hasActiveRequest;
- (long long)requestUserAttention:(unsigned long long)arg1;
- (void)cancelUserAttentionRequest:(long long)arg1;
- (void)_cancelRequest:(id)arg1;
- (void)_cancelAllUserAttentionRequests;
- (BOOL)_waitingForTerminationReply;
- (void)_setWaitingForTerminationReply:(BOOL)arg1;
- (BOOL)_shouldTerminate;
- (void)_docController:(id)arg1 shouldTerminate:(BOOL)arg2;
- (void)replyToApplicationShouldTerminate:(BOOL)arg1;
- (void)_terminateSendShould:(BOOL)arg1;
- (BOOL)_isDying;
- (void)terminate:(id)arg1;
- (id)delayWindowOrdering;
- (void)preventWindowOrdering;
- (void)_saveWindowForGestureEvent:(id)arg1;
- (id)nextEventMatchingMask:(unsigned long long)arg1 untilDate:(id)arg2 inMode:(id)arg3 dequeue:(BOOL)arg4;
- (BOOL)_isActiveApp;
- (void)_setCurrentEvent:(id)arg1;
- (id)currentEvent;
- (void)discardEventsMatchingMask:(unsigned long long)arg1 beforeEvent:(id)arg2;
- (void)postEvent:(id)arg1 atStart:(BOOL)arg2;
- (unsigned long long)_lastEventRecordTime;
- (void)rightMouseDown:(id)arg1;
- (BOOL)_handleKeyEquivalent:(id)arg1;
- (BOOL)_handleSpecialAlternateKeyEquivalent:(id)arg1;
- (void)_reactToDisplayChanged:(BOOL)arg1 resetScreens:(BOOL)arg2;
- (void)_registerCarbonAppForDisplayChangedNotification;
- (BOOL)_findKeyWindowConsideringSpacesWithAppleEventPending:(BOOL)arg1;
- (BOOL)_handleTouchEvent:(id)arg1;
- (BOOL)_handleGestureEvent:(id)arg1;
- (BOOL)_shouldClearModalWindowLevelWhenInactive;
- (void)sendEvent:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)_resignKeyFocus;
- (void)_obtainKeyFocus;
- (BOOL)_hasKeyFocus;
- (void)_setHasKeyFocus:(BOOL)arg1;
- (void)_setAllPanelsNonactivating:(BOOL)arg1;
- (BOOL)_areAllPanelsNonactivating;
- (id)frontWindow;
- (id)makeWindowsPerform:(SEL)arg1 inOrder:(BOOL)arg2;
- (void)_makeWindowsPerform:(SEL)arg1 forEvent:(id)arg2 inWindow:(id)arg3 standardWindowButton:(unsigned long long)arg4;
- (void)_cycleWindowsReversed:(BOOL)arg1;
- (void)_cycleUtilityWindowsReversed:(BOOL)arg1;
- (void)_dockDied;
- (void)_setApplicationIconImage:(id)arg1 setDockImage:(BOOL)arg2;
- (void)setApplicationIconImage:(id)arg1;
- (id)_iconImage;
- (id)applicationIconImage;
- (id)dockTile;
- (void)_dockRestarted;
- (id)_appIcon;
- (long long)activationPolicy;
- (BOOL)setActivationPolicy:(long long)arg1;
- (id)windows;
- (id)_copyWindows;
- (void)_setWindowsNeedUpdateForSecondaryThread:(id)arg1;
- (void)setWindowsNeedUpdate:(BOOL)arg1;
- (void)updateWindows;
- (BOOL)tryToPerform:(SEL)arg1 with:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (id)targetForAction:(SEL)arg1;
- (id)targetForAction:(SEL)arg1 to:(id)arg2 from:(id)arg3;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3;
- (void)_setMainMenu:(id)arg1;
- (void)setMainMenu:(id)arg1;
- (id)mainMenu;
- (void)setMenu:(id)arg1;
- (id)menu;
- (void)setHelpMenu:(id)arg1;
- (id)helpMenu;
- (void)setDockMenu:(id)arg1;
- (int)_sendDockMenuCommand:(unsigned int)arg1 withTag:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
- (struct __CFDictionary *)_flattenMenuItem:(id)arg1;
- (struct __CFArray *)_flattenMenu:(id)arg1;
- (struct __CFArray *)_createDockMenu:(BOOL)arg1;
- (void)_setWindowMoveDisabled:(BOOL)arg1;
- (BOOL)_windowMoveDisabled;
- (long long)_indexOfWindow:(id)arg1;
- (id)_removeWindow:(id)arg1;
- (id)_addWindow:(id)arg1;
- (void)_handleCursorUpdate:(id)arg1;
- (void)_setCursorForCurrentMouseLocation;
- (id)_cursorRectCursor;
- (id)_restoreCursor;
- (void)disableCursorRects;
- (void)enableCursorRects;
- (BOOL)areCursorRectsEnabled;
- (long long)_currentActivation;
- (id)_setCurrentActivation:(long long)arg1;
- (long long)_pendingActCount;
- (void)reportException:(id)arg1;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2;
- (void)speakString:(id)arg1;
- (BOOL)isSpeaking;
- (void)stopSpeaking:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (BOOL)_isNSDocumentBased;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)_kitBundle;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)orderFrontCharacterPalette:(id)arg1;
- (BOOL)isFullKeyboardAccessEnabled;
- (BOOL)_processSwitchesEnabled;
- (unsigned long long)gestureEventMask;
- (void)_setGestureEventMask:(unsigned long long)arg1;
- (void)setGestureEventMask:(unsigned long long)arg1;
- (BOOL)_disableSuddenTermination;
- (void)_enableSuddenTermination;
- (long long)userInterfaceLayoutDirection;
- (unsigned long long)presentationOptions;
- (void)setPresentationOptions:(unsigned long long)arg1;
- (unsigned long long)currentSystemPresentationOptions;

@end

@interface __NSAppKitThreadSpecificData : NSObject
{
    struct {
        unsigned int hasWindowContexts:1;
        unsigned int reserved:31;
    } _akFlags;
    NSThread *NSFoundationThread;
    id NSCurrentGraphicsContext;
    id NSLastOnScreenGraphicsContext;
    id NSCGSContextThreadStateStack;
    id NSCGSContextThreadStateMap;
    id NSThreadFocusState;
    id NSThreadFocusStack;
    id NSRuleBookProxy;
    id NSGlyphGeneratorCache;
    id NSActionCellReplacementString;
    struct _NSRange NSActionCellSelectionRange;
    id NSAlertCache;
    id NSButtonCellSharedAlteredImage;
    id reserved;
    id NSFontManagerCache;
    unsigned int fontManagerGeneration;
    id NSDisplayOperationStack;
    id NSColorPickerWheelImageCache;
    id NSPeriodicEventSource;
    id NSPBServerDict;
    id NSPBServerLookupCache;
    long long NSLockCount;
    id NSCurrentPrintOperation;
    id NSPrintInfoStorage;
    unsigned long long NSCachedTitleCellMask;
    id NSCachedTitleCellTitle;
    struct CGSize NSCachedTitleCellSize;
    id NSCurrentNibLoadingBundles;
    id NSCurrentNibPaths;
    struct __CFRunLoopObserver *NSCarbonAppRunLoopEnterObserverRef;
    struct __CFRunLoopObserver *NSCarbonAppRunLoopExitObserverRef;
    void *NSStringDrawingTextStorageSettings;
    id NSAnimationManager;
    id NSAnimationContextStack;
    long long NSThreadSequenceNumber;
}

- (id)init;

@end

@interface _NSDrawingThreadData : NSObject
{
    SEL selector;
    id target;
    id argument;
}

@end

@interface NSArrayController : NSObjectController
{
    void *_reserved4;
    id _rearrangementExtensions;
    NSMutableArray *_temporaryWorkObjects;
    struct __arrayControllerFlags {
        unsigned int _avoidsEmptySelection:1;
        unsigned int _preservesSelection:1;
        unsigned int _selectsInsertedObjects:1;
        unsigned int _alwaysUsesMultipleValuesMarker:1;
        unsigned int _refreshesAllModelObjects:1;
        unsigned int _filterRestrictsInsertion:1;
        unsigned int _overridesArrangeObjects:1;
        unsigned int _overridesDidChangeArrangementCriteria:1;
        unsigned int _explicitlyCannotInsert:1;
        unsigned int _generatedEmptyArray:1;
        unsigned int _isObservingKeyPathsThroughArrangedObjects:1;
        unsigned int _arrangedObjectsIsMutable:1;
        unsigned int _clearsFilterPredicateOnInsertion:1;
        unsigned int _skipSortingAfterFetch:1;
        unsigned int _automaticallyRearrangesObjects:1;
        unsigned int _reservedArrayController:17;
    } _arrayControllerFlags;
    unsigned long long _observedIndexHint;
    NSMutableIndexSet *_selectionIndexes;
    NSMutableArray *_objects;
    NSIndexSet *_cachedSelectedIndexes;
    NSArray *_cachedSelectedObjects;
    NSArray *_arrangedObjects;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
+ (id)_keyValueBindingAccessPoints;
+ (id)_modelAndProxyKeys;
- (id)_rearrangementExtensions:(BOOL)arg1;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_dealloc;
- (id)description;
- (BOOL)_registerObservingForAllModelObjects;
- (void)_startObservingSelectionIfNecessary;
- (void)_stopObservingSelectionIfNecessary;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)_setRefreshesAllModelObjects:(BOOL)arg1;
- (BOOL)_refreshesAllModelObjects;
- (BOOL)_shouldSendObserverNotificationForModelOrProxyKey:(id)arg1 keyPath:(id)arg2 ofObject:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)willChangeValuesForArrangedKeys:(BOOL)arg1 objectKeys:(BOOL)arg2 indexKeys:(BOOL)arg3;
- (void)didChangeValuesForArrangedKeys:(BOOL)arg1 objectKeys:(BOOL)arg2 indexKeys:(BOOL)arg3;
- (id)_filterObjects:(id)arg1;
- (id)_sortObjects:(id)arg1;
- (id)arrangeObjects:(id)arg1;
- (void)_setObjects:(id)arg1;
- (void)_ensureObjectsAreMutable;
- (void)_updateObservingForAutomaticallyRearrangingObjects;
- (void)_arrangeObjectsWithSelectedObjects:(id)arg1 avoidsEmptySelection:(BOOL)arg2 operationsMask:(unsigned long long)arg3 useBasis:(id)arg4;
- (void)setFilterPredicate:(id)arg1;
- (id)filterPredicate;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (void)_updateAutomaticRearrangementKeysPaths;
- (void)_setUpAutomaticRearrangingOfObjects;
- (void)setAutomaticallyRearrangesObjects:(BOOL)arg1;
- (BOOL)automaticallyRearrangesObjects;
- (void)_addKeyPathsFromPredicate:(id)arg1 toSet:(id)arg2;
- (id)automaticRearrangementKeyPaths;
- (void)_didChangeArrangementCriteriaWithOperationsMask:(unsigned long long)arg1 useBasis:(id)arg2;
- (void)didChangeArrangementCriteria;
- (void)_setContentInBackground:(id)arg1;
- (void)setContent:(id)arg1;
- (id)content;
- (void)setUsesLazyFetching:(BOOL)arg1;
- (BOOL)_sendsContentChangeNotifications;
- (id)_arrayContent;
- (void)_prepareContentWithNewObject:(id)arg1;
- (void)rearrangeObjects;
- (void)setAvoidsEmptySelection:(BOOL)arg1;
- (BOOL)avoidsEmptySelection;
- (void)setPreservesSelection:(BOOL)arg1;
- (BOOL)preservesSelection;
- (void)setSelectsInsertedObjects:(BOOL)arg1;
- (BOOL)selectsInsertedObjects;
- (void)setClearsFilterPredicateOnInsertion:(BOOL)arg1;
- (BOOL)clearsFilterPredicateOnInsertion;
- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)arg1;
- (BOOL)alwaysUsesMultipleValuesMarker;
- (unsigned long long)_selectionIndexesCount;
- (BOOL)_selectObjectsAtIndexesNoCopy:(id)arg1 avoidsEmptySelection:(BOOL)arg2 sendObserverNotifications:(BOOL)arg3 forceUpdate:(BOOL)arg4;
- (BOOL)_selectObjectsAtIndexes:(id)arg1 avoidsEmptySelection:(BOOL)arg2 sendObserverNotifications:(BOOL)arg3 forceUpdate:(BOOL)arg4;
- (BOOL)setSelectionIndexes:(id)arg1;
- (id)selectionIndexes;
- (BOOL)setSelectionIndex:(unsigned long long)arg1;
- (unsigned long long)selectionIndex;
- (BOOL)addSelectionIndexes:(id)arg1;
- (BOOL)removeSelectionIndexes:(id)arg1;
- (BOOL)_modifySelectedObjects:(id)arg1 useExistingIndexesAsStartingPoint:(BOOL)arg2 avoidsEmptySelection:(BOOL)arg3 addOrRemove:(BOOL)arg4 sendObserverNotifications:(BOOL)arg5 forceUpdate:(BOOL)arg6;
- (BOOL)setSelectedObjects:(id)arg1;
- (BOOL)addSelectedObjects:(id)arg1;
- (BOOL)removeSelectedObjects:(id)arg1;
- (void)_cacheSelectedObjectsIfNecessary;
- (id)selectedObjects;
- (void)_modifySelectionIndexes:(unsigned long long)arg1 atIndex:(unsigned long long)arg2 addOrRemove:(BOOL)arg3 sendObserverNotifications:(BOOL)arg4;
- (void)_addNumberOfIndexes:(unsigned long long)arg1 toSelectionIndexesAtIndex:(unsigned long long)arg2 sendObserverNotifications:(BOOL)arg3;
- (void)_removeNumberOfIndexes:(unsigned long long)arg1 fromSelectionIndexesAtIndex:(unsigned long long)arg2 sendObserverNotifications:(BOOL)arg3;
- (void)_setFilterRestrictsInsertion:(BOOL)arg1;
- (BOOL)_filterRestrictsInsertion;
- (void)_assertFilterRestrictsInsertionOfObjects:(id)arg1 atArrangedObjectIndexes:(id)arg2;
- (void)addObject:(id)arg1;
- (void)addObjects:(id)arg1;
- (void)_insertObject:(id)arg1 atArrangedObjectIndex:(unsigned long long)arg2 objectHandler:(id)arg3;
- (void)insertObject:(id)arg1 atArrangedObjectIndex:(unsigned long long)arg2;
- (void)_insertObjects:(id)arg1 atArrangedObjectIndexes:(id)arg2 objectHandler:(id)arg3;
- (void)insertObjects:(id)arg1 atArrangedObjectIndexes:(id)arg2;
- (void)_ensureSelectionAfterRemoveWithPreferredIndex:(unsigned long long)arg1 sendObserverNotifications:(BOOL)arg2;
- (void)_removeObjectAtArrangedObjectIndex:(unsigned long long)arg1 objectHandler:(id)arg2;
- (void)removeObjectAtArrangedObjectIndex:(unsigned long long)arg1;
- (void)_removeObjectsAtArrangedObjectIndexes:(id)arg1 contentIndexes:(id)arg2 objectHandler:(id)arg3;
- (void)removeObjectsAtArrangedObjectIndexes:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)_removeObjects:(id)arg1 objectHandler:(id)arg2;
- (void)removeObjects:(id)arg1;
- (void)_executeInsert:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)insert:(id)arg1;
- (void)_executeAdd:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)add:(id)arg1;
- (void)remove:(id)arg1;
- (void)_changeEditable:(BOOL)arg1;
- (void)_setExplicitlyCannotAdd:(BOOL)arg1 insert:(BOOL)arg2 remove:(BOOL)arg3;
- (BOOL)_explicitlyCannotInsert;
- (BOOL)canInsert;
- (BOOL)canAdd;
- (BOOL)canRemove;
- (BOOL)canSelectNext;
- (void)_executeSelectNext:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)selectNext:(id)arg1;
- (BOOL)canSelectPrevious;
- (void)_executeSelectPrevious:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)selectPrevious:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (unsigned long long)_multipleValuesObjectCount;
- (id)_multipleValuesObjectAtIndex:(unsigned long long)arg1;
- (id)_multipleValuesObjectsAtIndexes:(id)arg1;
- (id)_multipleValueForKey:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_multipleValueForKeyPath:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_multipleMutableArrayValueForKey:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_multipleMutableArrayValueForKeyPath:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_setMultipleValue:(id)arg1 forKey:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_setMultipleValue:(id)arg1 forKeyPath:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_invokeMultipleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)_validateMultipleValue:(id *)arg1 forKeyPath:(id)arg2 atIndex:(unsigned long long)arg3 error:(id *)arg4;
- (id)_singleValueForKeyPath:(id)arg1 operationType:(long long)arg2;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (id)_singleMutableArrayValueForKeyPath:(id)arg1;
- (id)_singleValueForKey:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)_controllerKeys;
- (id)arrangedObjects;

@end

@interface _NSArrayControllerExtensions : NSObject
{
    NSArrayController *_controller;
    NSArray *_automaticRearrangementKeyPaths;
    NSArray *_sortDescriptors;
    NSPredicate *_filterPredicate;
    id _suppressedContentObjectsObservingTracker;
}

- (id)initWithController:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)_setAutomaticRearrangementKeyPaths:(id)arg1;
- (id)_automaticRearrangementKeyPaths;
- (void)_setSortDescriptorsNoCopy:(id)arg1;
- (id)_setSortDescriptors:(id)arg1;
- (id)_sortDescriptors;
- (void)_setFilterPredicateNoCopy:(id)arg1;
- (id)_setFilterPredicate:(id)arg1;
- (id)_filterPredicate;
- (void)_startRearrangementObservingForSuppressedContentObjects:(id)arg1;
- (void)_stopRearrangementObservingForSuppressedContentObjects;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface _NSControllerArrayProxyMutatorArray : NSMutableArray
{
    NSObjectController *_controller;
    NSString *_keyPath;
}

- (id)initWithController:(id)arg1 keyPath:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_referenceArray;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (void)_performMutatorOperation:(long long)arg1 object:(id)arg2 index:(unsigned long long)arg3;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;

@end

@interface _NSControllerArrayProxy : NSArray
{
    id _controller;
}

- (id)initWithController:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearController;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3;
- (BOOL)_validateValue:(id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 error:(id *)arg4;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 ofObjectAtIndex:(unsigned long long)arg4;

@end

@interface NSArrayDetailBinder : NSObjectDetailBinder
{
    struct __arrayDetailBinderFlags {
        unsigned int _selectsAllWhenSettingContent:1;
        unsigned int _usedMultipleSelectionArray:1;
        unsigned int _reservedArrayDetailBinder:30;
    } _arrayDetailBinderFlags;
}

+ (id)binderClassesSuperseded;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (id)availableBindings;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (BOOL)_handlesSelectAll;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)setSelectsAllWhenSettingContent:(BOOL)arg1;
- (BOOL)selectsAllWhenSettingContent;
- (id)_referenceBinding;
- (BOOL)_canGuaranteeOrderOfContentObjects;
- (void)_selectAllContent:(id)arg1 inDetailController:(id)arg2;
- (void)_refreshDetailContentInBackground:(BOOL)arg1;
- (void)refreshDetailContent;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (BOOL)_performArrayBinderOperation:(long long)arg1 singleObject:(id)arg2 multipleObjects:(id)arg3 singleIndex:(unsigned long long)arg4 multipleIndexes:(id)arg5 selectionMode:(int *)arg6;
- (BOOL)addObjectToMasterArrayRelationship:(id)arg1 selectionMode:(int *)arg2;
- (BOOL)addObjectsToMasterArrayRelationship:(id)arg1 selectionMode:(int *)arg2;
- (BOOL)insertObjectIntoMasterArrayRelationship:(id)arg1 atIndex:(unsigned long long)arg2 selectionMode:(int *)arg3;
- (BOOL)insertObjectsIntoMasterArrayRelationship:(id)arg1 atIndexes:(id)arg2 selectionMode:(int *)arg3;
- (BOOL)removeObjectFromMasterArrayRelationshipAtIndex:(unsigned long long)arg1 selectionMode:(int *)arg2;
- (BOOL)removeObjectsFromMasterArrayRelationshipAtIndexes:(id)arg1 selectionMode:(int *)arg2;

@end

@interface NSAttachmentTextStorage : NSTextStorage
{
    NSTextStorage *_realTS;
}

- (id)init;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)filename;
- (void)setFilename:(id)arg1;
- (id)url;
- (void)setUrl:(id)arg1;

@end

@interface NSAttributeDictionaryEnumerator : NSEnumerator
{
    NSAttributeDictionary *dictionary;
    unsigned long long nextElement;
}

- (id)initWithAttributeDictionary:(id)arg1;
- (id)nextObject;
- (void)dealloc;

@end

@interface NSAttributeDictionary : NSDictionary
{
    unsigned int numElements;
    unsigned int refCount;
    struct _NSAttributeDictionaryElement elements[1];
}

+ (void)initialize;
+ (id)emptyAttributeDictionary;
+ (id)newWithDictionary:(id)arg1;
- (id)newWithKey:(id)arg1 object:(id)arg2;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (id)keyEnumerator;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqualToDictionary:(id)arg1;

@end

@interface NSTempAttributeDictionary : NSAttributeDictionary
{
}

- (id)retain;

@end

@interface _NSAttributeRun : NSObject <NSCopying>
{
    struct _NSRange _range;
    NSTextStorage *_textStorage;
    NSMutableArray *_attributesArray;
}

- (id)initWithTextStorage:(id)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;
- (void)restoreAttributesOfTextStorage:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct _NSRange)range;

@end

@interface _NSAttributes : NSObject
{
    NSDictionary *_attributes;
    struct _NSRange _range;
}

- (id)initWithAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;
- (void)setAttributesInTextStorage:(id)arg1;

@end

@interface NSAutounbinder : NSProxy
{
    NSObject *_bindingTarget;
    BOOL _isRetainingBindingTarget;
    BOOL _isRecordingBindings;
    NSMutableArray *_bindingsToThisObject;
    NSMutableArray *_observancesOfThisObject;
}

- (id)initWithBindingTarget:(id)arg1;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)description;
- (id)bindingTarget;
- (void)addBinding:(id)arg1 fromObject:(id)arg2;
- (void)removeBinding:(id)arg1 fromObject:(id)arg2;
- (void)retainBindingTargetAndUnbind;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (BOOL)validateValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)_autounbinder;

@end

@interface NSAutounbinderObservance : NSObject
{
    NSObject *_observer;
    NSString *_keyPath;
    void *_context;
}

- (id)initWithObserver:(id)arg1 keyPath:(id)arg2 context:(void *)arg3;
- (void)dealloc;
- (id)description;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface NSAutounbinderBinding : NSObject
{
    NSString *_name;
    NSString *_boundObject;
}

- (id)initWithName:(id)arg1 boundObject:(id)arg2;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface NSBezierPath : NSObject <NSCopying, NSCoding>
{
    long long _elementCount;
    long long _elementMax;
    struct PATHSEGMENT *_head;
    long long _lastSubpathIndex;
    void *_extraSegments;
    double _lineWidth;
    struct CGRect _controlPointBounds;
    double _miterLimit;
    double _flatness;
    double *_dashedLinePattern;
    unsigned long long _dashedLineCount;
    double _dashedLinePhase;
    void *_path;
    long long _extraSegmentCount;
    long long _extraSegmentMax;
    id _private[2];
    struct {
        unsigned int _flags:8;
        unsigned int _pathState:2;
        unsigned int _unused:22;
    } _bpFlags;
}

+ (void)initialize;
+ (id)bezierPath;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 xRadius:(double)arg2 yRadius:(double)arg3;
+ (void)fillRect:(struct CGRect)arg1;
+ (void)strokeRect:(struct CGRect)arg1;
+ (void)clipRect:(struct CGRect)arg1;
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (void)drawPackedGlyphs:(const char *)arg1 atPoint:(struct CGPoint)arg2;
+ (void)setDefaultMiterLimit:(double)arg1;
+ (double)defaultMiterLimit;
+ (void)setDefaultFlatness:(double)arg1;
+ (double)defaultFlatness;
+ (void)setDefaultWindingRule:(unsigned long long)arg1;
+ (unsigned long long)defaultWindingRule;
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultLineCapStyle;
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultLineJoinStyle;
+ (void)setDefaultLineWidth:(double)arg1;
+ (double)defaultLineWidth;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)closePath;
- (void)removeAllPoints;
- (void)relativeMoveToPoint:(struct CGPoint)arg1;
- (void)relativeLineToPoint:(struct CGPoint)arg1;
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (double)lineWidth;
- (void)setLineWidth:(double)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)windingRule;
- (void)setWindingRule:(unsigned long long)arg1;
- (double)miterLimit;
- (void)setMiterLimit:(double)arg1;
- (double)flatness;
- (void)setFlatness:(double)arg1;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
- (void)_doPath;
- (void)stroke;
- (void)fill;
- (void)addClip;
- (void)setClip;
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)flattenIntoPath:(id)arg1;
- (id)bezierPathByFlatteningPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByReversingPath;
- (void)transformUsingAffineTransform:(id)arg1;
- (BOOL)isEmpty;
- (struct CGPoint)currentPoint;
- (struct CGRect)controlPointBounds;
- (struct CGRect)bounds;
- (long long)elementCount;
- (unsigned long long)elementAtIndex:(long long)arg1;
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;
- (void)_appendToPath:(id)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(BOOL)arg5;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;
- (void)appendBezierPathWithGlyph:(unsigned int)arg1 inFont:(id)arg2;
- (void)appendBezierPathWithGlyphs:(unsigned int *)arg1 count:(long long)arg2 inFont:(id)arg3;
- (void)appendBezierPathWithPackedGlyphs:(const char *)arg1;
- (void)appendBezierPathWithRoundedRect:(struct CGRect)arg1 xRadius:(double)arg2 yRadius:(double)arg3;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSBinder : NSObject <NSCoding>
{
    void *_reserved;
    void *_reserved2;
    id _object;
    NSMutableArray *_bindingInfos;
    struct __binderFlags {
        unsigned int _isConnected:1;
        unsigned int _hasPerformedObservationRegistration:1;
        unsigned int _isObserving:1;
        unsigned int _suspendObservationProcessing:1;
        unsigned int _needsRefreshWhenObserverationProcessingResumes:1;
        unsigned int _reservedBinder:27;
    } _binderFlags;
    unsigned long long _bindingsBoundMask;
    id _plugin;
    id _expectedObservingInfo;
}

+ (void)load;
+ (id)_prepareAlertError:(id)arg1 responder:(id *)arg2 responderCandidate:(id)arg3 window:(id *)arg4 recoveryAttempter:(id)arg5;
+ (void)_presentAlertPanelForError:(id)arg1 responder:(id)arg2 responderCandidate:(id)arg3;
+ (void)_presentSheetForError:(id)arg1 responder:(id)arg2 responderCandidate:(id)arg3 delegate:(id)arg4 callback:(SEL)arg5 callbackContextInfo:(void *)arg6;
+ (void)_didPresentModalAlert:(BOOL)arg1 contextInfo:(CDStruct_b2dc443c *)arg2;
+ (struct __CFArray *)_allBinderClasses;
+ (id)binderClassesForObject:(id)arg1;
+ (id)_pluginProtocol;
+ (Class)_pluginClassWithObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)_enumeratedBindings:(id)arg1 storage:(id *)arg2 number:(unsigned long long)arg3 numberFirstBinding:(BOOL)arg4 maxNumber:(unsigned long long)arg5;
+ (id)bindingsForObject:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (id)_deprecatedBindings;
+ (BOOL)_autoCreateBinderForObject:(id)arg1 withController:(id)arg2;
- (void)_init;
- (id)_initWithObjectNoExceptions:(id)arg1;
- (id)initWithObject:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (id)copyToObject:(id)arg1;
- (void)_updatePlaceholdersForBindingInfo:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_dealloc;
- (void)dealloc;
- (void)_setObject:(id)arg1;
- (id)object;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)_plugin;
- (id)availableBindings;
- (BOOL)_testBinderConfiguration:(id)arg1 repairBindings:(BOOL)arg2;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (void)_setOptions:(id)arg1 withBindingInfo:(id)arg2;
- (void)_setOptions:(id)arg1 forBinding:(id)arg2;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (BOOL)canAddBinding:(id)arg1 toController:(id)arg2;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)bindingRunsAlerts:(id)arg1;
- (BOOL)isBindingKeyless:(id)arg1;
- (BOOL)isBindingKeyOptional:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (BOOL)canApplyValueTransformer:(id)arg1 toBinding:(id)arg2;
- (void)_addBinding:(id)arg1 toController:(id)arg2 withKeyPath:(id)arg3 valueTransformerName:(id)arg4 options:(id)arg5;
- (void)addBinding:(id)arg1 toController:(id)arg2 withKeyPath:(id)arg3 valueTransformer:(id)arg4 options:(id)arg5;
- (unsigned long long)_bindingInfoIndexForBinding:(id)arg1;
- (id)_bindingInfoForBinding:(id)arg1;
- (void)_removeBinding:(id)arg1;
- (void)_removeBinding:(id)arg1 byReplacingWithRemainingBindingsInArray:(id)arg2;
- (void)removeBinding:(id)arg1;
- (id)_bindingInfos;
- (id)controllerForBinding:(id)arg1;
- (id)keyPathForBinding:(id)arg1;
- (id)valueTransformerForBinding:(id)arg1;
- (id)_valueTransformerNameForBinding:(id)arg1;
- (void)_setController:(id)arg1 forBinding:(id)arg2;
- (void)setPlaceholder:(id)arg1 forMarker:(id)arg2 withBinding:(id)arg3;
- (id)placeholderForMarker:(id)arg1 withBinding:(id)arg2;
- (void)setRaisesForNotApplicableKeys:(BOOL)arg1 withBinding:(id)arg2;
- (BOOL)raisesForNotApplicableKeysWithBinding:(id)arg1;
- (void)setValidatesImmediately:(BOOL)arg1 withBinding:(id)arg2;
- (BOOL)validatesImmediatelyWithBinding:(id)arg1;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)arg1 withBinding:(id)arg2;
- (BOOL)alwaysPresentsApplicationModalAlertsWithBinding:(id)arg1;
- (BOOL)_isBindingEstablished:(id)arg1;
- (BOOL)_isAnyBindingInMaskBound:(unsigned long long)arg1;
- (BOOL)_isKeyPathBound:(id)arg1;
- (BOOL)_observeKeyPathForRelatedBinder:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (BOOL)_observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (void)_updateObservingRegistration:(BOOL)arg1;
- (id)_referenceBinding;
- (id)_referenceBinderController;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)arg1;
- (void)_updateDependenciesWithPeerBinders:(id)arg1;
- (void)_suspendObservationNotificationProcessing;
- (void)_resumeObservationNotificationProcessing;
- (BOOL)shouldProcessObservations;
- (BOOL)_observationProcessingEnabled;
- (void)_performConnectionEstablishedRefresh;
- (id)deprecatedBindings;
- (void)_connectionWasEstablished;
- (BOOL)_handleObservingRefresh;
- (void)establishConnection;
- (void)_connectionWasBroken;
- (void)_cleanUpConnectionWithSynchronizePeerBinders:(BOOL)arg1;
- (void)breakConnection;
- (void)releaseConnectionWithSynchronizePeerBinders:(BOOL)arg1;
- (BOOL)isConnected;
- (void)_prepareIndirectKeyValueCodingCallWithPartialControllerKey:(id)arg1 controller:(id)arg2;
- (id)_applyValueTransformerToValue:(id)arg1 forBindingInfo:(id)arg2 reverse:(BOOL)arg3;
- (id)_resolveMarkerToPlaceholder:(id)arg1 forBindingInfo:(id)arg2 allowPluginOverride:(BOOL)arg3;
- (id)_valueForKeyPath:(id)arg1 ofObject:(id)arg2 mode:(struct __NSKeyValueCodingControllerModeType)arg3 raisesForNotApplicableKeys:(BOOL)arg4;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObject:(id)arg2 atIndex:(unsigned long long)arg3 raisesForNotApplicableKeys:(BOOL)arg4;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObject:(id)arg2 atIndex:(unsigned long long)arg3 raisesForNotApplicableKeys:(BOOL)arg4;
- (BOOL)_setValue:(id *)arg1 forKeyPath:(id)arg2 ofObject:(id)arg3 mode:(struct __NSKeyValueCodingControllerModeType)arg4 validateImmediately:(BOOL)arg5 raisesForNotApplicableKeys:(BOOL)arg6 error:(id *)arg7;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 ofObject:(id)arg4 mode:(struct __NSKeyValueCodingControllerModeType)arg5 raisesForNotApplicableKeys:(BOOL)arg6;
- (id)applyValueTransformerToValue:(id)arg1 forBinding:(id)arg2 reverse:(BOOL)arg3;
- (id)resolveMarkerToPlaceholder:(id)arg1 binding:(id)arg2;
- (id)valueForBinding:(id)arg1 resolveMarkersToPlaceholders:(BOOL)arg2;
- (id)mutableArrayValueForBinding:(id)arg1 resolveMarkersToPlaceholders:(BOOL)arg2;
- (id)mutableSetValueForBinding:(id)arg1 resolveMarkersToPlaceholders:(BOOL)arg2;
- (BOOL)setValue:(id *)arg1 forBinding:(id)arg2 error:(id *)arg3;
- (BOOL)invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3 error:(id *)arg4;
- (BOOL)invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3 atIndexPath:(id)arg4 error:(id *)arg5;
- (BOOL)setValue:(id *)arg1 forBinding:(id)arg2 atIndexPath:(id)arg3 error:(id *)arg4;
- (id)valueForBinding:(id)arg1 atIndexPath:(id)arg2 resolveMarkersToPlaceholders:(BOOL)arg3;
- (id)valueForBinding:(id)arg1 atIndex:(unsigned long long)arg2 resolveMarkersToPlaceholders:(BOOL)arg3;
- (id)mutableArrayValueForBinding:(id)arg1 atIndex:(unsigned long long)arg2 resolveMarkersToPlaceholders:(BOOL)arg3;
- (id)mutableSetValueForBinding:(id)arg1 atIndex:(unsigned long long)arg2 resolveMarkersToPlaceholders:(BOOL)arg3;
- (BOOL)setValue:(id *)arg1 forBinding:(id)arg2 atIndex:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3 atIndex:(unsigned long long)arg4 error:(id *)arg5;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)isEditing;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_presentModalAlertWithError:(id)arg1 responder:(id)arg2 relatedToBinding:(id)arg3;
- (void)_logError:(id)arg1 fallbackMessage:(id)arg2 relatedToBinding:(id)arg3;
- (id)description;
- (BOOL)_isAutoCreated;
- (void)_markAutoCreated:(BOOL)arg1;

@end

@interface _NSBindingInfo : NSObject <NSCoding>
{
    NSString *_binding;
    NSString *_key;
    NSString *_partialControllerKey;
    NSString *_partialObjectKey;
    NSValueTransformer *_valueTransformer;
    NSString *_valueTransformerName;
    id _retainedController;
    id _unretainedController;
    struct __bindingFlags {
        unsigned int _requiresDirectKeyValueCodingCall:1;
        unsigned int _raisesForNotApplicableKeys:1;
        unsigned int _validatesImmediately:1;
        unsigned int _alwaysPresentsApplicationModalAlerts:1;
        unsigned int _archiveNullPlaceholder:1;
        unsigned int _archiveNoSelectionPlaceholder:1;
        unsigned int _archiveMultipleValuesSelectionPlaceholder:1;
        unsigned int _archiveNotApplicablePlaceholder:1;
        unsigned int _binderSpecificFlags:8;
        unsigned int _retainController:1;
        unsigned int _reservedBinding:15;
    } _bindingFlags;
    id _nullPlaceholder;
    id _noSelectionPlaceholder;
    id _multipleValuesSelectionPlaceholder;
    id _notApplicablePlaceholder;
    id _observingBinder;
}

- (id)initWithController:(id)arg1 retainController:(BOOL)arg2 key:(id)arg3 valueTransformer:(id)arg4 binding:(id)arg5;
- (id)initWithController:(id)arg1 retainController:(BOOL)arg2 key:(id)arg3 valueTransformerName:(id)arg4 binding:(id)arg5;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)binding;
- (id)key;
- (void)setValueTransformer:(id)arg1;
- (id)valueTransformer;
- (void)setController:(id)arg1 retainController:(BOOL)arg2;
- (id)controller;
- (void)setValueTransformerName:(id)arg1;
- (id)valueTransformerName;
- (void)setRaisesForNotApplicableKeys:(BOOL)arg1;
- (BOOL)raisesForNotApplicableKeys;
- (void)setValidatesImmediately:(BOOL)arg1;
- (BOOL)validatesImmediately;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)arg1;
- (BOOL)alwaysPresentsApplicationModalAlerts;
- (void)setBinderSpecificFlag:(BOOL)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)binderSpecificFlagAtIndex:(unsigned long long)arg1;
- (void)setPlaceholder:(id)arg1 forMarker:(id)arg2 isDefault:(BOOL)arg3;
- (id)placeholderForMarker:(id)arg1;
- (BOOL)isPlaceholderForMarkerExplicitlySet:(id)arg1;
- (BOOL)setParameter:(id)arg1 forOption:(id)arg2;
- (void)setRequiresDirectKeyValueCodingCall:(BOOL)arg1 partialControllerKey:(id)arg2 partialObjectKey:(id)arg3;
- (BOOL)requiresDirectKeyValueCodingCall;
- (id)partialControllerKey;
- (id)partialObjectKey;
- (void)setObservingBinder:(id)arg1;
- (id)observingBinder;
- (id)description;

@end

@interface _NSBinderAlertRecoveryAttempter : NSObject
{
    unsigned long long _recoveryOptionIndex;
}

- (id)init;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (unsigned long long)recoveryOptionIndex;

@end

@interface NSCustomReleaseData : NSMutableData
{
    void *_bytes;
    unsigned long long _length;
    id _releaseBytesBlock;
}

- (unsigned long long)length;
- (const void *)bytes;
- (void *)mutableBytes;
- (void)setLength:(unsigned long long)arg1;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 releaseBytesBlock:(id)arg3;
- (void)dealloc;
- (void)finalize;

@end

@interface NSBitmapImageRep : NSImageRep
{
    struct __bitmapRepFlags {
        unsigned int bitsPerPixel:8;
        unsigned int isPlanar:1;
        unsigned int explicitPlanes:1;
        unsigned int imageSourceIsIndexed:1;
        unsigned int dataLoaded:1;
        unsigned int colorModel:4;
        unsigned int tierTwoInfoIsLoaded:1;
        unsigned int respectO:1;
        unsigned int compressionFactor:14;
        unsigned int imageNumber:8;
        unsigned int bitmapFormat:3;
        unsigned int cgImageIsPrimary:1;
        unsigned int compression:20;
    } _moreRepFlags;
    unsigned int _bytesPerRow;
    id _dataObj;
    NSData *_tiffData;
    id _properties;
}

+ (id)imageUnfilteredTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
+ (void)initialize;
+ (id)_imagesWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 zone:(struct _NSZone *)arg4 expandImageContentNow:(BOOL)arg5;
+ (id)_imagesWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 zone:(struct _NSZone *)arg4 expandImageContentNow:(BOOL)arg5 includeAllReps:(BOOL)arg6;
+ (id)_imagesFromIcon:(id)arg1 inApp:(id)arg2 zone:(struct _NSZone *)arg3;
+ (id)_imagesFromURL:(id)arg1 forImage:(id)arg2 fileType:(id)arg3 extension:(id)arg4;
+ (id)imageRepsWithData:(id)arg1;
+ (id)imageRepWithData:(id)arg1;
+ (id)_imageRepsWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 expandImageContentNow:(BOOL)arg4;
+ (id)_imageRepWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3;
+ (BOOL)canInitWithData:(id)arg1;
+ (BOOL)defaultRespectOrientation;
+ (void)setDefaultRespectOrientation:(BOOL)arg1;
+ (BOOL)currentThreadRespectOrientation;
+ (void)withCurrentThreadRespectingOrientation:(BOOL)arg1 performBlock:(id)arg2;
+ (void)getTIFFCompressionTypes:(const unsigned long long **)arg1 count:(long long *)arg2;
+ (id)localizedNameForTIFFCompressionType:(unsigned long long)arg1;
+ (id)TIFFRepresentationOfImageRepsInArray:(id)arg1;
+ (id)TIFFRepresentationOfImageRepsInArray:(id)arg1 usingCompression:(unsigned long long)arg2 factor:(float)arg3;
- (void)_setBacking:(id)arg1;
- (void)_performBlockUsingBacking:(id)arg1;
- (void)_withoutChangingBackingPerformBlockUsingBackingCGImage:(id)arg1;
- (void)_becomeBackedByCGImage:(struct CGImage *)arg1;
- (void)_performBlockUsingBackingCGImage:(id)arg1;
- (void)_fromCGImage:(struct CGImage *)arg1 performBlockUsingMutableData:(id)arg2;
- (void)_withoutChangingBackingPerformBlockUsingBackingMutableData:(id)arg1;
- (void)_performBlockUsingBackingMutableData:(id)arg1;
- (BOOL)isPlanar;
- (long long)_colorSpaceModel;
- (long long)_numberOfColorComponentsNotIncludingAlpha;
- (long long)samplesPerPixel;
- (long long)numberOfPlanes;
- (long long)bitsPerPixel;
- (long long)bytesPerPlane;
- (long long)bytesPerRow;
- (unsigned long long)bitmapFormat;
- (unsigned long long)_bitmapFormat;
- (id)colorSpace;
- (void)_retagBackingWithColorSpace:(id)arg1;
- (void)_bitmapImageRep_setColorSpaceName:(id)arg1;
- (id)colorSpaceName;
- (void)setColorSpaceName:(id)arg1;
- (id)bitmapImageRepByConvertingToColorSpace:(id)arg1 renderingIntent:(long long)arg2;
- (id)bitmapImageRepByRetaggingWithColorSpace:(id)arg1;
- (BOOL)_loadTierOneInfoWithImageSource:(void *)arg1 imageNumber:(long long)arg2 properties:(struct __CFDictionary *)arg3;
- (BOOL)_loadTierOneInfoWithCGImage:(struct CGImage *)arg1;
- (void)_loadTierTwoInfoWithCGImage:(struct CGImage *)arg1;
- (BOOL)_loadTierTwoInfoIfNotYetLoaded;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bitmapFormat:(unsigned long long)arg9 bytesPerRow:(long long)arg10 bitsPerPixel:(long long)arg11;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initForIncrementalLoad;
- (id)_initWithImageSource:(void *)arg1 imageNumber:(long long)arg2 properties:(struct __CFDictionary *)arg3;
- (id)init;
- (id)_initWithSharedBitmap:(void *)arg1 rect:(struct CGRect)arg2;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bytesPerRow:(long long)arg9 bitsPerPixel:(long long)arg10;
- (id)initWithFocusedViewRect:(struct CGRect)arg1;
- (id)initWithCIImage:(id)arg1;
- (long long)incrementalLoadFromData:(id)arg1 complete:(BOOL)arg2;
- (BOOL)_loadData;
- (id)initWithData:(id)arg1;
- (void)_setSharedIdentifier:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_freeData;
- (void)_freeImage;
- (void)dealloc;
- (void)setSize:(struct CGSize)arg1;
- (BOOL)draw;
- (struct CGImage *)CGImage;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (BOOL)_wantsToBeCached;
- (void)getBitmapDataPlanes:(char **)arg1;
- (char *)bitmapData;
- (void)setColor:(id)arg1 atX:(long long)arg2 y:(long long)arg3;
- (id)colorAtX:(long long)arg1 y:(long long)arg2;
- (void)setPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (void)getPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (long long)_uncachedSize;
- (BOOL)_isValid;
- (BOOL)respectOrientation;
- (void)setRespectOrientation:(BOOL)arg1;
- (BOOL)canBeCompressedUsing:(unsigned long long)arg1;
- (void)getCompression:(unsigned long long *)arg1 factor:(float *)arg2;
- (void)setCompression:(unsigned long long)arg1 factor:(float)arg2;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(unsigned long long)arg1 factor:(float)arg2;
- (BOOL)_withHints:(id)arg1 performBlockUsingBitmapForTIFFRepresentation:(id)arg2;
- (void)colorizeByMappingGray:(double)arg1 toColor:(id)arg2 blackMapping:(id)arg3 whiteMapping:(id)arg4;

@end

@interface NSBox : NSView
{
    id _titleCell;
    id _contentView;
    struct CGSize _offsets;
    struct CGRect _borderRect;
    struct CGRect _titleRect;
    struct __bFlags {
        unsigned int borderType:2;
        unsigned int titlePosition:3;
        unsigned int backgroundTransparent:1;
        unsigned int reserved:2;
        unsigned int needsTile:1;
        unsigned int transparent:1;
        unsigned int colorAltInterpretation:1;
        unsigned int boxType:3;
        unsigned int _RESERVED:18;
    } _bFlags;
    id _unused;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setInterfaceStyle:(unsigned long long)arg1;
- (id)_tile:(BOOL)arg1;
- (void)dealloc;
- (unsigned long long)borderType;
- (unsigned long long)titlePosition;
- (unsigned long long)_effectiveTitlePosition;
- (void)setBorderType:(unsigned long long)arg1;
- (void)setTitlePosition:(unsigned long long)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)titleFont;
- (void)setTitleFont:(id)arg1;
- (struct CGRect)borderRect;
- (struct CGRect)titleRect;
- (id)titleCell;
- (struct CGSize)contentViewMargins;
- (void)setContentViewMargins:(struct CGSize)arg1;
- (BOOL)isTransparent;
- (void)setTransparent:(BOOL)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)viewDidLiveResizeFromRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)sizeToFit;
- (void)setFrameFromContentFrame:(struct CGRect)arg1;
- (id)contentView;
- (void)setContentView:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)setTitleWithMnemonic:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (BOOL)_drawRectIfEmpty;
- (void)viewWillDraw;
- (void)drawRect:(struct CGRect)arg1;
- (id)_setBackgroundTransparent:(BOOL)arg1;
- (BOOL)_backgroundTransparent;
- (void)setBoxType:(unsigned long long)arg1;
- (unsigned long long)boxType;
- (void)_setLineColor:(id)arg1;
- (id)_lineColor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSBoxAuxiliary : NSObject
{
    double borderWidth;
    double cornerRadius;
    NSColor *borderColor;
    NSColor *fillColor;
}

@end

@interface _NSBrowserHeaderClipView : NSClipView
{
    NSView *_headerView;
}

- (void)dealloc;
- (void)_pinDocRect;
@property(retain, nonatomic) NSView *headerView; // @synthesize headerView=_headerView;
- (void)_handleFrameChangeForSubview:(id)arg1;
- (void)_selfBoundsChanged;

@end

@interface _NSBrowserFlippedClipView : NSClipView
{
}

- (BOOL)isFlipped;
- (id)menuForEvent:(id)arg1;

@end

@interface _NSBrowserPreviewColumnViewController : NSBrowserColumnViewController
{
    NSViewController *_previewViewController;
}

- (void)dealloc;
- (void)setRepresentedObject:(id)arg1;
- (void)loadView;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (unsigned long long)numberOfRows;
- (long long)firstValidRowIndex;
- (id)selectionIndexes;
- (void)setSelectionIndexes:(id)arg1;
- (void)reloadData;
- (void)scrollRowToCenter:(long long)arg1;
- (id)titleOfSelectedRow;
- (id)preparedCellAtRow:(long long)arg1;
- (void)editRow:(long long)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (void)setNeedsDisplayInRow:(long long)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (double)widthThatFits;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)setMenu:(id)arg1;
@property(retain, nonatomic) NSViewController *previewViewController; // @synthesize previewViewController=_previewViewController;

@end

@interface NSBrowserTableView : NSTableView
{
    NSBrowserColumnViewController *_columnController;
    unsigned int _shouldSuppressDropHighlight:1;
    unsigned int _isColumnControllerRetained:1;
    unsigned int _usePrimaryColorForSelection:1;
    unsigned int _liveResizeImageCachingDisabled:1;
    unsigned int _reservedFlags:28;
    id _extra;
}

- (void)setNextKeyView:(id)arg1;
- (void)_primitiveSetPreviousKeyView:(id)arg1;
- (id)nextKeyView;
- (id)previousKeyView;
- (void)_setUsePrimaryColorForSelection:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)selectionShouldUsePrimaryColor;
- (void)keyDown:(id)arg1;
- (void)_selectRowsFromArrowKey:(unsigned short)arg1 withEvent:(id)arg2;
- (BOOL)_performTypeSelect:(id)arg1;
@property(readonly) NSBrowser *browser;
@property(readonly) long long columnIndex;
@property(nonatomic) NSBrowserColumnViewController *columnController;
- (BOOL)shouldSuppressDropHighlight;
- (void)setShouldSuppressDropHighlight:(BOOL)arg1;
- (void)selectAll:(id)arg1;
- (BOOL)_delegateRespondsTo_nextTypeSelectMatchFromRow;
- (BOOL)_delegateRespondsTo_typeSelectStringForTableColumn;
- (BOOL)_delegateRespondsTo_shouldTypeSelectForEvent;
- (BOOL)_supportsVariableHeightRows;
- (id)_draggingSource;
- (void)__ivar_setClickedRow:(long long)arg1 clickedColumn:(long long)arg2;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (BOOL)_dataSourceRespondsToNamesOfPromisedFilesDroppedAtDestination;
- (BOOL)_dataSourceRespondsToValidateDrop;
- (id)_columnsForDragImage;
- (void)_drawDropHighlight;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (void)dealloc;
- (BOOL)_onlyDragOnContent;
- (void)_setLiveResizeImageCachingEnabled:(BOOL)arg1;
- (BOOL)_shouldLiveResizeUseCachedImage;
- (BOOL)_columnPositionsTheSame;
- (BOOL)_delegateRespondsToShouldTrackCell;
- (BOOL)_sendShouldTrackCell:(id)arg1 forTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)resignFirstResponder;

@end

@interface _NSBrowserTableColumnViewController : NSBrowserColumnViewController <NSTableViewDelegate, NSTableViewDataSource>
{
    NSMutableArray *_selectedItems;
    NSIndexSet *_selectedIndexes;
}

- (void)dealloc;
- (id)selectedItems;
- (void)setView:(id)arg1;
- (void)loadView;
- (id)tableView;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (id)currentTypeSelectSearchString;
- (unsigned long long)numberOfRows;
- (long long)firstValidRowIndex;
- (id)selectionIndexes;
- (void)setSelectionIndexes:(id)arg1;
- (void)synchSelectionCache;
- (void)reloadData;
- (void)reloadDataForRowIndexes:(id)arg1;
- (void)scrollRowToCenter:(long long)arg1;
- (id)titleOfSelectedRow;
- (id)preparedCellAtRow:(long long)arg1;
- (void)setNeedsDisplayInRow:(long long)arg1;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)frameOfRow:(long long)arg1;
- (void)editRow:(long long)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (id)dragImageForRowsWithIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (double)widthThatFits;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
- (void)_stopAutoExpandingFlash;
- (void)_startAutoExpandingItemFlash;
- (void)_autoExpandFlashOnce;
- (void)_cancelExpandItemUnderMouse;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (void)_expandItemUnderMouse:(id)arg1;
- (BOOL)_autoExpandItemUnderCursor;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)willBeginResizingColumn:(long long)arg1;
- (void)didEndResizingColumn:(long long)arg1;
- (void)didChangeColumnSize;

@end

@interface _NSBrowserMatrixColumnViewController : NSBrowserColumnViewController
{
}

- (void)setView:(id)arg1;
- (void)loadView;
- (id)matrix;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (id)currentTypeSelectSearchString;
- (unsigned long long)numberOfRows;
- (long long)firstValidRowIndex;
- (id)selectionIndexes;
- (void)setSelectionIndexes:(id)arg1;
- (long long)selectedRow;
- (void)reloadData;
- (void)scrollRowToCenter:(long long)arg1;
- (id)titleOfSelectedRow;
- (BOOL)isLeafRow:(long long)arg1;
- (BOOL)isExpandableRow:(long long)arg1;
- (id)preparedCellAtRow:(long long)arg1;
- (void)setNeedsDisplayInRow:(long long)arg1;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)frameOfRow:(long long)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (double)widthThatFits;
- (void)sizeToFitWidth:(double)arg1;
- (void)_matrixSelectAll:(id)arg1;
- (void)willBeginResizingColumn:(long long)arg1;
- (void)didEndResizingColumn:(long long)arg1;
- (void)didChangeColumnSize;

@end

@interface NSBrowserColumnViewController : NSViewController
{
    NSBrowser *_browser;
    NSView *_columnView;
    NSViewController *_headerViewController;
    long long _columnIndex;
}

- (void)dealloc;
- (id)description;
- (void)setColumnView:(id)arg1 forcingFlippedBehavior:(BOOL)arg2;
- (void)setView:(id)arg1;
@property(nonatomic) BOOL allowsMultipleSelection;
@property(nonatomic) BOOL allowsEmptySelection;
@property(nonatomic) BOOL drawsBackground;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic) BOOL allowsTypeSelect;
- (id)currentTypeSelectSearchString;
@property(readonly, nonatomic) unsigned long long numberOfRows;
@property(readonly, nonatomic) long long firstValidRowIndex;
@property(retain, nonatomic) NSIndexSet *selectionIndexes;
- (void)willBeginResizingColumn:(long long)arg1;
- (void)didEndResizingColumn:(long long)arg1;
- (void)didChangeColumnSize;
@property(readonly) NSArray *selectedItems; // @dynamic selectedItems;
@property(readonly, nonatomic) long long selectedRow;
@property(retain, nonatomic) NSMenu *menu;
- (void)reloadData;
- (void)reloadDataForRowIndexes:(id)arg1;
- (void)scrollRowToCenter:(long long)arg1;
- (id)titleOfSelectedRow;
- (BOOL)isLeafRow:(long long)arg1;
- (BOOL)isExpandableRow:(long long)arg1;
- (id)preparedCellAtRow:(long long)arg1;
- (void)editRow:(long long)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (void)setNeedsDisplayInRow:(long long)arg1;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)frameOfRow:(long long)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (long long)numberOfChildItems;
- (id)childItemAtIndex:(long long)arg1;
- (BOOL)isLeafItem:(id)arg1;
- (id)objectValueForItem:(id)arg1;
- (double)widthThatFits;
- (void)sizeToFitWidth:(double)arg1;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1;
@property(retain, nonatomic) NSView *columnView; // @synthesize columnView=_columnView;
@property(nonatomic) long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(retain, nonatomic) NSViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) NSBrowser *browser; // @synthesize browser=_browser;

@end

@interface _NSBrowserColumnView : NSScrollView
{
    NSImageView *_imageViewForAnimationOptimization;
    NSBrowser *_tmpStashedBrowserView;
    double _markedWidth;
    struct __BrcvFlags {
        unsigned int isEmptyColumn:1;
        unsigned int hasMarkedWidth:1;
        unsigned int tileDisabled:1;
        unsigned int reserved:29;
    } _brcvFlags;
}

+ (id)columnResizeButtonImage;
- (void)dealloc;
- (id)_enclosingBrowserView;
- (void)_beginColumnAnimationOptimization;
- (void)_endColumnAnimationOptimization;
- (void)_doRemoveFromSuperviewWithOutNeedingDisplay:(BOOL)arg1;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (struct CGRect)columnResizeButtonRect;
- (void)setIsEmptyColumn:(BOOL)arg1;
- (BOOL)shouldAllowUserColumnResizing;
- (void)viewDidMoveToSuperview;
- (BOOL)preservesContentDuringLiveResize;
- (void)tile;
- (void)drawRect:(struct CGRect)arg1;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_setMarkedWidth:(double)arg1;
- (void)_markWidth;
- (void)_clearMarkedWidth;
- (BOOL)_markedWidthDiffersFromCurrentWidth;

@end

@interface _NSBrowserColumnsContainerView : NSView
{
    struct __BrccvFlags {
        unsigned int ignoreScrolling:1;
        unsigned int reserved:31;
    } _brccvFlags;
}

- (id)_enclosingBrowserView;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (void)_setIgnoringScrolling:(BOOL)arg1;
- (BOOL)_ignoringScrolling;
- (void)scrollPoint:(struct CGPoint)arg1;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (void)scrollRect:(struct CGRect)arg1 by:(struct CGSize)arg2;
- (id)menuForEvent:(id)arg1;

@end

@interface _NSBrowserScrollView : NSScrollView
{
}

- (id)initWithFrame:(struct CGRect)arg1;
- (id)_enclosingBrowserView;
- (void)_handleBoundsChangeForSubview:(id)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)drawRect:(struct CGRect)arg1;
- (void)tile;
- (void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3;
- (id)_focusRingBleedRegion;
- (void)scrollWheel:(id)arg1;

@end

@interface _NSBrowserTitlesContainerView : NSView
{
}

- (id)_enclosingBrowserView;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _NSBrowserColumnScrollHelper : NSObject
{
    _NSBrowserScrollView *_scrollView;
    _NSBrowserColumnView *_optimizableColumn;
    struct CGPoint _initialOrigin;
    struct CGRect _destinationRect;
    double _totalDistance;
    double _totalDuration;
    struct __BrcshFlags {
        unsigned int done:1;
        unsigned int animate:1;
        unsigned int shouldPostScrollNotifications:1;
        unsigned int needsEndColumnAnimationOptimization:1;
        unsigned int reserved:28;
    } _brcshFlags;
    double _startTime;
    struct __CFRunLoopTimer *_timer;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopObserver *_displayWindowForBrowserObserver;
}

- (void)_setupRunLoopTimer;
- (void)_invalidateRunLoopTimer;
- (void)dealloc;
- (void)finalize;
- (void)_scrollToPosition:(long long)arg1;
- (void)_scrollToFinalPosition;
- (void)_doAnimationStep;
- (void)_stopAnimation;
- (id)_enclosingBrowserView;
- (void)_doAnimation;
- (void)setOptimizableColumn:(id)arg1;
- (void)scrollRectToVisible:(struct CGRect)arg1 inScrollView:(id)arg2 animate:(BOOL)arg3;
- (void)changeDestinationToRect:(struct CGRect)arg1;

@end

@interface NSBrowser : NSControl
{
    id _target;
    SEL _action;
    id _delegate;
    SEL _doubleAction;
    Class _matrixClass;
    id _cellPrototype;
    struct CGSize _columnSize;
    short _numberOfVisibleColumns;
    short _minColumnWidth;
    short _firstVisibleColumn;
    short _maxVisibleColumns;
    NSMutableArray *_titles;
    NSString *_pathSeparator;
    NSMutableArray *_columns;
    id _brAuxiliaryStorage;
    NSString *_firstColumnTitle;
    NSScroller *_scroller;
    struct __Brflags {
        unsigned int firstVisibleCalculationDisabled:1;
        unsigned int prefersAllColumnUserResizing:1;
        unsigned int usesSmallScrollers:1;
        unsigned int usesSmallSizeTitleFont:1;
        unsigned int actionNeedsToBeSent:1;
        unsigned int acceptsFirstMouse:1;
        unsigned int refusesFirstResponder:1;
        unsigned int disableCompositing:6;
        unsigned int delegateSelectsCellsByRow:1;
        unsigned int allowsIncrementalSearching:1;
        unsigned int time:1;
        unsigned int hasHorizontalScroller:1;
        unsigned int prohibitEmptySel:1;
        unsigned int sendActionOnArrowKeys:1;
        unsigned int dontDrawTitles:1;
        unsigned int acceptArrowKeys:1;
        unsigned int delegateValidatesColumns:1;
        unsigned int delegateDoesNotCreateRowsInMatrix:1;
        unsigned int delegateSelectsCellsByString:1;
        unsigned int delegateSetsTitles:1;
        unsigned int delegateImplementsWillDisplayCell:1;
        unsigned int separateColumns:1;
        unsigned int titleFromPrevious:1;
        unsigned int isTitled:1;
        unsigned int reuseColumns:1;
        unsigned int allowsBranchSelection:1;
        unsigned int allowsMultipleSelection:1;
    } _brflags;
}

+ (void)initialize;
+ (Class)cellClass;
+ (Class)browserColumnViewClass;
+ (Class)previewColumnViewControllerClass;
+ (Class)tableColumnViewControllerClass;
+ (Class)matrixColumnViewControllerClass;
+ (Class)browserTableViewClass;
+ (Class)browserTableColumnClass;
+ (void)removeSavedColumnsWithAutosaveName:(id)arg1;
- (id)_browserIBMetrics;
- (long long)numberOfVisibleColumns;
- (void)_setNumVisibleColumns:(long long)arg1;
- (void)_setFirstColumnTitle:(id)arg1;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_doTiming;
- (void)updateScroller;
- (void)_scrollColumnToVisible:(long long)arg1 requireCompletelyVisible:(BOOL)arg2;
- (BOOL)_scrollColumnsForScrollerIncrementOrDecrementUsingPart:(long long)arg1;
- (void)scrollViaScroller:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (void)setMatrixClass:(Class)arg1;
- (void)setMenu:(id)arg1;
- (Class)matrixClass;
- (id)cellPrototype;
- (void)setCellPrototype:(id)arg1;
- (void)setCellClass:(Class)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (void)setAllowsBranchSelection:(BOOL)arg1;
- (BOOL)allowsBranchSelection;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)setAllowsIncrementalSearching:(BOOL)arg1;
- (BOOL)allowsIncrementalSearching;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setReusesColumns:(BOOL)arg1;
- (BOOL)reusesColumns;
- (void)_setHasHorizontalScroller:(BOOL)arg1;
- (id)_horizontalScroller;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (BOOL)hasHorizontalScroller;
- (void)setAutohidesScroller:(BOOL)arg1;
- (BOOL)autohidesScroller;
- (void)setSeparatesColumns:(BOOL)arg1;
- (BOOL)separatesColumns;
- (void)setAcceptsArrowKeys:(BOOL)arg1;
- (BOOL)acceptsArrowKeys;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_setAcceptsFirstMouse:(BOOL)arg1;
- (void)setSendsActionOnArrowKeys:(BOOL)arg1;
- (BOOL)sendsActionOnArrowKeys;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)abortEditing;
- (BOOL)_shouldForwardTypeSelectionToNextColumn;
- (void)_setShouldForwardTypeSelectionToNextColumn:(BOOL)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (id)parentForItemsInColumn:(long long)arg1;
- (id)_itemAtRow:(long long)arg1 parentItem:(id)arg2;
- (id)itemAtRow:(long long)arg1 column:(long long)arg2;
- (id)itemAtRow:(long long)arg1 inColumn:(long long)arg2;
- (long long)_numberOfChildrenOfItem:(id)arg1;
- (id)_child:(long long)arg1 ofItem:(id)arg2;
- (long long)_indexOfItem:(id)arg1 inParent:(id)arg2;
- (long long)_indexOfItem:(id)arg1 inColumn:(long long)arg2;
- (id)indexPathForItem:(id)arg1;
- (id)indexPathForColumn:(long long)arg1;
- (id)parentForItem:(id)arg1;
- (BOOL)_isLeafRow:(long long)arg1 withParentItem:(id)arg2;
- (BOOL)_isExpandableItem:(id)arg1;
- (BOOL)_isExpandableRow:(long long)arg1 withParentItem:(id)arg2;
- (BOOL)isLeafItem:(id)arg1;
- (id)_lastNonLeafColumnController;
- (id)_gdbColumnControllers;
- (BOOL)_findRow:(long long *)arg1 column:(long long *)arg2 forItem:(id)arg3;
- (void)_reloadRow:(long long)arg1 column:(long long)arg2;
- (void)reloadDataForRowIndexes:(id)arg1 inColumn:(long long)arg2;
- (void)reloadItem:(id)arg1 reloadChildren:(BOOL)arg2;
- (BOOL)_sendDelegateSelectRow:(long long)arg1 inColumn:(long long)arg2;
- (id)_loadCell:(id)arg1 atRow:(long long)arg2 col:(long long)arg3 inMatrix:(id)arg4;
- (void)_sendDelegateWillDisplayCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_sendDelegateCreateRowsForColumn:(long long)arg1 inMatrix:(id)arg2;
- (BOOL)_delegateRespondsToSelectCellsByRow;
- (BOOL)_delegateRespondsToWillDisplayCell;
- (BOOL)_delegateDoesNotCreateRowsInMatrix;
- (BOOL)_isTypeSelectRow:(long long)arg1 column:(long long)arg2;
- (id)_typeSelectString;
- (id)_loadedCellAtRow:(long long)arg1 column:(long long)arg2 inMatrix:(id)arg3;
- (id)loadedCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)_updateNumberOfTitleCellsIfNecessary:(long long)arg1;
- (void)_updateNumberOfTitleCellsIfNecessary;
- (BOOL)_shouldClipViewForTitlesCopyOnScroll;
- (BOOL)isTitled;
- (void)setTitled:(BOOL)arg1;
- (id)_titleCellOfColumn:(long long)arg1;
- (id)titleOfColumn:(long long)arg1;
- (void)_setTitle:(id)arg1 ofColumn:(long long)arg2;
- (void)setTitle:(id)arg1 ofColumn:(long long)arg2;
- (void)_setUsesSmallTitleFont:(BOOL)arg1;
- (BOOL)_shouldDrawFocus;
- (BOOL)_hasKeyboardFocus;
- (void)_setFocusRingNeedsDisplay;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)beforeDraw;
- (void)_viewWillResignFirstResponder:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)_shouldMaintainFirstResponder;
- (void)loadColumnZero;
- (BOOL)_selectCell:(id)arg1 inColumn:(long long)arg2;
- (void)_selectRowIndexes:(id)arg1 inColumn:(long long)arg2;
- (id)selectedRowIndexesInColumn:(long long)arg1;
- (void)selectRowIndexes:(id)arg1 inColumn:(long long)arg2;
- (void)selectRow:(long long)arg1 inColumn:(long long)arg2;
- (long long)selectedRowInColumn:(long long)arg1;
- (id)selectionIndexPath;
- (void)setSelectionIndexPath:(id)arg1;
- (id)selectionIndexPaths;
- (void)setSelectionIndexPaths:(id)arg1;
- (void)setPathSeparator:(id)arg1;
- (id)pathSeparator;
- (BOOL)setPath:(id)arg1;
- (id)pathToColumn:(long long)arg1;
- (id)path;
- (void)setTakesTitleFromPreviousColumn:(BOOL)arg1;
- (BOOL)takesTitleFromPreviousColumn;
- (void)validateVisibleColumns;
- (void)_setNeedsDisplayInColumn:(long long)arg1;
- (void)displayColumn:(long long)arg1;
- (void)displayAllColumns;
- (id)_newSelectionIndexesFromOldSelectedItems:(id)arg1 parentItem:(id)arg2;
- (void)_itemBasedReloadColumn:(long long)arg1;
- (void)_matrixBasedReloadColumn:(long long)arg1;
- (void)reloadColumn:(long long)arg1;
- (id)_unhookColumnSubviews;
- (void)_reattachColumnSubviews:(id)arg1;
- (void)_fixKeyViewForView:(id)arg1;
- (unsigned long long)_controlSizeForScrollers;
- (void)_syncScrollerSizeOfColumn:(id)arg1;
- (void)_setScrollerSize:(unsigned long long)arg1;
- (id)_createColumn:(struct CGRect)arg1 empty:(BOOL)arg2;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)setNextKeyView:(id)arg1;
- (void)_scrollColumnsRightBy:(long long)arg1;
- (void)scrollColumnsRightBy:(long long)arg1;
- (void)scrollColumnsLeftBy:(long long)arg1;
- (void)_scrollColumnToVisible:(long long)arg1 private:(BOOL)arg2;
- (void)_scrollFirstVisibleColumnIntoView;
- (BOOL)_useSnowLeopardBehavior;
- (BOOL)_shouldScrollStartOfColumnToVisible;
- (void)_scrollRectToVisible:(struct CGRect)arg1;
- (void)scrollColumnToVisible:(long long)arg1;
- (void)_scrollOptimizingLastColumnPlacement;
- (void)scrollRowToVisible:(long long)arg1 inColumn:(long long)arg2;
- (void)_didChangeLastColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)setLastColumn:(long long)arg1;
- (void)_ensureValidSelection;
- (void)_computeFirstVisibleColumnRequireCompletelyVisible:(BOOL)arg1;
- (void)_computeFirstCompletelyVisibleColumn;
- (void)_computeFirstMostlyVisibleColumn;
- (void)_alignFirstVisibleColumnToDocumentViewEdge:(BOOL)arg1;
- (void)didFinishColumnScrollWithHelper:(id)arg1;
- (void)_doPostColumnConfigurationDidChangeNotification:(id)arg1;
- (void)_postColumnConfigurationDidChangeNotification;
- (struct CGRect)_visibleRectOfColumns;
- (void)_setVisibleRectOfColumns:(struct CGRect)arg1;
- (void)_computeAndAlignFirstClosestVisibleColumn;
- (void)_scrollLastColumnMaxXEdgeToVisible;
- (void)_addAnimatedColumn;
- (void)_disableColumnAnimation;
- (void)_enableColumnAnimation;
- (void)_setShouldAnimateColumnScrolling:(BOOL)arg1;
- (BOOL)_shouldAnimateColumnScrolling;
- (BOOL)_userClickOrKeyInColumnShouldMaintainColumnPosition;
- (void)_addColumnWithoutChangingVisibleColumn;
- (void)_addColumnSubviewAndAnimateIfNecessary:(id)arg1;
- (void)_animateLastAddedColumnToVisible;
- (void)_setInitialColumnContentSizeOfColumn:(id)arg1;
- (BOOL)_addingOrAnimatingNewColumn;
- (id)_scrollViewForColumns;
- (void)_setScrollViewForColumns:(id)arg1;
- (id)_visitedColumnContentWidths;
- (id)_rootItem;
- (void)addColumn;
- (BOOL)_shouldShowCellExpansionForRow:(long long)arg1 column:(long long)arg2;
- (void)_setWantsRevealovers:(BOOL)arg1;
- (void)setMinColumnWidth:(double)arg1;
- (double)minColumnWidth;
- (void)setMaxVisibleColumns:(long long)arg1;
- (long long)maxVisibleColumns;
- (long long)firstVisibleColumn;
- (long long)lastVisibleColumn;
- (long long)lastColumn;
- (void)_setClickedColumn:(long long)arg1 clickedRow:(long long)arg2;
- (long long)clickedColumn;
- (long long)clickedRow;
- (long long)selectedColumn;
- (id)selectedCell;
- (id)_selectedCellsInColumn:(long long)arg1;
- (id)selectedCellInColumn:(long long)arg1;
- (id)selectedCells;
- (BOOL)isLoaded;
- (long long)_columnOfView:(id)arg1;
- (long long)columnOfMatrix:(id)arg1;
- (id)_viewInColumn:(long long)arg1;
- (id)matrixInColumn:(long long)arg1;
- (id)_columnControllerInColumn:(long long)arg1;
- (id)_containerViewOfTitles;
- (id)_containerViewOfColumns;
- (struct CGRect)frameOfColumn:(long long)arg1;
- (struct CGRect)frameOfInsideOfColumn:(long long)arg1;
- (struct CGRect)frameOfRow:(long long)arg1 inColumn:(long long)arg2;
- (BOOL)getRow:(long long *)arg1 column:(long long *)arg2 forPoint:(struct CGPoint)arg3;
- (struct CGRect)titleFrameOfColumn:(long long)arg1;
- (struct CGRect)_containerRelativeTitleFrameOfColumn:(long long)arg1;
- (struct CGRect)_containerRelativeFrameOfColumn:(long long)arg1;
- (struct CGRect)_containerRelativeFrameOfInsideOfColumn:(long long)arg1;
- (void)drawTitleOfColumn:(long long)arg1 inRect:(struct CGRect)arg2;
- (double)titleHeight;
- (void)_calcNumVisibleColumnsAndColumnSize;
- (void)_sizeDocumentViewToColumns;
- (void)_sizeDocumentViewToColumnsAndAlign;
- (void)_sizeDocumentViewToColumnsAndAlignIfNecessary:(BOOL)arg1;
- (void)_postWillScrollNotification;
- (void)_postDidScrollNotification;
- (void)_synchronizeTitlesAndColumnsViewVisibleRect;
- (void)_synchronizeTitlesAndColumnsViewWidth;
- (void)_scrollViewForColumnsDocumentViewFrameDidChange:(id)arg1;
- (void)_scrollViewForColumnsDocumentViewVisibilityChange:(id)arg1;
- (void)_scrollViewForColumnsWillTrackHorizontalScroller:(id)arg1;
- (BOOL)_forceSynchronizedScrollingAnimation;
- (void)_scrollViewForColumnsDidTrackHorizontalScroller:(id)arg1;
- (void)_setLineBorderColor:(id)arg1;
- (void)_setBorderType:(unsigned long long)arg1;
- (void)setBorderType:(unsigned long long)arg1;
- (unsigned long long)_borderType;
- (void)_tileContinuousScrollingBrowser;
- (void)tile;
- (void)updateCell:(id)arg1;
- (void)updateCellInside:(id)arg1;
- (struct CGRect)_focusRingRect;
- (BOOL)_drawRectIfEmptyWhenSubviewsCoverDirtyRect:(struct CGRect)arg1;
- (id)_imageForEmptyVerticalScroller;
- (void)_fastPathDrawEmptyColumnsForView:(id)arg1 inRect:(struct CGRect)arg2;
- (id)_imageForEmptyColumnOfSize:(struct CGSize)arg1;
- (void)_slowPathDrawEmptyColumnsForView:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_drawEmptyColumnsForView:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_drawTitlesForView:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_getMatchingRow:(long long *)arg1 forString:(id)arg2 inMatrix:(id)arg3 startingAtRow:(long long)arg4 prefixMatch:(BOOL)arg5 caseSensitive:(BOOL)arg6;
- (BOOL)_selectItemBestMatching:(id)arg1;
- (void)_bumpSelectedItem:(id)arg1;
- (long long)_firstSelectableRowInMatrix:(id)arg1 inColumn:(long long)arg2;
- (long long)_selectedOrFirstValidRowInColumn:(long long)arg1;
- (long long)_keyRowOrSelectedRowOfMatrix:(id)arg1 inColumn:(long long)arg2;
- (void)performClick:(id)arg1;
- (BOOL)_doMoveRight;
- (void)moveRight:(id)arg1;
- (BOOL)_doMoveLeft;
- (void)moveLeft:(id)arg1;
- (BOOL)_actOnKeyDown:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)resignFirstResponder;
- (id)_viewThatShouldBecomeFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_scrollColumnToLastVisible:(long long)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)selectAll:(id)arg1;
- (void)doClick:(id)arg1;
- (void)_sendQueuedAction;
- (BOOL)_matrixShouldAddColumnForColumn:(long long)arg1 matrix:(id)arg2;
- (void)_doClickAndQueueSendingOfAction:(id)arg1;
- (void)_doClickAndQueueSendingOfAction:(id)arg1 removeAndAddColumnsIfNecessary:(BOOL)arg2 movingBack:(BOOL)arg3;
- (void)_willStartTrackingMouseInMatrix:(id)arg1 withEvent:(id)arg2;
- (void)doDoubleClick:(id)arg1;
- (BOOL)sendAction;
- (struct CGSize)_calcVisibleColumnAreaAvailable;
- (id)_old_initWithCoder_NSBrowser:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_old_encodeWithCoder_NSBrowser:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)currentTypeSelectSearchString;
- (BOOL)_shouldTypeSelectForEvent:(id)arg1;
- (id)_typeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (id)_internalTypeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (long long)_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 inColumn:(long long)arg3 forString:(id)arg4;
- (long long)_internalNextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 inColumn:(long long)arg3 forString:(id)arg4;
- (void)_typeSelectScheduleEndOfSearch;
- (BOOL)_performTypeSelect:(id)arg1;
- (void)_restoreTypeSelectCellValue;
- (void)_typeSelectEndCurrentSearch;
- (BOOL)_typeSelectUndoLastSearch;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (id)_lastDraggedEventFollowing:(id)arg1;
- (id)_lastDraggedOrUpEventFollowing:(id)arg1;
- (void)setColumnResizingType:(unsigned long long)arg1;
- (unsigned long long)columnResizingType;
- (void)setPrefersAllColumnUserResizing:(BOOL)arg1;
- (BOOL)prefersAllColumnUserResizing;
- (double)columnContentWidthForColumnWidth:(double)arg1;
- (double)columnWidthForColumnContentWidth:(double)arg1;
- (double)_validateNewWidthOfColumn:(id)arg1 width:(double)arg2;
- (void)setWidth:(double)arg1 ofColumn:(long long)arg2;
- (void)setDefaultColumnWidth:(double)arg1;
- (double)defaultColumnWidth;
- (double)widthOfColumn:(long long)arg1;
- (void)_sizeMatrixOfColumnToFit:(id)arg1;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1 inColumn:(long long)arg2;
- (void)_writePersistentBrowserColumns;
- (void)_readPersistentBrowserColumns;
- (void)_autosaveColumnsIfNecessary;
- (void)setColumnsAutosaveName:(id)arg1;
- (id)columnsAutosaveName;
- (void)_setContinuousResizeNotifications:(BOOL)arg1;
- (BOOL)_continuousResizeNotifications;
- (void)_setNeedsDisplayBeginingAtColumn:(long long)arg1;
- (void)_clearVisitedColumnContentWidths;
- (void)_setNewPreferedColumnWidth:(double)arg1;
- (double)_preferedColumnWidth;
- (void)_columnResizeChangeFrameOfColumn:(id)arg1 toFrame:(struct CGRect)arg2 constrainWidth:(BOOL)arg3 resizeInfo:(struct _NSBrowserColumnResizeInfo *)arg4;
- (void)setUserColumnResizingAutoresizesWindow:(BOOL)arg1;
- (BOOL)userColumnResizingAutoresizesWindow;
- (BOOL)_shouldStretchWindowIfNecessaryForUserColumnResize;
- (BOOL)_stretchWindowIfNecessaryToFitResizedColumnWithInfo:(struct _NSBrowserColumnResizeInfo *)arg1 resizeColumnDelta:(double *)arg2;
- (void)_alignColumnForStretchedWindowWithInfo:(struct _NSBrowserColumnResizeInfo *)arg1;
- (void)_setWidth:(double)arg1 ofColumn:(long long)arg2 stretchWindow:(BOOL)arg3;
- (void)_zeroPinnedResizeColumnsBySharingDelta:(double)arg1 lastSharingColumn:(id)arg2 resizeInfo:(struct _NSBrowserColumnResizeInfo *)arg3;
- (void)_equalyResizeColumnsByDelta:(double)arg1 resizeInfo:(struct _NSBrowserColumnResizeInfo *)arg2;
- (void)_resizeColumnByDelta:(double)arg1 resizeInfo:(struct _NSBrowserColumnResizeInfo *)arg2;
- (void)_disableAutosavingAndColumnResizingNotificationsAndMark:(BOOL)arg1;
- (void)_enableAutosavingAndColumnResizingNotifications;
- (void)_resizeColumn:(id)arg1 withEvent:(id)arg2;
- (long long)_calculateSizeToFitWidthOfColumn:(long long)arg1 testLoadedOnly:(BOOL)arg2;
- (void)_sizeToFitColumn:(id)arg1 withSizeToFitType:(long long)arg2;
- (void)_sizeToFitColumn:(id)arg1 withEvent:(id)arg2;
- (void)_sizeToFitColumnMenuAction:(id)arg1;
- (BOOL)_delegateRespondsToWriteRows;
- (BOOL)_sendDelegateWriteRowsWithIndexes:(id)arg1 inColumn:(long long)arg2 toPasteboard:(id)arg3;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_draggingImageForRowsWithIndexes:(id)arg1 inColumn:(long long)arg2 withEvent:(id)arg3 offset:(struct CGPoint *)arg4;
- (void)_dragRowIndexes:(id)arg1 inColumn:(long long)arg2 withEvent:(id)arg3 pasteboard:(id)arg4 source:(id)arg5 slideBack:(BOOL)arg6;
- (BOOL)_canDragRowsWithIndexes:(id)arg1 inColumn:(long long)arg2 withEvent:(id)arg3;
- (BOOL)_performDragFromMouseDown:(id)arg1 inColumn:(long long)arg2;
- (BOOL)canDragRowsWithIndexes:(id)arg1 inColumn:(long long)arg2 withEvent:(id)arg3;
- (id)draggingImageForRowsWithIndexes:(id)arg1 inColumn:(long long)arg2 withEvent:(id)arg3 offset:(struct CGPoint *)arg4;
- (BOOL)_shouldAutoExpandItemAtRow:(long long)arg1 inColumn:(long long)arg2;
- (BOOL)_autoExpandItemUnderCursor;
- (void)_cancelAutoExpandItemUnderCursor;
- (void)registerForDraggedTypes:(id)arg1;
- (void)unregisterDraggedTypes;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)ignoreModifierKeysWhileDragging;
- (id)_dropHighlightColor;
- (id)_dropHighlightBackgroundColor;
- (id)_dropHighlightColorForEntireTableView;
- (void)_setDropHighilightColorIfSelected:(BOOL)arg1;
- (void)_drawDropHighlightBackgroundAroundRect:(struct CGRect)arg1;
- (void)_beforeDrawCell:(id)arg1 atRow:(long long)arg2 col:(long long)arg3 clipRect:(struct CGRect)arg4;
- (void)_drawDropHighlightAroundRect:(struct CGRect)arg1 isSelected:(BOOL)arg2 rounded:(BOOL)arg3;
- (void)_drawDropHighlightAboveRect:(struct CGRect)arg1;
- (void)_beginColumnDragging;
- (void)_setDropTargetColumn:(long long)arg1 targetRow:(long long)arg2 targetDropOperation:(unsigned long long)arg3 dragOperation:(unsigned long long)arg4;
- (void)_markAutoExpandedItemWithDragInfo:(id)arg1;
- (id)_uncachedLastSelectedIndexSetForItem:(id)arg1;
- (void)_restoreLastSelectedItemsBeforeAutoExpand;
- (void)_releaseAutoExpandingItemsCache;
- (void)_collapseAutoExpandedItems;
- (void)_commitAutoExpandedItems;
- (void)_endColumnDragging;
- (void)_drawDropHighlightAroundColumnWithRect:(struct CGRect)arg1;
- (void)_drawDropHighlight;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (void)viewWillDraw;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (void)_setNeedsDisplayForTargetRow:(long long)arg1 column:(long long)arg2 operation:(unsigned long long)arg3;
- (BOOL)_determineIsSameTargetForDragInfo:(id)arg1;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (BOOL)_delegateRepondsToValidateDrop;
- (void)_sendDelegateValidateDropForDragInfo:(id)arg1;
- (void)_validateDropForDragInfo:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)_scheduleCollapsingAutoExpandedItems;
- (void)draggingEnded:(id)arg1;
- (BOOL)_sendDelegateAcceptDropForDragInfo:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)_delegateRespondsToNamesOfPromisedFilesDroppedAtDestination;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (BOOL)_shouldAutoScrollForPoint:(struct CGPoint)arg1;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (void)editItemAtIndexPath:(id)arg1 withEvent:(id)arg2 select:(BOOL)arg3;
- (id)_gdbLeafItemViewControllerByItem;
- (void)_clearLeafControllers;
- (BOOL)_hasLeafViewControllerForItem:(id)arg1;

@end

@interface _NSBrowserAuxiliary : NSObject
{
    _NSBrowserScrollView *_scrollViewForColumns;
    NSClipView *_clipViewForTitles;
    _NSBrowserColumnScrollHelper *_scrollToPointHelper;
    long long _scrollNotificationDisableCount;
    long long _columnAnimationDisabledCount;
    NSMatrix *_handlingViewSingleActionForView;
    NSEvent *_eventBeforeHandlingSingleActionForView;
    double _preferedColumnWidthToArchive;
    NSMutableArray *_visitedColumnContentWidths;
    long long _columnResizingNotificationDisabledCount;
    unsigned long long _columnResizingType;
    NSString *_columnsAutosaveName;
    struct __BrFlags2 {
        unsigned int delegateShouldSizeColumnToWidth:1;
        unsigned int delegateSizeToFitWidtOfColumn:1;
        unsigned int shouldAnimateColumnScrolling:1;
        unsigned int tilingDisabled:1;
        unsigned int setPathOptimizationOn:1;
        unsigned int readingSavedColumns:1;
        unsigned int recomputeExistingColumnPositions:1;
        unsigned int waitingToSendDoubleActionAtEndOfScroll:1;
        unsigned int waitingToSendSingleActionAtEndOfScroll:1;
        unsigned int waitingToSendConfigChangeNotificationAtEndOfScroll:1;
        unsigned int continuousResizeNotifications:1;
        unsigned int sendDoubleAction:1;
        unsigned int forceSynchronizedScrollingAnimation:1;
        unsigned int useCustomBorderType:1;
        unsigned int customBorderType:3;
        unsigned int addingNewColumn:1;
        unsigned int userColumnResizingAutoresizesWindow:1;
        unsigned int delegateProvidesItems:1;
        unsigned int isAutoExpandingItems:1;
        unsigned int delegateProvidesLeafViewController:1;
        unsigned int delegateProvidesHeaderViewController:1;
        unsigned int delegateDidChangeLastColumn:1;
        unsigned int delegateRootItemForBrowser:1;
        unsigned int forwardTypeSelectionToNextColumn:1;
        unsigned int reloadingColumnZero:1;
        unsigned int reserved:5;
    } _brflags2;
    NSMutableArray *_unusedColumns;
    unsigned long long _draggingSourceOperationMaskForLocal;
    unsigned long long _draggingSourceOperationMaskForNonLocal;
    _NSBrowserDropDestContext *_dropContext;
    _NSBrowserDragSourceContext *_dragSourceContext;
    _NSTypeSelectData *_typeSelectData;
    NSColor *_backgroundColor;
    long long _clickedColumn;
    long long _clickedRow;
    NSMutableArray *_autoExpandOriginalSelection;
    NSMutableArray *_autoExpandingLastSelectedItems;
    id _autoExpandDraggingSource;
    NSMutableArray *_columnControllers;
    NSImage *_emptyVerticalSrollerImageCache;
    void *_reserved;
    NSMapTable *_leafItemViewControllerByItem;
    double _rowHeight;
}

@end

@interface _NSBrowserDragSourceContext : NSObject
{
    long long draggedColumn;
    NSIndexSet *draggedRows;
}

@end

@interface _NSBrowserDropDestContext : NSObject
{
    long long targetColumn;
    long long targetRow;
    unsigned long long targetDropOperation;
    unsigned long long dragOperation;
    long long lastTargetRow;
    long long lastTargetColumn;
    unsigned long long lastDragOperationMask;
    unsigned long long lastDropOperation;
    BOOL lastOpInTopHalf;
}

- (id)init;

@end

@interface _NSBrowserBranchImageCell : NSImageCell
{
}

- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;

@end

@interface NSBrowserBinder : NSBinder
{
    struct ___browserBinderFlags {
        unsigned int _ignoreChanges:1;
        unsigned int _reservedOutlineViewBinder:31;
    } _browserBinderFlags;
    NSArray *_selectedIndexPaths;
    _NSTreeNodeObservingTracker *_treeNodeObservingTracker;
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)bindingCategory;
+ (id)bindingsForObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)selectedIndexPaths;
- (void)setSelectedIndexPaths:(id)arg1;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasBroken;
- (void)_updateObservingRegistration:(BOOL)arg1;
- (void)_connectionWasEstablished;
- (void)_resumeObservationNotificationProcessing;
- (void)_redisplayCellForNode:(id)arg1;
- (id)_selectionIndexPathsInBrowser:(id)arg1;
- (void)performAction:(id)arg1;
- (id)indexPathFromSelectionInBrowser:(id)arg1 upToColumn:(unsigned long long)arg2;
- (void)adjustMatrix:(id)arg1 numberOfRows:(unsigned long long)arg2;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (void)_updateSelectionIndexPaths:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;

@end

@interface NSBrowserCell : NSCell
{
}

+ (void)initialize;
+ (id)branchImage;
+ (id)highlightedBranchImage;
- (void)_setBranchImageEnabled:(BOOL)arg1;
- (BOOL)_branchImageEnabled;
- (id)_enclosingBrowserForControlView:(id)arg1;
- (id)_browserBackgroundColorWithView:(id)arg1;
- (int)_browserFillStyle;
- (long long)_fillSurfaceBackgroundStyleWithView:(id)arg1;
- (id)_currentBranchImageWithView:(id)arg1;
- (id)_currentImageWithView:(id)arg1;
- (id)_currentImage;
- (struct CGSize)_imageReservedSize;
- (struct CGSize)_branchImageReservedSize;
- (struct CGRect)_branchImageReservedRectForBounds:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_branchImageRectForBounds:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_imageReservedRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_browserCell_imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_titleReservedRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setAlternateImage:(id)arg1;
- (id)alternateImage;
- (BOOL)isLeaf;
- (void)setLeaf:(BOOL)arg1;
- (BOOL)isLoaded;
- (BOOL)_isLoaded;
- (void)setLoaded:(BOOL)arg1;
- (void)reset;
- (void)set;
- (BOOL)_checkLoaded:(id)arg1 rect:(const struct CGRect *)arg2 highlight:(long long)arg3;
- (id)highlightColorInView:(id)arg1;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawLiveResizeHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawFillWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (long long)interiorBackgroundStyle;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)dealloc;

@end

@interface NSButton : NSControl <NSUserInterfaceValidations>
{
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)alternateTitle;
- (void)setAlternateTitle:(id)arg1;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (id)attributedAlternateTitle;
- (void)setAttributedAlternateTitle:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (unsigned long long)imageScaling;
- (void)setImageScaling:(unsigned long long)arg1;
- (void)setButtonType:(unsigned long long)arg1;
- (long long)state;
- (void)setState:(long long)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (BOOL)isTransparent;
- (void)setTransparent:(BOOL)arg1;
- (id)_focusRingBleedRegion;
- (void)setPeriodicDelay:(float)arg1 interval:(float)arg2;
- (void)getPeriodicDelay:(float *)arg1 interval:(float *)arg2;
- (id)keyEquivalent;
- (void)setKeyEquivalent:(id)arg1;
- (unsigned long long)keyEquivalentModifierMask;
- (void)setKeyEquivalentModifierMask:(unsigned long long)arg1;
- (void)highlight:(BOOL)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)_keyEquivalentModifierMaskMatchesModifierFlags:(unsigned long long)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_canBecomeDefaultButton;
- (id)_recursiveFindDefaultButtonCell;
- (id)_setWindow:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)shiftModifySelection:(id)arg1;
- (void)altModifySelection:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)_maybeSubstitutePopUpButton;
- (id)initWithCoder:(id)arg1;
- (void)setSound:(id)arg1;
- (id)sound;
- (void)_setSound:(id)arg1;
- (id)_sound;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface NSButtonCell : NSActionCell
{
    NSString *_altContents;
    id _sound;
    NSString *_keyEquivalent;
    struct __BCFlags2 {
        unsigned int bezelStyle:3;
        unsigned int showsBorderOnlyWhileMouseInside:1;
        unsigned int mouseInside:1;
        unsigned int bezelStyle2:1;
        unsigned int imageScaling:2;
        unsigned int keyEquivalentModifierMask:24;
    } _bcFlags2;
    unsigned short _periodicDelay;
    unsigned short _periodicInterval;
    struct __BCFlags {
        unsigned int alternateMnemonicLocation:8;
        unsigned int useButtonImageSource:1;
        unsigned int reserved:2;
        unsigned int suppressAXValueChangeNote:1;
        unsigned int doesNotDimImage:1;
        unsigned int inset:2;
        unsigned int transparent:1;
        unsigned int lastState:1;
        unsigned int hasKeyEquivalentInsteadOfImage:1;
        unsigned int imageSizeDiff:1;
        unsigned int imageAndText:1;
        unsigned int bottomOrLeft:1;
        unsigned int horizontal:1;
        unsigned int imageOverlaps:1;
        unsigned int bordered:1;
        unsigned int drawing:1;
        unsigned int lightByGray:1;
        unsigned int lightByBackground:1;
        unsigned int lightByContents:1;
        unsigned int changeGray:1;
        unsigned int changeBackground:1;
        unsigned int changeContents:1;
        unsigned int pushIn:1;
    } _bcFlags;
    NSImage *_normalImage;
    id _alternateImageOrKeyEquivalentFont;
}

+ (void)initialize;
- (void)_commonInit;
- (id)init;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)_altContents;
- (void)_setAltContents:(id)arg1;
- (id)_convertToText:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (void)setFont:(id)arg1;
- (id)alternateTitle;
- (void)setAlternateTitle:(id)arg1;
- (id)attributedAlternateTitle;
- (void)setAttributedAlternateTitle:(id)arg1;
- (long long)compare:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (BOOL)imageDimsWhenDisabled;
- (void)setImageDimsWhenDisabled:(BOOL)arg1;
- (unsigned long long)imageScaling;
- (void)setImageScaling:(unsigned long long)arg1;
- (id)sound;
- (void)setSound:(id)arg1;
- (id)_sound;
- (void)_setSound:(id)arg1;
- (id)keyEquivalent;
- (void)setKeyEquivalent:(id)arg1;
- (unsigned long long)keyEquivalentModifierMask;
- (void)setKeyEquivalentModifierMask:(unsigned long long)arg1;
- (id)keyEquivalentFont;
- (void)setKeyEquivalentFont:(id)arg1;
- (void)setKeyEquivalentFont:(id)arg1 size:(double)arg2;
- (void)getPeriodicDelay:(float *)arg1 interval:(float *)arg2;
- (void)setPeriodicDelay:(float)arg1 interval:(float)arg2;
- (BOOL)_needsOutline;
- (BOOL)acceptsFirstResponder;
- (BOOL)_acceptsFirstMouseForEvent:(id)arg1 inView:(id)arg2;
- (BOOL)isOpaque;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)setState:(long long)arg1;
- (void)_setNeedsStateUpdate:(id)arg1;
- (long long)nextState;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (id)attributedStringValue;
- (int)intValue;
- (void)setIntValue:(int)arg1;
- (long long)integerValue;
- (void)setIntegerValue:(long long)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (double)doubleValue;
- (void)setDoubleValue:(double)arg1;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)arg1;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)setButtonType:(unsigned long long)arg1;
- (long long)highlightsBy;
- (void)setHighlightsBy:(long long)arg1;
- (BOOL)_highlightsWithHighlightRect;
- (long long)showsStateBy;
- (void)setShowsStateBy:(long long)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (BOOL)isTransparent;
- (void)setTransparent:(BOOL)arg1;
- (void)_updateMouseTracking;
- (void)updateTrackingAreaWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)showsBorderOnlyWhileMouseInside;
- (void)setShowsBorderOnlyWhileMouseInside:(BOOL)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (unsigned long long)bezelStyle;
- (void)setBezelStyle:(unsigned long long)arg1;
- (long long)cellAttribute:(unsigned long long)arg1;
- (void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2;
- (long long)_initialBackgroundStyleCompatibilityGuess;
- (long long)interiorBackgroundStyle;
- (BOOL)_preferAlternateContent;
- (BOOL)_preferAlternateContentForImage;
- (BOOL)_shouldShowFocus;
- (BOOL)_hasCustomFocusMask;
- (unsigned long long)_preferredFocusLocationMask;
- (BOOL)_preferOnArtForBezel;
- (BOOL)_templateImageShouldPunchHoleInBezel;
- (struct __CFDictionary *)_coreUIBezelDrawOptionsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_preeffectBaseImage:(id *)arg1 state:(unsigned long long *)arg2 backgroundStyle:(unsigned long long *)arg3;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_minCellSize;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)setControlView:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_configureAndDrawImageWithRect:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2 controlView:(id)arg3;
- (void)_configureAndDrawTitleWithRect:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2 controlView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)_shouldTweakRoundingBehaviorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawCustomFocusMaskWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_updateMouseInside:(BOOL)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (id)_startSound;
- (void)_setMouseTrackingInRect:(struct CGRect)arg1 ofView:(id)arg2;
- (void)_clearMouseTracking;
- (struct CGRect)_trackingBoundsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)performClick:(id)arg1;
- (BOOL)_useHitTestInTrackMouse;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)_attributedStringForDrawing;
- (unsigned long long)gradientType;
- (void)setGradientType:(unsigned long long)arg1;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)setAlternateMnemonicLocation:(unsigned long long)arg1;
- (unsigned long long)alternateMnemonicLocation;
- (id)alternateMnemonic;
- (void)setAlternateTitleWithMnemonic:(id)arg1;

@end

@interface NSButtonImageSource : NSObject <NSCoding, NSCopying>
{
    NSMutableDictionary *_buttonImages;
    struct CGSize _imageSize;
    struct CGSize _focusRingImageSize;
    struct {
        unsigned int hasAlpha:1;
        unsigned int fullEncoding:1;
        unsigned int reserved:30;
    } _bisFlags;
    int _reserved1;
    int _reserved2;
    int _reserved3;
}

+ (void)initialize;
+ (id)buttonImageSourceWithName:(id)arg1;
+ (BOOL)archiveButtonImageSourceWithName:(id)arg1 toDirectory:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)imageForState:(struct NSButtonState)arg1;
- (id)focusRingImageForState:(struct NSButtonState)arg1;
- (unsigned long long)bezelStyleForState:(struct NSButtonState)arg1;
- (BOOL)isBorderedForState:(struct NSButtonState)arg1;
- (BOOL)isOpaqueForState:(struct NSButtonState)arg1;
- (BOOL)useDisabledEffectForState:(struct NSButtonState)arg1;
- (BOOL)useHighlightEffectForState:(struct NSButtonState)arg1;
- (struct CGSize)imageSize;
- (struct CGSize)focusRingImageSize;
- (BOOL)hasImageWithAlpha;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface _NSButtonImage : NSObject <NSCoding>
{
    NSImage *image;
    NSImage *focusRingImage;
    unsigned long long bezelStyle;
    BOOL isBordered;
    BOOL isOpaque;
    BOOL useDisabledEffect;
    BOOL useHighlightEffect;
}

+ (void)initialize;
+ (id)image:(id)arg1 focus:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCGImageRep : NSImageRep
{
    struct CGImage *_cgImage;
    unsigned int reserved1;
    unsigned int reserved2;
    unsigned int reserved3;
    unsigned int reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithFocusedViewRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct CGImage *)CGImage;
- (BOOL)_isValid;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct CGPoint)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;

@end

@interface NSCGSContext : NSGraphicsContext
{
    struct CGContext *_cgsContext;
}

+ (id)graphicsContextWithAttributes:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)saveGraphicsState;
- (void)restoreGraphicsState;
- (void)flushGraphics;
- (struct CGContext *)_swapContextForCarbonDrawing:(struct CGContext *)arg1;
- (void *)graphicsPort;
- (unsigned int)windowID;
- (void)_invalidate;
- (void)_releaseCIContext;
- (BOOL)isFlipped;

@end

@interface NSCIImageRep : NSImageRep
{
    CIImage *_ciImage;
}

+ (void)initialize;
+ (id)imageRepWithCIImage:(id)arg1;
- (id)init;
- (id)initWithCIImage:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)CIImage;
- (BOOL)_isValid;
- (id)description;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct CGPoint)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4 respectFlipped:(BOOL)arg5 hints:(id)arg6;

@end

@interface NSCachedImageRep : NSImageRep
{
    struct CGPoint _origin;
    NSWindow *_window;
    void *_cache;
}

+ (void)initialize;
+ (BOOL)_deprecated_hasReversedFlippednessInFlippedImages;
- (id)init;
- (id)initWithWindow:(id)arg1 rect:(struct CGRect)arg2;
- (id)_initWithSharedKitWindow:(long long)arg1 rect:(struct CGRect)arg2;
- (id)initWithSize:(struct CGSize)arg1 depth:(int)arg2 separate:(BOOL)arg3 alpha:(BOOL)arg4;
- (id)_initWithSize:(struct CGSize)arg1 depth:(int)arg2 separate:(BOOL)arg3 alpha:(BOOL)arg4 allowDeep:(BOOL)arg5;
- (id)initWithCGImage:(struct CGImage *)arg1 drawingRect:(struct CGRect)arg2 applicableForRect:(struct CGRect)arg3 context:(id)arg4 hints:(id)arg5;
- (void)dealloc;
- (void)finalize;
- (void)lockFocusFlipped:(BOOL)arg1;
- (void)unlockFocus;
- (BOOL)_isCachedSeparately;
- (BOOL)_isValid;
- (id)window;
- (struct CGRect)_logicalWindowSpaceRect;
- (struct CGRect)rect;
- (BOOL)isApplicableForRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3;
- (BOOL)_canDrawOutsideOfItsBounds;
- (id)_copyNSCGImageRep;
- (BOOL)draw;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (void *)_cache;
- (BOOL)_transferCache:(id)arg1;
- (void)_resizeCache:(struct CGSize)arg1 cachedSeparately:(BOOL)arg2 bps:(long long)arg3 numColors:(long long)arg4 hasAlpha:(BOOL)arg5;
- (void)_setKeepCacheWindow:(BOOL)arg1;
- (BOOL)_keepCacheWindow;
- (id)_cachedImageRepByResizingToSize:(struct CGSize)arg1 rescalingContent:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)_computeParams;
- (void)setAlpha:(BOOL)arg1;
- (BOOL)hasAlpha;
- (id)colorSpaceName;
- (long long)bitsPerSample;
- (long long)pixelsWide;
- (long long)pixelsHigh;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_withHints:(id)arg1 performBlockUsingBitmapForTIFFRepresentation:(id)arg2;

@end

@interface NSCarbonMenuImpl : NSObject
{
    NSMenu *_menu;
    void *_initialMenuRef;
    void *_principalMenuRef;
    struct OpaqueEventHandlerRef *_menuEventHandler;
    NSMutableArray *_checkoutTokens;
    long long customTextDrawingClientCount;
    long long customContentDrawingClientCount;
    long long customViewClientCount;
    unsigned long long currentMenuUpdateFlags;
    struct {
        unsigned int menuRefHasEverExisted:1;
        unsigned int menuRefCheckedOutForMainMenu:1;
        unsigned int menuRefCheckedOutAsSubmenu:1;
        unsigned int eventsPopulate:1;
        unsigned int eventsUpdateStatus:1;
        unsigned int eventsCommandProcess:1;
        unsigned int eventsOpen:1;
        unsigned int eventsClosed:1;
        unsigned int eventsDrawText:1;
        unsigned int eventsDrawContent:1;
        unsigned int populateReasonTokens:3;
        unsigned int RESERVED:19;
    } _mFlags;
    id _menuImplReserved;
}

+ (void)prepareForCarbonMenuBar;
+ (void)setupForNoMenuBar;
+ (void)initialize;
+ (int)_globalCarbonBeginOrEndTrackingEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
+ (int)_globalCarbonCommandProcessEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
+ (void)_didChangeHelpMenuFrom:(id)arg1 to:(id)arg2;
+ (id)_currentTrackingInfo;
- (void)setMenu:(id)arg1;
- (id)menu;
- (void)_itemChanged:(long long)arg1;
- (void)_itemAdded:(long long)arg1;
- (void)_itemRemoved:(long long)arg1;
- (void)performActionWithHighlightingForItemAtIndex:(long long)arg1;
- (void)performMenuAction:(SEL)arg1 withTarget:(id)arg2;
- (void)setupCarbonMenuBar;
- (void)setAsMainCarbonMenuBar;
- (void)clearAsMainCarbonMenuBar;
- (void)popUpMenu:(id)arg1 atLocation:(struct CGPoint)arg2 width:(double)arg3 forView:(id)arg4 withSelectedItem:(long long)arg5 withFont:(id)arg6;
- (void)popUpMenu:(id)arg1 atLocation:(struct CGPoint)arg2 width:(double)arg3 forView:(id)arg4 withSelectedItem:(long long)arg5 withFont:(id)arg6 withFlags:(unsigned long long)arg7 withOptions:(id)arg8;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3 withFont:(id)arg4;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3;
- (id)window;
- (void)_dismissMenuBecauseWindowBecameMain:(id)arg1;
- (void)_carbonSetToolTip:(id)arg1 forCarbonIndex:(long long)arg2;
- (void)_carbonApplyImage:(id)arg1 forItem:(id)arg2 forCarbonIndex:(long long)arg3 withApplicationMask:(unsigned long long)arg4;
- (void)_carbonUpdateMenuItemKeyEquivalentForItem:(id)arg1 atCarbonIndex:(long long)arg2 withVirtualKeyCode:(unsigned short)arg3 keyEquivalent:(id)arg4;
- (BOOL)_isMainMenu;
- (id)_menuItemFromCarbonEventViaParamMenuItemIndex:(struct OpaqueEventRef *)arg1;
- (id)_menuItemFromCarbonEventViaParamMenuItemIndexRequiringNonNull:(struct OpaqueEventRef *)arg1;
- (int)_carbonPopulateEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonOpenEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonCloseEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonTargetItemEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonUpdateStatusEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonMenuItemSelectedEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonCommandProcessEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonMeasureItemTextEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2 measuringHeight:(BOOL)arg3;
- (int)_carbonMeasureItemContentEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2 measuringHeight:(BOOL)arg3;
- (void)_carbonDrawLimitedViewForMenuItem:(id)arg1 withEvent:(struct OpaqueEventRef *)arg2;
- (void)_carbonDrawStateImageForMenuItem:(id)arg1 withEvent:(struct OpaqueEventRef *)arg2;
- (void)_carbonDrawAttributedTitleForMenuItem:(id)arg1 withEvent:(struct OpaqueEventRef *)arg2;
- (int)_carbonDrawItemContentEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)_carbonDrawItemTextEvent:(struct OpaqueEventRef *)arg1 handlerCallRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (unsigned int)_menuRefAttributes;
- (void)_beginHandlingEvents:(const struct EventTypeSpec *)arg1 count:(unsigned long long)arg2;
- (void)_endHandlingEvents:(const struct EventTypeSpec *)arg1 count:(unsigned long long)arg2;
- (void)_beginOrEndHandling:(BOOL)arg1 events:(const struct EventTypeSpec *)arg2 count:(unsigned long long)arg3;
- (void)_installCarbonMenuEventHandlers;
- (void)_applyAccessibilityOverrides:(id)arg1 toCarbonIndex:(unsigned short)arg2;
- (struct OpaqueMenuRef *)_createMenuRef;
- (void)_destroyMenuRefCarbonObjectsOnly;
- (void)_destroyMenuRef;
- (void)_destroyMenuRefIfNotCheckedOut;
- (void)_setSupermenuHasMenuRef:(BOOL)arg1;
- (BOOL)_carbonMenuHasBeenInstantiatedAndPopulated;
- (void)_instantiateCarbonMenu;
- (void)_privatePopulateCarbonMenu;
- (BOOL)_populatePrivatelyIfNecessary;
- (void)_carbonMenuInsertItem:(id)arg1 atCarbonIndex:(unsigned short)arg2;
- (unsigned int)_menuItemCommandID;
- (void)_changeFlags:(unsigned int)arg1 forItemAtCocoaIndex:(unsigned long long)arg2 isAddingFlags:(BOOL)arg3;
- (void)_changeCustomTextDrawingCountBy:(long long)arg1 contentCountBy:(long long)arg2;
- (void)_changeCustomViewClientCountBy:(long long)arg1;
- (void)_updateEventHandlerClientCounts;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeEnabledStateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeNextItemIsAlternateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeSubmenuFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeTitleFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeMenuTitleFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAttributedTitleFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeFontFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeActionFrom:(SEL)arg3 to:(SEL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeStateImageFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeImageFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentVirtualKeyCodeFrom:(unsigned short)arg3 to:(unsigned short)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentModifierMaskFrom:(unsigned long long)arg3 to:(unsigned long long)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAlternateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeIndentFrom:(long long)arg3 to:(long long)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeTooltipFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeCustomViewFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeCustomViewHandlesEventsFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeHiddenFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAccessibilityOverriddenAttribute:(id)arg3 from:(id)arg4 to:(id)arg5;
- (void)_fireMenuDidChangeAccessibilityOverriddenAttribute:(id)arg1 from:(id)arg2 to:(id)arg3;
- (void)_fireMenuDidChangePluginInsertionModeFrom:(long long)arg1 to:(long long)arg2;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAccessibilityOverriddenAttributesFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeDelegateFrom:(id)arg3 to:(id)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeShowsStateColumnFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuDidChangeAutoenablesFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_fireMenuDidChangeCondensesSeparatorsFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_fireMenuDidChangeUserInterfaceLayoutDirectionFrom:(long long)arg1 to:(long long)arg2;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeSeparatorStatusFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_fireMenuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeRespectsKeyEquivalentWhileHiddenFrom:(BOOL)arg3 to:(BOOL)arg4;
- (struct OpaqueMenuRef *)_principalMenuRef;
- (struct OpaqueMenuRef *)_principalMenuRefCreateIfNecessary;
- (struct OpaqueMenuRef *)_initialMenuRef;
- (struct OpaqueMenuRef *)_initialMenuRefCreateIfNecessary;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeEnabledStateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeSubmenuFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeActionFrom:(SEL)arg3 to:(SEL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeStateImageFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeImageFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentVirtualKeyCodeFrom:(unsigned short)arg3 to:(unsigned short)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeKeyEquivalentModifierMaskFrom:(unsigned long long)arg3 to:(unsigned long long)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAlternateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeNextItemIsAlternateFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeIndentFrom:(long long)arg3 to:(long long)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeTitleFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAttributedTitleFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeFontFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeTooltipFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeCustomViewFrom:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeCustomViewHandlesEventsFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeHiddenFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuDidChangeTitleFrom:(id)arg1 to:(id)arg2;
- (void)_menuDidChangeDelegateFrom:(id)arg1 to:(id)arg2;
- (void)_menuDidChangeShowsStateColumnFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_menuDidChangeAutoenablesFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_menuDidChangeUserInterfaceLayoutDirectionFrom:(long long)arg1 to:(long long)arg2;
- (void)_menuDidChangeCondensesSeparatorsFrom:(BOOL)arg1 to:(BOOL)arg2;
- (void)_menuDidChangeAccessibilityOverriddenAttribute:(id)arg1 from:(id)arg2 to:(id)arg3;
- (void)_menuDidChangePluginInsertionModeFrom:(long long)arg1 to:(long long)arg2;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeAccessibilityOverriddenAttribute:(id)arg3 from:(id)arg4 to:(id)arg5;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeSeparatorStatusFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_menuItem:(id)arg1 atIndex:(unsigned long long)arg2 didChangeRespectsKeyEquivalentWhileHiddenFrom:(BOOL)arg3 to:(BOOL)arg4;
- (void)_itemAcquiredMagicAppleMenuStatus:(id)arg1;
- (void)_itemLostMagicAppleMenuStatus:(id)arg1;
- (void)_menuDidChangeWidthFrom:(double)arg1 to:(double)arg2;
- (void)_limitedViewMenuItemWantsRedisplay:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)_menuDidChangeFontFrom:(id)arg1 to:(id)arg2;
- (struct CGSize)_maximumSizeForScreen:(id)arg1;
- (void)_linkShortcut;
- (void)_unlinkShortcut;
- (BOOL)_isLinkedToShortcut;
- (void)_menuAcquiredMainMenuStatus;
- (void)_menuLostMainMenuStatus;
- (void)_menuItem:(id)arg1 wasRemovedFromPreviousIndex:(unsigned long long)arg2;
- (void)_menuDidRemoveAllItems:(id)arg1;
- (void)_menuItem:(id)arg1 wasAddedToNewIndex:(unsigned long long)arg2;
- (BOOL)_menuRefIsCheckedOut;
- (struct OpaqueMenuRef *)_checkoutMenuRefWithToken:(id)arg1 creating:(BOOL)arg2 populating:(BOOL)arg3;
- (void)_returnMenuRefWithToken:(id)arg1;
- (BOOL)_menuRefIsCheckedOutWithToken:(id)arg1;
- (id)_menuRefStatus;
- (void)dealloc;
- (id)_trackingInfo;
- (unsigned long long)_currentMenuUpdateFlags;
- (void)_setCurrentMenuUpdateFlags:(unsigned long long)arg1;
- (BOOL)_popUpMenuPositioningItem:(id)arg1 atCocoaIndex:(unsigned long long)arg2 atLocation:(struct CGPoint)arg3 inView:(id)arg4;
- (struct _NSCarbonMenuSearchReturn)_menuItemWithKeyEquivalentMatchingEventRef:(struct OpaqueEventRef *)arg1;

@end

@interface NSTrackingInfoImpl : NSObject <NSMenuTrackingInfo>
{
    NSMenu *_menu;
    NSMenuItem *_selectedItem;
    NSMenuItem *_targetedItem;
    struct CGRect _targetedItemFrame;
}

- (id)description;
- (void)dealloc;
@property(readonly) struct CGRect targetedItemFrame; // @synthesize targetedItemFrame=_targetedItemFrame;
@property(readonly) NSMenuItem *targetedItem; // @synthesize targetedItem=_targetedItem;
@property(readonly) NSMenuItem *selectedItem; // @synthesize selectedItem=_selectedItem;
@property(readonly) NSMenu *menu; // @synthesize menu=_menu;

@end

@interface NSCarbonWindow : NSWindow
{
    struct OpaqueWindowPtr *_windowRef;
    BOOL _windowRefIsOwned;
    void *_handleEventUPP;
    struct OpaqueEventHandlerRef *_eventHandler;
    BOOL _passingCarbonWindowActivationEvents;
    BOOL _forceNotKeyWindowForInputContext;
    BOOL _handlingCarbonWindowActivationEvents;
}

+ (Class)frameViewClassForStyleMask:(unsigned long long)arg1;
+ (double)_scaleFactorForStyleMask:(unsigned long long)arg1;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)arg1 takingOwnership:(BOOL)arg2 disableOrdering:(BOOL)arg3;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)arg1 takingOwnership:(BOOL)arg2;
- (void)_cleanup;
- (void)dealloc;
- (void)finalize;
- (struct OpaqueWindowPtr *)windowRef;
- (BOOL)_hasWindowRef;
- (BOOL)_managesWindowRef;
- (void)_removeWindowRef;
- (void)_setWindowRef:(struct OpaqueWindowPtr *)arg1;
- (unsigned int)_carbonWindowClass;
- (BOOL)reconcileToCarbonWindowBounds;
- (void)sendSuperEvent:(id)arg1;
- (void)_postCarbonWindowActivateEvent:(BOOL)arg1 makeKeyWindow:(BOOL)arg2;
- (void)_cancelKey:(id)arg1;
- (void)_commonAwake;
- (id)_destroyRealWindow:(BOOL)arg1;
- (void)_oldPlaceWindow:(struct CGRect)arg1;
- (void)_reallyDoOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5 isModal:(BOOL)arg6;
- (void)_termWindowIfOwner;
- (void)_windowMovedToRect:(struct CGRect)arg1;
- (struct CGRect)constrainFrameRect:(struct CGRect)arg1 toScreen:(id)arg2;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)isExcludedFromWindowsMenu;
- (void)display;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (long long)level;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)_setEventMask:(long long)arg1;
- (void)resignKeyWindow;
- (void)resignMainWindow;
- (BOOL)_handleEventsTheCarbonWay;
- (void)sendEvent:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setHasShadow:(BOOL)arg1;
- (void)setHidesOnDeactivate:(BOOL)arg1;
- (BOOL)worksWhenModal;
- (struct CGRect)startRectForSheet:(id)arg1;
- (void)_setModalWindowLevel;
- (id)_clearModalWindowLevel;
- (void)_restoreLevelAfterRunningModal;
- (unsigned int)carbonHICommandIDFromActionSelector:(SEL)arg1;
- (void)sendCarbonProcessHICommandEvent:(unsigned int)arg1;
- (unsigned char)sendCarbonUpdateHICommandStatusEvent:(unsigned int)arg1 withMenuRef:(struct OpaqueMenuRef *)arg2 andMenuItemIndex:(unsigned short)arg3;
- (void)clear:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)redo:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)undo:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)handleCarbonBoundsChange;
- (int)handleMouseDownEvent:(struct OpaqueEventRef *)arg1 at:(struct Point)arg2 inPart:(short)arg3 withMods:(unsigned int)arg4;
- (void)_setForceNotKeyWindowForInputContext:(BOOL)arg1;
- (BOOL)_allowsActiveInputContext;
- (void)_removeReferencesToCarbonWindowRef;
- (int)_focusAcquired;
- (int)_focusRelinquished;

@end

@interface NSCarbonWindowContentView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;

@end

@interface NSCarbonWindowFrame : NSView
{
    unsigned long long _styleMask;
}

+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (void)dealloc;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_setSheet:(BOOL)arg1;
- (void)_updateButtonState;
- (void)_windowChangedKeyState;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (double)_distanceFromToolbarBaseToTitlebar;
- (id)closeButton;
- (id)minimizeButton;
- (id)zoomButton;
- (unsigned long long)styleMask;
- (struct CGRect)dragRectForFrameRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)setTitle:(id)arg1;
- (id)title;
- (struct CGRect)titlebarRect;
- (void)_clearDragMargins;
- (void)_resetDragMargins;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (double)_sheetHeightAdjustment;
- (id)contentFill;
- (double)contentAlpha;
- (struct CGRect)_growBoxRect;

@end

@interface NSCellUndoManager : NSUndoManager
{
    NSUndoManager *_nextUndoManager;
}

- (void)dealloc;
- (void)setNextUndoManager:(id)arg1;
- (void)undo;
- (void)redo;
- (BOOL)canUndo;
- (BOOL)canRedo;
- (id)undoMenuItemTitle;
- (id)redoMenuItemTitle;

@end

@interface _NSKeyboardFocusClipView : NSClipView
{
    NSView *_representedView;
    struct CGRect _adjustment;
    struct CGRect _lastFocusRingRect;
    BOOL _drawFocus;
    BOOL _bezelStyle;
}

- (void)dealloc;
- (void)removeFromSuperview;
- (BOOL)_drawRectIfEmpty;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_setKeyboardFocusRingNeedsDisplay;
- (void)_drawKeyboardFocusRingWithFrame:(struct CGRect)arg1;
- (void)_drawKeyboardFocusRingWithFrame:(struct CGRect)arg1 forCell:(id)arg2;
- (void)_setFocusForCell:(id)arg1 forView:(id)arg2 withFrame:(struct CGRect)arg3 withFocusRingFrame:(struct CGRect)arg4 withInset:(double)arg5;
- (void)_adjustFocusRingSize:(struct CGSize)arg1;
- (void)_adjustFocusRingLocation:(struct CGPoint)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)_clearFocusForView;
- (struct CGRect)_getFocusRingFrame;
- (BOOL)canBecomeKeyView;
- (unsigned long long)_backgroundFillOperation;

@end

@interface NSCell : NSObject <NSCopying, NSCoding>
{
    id _contents;
    struct __CFlags {
        unsigned int state:1;
        unsigned int highlighted:1;
        unsigned int disabled:1;
        unsigned int editable:1;
        unsigned int type:2;
        unsigned int vCentered:1;
        unsigned int hCentered:1;
        unsigned int bordered:1;
        unsigned int bezeled:1;
        unsigned int selectable:1;
        unsigned int scrollable:1;
        unsigned int continuous:1;
        unsigned int actOnMouseDown:1;
        unsigned int isLeaf:1;
        unsigned int invalidObjectValue:1;
        unsigned int invalidFont:1;
        unsigned int lineBreakMode:3;
        unsigned int cellReserved1:2;
        unsigned int singleLineMode:1;
        unsigned int actOnMouseDragged:1;
        unsigned int isLoaded:1;
        unsigned int truncateLastLine:1;
        unsigned int dontActOnMouseUp:1;
        unsigned int isWhite:1;
        unsigned int useUserKeyEquivalent:1;
        unsigned int showsFirstResponder:1;
        unsigned int focusRingType:2;
        unsigned int wasSelectable:1;
        unsigned int hasInvalidObject:1;
        unsigned int allowsEditingTextAttributes:1;
        unsigned int importsGraphics:1;
        unsigned int alignment:3;
        unsigned int layoutDirectionRTL:1;
        unsigned int backgroundStyle:3;
        unsigned int cellReserved2:4;
        unsigned int refusesFirstResponder:1;
        unsigned int needsHighlightedText:1;
        unsigned int dontAllowsUndo:1;
        unsigned int currentlyEditing:1;
        unsigned int allowsMixedState:1;
        unsigned int inMixedState:1;
        unsigned int sendsActionOnEndEditing:1;
        unsigned int inSendAction:1;
        unsigned int menuWasSet:1;
        unsigned int controlTint:3;
        unsigned int controlSize:2;
        unsigned int branchImageDisabled:1;
        unsigned int drawingInRevealover:1;
        unsigned int needsHighlightedTextHint:1;
    } _cFlags;
    id _support;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
+ (unsigned long long)defaultFocusRingType;
+ (BOOL)_compatibleListShouldUseAlternateSelectedControlColor;
+ (BOOL)_useAutoreleasePoolInTrackMouse;
+ (id)defaultMenu;
- (id)init;
- (id)_convertToText:(id)arg1;
- (BOOL)_allowsContextMenus;
- (void)_commonInit;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;
- (void)_failsafeAllocAuxiliaryStorage;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)_prefersTrackingWhenDisabled;
- (BOOL)_highlightsWithHighlightRect;
- (id)_useUserKeyEquivalent;
- (BOOL)_usesUserKeyEquivalent;
- (id)controlView;
- (void)setControlView:(id)arg1;
- (void)_setControlView:(id)arg1;
- (unsigned long long)type;
- (void)setType:(unsigned long long)arg1;
- (long long)state;
- (void)setState:(long long)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (long long)tag;
- (void)setTag:(long long)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (BOOL)isOpaque;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (long long)sendActionOn:(long long)arg1;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)acceptsFirstResponder;
- (void)_cell_setRefusesFirstResponder:(BOOL)arg1;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (BOOL)refusesFirstResponder;
- (void)_setAcceptsFirstResponder:(BOOL)arg1;
- (BOOL)_cell_isEditable;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)arg1;
- (BOOL)isScrollable;
- (void)setScrollable:(BOOL)arg1;
- (unsigned long long)imageInterpolation;
- (void)setImageInterpolation:(unsigned long long)arg1;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)arg1;
- (void)_setNeedsStateUpdate:(id)arg1;
- (unsigned long long)alignment;
- (void)_setHorizontallyCentered:(BOOL)arg1;
- (void)_setVerticallyCentered:(BOOL)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (BOOL)wraps;
- (void)setWraps:(BOOL)arg1;
- (long long)entryType;
- (void)setEntryType:(long long)arg1;
- (BOOL)isEntryAcceptable:(id)arg1;
- (void)setFloatingPointFormat:(BOOL)arg1 left:(unsigned long long)arg2 right:(unsigned long long)arg3;
- (id)keyEquivalent;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (void)_invalidateObjectValue;
- (id)_updateInvalidatedObjectValue:(id)arg1;
- (id)_contents;
- (id)_formatObjectValue:(id)arg1 invalid:(BOOL)arg2;
- (void)_setContents:(id)arg1;
- (void)_setEditingTextView:(id)arg1;
- (void)_clearEditingTextView:(id)arg1;
- (BOOL)_isEditingTextView:(id)arg1;
- (BOOL)_skipsSynchronizationForEditingTextView:(id)arg1;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (BOOL)hasValidObjectValue;
- (id)stringValue;
- (BOOL)_textDimsWhenDisabled;
- (id)_textAttributes;
- (unsigned long long)_lineBreakMode;
- (void)_setLineBreakMode:(unsigned long long)arg1;
- (void)_setTextAttributeParaStyleNeedsRecalc;
- (long long)_typesetterBehavior;
- (void)setLineBreakMode:(unsigned long long)arg1;
- (unsigned long long)lineBreakMode;
- (void)setAllowsUndo:(BOOL)arg1;
- (BOOL)allowsUndo;
- (id)_attributedStringForEditing;
- (id)_stringForEditing;
- (id)_unformattedAttributedStringValue:(id)arg1;
- (id)_attributedStringValue:(id)arg1 invalid:(BOOL)arg2;
- (BOOL)_hasAttributedStringValue;
- (id)attributedStringValue;
- (BOOL)_objectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (BOOL)_objectValue:(id *)arg1 forString:(id)arg2;
- (void)setStringValue:(id)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)setMnemonicLocation:(unsigned long long)arg1;
- (unsigned long long)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)setShowsFirstResponder:(BOOL)arg1;
- (BOOL)showsFirstResponder;
- (void)setFocusRingType:(unsigned long long)arg1;
- (unsigned long long)focusRingType;
- (unsigned long long)_effectiveFocusRingType;
- (BOOL)allowsEditingTextAttributes;
- (void)setAllowsEditingTextAttributes:(BOOL)arg1;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)arg1;
- (long long)compare:(id)arg1;
- (long long)_integerValue;
- (void)_setIntegerValue:(long long)arg1;
- (int)intValue;
- (void)setIntValue:(int)arg1;
- (long long)integerValue;
- (void)setIntegerValue:(long long)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (double)doubleValue;
- (void)setDoubleValue:(double)arg1;
- (void)takeIntValueFrom:(id)arg1;
- (void)takeIntegerValueFrom:(id)arg1;
- (void)takeFloatValueFrom:(id)arg1;
- (void)takeDoubleValueFrom:(id)arg1;
- (void)takeStringValueFrom:(id)arg1;
- (void)takeObjectValueFrom:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (void)_invalidateFont;
- (id)image;
- (void)setImage:(id)arg1;
- (void)setControlTint:(unsigned long long)arg1;
- (unsigned long long)controlTint;
- (void)setControlSize:(unsigned long long)arg1;
- (unsigned long long)controlSize;
- (void)setFormatter:(id)arg1;
- (id)formatter;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (long long)cellAttribute:(unsigned long long)arg1;
- (void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2;
- (BOOL)truncatesLastVisibleLine;
- (void)setTruncatesLastVisibleLine:(BOOL)arg1;
- (BOOL)usesSingleLineMode;
- (void)setUsesSingleLineMode:(BOOL)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;
- (void)_setIsWhite:(BOOL)arg1;
- (BOOL)_isWhite;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_typeSelectAttributes;
- (BOOL)_addTypeSelectAttributesForString:(id)arg1;
- (void)_setDrawingInRevealover:(BOOL)arg1;
- (BOOL)_drawingInRevealover;
- (BOOL)_delegateValidation:(id)arg1 object:(id)arg2 uiHandled:(char *)arg3;
- (BOOL)_validateEntryString:(id)arg1 uiHandled:(char *)arg2;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textDidChange:(id)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)calcDrawInfo:(struct CGRect)arg1;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (struct _NSRange)_characterRangeForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_drawLiveResizeHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_setNeedsHighlightedTextHint:(BOOL)arg1;
- (BOOL)_needsHighlightedTextHint;
- (id)_defaultImageHints;
- (BOOL)_preferInactiveBezelArtInView:(id)arg1;
- (BOOL)_usingAlternateHighlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)highlightColorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawFocusRingWithFrame:(struct CGRect)arg1;
- (void)_setCurrentlyEditing:(BOOL)arg1;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)arg1;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)_setMouseDownFlags:(long long)arg1;
- (long long)mouseDownFlags;
- (void)getPeriodicDelay:(float *)arg1 interval:(float *)arg2;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)_sendActionFrom:(id)arg1;
- (void)_displaySomeWindowsIfNeeded:(id)arg1;
- (BOOL)_vetoMouseDragActionDispatch;
- (BOOL)_useHitTestInTrackMouse;
- (BOOL)_hitTestForTrackMouseEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)keyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)keyUp:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)_focusRingFrameForFrame:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2;
- (struct CGRect)_centerInnerBounds:(struct CGRect)arg1;
- (id)_selectOrEdit:(const struct CGRect *)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7;
- (void)_synchronizeTextView:(id)arg1;
- (void)_restartEditingWithTextView:(id)arg1;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)_validateEditing:(id)arg1;
- (void)endEditing:(id)arg1;
- (id)fieldEditorForView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)performClick:(id)arg1;
- (void)setMenu:(id)arg1;
- (id)menu;
- (id)menuForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)setSendsActionOnEndEditing:(BOOL)arg1;
- (BOOL)sendsActionOnEndEditing;
- (BOOL)wantsNotificationForMarkedText;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)arg1;
- (long long)userInterfaceLayoutDirection;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;

@end

@interface NSCellAuxiliary : NSObject
{
    NSControl *controlView;
    NSImage *image;
    NSMutableDictionary *textAttributes;
    NSFormatter *formatter;
    id representedObject;
    NSString *userInterfaceItemIdentifier;
    NSMenu *menu;
    struct {
        unsigned int writingDirection:2;
        unsigned int backgroundStyleIsSet:1;
        unsigned int imageInterpolation:3;
        unsigned int reserved:26;
    } auxCFlags;
}

@end

@interface NSAccessibilityReparentingCellProxy : NSAccessibilityReparentingProxy
{
}

- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityWindowAttribute;
- (id)accessibilityTopLevelUIElementAttribute;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;

@end

@interface NSClassSwapper : NSObject <NSCoding>
{
    NSString *className;
    id template;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)template;
- (void)setTemplate:(id)arg1;
- (id)className;
- (void)setClassName:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSScrollAnimationHelper : NSAnimationHelper
{
    id _delegate;
    struct CGPoint _startPoint;
    struct CGPoint _endPoint;
    struct CGPoint _totalDelta;
}

- (struct CGPoint)_currentPoint;
- (void)_doAnimationStepWithProgress:(double)arg1;
- (void)_doFinalAnimationStep;
- (id)initWithDelegate:(id)arg1;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (void)changeDestinationToPoint:(struct CGPoint)arg1;
- (struct CGPoint)targetOrigin;

@end

@interface NSClipView : NSView
{
    NSColor *_backgroundColor;
    NSView *_docView;
    struct CGRect _docRect;
    struct CGRect _oldDocFrame;
    NSCursor *_cursor;
    id _scrollAnimationHelper;
    struct __cvFlags {
        unsigned int isFlipped:1;
        unsigned int onlyUncovered:1;
        unsigned int reflectScroll:1;
        unsigned int usedByCell:1;
        unsigned int scrollClipTo:1;
        unsigned int noCopyOnScroll:1;
        unsigned int drawsBackground:1;
        unsigned int scrollInProgress:1;
        unsigned int skipRemoveSuperviewCheck:1;
        unsigned int animateCurrentScroll:1;
        unsigned int canAnimateScrolls:1;
        unsigned int nextScrollRelativeToCurrentPosition:1;
        unsigned int viewBoundsChangedOverridden:1;
        unsigned int viewFrameChangedOverridden:1;
        unsigned int documentViewAlignment:4;
        unsigned int redrawnWhileScrolling:1;
        unsigned int RESERVED:13;
    } _cvFlags;
}

+ (void)_animatedScrollingPreferencesChanged:(id)arg1;
+ (void)initialize;
+ (void)_setAutoscrollResponseMultiplier:(double)arg1;
+ (double)_autoscrollResponseMultiplier;
- (void)setLayer:(id)arg1;
- (BOOL)_drawsNothing;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (id)_setSuperview:(id)arg1;
- (void)_registerForDocViewFrameAndBoundsChangeNotifications;
- (void)_unregisterForDocViewFrameAndBoundsChangeNotifications;
- (void)setDocumentView:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (id)documentView;
- (void)_setDocViewFromRead:(id)arg1;
- (struct CGRect)documentRect;
- (struct CGSize)_minimumFrameSize;
- (struct CGRect)documentVisibleRect;
- (id)_markUsedByCell;
- (BOOL)_isUsedByCell;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (BOOL)_canUseTiledBackingLayer;
- (id)makeBackingLayer;
- (unsigned long long)_backgroundFillOperation;
- (void)drawRect:(struct CGRect)arg1;
- (void)_pinDocRect;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameRotation:(double)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsRotation:(double)arg1;
- (void)translateOriginToPoint:(struct CGPoint)arg1;
- (void)scaleUnitSquareToSize:(struct CGSize)arg1;
- (void)rotateByAngle:(double)arg1;
- (id)_computeBounds;
- (BOOL)preservesContentDuringLiveResize;
- (void)_selfBoundsChanged;
- (struct CGRect)_dirtyRectUncoveredFromOldDocFrame:(struct CGRect)arg1 byNewDocFrame:(struct CGRect)arg2;
- (void)_reflectDocumentViewFrameChange;
- (void)viewFrameChanged:(id)arg1;
- (void)_handleFrameChangeForSubview:(id)arg1;
- (void)_reflectDocumentViewBoundsChange;
- (void)viewBoundsChanged:(id)arg1;
- (void)_handleBoundsChangeForSubview:(id)arg1;
- (BOOL)isFlipped;
- (void)_alignCoords;
- (void)_extendNextScrollRelativeToCurrentPosition;
- (BOOL)autoscroll:(id)arg1;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (double)_scrollAmountForLineScroll:(double)arg1 percentageTowardsMax:(double)arg2 limitingSize:(double)arg3 multiplier:(double)arg4;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (void)_scrollPoint:(const struct CGPoint *)arg1 fromView:(id)arg2;
- (BOOL)_scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (BOOL)_scrollTo:(const struct CGPoint *)arg1;
- (BOOL)_scrollTo:(const struct CGPoint *)arg1 animate:(BOOL)arg2;
- (struct CGPoint)constrainScrollPoint:(struct CGPoint)arg1;
- (BOOL)_canAnimateScrolls;
- (void)_setCanAnimateScrolls:(BOOL)arg1;
- (void)setCopiesOnScroll:(BOOL)arg1;
- (BOOL)copiesOnScroll;
- (BOOL)_canCopyOnScrollForDeltaX:(double)arg1 deltaY:(double)arg2;
- (void)_animatedScrollToPoint:(struct CGPoint)arg1;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (void)_immediateScrollToPoint:(struct CGPoint)arg1;
- (void)scrollToPoint:(struct CGPoint)arg1;
- (BOOL)_scrollInProgress;
- (void)setUpGState;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)arg1;
- (void)setDocumentCursor:(id)arg1;
- (id)documentCursor;
- (void)resetCursorRects;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)_isAnimatingScroll;
- (struct CGPoint)_animatingScrollTargetOrigin;
- (unsigned long long)_documentViewAlignment;
- (void)_setDocumentViewAlignment:(unsigned long long)arg1;

@end

@interface _NSClipViewBackingLayer : _NSViewBackingLayer
{
}

@end

@interface NSDynamicSystemColor : NSCatalogColor
{
}

+ (void)initialize;
+ (void)recacheAllColors:(id)arg1;
+ (id)controlShadowColor;
+ (id)controlDarkShadowColor;
+ (id)controlColor;
+ (id)controlBackgroundColor;
+ (id)controlHighlightColor;
+ (id)controlLightHighlightColor;
+ (id)textColor;
+ (id)textBackgroundColor;
+ (id)controlTextColor;
+ (id)selectedTextColor;
+ (id)selectedTextBackgroundColor;
+ (id)selectedControlTextColor;
+ (id)selectedControlColor;
+ (id)disabledControlTextColor;
+ (id)scrollBarColor;
+ (id)gridColor;
+ (id)toolTipTextColor;
+ (id)toolTipColor;
+ (id)knobColor;
+ (id)selectedKnobColor;
+ (id)highlightColor;
+ (id)shadowColor;
+ (id)windowFrameColor;
+ (id)windowFrameTextColor;
+ (id)selectedMenuItemTextColor;
+ (id)progressIndicatorColor;
+ (id)headerColor;
+ (id)headerTextColor;
+ (id)windowBackgroundColor;
+ (id)blueControlTintColor;
+ (id)graphiteControlTintColor;
+ (id)clearControlTintColor;
+ (id)toolbarBackgroundColor;
+ (id)secondarySelectedControlColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)controlAlternatingRowColor;
+ (id)alternateSelectedControlColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)_alternateDisabledSelectedControlTextColor;
+ (id)alternateSelectedControlTextColor;
+ (id)selectedMenuItemColor;
- (id)initWithSelector:(SEL)arg1;
- (void)recacheColor;
- (void)encodeWithCoder:(id)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface NSMenuItemHighlightColor : NSCatalogColor
{
}

- (id)init;
- (id)initWithCatalogName:(id)arg1 colorName:(id)arg2 genericColor:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isUniform;
- (id)_backingColorSettingPhase:(BOOL)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (double)alphaComponent;
- (id)colorWithAlphaComponent:(double)arg1;

@end

@interface NSSourceListBackgroundColor : NSCatalogColor
{
    NSColor *_activeColor;
    NSColor *_inactiveColor;
}

+ (id)activeColor;
+ (id)inactiveColor;
- (id)init;
- (id)initWithCatalogName:(id)arg1 colorName:(id)arg2 genericColor:(id)arg3;
- (void)dealloc;
- (id)_currentDisplayColor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isUniform;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)arg1;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorUsingColorSpace:(id)arg1;

@end

@interface NSMetalPatternColor : NSPatternColor
{
    void *_pattern;
    struct CGRect _windowBounds;
    unsigned long long _style;
    double _topHeight;
    double _bottomHeight;
}

- (id)initForMetal:(struct CGRect)arg1 style:(unsigned long long)arg2 topHeight:(double)arg3 bottomHeight:(double)arg4;
- (void)_resizeForMetal:(struct CGRect)arg1 style:(unsigned long long)arg2 topHeight:(double)arg3 bottomHeight:(double)arg4;
- (void)_setStyleForMetal:(unsigned long long)arg1;
- (id)patternImage;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)dealloc;
- (void)finalize;

@end

@interface NSGradientPatternColor : NSPatternColor
{
}

- (void)set;
- (void)setFill;
- (void)setStroke;

@end

@interface NSPatternColor : NSColor
{
    NSImage *_patternImage;
    struct CGColor *cachedPatternColor;
}

+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
- (id)initWithImage:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorSpaceName;
- (id)description;
- (id)patternImage;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSColorSpaceColor : NSColor
{
    NSColorSpace *colorSpace;
    struct CGColor *cachedColor;
    long long numComponents;
    double components[0];
}

+ (id)newWithColorSpace:(id)arg1 components:(const double *)arg2 count:(long long)arg3;
+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
- (id)initWithColorSpace:(id)arg1 components:(const double *)arg2 count:(long long)arg3;
- (void)dealloc;
- (void)finalize;
- (id)colorSpace;
- (long long)numberOfComponents;
- (void)getComponents:(double *)arg1;
- (double)alphaComponent;
- (id)colorWithAlphaComponent:(double)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorUsingColorSpace:(id)arg1;
- (id)colorSpaceName;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUniform;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCatalogColor : NSColor
{
    NSString *catalogNameComponent;
    NSString *colorNameComponent;
    NSColor *genericColor;
}

+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
- (id)initWithCatalogName:(id)arg1 colorName:(id)arg2 genericColor:(id)arg3;
- (id)colorSpaceName;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)drawSwatchOfColor:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (double)alphaComponent;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorUsingColorSpace:(id)arg1;
- (id)catalogNameComponent;
- (id)colorNameComponent;
- (id)localizedCatalogNameComponent;
- (id)localizedColorNameComponent;
- (id)description;
- (Class)classForCoder;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUniform;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NSDeviceCMYKColor : NSColor
{
    double cyanComponent;
    double magentaComponent;
    double yellowComponent;
    double blackComponent;
    double alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
- (id)initWithCyan:(double)arg1 magenta:(double)arg2 yellow:(double)arg3 black:(double)arg4 alpha:(double)arg5;
- (void)dealloc;
- (void)finalize;
- (double)cyanComponent;
- (double)magentaComponent;
- (double)yellowComponent;
- (double)blackComponent;
- (double)alphaComponent;
- (void)getCyan:(double *)arg1 magenta:(double *)arg2 yellow:(double *)arg3 black:(double *)arg4 alpha:(double *)arg5;
- (long long)numberOfComponents;
- (void)getComponents:(double *)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)arg1;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUniform;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCachedDeviceWhiteColor : NSDeviceWhiteColor
{
}

- (void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSCachedWhiteColor : NSCalibratedWhiteColor
{
}

- (void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSDeviceWhiteColor : NSCalibratedWhiteColor
{
}

+ (id)_cachedLookupWithWhite:(double)arg1 alpha:(double)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)colorSpaceName;
- (id)colorSpace;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCalibratedWhiteColor : NSColor
{
    double whiteComponent;
    double alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
+ (id)_cachedLookupWithWhite:(double)arg1 alpha:(double)arg2;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;
- (void)dealloc;
- (void)finalize;
- (double)whiteComponent;
- (void)getWhite:(double *)arg1 alpha:(double *)arg2;
- (double)alphaComponent;
- (long long)numberOfComponents;
- (void)getComponents:(double *)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)arg1;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUniform;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1 colorSpaceCode:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCachedDeviceRGBColor : NSDeviceRGBColor
{
}

- (void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSCachedRGBColor : NSCalibratedRGBColor
{
}

- (void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSDeviceRGBColor : NSCalibratedRGBColor
{
}

+ (id)_cachedLookupWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)colorSpaceName;
- (id)colorSpace;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCalibratedRGBColor : NSColor
{
    double redComponent;
    double greenComponent;
    double blueComponent;
    double alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)arg1 zone:(struct _NSZone *)arg2;
+ (id)_cachedLookupWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)dealloc;
- (void)finalize;
- (double)redComponent;
- (double)greenComponent;
- (double)blueComponent;
- (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (double)hueComponent;
- (double)saturationComponent;
- (double)brightnessComponent;
- (void)getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (double)alphaComponent;
- (long long)numberOfComponents;
- (void)getComponents:(double *)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)_setAsSystemColor;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)arg1;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isUniform;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1 colorSpaceCode:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSColor : NSObject <NSCopying, NSCoding, NSPasteboardReading, NSPasteboardWriting>
{
}

+ (id)blackColor;
+ (id)darkGrayColor;
+ (id)lightGrayColor;
+ (id)whiteColor;
+ (id)grayColor;
+ (id)clearColor;
+ (id)blackDeviceColor;
+ (id)lightGrayDeviceColor;
+ (id)whiteDeviceColor;
+ (id)grayDeviceColor;
+ (id)_gray221Color;
+ (id)_gray204Color;
+ (id)_defaultSecondaryColor;
+ (id)_gray136Color;
+ (id)redColor;
+ (id)greenColor;
+ (id)blueColor;
+ (id)_darkBlueColor;
+ (id)_whiteRGBColor;
+ (id)_lightGrayRGBColor;
+ (id)_darkGrayRGBColor;
+ (id)_blackRGBColor;
+ (id)cyanColor;
+ (id)yellowColor;
+ (id)magentaColor;
+ (id)orangeColor;
+ (id)purpleColor;
+ (id)brownColor;
+ (id)_lightYellowColor;
+ (id)_defaultKnobColor;
+ (id)_defaultSelectedKnobColor;
+ (id)_lightBlueColor;
+ (id)_defaultSelectionColor;
+ (id)_defaultProgressIndicatorColor;
+ (id)_blueControlTintColor;
+ (id)_graphiteControlTintColor;
+ (id)_clearControlTintColor;
+ (id)_blueAlternatingRowColor;
+ (id)_graphiteAlternatingRowColor;
+ (id)_blueKeyboardFocusColor;
+ (id)_graphiteKeyboardFocusColor;
+ (id)_engravedActiveForegroundTextColor;
+ (id)_engravedBoldActiveForegroundTextColor;
+ (id)_engravedDisabledForegroundTextColor;
+ (id)_engravedBoldDisabledForegroundTextColor;
+ (id)_engravedOffsetTextColor;
+ (id)_engravedMenuOffsetTextColor;
+ (id)_embossedActiveForegroundTextColor;
+ (id)_embossedDisabledForegroundTextColor;
+ (id)_embossedOffsetTextColor;
+ (id)_lightTextEngravedActiveForegroundTextColor;
+ (id)_lightTextEngravedDisabledForegroundTextColor;
+ (id)_lightTextEngravedOffsetTextColor;
+ (id)_roundDeteminateProgressIndicatorColor;
+ (id)_sourceListBackgroundColor;
+ (id)sourceListBackgroundColor;
+ (id)_controlColor;
+ (id)_toolbarBackgroundColor;
+ (id)controlShadowColor;
+ (id)controlDarkShadowColor;
+ (id)controlColor;
+ (id)controlBackgroundColor;
+ (id)controlHighlightColor;
+ (id)controlLightHighlightColor;
+ (id)textColor;
+ (id)textBackgroundColor;
+ (id)controlTextColor;
+ (id)selectedTextColor;
+ (id)selectedTextBackgroundColor;
+ (id)selectedControlTextColor;
+ (id)selectedControlColor;
+ (id)disabledControlTextColor;
+ (id)scrollBarColor;
+ (id)gridColor;
+ (id)toolTipColor;
+ (id)toolTipTextColor;
+ (id)knobColor;
+ (id)selectedKnobColor;
+ (id)highlightColor;
+ (id)shadowColor;
+ (id)windowFrameColor;
+ (id)windowFrameTextColor;
+ (id)selectedMenuItemColor;
+ (id)selectedMenuItemTextColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)progressIndicatorColor;
+ (id)headerColor;
+ (id)headerTextColor;
+ (id)windowBackgroundColor;
+ (id)blueControlTintColor;
+ (id)clearControlTintColor;
+ (id)graphiteControlTintColor;
+ (id)secondarySelectedControlColor;
+ (id)alternateSelectedControlColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)alternateSelectedControlTextColor;
+ (id)_alternateDisabledSelectedControlTextColor;
+ (id)toolbarBackgroundColor;
+ (id)controlAlternatingRowColor;
+ (id)controlAlternatingRowBackgroundColors;
+ (id)highlightedMenuColor;
+ (id)highlightedMenuTextColor;
+ (id)selectedInactiveColor;
+ (id)colorWithCalibratedWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithCalibratedHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithDeviceWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithDeviceHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithDeviceRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithDeviceCyan:(double)arg1 magenta:(double)arg2 yellow:(double)arg3 black:(double)arg4 alpha:(double)arg5;
+ (id)colorWithCatalogName:(id)arg1 colorName:(id)arg2;
+ (id)_colorForMetal:(struct CGRect)arg1 style:(unsigned long long)arg2 topHeight:(double)arg3 bottomHeight:(double)arg4;
+ (id)colorWithPatternImage:(id)arg1;
+ (id)_colorWithGradientImage:(id)arg1;
+ (id)colorWithColorSpace:(id)arg1 components:(const double *)arg2 count:(long long)arg3;
+ (id)colorFromPasteboard:(id)arg1;
+ (id)oldSystemColorWithCoder:(id)arg1;
+ (void)setIgnoresAlpha:(BOOL)arg1;
+ (BOOL)ignoresAlpha;
+ (BOOL)_calibratedColorOK;
+ (id)colorForControlTint:(unsigned long long)arg1;
+ (unsigned long long)currentControlTint;
+ (id)readableTypesForPasteboard:(id)arg1;
- (id)colorUsingColorSpaceName:(id)arg1 device:(id)arg2;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)colorUsingColorSpaceName:(id)arg1;
- (double)alphaComponent;
- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (id)_addColor:(id)arg1;
- (id)_subtractColor:(id)arg1;
- (BOOL)isUniform;
- (void)writeToPasteboard:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (unsigned long long)hash;
- (id)colorUsingColorSpace:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)drawSwatchInRect:(struct CGRect)arg1;
- (void)_setAsSystemColor;
- (void)set;
- (id)colorSpaceName;
- (id)catalogNameComponent;
- (id)colorNameComponent;
- (id)localizedCatalogNameComponent;
- (id)localizedColorNameComponent;
- (double)redComponent;
- (double)greenComponent;
- (double)blueComponent;
- (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (double)hueComponent;
- (double)saturationComponent;
- (double)brightnessComponent;
- (void)getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (double)whiteComponent;
- (void)getWhite:(double *)arg1 alpha:(double *)arg2;
- (double)cyanComponent;
- (double)magentaComponent;
- (double)yellowComponent;
- (double)blackComponent;
- (void)getCyan:(double *)arg1 magenta:(double *)arg2 yellow:(double *)arg3 black:(double *)arg4 alpha:(double *)arg5;
- (id)patternImage;
- (id)colorSpace;
- (long long)numberOfComponents;
- (void)getComponents:(double *)arg1;
- (void)setFill;
- (void)setStroke;
- (id)highlightWithLevel:(double)arg1;
- (id)shadowWithLevel:(double)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;

@end

@interface NSColorList : NSObject <NSCoding>
{
    NSMutableArray *_keyArray;
    NSMutableArray *_colorArray;
    struct __CFDictionary *_keyToIndexTable;
    NSString *_name;
    NSString *_printerType;
    NSString *_fileName;
    struct _colorListFlags {
        unsigned int colorsLoaded:1;
        unsigned int editable:1;
        unsigned int hasDeviceSpecificLists:1;
        unsigned int dirty:1;
        unsigned int hasFrozen:1;
        unsigned int notificationsDisabled:1;
        unsigned int hasAttemptedLoadingBundleForDirectory:1;
        unsigned int isProfileBased:1;
        unsigned int :24;
        unsigned int :32;
    } _flags;
    id _clAuxiliaryStorage;
}

+ (void)_loadSystemScreenColorList;
+ (void)initialize;
+ (id)_newWithName:(id)arg1 fromPath:(id)arg2 forDeviceType:(id)arg3;
+ (id)availableColorLists;
+ (id)_colorListNamed:(id)arg1 forDeviceType:(id)arg2;
+ (id)_findColorListNamed:(id)arg1 forDeviceType:(id)arg2;
+ (id)colorListNamed:(id)arg1;
- (id)description;
- (unsigned long long)_indexOfKey:(id)arg1;
- (void)_invalidateKeyToIndexTable;
- (id)_initWithName:(id)arg1 fromPath:(id)arg2 forDeviceType:(id)arg3 lazy:(BOOL)arg4;
- (id)initWithName:(id)arg1;
- (id)initWithName:(id)arg1 fromFile:(id)arg2;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (void)removeFile;
- (BOOL)_parseReleaseTwoList:(id)arg1;
- (BOOL)_parseArchivedList:(id)arg1;
- (BOOL)_parsePantoneLikeList:(id)arg1 fileName:(id)arg2;
- (BOOL)_loadColors;
- (BOOL)_rename:(id)arg1 as:(id)arg2;
- (void)setColor:(id)arg1 forKey:(id)arg2;
- (void)insertColor:(id)arg1 key:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_rawAddColor:(id)arg1 key:(id)arg2;
- (void)removeColorWithKey:(id)arg1;
- (id)colorWithKey:(id)arg1;
- (id)_localizedKeyFromBundleStringFileForKey:(id)arg1;
- (id)_localizedNameForColorWithName:(id)arg1;
- (id)_localizedColorListName;
- (id)_localizedColorListCopyrightString;
- (id)allKeys;
- (id)name;
- (BOOL)isEditable;
- (void)_setUpdated:(BOOL)arg1;
- (BOOL)_isUpdated;
- (void)_changed:(id)arg1;
- (BOOL)writeToFile:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)_decodeWithoutNameWithCoder:(id)arg1 newStyle:(BOOL)arg2;
- (id)initWithCoder:(id)arg1;
- (void)_encodeWithoutNameWithCoder:(id)arg1 newStyle:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSColorListAuxiliary : NSObject
{
    NSString *_localizedCopyRightString;
    struct CMNamedColorPageInfoType *_cmPageInfoPtr;
    double _lastEditableCheck;
    NSBundle *_bundleForColorListDirectory;
}

- (id)init;
- (void)finalize;
- (void)dealloc;

@end

@interface NSColorPanelTextController : NSObject
{
    NSColorPanel *_colorPanel;
    NSControl *_textControl;
    NSTimer *_textTimer;
    NSString *_lastEditedStringValue;
    id _delegate;
    BOOL _acceptLastEnteredText;
}

- (id)initWithTextControl:(id)arg1 colorPanel:(id)arg2 delegate:(id)arg3;
- (void)cancel:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)stopTextTimer;
- (void)startTextTimer;
- (void)dealloc;
- (void)_forceSetLastEditedStringValue:(id)arg1;
- (void)setLastEditedStringValue:(id)arg1;
- (void)textTimerFired:(id)arg1;
- (void)fieldEditorTextDidChange:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (BOOL)acceptLastEnteredText;

@end

@interface _NSMagnifier : NSObject <NSWindowDelegate>
{
}

+ (id)sharedMagnifier;
- (void)trackMagnifierForPanel:(id)arg1;

@end

@interface _NSMagnifierWindow : NSWindow
{
}

- (BOOL)accessibilityIsChildOfApp;

@end

@interface NSColorSwatch : NSView
{
    id colorPanel;
    long long mousedColor;
    NSMutableArray *colors;
    long long currentHighlight;
    long long focusedColor;
    long long numRowsToToggleVisible;
    long long draggedColorIndex;
}

+ (void)initialize;
- (double)newLegalColorSwatchHeightFromHeight:(double)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (double)heightForNumberOfVisibleRows:(long long)arg1;
- (long long)numberOfVisibleRows;
- (long long)numberOfVisibleCols;
- (void)setNumRowsToToggleVisible:(long long)arg1;
- (void)markNumRowsToToggleVisible;
- (long long)numRowsToToggleVisible;
- (void)_constrainColorIndexToVisibleBounds:(long long *)arg1 dirtyIfNeeded:(BOOL)arg2;
- (id)_reallocColors:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (struct CGRect)rectOfSwatchInteriorAtIndex:(long long)arg1;
- (struct CGRect)focusedSwatchRect;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct CGRect)arg1;
- (void)moveInDirection:(struct CGPoint)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)drawColor:(long long)arg1;
- (void)setFocusedColorChipIndex:(long long)arg1;
- (id)highlightColor:(long long)arg1;
- (double)swatchWidth;
- (void)saveNumVisibleRows;
- (BOOL)getSavedNumVisibleRows:(long long *)arg1;
- (void)_old_writeColorsToGlobalPreferences;
- (void)_old_readColorsFromGlobalPreferences;
- (void)_writeColorsToLibrary;
- (BOOL)_readColorsFromLibrary;
- (void)writeColors;
- (void)readColors;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)postColorSwatchesChangedDistributedNotification;
- (BOOL)performDragOperation:(id)arg1;
- (void)_delayedWriteColors;
- (id)color;
- (void)mouseDown:(id)arg1;
- (id)storeColorPanel:(id)arg1;
- (id)_delayedUpdateSwatch:(id)arg1;
- (void)updateSwatch;
- (void)dealloc;

@end

@interface NSColorPanel : NSPanel
{
    id _colorSwatch;
    id _reserved1;
    id _colorWell;
    NSMutableArray *_pickersWithLoadedViews;
    id _magnifyButton;
    id _middleView;
    id _opacitySlider;
    id _opacityText;
    id _opacityView;
    id _modalButtons;
    id _pickerView;
    id _customViewsList;
    id _customPickerList;
    id _currViewObject;
    id _boxAboveSwatch;
    id _target;
    id _accessoryView;
    SEL _action;
    struct CGSize _minColorPanelSize;
    struct CGSize _maxColorPanelSize;
    struct CGSize _reserved2;
    struct CGSize _reserved3;
    id _resizeDimple;
    BOOL _reserved5;
    BOOL _reserved6;
    BOOL _handlingOpacityMoveAction;
    BOOL _ignoreConstraints;
    BOOL _continuous;
    BOOL _allowColorSetting;
    BOOL _stillInitializing;
    id _opacityTextController;
}

+ (id)sharedColorPanel;
+ (BOOL)sharedColorPanelExists;
+ (void)setPickerMask:(unsigned long long)arg1;
+ (void)setPickerMode:(long long)arg1;
+ (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
+ (BOOL)ignoreModifierKeysWhileDragging;
+ (BOOL)dragColor:(id)arg1 withEvent:(id)arg2 fromView:(id)arg3;
+ (BOOL)dragColor:(id)arg1 withEvent:(id)arg2 inView:(id)arg3;
+ (void)_setBundle:(id)arg1 forClassPresentInAppKit:(Class)arg2;
+ (id)_bundleForClassPresentInAppKit:(Class)arg1;
- (id)__target;
- (SEL)__action;
- (long long)__numberOfVisibleRowsInColorSwatch;
- (long long)__numberOfRowsToToggleVisibleInColorSwatch;
- (void)__setNumberOfRowsToToggleVisibleInColorSwatch:(long long)arg1;
- (id)__swatchColors;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (void)setHidesOnDeactivate:(BOOL)arg1;
- (void)dealloc;
- (void)_setTitleFixedPointWindowFrame:(struct CGSize)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (void)changeWindowFrameSizeByDelta:(struct CGSize)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (void)_selectFirstKeyView;
- (id)_keyViewPrecedingPickerViews;
- (id)_keyViewFollowingPickerViews;
- (id)_keyViewPrecedingAccesoryView;
- (id)_keyViewFollowingAccessoryView;
- (id)_keyViewFollowingOpacityViews;
- (id)_keyViewPrecedingModalButtons;
- (id)_keyViewFollowingModalButtons;
- (void)colorSwathesChangedInAnotherApplicationNotification:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)_forceUpdateDimpleLocation;
- (void)setViewOfPickerIsLoaded:(id)arg1;
- (BOOL)isViewOfPickerLoaded:(id)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)_validateOpacitySlider;
- (void)_storeNewColorInColorWell:(id)arg1;
- (long long)colorMask;
- (id)setColorMask:(long long)arg1;
- (id)accessoryView;
- (void)setAccessoryView:(id)arg1;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)isContinuous;
- (void)setMode:(long long)arg1;
- (long long)mode;
- (id)_provideNewViewFor:(id)arg1 initialViewRequest:(BOOL)arg2;
- (void)_resetOpacity:(id)arg1 andForceSetColor:(BOOL)arg2;
- (void)_resetOpacity:(id)arg1;
- (void)_changeMinColorPanelSizeByDelta:(struct CGSize)arg1 compareWithOldMinSize:(BOOL)arg2 oldMinSize:(struct CGSize)arg3 setWindowFrame:(BOOL)arg4;
- (void)_changeMinColorPanelSizeByDelta:(struct CGSize)arg1 setWindowFrame:(BOOL)arg2;
- (void)_setUseModalAppearance:(BOOL)arg1;
- (void)_setUtilityWindow:(BOOL)arg1;
- (struct CGRect)_adjustedFrameFromDefaults:(struct CGRect)arg1;
- (struct CGRect)_adjustedFrameForSaving:(struct CGRect)arg1;
- (void)_stopModal:(id)arg1;
- (void)_cancelKey:(id)arg1;
- (void)_setShowAlpha:(BOOL)arg1 andForce:(BOOL)arg2;
- (void)_timedAdjustTextControl:(id)arg1;
- (void)setShowsAlpha:(BOOL)arg1;
- (BOOL)showsAlpha;
- (BOOL)_shouldLoadColorPickerWithClassName:(id)arg1;
- (void)_loadPickerBundlesIn:(id)arg1;
- (id)_colorPickerPaths;
- (id)_initWithPickers:(long long)arg1;
- (id)_colorPickers;
- (double)_insertionOrderForPicker:(id)arg1;
- (void)_appendColorPicker:(id)arg1;
- (id)_toolTipForColorPicker:(id)arg1;
- (void)_setupButtonImageAndToolTips;
- (long long)_savedMode;
- (void)_endLiveResize;
- (id)_pinViews:(id)arg1 resizeFlagsToLeaveAlone:(long long)arg2;
- (void)_unpinViews:(id)arg1 resizeMasks:(id)arg2;
- (id)_arrayForPartialPinningFromArray:(id)arg1;
- (void)_dimpleDragStarted:(id)arg1 event:(id)arg2;
- (void)_setNumVisibleSwatchRows:(long long)arg1;
- (void)_syncSwatchSizeToSavedNumVisibleRows;
- (void)_dimpleDoubleClicked:(id)arg1 event:(id)arg2;
- (struct CGSize)_newLegalSizeFromSize:(struct CGSize)arg1 force:(BOOL)arg2 roundDirection:(long long)arg3;
- (void)_saveMode;
- (void)_switchViewForToolbarItem:(id)arg1;
- (struct CGSize)_panelSizeExcludingToolbar;
- (void)_setMinPickerContentSize:(struct CGSize)arg1;
- (void)_sizeWindowForPicker:(id)arg1;
- (void)_switchToPicker:(id)arg1;
- (void)_magnify:(id)arg1;
- (id)color;
- (double)alpha;
- (void)attachColorList:(id)arg1;
- (void)detachColorList:(id)arg1;
- (id)_startingWindowForSendAction:(SEL)arg1;
- (void)_forceSendAction:(BOOL)arg1 notification:(BOOL)arg2 firstResponder:(BOOL)arg3;
- (void)_sendActionAndNotification;
- (void)setColor:(id)arg1;
- (void)_switchToAppropriateModeForColorIfNecessary:(id)arg1;
- (void)_forceSetColor:(id)arg1;
- (void)_set:(id)arg1;
- (void)_colorWellAcceptedColor:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)_reallyDoOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5 isModal:(BOOL)arg6;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)_middleViewFrameChanged:(id)arg1;

@end

@interface _NSColorPanelToolbar : NSToolbar <NSToolbarDelegate>
{
    NSColorPanel *colorPanel;
    unsigned int _isMoving:1;
    unsigned int _refusesToBeShown:1;
    unsigned int _reserved:30;
}

+ (void)attachToolbarToColorPanel:(id)arg1;
- (id)initWithIdentifier:(id)arg1 forColorPanel:(id)arg2;
- (void)dealloc;
- (void)setVisible:(BOOL)arg1;
- (void)setRefusesToBeShown:(BOOL)arg1;
- (BOOL)refusesToBeShown;
- (id)itemIdentifierForColorPicker:(id)arg1;
- (void)colorPanelDidSelectColorPicker:(id)arg1;
- (void)setDisplayMode:(unsigned long long)arg1;
- (void)setSizeMode:(unsigned long long)arg1;
- (unsigned long long)sizeMode;
- (unsigned long long)displayMode;
- (BOOL)_isMoving;
- (id)configurationDictionary;
- (id)_labelForColorPicker:(id)arg1;
- (id)_imageForColorPicker:(id)arg1;
- (id)_tooltipForColorPicker:(id)arg1;
- (id)_itemIdentifiersForColorPickers:(id)arg1;
- (id)_colorPickerWithIdentifier:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (void)syncWithRemoteToolbars;

@end

@interface _NSColorPanelToolbarItem : NSToolbarItem
{
    id representedObject;
}

- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSColorPanelColorWell : NSColorWell
{
    BOOL _disabledAsColorDestination;
    BOOL _actsLikeButton;
}

- (void)registerForDraggedTypes:(id)arg1;
- (void)setAcceptsColorDrops:(BOOL)arg1;
- (void)setActsLikeButton:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)performClick:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (struct CGRect)_colorRect;
- (void)drawWellInside:(struct CGRect)arg1;
- (void)_drawBorderInRect:(struct CGRect)arg1;
- (void)setColor:(id)arg1;

@end

@interface NSColorPanelResizeDimple : NSView
{
    NSView *attachedToView;
}

- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)resetCursorRects;
- (id)grabberImage;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (void)positionRelativeToAttachedView;
- (void)attachedViewFrameDidChange:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (BOOL)acceptsFirstMouse:(id)arg1;

@end

@interface NSPanelController : NSObject
{
    id alertPanel;
    id iconView;
    id okButton;
    id form;
    id target;
    SEL action;
    BOOL gotString;
    NSString *textFieldStringValue;
}

- (void)_setTextFieldStringValue:(id)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)showPanel:(id)arg1 andNotify:(id)arg2 with:(SEL)arg3;
- (BOOL)gotString;
- (id)stringValue;
- (void)cancel:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)ok:(id)arg1;
- (void)controlTextDidChange:(id)arg1;

@end

@interface NSColorPicker : NSObject <NSColorPickingDefault>
{
    id _imageObject;
    NSColorPanel *_colorPanel;
    NSString *_buttonToolTip;
}

- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (id)colorPanel;
- (void)dealloc;
- (id)provideNewButtonImage;
- (void)_setButtonToolTip:(id)arg1;
- (id)_buttonToolTip;
- (id)buttonToolTip;
- (id)_buttonImageToolTip;
- (void)insertNewButtonImage:(id)arg1 in:(id)arg2;
- (struct CGSize)minContentSize;
- (void)viewSizeChanged:(id)arg1;
- (void)alphaControlAddedOrRemoved:(id)arg1;
- (double)_insertionOrder;
- (void)attachColorList:(id)arg1;
- (void)detachColorList:(id)arg1;
- (void)setMode:(long long)arg1;
- (id)_getTiffImage:(id)arg1 ownedBy:(id)arg2;
- (id)_getTiffImage:(id)arg1 ownedBy:(id)arg2 asImageRep:(BOOL)arg3;
- (id)_localizedNumberedNameWithString:(id)arg1 integer:(long long)arg2;

@end

@interface NSColorPickerCrayon : NSColorPicker <NSColorPickingCustom>
{
    id crayonView;
    id colorTextField;
}

- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (void)changeColor:(id)arg1;
- (void)changeDisplayedColorName:(id)arg1;
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (id)provideNewView:(BOOL)arg1;
- (double)_insertionOrder;
- (struct CGSize)minContentSize;
- (id)buttonToolTip;
- (void)setColor:(id)arg1;

@end

@interface NSColorPickerCrayonView : NSView
{
    NSColorList *_colorList;
    NSMutableArray *_crayonRows;
    NSCrayon *_selectedCrayon;
    NSColorPickerCrayon *_controllingPicker;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_windowChangedKeyState;
- (id)color;
- (id)localizedColorNameComponent;
- (void)setColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;

@end

@interface NSColorPickerPageableNameList : NSColorPicker <NSColorPickingCustom>
{
    NSView *listPickerView;
    NSPopUpButton *listPopUp;
    NSTextField *renamePrompt;
    NSTextField *renameString;
    NSButton *renameButton;
    NSPanel *renamePanel;
    NSButton *newColorButton;
    NSSearchField *filterField;
    NSPopUpButton *dummyActionPopupButton;
    NSMutableDictionary *_listDict;
    NSMutableDictionary *_attachedListDict;
    NSString *_currListName;
    NSColorList *_activeColorList;
    NSArray *_sortedColorListNames;
    NSPageableTableView *_tableView;
    unsigned int _showingError:1;
    unsigned int _selectionDidChangeHappened:1;
    unsigned int _ui_is_built:1;
    unsigned int _reserved:29;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (long long)_currentColorIndex;
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (void)setupLoadedNib;
- (void)_changedPossibleKeys;
- (id)provideNewView:(BOOL)arg1;
- (double)_matchQualityOfColorAtIndex:(unsigned long long)arg1 toColor:(id)arg2 ifBetterThan:(double)arg3;
- (long long)_colorIndexInTableView;
- (void)_selectColorInTableView;
- (void)setColor:(id)arg1;
- (id)provideNewButtonImage;
- (double)_insertionOrder;
- (struct CGSize)minContentSize;
- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (id)buttonToolTip;
- (void)insertPopItemWithTitle:(id)arg1 andObject:(id)arg2;
- (id)_currentFilterString;
- (void)_reloadColorListTableViewForFilterChange;
- (void)_colorListChanged:(id)arg1;
- (void)_reloadColorListTableView;
- (void)refreshUI;
- (BOOL)_endColorListInlineEditing;
- (void)switchToListNamed:(id)arg1;
- (void)switchList:(id)arg1;
- (void)attachColorList:(id *)arg1 systemList:(BOOL)arg2 makeSelected:(BOOL)arg3;
- (void)attachColorList:(id)arg1 makeSelected:(BOOL)arg2;
- (void)attachColorList:(id)arg1;
- (void)detachColorList:(id)arg1;
- (void)setCurrListName:(id)arg1;
- (id)listDictionary;
- (id)attachedListDictionary;
- (void)loadColorLists;
- (void)saveDefaults;
- (void)restoreDefaults;
- (long long)findColorNamed:(id)arg1 inList:(id)arg2 usingLocalName:(BOOL)arg3;
- (BOOL)removeListEnabled;
- (BOOL)isCurrListEditable;
- (BOOL)removeColorAllowed;
- (BOOL)addColorAllowed;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)saveList:(id)arg1;
- (void)addNewColor:(id)arg1 andShowInWell:(BOOL)arg2;
- (id)newColorName:(id)arg1;
- (void)newColor:(id)arg1;
- (id)newListName:(id)arg1;
- (void)newList:(id)arg1;
- (void)openListFromFile:(id)arg1;
- (void)openList:(id)arg1;
- (void)tryNewColorListNameSheetDidEnd:(id)arg1 returnCode:(long long)arg2 context:(void *)arg3;
- (void)renameListSheetDidEnd:(id)arg1 returnCode:(long long)arg2 context:(void *)arg3;
- (void)renameList:(id)arg1;
- (id)_currentSelectedColorListColorName;
- (void)_removeCurrentColor;
- (void)removeColor:(id)arg1;
- (void)removeListSheetDidEnd:(id)arg1 returnCode:(long long)arg2 context:(void *)arg3;
- (void)removeList:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidChange:(id)arg1;
- (void)filterChanged:(id)arg1;
- (void)endSheetReturningTag:(id)arg1;
- (void)actionDropDownButton:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)_errorDuplicateColor:(id)arg1;
- (void)didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (id)_colorForRow:(long long)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewClicked:(id)arg1;
- (id)activeColorList;
- (BOOL)pageableTableView:(id)arg1 handleKeyDownEvent:(id)arg2;
- (id)pageableTableView:(id)arg1 dragImageForRowsWithIndexes:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;

@end

@interface NSColorPickerPageableNameListScrollView : NSScrollView
{
    NSColorPickerPageableNameList *picker;
    NSImage *_scrollerCaps;
    long long _partMouseDown;
    long long _arrowPlacement;
    long long _tint;
}

- (void)appearanceChanged:(id)arg1;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (long long)partHit:(id)arg1;
- (void)mouse:(id)arg1;
- (void)timer:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)isPaged;
- (unsigned long long)pageCount;
- (id)colorList;
- (BOOL)isFirstAndKey;
- (void)updateWithFocusRingForWindowKeyChange;
- (void)reflectScrolledClipView:(id)arg1;
- (void)_windowChangedKeyState;
- (void)drawScroller:(struct CGRect)arg1;
- (void)tile;
- (void)drawRect:(struct CGRect)arg1;
- (void)scrollWheel:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageUp:(id)arg1;

@end

@interface NSColorPickerPageableNameListView : NSView
{
    NSColorPickerPageableNameList *picker;
    NSColorList *_cList;
    NSString *_filter;
    unsigned long long _filteredCount;
    char *_filteredCache;
    unsigned long long _lastHint;
    unsigned long long _lastSelected;
    double _lastQual;
    NSColor *_lastColor;
    unsigned long long _hint;
    unsigned long long _page;
    unsigned long long _pageH;
    unsigned long long _pageW;
    long long _itemH;
    long long _swatchW;
    NSColor *colorToDrag;
    NSColor *draggedColor;
    BOOL _editable;
    NSTextFieldCell *_editingCell;
    BOOL _displayingError;
}

- (void)_init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)viewDidMoveToWindow;
- (void)adjustScrollView;
- (void)clipFrameChanged:(id)arg1;
- (void)colorListChanged:(id)arg1;
- (id)colorList;
- (void)setColorList:(id)arg1;
- (void)setFilter:(id)arg1;
- (void)buildFilterCache;
- (void)clearFilterCache;
- (unsigned long long)countFiltered:(BOOL)arg1;
- (BOOL)passesFilterAtIndex:(unsigned long long)arg1;
- (unsigned long long)actualIndexForIndex:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (unsigned long long)filteredIndexForActualIndex:(unsigned long long)arg1;
- (id)colorAtIndex:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (id)nameAtIndex:(unsigned long long)arg1 filtered:(BOOL)arg2;
- (struct CGRect)rectForIndex:(unsigned long long)arg1;
- (BOOL)isPaged;
- (unsigned long long)pageCount;
- (unsigned long long)page;
- (void)setPage:(unsigned long long)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (unsigned long long)_actualIndexForMouseEvent:(id)arg1;
- (id)_colorForMouseEvent:(id)arg1;
- (void)_setColorPanelColor:(id)arg1 force:(BOOL)arg2;
- (void)_mouse:(id)arg1 force:(BOOL)arg2;
- (void)_periodicEvent:(id)arg1;
- (BOOL)_mouseDragged:(id)arg1;
- (BOOL)_mouseUp:(id)arg1;
- (id)_textAttributes;
- (id)_textFont;
- (void)mouseDown:(id)arg1;
- (double)matchQualityOfColorAtIndex:(unsigned long long)arg1 toColor:(id)arg2 filtered:(BOOL)arg3 ifBetterThan:(double)arg4;
- (unsigned long long)selectedIndexAndQuality:(double *)arg1;
- (unsigned long long)selectedIndex;
- (BOOL)hasSelectedColor;
- (id)selectedName;
- (void)scrollToSelected;
- (BOOL)isFirstAndKey;
- (BOOL)isEditing;
- (BOOL)isEditorKey;
- (void)updateWithFocusRing;
- (long long)_textOffset;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)windowDidBecomeKeyNotification:(id)arg1;
- (void)windowDidResignKeyNotification:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (struct CGRect)editingTextRect;
- (void)_errorDuplicateColor:(id)arg1;
- (void)didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)currentEditor;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)endEditing;
- (BOOL)abortEditing;

@end

@interface NSColorPickerColorSpacePopUp : NSPopUpButton
{
}

- (void)_commonInitNSColorPickerColorSpacePopUp;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)willPopUpNotification:(id)arg1;
- (void)doneSendingPopUpAction:(id)arg1;
- (BOOL)_isShowingKeyboardFocus;
- (void)_setNeedsDisplayInRectWithFocus:(struct CGRect)arg1;
- (void)colorPanelColorDidChange:(id)arg1;
- (BOOL)resignFirstResponder;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)_colorSpaceForColorDisplaysAsGeneric:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)selectedColorSpace;

@end

@interface NSHSBSliders : NSColorSpaceSliders
{
    id hueSlider;
    id saturationSlider;
    id brightnessSlider;
    id hueText;
    id saturationText;
    id brightnessText;
    id hsbView;
    NSColor *currColor;
    NSColor *backgroundColor;
    id sliderMatrix;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)arg1;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
- (struct CGSize)requiredMinSize;
- (void)viewSizeChanged:(id)arg1;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;

@end

@interface NSCMYKSliders : NSColorSpaceSliders
{
    id cyanSlider;
    id yellowSlider;
    id magentaSlider;
    id blackSlider;
    id cyanText;
    id yellowText;
    id magentaText;
    id blackText;
    id cmykView;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)arg1;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
- (struct CGSize)requiredMinSize;
- (void)viewSizeChanged:(id)arg1;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;

@end

@interface NSRGBSliders : NSColorSpaceSliders
{
    id redSlider;
    id greenSlider;
    id blueSlider;
    id rgbView;
    id redText;
    id greenText;
    id blueText;
    id rgbText;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)arg1;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
- (struct CGSize)requiredMinSize;
- (void)viewSizeChanged:(id)arg1;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;

@end

@interface NSGreySliders : NSColorSpaceSliders
{
    id greySlider;
    id greyText;
    id greyView;
    id greyViewInside;
    id greyButtons[5];
    id opacityButtons;
    double opacityDistanceFromBottom;
    BOOL alphaButtonsAreHidden;
}

+ (id)genericColorSpace;
- (void)_configureGreyButton:(id)arg1 index:(long long)arg2;
- (void)setGreyButton0:(id)arg1;
- (void)setGreyButton1:(id)arg1;
- (void)setGreyButton2:(id)arg1;
- (void)setGreyButton3:(id)arg1;
- (void)setGreyButton4:(id)arg1;
- (void)setGreyButton5:(id)arg1;
- (id)provideNewSubview:(id)arg1;
- (void)dealloc;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
- (struct CGSize)requiredMinSize;
- (void)viewSizeChanged:(id)arg1;
- (void)greySliderFrameChangedNotification:(id)arg1;
- (void)jumpSlider:(id)arg1;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;
- (void)alphaControlAddedOrRemoved:(id)arg1;

@end

@interface NSColorSpaceSliders : NSObject <NSSliderViewRequiredMethods>
{
    id colorPanel;
    id controllingPicker;
    NSColorPanelTextController *textController;
    NSColorSpace *activeColorSpace;
}

+ (id)genericColorSpace;
- (id)fieldEditableControl;
- (id)provideNewSubview:(id)arg1;
- (void)setMatchedColor:(id)arg1;
- (id)regularColorIfPossible:(id)arg1;
- (void)setColor:(id)arg1;
- (void)viewSizeChanged:(id)arg1;
- (void)_adjustControls:(id)arg1 andSetColor:(BOOL)arg2;
- (void)adjustControls:(id)arg1;
- (void)finishProvideNewSubviewSetup;
- (void)setActiveColorSpace:(id)arg1;
- (id)activeColorSpace;
- (void)takeColorSpaceFrom:(id)arg1;
- (void)dealloc;
- (void)_timedAdjustTextControl:(id)arg1;
- (struct CGSize)requiredMinSize;

@end

@interface NSColorPickerSliders : NSColorPicker <NSColorPickingCustom>
{
    id sliderModePopUp;
    id slidersView;
    id greySliders;
    id rgbSliders;
    id hsbSliders;
    id cmykSliders;
    id currViewObject;
    id sliderContainer;
    id colorProfileButton;
    long long modeMask;
}

- (BOOL)worksWhenModal;
- (void)_selectPopUpWithTag:(long long)arg1;
- (void)_removePopUpWithTag:(long long)arg1;
- (void)showGreyScaleView:(id)arg1;
- (void)showRGBView:(id)arg1;
- (void)showCMYKView:(id)arg1;
- (void)showHSBView:(id)arg1;
- (void)takeColorSpaceFrom:(id)arg1;
- (struct CGSize)requiredMinSizeFor:(id)arg1;
- (struct CGSize)minContentSize;
- (void)_redisplayColorProfileButtonIfNeeded;
- (void)replaceSubviewWith:(id)arg1;
- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (void)_setupProfileUI;
- (void)_adjustToMode;
- (id)provideNewView:(BOOL)arg1;
- (double)_insertionOrder;
- (id)buttonToolTip;
- (void)alphaControlAddedOrRemoved:(id)arg1;
- (void)forceSetMode:(long long)arg1;
- (void)setMode:(long long)arg1;
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (void)setColor:(id)arg1;
- (void)viewSizeChanged:(id)arg1;
- (void)_saveMode;
- (long long)_savedMode;
- (void)_restoreMode;

@end

@interface NSColorPickerUser : NSColorPicker <NSColorPickingCustom>
{
    id userPickerView;
    id tiffView;
    id reserved1;
    id renamePanelController;
    NSPopUpButton *palettePopUpButton;
    id reserved2;
    id optionsPopUp;
    BOOL bScaleOrNot;
    NSMutableDictionary *imageDictionary;
    id paste;
    id renameField;
    id defaultTiffImage;
    id removeField;
    NSString *currImageName;
    NSMenuItem *spectrumMenuItem;
}

- (id)_imageFromItemTitle:(id)arg1;
- (void)_setCurrImageName:(id)arg1;
- (void)dealloc;
- (id)_shortNameFor:(id)arg1;
- (BOOL)saveImageNamed:(id)arg1 andShowWarnings:(BOOL)arg2;
- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (id)provideNewView:(BOOL)arg1;
- (BOOL)pasteItemUpdate:(id)arg1;
- (double)_insertionOrder;
- (id)buttonToolTip;
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (void)setColor:(id)arg1;
- (void)_saveMode;
- (void)_restoreMode;
- (BOOL)worksWhenModal;
- (void)_switchImage:(id)arg1 andUpdateColor:(BOOL)arg2;
- (void)switchImage:(id)arg1;
- (id)_newImageName:(id)arg1;
- (void)_addImage:(id)arg1 named:(id)arg2;
- (void)_open:(id)arg1 fromImage:(id)arg2 withName:(id)arg3;
- (void)_open:(id)arg1;
- (void)open:(id)arg1;
- (id)_popUpButton;
- (id)validateRename;
- (void)_rename:(id)arg1;
- (void)rename:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (BOOL)_removeOrRename:(id)arg1;
- (void)_remove:(id)arg1;
- (void)remove:(id)arg1;

@end

@interface NSColorPickerUserView : NSView
{
    id currImage;
    struct CGPoint currentPt;
    id colorPanel;
    id controllingPicker;
    NSImage *_imageForLockFocusUse;
}

- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct CGRect)arg1;
- (void)moveCurrentPointInDirection:(struct CGPoint)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)storeColorPanel:(id)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_createImageForLockFocusUseIfNecessary;
- (void)_clearImageForLockFocusUse;
- (id)_getColorFromImageAtPoint:(struct CGPoint)arg1;
- (void)setImage:(id)arg1;
- (void)_resizeImage;
- (void)drawRect:(struct CGRect)arg1;
- (id)colorFromPoint:(struct CGPoint)arg1;
- (id)color;
- (BOOL)_pointInPicker:(struct CGPoint *)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (void)registerForFilenameDragTypes;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)dealloc;

@end

@interface NSColorPickerWheel : NSColorPicker <NSColorPickingCustom>
{
    id wheelView;
    id boxWheelView;
    id brightnessSlider;
    BOOL previouslyTracking;
}

- (id)initWithPickerMask:(unsigned long long)arg1 colorPanel:(id)arg2;
- (id)provideNewView:(BOOL)arg1;
- (void)viewSizeChanged:(id)arg1;
- (double)_insertionOrder;
- (id)buttonToolTip;
- (BOOL)supportsMode:(long long)arg1;
- (long long)currentMode;
- (void)setColor:(id)arg1;
- (BOOL)worksWhenModal;
- (id)brightnessSlider:(id)arg1;

@end

@interface NSColorPickerWheelView : NSView
{
    id displayWheelImage;
    struct CGPoint currentPt;
    BOOL tracking;
    id colorPanel;
    id controllingPicker;
    double brightness;
}

- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct CGRect)arg1;
- (void)moveCurrentPointInDirection:(struct CGPoint)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (id)storeColorPanel:(id)arg1;
- (void)setColor:(id)arg1;
- (id)color;
- (id)brightColor;
- (BOOL)isTracking;
- (id)setBrightness:(double)arg1;
- (id)_compositeImage;
- (BOOL)_pointInPicker:(struct CGPoint *)arg1;
- (struct CGPoint)_pointFromColor:(id)arg1;
- (void)viewSizeChanged:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)_resizeView;
- (void)drawRect:(struct CGRect)arg1;
- (id)_brightColorFromPoint:(struct CGPoint)arg1 fullBrightness:(BOOL)arg2;
- (id)_colorFromPoint:(struct CGPoint)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;

@end

@interface NSColorProfile : NSObject <NSCoding>
{
    void *_profile;
    void *_header;
    void *_location;
    void *_md5;
    NSString *_name;
    void *_reserved[2];
}

+ (id)availableProfiles;
- (id)initWithColorSyncProfile:(void *)arg1;
- (id)initWithICCProfileData:(id)arg1;
- (id)initWithColorSyncInfo:(void *)arg1;
- (void)finalize;
- (void)dealloc;
- (void *)colorSyncProfile;
- (id)ICCProfileData;
- (void *)MD5;
- (id)localizedName;
- (id)description;
- (unsigned int)_colorSyncProfileSpace;
- (unsigned int)_colorSyncProfileClass;
- (long long)_appropriateColorPanelSliderPane;
- (long long)_isGenericProfile;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface NSColorScaleSliderCell : NSSliderCell
{
    int _scaleType;
    NSBitmapImageRep *_scaleBitmap;
    BOOL _scaleBitmapValid;
    NSColor *_scaleColor;
}

- (BOOL)_usesCustomTrackImage;
- (void)_computeColorScaleIfNecessaryWithSize:(struct CGSize)arg1;
- (void)_drawCustomTrackWithTrackRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)setDrawsTrackAsColorScaleType:(int)arg1;
- (void)setColor:(id)arg1;

@end

@interface NSColorScaleSlider : NSSlider
{
}

+ (void)initialize;
- (void)setDrawsTrackAsColorScaleType:(int)arg1;
- (void)setColor:(id)arg1;

@end

@interface NSColorSpace : NSObject <NSCoding>
{
    id _profile;
    struct {
        unsigned int colorSpaceID:8;
        unsigned int storageType:3;
        unsigned int replacedDuringUnarchiving:1;
        unsigned int :20;
        unsigned int :32;
    } _flags;
    void *__cgColorSpace;
    void *_reserved[5];
}

+ (id)specialColorSpaceWithID:(int)arg1;
+ (id)genericRGBColorSpace;
+ (id)genericGrayColorSpace;
+ (id)genericCMYKColorSpace;
+ (id)deviceRGBColorSpace;
+ (id)deviceGrayColorSpace;
+ (id)deviceCMYKColorSpace;
+ (id)sRGBColorSpace;
+ (id)adobeRGB1998ColorSpace;
+ (id)genericGamma22GrayColorSpace;
+ (id)_invertedGenericGrayColorSpace;
+ (id)_invertedDeviceGrayColorSpace;
+ (id)colorSpaceForColorSpaceName:(id)arg1;
+ (id)availableColorSpacesWithModel:(long long)arg1;
- (id)initWithColorProfile:(id)arg1;
- (id)_initWithCGColorSpaceNoCache:(struct CGColorSpace *)arg1;
- (id)initWithCGColorSpace:(struct CGColorSpace *)arg1;
- (id)initWithICCProfileData:(id)arg1;
- (id)initWithColorSyncProfile:(void *)arg1;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (id)ICCProfileData;
- (void)_createProfileFor:(unsigned int)arg1;
- (struct CGColorSpace *)CGColorSpace;
- (void *)colorSyncProfile;
- (id)colorProfile;
- (long long)numberOfColorComponents;
- (long long)colorSpaceModel;
- (BOOL)_isDeviceColorSpace;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)localizedName;
- (id)colorSpaceName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface NSColorWell : NSControl
{
    NSColor *_color;
    id _target;
    SEL _action;
    struct __cwFlags {
        unsigned int isActive:1;
        unsigned int isBordered:1;
        unsigned int cantDraw:1;
        unsigned int isNotContinuous:1;
        unsigned int reservedColorWell:28;
    } _cwFlags;
}

+ (void)initialize;
+ (void)colorPanelColorChanged:(id)arg1;
+ (void)_delayedDeactiveWindowlessWell:(id)arg1;
- (id)_takeColorFrom:(id)arg1 andSendAction:(BOOL)arg2;
- (id)_takeColorFromAndSendActionIfContinuous:(id)arg1;
- (id)_takeColorFromDoAction:(id)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (void)_colorWellCommonAwake;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)_hasKeyboardFocus;
- (void)setNeedsDisplay:(BOOL)arg1;
- (BOOL)drawColor;
- (void)drawWellInside:(struct CGRect)arg1;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (struct __CFDictionary *)_coreUIBorderDrawOptions;
- (void)_drawBorderInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)deactivate;
- (void)takeColorFrom:(id)arg1;
- (BOOL)isActive;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)_shouldOrderFront;
- (void)activate:(BOOL)arg1;
- (BOOL)acceptsFirstResponder;
- (void)_performActivationClickWithShiftDown:(BOOL)arg1;
- (void)performClick:(id)arg1;
- (void)altModifySelection:(id)arg1;
- (void)shiftModifySelection:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)acceptColor:(id)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)color;
- (void)setColor:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSColorWell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isOpaque;

@end

@interface NSComboBox : NSTextField
{
    id _dataSource;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)hasVerticalScroller;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (struct CGSize)intercellSpacing;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (double)itemHeight;
- (void)setItemHeight:(double)arg1;
- (long long)numberOfVisibleItems;
- (void)setNumberOfVisibleItems:(long long)arg1;
- (void)setButtonBordered:(BOOL)arg1;
- (BOOL)isButtonBordered;
- (BOOL)completes;
- (void)setCompletes:(BOOL)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (void)setUsesDataSource:(BOOL)arg1;
- (BOOL)usesDataSource;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)reloadData;
- (void)noteNumberOfItemsChanged;
- (void)scrollItemAtIndexToTop:(long long)arg1;
- (void)scrollItemAtIndexToVisible:(long long)arg1;
- (void)selectItemAtIndex:(long long)arg1;
- (void)deselectItemAtIndex:(long long)arg1;
- (long long)indexOfSelectedItem;
- (long long)numberOfItems;
- (void)addItemWithObjectValue:(id)arg1;
- (void)addItemsWithObjectValues:(id)arg1;
- (void)insertItemWithObjectValue:(id)arg1 atIndex:(long long)arg2;
- (void)removeItemWithObjectValue:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeAllItems;
- (void)selectItemWithObjectValue:(id)arg1;
- (id)itemObjectValueAtIndex:(long long)arg1;
- (id)objectValueOfSelectedItem;
- (long long)indexOfItemWithObjectValue:(id)arg1;
- (id)objectValues;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)mouseDownCanMoveWindow;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSComboBoxCell : NSTextFieldCell
{
    id _delegate;
    id _dataSource;
    struct __cbcFlags {
        unsigned int usesDataSource:1;
        unsigned int completes:1;
        unsigned int buttonBordered:1;
        unsigned int popUpIsUp:1;
        unsigned int filteringEvents:1;
        unsigned int drawing:1;
        unsigned int synchronizingSelection:1;
        unsigned int reserved:9;
        unsigned int visibleItems:16;
    } _cbcFlags;
    NSButtonCell *_buttonCell;
    NSTableView *_tableView;
    NSScrollView *_scrollView;
    NSWindow *_popUp;
    NSMutableArray *_popUpList;
    struct CGRect *_cellFrame;
    void *_reserved;
}

+ (void)initialize;
- (void)tableViewAction:(id)arg1;
- (void)initPopUpWindow;
- (void)_initializeButtonCell;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (void)_setCellFrame:(struct CGRect)arg1;
- (struct CGRect)_cellFrame;
- (void)setControlSize:(unsigned long long)arg1;
- (double)_buttonWidth;
- (double)_buttonHeight;
- (struct CGRect)_focusRingFrameForFrame:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (BOOL)hasVerticalScroller;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (struct CGSize)intercellSpacing;
- (void)setItemHeight:(double)arg1;
- (void)setButtonBordered:(BOOL)arg1;
- (void)_setButtonBordered:(BOOL)arg1;
- (BOOL)isButtonBordered;
- (BOOL)_isButtonBordered;
- (double)itemHeight;
- (void)setNumberOfVisibleItems:(long long)arg1;
- (long long)numberOfVisibleItems;
- (BOOL)isOpaque;
- (void)setUsesDataSource:(BOOL)arg1;
- (BOOL)usesDataSource;
- (void)setDataSource:(id)arg1;
- (void)_setDataSource:(id)arg1;
- (id)dataSource;
- (void)reloadData;
- (void)selectItemAtIndex:(long long)arg1;
- (void)deselectItemAtIndex:(long long)arg1;
- (long long)indexOfSelectedItem;
- (long long)numberOfItems;
- (void)noteNumberOfItemsChanged;
- (void)addItemWithObjectValue:(id)arg1;
- (void)addItemsWithObjectValues:(id)arg1;
- (void)insertItemWithObjectValue:(id)arg1 atIndex:(long long)arg2;
- (void)removeItemWithObjectValue:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeAllItems;
- (void)selectItemWithObjectValue:(id)arg1;
- (id)itemObjectValueAtIndex:(long long)arg1;
- (id)objectValueOfSelectedItem;
- (long long)indexOfItemWithObjectValue:(id)arg1;
- (id)objectValues;
- (void)setEnabled:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (struct CGRect)boundsForTextCell:(struct CGRect)arg1;
- (struct CGRect)boundsForButtonCell:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)_computeBezelRectWithTextCellFrame:(struct CGRect)arg1 inView:(id)arg2 topLeft:(struct CGRect *)arg3 bottomLeft:(struct CGRect *)arg4 left:(struct CGRect *)arg5 right:(struct CGRect *)arg6 top:(struct CGRect *)arg7 bottom:(struct CGRect *)arg8;
- (void)_drawThemeComboBoxButtonWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setControlView:(id)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct __CFDictionary *)_coreUIDrawOptionsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_textDimsWhenDisabled;
- (long long)interiorBackgroundStyle;
- (BOOL)shouldEdit:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_shouldRegisterForEditingNotifications;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (BOOL)_isFilteringEvents;
- (void)_appWillTerminate:(id)arg1;
- (void)_combobox_windowDidBecomeKey:(id)arg1;
- (void)_windowWillOrderOut:(id)arg1;
- (void)_combobox_windowWillBeginSheet:(id)arg1;
- (void)filterEvents:(id)arg1;
- (void)dismissPopUp:(id)arg1;
- (void)orderOutPopUpWindow:(id)arg1;
- (struct CGRect)frameForPopUpWithOldFrame:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2 controlView:(id)arg3;
- (void)_updatePopUpWindowFrameFirstTimeInSession:(BOOL)arg1;
- (void)_numberOfRowsDidChangeInComboBoxTableView:(id)arg1;
- (void)popUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (BOOL)_controlView:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)scrollItemAtIndexToTop:(long long)arg1;
- (void)scrollItemAtIndexToVisible:(long long)arg1;
- (void)synchronizeTableViewSelectionWithStringValue:(id)arg1;
- (void)synchronizeTableViewSelectionWithText:(id)arg1;
- (void)comboBoxTextDidEndEditing:(id)arg1;
- (id)completedString:(id)arg1;
- (void)_updateLengthAndSelectedRange:(id)arg1;
- (void)_noteLengthAndSelectedRange:(id)arg1;
- (void)_registerForCompletion:(id)arg1;
- (void)_unregisterForCompletion:(id)arg1;
- (void)endEditing:(id)arg1;
- (void)_completeNoRecursion:(id)arg1;
- (void)_complete:(id)arg1;
- (BOOL)completes;
- (void)setCompletes:(BOOL)arg1;
- (void)_old_encodeWithCoder_NSComboBoxCell:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSComboBoxCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setFormatter:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_needRedrawOnWindowChangedKeyState;

@end

@interface NSComboBoxWindow : NSWindow
{
    NSComboBoxCell *_comboBoxCell;
    NSWindow *_attachedToParent;
}

- (id)initWithContentRect:(struct CGRect)arg1 comboBoxCell:(id)arg2;
- (void)dealloc;
- (BOOL)worksWhenModal;
- (BOOL)isKeyWindow;
- (BOOL)canBecomeVisibleWithoutLogin;
- (void)setShownAboveComboBox:(BOOL)arg1;
- (BOOL)hasShadow;
- (void)_commonAwake;
- (void)_attachToParentWindow;
- (void)_detachFromParentWindow;
- (void)orderFront:(id)arg1;
- (void)orderWindow:(long long)arg1 relativeTo:(long long)arg2;
- (void)makeKeyAndOrderFront:(id)arg1;
- (void)orderOut:(id)arg1;

@end

@interface NSComboTableView : NSTableView
{
    long long _lastReturnedNumberOfRows;
}

- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (long long)numberOfRows;
- (id)initWithCoder:(id)arg1;

@end

@interface NSComboBoxButtonCell : NSButtonCell
{
}

@end

@interface NSConcreteGlyphGenerator : NSGlyphGenerator
{
    char *bidiTypes;
    char *bidiLevels;
}

+ (id)sharedGlyphGenerator;
- (void)generateGlyphsForGlyphStorage:(id)arg1 desiredNumberOfCharacters:(unsigned long long)arg2 glyphIndex:(unsigned long long *)arg3 characterIndex:(unsigned long long *)arg4;

@end

@interface NSControl : NSView
{
    long long _tag;
    id _cell;
    struct __conFlags {
        unsigned int enabled:1;
        unsigned int ignoreMultiClick:1;
        unsigned int calcSize:1;
        unsigned int drawingAncestor:1;
        unsigned int ibReserved:1;
        unsigned int updateCellFocus:1;
        unsigned int reserved:26;
    } _conFlags;
}

+ (void)initialize;
+ (void)setCellClass:(Class)arg1;
+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (BOOL)mouseDownCanMoveWindow;
- (void)sizeToFit;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)calcSize;
- (id)cell;
- (void)setCell:(id)arg1;
- (id)selectedCell;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (long long)tag;
- (void)setTag:(long long)arg1;
- (long long)selectedTag;
- (void)setIgnoresMultiClick:(BOOL)arg1;
- (BOOL)ignoresMultiClick;
- (long long)mouseDownFlags;
- (long long)sendActionOn:(long long)arg1;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (void)setFloatingPointFormat:(BOOL)arg1 left:(unsigned long long)arg2 right:(unsigned long long)arg3;
- (unsigned long long)alignment;
- (void)setAlignment:(unsigned long long)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (void)setFormatter:(id)arg1;
- (id)formatter;
- (void)setStringValue:(id)arg1;
- (void)setIntValue:(int)arg1;
- (void)setIntegerValue:(long long)arg1;
- (void)setAttributedStringValue:(id)arg1;
- (void)setFloatValue:(float)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)setObjectValue:(id)arg1;
- (id)stringValue;
- (id)attributedStringValue;
- (int)intValue;
- (long long)integerValue;
- (float)floatValue;
- (double)doubleValue;
- (id)objectValue;
- (void)setNeedsDisplay;
- (void)updateCell:(id)arg1;
- (void)_updateCellImage:(id)arg1;
- (void)updateCellInside:(id)arg1;
- (void)drawCellInside:(id)arg1;
- (void)drawCell:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)setFocusRingType:(unsigned long long)arg1;
- (unsigned long long)focusRingType;
- (BOOL)_hasEditableCell;
- (void)selectCell:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (BOOL)_resetIncrementalSearchOnFailure;
- (id)_stringSearchParametersForListingViews;
- (void)takeIntValueFrom:(id)arg1;
- (void)takeIntegerValueFrom:(id)arg1;
- (void)takeFloatValueFrom:(id)arg1;
- (void)takeDoubleValueFrom:(id)arg1;
- (void)takeStringValueFrom:(id)arg1;
- (void)takeObjectValueFrom:(id)arg1;
- (id)_findCurrentEditor;
- (BOOL)_shouldShowFirstResponderForCell:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_shouldTrackWithNonEditableCell;
- (void)mouseDown:(id)arg1;
- (void)_postFocusChangedNotification;
- (void)_setMouseTrackingForCell:(id)arg1;
- (void)_clearMouseTrackingForCell:(id)arg1;
- (void)_removeAllCellMouseTracking;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(id)arg1;
- (id)currentEditor;
- (BOOL)abortEditing;
- (void)_validateEditing:(id)arg1;
- (void)validateEditing;
- (id)_setWindow:(id)arg1;
- (void)resetCursorRects;
- (void)updateTrackingAreas;
- (void)_setControlTextDelegateFromOld:(id)arg1 toNew:(id)arg2;
- (void)performClick:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)_rightMouseUpOrDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)arg1;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;

@end

@interface NSController : NSObject <NSCoding>
{
    void *_reserved;
    void *_reserved2;
    int _specialPurposeType;
    id _bindingAdaptor;
    NSMutableArray *_editors;
    NSMutableArray *_declaredKeys;
    NSMutableDictionary *_dependentKeyToModelKeyTable;
    NSMutableDictionary *_modelKeyToDependentKeyTable;
    NSMutableArray *_modelKeysToRefreshEachTime;
    struct __bindingsControllerFlags {
        unsigned int _alwaysPresentsApplicationModalAlerts:1;
        unsigned int _refreshesAllModelKeys:1;
        unsigned int _multipleObservedModelObjects:1;
        unsigned int _isEditing:1;
        unsigned int _reservedController:28;
    } _bindingsControllerFlags;
    NSMutableDictionary *_reservedOther;
    id _modelObservingTracker;
    id _expectedObservingInfo;
    id _singleValueAccessor;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (Class)_modelObservingTrackerClass;
+ (id)_keyValueBindingAccessPoints;
+ (id)_modelAndProxyKeys;
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
- (void)_init;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_dealloc;
- (void)dealloc;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (id)_controllerKeys;
- (void)_setDeclaredKeys:(id)arg1;
- (id)_declaredKeys;
- (void)_addDeclaredKey:(id)arg1;
- (void)_removeDeclaredKey:(id)arg1;
- (void)_setSpecialPurposeType:(long long)arg1;
- (long long)_specialPurposeType;
- (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)willChangeValueForKey:(id)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)_notifyEditorStateChanged:(BOOL)arg1;
- (void)_finishEditingState;
- (void)objectDidBeginEditing:(id)arg1;
- (void)objectDidEndEditing:(id)arg1;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)arg1;
- (BOOL)alwaysPresentsApplicationModalAlerts;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)_controllerEditor:(id)arg1 didCommit:(BOOL)arg2 contextInfo:(id)arg3;
- (BOOL)isEditing;
- (id)_singleValueForKey:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1 operationType:(long long)arg2;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (id)_singleMutableArrayValueForKeyPath:(id)arg1;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)_observesModelObjects;
- (id)_modelAndProxyKeysObserved;
- (BOOL)_shouldSendObserverNotificationForModelOrProxyKey:(id)arg1 keyPath:(id)arg2 ofObject:(id)arg3;
- (BOOL)_shouldSuppressObserverNotificationFromObject:(id)arg1 keyPath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setModelKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
- (id)_modelKeysTriggeringChangeNotificationsForDependentKey:(id)arg1;
- (void)_setRefreshesAllModelKeys:(BOOL)arg1;
- (BOOL)_refreshesAllModelKeys;

@end

@interface _NSControllerEditorSheetContext : NSObject
{
    id _delegate;
    SEL _didCommitSelector;
    void *_embeddedContextInfo;
}

@end

@interface _NSControllerObjectProxy : NSObject
{
    id _controller;
}

- (id)initWithController:(id)arg1;
- (void)clearController;
- (long long)_requestTypeForOperationKey:(id)arg1;
- (id)_valueWithOperatorKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (id)_proxyMutableArrayValueForKey:(id)arg1;
- (id)_proxyMutableArrayValueForKeyPath:(id)arg1;
- (id)mutableArrayValueForKey:(id)arg1;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (BOOL)validateValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)validateValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;

@end

@interface NSControllerConfigurationBinder : NSBinder
{
    struct __controllerConfigurationBinderFlags {
        unsigned int _ignoreChanges:1;
        unsigned int _reservedControllerConfigurationBinder:31;
    } _controllerConfigurationBinderFlags;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (void)_connectionWasBroken;
- (Class)valueClassForBinding:(id)arg1;
- (void)_updateFilterPredicate:(id)arg1;
- (void)_updateSortDescriptors:(id)arg1;
- (void)_updateSelectionIndexes:(id)arg1;
- (void)_updateSelectionIndexPaths:(id)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)controller:(id)arg1 didChangeToSelectionIndexes:(id)arg2;
- (void)controller:(id)arg1 didChangeToSelectionIndexPaths:(id)arg2;
- (void)controller:(id)arg1 didChangeToSortDescriptors:(id)arg2;
- (void)controller:(id)arg1 didChangeToFilterPredicate:(id)arg2;

@end

@interface NSCrayon : NSObject
{
    NSString *name;
    NSColor *color;
    NSImage *image;
    struct CGPoint origin;
    NSCrayonRow *parentCrayonRow;
}

- (id)initWithName:(id)arg1 color:(id)arg2 image:(id)arg3;
- (void)dealloc;
- (id)description;
- (id)localizedColorNameComponent;
- (id)name;
- (id)color;
- (id)image;
- (struct CGPoint)origin;
- (id)parentCrayonRow;
- (id)parentCrayonView;
- (void)setName:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setOrigin:(struct CGPoint)arg1;
- (void)setParentCrayonRow:(id)arg1;
- (struct CGRect)rectIncludingShadow;
- (struct CGRect)rectWithoutShadow;
- (void)drawFocusRingInView:(id)arg1;
- (void)drawCrayonLayer;
- (void)drawShadowLayer;
- (id)crayonToLeft;
- (id)crayonToRight;

@end

@interface NSCrayonRow : NSObject
{
    NSMutableArray *crayons;
    struct CGPoint origin;
    NSImage *image;
    double yOffset;
    NSColorPickerCrayonView *parentCrayonView;
}

- (id)initWithCapacity:(unsigned long long)arg1 origin:(struct CGPoint)arg2 image:(id)arg3 yOffset:(double)arg4;
- (void)dealloc;
- (id)crayons;
- (void)addCrayon:(id)arg1;
- (unsigned long long)count;
- (id)crayonAtIndex:(unsigned long long)arg1;
- (id)lastCrayon;
- (unsigned long long)indexOfCrayon:(id)arg1;
- (id)objectEnumerator;
- (id)crayonClosestToIndex:(unsigned long long)arg1;
- (id)crayonToLeftOfCrayon:(id)arg1;
- (id)crayonToRightOfCrayon:(id)arg1;
- (id)parentCrayonView;
- (void)setParentCrayonView:(id)arg1;
- (struct CGRect)rectIncludingShadow;
- (struct CGRect)rectWithoutShadow;
- (void)drawCrayonLayer;
- (void)drawShadowLayer;

@end

@interface NSCursor : NSObject <NSCoding>
{
    struct CGPoint _hotSpot;
    struct _cursorFlags {
        unsigned int onMouseExited:1;
        unsigned int onMouseEntered:1;
        unsigned int cursorType:8;
        unsigned int :22;
    } _flags;
    id _image;
}

+ (void)initialize;
+ (id)_buildCursor:(id)arg1 cursorData:(struct CGPoint)arg2;
+ (id)arrowCursor;
+ (id)IBeamCursor;
+ (id)pointingHandCursor;
+ (id)closedHandCursor;
+ (id)openHandCursor;
+ (id)resizeLeftCursor;
+ (id)resizeRightCursor;
+ (id)resizeLeftRightCursor;
+ (id)resizeUpCursor;
+ (id)resizeDownCursor;
+ (id)resizeUpDownCursor;
+ (id)crosshairCursor;
+ (id)disappearingItemCursor;
+ (id)operationNotAllowedCursor;
+ (id)busyButClickableCursor;
+ (id)contextualMenuCursor;
+ (void)hide;
+ (void)unhide;
+ (void)setHiddenUntilMouseMoves:(BOOL)arg1;
+ (id)currentCursor;
+ (id)currentSystemCursor;
+ (void)pop;
+ (id)_makeCursors;
+ (id)_setHelpCursor:(BOOL)arg1;
+ (BOOL)helpCursorShown;
+ (id)dragCopyCursor;
+ (id)_copyDragCursor;
+ (id)dragLinkCursor;
+ (id)_genericDragCursor;
+ (id)_handCursor;
+ (id)_closedHandCursor;
+ (id)_moveCursor;
+ (id)_waitCursor;
+ (id)_crosshairCursor;
+ (id)_horizontalResizeCursor;
+ (id)_verticalResizeCursor;
+ (id)_bottomLeftResizeCursor;
+ (id)_topLeftResizeCursor;
+ (id)_bottomRightResizeCursor;
+ (id)_topRightResizeCursor;
+ (id)_resizeLeftCursor;
+ (id)_resizeRightCursor;
+ (id)_resizeLeftRightCursor;
- (id)initWithImage:(id)arg1 hotSpot:(struct CGPoint)arg2;
- (id)initWithImage:(id)arg1 foregroundColorHint:(id)arg2 backgroundColorHint:(id)arg3 hotSpot:(struct CGPoint)arg4;
- (void)_setImage:(id)arg1;
- (id)init;
- (void)dealloc;
- (long long)_coreCursorType;
- (void)_getImageAndHotSpotFromCoreCursor;
- (id)image;
- (struct CGPoint)hotSpot;
- (void)setOnMouseExited:(BOOL)arg1;
- (void)setOnMouseEntered:(BOOL)arg1;
- (BOOL)isSetOnMouseExited;
- (BOOL)isSetOnMouseEntered;
- (id)_premultipliedARGBBitmap;
- (void)set;
- (id)forceSet;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)push;
- (void)pop;

@end

@interface NSCustomImageRep : NSImageRep
{
    SEL _drawMethod;
    id _drawObject;
    unsigned int _reserved;
}

+ (void)initialize;
- (id)init;
- (id)initWithDrawSelector:(SEL)arg1 delegate:(id)arg2;
- (id)initWithDrawSelector:(SEL)arg1 delegate:(id)arg2 flipped:(BOOL)arg3;
- (SEL)drawSelector;
- (id)delegate;
- (BOOL)isFlipped;
- (void)setFlipped:(BOOL)arg1;
- (BOOL)_wantsToBeCached;
- (BOOL)draw;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCustomObject : NSObject <NSCoding>
{
    NSString *className;
    id object;
    id extension;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)nibInstantiate;
- (void)setObject:(id)arg1;
- (id)className;
- (void)setClassName:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSCustomResource : NSObject <NSCoding>
{
    NSString *className;
    NSString *resourceName;
}

+ (void)initialize;
+ (void)pushBundleForImageSearch:(id)arg1;
+ (void)popBundleForImageSearch;
+ (id)bundleForCurrentNib;
+ (id)bundleForImageSearch;
- (id)init;
- (void)dealloc;
- (id)className;
- (void)setClassName:(id)arg1;
- (id)resourceName;
- (void)setResourceName:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_loadImageWithName:(id)arg1;
- (id)loadImageWithName:(id)arg1;
- (id)loadCIImageWithName:(id)arg1;
- (id)loadSoundWithName:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;

@end

@interface NSCustomView : NSView
{
    NSString *className;
    NSView *view;
    id extension;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)className;
- (void)setClassName:(id)arg1;

@end

@interface NSDatePicker : NSControl
{
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (unsigned long long)datePickerStyle;
- (void)setDatePickerStyle:(unsigned long long)arg1;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (unsigned long long)datePickerMode;
- (void)setDatePickerMode:(unsigned long long)arg1;
- (unsigned long long)datePickerElements;
- (void)setDatePickerElements:(unsigned long long)arg1;
- (id)calendar;
- (void)setCalendar:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)dateValue;
- (void)setDateValue:(id)arg1;
- (double)timeInterval;
- (void)setTimeInterval:(double)arg1;
- (id)minDate;
- (void)setMinDate:(id)arg1;
- (id)maxDate;
- (void)setMaxDate:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)isOpaque;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)removeFromSuperview;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDragged:(id)arg1;

@end

@interface _NSDatePickerRange : NSObject
{
    NSDate *_date;
    double _timeInterval;
    BOOL _anchorOnLeft;
}

- (id)description;
- (id)initWithDate:(id)arg1 timeInterval:(double)arg2;
- (id)initWithDatePickerRange:(id)arg1;
- (id)init;
- (id)date;
- (double)timeInterval;
- (void)setDate:(id)arg1;
- (void)setTimeInterval:(double)arg1;
- (id)endDate;
- (void)setAnchorLeft;
- (void)setAnchorRight;
- (BOOL)isAnchoredLeft;
- (BOOL)isAnchoredRight;
- (id)dateRangeExtendedWithDate:(id)arg1;
- (id)dateRangeTrimmedFromNearestEndWithDate:(id)arg1;
- (id)dateRangeAnchoredSelectionWithDate:(id)arg1;
- (BOOL)containsDayGranularityDate:(id)arg1 forDatePickerCell:(id)arg2;
- (BOOL)containsMonth:(long long)arg1 year:(long long)arg2 forDatePickerCell:(id)arg3;
- (struct _NSRange)daysInMonth:(long long)arg1 year:(long long)arg2 forDatePickerCell:(id)arg3;
- (void)dealloc;

@end

@interface _NSDatePickerCellExtraIvars : NSObject
{
    NSButtonCell *_retreatMonthButtonCell;
    NSButtonCell *_advanceMonthButtonCell;
    NSButtonCell *_returnToHomeMonthButtonCell;
    NSDateComponents *_calendarDisplayedMonthDateComponents;
    NSColor *_disabledTextColor;
    NSNumberFormatter *_numberFormatter;
}

- (id)retreatMonthButtonCellForDatePickerCell:(id)arg1;
- (id)advanceMonthButtonCellForDatePickerCell:(id)arg1;
- (id)returnToHomeMonthButtonCellForDatePickerCell:(id)arg1;
- (id)calendarDisplayedMonthDateComponents;
- (void)releaseCalendarSpecificResources;
- (id)disabledTextColor;
- (void)setDisabledTextColor:(id)arg1;
- (void)dealloc;

@end

@interface _NSDatePickerCellSubfield : NSObject <NSCopying>
{
    int _element;
    struct CGRect _frame;
    NSString *_dateFormat;
    NSString *_stringValue;
}

- (id)initWithElement:(int)arg1 frame:(struct CGRect)arg2 dateFormat:(id)arg3 stringValue:(id)arg4;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (int)element;
- (struct CGRect)frame;
- (id)dateFormat;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (void)adjustFrameOriginX:(double)arg1;

@end

@interface NSDatePickerCell : NSActionCell
{
    double _timeInterval;
    NSDate *_minDate;
    NSDate *_maxDate;
    struct __dateCellFlags {
        unsigned int elements:16;
        unsigned int controlStyle:3;
        unsigned int controlMode:2;
        unsigned int trackingHand:2;
        unsigned int reserved2:4;
        unsigned int drawsBackground:1;
        unsigned int digitsEntered:2;
        unsigned int forcesLeadingZeroes:1;
        unsigned int wrapsDateComponentArithmetic:1;
    } _dcFlags;
    id _delegate;
    NSCalendar *_calendar;
    NSLocale *_locale;
    NSTimeZone *_timeZone;
    NSColor *_backgroundColor;
    NSColor *_textColor;
    int _indexOfSelectedSubfield;
    int _reserved0;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
}

+ (void)_updateInstancesForDatePreferencesChange;
+ (void)_datePreferencesChanged:(id)arg1;
+ (void)initialize;
+ (id)_sharedDateFormatter;
- (void)_updateInstancesForDatePreferencesChange;
- (void)_registerInstance;
- (void)_unregisterInstance;
- (id)init;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setEnabled:(BOOL)arg1;
- (unsigned long long)datePickerStyle;
- (void)setDatePickerStyle:(unsigned long long)arg1;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (unsigned long long)datePickerMode;
- (void)setDatePickerMode:(unsigned long long)arg1;
- (unsigned long long)datePickerElements;
- (void)setDatePickerElements:(unsigned long long)arg1;
- (id)calendar;
- (void)setCalendar:(id)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (id)dateValue;
- (void)setDateValue:(id)arg1;
- (double)timeInterval;
- (void)setTimeInterval:(double)arg1;
- (id)minDate;
- (void)setMinDate:(id)arg1;
- (id)maxDate;
- (void)setMaxDate:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (struct CGSize)cellSize;
- (void)setAlignment:(unsigned long long)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)keyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSDisplayFontBinder : NSBinder
{
    NSFont *_originalFont;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (void)_init;
- (void)_dealloc;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)_availableBindingsWithFontBindingsFiltered:(id)arg1;
- (BOOL)_isAnyFontBindingBoundToController:(id)arg1;
- (id)_valueForBindingWithResolve:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2;
- (id)_fontFromBindingsWithMode:(struct __NSKeyValueCodingControllerModeType)arg1 referenceFont:(id)arg2 fallbackFont:(id)arg3;
- (id)availableBindings;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (void)_connectionWasEstablished;
- (id)_adjustFontOfObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 triggerRedisplay:(BOOL)arg3 compareDirectly:(BOOL)arg4 toFont:(id)arg5;
- (id)updateInvalidatedFont:(id)arg1 forObject:(id)arg2;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSWindowTitleBinder : NSTitleBinder
{
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;

@end

@interface NSTitleBinder : NSBinder
{
}

+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;

@end

@interface NSDisplayPatternTitleBinder : NSDisplayPatternBinder
{
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)_enumeratedDisplayPatternTitleBindings:(unsigned long long)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (BOOL)isBindingReadOnly:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (id)availableBindings;
- (id)_patternForBinding:(id)arg1;
- (void)_setDisplayValue:(id)arg1 object:(id)arg2 triggerRedisplay:(BOOL)arg3;

@end

@interface NSDisplayPatternBinder : NSBinder
{
    NSString *_displayPattern;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)_enumeratedDisplayPatternTitleBindings:(unsigned long long)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (id)_cellOrControlForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (void)_dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (id)availableBindings;
- (void)removeBinding:(id)arg1;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (BOOL)_handleObservingRefresh;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)setDisplayPattern:(id)arg1;
- (id)displayPattern;
- (id)_patternForBinding:(id)arg1;
- (void)_setDisplayValue:(id)arg1 object:(id)arg2 triggerRedisplay:(BOOL)arg3;
- (void)_adjustObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 triggerRedisplay:(BOOL)arg3;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSDocFormatWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableData *_primaryData;
    NSMutableData *_secondaryData;
    NSMutableData *_primaryIndex;
    NSMutableData *_secondaryIndex;
    NSMutableData *_tableOfContents;
    NSMutableData *_documentData;
    NSMutableData *_tableData;
    NSMutableData *_charData;
    NSMutableData *_parData;
    NSMutableData *_summaryInfoData;
    NSMutableData *_documentSummaryInfoData;
    NSMutableArray *_fontArray;
    NSRunStorage *_charFlags;
    BOOL _needsTrailingBreak;
}

- (void)_writeCharacterData;
- (void)_writeParagraphData;
- (void)_writeDocumentData;
- (void)_writeInfoStringForKey:(id)arg1 number:(unsigned int)arg2 headerData:(id)arg3 contentsData:(id)arg4;
- (void)_writeSummaryData:(BOOL)arg1;
- (id)docFormatData;
- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (void)setDocumentAttributes:(id)arg1;

@end

@interface NSDocFormatReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_primaryData;
    NSMutableData *_secondaryData;
    NSMutableData *_primaryIndex;
    NSMutableData *_secondaryIndex;
    NSMutableData *_tableOfContents;
    NSMutableDictionary *_contentsDictionary;
    NSData *_documentData;
    NSData *_tableData;
    NSMutableArray *_fontNames;
    struct __CFArray *_predefinedOffsets;
    struct __CFDictionary *_predefinedAttributes;
    NSMutableRLEArray *_parAttributes;
    NSMutableRLEArray *_charAttributes;
    NSArray *_previousRowArray;
    NSMutableDictionary *_fontCache;
    unsigned long long _magicNumber;
    unsigned long long _versionNumber;
    unsigned long long _versionCode;
    unsigned long long _productNumber;
    unsigned long long _globalFlags;
    unsigned long long _charsetNumber;
    unsigned long long _bytesPerCharacter;
    unsigned int _stringEncoding;
    unsigned long long _lastModifier;
    unsigned long long _predefinedHeaderLength;
    long long _errorCode;
    long long _indexingLimit;
    long long _thumbnailLimit;
    double _defaultTabInterval;
    long long _firstEntryNumber;
    long long _textStart;
    long long _textLength;
    long long _predefinedInfoStart;
    long long _predefinedInfoEnd;
    long long _charInfoStart;
    long long _charInfoEnd;
    long long _parInfoStart;
    long long _parInfoEnd;
    long long _fontInfoStart;
    long long _fontInfoEnd;
    long long _docInfoStart;
    long long _docInfoEnd;
    long long _metaInfoStart;
    long long _metaInfoEnd;
    long long _textInfoStart;
    long long _textInfoEnd;
    BOOL _removeRowInfo;
}

+ (id)defaultParagraphStyle;
- (id)_fontWithNumber:(long long)arg1 size:(double)arg2 bold:(BOOL)arg3 italic:(BOOL)arg4;
- (BOOL)_colorComponentsForIndex:(long long)arg1 redComponent:(long long *)arg2 greenComponent:(long long *)arg3 blueComponent:(long long *)arg4;
- (unsigned long long)_underlineStyleForArgument:(unsigned long long)arg1;
- (void)_removePrivateAttributes;
- (void)_endTableRow:(id)arg1;
- (void)_fixParagraphStyles;
- (void)_appendSanitizedTextBytes:(const char *)arg1 length:(unsigned long long)arg2 encoding:(unsigned int)arg3 isSymbol:(BOOL)arg4 attributes:(id)arg5;
- (void)_appendTextBytes:(const char *)arg1 length:(unsigned long long)arg2 encoding:(unsigned int)arg3 attributes:(id)arg4;
- (id)paragraphAttributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)_attributes1ForPageOffset:(long long)arg1 entryOffset:(long long)arg2 baseAttributes:(id)arg3;
- (id)_attributes2ForPageOffset:(long long)arg1 entryOffset:(long long)arg2 blockType:(int)arg3 baseAttributes:(id)arg4;
- (void)_parseText1Full;
- (void)_parseText1Fast;
- (void)_parseText1;
- (void)_parseText2;
- (void)_parseText;
- (void)_parseParagraphAttributes1;
- (void)_parseParagraphAttributes2;
- (void)_parseParagraphAttributes;
- (void)_parseCharacterAttributes1;
- (void)_parseCharacterAttributes2;
- (void)_parseCharacterAttributes;
- (void)_parsePredefinedAttributes1;
- (id)_predefinedAttributes2ForIndex:(unsigned long long)arg1 depth:(long long)arg2;
- (void)_parsePredefinedAttributes2;
- (id)predefinedAttributesForIndex:(unsigned long long)arg1;
- (void)_parsePredefinedAttributes;
- (void)_parseFonts1;
- (void)_parseFonts2;
- (void)_parseFonts;
- (void)_parseSummaryInfo:(BOOL)arg1;
- (void)_parseDocumentAttributes1;
- (void)_parseDocumentAttributes2;
- (void)_parseDocumentAttributes;
- (void)_parseGlobals;
- (void)_addContentsToDictionary:(long long)arg1 depth:(long long)arg2;
- (void)_parseContentsDictionary;
- (void)_parse;
- (void)dealloc;
- (void)finalize;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;

@end

@interface NSDocumentErrorRecoveryAttempter : NSObject
{
    NSDocument *_document;
    NSURL *_absoluteURL;
    NSString *_typeName;
    NSDictionary *_overwriteRetryingInfo;
}

- (id)initWithDocument:(id)arg1 url:(id)arg2 type:(id)arg3 overwriteRetryingInfo:(id)arg4;
- (void)dealloc;
- (BOOL)_retrySavingAndReturnError:(id *)arg1;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;

@end

@interface NSDocument : NSObject <NSUserInterfaceValidations>
{
    NSWindow *_window;
    id _windowControllers;
    NSURL *_fileURL;
    NSString *_fileType;
    NSPrintInfo *_printInfo;
    long long _changeCount;
    NSView *savePanelAccessory;
    id _displayName;
    id _privateData;
    NSUndoManager *_undoManager;
    struct __docFlags {
        unsigned int inClose:1;
        unsigned int hasUndoManager:1;
        unsigned int isShowingPageLayout:1;
        unsigned int isRunningPrintOperation:1;
        unsigned int savePanelNameExtensionHidden:1;
        unsigned int reconciledToFileName:1;
        unsigned int checkingDisplayName:1;
        unsigned int definitelyHasUnsavedChanges:1;
        unsigned int definitelyHasUnautosavedChanges:1;
        unsigned int RESERVED:23;
    } _docFlags;
    NSString *_savePanelSaveType;
}

+ (void)initialize;
+ (BOOL)canConcurrentlyReadDocumentsOfType:(id)arg1;
+ (id)_fileModificationDateForURL:(id)arg1;
+ (BOOL)_hasOverrideForSelector:(SEL)arg1;
+ (id)_attributesOfItemAtURL:(id)arg1;
+ (void)_setAttributes:(id)arg1 ofItemAtURL:(id)arg2;
+ (void)_finishWritingWithOverwriteRetryingInfo:(id)arg1 afterSuccess:(BOOL)arg2;
+ (BOOL)_url:(id)arg1 matchesURL:(id)arg2 withCache:(CDStruct_55e19097 *)arg3;
+ (id)readableTypes;
+ (id)writableTypes;
+ (BOOL)isNativeType:(id)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)_initWithType:(id)arg1 error:(id *)arg2;
- (id)initWithType:(id)arg1 error:(id *)arg2;
- (BOOL)_initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)_initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (BOOL)_setFileReferenceURL:(id)arg1;
- (BOOL)_setDisplayName:(id)arg1;
- (BOOL)_reconcileDisplayNameAndTrackingInfoToFileURL;
- (void)_synchronizeWindowTitles;
- (void)_setFileURL:(id)arg1;
- (void)setFileURL:(id)arg1;
- (id)fileURL;
- (void)setFileType:(id)arg1;
- (id)fileType;
- (void)setFileModificationDate:(id)arg1;
- (id)fileModificationDate;
- (void)_errorWasPresentedWithRecovery:(BOOL)arg1 inContext:(CDStruct_f8f0024c *)arg2;
- (void)_presentError:(id)arg1 delegate:(id)arg2 didRecoverSelector:(SEL)arg3 context:(void *)arg4;
- (id)_willPresentRevertingError:(id)arg1;
- (void)_revertDocument;
- (void)_revertAlertSheet:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(void *)arg3;
- (void)revertDocumentToSaved:(id)arg1;
- (void)_resetMoveAndRenameSensing;
- (void)_deleteAutosavedContents;
- (void)_updateAfterReadingFromOrWritingToURL:(id)arg1 ofType:(id)arg2;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromFileWrapper:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
- (BOOL)_writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (id)_fileAttributesToWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (id)fileAttributesToWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)keepBackupFile;
- (void)saveDocument:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (void)_fileChangeAlertSheet:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(CDStruct_9c3019a5 *)arg3;
- (void)_runAlertPanelForFileOverwritten:(BOOL)arg1 moved:(BOOL)arg2 renamed:(BOOL)arg3 inTrash:(BOOL)arg4 orUnavailable:(BOOL)arg5 thenSaveDocumentWithDelegate:(id)arg6 didSaveSelector:(SEL)arg7 contextInfo:(void *)arg8;
- (void)_saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (id)_fileNameExtensionsForType:(id)arg1 forUseInSavePanel:(BOOL)arg2;
- (id)_allowedTypesFromSavePanelType;
- (void)changeSaveType:(id)arg1;
- (id)_savePanelAccessoryViewForWritableTypes:(id)arg1 defaultType:(id)arg2;
- (void)_setFileNameExtensionWasHiddenInLastRunSavePanel:(BOOL)arg1;
- (void)_savePanelWasPresented:(id)arg1 withResult:(long long)arg2 inContext:(CDStruct_9d861a21 *)arg3;
- (id)_defaultFromWritableTypeNames:(id)arg1;
- (id)_preparedSavePanelForOperation:(unsigned long long)arg1;
- (void)_runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (BOOL)shouldRunSavePanelWithAccessoryView;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)fileNameExtensionWasHiddenInLastRunSavePanel;
- (id)fileTypeFromLastRunSavePanel;
- (id)_willPresentSavingError:(id)arg1 forOperation:(unsigned long long)arg2 url:(id)arg3;
- (id)_willPresentSavingError:(id)arg1 forOperation:(unsigned long long)arg2 url:(id)arg3 type:(id)arg4 overwriteRetryingInfo:(id)arg5;
- (void)_saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)_editorCommittingFailedForSaveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)_finishSavingToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)hasUnautosavedChanges;
- (id)_autosavingContentsURLWithFileNameExtension:(id)arg1;
- (void)autosaveDocumentWithDelegate:(id)arg1 didAutosaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (id)autosavingFileType;
- (void)setAutosavedContentsFileURL:(id)arg1;
- (id)autosavedContentsFileURL;
- (void)_closeAlertSheet:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(CDStruct_f8f0024c *)arg3;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)close;
- (void)_document:(id)arg1 pageLayoutDidReturn:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)runPageLayout:(id)arg1;
- (void)_pageLayout:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(CDStruct_f8f0024c *)arg3;
- (void)runModalPageLayoutWithPrintInfo:(id)arg1 delegate:(id)arg2 didRunSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (BOOL)preparePageLayout:(id)arg1;
- (BOOL)shouldChangePrintInfo:(id)arg1;
- (void)setPrintInfo:(id)arg1;
- (id)printInfo;
- (void)printDocument:(id)arg1;
- (id)_willPresentPrintingError:(id)arg1;
- (void)_printDocumentWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 delegate:(id)arg3 didPrintSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)_editorCommittingFailedForPrintDocumentWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 delegate:(id)arg3 didPrintSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)printDocumentWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 delegate:(id)arg3 didPrintSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (void)_printOperation:(id)arg1 wasRunWithSuccess:(BOOL)arg2 inContext:(CDStruct_f8f0024c *)arg3;
- (void)runModalPrintOperation:(id)arg1 delegate:(id)arg2 didRunSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)presentError:(id)arg1;
- (id)willPresentError:(id)arg1;
- (id)windowControllers;
- (void)addWindowController:(id)arg1;
- (void)removeWindowController:(id)arg1;
- (id)windowNibName;
- (void)makeWindowControllers;
- (void)showWindows;
- (void)shouldCloseWindowController:(id)arg1 delegate:(id)arg2 shouldCloseSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)setWindow:(id)arg1;
- (id)_transferWindowOwnership;
- (void)windowControllerWillLoadNib:(id)arg1;
- (void)windowControllerDidLoadNib:(id)arg1;
- (BOOL)isDocumentEdited;
- (void)_updateForDocumentEdited:(BOOL)arg1;
- (double)autosavingDelay;
- (void)_autosaveForTimer:(id)arg1;
- (void)updateChangeCount:(unsigned long long)arg1;
- (id)windowForSheet;
- (void)_releaseUndoManager;
- (id)undoManager;
- (void)setUndoManager:(id)arg1;
- (BOOL)hasUndoManager;
- (void)setHasUndoManager:(BOOL)arg1;
- (void)_changeWasDone:(id)arg1;
- (void)_changeWasUndone:(id)arg1;
- (void)_changeWasRedone:(id)arg1;
- (id)displayName;
- (long long)_untitledDocumentNumber;
- (void)_handleDocumentFileChanges:(id)arg1;
- (BOOL)_isLocatedByURL:(id)arg1 withCache:(CDStruct_55e19097 *)arg2;
- (id)_bookmarkData;
- (id)_currentFileModificationDate;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (id)fileNameExtensionForType:(id)arg1 saveOperation:(unsigned long long)arg2;
- (BOOL)_canSave;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface NSDocumentMoreIVars : NSObject
{
    long long untitledDocumentNumber;
    NSURL *fileReferenceURL;
    NSNumber *originalParentFolderID;
    NSString *originalFileName;
    NSDate *fileModificationDate;
    NSURL *autosavedContentsFileURL;
    NSPointerArray *editors;
    long long changeCountSinceLastAutosave;
    struct __CFSet *javaVariantMethodsBeingInvoked;
    NSError *javaLastError;
    NSTimer *autosavingTimer;
    NSSavePanel *savePanel;
    BOOL isWritingDuringSaving;
    BOOL updateFileWrapperNamesDuringWriting;
    NSURL *originalContentsURLDuringWriting;
    NSDictionary *overwriteRetryingInfo;
    BOOL isAutosavingDisabledBecauseOfError;
    BOOL disabledSuddenTermination;
}

@end

@interface NSDocumentController : NSObject <NSCoding, NSUserInterfaceValidations>
{
    id _documents;
    id _moreVars;
    NSArray *_cachedTypeDescriptions;
    NSMutableDictionary *_recents;
    int _recentsLimit;
}

+ (void)initialize;
+ (id)sharedDocumentController;
+ (void)_setSharedDocumentController:(id)arg1;
+ (BOOL)_hasOverrideForSelector:(SEL)arg1;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)documents;
- (id)currentDocument;
- (id)currentDirectory;
- (id)_documentForURL:(id)arg1;
- (id)documentForURL:(id)arg1;
- (id)documentForWindow:(id)arg1;
- (void)_handleDocumentFileChanges:(id)arg1;
- (void)_appDidBecomeActive:(id)arg1;
- (void)addDocument:(id)arg1;
- (void)removeDocument:(id)arg1;
- (id)_willPresentCreationError:(id)arg1;
- (void)newDocument:(id)arg1;
- (id)_defaultType:(BOOL)arg1;
- (id)openUntitledDocumentAndDisplay:(BOOL)arg1 error:(id *)arg2;
- (id)makeUntitledDocumentOfType:(id)arg1 error:(id *)arg2;
- (id)_presentableFileNameFromURL:(id)arg1;
- (id)_willPresentOpeningError:(id)arg1 forURL:(id)arg2;
- (void)openDocument:(id)arg1;
- (id)_setupOpenPanel;
- (id)_openableTypes;
- (id)URLsFromRunningOpenPanel;
- (long long)runModalOpenPanel:(id)arg1 forTypes:(id)arg2;
- (void)_finishBatchedOpeningAndPresentErrors:(BOOL)arg1;
- (BOOL)_shouldDeferOpeningOrPrinting;
- (void)_deferOpeningOrPrintingWithInvocation:(id)arg1;
- (void)_willBeginAsyncOpeningOrPrinting;
- (void)_didEndAsyncOpeningOrPrinting;
- (void)_openDocumentsWithContentsOfURLs:(id)arg1 display:(BOOL)arg2 presentErrors:(BOOL)arg3;
- (void)_finishOpeningDocument:(id)arg1 andShowWindows:(BOOL)arg2;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2 error:(id *)arg3;
- (id)makeDocumentWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)reopenDocumentForURL:(id)arg1 withContentsOfURL:(id)arg2 error:(id *)arg3;
- (id)makeDocumentForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (void)setAutosavingDelay:(double)arg1;
- (double)autosavingDelay;
- (void)_saveDocuments:(id)arg1;
- (void)_document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(id)arg3;
- (void)saveAllDocuments:(id)arg1;
- (BOOL)hasEditedDocuments;
- (long long)_editedDocumentCount;
- (void)reviewUnsavedDocumentsWithAlertTitle:(id)arg1 cancellable:(BOOL)arg2 delegate:(id)arg3 didReviewAllSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)_closeDocumentsStartingWith:(id)arg1 shouldClose:(BOOL)arg2 closeAllContext:(id)arg3;
- (void)closeAllDocumentsWithDelegate:(id)arg1 didCloseAllSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)presentError:(id)arg1;
- (id)willPresentError:(id)arg1;
- (unsigned long long)maximumRecentDocumentCount;
- (void)_writeRecentDocumentDefaultsForKey:(id)arg1;
- (struct OpaqueLSSharedFileListRef *)_perAppRecentDocumentFileList;
- (void)_readRecentDocumentDefaultsForKey:(id)arg1;
- (id)_recentDocumentRecordsKeyForMenu:(id)arg1;
- (id)_recentDocumentRecordsKeyForUserInterfaceItem:(id)arg1;
- (void)clearRecentDocuments:(id)arg1;
- (void)noteNewRecentDocument:(id)arg1;
- (void)_notePendingRecentDocumentURLsForKey:(id)arg1;
- (void)noteNewRecentDocumentURL:(id)arg1;
- (id)recentDocumentURLs;
- (id)defaultType;
- (id)typeForContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)documentClassNames;
- (Class)documentClassForType:(id)arg1;
- (id)displayNameForType:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface NSDocumentControllerMoreIVars : NSObject
{
    BOOL shouldCreateUI;
    double autosavingDelay;
    int cachedUTIUsage;
    struct OpaqueLSSharedFileListRef *perAppRecentDocumentFileList;
    NSDocumentControllerOpenRecentMenuDelegate *openRecentMenuDelegate;
    NSMutableDictionary *cachedRecentDocumentURLsPerKey;
    NSMutableDictionary *orderedPendingRecentDocumentURLsPerKey;
    struct __CFSet *javaVariantMethodsBeingInvoked;
    NSError *javaLastError;
    BOOL isAutoreopening;
    NSMutableArray *autoreopenRecordsForMissingDocuments;
    BOOL hasAutoreopened;
    BOOL isAutosavingDuringTermination;
    NSMutableArray *autoreopenRecordsForClosedDocuments;
    NSMutableArray *deferredOpeningAndPrintingInvocations;
    NSArray *batchedOpenings;
    BOOL batchedOpeningTriedToReopen;
    NSOperationQueue *concurrentOpeningOperations;
    NSWindow *windowThatBecameKeyDuringOpening;
    BOOL appIsBecomingActiveDuringOpening;
    id appWillBecomeActiveObserver;
    id windowDidBecomeKeyObserver;
    id appDidBecomeActiveObserver;
    BOOL appIsResigningActiveDuringOpening;
    id appWillResignActiveObserver;
    id windowDidResignKeyObserver;
    id appDidResignActiveObserver;
}

@end

@interface NSDocumentControllerOpening : NSObject
{
    NSURL *_url;
    NSDocument *_document;
    NSString *_recentDocumentRecordsKey;
    NSError *_error;
}

- (void)dealloc;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain) NSString *recentDocumentRecordsKey; // @synthesize recentDocumentRecordsKey=_recentDocumentRecordsKey;
@property(retain) NSDocument *document; // @synthesize document=_document;
@property(retain, setter=setURL:) NSURL *url; // @synthesize url=_url;

@end

@interface NSDocumentControllerOpenRecentMenuDelegate : NSObject <NSMenuDelegate>
{
    NSDocumentController *_controller;
}

- (id)initWithController:(id)arg1;
- (BOOL)updateMenu:(id)arg1 withEvent:(id)arg2 withFlags:(unsigned long long)arg3;

@end

@interface NSDocumentControllerTerminationContext : NSObject
{
    id shouldTerminateDelegate;
    SEL shouldTerminateSelector;
}

@end

@interface NSDocumentControllerPrintingContext : NSObject
{
    BOOL openedDocumentJustForPrinting;
    NSMutableArray *documentURLs;
    NSDictionary *printSettings;
    BOOL showPrintPanels;
    id didPrintDelegate;
    SEL didPrintSelector;
    void *didPrintContextInfo;
}

- (void)dealloc;

@end

@interface NSDocumentControllerClosingContext : NSObject
{
    id didCloseDelegate;
    SEL didCloseSelector;
    void *didCloseContextInfo;
}

@end

@interface NSDownloadController : NSObject
{
    NSString *_mimeType;
    NSString *_riskCategory;
    NSString *_contentType;
    NSString *_filename;
    NSString *_messageText;
    NSString *_informativeText;
    NSAlert *_alert;
    NSDictionary *_downloadInfo;
    id _modalDelegate;
    SEL _didEndSelector;
    BOOL _autoOpen;
    BOOL _useSave;
    char _reserved[2];
    id reserved1[5];
}

- (void)_setMessageAndInformativeText;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;
- (id)downloadInformation;
- (id)_createAlert;
- (long long)runModalWindow;
- (void)beginSheetModalForWindow:(id)arg1 modalDelegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)setMessageText:(id)arg1;
- (id)messageText;
- (void)setInformativeText:(id)arg1;
- (id)informativeText;
- (id)window;

@end

@interface _NSDragManager : NSObject
{
    NSDate *_autoscrollDate;
}

+ (void)initialize;
+ (double)_autoscrollDelay;
+ (id)sharedDragManager;
- (int)registerDragTypes:(id)arg1 forWindow:(id)arg2;
- (BOOL)unregisterDragTypesForWindow:(id)arg1;
- (void)slideImage:(id)arg1 from:(struct CGPoint)arg2 to:(struct CGPoint)arg3;
- (void)dragImage:(id)arg1 fromWindow:(id)arg2 at:(struct CGPoint)arg3 offset:(struct CGSize)arg4 event:(id)arg5 pasteboard:(id)arg6 source:(id)arg7 slideBack:(BOOL)arg8;
- (id)_dragLocalSource;
- (void)registerForCompletionOfDrag:(void *)arg1;
- (void)_setAutoscrollDate:(id)arg1;
- (id)_autoscrollDate;
- (void)_resetAutoscrollTimeDelta;

@end

@interface NSCoreDragManager : _NSDragManager
{
    NSWindow *_dragWindow;
    struct CGPoint _mouseLocation;
    struct CGSize _offset;
    struct OpaqueCoreDrag *_drag;
    NSImage *_image;
    id _dragLocalSource;
    id _filePromiseDragSource;
    id _alternateDragSource;
    struct OpaqueCoreDragHandler *applicationHandlerRef;
}

+ (void)insertText:(id)arg1;
+ (void)doCommandBySelector:(SEL)arg1;
- (void)registerForCompletionOfDrag:(void *)arg1;
- (int)registerDragTypes:(id)arg1 forWindow:(id)arg2;
- (BOOL)unregisterDragTypesForWindow:(id)arg1;
- (void)slideImage:(id)arg1 from:(struct CGPoint)arg2 to:(struct CGPoint)arg3;
- (void)_dragUntilMouseUp:(id)arg1 accepted:(char *)arg2;
- (id)_dragLocalSource;
- (void)_setAlternateDragSource:(id)arg1;
- (id)_alternateDragSource;
- (struct CGSize)_offset;
- (id)_image;
- (id)_setImage:(struct CGPoint)arg1 fromWindow:(id)arg2;
- (void)dragImage:(id)arg1 fromWindow:(id)arg2 at:(struct CGPoint)arg3 offset:(struct CGSize)arg4 event:(id)arg5 pasteboard:(id)arg6 source:(id)arg7 slideBack:(BOOL)arg8;

@end

@interface NSDragDestination : NSObject <NSDraggingInfo, NSDraggingInfoPrivate>
{
    NSWindow *_window;
    struct OpaqueCoreDragHandler *trackingHandlerRef;
    struct OpaqueCoreDragHandler *receiveHandlerRef;
    NSString *_pasteboardName;
    BOOL _finalSlide;
    unsigned long long _lastDragDestinationOperation;
    struct CGPoint _finalSlideLocation;
    id _target;
    struct __CFRunLoopTimer *_updateTimer;
    struct OpaqueCoreDrag *_drag;
    NSMutableSet *_dragCompletionTargets;
    struct __CFRunLoop *_runLoop;
}

- (id)_initWithWindow:(id)arg1;
- (void)_setTrackingHandlerRef:(struct OpaqueCoreDragHandler *)arg1;
- (void)_setReceiveHandlerRef:(struct OpaqueCoreDragHandler *)arg1;
- (struct OpaqueCoreDragHandler *)_trackingHandlerRef;
- (struct OpaqueCoreDragHandler *)_receiveHandlerRef;
- (void)_setDragRef:(struct OpaqueCoreDrag *)arg1;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (id)draggingDestinationWindow;
- (unsigned long long)draggingSourceOperationMask;
- (struct CGPoint)draggingLocation;
- (struct CGPoint)draggedImageLocation;
- (id)draggedImage;
- (id)draggingPasteboard;
- (id)draggingSource;
- (long long)draggingSequenceNumber;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)_setFinalSlideLocation:(struct CGPoint)arg1;
- (struct CGPoint)_finalSlideLocation;
- (void)_setLastDragDestinationOperation:(unsigned long long)arg1;
- (unsigned long long)_lastDragDestinationOperation;
- (id)_target;
- (void)_setTarget:(id)arg1;
- (id)_dragCompletionTargets;
- (void)_setDragCompletionTargets:(id)arg1;
- (void)_unsetFinalSlide;
- (void)slideDraggedImageTo:(struct CGPoint)arg1;
- (void)_startDraggingUpdates;
- (void)_stopDraggingUpdates;
- (void)_doAutoscroll:(id)arg1;

@end

@interface NSDrawerWindow : NSWindow
{
    NSDrawer *_drawer;
    NSWindow *_drawerParentWindow;
}

+ (Class)frameViewClassForStyleMask:(unsigned long long)arg1;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 drawer:(id)arg5;
- (void)_changeTexture;
- (void)_setParentWindow:(id)arg1;
- (id)_parentWindow;
- (struct CGSize)_potentialMinSize;
- (struct CGSize)_potentialMaxSize;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (BOOL)hasShadow;
- (void)_changeKeyAndMainLimitedOK:(BOOL)arg1;
- (BOOL)isKeyWindow;
- (BOOL)canBecomeKeyWindow;
- (void)becomeKeyWindow;
- (void)_drawerTakeFocus;
- (void)makeKeyWindow;
- (void)resignKeyWindow;
- (void)_changeDrawerKeyState;
- (void)_changeDrawerMainState;
- (void)_changeDrawerFirstResponder;
- (id)_generateScaledBackground;
- (id)_compositedBackground;
- (BOOL)_useMetalPattern;
- (void)_resetDrawerFirstResponder;
- (void)orderOut:(id)arg1;
- (BOOL)isMainWindow;
- (BOOL)canBecomeMainWindow;
- (void)becomeMainWindow;
- (void)makeMainWindow;
- (void)resignMainWindow;
- (BOOL)_hasActiveControls;
- (void)_setForceActiveControls:(BOOL)arg1;
- (BOOL)worksWhenModal;
- (id)_getUndoManager:(BOOL)arg1;
- (BOOL)isExcludedFromWindowsMenu;
- (id)fieldEditor:(BOOL)arg1 forObject:(id)arg2;
- (void)_resetFirstResponder;
- (BOOL)makeFirstResponder:(id)arg1;
- (id)_newFirstResponderAfterResigning;
- (id)_oldFirstResponderBeforeBecoming;
- (void)_selectFirstKeyView;
- (void)resizeWithDelta:(struct CGPoint)arg1 fromFrame:(struct CGRect)arg2 beginOperation:(BOOL)arg3 endOperation:(BOOL)arg4;
- (BOOL)_isVertical;
- (BOOL)validateMenuItem:(id)arg1;
- (void)showToolbar:(id)arg1;
- (void)hideToolbar:(id)arg1;
- (void)toggleToolbarShown:(id)arg1;
- (void)runToolbarCustomizationPalette:(id)arg1;
- (void)performClose:(id)arg1;
- (void)performZoom:(id)arg1;
- (void)performMiniaturize:(id)arg1;
- (void)_adjustWindowToScreen;
- (BOOL)isMovableByWindowBackground;
- (void)_cycleDrawersReversed:(BOOL)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (double)_drawerHorizontalOpenOffset;
- (double)_drawerVerticalOpenOffset;
- (double)_drawerCloseThreshold;
- (double)_drawerTopOffset;
- (double)_drawerBottomOffset;
- (double)_drawerLeftOffset;
- (double)_drawerRightOffset;
- (double)_drawerDepthOffset;
- (double)_drawerDepthInset;
- (double)_drawerDefaultTopLeadingOffset;
- (double)_drawerDefaultBottomTrailingOffset;
- (double)_drawerDefaultLeftLeadingOffset;
- (double)_drawerDefaultRightTrailingOffset;
- (BOOL)_hasDarkShadow;
- (BOOL)_usesCustomDrawing;

@end

@interface NSDrawer : NSResponder
{
    unsigned long long _drawerState;
    unsigned long long _drawerNextState;
    unsigned long long _drawerEdge;
    unsigned long long _drawerNextEdge;
    unsigned long long _drawerPreferredEdge;
    float _drawerPercent;
    float _drawerPercentSaved;
    double _drawerLeadingOffset;
    double _drawerTrailingOffset;
    NSLock *_drawerLock;
    NSWindow *_drawerWindow;
    NSWindow *_drawerParentWindow;
    NSWindow *_drawerNextParentWindow;
    NSString *_drawerSaveName;
    double _drawerStartTime;
    double _drawerTotalTime;
    struct __CFRunLoop *_drawerLoop;
    struct __CFRunLoopTimer *_drawerTimer;
    id _drawerDelegate;
    unsigned int _drawerFlags;
    struct __CFRunLoopObserver *_drawerObserver;
}

+ (void)initialize;
+ (BOOL)_usesCorrectContentSize;
- (id)_initWithContentSize:(struct CGSize)arg1 preferredEdge:(unsigned long long)arg2;
- (id)initWithContentSize:(struct CGSize)arg1 preferredEdge:(unsigned long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setParentWindow:(id)arg1;
- (id)parentWindow;
- (void)setContentView:(id)arg1;
- (id)contentView;
- (void)_moveByOffset:(struct CGSize)arg1;
- (void)setPreferredEdge:(unsigned long long)arg1;
- (unsigned long long)preferredEdge;
- (void)open;
- (void)openOnEdge:(unsigned long long)arg1;
- (void)close;
- (void)open:(id)arg1;
- (void)close:(id)arg1;
- (void)toggle:(id)arg1;
- (void)removeImmediately:(BOOL)arg1;
- (BOOL)isOpen;
- (long long)state;
- (unsigned long long)edge;
- (void)setContentSize:(struct CGSize)arg1;
- (struct CGSize)contentSize;
- (void)setMinContentSize:(struct CGSize)arg1;
- (struct CGSize)minContentSize;
- (void)setMaxContentSize:(struct CGSize)arg1;
- (struct CGSize)maxContentSize;
- (void)setLeadingOffset:(double)arg1;
- (double)leadingOffset;
- (void)setTrailingOffset:(double)arg1;
- (double)trailingOffset;
- (void)setAutosaveName:(id)arg1;
- (id)autosaveName;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface NSDrawerBinder : NSViewStateBinder
{
    struct __drawerBinderFlags {
        unsigned int _visibleStateHasBeenSet:1;
        unsigned int _expectedVisibleState:1;
        unsigned int _reservedDrawerBinder:30;
    } _drawerBinderFlags;
}

+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (void)_connectionWasEstablished;
- (BOOL)shouldProcessObservations;
- (void)_updateDrawer:(id)arg1 withVisibilityState:(id)arg2;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (void)drawer:(id)arg1 didChangeToState:(BOOL)arg2;

@end

@interface NSDrawerFrame : NSFrameView
{
    NSColor *drawerBackground;
    long long trackingTag;
    unsigned long long drawerEdge;
    BOOL registeredForEdgeChanges;
    BOOL shouldInvalidateShadow;
}

+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minContentSizeForMinFrameSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (void)registerForEdgeChanges:(id)arg1;
- (void)shapeWindow;
- (void)_setShouldInvalidateShadow:(BOOL)arg1;
- (BOOL)_shouldInvalidateShadow;
- (struct CGSize)minFrameSize;
- (struct CGRect)contentRect;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGRect)resizeIndicatorRect;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawFrame:(struct CGRect)arg1;
- (void)_drawFrameRects:(struct CGRect)arg1;
- (id)contentFill;
- (void)adjustHalftonePhase;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_addTrackingRects;
- (void)_removeTrackingRects;
- (void)setEdge:(unsigned long long)arg1;
- (void)drawerDidOpen:(id)arg1;
- (void)drawerDidClose:(id)arg1;
- (void)resizeWithEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1;
- (void)_postFrameChangeNotification;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)dealloc;

@end

@interface NSEPSImageRep : NSImageRep
{
    struct CGPoint _bBoxOrigin;
    NSData *_epsData;
    NSPDFImageRep *_pdfImageRep;
}

+ (void)initialize;
+ (id)imageRepWithData:(id)arg1;
+ (id)_imagesFromIcon:(id)arg1 inApp:(id)arg2 zone:(struct _NSZone *)arg3;
+ (BOOL)canInitWithData:(id)arg1;
+ (id)imageUnfilteredTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)boundingBox;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (void)prepareGState;
- (BOOL)draw;
- (BOOL)_wantsToBeCached;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)EPSRepresentation;

@end

@interface NSEditableBinder : NSBinder
{
    struct __editableBinderFlags {
        unsigned int _objectSupportsEditable:1;
        unsigned int _referenceBinderRequestedEditableState:1;
        unsigned int _referenceBinderDidRequestEditableState:1;
        unsigned int _numberOfEditableBindings:4;
        unsigned int _objectSupportsEnabled:1;
        unsigned int _referenceBinderRequestedEnabledState:1;
        unsigned int _referenceBinderDidRequestEnabledState:1;
        unsigned int _numberOfEnabledBindings:4;
        unsigned int _objectSupportsHidden:1;
        unsigned int _referenceBinderRequestedHiddenState:1;
        unsigned int _referenceBinderDidRequestHiddenState:1;
        unsigned int _numberOfHiddenBindings:4;
        unsigned int _reservedEditableBinder:11;
    } _editableBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)_enumeratedEditableBindings:(unsigned long long)arg1;
+ (id)_enumeratedEnabledBindings:(unsigned long long)arg1;
+ (id)_enumeratedHiddenBindings:(unsigned long long)arg1;
+ (id)bindingsForObject:(id)arg1;
- (void)_init;
- (void)_copyDetailsFromBinder:(id)arg1;
- (void)_setObject:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (id)availableBindings;
- (void)_countBindings;
- (void)addBinding:(id)arg1 toController:(id)arg2 withKeyPath:(id)arg3 valueTransformer:(id)arg4 options:(id)arg5;
- (void)removeBinding:(id)arg1;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)arg1;
- (void)_requestEditableState:(BOOL)arg1;
- (void)_requestAnyEditableState;
- (void)_requestEnabledState:(BOOL)arg1;
- (void)_requestAnyEnabledState;
- (void)_requestHiddenState:(BOOL)arg1;
- (void)_requestAnyHiddenState;
- (BOOL)editableState;
- (BOOL)editableStateAtIndex:(unsigned long long)arg1;
- (BOOL)editableStateAtIndexPath:(id)arg1;
- (BOOL)_editableStateWithMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)enabledState;
- (BOOL)enabledStateAtIndex:(unsigned long long)arg1;
- (BOOL)enabledStateAtIndexPath:(id)arg1;
- (BOOL)_enabledStateWithMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)hiddenState;
- (BOOL)hiddenStateAtIndex:(unsigned long long)arg1;
- (BOOL)hiddenStateAtIndexPath:(id)arg1;
- (BOOL)_hiddenStateWithMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (void)_setStatesImmediatelyInObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 triggerRedisplay:(BOOL)arg3;
- (BOOL)shouldProcessObservations;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSEditorBinder : NSBinder
{
    struct __editorBinderFlags {
        unsigned int _conditionallySetsEditable:1;
        unsigned int _objectSupportsEditable:1;
        unsigned int _explicitlyRequestEditable:1;
        unsigned int _explicitEditableState:1;
        unsigned int _conditionallySetsEnabled:1;
        unsigned int _objectSupportsEnabled:1;
        unsigned int _explicitlyRequestEnabled:1;
        unsigned int _explicitEnabledState:1;
        unsigned int _conditionallySetsHidden:1;
        unsigned int _objectSupportsHidden:1;
        unsigned int _explicitlyRequestHidden:1;
        unsigned int _explicitHiddenState:1;
        unsigned int _reservedEditorBinder:20;
    } _editorBinderFlags;
    id _editableBinder;
}

+ (id)_pluginProtocol;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (void)_setObject:(id)arg1;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_noticeEditablePeerBinder:(id)arg1;
- (BOOL)shouldProcessObservations;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (BOOL)_isReferenceBinding:(id)arg1;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)setConditionallySetsEditable:(BOOL)arg1;
- (BOOL)conditionallySetsEditable;
- (void)setConditionallySetsEnabled:(BOOL)arg1;
- (BOOL)conditionallySetsEnabled;
- (void)setConditionallySetsHidden:(BOOL)arg1;
- (BOOL)selectionSupportsEnabledState;
- (BOOL)conditionallySetsHidden;
- (BOOL)_conditionallySetsStates;
- (BOOL)_isExplicitlyNonEditable;
- (void)_adjustStatesOfObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 state:(BOOL)arg3 triggerRedisplay:(BOOL)arg4;

@end

@interface NSEvent : NSObject <NSCopying, NSCoding>
{
    unsigned long long _type;
    struct CGPoint _location;
    unsigned int _modifierFlags;
    id _WSTimestamp;
    double _timestamp;
    long long _windowNumber;
    NSWindow *_window;
    NSGraphicsContext *_context;
    union {
        struct {
            int eventNumber;
            int clickCount;
            float pressure;
            double deltaX;
            double deltaY;
            int subtype;
            short buttonNumber;
            short reserved1;
            int reserved2[3];
        } mouse;
        struct {
            NSString *keys;
            NSString *unmodKeys;
            unsigned short keyCode;
            char isARepeat;
            int eventFlags;
            int reserved[5];
        } key;
        struct {
            int eventNumber;
            long long trackingNumber;
            void *userData;
            int reserved[6];
        } tracking;
        struct {
            double deltaX;
            double deltaY;
            double deltaZ;
            short subtype;
            short reserved1;
            int reserved2[6];
        } scrollWheel;
        struct {
            double deltaX;
            double deltaY;
            double deltaZ;
            int reserved[7];
        } axisGesture;
        struct {
            short subtype;
            char gestureEnded;
            char reserved;
            int value;
            float percentage;
            int reserved2[7];
        } miscGesture;
        struct {
            int subtype;
            long long data1;
            long long data2;
            int reserved[6];
        } misc;
        int tabletPointData[14];
        int tabletProximityData[14];
    } _data;
    void *_eventRef;
    void *reserved1;
    void *reserved2;
}

+ (id)mouseEventWithType:(unsigned long long)arg1 location:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 eventNumber:(long long)arg7 clickCount:(long long)arg8 pressure:(float)arg9;
+ (id)keyEventWithType:(unsigned long long)arg1 location:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 characters:(id)arg7 charactersIgnoringModifiers:(id)arg8 isARepeat:(BOOL)arg9 keyCode:(unsigned short)arg10;
+ (id)enterExitEventWithType:(unsigned long long)arg1 location:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 eventNumber:(long long)arg7 trackingNumber:(long long)arg8 userData:(void *)arg9;
+ (id)otherEventWithType:(unsigned long long)arg1 location:(struct CGPoint)arg2 modifierFlags:(unsigned long long)arg3 timestamp:(double)arg4 windowNumber:(long long)arg5 context:(id)arg6 subtype:(short)arg7 data1:(long long)arg8 data2:(long long)arg9;
+ (id)_eventsCancellingTouchesForWindow:(id)arg1;
+ (void)_clearCancelledTouches;
+ (struct CGPoint)mouseLocation;
+ (unsigned long long)modifierFlags;
+ (unsigned long long)pressedMouseButtons;
+ (double)doubleClickInterval;
+ (double)keyRepeatDelay;
+ (double)keyRepeatInterval;
+ (id)addGlobalMonitorForEventsMatchingMask:(unsigned long long)arg1 handler:(id)arg2;
+ (id)addLocalMonitorForEventsMatchingMask:(unsigned long long)arg1 handler:(id)arg2;
+ (void)removeMonitor:(id)arg1;
+ (id)_eventWithCGSEvent:(struct _CGSEventRecord)arg1;
+ (id)_eventWithEventRefInternal:(const void *)arg1;
+ (id)eventWithEventRef:(const void *)arg1;
+ (id)eventWithCGEvent:(struct __CGEvent *)arg1;
+ (void)setMouseCoalescingEnabled:(BOOL)arg1;
+ (BOOL)isMouseCoalescingEnabled;
+ (double)standardMagnificationThreshold;
+ (float)standardRotationThreshold;
+ (void)_resetDiscardMask;
+ (void)_discardEventsFromSubthread:(id)arg1;
+ (void)_discardEventsWithMask:(unsigned long long)arg1 eventTime:(unsigned long long)arg2;
+ (void)_discardEventsForTrackingArea:(id)arg1;
+ (void)_discardCursorEventsForWindowNumber:(long long)arg1 criteria:(long long)arg2;
+ (void)startPeriodicEventsAfterDelay:(double)arg1 withPeriod:(double)arg2;
+ (void)_stopPeriodicEventsForSource:(id)arg1;
+ (void)stopPeriodicEvents;
+ (id)_touchesFromSet:(id)arg1 matchingPhase:(unsigned long long)arg2 inView:(id)arg3 includeResting:(BOOL)arg4;
- (void)_fixCommandAlphaShifts;
- (BOOL)_isSynthesizedKeyEvent;
- (void)_setSynthesizedKeyEvent:(BOOL)arg1;
- (const void *)_eventRefInternal;
- (const void *)eventRef;
- (struct __CGEvent *)CGEvent;
- (void)_initAuxiliaryData;
- (void)_initTouches;
- (id)_initWithCGEvent:(struct __CGEvent *)arg1 eventRef:(void *)arg2;
- (id)_initWithCGSEvent:(struct _CGSEventRecord)arg1 eventRef:(void *)arg2;
- (struct _CGSEventRecord)_cgsEventRecord;
- (unsigned long long)type;
- (struct CGPoint)locationInWindow;
- (unsigned long long)modifierFlags;
- (double)timestamp;
- (id)window;
- (long long)windowNumber;
- (id)context;
- (long long)eventNumber;
- (long long)clickCount;
- (float)pressure;
- (long long)buttonNumber;
- (double)_eventRecordDelta:(long long)arg1;
- (double)deltaY;
- (double)deltaX;
- (double)deltaZ;
- (double)magnification;
- (id)characters;
- (BOOL)_matchesKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
- (id)charactersIgnoringModifiers;
- (BOOL)_isDeadkey;
- (void)_setEventRef:(void *)arg1;
- (void)_setTouches:(id)arg1;
- (void)_postFromSubthread:(struct __CFBoolean *)arg1;
- (void)_postAtStart:(BOOL)arg1;
- (BOOL)isARepeat;
- (unsigned short)keyCode;
- (long long)trackingNumber;
- (id)trackingArea;
- (void *)userData;
- (short)subtype;
- (long long)data1;
- (long long)data2;
- (BOOL)isGesture;
- (void *)_eventRef;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (long long)_nxeventTime;
- (unsigned long long)_cgsEventTime;
- (BOOL)_continuousScroll;
- (double)deviceDeltaX;
- (double)deviceDeltaY;
- (double)deviceDeltaZ;
- (id)_eventRelativeToWindow:(id)arg1;
- (id)_eventCancellingTouches;
- (unsigned long long)deviceID;
- (long long)absoluteX;
- (long long)absoluteY;
- (long long)absoluteZ;
- (unsigned long long)buttonMask;
- (struct CGPoint)tilt;
- (float)rotation;
- (float)tangentialPressure;
- (id)vendorDefined;
- (unsigned long long)vendorID;
- (unsigned long long)tabletID;
- (unsigned long long)pointingDeviceID;
- (unsigned long long)systemTabletID;
- (unsigned long long)vendorPointingDeviceType;
- (unsigned long long)pointingDeviceSerialNumber;
- (unsigned long long)uniqueID;
- (unsigned long long)capabilityMask;
- (unsigned long long)pointingDeviceType;
- (BOOL)isEnteringProximity;
- (id)_touchesMatchingPhase:(unsigned long long)arg1 inView:(id)arg2 includeResting:(BOOL)arg3;
- (id)touchesMatchingPhase:(unsigned long long)arg1 inView:(id)arg2;
- (BOOL)_isTouchesEnded;

@end

@interface _NSPeriodicEventSource : NSObject
{
    double delay;
    double period;
    struct __CFRunLoopTimer *timer;
    unsigned long long errorData;
}

- (void)addTimerToModes;

@end

@interface _NSGlobalEventObserver : _NSEventObserver
{
    struct OpaqueEventHandlerRef *_handler;
}

- (id)initMatchingEvents:(unsigned long long)arg1 handler:(id)arg2;
- (void)invalidate;

@end

@interface _NSLocalEventObserver : _NSEventObserver
{
}

+ (void)initialize;
- (id)initMatchingEvents:(unsigned long long)arg1 handler:(id)arg2;
- (void)invalidate;
- (void)recomputeObserverMask;

@end

@interface _NSEventObserver : NSObject
{
    unsigned long long _mask;
    id _block;
}

- (id)initMatchingEvents:(unsigned long long)arg1 handler:(id)arg2;
- (void)dealloc;
- (void)finalize;
- (void)invalidate;

@end

@interface __NSEventDiscardInfo : NSObject
{
    unsigned long long mask;
    unsigned long long time;
}

@end

@interface NSEventAuxiliary : NSObject
{
    NSMutableSet *touches;
}

@end

@interface NSFileLocationComponent : NSObject
{
    NSURL *_url;
    NSFileLocationComponent *_containerComponent;
    NSAttributedString *_iconAsAttributedString;
}

+ (void)flushCaches;
+ (id)leafFileLocationComponentWithURL:(id)arg1;
- (id)_initWithURL:(id)arg1;
- (void)dealloc;
- (id)url;
- (id)name;
- (id)containerComponent;
- (id)presentableName;
- (id)iconAsAttributedString;

@end

@interface NSFileLocator : NSObject <NSCopying>
{
    struct AliasRecord **_alias;
    NSString *_standardizedPath;
}

+ (BOOL)_shouldUseAliasToLocate:(const struct FSRef *)arg1;
+ (id)_stringByReplacingChar:(unsigned short)arg1 withChar:(unsigned short)arg2 inString:(id)arg3;
+ (id)bestLocationRepFromPath:(id)arg1;
+ (id)bestLocationRepFromURL:(id)arg1;
+ (BOOL)bestLocationRep:(id)arg1 matchesBestLocationRep:(id)arg2;
- (id)initWithBestLocationRep:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithProperties:(id)arg1;
- (id)initWithSpecifier:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)bestLocationRep;
- (id)properties;
- (id)specifier;
- (id)standardizedPath;
- (id)url;

@end

@interface NSFileSpecifier : NSObject <NSCopying>
{
    struct FSRef _ref;
}

+ (id)specifierWithPath:(id)arg1 traverseLink:(BOOL)arg2;
+ (id)specifierWithURL:(id)arg1 traverseLink:(BOOL)arg2;
- (id)initWithPath:(id)arg1 traverseLink:(BOOL)arg2;
- (id)initWithRef:(const struct FSRef *)arg1;
- (id)initWithURL:(id)arg1 traverseLink:(BOOL)arg2;
- (id)initWithParentSpecifier:(id)arg1 name:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)path;
- (id)parentSpecifier;
- (id)presentableName;
- (const struct FSRef *)asRef;

@end

@interface NSFileWrapper : NSObject <NSCoding>
{
    NSDictionary *_fileAttributes;
    NSString *_preferredFileName;
    NSString *_fileName;
    id _contents;
    NSImage *_icon;
    id _moreVars;
}

+ (void)initialize;
+ (id)_pathForURL:(id)arg1 reading:(BOOL)arg2 error:(id *)arg3;
+ (BOOL)_forPath:(id)arg1 getItemKind:(id *)arg2 modificationDate:(id *)arg3;
+ (BOOL)_canSafelyMapFilesAtPath:(id)arg1;
+ (id)_newContentsAtURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 oldChildrenByUniqueFileName:(id)arg4 options:(unsigned long long)arg5 error:(id *)arg6;
- (id)init;
- (id)_init;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initDirectoryWithFileWrappers:(id)arg1;
- (id)initRegularFileWithContents:(id)arg1;
- (id)initSymbolicLinkWithDestinationURL:(id)arg1;
- (id)initWithSerializedRepresentation:(id)arg1;
- (void)dealloc;
- (BOOL)isDirectory;
- (BOOL)isRegularFile;
- (BOOL)isSymbolicLink;
- (void)_observePreferredFileNameOfChild:(id)arg1;
- (void)setPreferredFilename:(id)arg1;
- (id)preferredFilename;
- (void)setFilename:(id)arg1;
- (id)filename;
- (void)setFileAttributes:(id)arg1;
- (id)fileAttributes;
- (void)_setFileType:(id)arg1;
- (void)setIcon:(id)arg1;
- (id)icon;
- (BOOL)_matchesItemKind:(id)arg1 modificationDate:(id)arg2;
- (BOOL)matchesContentsOfURL:(id)arg1;
- (BOOL)_readContentsFromURL:(id)arg1 path:(id)arg2 itemKind:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
- (BOOL)readFromURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (void)_forWritingToURL:(id)arg1 returnContentsLazyReadingError:(id *)arg2;
- (BOOL)_writeContentsToURL:(id)arg1 path:(id)arg2 originalContentsURL:(id)arg3 tryHardLinking:(BOOL)arg4 didHardLinking:(char *)arg5 error:(id *)arg6;
- (id)_attributesToWrite;
- (void)_updateDescendantFileNames;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 originalContentsURL:(id)arg3 error:(id *)arg4;
- (id)_newImpl;
- (id)serializedRepresentation;
- (void)_addParent:(id)arg1;
- (void)_removeParent:(id)arg1;
- (void)_initDirectoryContents;
- (id)_addChild:(id)arg1;
- (void)_resetFileModificationDate;
- (id)addFileWrapper:(id)arg1;
- (id)addRegularFileWithContents:(id)arg1 preferredFilename:(id)arg2;
- (id)_uniqueFileNameOfChild:(id)arg1;
- (void)_removeChild:(id)arg1 forUniqueFileName:(id)arg2;
- (void)removeFileWrapper:(id)arg1;
- (id)fileWrappers;
- (id)keyForFileWrapper:(id)arg1;
- (id)regularFileContents;
- (id)symbolicLinkDestinationURL;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSFileWrapperMoreIVars : NSObject
{
    NSString *fileType;
    NSURL *contentsURL;
    BOOL contentsMustBeReadWithoutMapping;
    BOOL attributesMustBeWrittenSoNoHardLinking;
    NSHashTable *parents;
    NSError *contentsLazyReadingError;
    NSDictionary *cachedDirectoryChildrenAsDictionary;
}

@end

@interface NSTextFinder : NSObject <NSWindowDelegate, NSComboBoxDelegate>
{
    NSComboBox *findComboBox;
    NSComboBox *replaceComboBox;
    NSTextField *statusField;
    NSButton *ignoreCaseButton;
    NSButton *replaceAllButton;
    NSButton *replaceButton;
    NSButton *findNextButton;
    NSButton *findPreviousButton;
    NSButton *replaceAndFindButton;
    NSButton *wrapAroundButton;
    NSPopUpButton *matchPopUp;
    NSTextView *fieldEditor;
    NSString *findString;
    BOOL lastFindWasSuccessful;
    BOOL findStringChangedInUI;
    BOOL findStringNeedsToBeRefreshedFromPB;
    long long lastChangeCount;
    BOOL caseInsensitiveSearchDefault;
    long long substringMatchDefault;
    NSMutableArray *recentFindStrings;
    NSMutableArray *recentFindOptions;
    NSMutableArray *recentReplaceStrings;
    long long numberOfRecentStrings;
}

+ (id)sharedTextFinder;
- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (BOOL)needToRefreshFromPasteboard;
- (void)appDidActivate:(id)arg1;
- (BOOL)loadFindStringFromPasteboard;
- (void)loadFindStringToPasteboard;
- (void)restoreDefaultSearchOptions;
- (void)makeCurrentSearchOptionsDefault;
- (void)setDefaultSearchOptions:(id)arg1;
- (void)loadUI;
- (void)controlTextDidChange:(id)arg1;
- (void)addStringToRecentSearchStrings:(id)arg1;
- (void)addStringToRecentReplaceStrings:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (id)findString;
- (void)setFindString:(id)arg1 writeToPasteboard:(BOOL)arg2 updateUI:(BOOL)arg3;
- (id)textObjectToSearchIn;
- (id)findPanel:(BOOL)arg1;
- (void)takeFindStringFromView:(id)arg1;
- (unsigned long long)optionsFromPanel;
- (BOOL)findInView:(id)arg1 forward:(BOOL)arg2;
- (BOOL)replaceInView:(id)arg1;
- (BOOL)replaceAndFindInView:(id)arg1;
- (long long)replaceAllInView:(id)arg1 selectionOnly:(BOOL)arg2;
- (BOOL)selectAllInView:(id)arg1 selectionOnly:(BOOL)arg2;
- (void)orderFrontFindPanel:(id)arg1;
- (void)findNextAndOrderFindPanelOut:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)performFindPanelAction:(unsigned long long)arg1 forClient:(id)arg2;
- (BOOL)validateFindPanelAction:(unsigned long long)arg1 forClient:(id)arg2;
- (void)windowDidUpdate:(id)arg1;

@end

@interface NSFindPanelTextView : NSTextView
{
}

- (void)performFindPanelAction:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface NSFocusStack : NSObject
{
    struct __CFArray *_stack;
    long long _topIndex;
    struct {
        unsigned int _noAltHandler:1;
        unsigned int _reserved:31;
    } _fsFlags;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (id)description;
- (void)focusView:(id)arg1 inWindow:(id)arg2;
- (id)focusedView;
- (void)unfocusView:(id)arg1;
- (void)popTopView;
- (void)removeFreedView:(id)arg1;
- (void)removeFreedWindow:(id)arg1;
- (BOOL)isWindowInFocusStack:(id)arg1;
- (void)invalidateFocus:(id)arg1;
- (void)fixInvalidatedFocusForFocusView;
- (BOOL)_handlesException;
- (void)_setHandlesException:(BOOL)arg1;

@end

@interface _NSFocusStackElement : NSObject
{
    NSView *_view;
    NSWindow *_originalWindow;
    unsigned long long _errorData;
    BOOL _valid;
}

@end

@interface NSFocusState : NSPSMatrix
{
    struct CGRect theClip;
    NSWindow *window;
    BOOL clipSet;
    BOOL clipEmpty;
    struct __CFArray *specialGStateViews;
    void *initialGState;
}

+ (id)sharedFocusState;
- (void)dealloc;
- (id)clip:(const struct CGRect *)arg1;
- (id)flush;
- (void)reset;
- (id)scaleTo:(double)arg1:(double)arg2;
- (void)setFrameRotation:(double)arg1;
- (void)setWindow:(id)arg1;
- (void)addSpecialGStateView:(id)arg1;
- (void)setInitialGState:(void *)arg1;

@end

@interface NSCTFont : NSFont
{
}

- (unsigned long long)_cfTypeID;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (BOOL)__isSystemFont;
- (BOOL)_isDefaultFace;
- (BOOL)_isHiraginoFont;
- (BOOL)_hasNonNominalDescriptor;
- (id)_sharedFontInstanceInfo;
- (double)_defaultLineHeightForUILayout;
- (double)_baseLineHeightForFont:(BOOL)arg1;
- (double)_ascenderDeltaForBehavior:(long long)arg1;
- (double)_leading;
- (struct CGFont *)_backingCGSFont;
- (unsigned int)_atsFontID;
- (const unsigned short *)_latin1MappingTable:(_Bool *)arg1;
- (id)_kernOverride;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short *)arg1 count:(long long)arg2;
- (id)_similarFontWithName:(id)arg1;
- (id)fontName;
- (double)pointSize;
- (const double *)matrix;
- (id)familyName;
- (id)displayName;
- (id)fontDescriptor;
- (id)textTransform;
- (id)description;
- (unsigned long long)numberOfGlyphs;
- (unsigned long long)mostCompatibleStringEncoding;
- (unsigned int)glyphWithName:(id)arg1;
- (id)coveredCharacterSet;
- (struct CGRect)boundingRectForFont;
- (struct CGSize)maximumAdvancement;
- (double)ascender;
- (double)descender;
- (double)leading;
- (double)underlinePosition;
- (double)underlineThickness;
- (double)italicAngle;
- (double)capHeight;
- (double)xHeight;
- (BOOL)isFixedPitch;
- (struct CGRect)boundingRectForGlyph:(unsigned int)arg1;
- (struct CGSize)advancementForGlyph:(unsigned int)arg1;
- (void)getBoundingRects:(struct CGRect *)arg1 forGlyphs:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize *)arg1 forGlyphs:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize *)arg1 forPackedGlyphs:(const void *)arg2 length:(unsigned long long)arg3;
- (void)setInContext:(id)arg1;
- (id)printerFont;
- (id)screenFont;
- (id)screenFontWithRenderingMode:(unsigned long long)arg1;
- (unsigned long long)renderingMode;
- (void)encodeWithCoder:(id)arg1;
- (const void *)ctFontRef;
- (id)lastResortFont;
- (unsigned int)hyphenGlyphForLocale:(id)arg1;
- (id)nameOfGlyph:(unsigned int)arg1;
- (id)bestMatchingFontForCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2 attributes:(id)arg3 actualCoveredLength:(unsigned long long *)arg4;

@end

@interface NSFont : NSObject <NSCopying, NSCoding>
{
    NSString *_name;
    double _size;
    long long _retainCount;
    struct __fFlags {
        unsigned int _isScreenFont:1;
        unsigned int _systemFontType:8;
        unsigned int _reserved1:4;
        unsigned int _matrixIsIdentity:1;
        unsigned int _renderingMode:3;
        unsigned int _reserved2:15;
    } _fFlags;
    id _private;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)_updateAntialiasingThreshold;
+ (void)_postFontSetChangedNotifications;
+ (void)_registerForFontSetNotification;
+ (void)initialize;
+ (id)fontWithName:(id)arg1 size:(double)arg2;
+ (id)fontWithName:(id)arg1 matrix:(const double *)arg2;
+ (id)fontWithDescriptor:(id)arg1 size:(double)arg2;
+ (id)fontWithDescriptor:(id)arg1 textTransform:(id)arg2;
+ (id)userFontOfSize:(double)arg1;
+ (id)userFixedPitchFontOfSize:(double)arg1;
+ (void)setUserFont:(id)arg1;
+ (void)setUserFixedPitchFont:(id)arg1;
+ (id)systemFontOfSize:(double)arg1;
+ (id)boldSystemFontOfSize:(double)arg1;
+ (id)messageFontOfSize:(double)arg1;
+ (id)labelFontOfSize:(double)arg1;
+ (id)titleBarFontOfSize:(double)arg1;
+ (id)menuBarFontOfSize:(double)arg1;
+ (id)paletteFontOfSize:(double)arg1;
+ (id)toolTipsFontOfSize:(double)arg1;
+ (id)controlContentFontOfSize:(double)arg1;
+ (id)menuFontOfSize:(double)arg1;
+ (double)systemFontSize;
+ (double)smallSystemFontSize;
+ (double)labelFontSize;
+ (double)systemFontSizeForControlSize:(unsigned long long)arg1;
+ (id)toolbarLabelFontOfSize:(double)arg1;
+ (double)toolbarLabelFontSizeForToolbarSize:(unsigned long long)arg1;
+ (void)useFont:(id)arg1;
+ (void)setLocaleListForDefaultFontFallback:(id)arg1;
+ (id)findFontLike:(id)arg1 forCharacter:(unsigned int)arg2 inLanguage:(id)arg3;
+ (id)findFontLike:(id)arg1 forString:(id)arg2 withRange:(struct _NSRange)arg3 inLanguage:(id)arg4;
+ (id)findFontLike:(id)arg1 traits:(unsigned long long)arg2 forCharacters:(const unsigned short *)arg3 length:(unsigned long long)arg4 inLanguage:(id)arg5 checkCoveredCache:(BOOL)arg6;
+ (id)preferredFontNames;
+ (void)setPreferredFontNames:(id)arg1;
+ (double)_toolbarLabelFontSize;
+ (double)_toolbarSmallLabelFontSize;
+ (id)_toolbarLabelFontOfSize:(double)arg1;
+ (void)_setExportSpecialFonts:(BOOL)arg1;
+ (id)coveredCharacterCache;
+ (BOOL)_characterCannotBeRendered:(unsigned int)arg1;
- (void)dealloc;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (BOOL)__isSystemFont;
- (BOOL)_isDefaultFace;
- (BOOL)_isHiraginoFont;
- (BOOL)_hasNonNominalDescriptor;
- (id)_sharedFontInstanceInfo;
- (double)_defaultLineHeightForUILayout;
- (double)_baseLineHeightForFont:(BOOL)arg1;
- (double)_ascenderDeltaForBehavior:(long long)arg1;
- (double)_leading;
- (struct CGFont *)_backingCGSFont;
- (unsigned int)_atsFontID;
- (short)_fondID;
- (const unsigned short *)_latin1MappingTable:(_Bool *)arg1;
- (id)_kernOverride;
- (id)initWithInstanceInfo:(id)arg1 renderingMode:(unsigned long long)arg2;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short *)arg1 count:(long long)arg2;
- (id)_similarFontWithName:(id)arg1;
- (id)fontName;
- (double)pointSize;
- (const double *)matrix;
- (id)familyName;
- (id)displayName;
- (id)fontDescriptor;
- (id)textTransform;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)numberOfGlyphs;
- (unsigned long long)mostCompatibleStringEncoding;
- (unsigned int)glyphWithName:(id)arg1;
- (id)coveredCharacterSet;
- (struct CGRect)boundingRectForFont;
- (struct CGSize)maximumAdvancement;
- (double)ascender;
- (double)descender;
- (double)leading;
- (double)underlinePosition;
- (double)underlineThickness;
- (double)italicAngle;
- (double)capHeight;
- (double)xHeight;
- (BOOL)isFixedPitch;
- (struct CGRect)boundingRectForGlyph:(unsigned int)arg1;
- (struct CGSize)advancementForGlyph:(unsigned int)arg1;
- (void)getBoundingRects:(struct CGRect *)arg1 forGlyphs:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize *)arg1 forGlyphs:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize *)arg1 forPackedGlyphs:(const void *)arg2 length:(unsigned long long)arg3;
- (void)set;
- (void)setInContext:(id)arg1;
- (id)printerFont;
- (id)screenFont;
- (id)screenFontWithRenderingMode:(unsigned long long)arg1;
- (unsigned long long)renderingMode;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (Class)classForKeyedArchiver;
- (id)initWithCoder:(id)arg1;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 forLongCharacter:(unsigned int)arg2 struckOverRect:(struct CGRect)arg3;
- (const void *)ctFontRef;
- (id)lastResortFont;
- (unsigned int)hyphenGlyphForLocale:(id)arg1;
- (id)nameOfGlyph:(unsigned int)arg1;
- (id)bestMatchingFontForCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2 attributes:(id)arg3 actualCoveredLength:(unsigned long long *)arg4;
- (unsigned long long)getCaretPositions:(double *)arg1 forGlyph:(unsigned int)arg2 maximumLength:(unsigned long long)arg3;
- (double)widthOfString:(id)arg1;
- (BOOL)isBaseFont;
- (id)afmDictionary;
- (BOOL)glyphIsEncoded:(unsigned int)arg1;
- (double)defaultLineHeightForFont;
- (double)_defaultLineHightForUILayout;
- (double)_baselineOffsetForUILayout;
- (id)encodingScheme;
- (unsigned long long)glyphPacking;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 precededByGlyph:(unsigned int)arg2 isNominal:(char *)arg3;
- (long long)positionsForCompositeSequence:(unsigned int *)arg1 numberOfGlyphs:(long long)arg2 pointArray:(struct CGPoint *)arg3;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 struckOverGlyph:(unsigned int)arg2 metricsExist:(char *)arg3;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 struckOverRect:(struct CGRect)arg2 metricsExist:(char *)arg3;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 forCharacter:(unsigned short)arg2 struckOverRect:(struct CGRect)arg3;
- (unsigned int)_defaultGlyphForChar:(unsigned short)arg1;
- (id)_coveredCharSet;
- (BOOL)_isFakeFixedPitch;
- (BOOL)_canDrawOutsideLineHeight;
- (BOOL)_glyphDrawsOutsideLineHeight:(unsigned int)arg1;
- (double)_widthOfPackedGlyphs:(const char *)arg1 count:(unsigned long long)arg2;
- (BOOL)isScreenFont;
- (unsigned int)hyphenGlyphForLanguage:(id)arg1;
- (unsigned long long)_numberOfGlyphs;
- (struct CGPoint)positionOfGlyph:(unsigned int)arg1 withRelation:(unsigned long long)arg2 toBaseGlyph:(unsigned int)arg3 totalAdvancement:(struct CGSize *)arg4 metricsExist:(char *)arg5;
- (BOOL)coversAllCharactersInString:(id)arg1;
- (BOOL)coversCharacter:(unsigned short)arg1;
- (id)initWithFontRef:(unsigned int)arg1 size:(double)arg2;

@end

@interface __NSSharedFontInstanceInfo : NSObject
{
    long long _retainCount;
    __NSFontTypefaceInfo *_typeface;
    struct __CTFont *_platformFont;
    struct CGFont *_graphicsFont;
    struct __CFString *_postscriptName;
    struct __CFString *_displayName;
    struct __CTFontDescriptor *_fontDescriptor;
    NSAffineTransform *_textTransform;
    struct __CFCharacterSet *_characterCoverage;
    struct CGAffineTransform _matrix;
    long long _numberOfGlyphs;
    double _typographicLeading;
    double _defaultLineHeight;
    double _defaultLineHeightForUI;
    double _ascenderDelta;
    char *_glyphAdvancementCache;
    id _key;
    NSFont *_variants[3];
    struct {
        unsigned int _drawsOutsideBBox:1;
        unsigned int _forceAscenderDelta:1;
        unsigned int _advanceCacheMode:2;
        unsigned int _isFixedPitch:1;
        unsigned int _reserved:27;
    } _iiFlags;
}

+ (void)initialize;
- (id)initWithTypefaceInfo:(id)arg1 key:(id)arg2;
- (id)fontInstanceForRenderingMode:(unsigned long long)arg1;
- (struct __CTFont *)_platformFont;
- (struct CGFont *)_graphicsFont;
- (id)_postscriptName;
- (const double *)_matrix;
- (id)_textTransform;
- (id)_displayName;
- (id)_fontDescriptor;
- (id)_characterCoverage;
- (BOOL)_hasNonNominalDescriptor;
- (BOOL)_drawsOutsideBBox;
- (double)_typographicLeading;
- (double)_defaultLineHeight:(BOOL)arg1;
- (double)_ascenderDeltaForBehavior:(long long)arg1;
- (unsigned long long)_numberOfGlyphs;
- (BOOL)_isFixedPitch;
- (id)_kernOverride;
- (char *)_glyphAdvancementCache:(long long)arg1 renderingMode:(unsigned long long)arg2;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;

@end

@interface __NSFontTypefaceInfo : NSObject
{
    long long _retainCount;
    struct __CTFontDescriptor *_normalizedFontDescriptor;
    NSMapTable *_liveInstances;
    struct __CFString *_postscriptName;
    struct __CFString *_familyName;
    struct __CFCharacterSet *_characterCoverage;
    double *_glyphAdvancementCache;
    unsigned short *_latin1MappingTable;
    struct {
        unsigned int _isDefaultFace:1;
        unsigned int _hasKernPair:1;
        unsigned int _checkedLatin1Table:1;
        unsigned int _isSymbol:1;
        unsigned int _isDingbats:1;
        unsigned int _isDefaultFixedPitch:1;
        unsigned int _needValidation:1;
        unsigned int _isLucidaGrande:1;
        unsigned int _isHiragino:1;
        unsigned int _reserved:23;
    } _tiFlags;
}

+ (void)initialize;
+ (id)typefaceInfoForFontDescriptor:(id)arg1;
+ (id)typefaceInfoForKnownFontDescriptor:(id)arg1;
+ (id)typefaceInfoForPostscriptName:(id)arg1;
- (BOOL)_validate;
- (void)_setNeedsValidation:(BOOL)arg1;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;
- (id)initWithFontDescriptor:(id)arg1;
- (id)fontInstanceForFontDescriptor:(id)arg1 size:(double)arg2 affineTransform:(id)arg3 renderingMode:(unsigned long long)arg4;
- (void)detachInstanceInfo:(id)arg1;
- (id)normalizedFontDescriptor;
- (id)_postscriptName;
- (id)_familyName;
- (id)_nominalCharacterCoverage;
- (BOOL)_isDefaultFace;
- (BOOL)_isLucidaGrande;
- (BOOL)_isHiragino;
- (BOOL)_isSymbol;
- (BOOL)_isDingbats;
- (BOOL)_isDefaultFixedPitch;
- (double *)_glyphAdvancementCache:(long long)arg1;
- (const unsigned short *)_latin1MappingTableWithPlatformFont:(struct __CTFont *)arg1 hasKernPair:(_Bool *)arg2;

@end

@interface NSMutableFontDescriptor : NSFontDescriptor
{
}

+ (id)_fontDescriptorForFontPanel;
- (id)init;
- (id)_attributes;

@end

@interface NSCTFontDescriptor : NSFontDescriptor
{
}

+ (id)fontDescriptorWithFontAttributes:(id)arg1;
+ (id)fontDescriptorWithName:(id)arg1 size:(double)arg2;
+ (id)fontDescriptorWithName:(id)arg1 matrix:(id)arg2;
- (unsigned long long)_cfTypeID;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)objectForKey:(id)arg1;
- (id)fontDescriptorByAddingAttributes:(id)arg1;
- (id)fontAttributes;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)arg1;
- (id)matchingFontDescriptorWithMandatoryKeys:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSFontDescriptor : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_attributes;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
    id _reserved5;
}

+ (id)_createMungledDictionary:(id)arg1;
+ (id)fontDescriptorWithFontAttributes:(id)arg1;
+ (id)fontDescriptorWithName:(id)arg1 size:(double)arg2;
+ (id)fontDescriptorWithName:(id)arg1 matrix:(id)arg2;
- (id)_initWithFontAttributes:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithFontAttributes:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)fontAttributes;
- (id)_attributes;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)postscriptName;
- (double)pointSize;
- (id)matrix;
- (unsigned int)symbolicTraits;
- (id)objectForKey:(id)arg1;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)arg1;
- (id)matchingFontDescriptorWithMandatoryKeys:(id)arg1;
- (id)fontDescriptorByAddingAttributes:(id)arg1;
- (id)fontDescriptorWithSymbolicTraits:(unsigned int)arg1;
- (id)fontDescriptorWithSize:(double)arg1;
- (id)fontDescriptorWithMatrix:(id)arg1;
- (id)fontDescriptorWithFace:(id)arg1;
- (id)fontDescriptorWithFamily:(id)arg1;
- (id)_visibleName;
- (id)description;

@end

@interface NSFontEffectsBox : NSBox
{
    id _blurSlider;
    id _opacitySlider;
    id _radiusSlider;
    id _angleDial;
    id _mainControlsBox;
    id _shadowControlsBox;
    id _dividerImage;
    id _mainEffectsBox;
    id _angleLabel;
    id _effectsPopup;
    id _underlineButton;
    id _strikeButton;
    id _topDividerLine;
    id _bottomDividerLine;
    id _shadowToggleButton;
    id _textColorButton;
    id _documentColorButton;
    NSMutableDictionary *_attributesToAdd;
    NSMutableArray *_attributesToRemove;
    id _febUnused[5];
    int _shadowBlur;
    int _colorState;
    struct __feblags {
        unsigned int showUnderline:1;
        unsigned int showStrikethrough:1;
        unsigned int showTextColor:1;
        unsigned int showDocumentColor:1;
        unsigned int showShadowEffects:1;
        unsigned int reserved:27;
    } _febFlags;
}

- (void)awakeFromNib;
- (void)_changeTextColor:(id)arg1;
- (void)_changeDocumentColor:(id)arg1;
- (void)_changeShadowOpacity:(id)arg1;
- (void)_changeShadowAngle:(id)arg1;
- (void)_changeShadowBlur:(id)arg1;
- (void)frameDidChange:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)_changeColorToColor:(id)arg1;
- (void)_orderFrontModalColorPanel;
- (id)convertAttributes:(id)arg1;
- (void)_setAttributes:(id)arg1 isMultiple:(BOOL)arg2;
- (void)_openEffectsButton:(id)arg1;
- (void)_toggleShadow:(id)arg1;
- (void *)carbonNotificationProc;
- (void)_sendCarbonNotificationForTag:(unsigned int)arg1 withValuePtr:(const void *)arg2 andSize:(unsigned long long)arg3;
- (void)_sendCarbonNotificationFor:(unsigned long long)arg1 tags:(const unsigned int *)arg2 withValuePtrs:(const void **)arg3 andSizes:(const unsigned long long *)arg4;
- (void)_validateUnderline:(BOOL)arg1;
- (void)_validateStrikethrough:(BOOL)arg1;
- (void)_validateTextColor:(BOOL)arg1;
- (void)_validateDocumentColor:(BOOL)arg1;
- (void)_validateShadowEffect:(BOOL)arg1;

@end

@interface NSFontPanelEffectsSliderCell : NSSliderCell
{
}

- (BOOL)_usesCustomTrackImage;
- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawKnob:(struct CGRect)arg1;

@end

@interface NSFontManager : NSObject
{
    NSFontPanel *_panel;
    unsigned int _fmReserved1;
    SEL _action;
    id _actionOrigin;
    id _target;
    NSFont *_selFont;
    struct _fmFlags {
        unsigned int multipleFont:1;
        unsigned int disabled:1;
        unsigned int senderTagMode:2;
        unsigned int _RESERVED:12;
    } _fmFlags;
    unsigned short _fmReserved3;
    id _delegate;
    id _collections;
    id _hiddenCollections;
    unsigned long long _fmReserved4;
}

+ (void)initialize;
+ (id)sharedFontManager;
+ (void)setFontPanelFactory:(Class)arg1;
+ (void)setFontManagerFactory:(Class)arg1;
+ (BOOL)_isCollectionDecodingUnarchiver:(id)arg1;
- (id)_init;
- (void)release;
- (id)init;
- (id)fontMenu:(BOOL)arg1;
- (void)setFontMenu:(id)arg1;
- (void)_setFontPanel:(id)arg1;
- (id)fontPanel:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (BOOL)sendAction;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)isMultiple;
- (id)selectedFont;
- (void)setSelectedFont:(id)arg1 isMultiple:(BOOL)arg2;
- (void)setSelectedAttributes:(id)arg1 isMultiple:(BOOL)arg2;
- (id)convertFont:(id)arg1;
- (id)convertAttributes:(id)arg1;
- (unsigned long long)currentFontAction;
- (unsigned long long)convertFontTraits:(unsigned long long)arg1;
- (void)_reactToFontSetChange;
- (id)availableFonts;
- (id)availableFontFamilies;
- (id)availableMembersOfFontFamily:(id)arg1;
- (id)availableFontNamesWithTraits:(unsigned long long)arg1;
- (unsigned long long)traitsOfFont:(id)arg1;
- (long long)weightOfFont:(id)arg1;
- (id)localizedNameForFamily:(id)arg1 face:(id)arg2;
- (BOOL)fontNamed:(id)arg1 hasTraits:(unsigned long long)arg2;
- (id)fontNameWithFamily:(id)arg1 traits:(unsigned long long)arg2 weight:(long long)arg3;
- (id)fontWithFamily:(id)arg1 traits:(unsigned long long)arg2 weight:(long long)arg3 size:(double)arg4;
- (id)convertFont:(id)arg1 toSize:(double)arg2;
- (id)convertFont:(id)arg1 toFace:(id)arg2;
- (id)convertFont:(id)arg1 toFamily:(id)arg2;
- (id)convertFont:(id)arg1 toHaveTrait:(unsigned long long)arg2;
- (id)convertFont:(id)arg1 toNotHaveTrait:(unsigned long long)arg2;
- (id)convertWeight:(BOOL)arg1 ofFont:(id)arg2;
- (void)addFontTrait:(id)arg1;
- (void)removeFontTrait:(id)arg1;
- (void)modifyFont:(id)arg1;
- (void)modifyFontViaPanel:(id)arg1;
- (BOOL)worksWhenModal;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleFontPanelShown:(id)arg1;
- (void)orderFrontFontPanel:(id)arg1;
- (void)orderFrontStylesPanel:(id)arg1;
- (id)convertFont:(id)arg1 toApproximateTraits:(unsigned long long)arg2;
- (void)_notifyObserversWithUserInfo:(id)arg1;
- (void)_collectionsChanged:(id)arg1;
- (id)collectionNames;
- (id)fontDescriptorsInCollection:(id)arg1;
- (BOOL)addCollection:(id)arg1 options:(long long)arg2;
- (BOOL)removeCollection:(id)arg1;
- (void)addFontDescriptors:(id)arg1 toCollection:(id)arg2;
- (void)removeFontDescriptor:(id)arg1 fromCollection:(id)arg2;
- (void)removeFontDescriptors:(id)arg1 fromCollection:(id)arg2;
- (id)displayNameForCollectionWithName:(id)arg1;
- (id)_collectionWithName:(id)arg1;
- (void)_collection:(id)arg1 setHidden:(BOOL)arg2;
- (_Bool)_renameCollectionWithName:(id)arg1 to:(id)arg2;
- (id)_availableFontFamiliesForCollectionName:(id)arg1;
- (id)_familyNamesForCollection:(id)arg1;
- (id)_fontDescriptorsForFamily:(id)arg1 inCollection:(id)arg2;
- (_Bool)_setFilteringSearchString:(id)arg1;
- (void)_renameFontDescriptorWithName:(id)arg1 to:(id)arg2 in:(id)arg3;
- (id)_fontNameForFamily:(id)arg1 face:(id)arg2;
- (id)_faceForFamily:(id)arg1 fontName:(id)arg2;
- (id)_menu;
- (id)modifyFontTrait:(id)arg1;
- (void)orderFrontFontOptionsPanel:(id)arg1;
- (id)availableFontNamesMatchingFontDescriptor:(id)arg1;
- (void)_loadFontFiles;
- (long long)_reloadFontInfoIfNecessary:(id)arg1;
- (id)_defaultFontSet;
- (BOOL)_isInternalFontName:(id)arg1;
- (void)noteFontFavoritesChanged;
- (id)_createDefaultCollectionRep;
- (id)_fontFromDescriptor:(id)arg1;
- (id)_displayName:(id)arg1;
- (id)_descStringForFont:(id)arg1;
- (void)noteFontCollectionsChanged;
- (id)_filenameForCollection:(id)arg1;
- (id)_nameForCollection:(id)arg1;
- (void)saveFontCollection:(id)arg1 withName:(id)arg2;
- (void)saveFontCollection:(id)arg1;
- (id)_collections;
- (id)_oldFontSetWithName:(id)arg1;
- (id)_oldFontSetNames;
- (id)_openCollections;
- (void)_sortCollections;
- (id)_collectionWithName:(id)arg1 index:(long long *)arg2;
- (id)_availableFontSetNames;
- (void)_openRegularCollections;
- (id)_fontSetWithName:(id)arg1;
- (void)_addDescriptorCheckingForDuplicates:(id)arg1 toCollection:(id)arg2;
- (void)_openOldCollections;
- (void)_openOldFavorites;
- (void)_addCollection:(id)arg1 options:(long long)arg2 sender:(id)arg3;
- (void)_replaceFontDescriptor:(id)arg1 withDescriptor:(id)arg2 inCollection:(id)arg3;
- (void)_removeFontDescriptor:(id)arg1 fromCollection:(id)arg2 save:(BOOL)arg3;
- (void)_collection:(id)arg1 setHidden:(BOOL)arg2 save:(BOOL)arg3;
- (long long)_renameCollection:(id)arg1 to:(id)arg2;
- (id)_createFontPanelRepFromCollection:(id)arg1 removingHidden:(BOOL)arg2;

@end

@interface NSTableOptionsPanel : NSPanel
{
}

- (BOOL)worksWhenModal;

@end

@interface NSTableOptions : NSObject
{
    id tableOptionsPanel;
    id rowsField;
    id rowsStepper;
    id columnsField;
    id columnsStepper;
    id mergeCellsButton;
    id splitCellsButton;
    id nestTableButton;
    id horizontalAlignment;
    id verticalAlignment;
    id borderField;
    id borderStepper;
    id borderColorWell;
    id backgroundPopUp;
    id backgroundColorWell;
    NSTextView *_client;
    NSTextTable *_table;
    unsigned long long _level;
    struct _NSRange _tableRange;
    long long _numRows;
    long long _numCols;
    long long _minRow;
    long long _maxRow;
    long long _minCol;
    long long _maxCol;
    long long _spacesOccupied;
    long long _maxSpaces;
    NSMutableArray *_cellRanges;
    NSColor *_defaultBorderColor;
    BOOL _modifyingClient;
}

+ (id)sharedTableOptions;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (id)tableOptionsPanel:(BOOL)arg1;
- (BOOL)textView:(id)arg1 shouldSetColor:(id)arg2;
- (void)clearTableParameters;
- (BOOL)tableParameters;
- (void)enableAll:(BOOL)arg1;
- (void)updateUI;
- (void)orderFrontTableOptionsPanel:(id)arg1;
- (void)addOrNestTable;
- (void)_addDefaultTable;
- (void)addDefaultTable;
- (void)removeTable;
- (void)addRows:(long long)arg1;
- (void)removeRows:(long long)arg1;
- (void)addColumns:(long long)arg1;
- (void)removeColumns:(long long)arg1;
- (void)mergeCells;
- (void)splitCell:(id)arg1 range:(struct _NSRange)arg2;
- (void)splitCells;
- (void)setHorizontalAlignment:(unsigned long long)arg1;
- (void)setVerticalAlignment:(unsigned long long)arg1;
- (void)setBorderWidth:(double)arg1;
- (void)setBorderColor:(id)arg1;
- (void)setDefaultBorderColor:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)modifyOptionsViaPanel:(id)arg1;
- (void)setClient:(id)arg1;
- (void)removeClient:(id)arg1;
- (BOOL)worksWhenModal;

@end

@interface NSTextRulerOptions : NSObject
{
    id addFavoritePanel;
    id favoriteNameField;
    id includeFontOptionsButton;
    id includeFontButton;
    id confirmAddFavoriteButton;
    id replaceFavoritePanel;
    id removeFavoritePanel;
    id removeFavoritePopUp;
    id spacingPanel;
    id multipleField;
    id minField;
    id maxField;
    id lineSpacingField;
    id multipleStepper;
    id minStepper;
    id maxStepper;
    id lineSpacingStepper;
    id minMatrix;
    id maxButton;
    id spaceBeforeField;
    id spaceAfterField;
    id spaceBeforeStepper;
    id spaceAfterStepper;
    id listPanel;
    id beforeField;
    id numberingPopUp;
    id afterField;
    id startLabel;
    id startField;
    id startStepper;
    id prependButton;
    id linkPanel;
    id linkField;
    NSNumberFormatter *_numberFormatter;
    NSMutableDictionary *_favoriteRulers;
    NSMutableDictionary *_selectedAttributes;
    NSParagraphStyle *_prespacingParagraphStyle;
    NSWindow *_windowForSheets;
    NSWindow *_windowForSpacing;
    id _delegateForSpacing;
    NSWindow *_windowForMarkerFormat;
    id _delegateForMarkerFormat;
    NSWindow *_windowForLink;
    id _delegateForLink;
}

+ (id)sharedTextRulerOptions;
- (void)saveFavoritesToDefaults;
- (void)updateFavoritesFromDefaults;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (void)finalize;
- (id)favoriteAttributesNames;
- (id)favoriteAttributesForName:(id)arg1;
- (id)selectedAttributes;
- (void)updateFavoritesUI;
- (void)addFavorite;
- (void)addFavorite:(id)arg1 inWindow:(id)arg2;
- (void)removeFavoriteInWindow:(id)arg1;
- (void)updateLineSpacingUI;
- (void)setSpacing:(id)arg1 inWindow:(id)arg2 delegate:(id)arg3;
- (void)setStartFieldAndStepper;
- (void)setMarkerFormatInWindow:(id)arg1 textList:(id)arg2 delegate:(id)arg3;
- (void)setLinkInWindow:(id)arg1 string:(id)arg2 delegate:(id)arg3;
- (void)controlTextDidChange:(id)arg1;
- (void)modifyOptionsViaPanel:(id)arg1;
- (void)confirmSheet:(id)arg1;
- (void)cancelSheet:(id)arg1;
- (void)removeLink:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)displayStringForLineHeightMultiple:(double)arg1 min:(double)arg2 max:(double)arg3 lineSpacing:(double)arg4 paragraphSpacingBefore:(double)arg5 after:(double)arg6;

@end

@interface NSFontOptions : NSObject
{
    id panel;
    id fontField;
    id fontColorWell;
    id backgroundColorWell;
    id favoritesPullDown;
    id kerningButton;
    id kerningSlider;
    id expansionButton;
    id expansionSlider;
    id baselineButton;
    id baselineSlider;
    id obliquenessButton;
    id obliquenessSlider;
    id shadowButton;
    id shadowHeightSlider;
    id shadowWidthSlider;
    id shadowBlurRadiusSlider;
    id strokeMatrix;
    id strokeColorWell;
    id strokeSlider;
    id underlineMatrix;
    id underlineColorWell;
    id underlineTypeButton;
    id underlineStylePopUp;
    id strikethroughMatrix;
    id strikethroughColorWell;
    id strikethroughTypeButton;
    id strikethroughStylePopUp;
    id optionsPanel;
    id optionsMatrix;
    id optionsButtons;
    id optionsPopUp;
    id optionsPreviewField;
    id optionsAttributesField;
    id optionsAddRemoveButton;
    id colorOptionsPanel;
    id colorOptionsFontColorWell;
    id colorOptionsBackgroundColorWell;
    id colorOptionsStrokeColorWell;
    id colorOptionsUnderlineColorWell;
    id colorOptionsStrikethroughColorWell;
    id colorOptionsStrokeMatrix;
    id colorOptionsStrokeSlider;
    id addFavoritePanel;
    id favoriteNameField;
    id includeFontButton;
    id includeRulerButton;
    id confirmAddFavoriteButton;
    id selectButton;
    id replaceFavoritePanel;
    id removeFavoritePanel;
    id removeFavoritePopUp;
    id selectPanel;
    id selectByFontFamilyButton;
    id selectByFontButton;
    id selectByCharStyleButton;
    id selectByParStyleButton;
    id selectWithinSelectionMatrix;
    NSMutableDictionary *_attributesToAdd;
    NSMutableArray *_attributesToRemove;
    NSMutableDictionary *_favoriteStyles;
    NSDictionary *_standardFavoriteStyles;
    NSMutableDictionary *_selectedAttributes;
    NSDictionary *_optionsAttributes;
    NSDictionary *_attributesForNewFavorite;
    NSString *_stringForOptions;
    NSString *_optionsAddTitle;
    NSString *_optionsRemoveTitle;
    struct {
        unsigned int isMultiple:1;
        unsigned int reserved:31;
    } _flags;
    NSWindow *_windowForSheets;
    NSWindow *_windowForOptions;
    NSTextView *_textViewForOptions;
    struct _NSRange _rangeForOptions;
    NSWindow *_windowForColorOptions;
    struct CGRect _previewRect;
}

+ (id)sharedFontOptions;
- (id)storedAttributes;
- (void)saveFavoritesToDefaults;
- (void)updateFavoritesFromDefaults;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (void)finalize;
- (void)enableAll:(BOOL)arg1;
- (void)updateUI;
- (id)displayStringsForAttributes:(id)arg1 includeBoldItalic:(BOOL)arg2;
- (id)displayStringsForParagraphStyle:(id)arg1;
- (void)updateOptionsUI;
- (void)updateColorOptionsUI;
- (id)favoriteAttributesNames;
- (id)favoriteAttributesForName:(id)arg1;
- (void)updateFavoritesUI;
- (void)orderFrontColorOptionsPanelInWindow:(id)arg1;
- (void)orderFrontFontOptionsPanel:(id)arg1;
- (void)orderFrontStylesPanel:(id)arg1;
- (void)orderFrontStylesPanelInWindow:(id)arg1 textView:(id)arg2;
- (void)orderFrontFontPanel:(id)arg1;
- (BOOL)textView:(id)arg1 shouldSetColor:(id)arg2;
- (void)setSelectedAttributes:(id)arg1 isMultiple:(BOOL)arg2;
- (id)selectedAttributes;
- (void)setOptionsAttributes:(id)arg1 string:(id)arg2;
- (id)optionsAttributes;
- (id)convertAttributes:(id)arg1;
- (void)modifyOptionsViaPanel:(id)arg1;
- (id)stringForRange:(struct _NSRange)arg1;
- (void)selectDefaultRange;
- (void)selectFarthestRangeForward:(BOOL)arg1;
- (void)selectNextRangeForward:(BOOL)arg1;
- (void)changeOptionsPanelSettings:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)confirmSheet:(id)arg1;
- (void)cancelSheet:(id)arg1;
- (void)addFavorite;
- (void)addFavoriteInWindow:(id)arg1;
- (void)removeFavoriteInWindow:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)selectAllInView:(id)arg1 selectionOnly:(BOOL)arg2 fontFamily:(BOOL)arg3 font:(BOOL)arg4 characterStyle:(BOOL)arg5 paragraphStyle:(BOOL)arg6;

@end

@interface NSFontOptionsPreviewBox : NSBox
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSFontOptionsColorWell : NSColorWell
{
}

- (id)_takeColorFrom:(id)arg1 andSendAction:(BOOL)arg2;

@end

@interface NSFontPanel : NSPanel
{
    NSFontManager *_manager;
    NSArray *_collectionNames;
    id _selection;
    void *_carbonNotification;
    id _targetObject;
    id _familyList;
    id _faceList;
    id _sizeList;
    id _mainCollectionList;
    id _sizeField;
    id _sizeSlider;
    id _sizeSliderBox;
    id _preview;
    id _previewCaption;
    id _mainSplitView;
    id _mmCollectionList;
    id _mmFamilyList;
    id _mmFaceList;
    id _mmSizeList;
    id _extrasPopup;
    id _searchField;
    id _fixedListButton;
    id _sliderButton;
    id _accessoryView;
    struct __fpFlags {
        unsigned int setFontChange:1;
        unsigned int setFontAttributeChange:1;
        unsigned int _delRespFamily:1;
        unsigned int _delRespFace:1;
        unsigned int _delRespSize:1;
        unsigned int _delRespColl:1;
        unsigned int _collectionDisabled:1;
        unsigned int _sizeDisabled:1;
        unsigned int _faceDisabled:1;
        unsigned int showEffects:1;
        unsigned int _uiMode:8;
        unsigned int _reserved:14;
    } _fpFlags;
    id _regularModeBox;
    id _miniModeBox;
    id _modeBoxSuperview;
    id _collectionLabel;
    id _sizeLabel;
    id _faceLabel;
    id _familyLabel;
    id _sizeStyleButton;
    id _newSizeField;
    id _editSizeList;
    id _editSizeListBox;
    id _editSizeSliderBox;
    id _editSizeSliderMaxField;
    id _editSizeSliderMinField;
    id _sizeEditWindow;
    id _availableSizes;
    id _addCollectionButton;
    id _removeCollectionButton;
    double _fontPanelPreviewHeight;
    id _typographyPanel;
    id _actionButton;
    id _fontEffectsBox;
    int _sizeStyle;
}

+ (BOOL)sharedFontPanelExists;
+ (id)sharedFontPanel;
- (id)_currentCollectionName;
- (id)_currentFamilyName;
- (void)_setup;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (oneway void)release;
- (void *)_carbonNotification;
- (void)setCarbonNotification:(void *)arg1;
- (void)_sendCarbonNotification;
- (void)_searchChanged:(id)arg1;
- (BOOL)_inPreview;
- (BOOL)_inMiniMode;
- (BOOL)_canShowEffects;
- (BOOL)_showEffects;
- (void)_checkMiniMode:(long long)arg1;
- (void)_checkCollectionMoveOut:(long long)arg1;
- (BOOL)_inHideCollectionsMode;
- (BOOL)_inHideFaceMode;
- (BOOL)_inFavMode;
- (void)_setPreviewFont:(id)arg1;
- (id)_selectedSize;
- (void)reloadDefaultFontFamilies;
- (id)accessoryView;
- (void)setAccessoryView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)_sortCollections;
- (id)_createFontPanelSizeRep;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (struct CGRect)tableView:(id)arg1 frameOfCellAtColumn:(long long)arg2 row:(long long)arg3 originalFrame:(struct CGRect)arg4;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)savePreviewHeightInDefaults:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (unsigned long long)comboBox:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (void)_chooseCollection:(id)arg1;
- (void)_chooseFace:(id)arg1;
- (void)_chooseFamily:(id)arg1;
- (void)_setFont:(id)arg1;
- (void)_setRecents:(id)arg1;
- (void)loadFaces:(id)arg1;
- (void)_chooseBestMatchingFace;
- (void)setSize:(id)arg1;
- (void)setSizeTitle:(id)arg1;
- (void)setChooser:(id)arg1;
- (void)_chooseSizeFromList:(id)arg1;
- (BOOL)worksWhenModal;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)_chooseSizeFromField:(id)arg1;
- (void)_chooseSize:(id)arg1;
- (void)_chooseSizeFromSlider:(id)arg1;
- (void)_openActionButton:(id)arg1;
- (void)_openExtrasPopup:(id)arg1;
- (void)togglePreview:(BOOL)arg1;
- (void)_sizeEditDone:(id)arg1;
- (void)_addSizeToList:(id)arg1;
- (void)_removeSizeFromList:(id)arg1;
- (void)_resetSizeList:(id)arg1;
- (void)_setBox:(id)arg1 enabled:(BOOL)arg2;
- (void)_changeSizeStyle:(id)arg1;
- (void)_populatePopup:(id)arg1 withTableView:(id)arg2;
- (void)_populateMiniMode;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)_endLiveResize;
- (BOOL)_showOpaqueGrowBox;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)_validateSizes:(long long)arg1;
- (void)_validateFaces:(long long)arg1;
- (void)_validateCollections:(long long)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)_validateExtrasButton:(id)arg1;
- (void)_positionLabels;
- (void)_resizeContentsOfMainBox;
- (void)_resizeContentsOfMiniMode;
- (void)_resizeContentsOfPreviewBox;
- (void)_reflectSize;
- (void)_reflectFont;
- (void)_setRecents;
- (void)setPanelFont:(id)arg1 isMultiple:(BOOL)arg2;
- (id)panelConvertFont:(id)arg1;
- (void)_setAttributes:(id)arg1 isMultiple:(BOOL)arg2;
- (id)convertAttributes:(id)arg1;
- (void)_sizeListChanged:(id)arg1;
- (void)_collectionsChanged:(id)arg1;
- (void)_notifyTypographyPanel;
- (void)_toggleTypographyPanel;
- (id)_typographyPanel;
- (id)_currentFont;
- (void)_fontPanelRemoveCollectionSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)collectionButtonPressed:(id)arg1;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)draggingSourceOperationMaskForTableView:(id)arg1;
- (BOOL)removeItemForTableView:(id)arg1 pasteboard:(id)arg2 operation:(unsigned long long)arg3;

@end

@interface NSFontPanelImagePopUpButtonCell : NSPopUpButtonCell
{
    NSImage *image;
    NSImage *alternateImage;
}

- (id)initTextCell:(id)arg1 pullsDown:(BOOL)arg2;
- (void)dealloc;
- (double)_extraWidthForCellHeight:(double)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setAlternateImage:(id)arg1;
- (id)alternateImage;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NSFontPanelTableView : NSTableView
{
}

- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)_wantsUserCancelledOperation;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;

@end

@interface NSFontPanelSplitView : NSSplitView
{
}

- (double)dividerThickness;
- (void)drawDividerInRect:(struct CGRect)arg1;

@end

@interface NSForm : NSMatrix
{
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (double)_maxWidth;
- (void)_resetTitleWidths;
- (void)calcSize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)sizeToFit;
- (long long)indexOfSelectedItem;
- (void)setEntryWidth:(double)arg1;
- (void)setInterlineSpacing:(double)arg1;
- (void)setBordered:(BOOL)arg1;
- (void)setBezeled:(BOOL)arg1;
- (void)setTitleAlignment:(unsigned long long)arg1;
- (void)setTextAlignment:(unsigned long long)arg1;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTitleFont:(id)arg1;
- (void)setTextFont:(id)arg1;
- (id)cellAtIndex:(long long)arg1;
- (void)drawCellAtIndex:(long long)arg1;
- (id)addEntry:(id)arg1;
- (id)insertEntry:(id)arg1 atIndex:(long long)arg2;
- (void)removeEntryAtIndex:(long long)arg1;
- (long long)indexOfCellWithTag:(long long)arg1;
- (void)selectTextAtIndex:(long long)arg1;
- (void)setTitleBaseWritingDirection:(long long)arg1;
- (void)setTextBaseWritingDirection:(long long)arg1;

@end

@interface NSFormCell : NSActionCell
{
    double _titleWidth;
    id _titleCell;
    double _titleEndPoint;
}

+ (void)initialize;
- (id)init;
- (void)_updateFormAlignmentForUserInterfaceLayoutDirection;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)acceptsFirstResponder;
- (double)titleWidth:(struct CGSize)arg1;
- (double)titleWidth;
- (void)setTitleWidth:(double)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)setMnemonicLocation:(unsigned long long)arg1;
- (unsigned long long)mnemonicLocation;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (id)titleFont;
- (void)setTitleFont:(id)arg1;
- (unsigned long long)titleAlignment;
- (void)setTitleAlignment:(unsigned long long)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isOpaque;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (BOOL)_highlightsWithHighlightRect;
- (void)_drawLiveResizeHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_titleRectForCellFrame:(struct CGRect)arg1;
- (void)_layoutTitleRect:(struct CGRect *)arg1 interiorChromeRect:(struct CGRect *)arg2 interiorTextRect:(struct CGRect *)arg3 withFrame:(struct CGRect)arg4 inView:(id)arg5;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_selectOrEdit:(const struct CGRect *)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)_characterRangeForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)setPlaceholderString:(id)arg1;
- (id)placeholderString;
- (void)setPlaceholderAttributedString:(id)arg1;
- (id)placeholderAttributedString;
- (long long)titleBaseWritingDirection;
- (void)setTitleBaseWritingDirection:(long long)arg1;

@end

@interface NSFrameView : NSView
{
    unsigned long long styleMask;
    NSString *_title;
    NSCell *titleCell;
    NSButton *closeButton;
    NSButton *zoomButton;
    NSButton *minimizeButton;
    BOOL resizeByIncrement;
    BOOL unused;
    unsigned char tabViewCount;
    struct CGSize resizeParameter;
    int shadowState;
}

+ (void)initialize;
+ (void)initTitleCell:(id)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minContentSizeForMinFrameSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)shapeWindow;
- (void)tileAndSetWindowShape:(BOOL)arg1;
- (void)tile;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawFrameRects:(struct CGRect)arg1;
- (void)drawFrame:(struct CGRect)arg1;
- (void)drawThemeContentFill:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWindowBackgroundRect:(struct CGRect)arg1;
- (void)drawWindowBackgroundRegion:(void *)arg1;
- (double)contentAlpha;
- (void)_windowChangedKeyState;
- (void)_updateButtonState;
- (BOOL)_isSheet;
- (BOOL)_isUtility;
- (void)setShadowState:(long long)arg1;
- (long long)shadowState;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (double)_distanceFromToolbarBaseToTitlebar;
- (long long)_shadowType;
- (unsigned long long)_shadowFlags;
- (void)_setShadowParameters;
- (void)_drawFrameShadowAndFlushContext:(id)arg1;
- (void)setUpGState;
- (void)adjustHalftonePhase;
- (void)systemColorsDidChange:(id)arg1;
- (id)frameColor;
- (id)contentFill;
- (void)tabViewAdded;
- (void)tabViewRemoved;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)titleCell;
- (void)initTitleCell:(id)arg1;
- (void)setResizeIncrements:(struct CGSize)arg1;
- (struct CGSize)resizeIncrements;
- (void)setAspectRatio:(struct CGSize)arg1;
- (struct CGSize)aspectRatio;
- (unsigned long long)styleMask;
- (id)representedFilename;
- (void)setRepresentedFilename:(id)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (BOOL)frameNeedsDisplay;
- (id)defaultTitleFont;
- (id)titleFont;
- (struct CGRect)_maxTitlebarTitleRect;
- (struct CGRect)titlebarRect;
- (void)_setUtilityWindow:(BOOL)arg1;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (void)setIsClosable:(BOOL)arg1;
- (void)setIsResizable:(BOOL)arg1;
- (void)setStyleMask:(unsigned long long)arg1;
- (id)closeButton;
- (id)minimizeButton;
- (id)zoomButton;
- (struct CGSize)miniaturizedSize;
- (void)_clearDragMargins;
- (struct CGRect)_draggableFrame;
- (void)_resetDragMargins;
- (void)addSubview:(id)arg1;
- (void)setTitle:(id)arg1 andDefeatWrap:(BOOL)arg2;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)dragRectForFrameRect:(struct CGRect)arg1;
- (struct CGRect)contentRect;
- (struct CGSize)minFrameSize;

@end

@interface NSGlyphGenerator : NSObject
{
}

+ (id)sharedGlyphGenerator;
+ (id)sharedGlyphGeneratorForTypesetterBehavior:(long long)arg1;
- (void)generateGlyphsForGlyphStorage:(id)arg1 desiredNumberOfCharacters:(unsigned long long)arg2 glyphIndex:(unsigned long long *)arg3 characterIndex:(unsigned long long *)arg4;

@end

@interface NSCTGlyphInfo : NSGlyphInfo
{
}

- (unsigned long long)_cfTypeID;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (id)_baseString;
- (id)glyphName;
- (unsigned long long)characterIdentifier;
- (unsigned long long)characterCollection;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSCIDGlyphInfo : NSGlyphInfo
{
    unsigned short _cid;
    unsigned long long _collection;
}

+ (id)glyphInfoWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;
+ (void)initialize;
- (id)initWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (unsigned long long)characterIdentifier;
- (unsigned long long)characterCollection;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSGlyphNameGlyphInfo : NSIdentityGlyphInfo
{
    NSString *_name;
}

+ (void)initialize;
- (id)initWithGlyphName:(id)arg1 glyph:(unsigned int)arg2 forFont:(id)arg3 baseString:(id)arg4;
- (void)dealloc;
- (id)glyphName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSIdentityGlyphInfo : NSGlyphInfo
{
    NSFont *_font;
    unsigned int _glyph;
}

+ (id)glyphInfoWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;
+ (void)initialize;
- (id)initWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;
- (void)dealloc;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (id)_font;
- (unsigned int)_glyph;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSGlyphInfo : NSObject <NSCopying, NSCoding>
{
    NSString *_baseString;
}

+ (id)glyphInfoWithGlyphName:(id)arg1 forFont:(id)arg2 baseString:(id)arg3;
+ (id)glyphInfoWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;
+ (id)glyphInfoWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;
+ (void)initialize;
- (id)initWithBaseString:(id)arg1;
- (void)dealloc;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (id)_baseString;
- (id)glyphName;
- (unsigned long long)characterIdentifier;
- (unsigned long long)characterCollection;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForKeyedArchiver;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSGraphicCell : NSCell
{
}

+ (void)initialize;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (id)setImageNamed:(id)arg1 forView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (id)richTextForView:(id)arg1;

@end

@interface NSGraphicsContext : NSObject
{
}

+ (id)currentContext;
+ (id)_lastOnScreenContext;
+ (void)setCurrentContext:(id)arg1;
+ (BOOL)currentContextDrawingToScreen;
+ (id)graphicsContextWithAttributes:(id)arg1;
+ (id)graphicsContextWithWindow:(id)arg1;
+ (id)graphicsContextWithBitmapImageRep:(id)arg1;
+ (id)graphicsContextWithGraphicsPort:(void *)arg1 flipped:(BOOL)arg2;
+ (void)saveGraphicsState;
+ (void)restoreGraphicsState;
+ (void)setGraphicsState:(long long)arg1;
- (id)attributes;
- (BOOL)isDrawingToScreen;
- (void)saveGraphicsState;
- (void)restoreGraphicsState;
- (void)flushGraphics;
- (void *)graphicsPort;
- (BOOL)isFlipped;
- (double)_scaleFactor;
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)shouldAntialias;
- (void)setImageInterpolation:(unsigned long long)arg1;
- (unsigned long long)imageInterpolation;
- (void)setPatternPhase:(struct CGPoint)arg1;
- (struct CGPoint)patternPhase;
- (void)setCompositingOperation:(unsigned long long)arg1;
- (unsigned long long)compositingOperation;
- (long long)colorRenderingIntent;
- (void)setColorRenderingIntent:(long long)arg1;
- (void)_setShouldEnforcePixelAlignment:(BOOL)arg1;
- (BOOL)_shouldEnforcePixelAlignment;
- (struct CGRect)_alignRect:(struct CGRect)arg1 force:(BOOL)arg2;
- (struct CGPoint)_alignPoint:(struct CGPoint)arg1 force:(BOOL)arg2;
- (struct CGSize)_alignSize:(struct CGSize)arg1 force:(BOOL)arg2;
- (id)CIContext;
- (void)_releaseCIContext;
- (void)dealloc;

@end

@interface NSGrayFrame : NSThemeFrame
{
}

+ (void)initialize;
+ (struct CGSize)sizeOfTitlebarButtons:(unsigned long long)arg1;
+ (double)_minXTitlebarWidgetInset:(unsigned long long)arg1;
+ (double)_maxXTitlebarWidgetInset:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (void)setStyleMask:(unsigned long long)arg1;
- (struct CGSize)_topCornerSize;
- (struct CGSize)_bottomCornerSize;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_computeHeightOfTop:(BOOL)arg1 bottom:(BOOL)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawTitleBar:(struct CGRect)arg1;
- (void)drawWindowBackgroundRect:(struct CGRect)arg1;
- (void)drawWindowBackgroundRegion:(void *)arg1;
- (id)contentFill;
- (double)_minYTitlebarButtonsOffset;
- (double)_minYTitlebarTitleOffset;
- (struct CGRect)_maxXminYResizeRect;
- (struct CGRect)_growBoxRect;
- (void)_drawGrowBoxWithClip:(struct CGRect)arg1;
- (BOOL)_inactiveButtonsNeedMask;
- (double)_minXTitlebarWidgetInset;
- (double)_maxXTitlebarWidgetInset;
- (struct CGPoint)_toolbarButtonOrigin;
- (double)_windowTitlebarButtonSpacingWidth;
- (struct CGSize)sizeOfTitlebarToolbarButton;

@end

@interface NSHTMLWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableData *_htmlData;
    NSMutableString *_bodyStr;
    NSFileWrapper *_fileWrapper;
    NSMutableDictionary *_subresources;
    NSData *_webArchiveData;
    NSMutableArray *_paraStyleStrings;
    NSMutableArray *_paraStyleArrays;
    NSMutableIndexSet *_paraStyleIndexes;
    NSMutableIndexSet *_listItemStyleIndexes;
    NSMutableArray *_charStyleStrings;
    NSMutableArray *_charStyleArrays;
    NSMutableArray *_fontStrings;
    NSMutableArray *_tableStyleStrings;
    NSMutableArray *_tableCellStyleStrings;
    NSMutableArray *_blockStyleStrings;
    NSMutableArray *_olistStyleStrings;
    NSMutableArray *_ulistStyleStrings;
    NSMutableDictionary *_fontNames;
    long long _level;
    long long _prefixSpaces;
    NSString *_textEncodingName;
    unsigned long long _characterEncoding;
    NSURL *_outputBaseURL;
    id _resourceHandler;
    unsigned int _excludedElements1;
    unsigned int _excludedElements2;
    struct {
        unsigned int interchangeNewline:1;
        unsigned int noDefaultFonts:1;
        unsigned int tabsToSpaces:1;
        unsigned int coalesceTabSpans:1;
        unsigned int usedTabSpan:1;
        unsigned int encodingIsUnicode:1;
        unsigned int pad:26;
    } _flags;
}

- (id)_webKitBundle;
- (void)_loadWebKit;
- (Class)_webArchiveClass;
- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (void)setDocumentAttributes:(id)arg1;
- (id)_prefix;
- (id)_prefixUp;
- (id)_prefixDown;
- (unsigned long long)_spanClassForAttributes:(id)arg1 inParagraphClass:(unsigned long long)arg2 spanClass:(unsigned long long)arg3 flags:(unsigned long long *)arg4;
- (id)_defaultValueForAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)_paragraphClassforParagraphStyle:(id)arg1 range:(struct _NSRange)arg2 isEmpty:(BOOL)arg3 isCompletelyEmpty:(BOOL)arg4 headerString:(id *)arg5 alignmentString:(id *)arg6 directionString:(id *)arg7;
- (void)_writeDocumentProperty:(id)arg1 value:(id)arg2 toString:(id)arg3;
- (void)_writeDocumentPropertiesToString:(id)arg1;
- (void)_closeFlags:(unsigned long long)arg1 openFlags:(unsigned long long)arg2 inString:(id)arg3;
- (unsigned long long)_blockClassForBlock:(id)arg1;
- (void)_openBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (BOOL)_closeBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (unsigned long long)_listClassForList:(id)arg1;
- (void)_openListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3 isStrict:(BOOL)arg4;
- (BOOL)_closeListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_appendAttachment:(id)arg1 atIndex:(unsigned long long)arg2 toString:(id)arg3;
- (BOOL)_isStrictByParsingExcludedElements;
- (void)_prepareString:(id)arg1 forConversionToEncoding:(unsigned long long)arg2;
- (void)_generateHTML;
- (id)HTMLData;
- (id)HTMLFileWrapper;
- (id)subresources;
- (id)webArchive;
- (void)_createWebArchiveData;
- (id)webArchiveData;
- (void)readDocumentFragment:(id)arg1;
- (id)documentFragmentForDocument:(id)arg1;

@end

@interface NSHTMLReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_data;
    NSURL *_baseURL;
    NSDictionary *_options;
    WebView *_webView;
    id _webDelegate;
    DOMDocument *_document;
    DOMRange *_domRange;
    NSMutableArray *_domStartAncestors;
    WebDataSource *_dataSource;
    NSString *_standardFontFamily;
    double _textSizeMultiplier;
    double _webViewTextSizeMultiplier;
    double _defaultTabInterval;
    double _defaultFontSize;
    double _minimumFontSize;
    NSMutableArray *_textLists;
    NSMutableArray *_textBlocks;
    NSMutableArray *_textTables;
    NSMutableDictionary *_textTableFooters;
    NSMutableArray *_textTableSpacings;
    NSMutableArray *_textTablePaddings;
    NSMutableArray *_textTableRows;
    NSMutableArray *_textTableRowArrays;
    NSMutableArray *_textTableRowBackgroundColors;
    NSMutableDictionary *_computedStylesForElements;
    NSMutableDictionary *_specifiedStylesForElements;
    NSMutableDictionary *_stringsForNodes;
    NSMutableDictionary *_floatsForNodes;
    NSMutableDictionary *_colorsForNodes;
    NSMutableDictionary *_attributesForElements;
    NSMutableDictionary *_elementIsBlockLevel;
    NSMutableDictionary *_fontCache;
    NSMutableArray *_writingDirectionArray;
    long long _domRangeStartIndex;
    long long _indexingLimit;
    long long _thumbnailLimit;
    long long _errorCode;
    long long _quoteLevel;
    struct {
        unsigned int isSoft:1;
        unsigned int reachedStart:1;
        unsigned int reachedEnd:1;
        unsigned int isIndexing:1;
        unsigned int isTesting:1;
        unsigned int hasTrailingNewline:1;
        unsigned int pad:26;
    } _flags;
}

+ (id)defaultParagraphStyle;
- (id)_webKitBundle;
- (void)_loadWebKit;
- (Class)_webViewClass;
- (Class)_webArchiveClass;
- (Class)_DOMHTMLTableCellElementClass;
- (Class)_WebMessageDocumentClass;
- (id)_webPreferences;
- (id)_childrenForNode:(id)arg1;
- (id)_computedStyleForElement:(id)arg1;
- (id)_specifiedStyleForElement:(id)arg1;
- (id)_computedStringForNode:(id)arg1 property:(id)arg2;
- (id)_stringForNode:(id)arg1 property:(id)arg2;
- (BOOL)_getComputedFloat:(double *)arg1 forNode:(id)arg2 property:(id)arg3;
- (BOOL)_getFloat:(double *)arg1 forNode:(id)arg2 property:(id)arg3;
- (BOOL)_elementIsBlockLevel:(id)arg1;
- (BOOL)_elementHasOwnBackgroundColor:(id)arg1;
- (id)_blockLevelElementForNode:(id)arg1;
- (id)_computedColorForNode:(id)arg1 property:(id)arg2;
- (id)_colorForNode:(id)arg1 property:(id)arg2;
- (id)_computedAttributesForElement:(id)arg1;
- (id)_attributesForElement:(id)arg1;
- (void)_newParagraphForElement:(id)arg1 tag:(id)arg2 allowEmpty:(BOOL)arg3 suppressTrailingSpace:(BOOL)arg4;
- (void)_newLineForElement:(id)arg1;
- (void)_newTabForElement:(id)arg1;
- (BOOL)_addAttachmentForElement:(id)arg1 URL:(id)arg2 needsParagraph:(BOOL)arg3 usePlaceholder:(BOOL)arg4;
- (void)_addQuoteForElement:(id)arg1 opening:(BOOL)arg2 level:(long long)arg3;
- (void)_addValue:(id)arg1 forElement:(id)arg2;
- (void)_fillInBlock:(id)arg1 forElement:(id)arg2 backgroundColor:(id)arg3 extraMargin:(double)arg4 extraPadding:(double)arg5 isTable:(BOOL)arg6;
- (void)_processMetaElementWithName:(id)arg1 content:(id)arg2;
- (void)_processHeadElement:(id)arg1;
- (BOOL)_enterElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4 embedded:(BOOL)arg5;
- (void)_addTableForElement:(id)arg1;
- (void)_addTableCellForElement:(id)arg1;
- (BOOL)_processElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4;
- (void)_addMarkersToList:(id)arg1 range:(struct _NSRange)arg2;
- (void)_exitElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4 startIndex:(unsigned long long)arg5;
- (void)_processText:(id)arg1;
- (void)_traverseNode:(id)arg1 depth:(long long)arg2 embedded:(BOOL)arg3;
- (void)_traverseFooterNode:(id)arg1 depth:(long long)arg2;
- (void)_parseNode:(id)arg1;
- (void)_adjustTrailingNewline;
- (BOOL)_sanitizeWebArchiveArray:(id)arg1;
- (BOOL)_sanitizeWebArchiveDictionary:(id)arg1;
- (id)_createWebArchiveForData:(id)arg1;
- (void)_loadUsingWebKit;
- (void)_loadFromDOMRange;
- (void)_newParagraphForLibXML2ElementNode:(struct _xmlNode *)arg1 tag:(id)arg2 allowEmpty:(BOOL)arg3 suppressTrailingSpace:(BOOL)arg4;
- (void)_newLineForLibXML2ElementNode:(struct _xmlNode *)arg1;
- (void)_addQuoteForLibXML2ElementNode:(struct _xmlNode *)arg1 opening:(BOOL)arg2 level:(long long)arg3;
- (void)_processLibXML2TitleNode:(struct _xmlNode *)arg1;
- (void)_processLibXML2MetaNode:(struct _xmlNode *)arg1;
- (void)_processLibXML2HeadElementNode:(struct _xmlNode *)arg1;
- (BOOL)_enterLibXML2ElementNode:(struct _xmlNode *)arg1 tag:(id)arg2;
- (BOOL)_processLibXML2ElementNode:(struct _xmlNode *)arg1 tag:(id)arg2;
- (void)_exitLibXML2ElementNode:(struct _xmlNode *)arg1 tag:(id)arg2 startIndex:(unsigned long long)arg3;
- (void)_processLibXML2TextNode:(struct _xmlNode *)arg1 content:(id)arg2;
- (void)_traverseLibXML2Node:(struct _xmlNode *)arg1 depth:(long long)arg2;
- (void)_parseLibXML2Node:(struct _xmlNode *)arg1;
- (void)_loadUsingLibXML2;
- (void)_loadUsingWebKitOnMainThread;
- (void)_load;
- (void)dealloc;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithDOMRange:(id)arg1;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;

@end

@interface NSHTMLWebDelegate : NSObject
{
    BOOL _loadDidFinish;
    BOOL _loadDidSucceed;
    NSURL *_baseURL;
}

- (id)init;
- (id)initWithBaseURL:(id)arg1;
- (void)dealloc;
- (BOOL)loadDidFinish;
- (BOOL)loadDidSucceed;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)decidePolicyForRequest:(id)arg1 decisionListener:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;

@end

@interface NSSubstituteWebResource : NSObject
{
    NSData *_data;
    NSURL *_url;
    NSString *_mimeType;
    NSString *_textEncodingName;
    NSString *_frameName;
}

- (Class)_webResourceClass;
- (id)initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (void)dealloc;
- (id)data;
- (id)URL;
- (id)MIMEType;
- (id)textEncodingName;
- (id)frameName;
- (id)webResource;

@end

@interface NSHelpAttachment : NSTextAttachment
{
    NSString *markerName;
    NSString *fileName;
}

- (id)initWithFileName:(id)arg1 markerName:(id)arg2;
- (id)markerName;
- (id)fileName;
- (void)dealloc;

@end

@interface _NSContextHelpBorderView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSHelpManager : NSObject
{
    NSMapTable *_helpMapTable;
    NSMapTable *_keyMapTable;
    NSMapTable *_bundleMapTable;
    NSWindow *_helpWindow;
    NSWindow *_shadowWindow;
    NSWindow *_evtWindow;
    NSBundle *_helpBundle;
}

+ (id)sharedHelpManager;
+ (void)_setContextHelpModeActiveOnMainThread:(id)arg1;
+ (void)setContextHelpModeActive:(BOOL)arg1;
+ (BOOL)isContextHelpModeActive;
- (void)dealloc;
- (void)finalize;
- (void)setContextHelp:(id)arg1 forObject:(id)arg2;
- (void)removeContextHelpForObject:(id)arg1;
- (id)contextHelpForObject:(id)arg1;
- (BOOL)showContextHelpForObject:(id)arg1 locationHint:(struct CGPoint)arg2;
- (void)openHelpAnchor:(id)arg1 inBook:(id)arg2;
- (void)findString:(id)arg1 inBook:(id)arg2;
- (BOOL)registerBooksInBundle:(id)arg1;

@end

@interface NSHyphenator : NSObject
{
    NSMapTable *exceptionsTable;
    NSMapTable *patternTable;
    char *patternMemory;
    unsigned long long maxPatternLength;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)getHyphenLocations:(unsigned long long *)arg1 inString:(id)arg2;
- (unsigned long long)getHyphenLocations:(unsigned long long *)arg1 inString:(id)arg2 wordAtIndex:(unsigned long long)arg3;

@end

@interface NSIBHelpConnector : NSObject <NSCoding>
{
    id _destination;
    NSString *_file;
    NSString *_marker;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)source;
- (void)setSource:(id)arg1;
- (id)destination;
- (void)setDestination:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)file;
- (void)setFile:(id)arg1;
- (id)marker;
- (void)setMarker:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSIBObjectData : NSObject <NSCoding>
{
    id rootObject;
    NSMapTable *objectTable;
    NSMapTable *nameTable;
    NSMutableSet *visibleWindows;
    NSMutableArray *connections;
    id firstResponder;
    id fontManager;
    NSMapTable *oidTable;
    unsigned long long nextOid;
    NSMapTable *classTable;
    NSMapTable *instantiatedObjectTable;
    NSString *targetFramework;
    id _document;
    id _reserved;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)visibleWindows;
- (void)setVisibleWindows:(id)arg1;
- (id)connections;
- (void)setConnections:(id)arg1;
- (id)targetFramework;
- (void)setTargetFramework:(id)arg1;
- (long long)nextObjectID;
- (void)setNextObjectID:(unsigned long long)arg1;
- (id)firstResponder;
- (void)setFirstResponder:(id)arg1;
- (id)rootObject;
- (void)setRootObject:(id)arg1;
- (id)objectTable;
- (id)nameTable;
- (id)oidTable;
- (id)classTable;
- (id)instantiateObject:(id)arg1;
- (void)nibInstantiateWithOwner:(id)arg1;
- (void)nibInstantiateWithOwner:(id)arg1 topLevelObjects:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSObsoleteBitmap : NSObject
{
    char *name;
    int isBuiltIn;
}

- (id)initWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSImage : NSObject <NSCopying, NSCoding, NSPasteboardReading, NSPasteboardWriting>
{
    NSString *_name;
    struct CGSize _size;
    struct __imageFlags {
        unsigned int scalable:1;
        unsigned int dataRetained:1;
        unsigned int uniqueWindow:1;
        unsigned int sizeWasExplicitlySet:1;
        unsigned int builtIn:1;
        unsigned int needsToExpand:1;
        unsigned int useEPSOnResolutionMismatch:1;
        unsigned int colorMatchPreferred:1;
        unsigned int multipleResolutionMatching:1;
        unsigned int focusedWhilePrinting:1;
        unsigned int archiveByName:1;
        unsigned int unboundedCacheDepth:1;
        unsigned int flipped:1;
        unsigned int aliased:1;
        unsigned int dirtied:1;
        unsigned int cacheMode:2;
        unsigned int sampleMode:3;
        unsigned int reserved2:1;
        unsigned int isTemplate:1;
        unsigned int failedToExpand:1;
        unsigned int reserved1:9;
    } _flags;
    id _reps;
    _NSImageAuxiliary *_imageAuxiliary;
}

+ (void)initialize;
+ (id)imageWithImageRep:(id)arg1;
+ (BOOL)_canInitWithPasteboard:(id)arg1 allowMultipleFiles:(BOOL)arg2;
+ (BOOL)canInitWithPasteboard:(id)arg1;
+ (id)_imageNamed:(id)arg1;
+ (id)_allNames;
+ (id)_findSystemImageNamed:(id)arg1;
+ (id)_coreUIImageWithName:(id)arg1;
+ (id)imageNamed:(id)arg1;
+ (id)_searchForImageNamed:(id)arg1;
+ (id)_searchForSystemImageNamed:(id)arg1;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (void)_invalidateImageTypeCaches;
+ (id)imageTypes;
+ (id)imageUnfilteredTypes;
+ (id)imageFileTypes;
+ (id)imagePasteboardTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
+ (BOOL)_requireDefaultEndianPremultipliedLastForTIFFDataFromSnapshotReps;
- (void)_setCacheRep:(id)arg1;
- (void)_usingCacheRepPerformBlock:(id)arg1;
- (BOOL)_isCachedToRep:(id)arg1;
- (BOOL)_hasCacheRep;
- (void)recache;
- (BOOL)_shouldCacheWhenDrawingRep:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 processedHints:(id)arg4;
- (void)_cacheSnapshotRep:(id)arg1;
- (id)_createSnapshotRepForCGImage:(struct CGImage *)arg1 drawingRect:(struct CGRect)arg2 applicableForRect:(struct CGRect)arg3 context:(id)arg4 processedHints:(id)arg5;
- (id)_createSnapshotRepForRep:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 processedHints:(id)arg4;
- (id)_snapshotRepForRep:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 processedHints:(id)arg4;
- (id)_defaultImageHintsAndOnlyIfAvailable:(BOOL)arg1;
- (id)_processedHintsForHints:(id)arg1 includeOnlyIfAvailable:(BOOL)arg2;
- (void)_setRepProvider:(id)arg1;
- (void)_usingRepProviderPerformBlock:(id)arg1;
- (void)_usingRepresentationsPerformBlock:(id)arg1;
- (void)_setRepProviderWithReferencingURL:(id)arg1;
- (void)_setRepProviderWithIconRef:(struct OpaqueIconRef *)arg1 includeThumbnail:(BOOL)arg2;
- (void)_setRepProviderWithRepresentationsArray:(id)arg1;
- (id)representations;
- (void)_addRepresentations:(id)arg1;
- (void)addRepresentations:(id)arg1;
- (void)removeRepresentation:(id)arg1;
- (void)addRepresentation:(id)arg1;
- (void)_replaceRepsWithRep:(id)arg1;
- (BOOL)_legacyAddRepresentationsForIconNamed:(id)arg1 fromIconSectionInAppBinary:(id)arg2;
- (id)_addRepresentationWithSharedKitWindow:(long long)arg1 rect:(const struct CGRect *)arg2;
- (id)bestRepresentationAmongRepresentations:(id)arg1 forRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4;
- (id)bestRepresentationForRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3;
- (void)_usingBestRepresentationAmongRepresentations:(id)arg1 forRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4 body:(id)arg5;
- (void)_usingBestRepresentationForRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3 body:(id)arg4;
- (id)bestRepresentationForDevice:(id)arg1;
- (id)initByReferencingFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initByReferencingURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithDataIgnoringOrientation:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (id)init;
- (id)initWithCGImage:(struct CGImage *)arg1 size:(struct CGSize)arg2;
- (id)initWithImageRep:(id)arg1;
- (id)initFromImage:(id)arg1 rect:(struct CGRect)arg2;
- (id)initWithPasteboard:(id)arg1;
- (id)_initWithData:(id)arg1 fileType:(id)arg2 hfsType:(id)arg3;
- (id)_initWithIconRef:(void *)arg1 includeThumbnail:(BOOL)arg2;
- (id)initWithIconRef:(struct OpaqueIconRef *)arg1;
- (void)_failsafeAllocAuxiliaryStorage;
- (void)_allocAuxiliaryStorage;
- (void)_deallocAuxiliaryStorage;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)cancelIncrementalLoad;
- (BOOL)setName:(id)arg1;
- (id)name;
- (id)_imageLevel_backgroundColor;
- (void)_imageLevel_setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setFlipped:(BOOL)arg1;
- (BOOL)isFlipped;
- (void)setScalesWhenResized:(BOOL)arg1;
- (BOOL)scalesWhenResized;
- (void)setDataRetained:(BOOL)arg1;
- (BOOL)isDataRetained;
- (void)setCachedSeparately:(BOOL)arg1;
- (BOOL)isCachedSeparately;
- (void)setCacheMode:(unsigned long long)arg1;
- (unsigned long long)cacheMode;
- (void)setCacheDepthMatchesImageDepth:(BOOL)arg1;
- (BOOL)cacheDepthMatchesImageDepth;
- (void)setUsesEPSOnResolutionMismatch:(BOOL)arg1;
- (BOOL)usesEPSOnResolutionMismatch;
- (void)setPrefersColorMatch:(BOOL)arg1;
- (BOOL)prefersColorMatch;
- (void)setMatchesOnMultipleResolution:(BOOL)arg1;
- (BOOL)matchesOnMultipleResolution;
- (void)_setAntialiased:(BOOL)arg1;
- (BOOL)_antialiased;
- (BOOL)hasAlpha;
- (BOOL)isTemplate;
- (void)setTemplate:(BOOL)arg1;
- (struct CGRect)_alignmentRectInNormalizedCoordinates;
- (void)_setAlignmentRectInNormalizedCoordinates:(struct CGRect)arg1;
- (struct CGRect)alignmentRect;
- (void)setAlignmentRect:(struct CGRect)arg1;
- (unsigned long long)_imageInterpolation;
- (void)_setImageInterpolation:(unsigned long long)arg1;
- (unsigned long long)imageInterpolation;
- (void)setImageInterpolation:(unsigned long long)arg1;
- (id)_accessibilityDescriptionBacking;
- (void)_setAccessibilityDescriptionBacking:(id)arg1;
- (id)_accessibilityDescriptionBackingForCopying;
- (id)_accessibilityDescriptionBackingForArchiving;
- (id)accessibilityDescription;
- (void)setAccessibilityDescription:(id)arg1;
- (id)description;
- (void)_dumpFullImageInfo;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4 respectFlipped:(BOOL)arg5 hints:(id)arg6;
- (void)_drawMappingAlignmentRectToRect:(struct CGRect)arg1 withState:(unsigned long long)arg2 backgroundStyle:(unsigned long long)arg3 operation:(unsigned long long)arg4 fraction:(double)arg5 flip:(BOOL)arg6 hints:(id)arg7;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (id)_imageDidNotDrawHandlerRep;
- (void)_dispatchImageDidNotDraw:(id)arg1;
- (BOOL)isValid;
- (void *)_createPatternForContext:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4 hints:(id)arg5;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
- (void)drawAtPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
- (void)compositeToPoint:(struct CGPoint)arg1 operation:(unsigned long long)arg2;
- (void)dissolveToPoint:(struct CGPoint)arg1 fraction:(double)arg2;
- (void)compositeToPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3;
- (void)dissolveToPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 fraction:(double)arg3;
- (void)compositeToPoint:(struct CGPoint)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3;
- (void)compositeToPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
- (void)_compositeToPoint:(struct CGPoint)arg1 operation:(unsigned long long)arg2 fraction:(double)arg3;
- (void)_compositeToPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
- (void)_compositeFlipped:(BOOL)arg1 inRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3 operation:(unsigned long long)arg4 fraction:(double)arg5;
- (void)_compositeFlipped:(BOOL)arg1 atPoint:(struct CGPoint)arg2 fromRect:(struct CGRect)arg3 operation:(unsigned long long)arg4 fraction:(double)arg5;
- (BOOL)_composite:(long long)arg1 delta:(double)arg2 fromRect:(struct CGRect)arg3 toPoint:(struct CGPoint)arg4;
- (BOOL)_whenDrawn:(id)arg1 fills:(const struct CGRect *)arg2;
- (BOOL)_drawRepresentation:(id)arg1 inRect:(struct CGRect)arg2 withScaling:(BOOL)arg3;
- (BOOL)drawRepresentation:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_lockFocusOnRepresentation:(id)arg1 rect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4 flipped:(BOOL)arg5;
- (void)unlockFocus;
- (void)lockFocusOnRepresentation:(id)arg1;
- (void)lockFocusWithRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
- (void)lockFocusFlipped:(BOOL)arg1;
- (void)lockFocus;
- (void *)CA_copyRenderValue;
- (BOOL)hitTestRect:(struct CGRect)arg1 withImageDestinationRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4 flipped:(BOOL)arg5;
- (BOOL)hitTestRect:(struct CGRect)arg1 withImageDestinationRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4;
- (BOOL)hitTestPoint:(struct CGPoint)arg1 withImageDestinationRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4;
- (id)_imageByBadgingWithImage:(id)arg1 rect:(struct CGRect)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(unsigned long long)arg1 factor:(float)arg2;

@end

@interface NSImageIconRefRepProvider : NSObject <NSCopying>
{
    struct OpaqueIconRef *_iconRef;
    BOOL _includeThumbnail;
    NSArray *_representations;
}

- (id)initWithIconRef:(struct OpaqueIconRef *)arg1 includeThumbnail:(BOOL)arg2;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly) NSArray *representations;
@property(readonly) BOOL includeThumbnail; // @synthesize includeThumbnail=_includeThumbnail;
@property(readonly) struct OpaqueIconRef *iconRef; // @synthesize iconRef=_iconRef;

@end

@interface NSImageURLReferencingRepProvider : NSObject <NSCopying>
{
    NSURL *_url;
    NSArray *_representations;
}

- (id)initWithURL:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly) NSArray *representations;
@property(readonly) NSURL *url; // @synthesize url=_url;

@end

@interface _NSImageAuxiliary : NSObject
{
    NSColor *backgroundColor;
    id imageDelegate;
    struct CGRect alignmentRectInNormalizedCoordinates;
    NSImageRep *cachedRep;
    NSString *accessibilityDescriptionBacking;
}

@end

@interface NSImageCacheView : NSView
{
    struct __CFDictionary *_threadEntries;
    BOOL isOpaque;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)lockFocusIfCanDrawInFrame:(struct CGRect)arg1 flipped:(BOOL)arg2 clip:(BOOL)arg3;
- (BOOL)lockFocusIfCanDraw;
- (void)unlockFocus;
- (struct CGRect)frame;
- (struct CGRect)bounds;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)setOpaque:(BOOL)arg1;

@end

@interface NSImageCell : NSCell <NSCopying, NSCoding>
{
    id _controlView;
    struct __ICFlags {
        unsigned int _unused:22;
        unsigned int _animates:1;
        unsigned int _align:4;
        unsigned int _scale:2;
        unsigned int _style:3;
    } _icFlags;
    struct _NSImageCellAnimationState *_animationState;
    NSImage *_scaledImage;
}

+ (void)initialize;
- (id)init;
- (id)initImageCell:(id)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_setContents:(id)arg1;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)setEditable:(BOOL)arg1;
- (unsigned long long)imageAlignment;
- (void)setImageAlignment:(unsigned long long)arg1;
- (unsigned long long)imageScaling;
- (void)setImageScaling:(unsigned long long)arg1;
- (unsigned long long)imageFrameStyle;
- (void)setImageFrameStyle:(unsigned long long)arg1;
- (void)setObjectValue:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (BOOL)_highlightsWithHighlightRect;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)_imageRectForDrawing:(id)arg1 inFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (long long)interiorBackgroundStyle;
- (BOOL)isOpaque;
- (void)setFormatter:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setControlView:(id)arg1;
- (id)controlView;

@end

@interface NSImageRep : NSObject <NSCopying, NSCoding>
{
    struct __repFlags {
        unsigned int hasAlpha:1;
        unsigned int isOpaque:1;
        unsigned int cacheParamsComputed:1;
        unsigned int cacheAlphaComputed:1;
        unsigned int loadState:2;
        unsigned int keepCacheWindow:1;
        unsigned int reserved:1;
        unsigned int bitsPerSample:8;
        unsigned int gsaved:16;
    } _repFlags;
    NSString *_colorSpaceName;
    struct CGSize _size;
    int _pixelsWide;
    int _pixelsHigh;
}

+ (void)initialize;
+ (BOOL)canInitWithData:(id)arg1;
+ (id)imageUnfilteredTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
+ (id)_imageTypesNoCaching;
+ (id)imageTypes;
+ (id)_imagePasteboardTypesNoCaching;
+ (id)imagePasteboardTypes;
+ (id)_imageFileTypesNoCaching;
+ (id)imageFileTypes;
+ (BOOL)canInitWithPasteboard:(id)arg1;
+ (id)imageRepsWithContentsOfFile:(id)arg1;
+ (id)_imageRepsWithContentsOfURL:(id)arg1 expandImageContentNow:(BOOL)arg2;
+ (id)_imageRepsWithContentsOfURL:(id)arg1 expandImageContentNow:(BOOL)arg2 giveUpOnNetworkURLsWithoutGoodExtensions:(BOOL)arg3;
+ (id)_imageRepsWithContentsOfFile:(id)arg1 expandImageContentNow:(BOOL)arg2;
+ (id)imageRepWithContentsOfFile:(id)arg1;
+ (id)imageRepsWithPasteboard:(id)arg1;
+ (id)imageRepWithPasteboard:(id)arg1;
+ (id)imageRepsWithContentsOfURL:(id)arg1;
+ (id)imageRepWithContentsOfURL:(id)arg1;
+ (id)_imageRepsWithData:(id)arg1 fileType:(id)arg2 hfsType:(id)arg3 expandImageContentNow:(BOOL)arg4;
+ (void)registerImageRepClass:(Class)arg1;
+ (void)unregisterImageRepClass:(Class)arg1;
+ (id)registeredImageRepClasses;
+ (Class)imageRepClassForType:(id)arg1;
+ (Class)_imageRepClassForFileNameExtension:(id)arg1 andHFSFileType:(id)arg2;
+ (Class)imageRepClassForFileType:(id)arg1;
+ (Class)imageRepClassForPasteboardType:(id)arg1;
+ (Class)imageRepClassForData:(id)arg1;
+ (BOOL)_preferFilter;
+ (BOOL)_deprecated_hasReversedFlippednessInFlippedImages;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)dealloc;
- (BOOL)drawAtPoint:(struct CGPoint)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)draw;
- (id)_defaultImageHintsIncludeOnlyIfAvailable:(BOOL)arg1;
- (id)_processedHintsForHints:(id)arg1 includeOnlyIfAvailable:(BOOL)arg2;
- (BOOL)_drawFromRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 alpha:(double)arg4 compositing:(BOOL)arg5 flipped:(BOOL)arg6 ignoreContext:(BOOL)arg7;
- (BOOL)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4 respectFlipped:(BOOL)arg5 hints:(id)arg6;
- (long long)_uncachedSize;
- (BOOL)_isValid;
- (void *)_createPatternForRect:(struct CGRect)arg1 context:(id)arg2;
- (id)colorSpace;
- (id)_imageRep_colorSpaceName;
- (void)_imageRep_setColorSpaceName:(id)arg1;
- (void)setColorSpaceName:(id)arg1;
- (id)colorSpaceName;
- (long long)_numberOfColorComponentsNotIncludingAlpha;
- (void)setAlpha:(BOOL)arg1;
- (BOOL)hasAlpha;
- (void)setOpaque:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)setBitsPerSample:(long long)arg1;
- (long long)bitsPerSample;
- (void)setPixelsWide:(long long)arg1;
- (long long)pixelsWide;
- (void)setPixelsHigh:(long long)arg1;
- (long long)pixelsHigh;
- (BOOL)_wantsToBeCached;
- (BOOL)_drawOnlyUsesOneDrawingOperation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_loadDataIfNotYetLoaded;
- (id)description;
- (struct CGImage *)_createCGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
- (struct CGImage *)_CGImageRef;
- (void)_setCGImageRef:(struct CGImage *)arg1;
- (BOOL)_withHints:(id)arg1 performBlockUsingBitmapForTIFFRepresentation:(id)arg2;

@end

@interface NSImageView : NSControl
{
    struct __IVFlags {
        unsigned int _unused:26;
        unsigned int _rejectsMultiFileDrops:1;
        unsigned int _compatibleScalingAndAlignment:1;
        unsigned int _reserved:1;
        unsigned int _overridesDrawing:1;
        unsigned int _allowsCutCopyPaste:1;
        unsigned int _editable:1;
    } _ivFlags;
    id _target;
    SEL _action;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setCell:(id)arg1;
- (unsigned long long)imageFrameStyle;
- (void)setImageFrameStyle:(unsigned long long)arg1;
- (unsigned long long)imageAlignment;
- (void)setImageAlignment:(unsigned long long)arg1;
- (unsigned long long)imageScaling;
- (void)setImageScaling:(unsigned long long)arg1;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (id)image;
- (void)setObjectValue:(id)arg1;
- (void)setImage:(id)arg1;
- (void)_setImageAndNotifyTarget:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)setAction:(SEL)arg1;
- (id)target;
- (SEL)action;
- (BOOL)isOpaque;
- (BOOL)animates;
- (void)setAnimates:(BOOL)arg1;
- (BOOL)_shouldTrackWithNonEditableCell;
- (void)rightMouseDown:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)allowsCutCopyPaste;
- (void)setAllowsCutCopyPaste:(BOOL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)_copyImageToPasteboard;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)paste:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)keyDown:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)setLayer:(id)arg1;
- (id)makeBackingLayer;
- (void)_updateDrawsNothing;
- (BOOL)_drawsNothing;
- (BOOL)_canAnimateResizeUsingCachedContents;

@end

@interface NSInputManager : NSObject <NSTextInput>
{
    id _currentClient;
    id _server;
    id _bundleObj;
    id _keybindings;
    NSString *_trueName;
    NSString *_connectionName;
    NSString *_hostName;
    NSString *_procToExec;
    NSString *_visibleName;
    NSString *_bundleName;
    NSString *_language;
    NSImage *_image;
    unsigned int _flags;
    NSString *_keyBindingsName;
    int _reservedInputManager2;
}

+ (void)_terminate:(id)arg1;
+ (void)_switchToPlatformInput:(id)arg1;
+ (id)_inputManagerInNextScript:(id)arg1;
+ (id)_nextInputManagerInScript:(id)arg1;
+ (void)initialize;
+ (void)installInputManagerMenu:(id)arg1;
+ (void)setCurrentInputManager:(id)arg1;
+ (id)currentInputManager;
+ (void)cycleToNextInputLanguage:(id)arg1;
+ (void)cycleToNextInputServerInLanguage:(id)arg1;
+ (BOOL)worksWhenModal;
- (BOOL)_setActivationState:(BOOL)arg1;
- (BOOL)_isActivated;
- (BOOL)worksWhenModal;
- (id)initWithName:(id)arg1 host:(id)arg2;
- (void)_activateServer;
- (BOOL)_validateBundleSecurity;
- (void)_loadBundle;
- (void)_loadKeyboardBindings;
- (id)_keyBindingManager;
- (void)_senderIsInvalid:(id)arg1;
- (id)_currentClient;
- (void)_setCurrentClient:(id)arg1;
- (void)activateInputManagerFromMenu:(id)arg1;
- (id)localizedInputManagerName;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)isEnabled;
- (BOOL)handleMouseEvent:(id)arg1;
- (void)insertText:(id)arg1 client:(id)arg2;
- (void)doCommandBySelector:(SEL)arg1 client:(id)arg2;
- (void)markedTextAbandoned:(id)arg1;
- (void)markedTextSelectionChanged:(struct _NSRange)arg1 client:(id)arg2;
- (id)server;
- (id)bundleObject;
- (BOOL)wantsToDelayTextChangeNotifications;
- (BOOL)wantsToHandleMouseEvents;
- (id)language;
- (id)image;
- (void)dealloc;
- (void)finalize;
- (void)_terminate;
- (id)description;
- (id)_trueName;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)getMarkedText:(id *)arg1 selectedRange:(struct _NSRange *)arg2;
- (BOOL)hasMarkedText;
- (void)unmarkText;
- (id)validAttributesForMarkedText;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (long long)conversationIdentifier;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;

@end

@interface NSLocalInputServer : NSInputServer
{
    NSMutableDictionary *_dictionary;
}

- (id)initWithDelegate:(id)arg1 name:(id)arg2;
- (void)dealloc;
- (void)setMutableDictionary:(id)arg1;
- (id)mutableDictionary;

@end

@interface NSRemoteInputServer : NSInputServer
{
    NSConnection *_connection;
}

- (void)_invalidateConnectionsAsNecessary:(id)arg1;
- (id)initWithDelegate:(id)arg1 name:(id)arg2;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (void)markedTextAbandoned:(id)arg1;
- (void)terminate:(id)arg1;

@end

@interface NSInputServer : NSObject <NSInputServiceProvider, NSInputServerMouseTracker>
{
    NSString *_name;
    id _delegate;
}

- (id)initWithDelegate:(id)arg1 name:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)insertText:(id)arg1 client:(id)arg2;
- (void)doCommandBySelector:(SEL)arg1 client:(id)arg2;
- (void)markedTextAbandoned:(id)arg1;
- (void)markedTextSelectionChanged:(struct _NSRange)arg1 client:(id)arg2;
- (void)activeConversationWillChange:(id)arg1 fromOldConversation:(long long)arg2;
- (void)activeConversationChanged:(id)arg1 toNewConversation:(long long)arg2;
- (void)terminate:(id)arg1;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)wantsToDelayTextChangeNotifications;
- (BOOL)canBeDisabled;
- (void)inputClientBecomeActive:(id)arg1;
- (void)inputClientResignActive:(id)arg1;
- (void)inputClientEnabled:(id)arg1;
- (void)inputClientDisabled:(id)arg1;
- (BOOL)mouseDownOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;
- (BOOL)mouseDraggedOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;
- (void)mouseUpOnCharacterIndex:(unsigned long long)arg1 atCoordinate:(struct CGPoint)arg2 withModifier:(unsigned long long)arg3 client:(id)arg4;

@end

@interface NSInputClientWrapper : NSObject <NSTextInput>
{
    id <NSTextInput> _realClient;
    id _lastString;
    struct _NSRange _lastRange;
}

+ (void)invalidateConnectionsAsNecessary:(id)arg1;
+ (id)clientWrapperWithRealClient:(id)arg1;
+ (void)terminateForClient:(id)arg1;
- (void)resetState;
- (id)initWithRealClient:(id)arg1;
- (void)dealloc;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)validAttributesForMarkedText;

@end

@interface NSKeyBindingAtom : NSObject
{
    unsigned short key;
    unsigned int mask;
    id _binding;
}

- (id)initWithKey:(unsigned short)arg1 mask:(unsigned long long)arg2 binding:(id)arg3;
- (void)dealloc;
- (void)setBinding:(id)arg1;
- (id)binding;
- (long long)compare:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface NSKeyBindingManager : NSObject
{
    NSDictionary *_dict;
    NSSortedArray *_atomArray;
    NSKeyBindingAtom *_argBinding;
    NSKeyBindingAtom *_quoteBinding;
    NSKeyBindingManager *_nextManager;
    void *_reservedKeyBindingMgr1;
}

+ (void)initialize;
+ (id)sharedKeyBindingManager;
+ (void)interpretKeyEvents:(id)arg1 sender:(id)arg2;
+ (void)cancel;
+ (long long)repeatCount;
+ (void)setRepeatCountForNextCommand:(long long)arg1;
+ (void)_setKeyBindingMonitor:(id)arg1;
+ (id)_keyBindingMonitor;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;
- (id)dictionary;
- (void)setDictionary:(id)arg1;
- (void)setArgumentBinding:(id)arg1;
- (void)setQuoteBinding:(id)arg1;
- (void)_setNextKeyBindingManager:(id)arg1;
- (void)_monitorKeyBinding:(unsigned short)arg1 flags:(unsigned long long)arg2;

@end

@interface _NSKeyBindingStateActual : NSObject
{
    NSKeyBindingManager *_currentInstance;
    NSSortedArray *_currentAtomArray;
    NSMutableString *_toInsert;
    long long _stateFlag;
    long long _repeatCount;
    NSMutableArray *_atomList;
}

@end

@interface NSLayoutManager : NSObject <NSCoding, NSGlyphStorage>
{
    NSTextStorage *_textStorage;
    NSGlyphGenerator *_glyphGenerator;
    NSTypesetter *_typesetter;
    NSMutableArray *_textContainers;
    NSStorage *_containerUsedRects;
    NSStorage *_glyphs;
    NSRunStorage *_containerRuns;
    NSRunStorage *_fragmentRuns;
    NSRunStorage *_glyphLocations;
    NSRunStorage *_glyphRotationRuns;
    struct CGRect _extraLineFragmentRect;
    struct CGRect _extraLineFragmentUsedRect;
    NSTextContainer *_extraLineFragmentContainer;
    NSSortedArray *_glyphHoles;
    NSSortedArray *_layoutHoles;
    struct __lmFlags {
        unsigned int containersAreFull:1;
        unsigned int glyphsMightDrawOutsideLines:1;
        unsigned int backgroundLayoutEnabled:1;
        unsigned int resizingInProgress:1;
        unsigned int allowScreenFonts:1;
        unsigned int cachedRectArrayInUse:1;
        unsigned int displayInvalidationInProgress:1;
        unsigned int insertionPointNeedsUpdate:1;
        unsigned int layoutManagerInDirtyList:1;
        unsigned int usingGlyphCache:1;
        unsigned int showInvisibleCharacters:1;
        unsigned int showControlCharacters:1;
        unsigned int delegateRespondsToDidInvalidate:1;
        unsigned int delegateRespondsToDidComplete:1;
        unsigned int glyphFormat:2;
        unsigned int textStorageRespondsToIsEditing:1;
        unsigned int notifyEditedInProgress:1;
        unsigned int containersChanged:1;
        unsigned int isGeneratingGlyphs:1;
        unsigned int hasNonGeneratedGlyphData:1;
        unsigned int loggedBGLayoutException:1;
        unsigned int isLayoutRequestedFromSubthread:1;
        unsigned int defaultAttachmentScaling:2;
        unsigned int isInUILayoutMode:1;
        unsigned int seenRightToLeft:1;
        unsigned int ignoresViewTransformations:1;
        unsigned int needToFlushGlyph:1;
        unsigned int flipsIfNeeded:1;
        unsigned int allowNonContig:1;
        unsigned int useNonContig:1;
    } _lmFlags;
    id _delegate;
    unsigned short _textViewResizeDisableStack;
    unsigned short _displayInvalidationDisableStack;
    struct _NSRange _deferredDisplayCharRange;
    NSTextView *_firstTextView;
    struct CGRect *_cachedRectArray;
    unsigned long long _cachedRectArrayCapacity;
    char *_glyphBuffer;
    unsigned long long _glyphBufferSize;
    struct _NSRange _cachedLocationNominalGlyphRange;
    unsigned long long _cachedLocationGlyphIndex;
    struct CGPoint _cachedLocation;
    struct _NSRange _cachedFontCharRange;
    NSFont *_cachedFont;
    unsigned long long _firstUnlaidGlyphIndex;
    unsigned long long _firstUnlaidCharIndex;
    NSBox *_rulerAccView;
    id _rulerAccViewAlignmentButtons;
    id _rulerAccViewSpacing;
    NSTabWell *_rulerAccViewLeftTabWell;
    NSTabWell *_rulerAccViewRightTabWell;
    NSTabWell *_rulerAccViewCenterTabWell;
    NSTabWell *_rulerAccViewDecimalTabWell;
    id _rulerAccViewStyles;
    id _rulerAccViewLists;
    struct _NSRange _newlyFilledGlyphRange;
    id _extraData;
}

+ (void)initialize;
+ (BOOL)_usesScreenFonts;
+ (BOOL)_ignoresViewTransformations;
+ (BOOL)_showsInvisibleCharacters;
+ (BOOL)_showsControlCharacters;
- (void)_commonInit;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)textStorage;
- (id)attributedString;
- (void)setTextStorage:(id)arg1;
- (void)replaceTextStorage:(id)arg1;
- (id)glyphGenerator;
- (id)_glyphGenerator;
- (void)setGlyphGenerator:(id)arg1;
- (void)_setGlyphGenerator:(id)arg1;
- (id)typesetter;
- (void)setTypesetter:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)textContainers;
- (struct _NSRange)_characterRangeCurrentlyInAndAfterContainer:(id)arg1;
- (void)addTextContainer:(id)arg1;
- (void)insertTextContainer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeTextContainerAtIndex:(unsigned long long)arg1;
- (void)textContainerChangedGeometry:(id)arg1;
- (void)textContainerChangedTextView:(id)arg1;
- (void)setAllowsNonContiguousLayout:(BOOL)arg1;
- (BOOL)allowsNonContiguousLayout;
- (void)_setGlyphsPerLineEstimate:(unsigned long long)arg1 offsetPerLineEstimate:(double)arg2;
- (void)_setGlyphsPerLineEstimate:(unsigned long long)arg1 integerOffsetPerLineEstimate:(unsigned long long)arg2;
- (BOOL)hasNonContiguousLayout;
- (void)setBackgroundLayoutEnabled:(BOOL)arg1;
- (BOOL)backgroundLayoutEnabled;
- (BOOL)usesScreenFonts;
- (void)setUsesScreenFonts:(BOOL)arg1;
- (void)setShowsInvisibleCharacters:(BOOL)arg1;
- (BOOL)showsInvisibleCharacters;
- (void)setShowsControlCharacters:(BOOL)arg1;
- (BOOL)showsControlCharacters;
- (void)setHyphenationFactor:(float)arg1;
- (float)hyphenationFactor;
- (void)setDefaultAttachmentScaling:(unsigned long long)arg1;
- (unsigned long long)defaultAttachmentScaling;
- (void)setTypesetterBehavior:(long long)arg1;
- (long long)typesetterBehavior;
- (unsigned long long)layoutOptions;
- (void)_invalidateGlyphsForCharacterRange:(struct _NSRange)arg1 editedCharacterRange:(struct _NSRange)arg2 changeInLength:(long long)arg3 actualCharacterRange:(struct _NSRange *)arg4;
- (void)invalidateGlyphsForCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 actualCharacterRange:(struct _NSRange *)arg3;
- (void)invalidateLayoutForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (void)invalidateLayoutForCharacterRange:(struct _NSRange)arg1 isSoft:(BOOL)arg2 actualCharacterRange:(struct _NSRange *)arg3;
- (void)_primitiveInvalidateDisplayForGlyphRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForGlyphRange:(struct _NSRange)arg1;
- (void)_forceDisplayToBeCorrectForViewsWithUnlaidGlyphs;
- (void)textStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)ensureGlyphsForCharacterRange:(struct _NSRange)arg1;
- (void)ensureGlyphsForGlyphRange:(struct _NSRange)arg1;
- (void)ensureLayoutForCharacterRange:(struct _NSRange)arg1;
- (void)ensureLayoutForGlyphRange:(struct _NSRange)arg1;
- (void)ensureLayoutForTextContainer:(id)arg1;
- (void)ensureLayoutForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (void)insertGlyphs:(const unsigned int *)arg1 length:(unsigned long long)arg2 forStartingGlyphAtIndex:(unsigned long long)arg3 characterIndex:(unsigned long long)arg4;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)replaceGlyphAtIndex:(unsigned long long)arg1 withGlyph:(unsigned int)arg2;
- (void)_primitiveDeleteGlyphsInRange:(struct _NSRange)arg1;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)setCharacterIndex:(unsigned long long)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setIntAttribute:(long long)arg1 value:(long long)arg2 forGlyphAtIndex:(unsigned long long)arg3;
- (void)invalidateGlyphsOnLayoutInvalidationForGlyphRange:(struct _NSRange)arg1;
- (unsigned long long)numberOfGlyphs;
- (unsigned int)glyphAtIndex:(unsigned long long)arg1 isValidIndex:(char *)arg2;
- (unsigned int)glyphAtIndex:(unsigned long long)arg1;
- (BOOL)isValidGlyphIndex:(unsigned long long)arg1;
- (unsigned long long)characterIndexForGlyphAtIndex:(unsigned long long)arg1;
- (unsigned long long)glyphIndexForCharacterAtIndex:(unsigned long long)arg1;
- (long long)intAttribute:(long long)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(char *)arg5;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(char *)arg5 bidiLevels:(char *)arg6;
- (unsigned long long)getGlyphs:(unsigned int *)arg1 range:(struct _NSRange)arg2;
- (void)setTextContainer:(id)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3;
- (void)setExtraLineFragmentRect:(struct CGRect)arg1 usedRect:(struct CGRect)arg2 textContainer:(id)arg3;
- (void)setLocation:(struct CGPoint)arg1 forStartOfGlyphRange:(struct _NSRange)arg2 coalesceRuns:(BOOL)arg3;
- (void)setLocation:(struct CGPoint)arg1 forStartOfGlyphRange:(struct _NSRange)arg2;
- (void)setLocations:(struct CGPoint *)arg1 startingGlyphIndexes:(unsigned long long *)arg2 count:(unsigned long long)arg3 forGlyphRange:(struct _NSRange)arg4;
- (void)setNotShownAttribute:(BOOL)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setDrawsOutsideLineFragment:(BOOL)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (unsigned long long)firstUnlaidCharacterIndex;
- (unsigned long long)firstUnlaidGlyphIndex;
- (void)getFirstUnlaidCharacterIndex:(unsigned long long *)arg1 glyphIndex:(unsigned long long *)arg2;
- (id)textContainerForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(BOOL)arg3;
- (id)textContainerForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (struct CGRect)usedRectForTextContainer:(id)arg1;
- (struct CGRect)lineFragmentRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(BOOL)arg3;
- (struct CGRect)lineFragmentRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(BOOL)arg3;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 allowLayout:(BOOL)arg3;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (struct CGRect)extraLineFragmentRect;
- (struct CGRect)extraLineFragmentUsedRect;
- (id)extraLineFragmentTextContainer;
- (struct CGPoint)locationForGlyphAtIndex:(unsigned long long)arg1;
- (BOOL)notShownAttributeForGlyphAtIndex:(unsigned long long)arg1;
- (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(unsigned long long)arg1;
- (struct CGSize)attachmentSizeForGlyphAtIndex:(unsigned long long)arg1;
- (void)setLayoutRect:(struct CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(struct _NSRange)arg3;
- (void)setBoundsRect:(struct CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(struct _NSRange)arg3;
- (struct CGRect)layoutRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange)arg2;
- (struct CGRect)boundsRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange)arg2;
- (struct CGRect)layoutRectForTextBlock:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct CGRect)boundsRectForTextBlock:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (struct _NSRange)glyphRangeForTextContainer:(id)arg1;
- (struct _NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(unsigned long long)arg1;
- (struct CGRect *)rectArrayForCharacterRange:(struct _NSRange)arg1 withinSelectedCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4;
- (struct CGRect *)rectArrayForGlyphRange:(struct _NSRange)arg1 withinSelectedGlyphRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4;
- (struct CGRect)boundingRectForGlyphRange:(struct _NSRange)arg1 inTextContainer:(id)arg2;
- (struct _NSRange)glyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (struct _NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (unsigned long long)glyphIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2;
- (unsigned long long)glyphIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceThroughGlyph:(double *)arg3;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceBetweenInsertionPoints:(double *)arg3;
- (unsigned long long)getLineFragmentInsertionPointsForCharacterAtIndex:(unsigned long long)arg1 alternatePositions:(BOOL)arg2 inDisplayOrder:(BOOL)arg3 positions:(double *)arg4 characterIndexes:(unsigned long long *)arg5;
- (id)temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)addTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)addTemporaryAttribute:(id)arg1 value:(id)arg2 forCharacterRange:(struct _NSRange)arg3;
- (void)removeTemporaryAttribute:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)_temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)substituteFontForFont:(id)arg1;
- (double)defaultLineHeightForFont:(id)arg1;
- (double)defaultBaselineOffsetForFont:(id)arg1;
- (BOOL)usesFontLeading;
- (void)setUsesFontLeading:(BOOL)arg1;

@end

@interface NSLayoutManagerTextBlockRowArrayCache : NSObject
{
    struct _NSRange _rowCharRange;
    double _containerWidth;
    NSArray *_rowArray;
    BOOL _collapseBorders;
}

- (id)initWithRowCharRange:(struct _NSRange)arg1 containerWidth:(double)arg2 rowArray:(id)arg3 collapseBorders:(BOOL)arg4;
- (void)dealloc;

@end

@interface NSLayoutManagerTextBlockHelper : NSObject
{
    NSTextBlock *_block;
    struct CGRect _layoutRect;
    struct CGRect _boundsRect;
}

- (id)initWithTextBlock:(id)arg1 layoutRect:(struct CGRect)arg2 boundsRect:(struct CGRect)arg3;
- (void)dealloc;

@end

@interface NSExtraLMData : NSObject
{
    NSRunStorage *_attachmentSizesRun;
    struct CGRect _currentAttachmentRect;
    unsigned long long _currentAttachmentIndex;
    id _fillHoleLock;
    NSRunStorage *_fragmentRunsExtras;
    NSMutableRLEArray *_temporaryAttributes;
    NSTextContainer *_firstTextContainer;
    struct __CFDictionary *_textContainerIndexes;
    struct __CFDictionary *_textContainerGlyphIndexes;
    long long _typesetterBehavior;
    struct CGRect _cachedFontBounds;
    double _cachedUnderlineThickness;
    double _cachedUnderlinePosition;
    double _cachedUnderlineAdjustment;
    struct _NSRange _cachedUnderlineRange;
    NSMutableArray *_blockRunsArray;
    double _hyphenationFactor;
    NSMutableArray *_insertionPointCache;
    struct _NSGlyphTree _glyphTree;
    struct _NSLayoutTree _layoutTree;
    struct _NSRange _firstTextViewVisibleCharRange;
    struct CGSize _firstTextViewVisibleOffset;
    struct _NSRange _lastInvalidatedCharRange;
    double _lastInvalidatedLongitudinalPosition;
    NSTextContainer *_lastInvalidatedTextContainer;
    NSLayoutManagerTextBlockRowArrayCache *_rowArrayCache;
    struct __lmFlags2 {
        unsigned int glyphCause:6;
        unsigned int layoutCause:6;
        unsigned int delegateRespondsToTempAttrs:1;
        unsigned int processingFirstTextViewVisible:1;
        unsigned int temporarySpacingChange:1;
        unsigned int alwaysDrawsActive:1;
        unsigned int reserved:16;
    } _lmFlags2;
}

@end

@interface NSInsertionPointHelper : NSObject
{
    struct _NSRange _charRange;
    long long _writingDirection;
    unsigned long long _count;
    unsigned long long _altCount;
    double *_logicalPositions;
    double *_logicalLeftBoundaries;
    double *_logicalRightBoundaries;
    unsigned long long *_logicalCharIndexes;
    double *_displayPositions;
    unsigned long long *_displayCharIndexes;
    double *_logicalAltPositions;
    unsigned long long *_logicalAltCharIndexes;
    double *_displayAltPositions;
    unsigned long long *_displayAltCharIndexes;
}

- (void)dealloc;
- (void)finalize;

@end

@interface NSLazyBrowserCell : NSBrowserCell
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)lazyBrowserCell;
- (id)retain;
- (void)release;
- (id)autorelease;
- (void)dealloc;
- (void)_clearMouseTracking;
- (void)setLoaded:(BOOL)arg1;
- (BOOL)isLoaded;
- (BOOL)_isLoaded;
- (void)setControlView:(id)arg1;

@end

@interface NSLazyBrowserList : NSMutableArray
{
    unsigned long long count;
}

- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)addObject:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)makeObjectsPerform:(SEL)arg1;
- (void)makeObjectsPerform:(SEL)arg1 withObject:(id)arg2;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSLevelIndicator : NSControl
{
}

+ (void)initialize;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)sizeToFit;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (double)warningValue;
- (void)setWarningValue:(double)arg1;
- (double)criticalValue;
- (void)setCriticalValue:(double)arg1;
- (unsigned long long)tickMarkPosition;
- (void)setTickMarkPosition:(unsigned long long)arg1;
- (long long)numberOfTickMarks;
- (void)setNumberOfTickMarks:(long long)arg1;
- (long long)numberOfMajorTickMarks;
- (void)setNumberOfMajorTickMarks:(long long)arg1;
- (struct CGRect)rectOfTickMarkAtIndex:(long long)arg1;
- (double)tickMarkValueAtIndex:(long long)arg1;

@end

@interface NSLevelIndicatorCell : NSActionCell
{
    double _value;
    double _minValue;
    double _maxValue;
    double _warningValue;
    double _criticalValue;
    int _numberOfTickMarks;
    int _numberOfMajorTickMarks;
    struct {
        unsigned int indicatorStyle:4;
        unsigned int tickMarkPosition:1;
        unsigned int selectable:1;
        unsigned int reserved:26;
    } _liFlags;
    struct CGRect _cellFrame;
    int _reserved1;
    int _reserved2;
    int _reserved3;
    int _reserved4;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithLevelIndicatorStyle:(unsigned long long)arg1;
- (unsigned long long)levelIndicatorStyle;
- (void)setLevelIndicatorStyle:(unsigned long long)arg1;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (double)warningValue;
- (void)setWarningValue:(double)arg1;
- (double)criticalValue;
- (void)setCriticalValue:(double)arg1;
- (void)setTickMarkPosition:(unsigned long long)arg1;
- (unsigned long long)tickMarkPosition;
- (void)setNumberOfTickMarks:(long long)arg1;
- (long long)numberOfTickMarks;
- (void)setNumberOfMajorTickMarks:(long long)arg1;
- (long long)numberOfMajorTickMarks;
- (struct CGRect)rectOfTickMarkAtIndex:(long long)arg1;
- (double)tickMarkValueAtIndex:(long long)arg1;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (int)intValue;
- (void)setIntValue:(int)arg1;
- (long long)integerValue;
- (void)setIntegerValue:(long long)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (double)doubleValue;
- (void)setDoubleValue:(double)arg1;
- (BOOL)isOpaque;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)acceptsFirstResponder;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)keyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setImage:(id)arg1;

@end

@interface NSLineHeightFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)editingStringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;

@end

@interface NSMatrix : NSControl <NSUserInterfaceValidations>
{
    id _target;
    SEL _action;
    SEL _doubleAction;
    SEL _errorAction;
    id _delegate;
    id _selectedCell;
    long long _selectedRow;
    long long _selectedCol;
    long long _numRows;
    long long _numCols;
    struct CGSize _cellSize;
    struct CGSize _intercell;
    id _font;
    id _protoCell;
    id _cellClass;
    NSColor *_backgroundColor;
    id _private;
    NSMutableArray *_cells;
    struct __MFlags {
        unsigned int reservedMatrix:4;
        unsigned int drawingContextMenuHighlightOnAllSelectedRows:1;
        unsigned int drawingContextMenuHighlight:1;
        unsigned int browserOptimizationsEnabled:1;
        unsigned int needsRedrawBeforeFirstLiveResizeCache:1;
        unsigned int tmpAllowNonVisibleCellsToBecomeFirstResponder:1;
        unsigned int subclassIsSafeForLiveResize:1;
        unsigned int hasCachedSubclassIsSafeForLiveResize:1;
        unsigned int liveResizeImageCacheingEnabled:1;
        unsigned int checkForSimpleTrackingMode:1;
        unsigned int useSimpleTrackingMode:1;
        unsigned int refusesFirstResponder:1;
        unsigned int dontScroll:1;
        unsigned int changingSelectionWithKeyboard:1;
        unsigned int onlySetKeyCell:1;
        unsigned int currentlySelectingCell:1;
        unsigned int allowsIncrementalSearching:1;
        unsigned int tabKeyTraversesCellsExplicitlySet:1;
        unsigned int tabKeyTraversesCells:1;
        unsigned int drawingAncestor:1;
        unsigned int autosizeCells:1;
        unsigned int drawsBackground:1;
        unsigned int drawsCellBackground:1;
        unsigned int selectionByRect:1;
        unsigned int autoscroll:1;
        unsigned int allowEmptySel:1;
        unsigned int listMode:1;
        unsigned int radioMode:1;
        unsigned int highlightMode:1;
    } _mFlags;
}

+ (void)initialize;
+ (id)_dropHighlightColor;
- (void)_allocAndInitPrivateIvars;
- (void)_setFont:(id)arg1 forCell:(id)arg2;
- (void)_setSelectedCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_setSelectedCell:(id)arg1;
- (void)_maintainCell;
- (id)_initialize:(long long)arg1:(long long)arg2:(long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 mode:(unsigned long long)arg2 prototype:(id)arg3 numberOfRows:(long long)arg4 numberOfColumns:(long long)arg5;
- (id)initWithFrame:(struct CGRect)arg1 mode:(unsigned long long)arg2 cellClass:(Class)arg3 numberOfRows:(long long)arg4 numberOfColumns:(long long)arg5;
- (void)dealloc;
- (void)finalize;
- (void)setCellClass:(Class)arg1;
- (Class)cellClass;
- (id)prototype;
- (void)setPrototype:(id)arg1;
- (BOOL)_containedInSingleColumnClipView;
- (id)makeCellAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)setMode:(unsigned long long)arg1;
- (unsigned long long)mode;
- (id)allowEmptySel:(BOOL)arg1;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)sendAction:(SEL)arg1 to:(id)arg2 forAllCells:(BOOL)arg3;
- (id)cells;
- (void)sortUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)sortUsingSelector:(SEL)arg1;
- (id)selectedCell;
- (id)selectedCells;
- (long long)selectedRow;
- (long long)selectedColumn;
- (BOOL)_clearSelectedCell;
- (void)deselectSelectedCell;
- (void)deselectAllCells;
- (void)selectCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)_selectAllNoRecurse:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectCell:(id)arg1;
- (BOOL)selectCellWithTag:(long long)arg1;
- (void)setSelectionByRect:(BOOL)arg1;
- (BOOL)isSelectionByRect;
- (struct CGSize)cellSize;
- (void)setCellSize:(struct CGSize)arg1;
- (struct CGSize)intercellSpacing;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (void)setEnabled:(BOOL)arg1;
- (void)setScrollable:(BOOL)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setCellBackgroundColor:(id)arg1;
- (id)cellBackgroundColor;
- (void)setDrawsCellBackground:(BOOL)arg1;
- (BOOL)drawsCellBackground;
- (void)setState:(long long)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)getNumberOfRows:(long long *)arg1 columns:(long long *)arg2;
- (long long)numberOfRows;
- (long long)numberOfColumns;
- (id)cellAtRow:(long long)arg1 column:(long long)arg2;
- (struct CGRect)cellFrameAtRow:(long long)arg1 column:(long long)arg2;
- (id)_getDrawingRow:(long long *)arg1 andCol:(long long *)arg2;
- (BOOL)_getRow:(long long *)arg1 andCol:(long long *)arg2 ofCell:(id)arg3 atRect:(const struct CGRect *)arg4;
- (BOOL)getRow:(long long *)arg1 column:(long long *)arg2 ofCell:(id)arg3;
- (BOOL)getRow:(long long *)arg1 column:(long long *)arg2 forPoint:(struct CGPoint)arg3;
- (void)_getRow:(long long *)arg1 column:(long long *)arg2 nearPoint:(struct CGPoint)arg3;
- (void)renewRows:(long long)arg1 columns:(long long)arg2;
- (void)putCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)addRow;
- (void)addRowWithCells:(id)arg1;
- (void)insertRow:(long long)arg1;
- (void)_needsDisplayfromRow:(long long)arg1;
- (void)insertRow:(long long)arg1 withCells:(id)arg2;
- (void)removeRow:(long long)arg1;
- (void)addColumn;
- (void)addColumnWithCells:(id)arg1;
- (void)insertColumn:(long long)arg1;
- (void)_needsDisplayfromColumn:(long long)arg1;
- (void)insertColumn:(long long)arg1 withCells:(id)arg2;
- (void)removeColumn:(long long)arg1;
- (id)cellWithTag:(long long)arg1;
- (void)setTag:(long long)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (id)target;
- (void)setTarget:(id)arg1;
- (void)setTarget:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (void)setAction:(SEL)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setTag:(long long)arg1 target:(id)arg2 action:(SEL)arg3 atRow:(long long)arg4 column:(long long)arg5;
- (void)setAutosizesCells:(BOOL)arg1;
- (BOOL)autosizesCells;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)viewDidEndLiveResize;
- (void)_computeAllRevealovers;
- (void)_recursiveWindowDidEnableToolTipCreationAndDisplay;
- (void)resetCursorRects;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)sizeToCells;
- (void)sizeToFit;
- (void)setValidateSize:(BOOL)arg1;
- (void)calcSize;
- (void)drawCell:(id)arg1;
- (void)_setNeedsDisplayInRow:(long long)arg1 column:(long long)arg2;
- (void)_getVisibleRowRange:(struct _NSRange *)arg1 columnRange:(struct _NSRange *)arg2;
- (void)_setNeedsDisplayForSelectedCells;
- (void)updateCell:(id)arg1;
- (void)_updateCellImage:(id)arg1;
- (void)updateCellInside:(id)arg1;
- (void)drawCellInside:(id)arg1;
- (void)_drawCellAt:(long long)arg1 col:(long long)arg2 insideOnly:(BOOL)arg3;
- (void)drawCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)_highlightCell:(BOOL)arg1 atRow:(long long)arg2 column:(long long)arg3 andDraw:(BOOL)arg4;
- (void)highlightCell:(BOOL)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)updateTrackingAreas;
- (void)_setMouseTrackingForCell:(id)arg1;
- (void)_clearMouseTrackingForCell:(id)arg1;
- (void)_removeAllCellMouseTracking;
- (long long)_firstSelectableRow;
- (BOOL)_selectFirstEnabledCell;
- (void)_setNeedsRedrawBeforeFirstLiveResizeCache:(BOOL)arg1;
- (BOOL)_needsRedrawBeforeFirstLiveResizeCache;
- (void)_setLiveResizeImageCacheingEnabled:(BOOL)arg1;
- (BOOL)_liveResizeImageCacheingEnabled;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct CGRect)arg1;
- (void)_liveResizeHighlightSelectionInClipRect:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 liveResizeFill:(struct CGRect)arg2:(struct CGRect)arg3:(struct CGRect)arg4:(struct CGRect)arg5 cacheCoveredArea:(struct CGRect)arg6;
- (BOOL)_needsRedrawForMovement;
- (void)_propagateDownNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_drawCellAtRow:(long long)arg1 column:(long long)arg2 inFrame:(struct CGRect)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_shouldDrawContextMenuHighlightForRow:(long long)arg1 column:(long long)arg2;
- (void)drawContextMenuHighlightForCellIndexes:(id)arg1;
- (void)_toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)arg1 adding:(BOOL)arg2;
- (void)setAutoscroll:(BOOL)arg1;
- (BOOL)isAutoscroll;
- (id)_scrollRowToCenter:(long long)arg1;
- (void)scrollCellToVisibleAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_mouseHit:(struct CGPoint)arg1 row:(long long *)arg2 col:(long long *)arg3;
- (BOOL)_loopHit:(struct CGPoint)arg1 row:(long long *)arg2 col:(long long *)arg3;
- (BOOL)_radioHit:(struct CGPoint)arg1 row:(long long *)arg2 col:(long long *)arg3;
- (id)_findFirstOne:(long long *)arg1:(long long *)arg2;
- (void)_deselectAllExcept:(long long)arg1:(long long)arg2 andDraw:(BOOL)arg3;
- (BOOL)_shouldShowFirstResponderAtRow:(long long)arg1 column:(long long)arg2 ignoringWindowKeyState:(BOOL)arg3;
- (BOOL)_shouldShowFirstResponderForCell:(id)arg1;
- (void)setNextText:(id)arg1;
- (void)setPreviousText:(id)arg1;
- (id)nextText;
- (id)previousText;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)tabKeyTraversesCells;
- (void)setTabKeyTraversesCells:(BOOL)arg1;
- (void)performClick:(id)arg1;
- (void)_setKeyCellNeedsDisplay;
- (void)_setKeyCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)_clearKeyCell;
- (void)setKeyCell:(id)arg1;
- (long long)__keyRow;
- (long long)__keyCol;
- (id)keyCell;
- (void)_selectKeyCellAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_selectNextCellKeyStartingAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_makeNextCellKey;
- (void)_makeNextCellOrViewKey;
- (BOOL)_makePreviousCellKey;
- (void)_makePreviousCellOrViewKey;
- (void)_makeLeftCellKey;
- (void)_makeRightCellKey;
- (void)_makeUpCellKey;
- (void)_makeDownCellKey;
- (void)selectNextKeyView:(id)arg1;
- (void)selectPreviousKeyView:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (BOOL)_changingSelectionWithKeyboard;
- (void)_changeSelectionWithEvent:(id)arg1;
- (void)_moveDownWithEvent:(id)arg1;
- (void)_moveUpWithEvent:(id)arg1;
- (void)_moveRightWithEvent:(id)arg1;
- (void)_moveLeftWithEvent:(id)arg1;
- (void)_setKeyCellFromTop;
- (void)_setKeyCellFromBottom;
- (void)_getBrowser:(id *)arg1 browserColumn:(long long *)arg2;
- (id)_browserColumnController;
- (id)_cellForRow:(long long)arg1 browser:(id)arg2 browserColumn:(long long)arg3;
- (long long)_acceptableRowAboveRow:(long long)arg1 minRow:(long long)arg2;
- (long long)_acceptableRowBelowRow:(long long)arg1 maxRow:(long long)arg2;
- (long long)_acceptableRowBelowKeyInVisibleRect:(struct CGRect)arg1;
- (long long)_acceptableRowAboveKeyInVisibleRect:(struct CGRect)arg1;
- (long long)_acceptableRowBelowRow:(long long)arg1 tryAbovePoint:(struct CGPoint)arg2;
- (long long)_acceptableRowAboveRow:(long long)arg1 tryBelowPoint:(struct CGPoint)arg2;
- (void)_keyboardModifyRow:(long long)arg1 column:(long long)arg2 withEvent:(id)arg3;
- (void)_pageDownWithEvent:(id)arg1;
- (void)_pageUpWithEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)_setBrowserOptimizationsEnabled:(BOOL)arg1;
- (BOOL)_browserOptimizationsEnabled;
- (void)_setAllowsNonVisibleCellsToBecomeFirstResponder:(BOOL)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)_hasEditableCell;
- (id)_makeEditable:(id)arg1:(long long)arg2:(long long)arg3:(id)arg4;
- (void)shiftModifySelection:(id)arg1;
- (void)altModifySelection:(id)arg1;
- (BOOL)_performDragFromMouseDown:(id)arg1;
- (void)_mouseDownListmode:(id)arg1;
- (id)_mouseDownNonListmode:(id)arg1;
- (id)_mouseDownSimpleTrackingMode:(id)arg1;
- (void)setSelectionFrom:(long long)arg1 to:(long long)arg2 anchor:(long long)arg3 highlight:(BOOL)arg4;
- (id)_setSelectionRange:(struct _SelectionAnchor *)arg1:(BOOL)arg2;
- (id)_selectRange:(struct _SelectionAnchor *)arg1:(struct _SelectionAnchor *)arg2:(BOOL)arg3:(BOOL)arg4;
- (id)_selectRectRange:(struct _SelectionAnchor *)arg1:(BOOL)arg2;
- (id)_selectRowRange:(struct _SelectionAnchor *)arg1:(BOOL)arg2;
- (id)_firstHighlightedCell;
- (long long)_cellFurthestFrom:(long long)arg1 andCol:(long long)arg2;
- (id)_shiftDown:(id)arg1:(id)arg2:(long long)arg3:(long long)arg4;
- (id)_alternateDown:(id)arg1:(id)arg2:(long long)arg3:(long long)arg4;
- (id)_normalListmodeDown:(id)arg1:(id)arg2:(long long)arg3:(long long)arg4;
- (void)_mouseLoop:(id)arg1:(id)arg2:(long long)arg3:(long long)arg4:(struct _SelectionAnchor *)arg5:(BOOL)arg6;
- (long long)mouseDownFlags;
- (void)mouseDown:(id)arg1;
- (BOOL)_keyEquivalentModifierMask:(unsigned long long)arg1 matchesModifierFlags:(unsigned long long)arg2;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (id)_recursiveFindDefaultButtonCell;
- (id)_setWindow:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (BOOL)sendAction;
- (void)_sendDoubleActionToCellAt:(struct CGPoint)arg1;
- (void)sendDoubleAction;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)_selectTextOfCell:(id)arg1;
- (void)selectText:(id)arg1;
- (id)selectTextAtRow:(long long)arg1 column:(long long)arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setToolTip:(id)arg1 forCell:(id)arg2;
- (id)toolTipForCell:(id)arg1;
- (BOOL)_useSimpleTrackingMode;
- (void)_setUseSimpleTrackingMode:(BOOL)arg1;
- (void)_checkForSimpleTrackingMode;
- (void)_selectCellIfRequired;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_doResetOfCursorRects:(BOOL)arg1 revealovers:(BOOL)arg2;
- (void)helpRequested:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)_menuDidEndTracking:(id)arg1;
- (void)_resetBrowserClickedRowAndColumn;
- (void)_rightMouseUpOrDown:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;

@end

@interface _NSMatrixPrivateIvars : NSObject
{
    long long _keyCol;
    NSColor *_cellBackgroundColor;
    long long _drawingRow;
    long long _drawingCol;
    long long _matrixMDFlags;
    struct __MFlags2 {
        unsigned int RESERVED:32;
    } _mFlags2;
    long long _keyRow;
    long long _getRowColumnOfCellLastFoundIndexCache;
    NSCell *_clickedCell;
}

@end

@interface NSMenu : NSObject <NSCopying, NSCoding>
{
    NSMenu *_supermenu;
    NSString *_title;
    id _itemArray;
    id _extra;
    struct __mFlags {
        unsigned int noAutoenable:1;
        unsigned int inMain:1;
        unsigned int internalPerformAction:1;
        unsigned int condenseSeparators:1;
        unsigned int disabled:1;
        unsigned int ownedByPopUp:1;
        unsigned int delegateNeedsUpdate:1;
        unsigned int delegateUpdateItem:1;
        unsigned int delegateHasKeyEquiv:1;
        unsigned int delegateHasAltKeyEquiv:1;
        unsigned int excludeMarkColumn:1;
        unsigned int isContextualMenu:1;
        unsigned int cmPluginMode:2;
        unsigned int invertedCMPluginTypes:2;
        unsigned int allowsDifferentSelection:1;
        unsigned int RESERVED:15;
    } _mFlags;
    NSString *_name;
}

+ (void)initialize;
+ (void)setMenuZone:(struct _NSZone *)arg1;
+ (struct _NSZone *)menuZone;
+ (id)_menusWithName:(id)arg1;
+ (void)_setContextMenuEvent:(id)arg1;
+ (id)_contextMenuEvent;
+ (void)_setContextMenuTarget:(id)arg1;
+ (id)_contextMenuTarget;
+ (void)popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3;
+ (void)popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3 withFont:(id)arg4;
+ (void)_setAppleMenuEnabled:(BOOL)arg1;
+ (void)setMenuBarVisible:(BOOL)arg1;
+ (BOOL)menuBarVisible;
+ (id)_currentTrackingInfo;
+ (id)_helpMenu;
+ (void)_setHelpMenu:(id)arg1;
+ (void)_saveTornOffMenus;
+ (void)_restoreTornOffMenus;
+ (double)menuBarHeight;
+ (void)_drawOverlayForMenuHelpResultsInRect:(struct CGRect)arg1 withClipRect:(struct CGRect)arg2 flags:(unsigned long long)arg3;
+ (void)_drawHelpResultsSeparatorInRect:(struct CGRect)arg1 withClipRect:(struct CGRect)arg2 flags:(unsigned long long)arg3;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_finishedMakingConnections;
- (id)_trackingInfo;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)_setMenuName:(id)arg1;
- (id)_menuName;
- (void)setSupermenu:(id)arg1;
- (id)supermenu;
- (void)insertItem:(id)arg1 atIndex:(long long)arg2;
- (void)addItem:(id)arg1;
- (id)insertItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3 atIndex:(long long)arg4;
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeItem:(id)arg1;
- (void)removeAllItems;
- (void)setSubmenu:(id)arg1 forItem:(id)arg2;
- (id)itemArray;
- (id)_itemArray;
- (long long)numberOfItems;
- (long long)indexOfItem:(id)arg1;
- (long long)indexOfItemWithTitle:(id)arg1;
- (long long)indexOfItemWithTag:(long long)arg1;
- (long long)indexOfItemWithRepresentedObject:(id)arg1;
- (long long)indexOfItemWithSubmenu:(id)arg1;
- (long long)indexOfItemWithTarget:(id)arg1 andAction:(SEL)arg2;
- (long long)_indexOfItemWithPartialTitle:(id)arg1;
- (id)itemAtIndex:(long long)arg1;
- (id)itemWithTitle:(id)arg1;
- (id)itemWithTag:(long long)arg1;
- (void)_setSuppressAutoenabling:(BOOL)arg1;
- (void)setAutoenablesItems:(BOOL)arg1;
- (BOOL)autoenablesItems;
- (BOOL)_performKeyEquivalentWithDelegate:(id)arg1;
- (void)_performActionWithHighlightingForItemAtIndex:(long long)arg1 sendAccessibilityNotification:(BOOL)arg2;
- (void)_performActionWithHighlightingForItemAtIndex:(long long)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)_enableItem:(id)arg1;
- (void)_enableItems;
- (void)_updateForTracking;
- (void)update;
- (void)setMenuChangedMessagesEnabled:(BOOL)arg1;
- (BOOL)menuChangedMessagesEnabled;
- (void)_menuChanged;
- (void)itemChanged:(id)arg1;
- (void)_postItemChangedNotificationButIgnoringItOurselves:(id)arg1;
- (void)helpRequested:(id)arg1;
- (void)setMenuRepresentation:(id)arg1;
- (id)_menuImpl;
- (id)_menuImplIfExists;
- (unsigned long long)_currentMenuUpdateFlags;
- (unsigned long long)propertiesToUpdate;
- (void)_createExtraIvars;
- (id)menuRepresentation;
- (void)setContextMenuRepresentation:(id)arg1;
- (id)_contextMenuImpl;
- (id)contextMenuRepresentation;
- (void)setTearOffMenuRepresentation:(id)arg1;
- (id)tearOffMenuRepresentation;
- (BOOL)isTornOff;
- (id)attachedMenu;
- (BOOL)isAttached;
- (void)sizeToFit;
- (struct CGPoint)locationForSubmenu:(id)arg1;
- (void)performActionForItemAtIndex:(long long)arg1;
- (void)_internalPerformActionForItemAtIndex:(long long)arg1;
- (id)_insertItemInSortedOrderWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (BOOL)_servicesMenuItemsAreForContextMenu;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3;
- (void)_popUpContextMenu:(id)arg1 withEvent:(id)arg2 forView:(id)arg3 withFont:(id)arg4;
- (BOOL)popUpMenuPositioningItem:(id)arg1 atLocation:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)_isContextualMenu;
- (void)_setIsContextualMenu:(BOOL)arg1;
- (void)_setEnabled:(BOOL)arg1;
- (BOOL)_isEnabled;
- (void)_updateEnabled;
- (void)_popUpMenuWithEvent:(id)arg1 forView:(id)arg2;
- (double)minimumWidth;
- (void)setMinimumWidth:(double)arg1;
- (struct CGSize)size;
- (id)_fontOrNilIfDefault;
- (id)font;
- (void)setFont:(id)arg1;
- (BOOL)_allowsDifferentInitialPopupSelection;
- (void)_setAllowsDifferentInitialPopupSelection:(BOOL)arg1;
- (BOOL)allowsContextMenuPlugIns;
- (void)setAllowsContextMenuPlugIns:(BOOL)arg1;
- (void)_setMenuPluginInsertionMode:(long long)arg1;
- (long long)_menuPluginInsertionMode;
- (void)_setMenuPluginTypes:(unsigned long long)arg1;
- (unsigned long long)_menuPluginTypes;
- (void)_setMenuServicesStartingRequestor:(id)arg1;
- (id)_menuServicesStartingRequestor;
- (void)_setCondensesSeparators:(BOOL)arg1;
- (BOOL)_condensesSeparators;
- (BOOL)_hasPendingCancellationEvent;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (BOOL)_needsPopulate;
- (BOOL)_delegateWantsPopulateCall;
- (BOOL)_delegateWantsOpenCall;
- (BOOL)_delegateWantsCloseCall;
- (BOOL)_delegateWantsHighlightedCall;
- (BOOL)_delegateWantsConfinementRectCall;
- (BOOL)_populateWithEventRef:(void *)arg1;
- (void)_populate:(BOOL)arg1;
- (BOOL)_ownedByPopUp;
- (void)_setOwnedByPopUp:(id)arg1;
- (id)_owningPopUp;
- (id)_menuOwner;
- (void)_setMenuOwner:(id)arg1;
- (long long)_userInterfaceLayoutDirection;
- (void)_recursivelyChangeLayoutDirectionFrom:(long long)arg1 to:(long long)arg2;
- (void)_recursivelyNoteChangedIsInMainMenu:(BOOL)arg1;
- (BOOL)_isInMainMenu;
- (BOOL)_menuOwnerCanUseMenuWhenModal;
- (double)menuBarHeight;
- (void)_setHighlightedItem:(id)arg1 informingDelegate:(BOOL)arg2;
- (id)highlightedItem;
- (void)_cancelTrackingWithFade:(BOOL)arg1;
- (void)cancelTrackingWithoutAnimation;
- (void)cancelTracking;
- (struct CGRect)_confinementRectForScreen:(id)arg1;
- (void)_sendMenuOpeningNotification;
- (void)_sendMenuClosedNotification;
- (void)setShowsStateColumn:(BOOL)arg1;
- (BOOL)showsStateColumn;
- (void)_setContextMenuPluginAEDesc:(const struct AEDesc *)arg1;
- (const struct AEDesc *)_contextMenuPluginAEDesc;
- (void)_limitedViewWantsRedisplayForItem:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_menuItem:(id)arg1 didChangeEnabledStateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeSubmenuFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeTitleFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeAttributedTitleFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeFontFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeActionFrom:(SEL)arg2 to:(SEL)arg3;
- (void)_menuItem:(id)arg1 didChangeStateImageFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeImageFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentVirtualKeyCodeFrom:(unsigned short)arg2 to:(unsigned short)arg3;
- (void)_menuItem:(id)arg1 didChangeKeyEquivalentModifierMaskFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)_menuItem:(id)arg1 didChangeAlternateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeNextItemIsAlternateFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeIndentFrom:(long long)arg2 to:(long long)arg3;
- (void)_menuItem:(id)arg1 didChangeTooltipFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeCustomViewFrom:(id)arg2 to:(id)arg3;
- (void)_menuItem:(id)arg1 didChangeCustomViewHandlesEventsFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeHiddenFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeSeparatorStatusFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuItem:(id)arg1 didChangeAccessibilityOverriddenAttribute:(id)arg2 from:(id)arg3 to:(id)arg4;
- (void)_menuItem:(id)arg1 didChangeRespectsKeyEquivalentWhileHiddenFrom:(BOOL)arg2 to:(BOOL)arg3;
- (void)_menuDidChangeAccessibilityOverriddenAttribute:(id)arg1 from:(id)arg2 to:(id)arg3;

@end

@interface _NSMenuImpl : NSObject
{
    id _impl;
    id _delegate;
    id _menuOwner;
    NSFont *_font;
    id _startingRequestor;
    double _minimumWidth;
    void *_contextMenuPluginAEDesc;
}

- (void)dealloc;

@end

@interface NSMenuItem : NSObject <NSCopying, NSCoding, NSValidatedUserInterfaceItem>
{
    NSMenu *_menu;
    NSString *_title;
    NSString *_keyEquivalent;
    unsigned long long _keyEquivalentModifierMask;
    long long _userKEGenerationCount;
    long long _state;
    NSImage *_image;
    NSMenu *_submenu;
    NSString *_uiid;
    id _repObject;
    id _target;
    SEL _action;
    long long _tag;
    id _extraData;
    struct __miFlags {
        unsigned int disabled:1;
        unsigned int isSeparator:1;
        unsigned int hidden:1;
        unsigned int alternate:1;
        unsigned int indent:4;
        unsigned int keShareMode:3;
        unsigned int RESERVED1:13;
        unsigned int highlighted:1;
        unsigned int limitedView:1;
        unsigned int nextItemIsAlternate:1;
        unsigned int blockKE:1;
        unsigned int ignoredForAccessibility:1;
        unsigned int hiddenActiveKE:1;
        unsigned int noRepeatKEs:1;
        unsigned int RESERVED:1;
    } _miFlags;
}

+ (id)_defaultWindowMenuStateImageMinimizedWindow;
+ (id)_defaultWindowMenuStateImageKeyWindow;
+ (id)_defaultWindowMenuStateImageDirtyWindow;
+ (void)initialize;
+ (void)setUsesUserKeyEquivalents:(BOOL)arg1;
+ (BOOL)usesUserKeyEquivalents;
+ (id)separatorItem;
+ (void)_updateUserKEsAfterActivation:(id)arg1;
+ (void)_updateUserKEsAfterActivationAndDelay:(id)arg1;
+ (id)_userKeyEquivalentForTitle:(id)arg1;
+ (unsigned long long)_userKeyEquivalentModifierMaskForTitle:(id)arg1;
+ (struct __CFString *)_menuItemViewerHIViewClassName;
- (id)initWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3;
- (id)init;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setMenu:(id)arg1;
- (id)_superitem;
- (id)parentItem;
- (id)menu;
- (BOOL)hasSubmenu;
- (void)setSubmenu:(id)arg1;
- (void)_setSubmenu:(id)arg1;
- (id)submenu;
- (void)_setHidden:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (BOOL)_isHidden;
- (BOOL)isHidden;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (void)_configureAsSeparatorItem;
- (void)setTitle:(id)arg1;
- (id)_titleForUserKeyEquivalents;
- (id)title;
- (void)setAttributedTitle:(id)arg1;
- (id)attributedTitle;
- (id)font;
- (void)setFont:(id)arg1;
- (struct CGSize)_computeAttributedTitleSizeForTitle:(id)arg1;
- (struct CGSize)_cachedAttributedTitleSize;
- (BOOL)isSeparatorItem;
- (void)setKeyEquivalent:(id)arg1;
- (void)_cacheUserKeyEquivalentInfo;
- (id)keyEquivalent;
- (void)setKeyEquivalentModifierMask:(unsigned long long)arg1;
- (unsigned long long)keyEquivalentModifierMask;
- (unsigned long long)_applicableKeyEquivalentModifierMask;
- (id)_applicableImage;
- (BOOL)_shouldForceShiftModifierWithKeyEquivalent:(id)arg1;
- (void)_setKeyEquivalentVirtualKeyCode:(unsigned short)arg1;
- (unsigned short)_keyEquivalentVirtualKeyCode;
- (void)_corePerformAction;
- (void)_internalPerformActionThroughMenuIfPossible;
- (id)userKeyEquivalent;
- (unsigned long long)userKeyEquivalentModifierMask;
- (void)_recacheUserKeyEquivalentIfNecessary;
- (id)_rawKeyEquivalent;
- (unsigned long long)_rawKeyEquivalentModifierMask;
- (id)_desiredKeyEquivalent;
- (unsigned long long)_desiredKeyEquivalentModifierMask;
- (void)_recursivelyUpdateKeyEquivalents;
- (void)_setBlockKE:(BOOL)arg1;
- (BOOL)_blockKE;
- (unsigned long long)_keyEquivalentPriority;
- (BOOL)_requiresKERegistration;
- (void)setKeyEquivalentSharingMode:(long long)arg1;
- (long long)keyEquivalentSharingMode;
- (BOOL)_canShareKeyEquivalentWithItem:(id)arg1;
- (void)_setMenuItemBelongsToContextualMenu:(BOOL)arg1;
- (void)setMnemonicLocation:(unsigned long long)arg1;
- (unsigned long long)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (struct OpaqueIconRef *)_iconRef;
- (void)_setIconRef:(struct OpaqueIconRef *)arg1;
- (id)_imageForState:(long long)arg1;
- (long long)_currentStateImageEnumeration;
- (void)setState:(long long)arg1;
- (long long)state;
- (void)setOnStateImage:(id)arg1;
- (id)onStateImage;
- (void)setOffStateImage:(id)arg1;
- (id)offStateImage;
- (void)setMixedStateImage:(id)arg1;
- (id)mixedStateImage;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)_setHighlighted:(BOOL)arg1;
- (BOOL)_isHighlightedIgnoringState;
- (BOOL)isHighlighted;
- (BOOL)_isEnabled;
- (void)setAlternate:(BOOL)arg1;
- (BOOL)isAlternate;
- (BOOL)_nextItemIsAlternate;
- (void)_setNextItemIsAlternate:(BOOL)arg1;
- (void)setIndentationLevel:(long long)arg1;
- (long long)indentationLevel;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setTag:(long long)arg1;
- (long long)tag;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setToolTip:(id)arg1;
- (id)toolTip;
- (BOOL)_isHelpMenu;
- (BOOL)_isHelpMenuAppKitOnly;
- (void)_setChangedFlags:(long long)arg1;
- (long long)_changedFlags;
- (void)setView:(id)arg1;
- (void)_setViewNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_setViewHandlesEvents:(BOOL)arg1;
- (BOOL)_viewHandlesEvents;
- (id)view;
- (id)_menuItemViewer;
- (id)_startingWindowForSendAction:(SEL)arg1;
- (BOOL)_ignoredForAccessibility;
- (void)_setIgnoredForAccessibility:(BOOL)arg1;
- (void)_setRespectsKeyEquivalentWhileHidden:(BOOL)arg1;
- (BOOL)_respectsKeyEquivalentWhileHidden;
- (void)_setRespectsKeyEquivalentForRepeatKeys:(BOOL)arg1;
- (BOOL)_respectsKeyEquivalentForRepeatKeys;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;

@end

@interface NSExtraMIData : NSObject
{
    NSString *userKE;
    unsigned long long userKEMask;
    NSAttributedString *attributedTitle;
    NSString *tooltip;
    _NSBindingAdaptor *bindingAdaptor;
    NSMenuItemViewer *menuItemViewer;
    NSImage *onStateImage;
    NSImage *offStateImage;
    NSImage *mixedStateImage;
    NSFont *font;
    struct CGSize cachedAttributedTitleSize;
    unsigned short virtualKeyCode;
}

- (id)init;

@end

@interface NSMenuItemCell : NSButtonCell
{
    id _extraData;
    struct CGSize _stateImageSize;
    struct CGSize _imageSize;
    struct CGSize _titleSize;
    struct CGSize _keyEquivalentSize;
    struct CGSize _size;
    struct __micFlags {
        unsigned int needsSizing:1;
        unsigned int reserved:1;
        unsigned int needsDisplay:1;
        unsigned int keyEquivGlyphWidth:16;
        unsigned int uniqueAgainstMain:1;
        unsigned int RESERVED:12;
    } _micFlags;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
+ (id)_dimmedImage:(id)arg1;
+ (id)_colorizedImage:(id)arg1 color:(id)arg2;
+ (void)_systemColorsChanged:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)init;
- (id)initImageCell:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_sharedTextCell;
- (void)setMenuView:(id)arg1;
- (id)menuView;
- (void)setMenuItem:(id)arg1;
- (id)menuItem;
- (id)_specialControlView;
- (id)_keyEquivalentUniquerCreatingIfNecessary:(BOOL)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (id)keyEquivalentAttributedString;
- (void)setNeedsSizing:(BOOL)arg1;
- (BOOL)needsSizing;
- (void)setNeedsDisplay:(BOOL)arg1;
- (BOOL)needsDisplay;
- (BOOL)_obeysHiddenBit;
- (struct CGSize)_borderInset;
- (void)calcSize;
- (double)stateImageWidth;
- (double)imageWidth;
- (double)titleWidth;
- (double)keyEquivalentWidth;
- (short)_keyEquivalentGlyphWidth;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect *)_rectsForBounds:(struct CGRect)arg1;
- (void)_resetMeasuredCell;
- (struct CGRect)stateImageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)keyEquivalentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_separatorRectForCellFrame:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
- (void)drawSeparatorItemWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawStateImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct _NSRange)_characterRangeForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawKeyEquivalentWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isOpaque;
- (id)_highlightColor;
- (id)_highlightTextColor;
- (id)title;
- (unsigned long long)mnemonicLocation;
- (long long)tag;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (id)image;
- (long long)state;
- (void)setFont:(id)arg1;
- (void)setBordered:(BOOL)arg1;

@end

@interface NSExtraMICData : NSObject
{
    NSMenuItem *item;
    id menuView;
    NSAttributedString *keAttrStr;
    NSMenuKEUniquer *keUniquer;
}

@end

@interface NSMenuTemplate : NSObject <NSCoding>
{
    NSString *title;
    struct CGPoint location;
    id view;
    NSString *menuClassName;
    id supermenu;
    id realObject;
    id extension;
    BOOL isWindowsMenu;
    BOOL isRequestMenu;
    BOOL isFontMenu;
    BOOL interfaceStyle;
    char *cMenuClassName;
    BOOL disabled;
    id popupCell;
}

+ (void)initialize;
- (void)_setMenuClassName:(id)arg1;
- (id)menuClassName;
- (id)supermenu;
- (id)itemMatrix;
- (void)_setTitle:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setSupermenu:(id)arg1;
- (void)_setPullsDown:(BOOL)arg1;
- (BOOL)_pullsDown;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_setEnabled:(BOOL)arg1;
- (BOOL)_isEnabled;
- (void)_setOwnedByPopUp:(id)arg1;
- (long long)numberOfItems;

@end

@interface NSKeyboardShortcut : NSObject <NSCopying>
{
    NSString *_keyEquivalent;
    unsigned long long _modifierMask;
}

+ (id)shortcutWithKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
+ (id)shortcutWithPreferencesEncoding:(id)arg1;
+ (id)emptyShortcut;
- (id)initWithKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2;
- (BOOL)isEmpty;
@property(readonly) NSString *localizedDisplayName;
@property(readonly) NSString *localizedKeyEquivalentDisplayName;
- (BOOL)_keyEquivalentIsUpperCase;
@property(readonly) NSString *localizedModifierMaskDisplayName;
@property(readonly) NSString *preferencesEncoding;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly) unsigned long long modifierMask; // @synthesize modifierMask=_modifierMask;
@property(readonly) NSString *keyEquivalent; // @synthesize keyEquivalent=_keyEquivalent;

@end

@interface NSMouseTracker : NSObject
{
    struct CGPoint _initialPoint;
    struct CGPoint _previousPoint;
    struct CGPoint _currentPoint;
    NSEvent *_initialEvent;
    NSEvent *_previousEvent;
    NSEvent *_currentEvent;
    NSView *_view;
    id _delegate;
    double _delay;
    double _interval;
    int _eventMask;
    unsigned long long _trackingConstraint;
    unsigned int _trackingConstraintKeyMask;
    struct __NSMouseTrackerDelegateRespondTo {
        unsigned int startTracking:1;
        unsigned int continueTracking:1;
        unsigned int stopTracking:1;
        unsigned int constrainPoint:1;
        unsigned int handlePeriodicEvents:1;
        unsigned int reserved:27;
    } _delegateRespondTo;
    void *_NSMouseTrackerReserved1;
    void *_NSMouseTrackerReserved2;
    void *_NSMouseTrackerReserved3;
}

- (id)init;
- (struct CGPoint)_getLocalPoint:(id)arg1;
- (struct CGPoint)_constrainPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (double)interval;
- (double)delay;
- (void)setPeriodicDelay:(double)arg1 interval:(double)arg2;
- (void)_setDelegate:(id)arg1;
- (void)setEventMask:(long long)arg1;
- (long long)eventMask;
- (void)_releaseEvents;
- (id)nextEventForWindow:(id)arg1;
- (BOOL)trackWithEvent:(id)arg1 inView:(id)arg2 withDelegate:(id)arg3;
- (BOOL)startTrackingWithEvent:(id)arg1 inView:(id)arg2 withDelegate:(id)arg3;
- (BOOL)continueTrackingWithEvent:(id)arg1;
- (BOOL)stopTrackingWithEvent:(id)arg1;
- (void)setTrackingConstraint:(unsigned long long)arg1;
- (unsigned long long)trackingConstraint;
- (void)setTrackingConstraintKeyMask:(unsigned long long)arg1;
- (unsigned long long)trackingConstraintKeyMask;
- (id)view;
- (id)delegate;
- (struct CGPoint)currentPoint;
- (struct CGPoint)previousPoint;
- (struct CGPoint)initialPoint;
- (id)initialEvent;
- (id)previousEvent;

@end

@interface NSMovie : NSObject <NSCoding>
{
    void *_movie;
    NSURL *_url;
    struct {
        unsigned int dispose:1;
        unsigned int reserved:31;
    } _movieFlags;
    long long _reserved1;
    long long _reserved2;
}

+ (void)_loadQTKit;
+ (Class)_QTMovieClass;
+ (void)initialize;
- (id)initWithMovie:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)QTMovie;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSNavBrowserCell : NSBrowserCell
{
    NSView *_controlView;
    NSNavNode *_node;
    struct __NBCFlags {
        unsigned int isDirectory:1;
        unsigned int isFauxDisabled:1;
        unsigned int isTrackingMouse:1;
        unsigned int _reserved:29;
    } _nbcFlags;
    NSButtonCell *_ejectButtonCell;
}

+ (struct CGSize)iconSize;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)_effectiveFocusRingType;
- (long long)_typesetterBehavior;
- (void)dealloc;
- (id)node;
- (void)setDisplayState:(int)arg1;
- (void)setNode:(id)arg1 isDirectory:(BOOL)arg2 displayState:(int)arg3;
- (void)setControlView:(id)arg1;
- (id)controlView;
- (BOOL)isDirectory;
- (BOOL)isFauxDisabled;
- (id)_currentBranchImageWithView:(id)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)clickableContentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_branchImageRectForBounds:(struct CGRect)arg1;
- (void)_drawHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityFilenameAttribute;
- (BOOL)accessibilityIsFilenameAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
- (id)_imageForEjectType:(int)arg1;
- (struct CGRect)ejectButtonFrameForCellFrame:(struct CGRect)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setShowEjectButton:(BOOL)arg1;
- (id)ejectButtonCell;
- (void)addTrackingAreasForView:(id)arg1 inFrame:(struct CGRect)arg2 withUserInfo:(id)arg3 mouseLocation:(struct CGPoint)arg4;
- (void)_invalidateEjectButtonCellWithEvent:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;

@end

@interface NSNavBrowserDelegate : NSNavFileListDelegate <NSBrowserDelegate>
{
    NSBrowser *_browser;
    NSNavNode *_lastSelectedNode;
    NSNavPreviewController *_previewController;
    unsigned int _reloadingInvalidAlias:1;
    unsigned int _reserved:31;
    NSMutableDictionary *_aliasNodesToTargetNodes;
}

- (void)dealloc;
- (void)windowOrderedOut;
@property(retain, nonatomic) NSBrowser *browser; // @dynamic browser;
- (void)configureForActiveState;
- (void)_clearAliasToTargetNodeMapTable;
- (void)_removeAliasNode:(id)arg1;
- (void)_addAliasNode:(id)arg1 toTargetNode:(id)arg2;
- (void)configureForInactiveState;
- (id)rootItemForBrowser:(id)arg1;
- (id)_cachedChildrenForNode:(id)arg1 logonOK:(BOOL)arg2;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (void)_reloadChildNode:(id)arg1 parent:(id)arg2 includeChildColumn:(BOOL)arg3 updateTrackignAreas:(BOOL)arg4;
- (void)_reloadChildNode:(id)arg1 parent:(id)arg2;
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (void)reloadChildrenForNode:(id)arg1;
- (BOOL)_setSelectedNodes:(id)arg1;
- (void)reloadDisplayState;
- (id)currentDirectoryNode;
- (id)currentBrowsingNodePath;
- (id)_indexPathForNode:(id)arg1;
- (void)_setCurrentDirectoryNode:(id)arg1 pathToNode:(id)arg2;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (void)handleUserGoUpDirectory;
- (id)_selectedNodesWithEntireSelection:(BOOL)arg1;
- (BOOL)_lastSelectedNodeIsDirectory;
- (void)_browserAction:(id)arg1;
- (BOOL)_shouldShowPreviewForNode:(id)arg1;
- (id)browser:(id)arg1 previewViewControllerForLeafItem:(id)arg2;
- (id)browser:(id)arg1 headerViewControllerForItem:(id)arg2;
- (id)currentTypeSelectSearchString;
- (BOOL)_browser:(id)arg1 keyEvent:(id)arg2 inColumn:(long long)arg3;
- (BOOL)_browser:(id)arg1 performKeyEquivalent:(id)arg2 inColumn:(long long)arg3;
- (id)visualRootNode;
- (BOOL)canGoIntoSelectedDirectory;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (id)selectedNodesIncludingDirectories;
- (id)selectedNodes;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)browser:(id)arg1 writeRowsWithIndexes:(id)arg2 inColumn:(long long)arg3 toPasteboard:(id)arg4;
- (BOOL)worksWhenModal;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)navBrowser:(id)arg1 didClickOnDisabledRow:(long long)arg2 column:(long long)arg3;
- (long long)navBrowser:(id)arg1 labelColorIndexForRow:(long long)arg2 column:(long long)arg3;
- (BOOL)navBrowser:(id)arg1 isEnabledRow:(long long)arg2 column:(long long)arg3;
- (BOOL)_changeRootNodeBasedOnSelectedNodes:(id)arg1;
- (void)_browserDoubleAction:(id)arg1;
- (void)browser:(id)arg1 didChangeLastColumn:(long long)arg2 toColumn:(long long)arg3;
- (long long)browser:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)browser:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)browser:(id)arg1 isLeafItem:(id)arg2;
- (id)browser:(id)arg1 objectValueForItem:(id)arg2;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (void)_ejectButtonClicked:(id)arg1;
- (struct CGRect)_frameOfCellInBrowserAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)browser:(id)arg1 shouldTrackCell:(id)arg2 atRow:(long long)arg3 inColumn:(long long)arg4;
- (BOOL)_userClickedInEjectButtonFrame;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (long long)browser:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 inColumn:(long long)arg4 forString:(id)arg5;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (struct CGRect)sourceFrameOnScreenForNavNode:(id)arg1;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (id)view;

@end

@interface NSNavDataSource : NSObject
{
    NSNavView *_navView;
    NSNavNode *_rootNode;
    Class _navNodeClass;
    int _fileListMode;
    int _lastNonNaughtFileListMode;
    NSArray *_enabledFileTypes;
    NSArray *_fauxFilePackageTypes;
    NSString *_fileListOrderedByFileProperty;
    unsigned int _resolvesAliases:1;
    unsigned int _showsHiddenFiles:1;
    unsigned int _showsPreviews:1;
    unsigned int _canChooseFiles:1;
    unsigned int _canChooseDirectories:1;
    unsigned int _canClickDisabledFiles:1;
    unsigned int _allowsMultipleSelection:1;
    unsigned int _treatsFilePackagesAsDirectories:1;
    unsigned int _treatsDirectoryAliasesAsDirectories:1;
    unsigned int _calculatesAllSizes:1;
    unsigned int _isFileListOrderedDescending:1;
    unsigned int _isFileListOrderedCaseSensitive:1;
    unsigned int _allowsExpandingMultipleDirectories:1;
    unsigned int _isReloading:1;
    unsigned int _allowSearchingForFolders:1;
    unsigned int _padding:17;
    NSMutableDictionary *_sortedChildren;
    NSMutableArray *_history;
    long long _currentHistoryPosition;
    long long _makeHistoryDisabledCount;
    NSMutableArray *_fileDelegates;
    int _lastFileListMode;
    NSMutableArray *_expandedNodes;
    NSMutableDictionary *_replacedNodes;
}

@property int lastFileListMode;
- (void)_fetchOrderedByFileProperty:(id *)arg1 orderedAscending:(char *)arg2;
- (void)_storeOrderedByFileProperty:(id)arg1 orderedAscending:(BOOL)arg2;
- (id)initWithNavView:(id)arg1;
- (void)windowOrderedOut;
- (void)dealloc;
- (void)finalize;
- (void)_setNavView:(id)arg1;
- (id)navView;
- (id)browser;
- (id)outline;
- (id)iconView;
- (Class)navNodeClass;
- (void)setNavNodeClass:(Class)arg1;
@property(retain, nonatomic) NSNavNode *rootNode; // @dynamic rootNode;
- (BOOL)acceptsRootNodeOrWarn:(id)arg1 usingParent:(BOOL)arg2;
- (void)setRootNode:(id)arg1 makeHistory:(BOOL)arg2 notify:(BOOL)arg3;
@property(nonatomic) BOOL allowSearchingForFolders; // @dynamic allowSearchingForFolders;
- (void)setRootPath:(id)arg1;
- (void)reloadRootNode;
- (void)_resortCachedChildrenForNode:(id)arg1 withSortDescriptors:(id)arg2;
- (void)_resortCachedChildren;
- (id)visualRootNode;
- (void)_loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (id)currentDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)arg1 makeHistory:(BOOL)arg2 notify:(BOOL)arg3;
- (void)setCurrentDirectoryNode:(id)arg1;
- (id)currentBrowsingNodePath;
- (void)_setCurrentBrowsingNodePath:(id)arg1 makeHistory:(BOOL)arg2 notify:(BOOL)arg3;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (id)showNodeInCurrentDirectoryWithFilename:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (int)fileListMode;
- (void)clearFileListMode;
- (void)setFileListMode:(int)arg1;
- (id)enabledFileTypes;
- (void)setEnabledFileTypes:(id)arg1;
- (BOOL)_isEnabledItemWithExtensionProvider:(id)arg1 HFSTypeProvider:(void)arg2 UTIProvider:(id)arg3;
- (BOOL)_delegateShouldEnableURL:(id)arg1;
- (BOOL)_isNodeFileTypeEnabled:(id)arg1;
- (BOOL)_delegateShouldEnableNode:(id)arg1;
- (BOOL)_nonDelegateCanChooseNode:(id)arg1;
- (BOOL)canChooseNode:(id)arg1;
- (BOOL)_isDirectoryURL:(id)arg1;
- (BOOL)_isURLFileTypeEnabled:(id)arg1;
- (BOOL)_nonDelegateCanChooseURL:(id)arg1;
- (BOOL)canChooseFileAtURL:(id)arg1;
- (id)fauxFilePackageTypes;
- (void)setFauxFilePackageTypes:(id)arg1;
- (BOOL)_isFauxFilePackageNode:(id)arg1;
- (id)fileListOrderedByFileProperty;
- (void)setFileListOrderedByFileProperty:(id)arg1;
- (BOOL)isFileListOrderedAscending;
- (void)setIsFileListOrderedAscending:(BOOL)arg1;
- (BOOL)isFileListOrderedCaseSensitive;
- (void)setIsFileListOrderedCaseSensitive:(BOOL)arg1;
- (void)setFileListOrderedByFileProperty:(id)arg1 ascending:(BOOL)arg2;
- (void)setFileListOrderedByFileProperty:(id)arg1 ascending:(BOOL)arg2 caseSensitive:(BOOL)arg3;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)arg1;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)arg1;
- (BOOL)showsPreviews;
- (void)setShowsPreviews:(BOOL)arg1;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)arg1;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)arg1;
- (BOOL)canClickDisabledFiles;
- (void)setCanClickDisabledFiles:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)arg1;
- (BOOL)treatsDirectoryAliasesAsDirectories;
- (void)setTreatsDirectoryAliasesAsDirectories:(BOOL)arg1;
- (BOOL)calculatesAllSizes;
- (void)setCalculatesAllSizes:(BOOL)arg1;
- (BOOL)allowsExpandingMultipleDirectories;
- (void)setAllowsExpandingMultipleDirectories:(BOOL)arg1;
- (void)_reloadChildrenForNode:(id)arg1;
- (void)_prepareForReloadChildrenForNode:(id)arg1;
- (void)_concludeReloadChildrenForNode:(id)arg1;
- (id)canBrowseNode:(id)arg1 allowInteraction:(BOOL)arg2;
- (BOOL)isReloading;
- (BOOL)shouldShowPreviewColumn:(id)arg1;
- (BOOL)isDirectoryNode:(id)arg1;
- (int)displayStateForNode:(id)arg1;
- (BOOL)isFauxDisabledNode:(id)arg1;
- (BOOL)isSizeDisplayedForNode:(id)arg1;
- (void)_setPropertiesForDelegate:(id)arg1;
- (Class)delegateClassForMode:(int)arg1;
- (Class)NSNavOutlineDelegateClass;
- (Class)NSNavIconViewDelegateClass;
- (id)_createBrowserDelegate;
- (id)_createOutlineDelegate;
- (id)_createNaughtDelegate;
- (id)_createIconViewDelegate;
- (id)_createMediaBrowserDelegate;
- (id)activeFileListDelegate;
- (void)handleDelegateChangedSelection;
- (void)handleDelegateConfirmedSelection;
- (void)handleDelegateChangedCurrentDirectory;
- (void)handleDelegateClickedFauxDisabledNode:(id)arg1;
- (id)_expandedNodesForObservedNode:(id)arg1;
- (void)_flushCachedChildrenForNode:(id)arg1;
- (id)_cachedChildrenForNode:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)_stopObservingChildrenForNode:(id)arg1;
- (void)_stopObservingAllChildren;
- (id)cachedChildrenForNode:(id)arg1;
- (long long)countOfCachedChildrenForNode:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)willChangeExpandedNodes;
- (void)didChangeExpandedNodes;
- (id)expandedNodes;
- (BOOL)isExpandedNode:(id)arg1;
- (void)addExpandedNode:(id)arg1;
- (void)removeExpandedNode:(id)arg1;
- (void)removeAllExpandedNodes;
- (void)replaceExpandedNode:(id)arg1 withNode:(id)arg2;
- (void)removeExpandedNodesStartingWithIndex:(long long)arg1;
- (void)_makeHistory;
- (void)disableMakeHistory;
- (void)enableMakeHistory;
- (BOOL)isMakeHistoryEnabled;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (void)_goToHistoryState:(id)arg1;
- (void)goBack;
- (void)goForward;
- (void)goUpDirectory;
- (id)currentLocalSearchScopeNode;
- (id)_actualOrderingFilePropertyAscending:(char *)arg1;
- (id)sortDescriptors;
- (id)_sortDescriptors;
- (unsigned long long)_leftmostInsertionIndexForNode:(id)arg1 inOrderedNodes:(id)arg2 withSortDescriptors:(id)arg3;
- (unsigned long long)_leftmostInsertionIndexForNode:(id)arg1 inOrderedNodes:(id)arg2;
- (unsigned long long)_indexOfNode:(id)arg1 inOrderedNodes:(id)arg2;
- (unsigned long long)indexOfNode:(id)arg1 inCachedChildrenForNode:(id)arg2;
- (unsigned long long)indexOfBestMatchForDisplayNamePrefix:(id)arg1 inCachedChildrenForNode:(id)arg2;
- (void)_sortNodes:(id)arg1 withSortDescriptors:(id)arg2;
- (BOOL)_showsNode:(id)arg1;
- (id)_processedChildrenOfNode:(id)arg1;
- (id)_queryHitResultsFilterUTIs;
- (id)_rawChildrenOfNode:(id)arg1;
- (BOOL)_updateNodeList:(id)arg1 byAddingNode:(id)arg2;
- (BOOL)_updateNodeList:(id)arg1 byRemovingNode:(id)arg2 sendPrepareMessageWithParentNode:(id)arg3;
- (BOOL)_updateNodeList:(id)arg1 forChangedProperty:(id)arg2 ofNode:(id)arg3;
- (void)_handleAddedChildNode:(id)arg1 toExpandedNode:(id)arg2;
- (void)_handleRemovedChildNode:(id)arg1 fromExpandedNode:(id)arg2;
- (void)_handleChangedAllChildrenInExpandedNode:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_handleNodePropertyChanged:(id)arg1;
- (void)_debug;
- (Class)previewControllerClass;
- (Class)sharedServerControllerClass;

@end

@interface NSNavHistoryState : NSObject
{
    NSArray *_currentBrowsingNodePath;
    int _fileListMode;
}

- (id)initWithCurrentBrowsingNodePath:(id)arg1 fileListMode:(int)arg2;
- (void)dealloc;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (id)rootNode;
- (id)currentDirectoryNode;
- (id)currentBrowsingNodePath;
- (int)fileListMode;

@end

@interface NSNavExpansionButtonCell : NSButtonCell
{
}

- (void)_navExpansionCommonInit;
- (id)initWithCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;

@end

@interface NSDisclosureButtonCell : NSNavExpansionButtonCell
{
}

@end

@interface NSNavFBENodeTask : NSNavNodeTask
{
    struct OpaqueNodeTask *_nodeTaskRef;
    int _taskStatus;
    id _completionHandler;
}

- (id)initWithNode:(id)arg1 taskRef:(struct OpaqueNodeTask *)arg2 completionHandler:(id)arg3;
- (void)dealloc;
- (void)finalize;
@property int taskStatus; // @synthesize taskStatus=_taskStatus;
- (void)cancel;
@property struct OpaqueNodeTask *nodeTaskRef; // @synthesize nodeTaskRef=_nodeTaskRef;

@end

@interface NSNavFBENetworkNode : NSNavFBENode
{
}

- (BOOL)isVisible;
- (id)parent;
- (BOOL)isEjectable;
- (BOOL)isEjectableOrUnmountable;
- (id)path;

@end

@interface NSNavFBETopLevelNode : NSNavFBENode
{
}

- (id)init;
- (void)dealloc;
- (id)children;
- (id)path;

@end

@interface NSNavFBENode : NSNavNode
{
    struct OpaqueNodeRef *_fbeNode;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)specialNodeOfType:(unsigned int)arg1;
+ (id)_nodeWithFBENode:(struct OpaqueNodeRef *)arg1;
+ (id)topLevelNode;
+ (id)networkNode;
+ (id)copyStandardSidebarNodes;
+ (id)copyStandardSidebarNodeTitles;
+ (id)userHomeNode;
+ (id)iDiskNode;
+ (id)findSidebarNodeForNode:(id)arg1;
+ (id)nodeWithPath:(id)arg1 logonOK:(BOOL)arg2;
+ (id)nodeWithURL:(id)arg1 logonOK:(BOOL)arg2;
+ (id)nodeWithPath:(id)arg1;
+ (id)nodeWithSimpleQueryString:(id)arg1 searchScopes:(id)arg2 sortDescriptors:(id)arg3;
+ (id)nodeWithQueryString:(id)arg1 searchScopes:(id)arg2 title:(id)arg3 sortDescriptors:(id)arg4;
+ (id)nodeWithSavedQueryData:(id)arg1 title:(id)arg2 sortDescriptors:(id)arg3;
- (BOOL)acceptsRootNode;
- (BOOL)_addToSidebarSection:(unsigned int)arg1 atIndex:(long long)arg2;
- (BOOL)addToFavoritesAtIndex:(long long)arg1;
- (BOOL)addToSavedSearchesAtIndex:(long long)arg1;
- (id)_initWithFBENode:(struct OpaqueNodeRef *)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)_sendChildrenChangedWithDictionary:(id)arg1;
- (void)_childrenChanged;
- (void)_addChildNode:(id)arg1;
- (void)_removeChildNode:(id)arg1;
- (id)_childNodeWithFBENode:(struct OpaqueNodeRef *)arg1;
- (id)children;
- (id)childWithName:(id)arg1;
- (void)_handleTargetChangedIsValid:(BOOL)arg1;
- (struct OpaqueEventNotifier *)_createNodeChangeNotifier;
- (struct OpaqueNodeRequest *)_createNodeRequestRef;
- (BOOL)_registerForNotificationOptions:(unsigned int)arg1 forNodeRef:(struct OpaqueNodeRef *)arg2;
- (void)_unregisterForNotificationOptions:(unsigned int)arg1 forNodeRef:(struct OpaqueNodeRef *)arg2;
- (void)_registerForSelfChangeNotifications;
- (void)_unregisterForSelfChangeNotifications;
- (void)registerForDeepChildChangedNotifications;
- (void)unregisterForDeepChildChangedNotifications;
- (struct OpaqueNodeRef *)_childrenParentNodeRef;
- (void)_registerForChildChangeNotifications;
- (void)_unregisterForChildChangeNotifications;
- (void)registerForPropertyChangedNotifications;
- (void)unregisterForPropertyChangedNotifications;
- (id)initWithPath:(id)arg1 logonOK:(BOOL)arg2;
- (id)initWithPath:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct OpaqueNodeRef *)fbeNode;
- (BOOL)isNil;
- (BOOL)isValid;
- (id)description;
- (id)parent;
- (id)parentVolume;
- (id)getNodeAsInfoNode:(BOOL)arg1;
- (id)getNodeAsResolvedNode:(BOOL)arg1 withError:(int *)arg2;
- (id)getNodeAsDeepResolvedNode:(BOOL)arg1;
- (BOOL)_nodeContainsPermission:(unsigned int)arg1;
- (BOOL)canBrowse;
- (BOOL)canBeRead;
- (id)getNodeAsContainerNodeForBrowsing:(BOOL)arg1;
- (void)_clearRegisteredForAttributes;
- (id)previewAttributes;
- (void)setPreviewAttributes:(id)arg1;
- (BOOL)isContainer;
- (id)displayName;
- (id)serverUserName;
- (int)networkConnectionState;
- (BOOL)supportsFileSharing;
- (BOOL)supportsScreenSharing;
- (void)launchScreenSharingApp;
- (void)disconnectShare;
- (void)_connectToRemoveServer;
- (void)connectToSharedServerAs;
- (void)askToUseODS;
- (id)searchScopeDisplayName;
- (id)path;
- (id)URL;
- (id)name;
- (BOOL)isVisible;
- (BOOL)isPackage;
- (BOOL)isAlias;
- (BOOL)isVolume;
- (BOOL)isExtensionHidden;
- (BOOL)isDisconnectedMountPoint;
- (BOOL)isUnauthenticatedMountPoint;
- (BOOL)isEjectable;
- (BOOL)isUnmountable;
- (BOOL)_hasActiveEjectTaskInArray:(id)arg1;
- (BOOL)_ejectOrUnmount:(BOOL)arg1;
- (BOOL)eject;
- (BOOL)unmount;
- (BOOL)ejectWithInteraction:(BOOL)arg1;
- (BOOL)isMountedSharePoint;
- (short)FSVolumeRefNum;
- (id)otherVolumesOnSameDevice;
- (BOOL)isDiskImage;
- (BOOL)isOnHomeNodeVolume;
- (BOOL)isIDiskNode;
- (BOOL)isSharedFolder;
- (BOOL)isFullyFormed;
- (id)getNodeAsFileOpNodeAndFixIfBroken:(BOOL)arg1;
- (BOOL)isServerOrSharePointNode;
- (BOOL)isEjectableOrUnmountable;
- (struct OpaqueIconRef *)copyIcon;
- (struct OpaqueIconRef *)copyPreviewIcon;
- (id)_quickLookImageWithMaxSize:(struct CGSize)arg1 isThumbnail:(BOOL)arg2;
- (id)previewImageWithSize:(struct CGSize)arg1 isIconModeThumbnail:(BOOL)arg2;
- (id)modDate;
- (id)creationDate;
- (long long)_int64ValueForProperty:(unsigned int)arg1;
- (long long)physicalSize;
- (long long)logicalSize;
- (long long)capacity;
- (long long)freeSpace;
- (long long)sortingGroup;
- (long long)permissions;
- (BOOL)isLocked;
- (long long)usedSize;
- (id)kind;
- (id)kindWithoutPlatform;
- (id)fileType;
- (id)typeIdentifier;
- (id)shortVersion;
- (id)systemVersion;
- (id)comment;
- (long long)labelColorIndex;
- (BOOL)isHomeNode;
- (BOOL)isSharedServer;
- (BOOL)isODSNode;
- (BOOL)isODSRequiresAsk;
- (int)networkMediaTypes;
- (BOOL)isComputerNode;
- (BOOL)isNetworkNode;

@end

@interface _NSNavContextCloseObject : NSObject
{
}

- (void)closeContextIfPossible;

@end

@interface NSNavFBENodePreviewHelper : NSNavNodePreviewHelper
{
}

@end

@interface NSNavFileListDelegate : NSObject
{
    NSNavDataSource *_dataSource;
    NSMutableArray *_currentBrowsingNodePath;
    NSArray *_delayShowNodeInfo;
}

- (id)initWithDataSource:(id)arg1;
- (void)dealloc;
- (id)currentBrowsingNodePath;
- (void)updateCurrentBrowsingNodePathWithCurrentDirectoryNode:(id)arg1;
- (void)storeCurrentBrowsingNodePath:(id)arg1;
- (void)_delayedShowNode:(id)arg1;
- (void)_releaseDelayShowNodeInfo;
- (id)alwaysShowNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (void)reloadDisplayState;
- (void)windowOrderedOut;
- (void)reloadChildrenForNode:(id)arg1;
- (id)showNodeInCurrentDirectoryWithFilename:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (id)showNodeInDirectory:(id)arg1 withDisplayNamePrefix:(id)arg2 selectIfEnabled:(BOOL)arg3 caseSensitiveCompare:(BOOL)arg4;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (void)handleUserGoUpDirectory;
- (id)_doTypeSelectNodeInDirectory:(id)arg1 withSearchString:(id)arg2 visitedNodes:(id)arg3 expandedNodesToVisit:(id)arg4 recursively:(BOOL)arg5;
- (void)changeDirectoryForGoIntoNode:(id)arg1;
- (BOOL)_canGoIntoSelectedDirectoryAndTry:(BOOL)arg1;
- (BOOL)handleGoIntoSelectedDirectory;
- (BOOL)canGoIntoSelectedDirectory;
- (BOOL)_tryUserMoveToParentNode;
- (id)currentTypeSelectSearchString;
- (struct CGRect)sourceFrameOnScreenForNavNode:(id)arg1;
- (id)transitionImageForNavNode:(id)arg1;
- (id)view;
- (BOOL)handleKeyboardShortcutWithEvent:(id)arg1;
- (void)getSnapToWidthList:(const double **)arg1 snapRadiusList:(const double **)arg2 count:(long long *)arg3;
- (double)minimumWidth;
- (void)setRememberedSnapToIndex:(long long)arg1;
- (long long)rememberedSnapToIndex;
- (BOOL)canHighlightNode:(id)arg1;
- (BOOL)canChooseNode:(id)arg1;
- (BOOL)oldWrongCanChooseNode:(id)arg1;
- (id)validSelectedNodesIncludingDirectory;
@property(readonly, nonatomic) NSNavDataSource *dataSource; // @synthesize dataSource=_dataSource;

@end

@interface NSNavSizePropertySortDescriptor : NSNavFilePropertySortDescriptor
{
    NSNavDataSource *_dataSource;
}

- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3 dataSource:(id)arg4;
- (long long)compareObject:(id)arg1 toObject:(id)arg2;

@end

@interface NSNavDisplayNameFilePropertySortDescriptor : NSNavFilePropertySortDescriptor
{
    NSSavePanel *_panel;
    BOOL _caseSensitive;
}

- (id)initWithPanel:(id)arg1 caseSensitive:(BOOL)arg2 ascending:(BOOL)arg3 selector:(SEL)arg4;
- (long long)compareObjectValue:(id)arg1 toObjectValue:(id)arg2;
- (long long)compareObject:(id)arg1 toObject:(id)arg2;

@end

@interface NSNavFilePropertySortDescriptor : NSSortDescriptor
{
}

- (id)initWithFileProperty:(id)arg1 dataSource:(id)arg2 ascending:(BOOL)arg3;
- (long long)compareObjectValue:(id)arg1 toObjectValue:(id)arg2;
@property(readonly, nonatomic) NSString *fileProperty; // @dynamic fileProperty;

@end

@interface NSNavFilepathInputController : NSWindowController
{
    id _target;
    SEL _action;
    BOOL isUILoaded;
    NSTextField *_filepathInputTextField;
    NSTextField *_filepathLabel;
    NSButton *_okButton;
    NSMutableDictionary *_cachedUIStrings;
    NSSavePanel *_savePanel;
    SEL _sheetDidEndSelector;
    void *_sheetDidEndContextInfo;
    NSString *_errorMessage;
}

- (id)initWithWindow:(id)arg1;
- (void)dealloc;
- (void)_cancelDelayedAutocomplete;
- (void)_scheduleDelayedAutocomplete;
- (void)_updateUIToMatchCachedValues;
- (void)_loadUIIfNecessary;
- (void)loadWindow;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setPrompt:(id)arg1;
- (id)prompt;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setFilepathLabel:(id)arg1;
- (id)filepathLabel;
- (void)_setCurrentInputFilepath:(id)arg1;
- (id)_currentInputFilepath;
- (id)filepath;
- (void)_setDefaultWindowKeyViewLoop;
- (void)_prepareToRunForSavePanel:(id)arg1 withFilepath:(id)arg2;
- (BOOL)isRunning;
- (void)beginSheetForSavePanel:(id)arg1 withFilepath:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (long long)runModalForSavePanel:(id)arg1 withFilepath:(id)arg2;
- (long long)runModalForSavePanel:(id)arg1;
- (void)_stopGotoWithCode:(long long)arg1;
- (BOOL)_containsValidFilePath;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;
- (unsigned long long)_simpleCompletePathWithPrefix:(id)arg1 intoString:(id *)arg2 caseSensitive:(BOOL)arg3 matchesIntoArray:(id *)arg4 filterTypes:(id)arg5;
- (long long)_completePathWithPrefix:(id)arg1 intoString:(id *)arg2 matchesIntoArray:(id *)arg3;
- (void)doFileCompletion:(id)arg1 isAutoComplete:(BOOL)arg2 reverseCycle:(BOOL)arg3;
- (void)_doUserComplete;
- (BOOL)_shouldExecuteDelayedAutocomplete;
- (BOOL)_doDelayedAutocomplete;
- (BOOL)_handleTabKey:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
@property(copy) NSString *errorMessage; // @synthesize errorMessage=_errorMessage;

@end

@interface NSNavMatrix : NSMatrix
{
}

@end

@interface NSNavNameFieldFormatter : NSFormatter
{
    NSSavePanel *_panel;
    BOOL _autoAddExtensionToNextInput;
}

- (id)initWithPanel:(id)arg1;
- (void)setAutoAddExtensionToNextInput:(BOOL)arg1;
- (id)stringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;

@end

@interface NSNavNaughtDelegate : NSNavFileListDelegate
{
    NSNavNode *_currentDirectoryNode;
    NSArray *_selectedNodes;
}

- (void)dealloc;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (void)reloadChildrenForNode:(id)arg1;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)sendSelectionChangedNotification;
- (void)_setSelectedNodes:(id)arg1;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (BOOL)canHighlightNode:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (void)_debug;

@end

@interface NSNavNewFolderController : NSObject
{
    NSSavePanel *_savePanel;
    NSWindow *_window;
    NSTextField *_folderNameField;
    NSTextField *_errorMessage;
    NSButton *_cancelButton;
    NSButton *_okButton;
}

- (void)dealloc;
- (id)folderPath;
- (void)_updateOkButtonEnabledStateAndErrorMessage;
- (void)controlTextDidChange:(id)arg1;
- (id)_defaultNewFolderName;
- (BOOL)isRunning;
- (id)runModalForSavePanel:(id)arg1;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;

@end

@interface NSNavNode : NSObject <QLPreviewItem>
{
    unsigned int _selfChangeRegistrationCount:16;
    unsigned int _registeredForChildChanges:1;
    unsigned int _registeredForAttributeChanges:1;
    unsigned int _waitingForAttributeChangeCallback:1;
    unsigned int _openSyncStarted:1;
    unsigned int _aliasState:3;
    unsigned int _isSpecialNode:1;
    unsigned int _shouldResolveForIsContainer:1;
    unsigned int _ejecting:1;
    unsigned int _reserved:6;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)nodeWithSimpleQueryString:(id)arg1 searchScopes:(id)arg2 sortDescriptors:(id)arg3;
+ (id)nodeWithQueryString:(id)arg1 searchScopes:(id)arg2 title:(id)arg3 sortDescriptors:(id)arg4;
+ (id)nodeWithSavedQueryData:(id)arg1 title:(id)arg2 sortDescriptors:(id)arg3;
+ (id)nodeWithURL:(id)arg1 logonOK:(BOOL)arg2;
+ (Class)previewHelperClass;
+ (id)findSidebarNodeForNode:(id)arg1;
@property(readonly, retain, nonatomic) NSColor *labelColor; // @dynamic labelColor;
@property(readonly, nonatomic) long long labelColorIndex; // @dynamic labelColorIndex;
@property(readonly, copy, nonatomic) NSString *labelName; // @dynamic labelName;
@property(readonly, nonatomic) BOOL canBeRead; // @dynamic canBeRead;
@property(readonly, nonatomic) BOOL canBrowse; // @dynamic canBrowse;
@property(readonly, copy, nonatomic) NSString *shortVersion; // @dynamic shortVersion;
@property(readonly, copy, nonatomic) NSString *systemVersion; // @dynamic systemVersion;
@property(readonly, copy, nonatomic) NSString *displayVersion; // @dynamic displayVersion;
@property(nonatomic) int aliasState; // @dynamic aliasState;
@property(nonatomic, getter=isAliasResolving) BOOL aliasResolving; // @dynamic aliasResolving;
@property(readonly, nonatomic) BOOL targetChanged; // @dynamic targetChanged;
@property(nonatomic, getter=isAliasInvalid) BOOL aliasInvalid; // @dynamic aliasInvalid;
@property(copy, nonatomic) NSDictionary *previewAttributes; // @dynamic previewAttributes;
@property(nonatomic) BOOL openSyncStarted; // @dynamic openSyncStarted;
@property(readonly, nonatomic, getter=isValid) BOOL valid; // @dynamic valid;
@property(readonly, nonatomic) BOOL isNil;
@property(readonly, nonatomic) BOOL isComputerNode; // @dynamic isComputerNode;
@property(readonly, nonatomic) BOOL isNetworkNode; // @dynamic isNetworkNode;
@property(readonly, nonatomic) BOOL isHomeNode; // @dynamic isHomeNode;
@property(readonly, nonatomic) BOOL isSharedServer;
@property(readonly, nonatomic) BOOL isIDiskNode; // @dynamic isIDiskNode;
@property(readonly, nonatomic) BOOL isFullyFormed; // @dynamic isFullyFormed;
@property(readonly, nonatomic) BOOL isDiskImage; // @dynamic isDiskImage;
@property(readonly, nonatomic) BOOL isSharedFolder; // @dynamic isSharedFolder;
@property(readonly, nonatomic) BOOL isQuery;
@property(readonly, nonatomic) BOOL isCannedSearch;
@property(readonly, nonatomic) BOOL isMediaNode; // @dynamic isMediaNode;
@property(readonly, nonatomic) BOOL isODSNode; // @dynamic isODSNode;
@property(readonly, nonatomic) BOOL isODSRequiresAsk; // @dynamic isODSRequiresAsk;
@property(readonly, nonatomic, getter=isEjectable) BOOL ejectable; // @dynamic ejectable;
@property(readonly, nonatomic, getter=isEjectableOrUnmountable) BOOL ejectableOrUnmountable; // @dynamic ejectableOrUnmountable;
@property(readonly, nonatomic, getter=isUnmountable) BOOL unmountable; // @dynamic unmountable;
- (BOOL)ejectWithInteraction:(BOOL)arg1;
- (BOOL)eject;
- (BOOL)unmount;
@property(nonatomic, getter=isEjecting) BOOL ejecting; // @dynamic ejecting;
- (void)connectToSharedServerAs;
- (void)askToUseODS;
- (id)otherVolumesOnSameDevice;
@property(readonly, copy, nonatomic) NSString *kindWithoutPlatform; // @dynamic kindWithoutPlatform;
@property(readonly, retain, nonatomic) NSDate *lastOpenedDate; // @dynamic lastOpenedDate;
- (id)searchScopeDisplayName;
@property(readonly, copy, nonatomic) NSString *typeIdentifier; // @dynamic typeIdentifier;
- (id)getNodeAsInfoNode:(BOOL)arg1;
- (id)getNodeAsContainerNodeForBrowsing:(BOOL)arg1;
- (id)getNodeAsResolvedNode:(BOOL)arg1;
- (id)getNodeAsResolvedNode:(BOOL)arg1 withError:(int *)arg2;
- (id)getNodeAsDeepResolvedNode:(BOOL)arg1;
@property(readonly, retain, nonatomic) NSNavNode *parentVolume; // @dynamic parentVolume;
- (id)description;
- (BOOL)isDescendantOfNode:(id)arg1;
- (id)ancestorsStartingWith:(id)arg1;
- (id)children;
- (id)childWithName:(id)arg1;
- (BOOL)sortsChildrenEfficiently;
- (void)setQueryHitResultsFilterUTIs:(id)arg1;
- (id)queryHitResultsFilterUTIs;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (id)previewImageWithSize:(struct CGSize)arg1 isIconModeThumbnail:(BOOL)arg2;
- (void)registerForPropertyChangedNotifications;
- (void)unregisterForPropertyChangedNotifications;
- (void)registerForDeepChildChangedNotifications;
- (void)unregisterForDeepChildChangedNotifications;
- (BOOL)acceptsRootNode;
- (struct OpaqueIconRef *)copyIcon;
@property(readonly, retain, nonatomic) NSImage *icon; // @dynamic icon;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, nonatomic) long long sortingGroup; // @dynamic sortingGroup;
@property(readonly, nonatomic) long long permissions; // @dynamic permissions;
@property(readonly, getter=isLocked) BOOL locked; // @dynamic locked;
@property(readonly, copy, nonatomic) NSString *serverUserName;
@property(readonly, nonatomic) int networkConnectionState;
@property(readonly, nonatomic) BOOL supportsFileSharing;
@property(readonly, nonatomic) BOOL supportsScreenSharing;
- (void)launchScreenSharingApp;
- (void)disconnectShare;
@property(readonly) NSURL *previewItemURL; // @dynamic previewItemURL;
@property(readonly) NSString *previewItemTitle; // @dynamic previewItemTitle;
- (id)previewItemDisplayName;
- (id)previewItemLocalizedDescription;
- (struct CGImage *)createImageForMaximumSize:(struct CGSize)arg1 options:(struct __CFDictionary *)arg2;

// Remaining properties
@property(readonly, nonatomic, getter=isAlias) BOOL alias; // @dynamic alias;
@property(readonly, copy, nonatomic) NSString *comment; // @dynamic comment;
@property(readonly, nonatomic, getter=isContainer) BOOL container; // @dynamic container;
@property(readonly, copy, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(readonly, copy, nonatomic) NSString *displayName; // @dynamic displayName;
@property(readonly, nonatomic, getter=isExtensionHidden) BOOL extensionHidden; // @dynamic extensionHidden;
@property(readonly, copy, nonatomic) NSString *fileType; // @dynamic fileType;
@property(readonly, nonatomic) BOOL isDisconnectedMountPoint; // @dynamic isDisconnectedMountPoint;
@property(readonly, nonatomic) BOOL isUnauthenticatedMountPoint; // @dynamic isUnauthenticatedMountPoint;
@property(readonly, copy, nonatomic) NSString *kind; // @dynamic kind;
@property(readonly, nonatomic) long long logicalSize; // @dynamic logicalSize;
@property(readonly, copy, nonatomic) NSDate *modDate; // @dynamic modDate;
@property(readonly, copy, nonatomic) NSString *name; // @dynamic name;
@property(readonly) int networkMediaTypes; // @dynamic networkMediaTypes;
@property(readonly, nonatomic) long long owner; // @dynamic owner;
@property(readonly, nonatomic, getter=isPackage) BOOL package; // @dynamic package;
@property(readonly, retain, nonatomic) NSNavNode *parent; // @dynamic parent;
@property(readonly, copy, nonatomic) NSString *path; // @dynamic path;
@property(readonly, nonatomic) long long physicalSize; // @dynamic physicalSize;
@property(readonly) id previewItemDisplayState;
@property(readonly, nonatomic) long long usedSize; // @dynamic usedSize;
@property(readonly, nonatomic) long long userAccess; // @dynamic userAccess;
@property(readonly, nonatomic) long long userGroups; // @dynamic userGroups;
@property(readonly, nonatomic, getter=isVisible) BOOL visible; // @dynamic visible;
@property(readonly, nonatomic, getter=isVolume) BOOL volume; // @dynamic volume;

@end

@interface NSNavNodePopUpButton : NSPopUpButton <NSMenuDelegate>
{
    NSMutableDictionary *_nodeInfoTable;
    NSMutableArray *_groupIdentifiers;
    NSMutableArray *_watchingNodes;
    unsigned int _inMenuTrackingMode:1;
    unsigned int _otherMenuContentsDirty:1;
    unsigned int _otherMenuIconsDirty:1;
    unsigned int _firstItemDirty:1;
    unsigned int _windowOrderedOut:1;
    unsigned int _reserved:27;
}

- (void)_commonInitNavNodePopUpButton;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)_stopObservingChildrenAndRemoveAll;
- (void)windowOrderedOut;
- (void)windowOrderedIn;
- (void)_setContentsDirtyForNodeWithIdentifier:(id)arg1;
- (void)appendDisplayedNode:(id)arg1 identifier:(id)arg2 title:(id)arg3 displaysChildren:(BOOL)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)replaceNodeWithIdentifier:(id)arg1 withNode:(id)arg2;
- (void)replaceNodeWithIdentifier:(id)arg1 withDataFromDelegate:(id)arg2;
- (id)selectedNavNode;
- (BOOL)_lastItemIsNonSeparator;
- (void)_updateMenuItemIcon:(id)arg1;
- (id)_keyEquivalentForNode:(id)arg1;
- (id)_newIconlessMenuItemForNavNode:(id)arg1;
- (void)_popUpItemAction:(id)arg1;
- (id)_nodesToDisplayForNodeInfo:(id)arg1;
- (void)_appendNodes:(id)arg1 forNodeInfo:(id)arg2 addSeparator:(BOOL)arg3;
- (void)_loadIconlessMenuContentsIfNecessary;
- (void)_loadMenuItemIconsIfNecessary;
- (BOOL)_keyEquivalentsAreActive;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)willPopUpNotification:(id)arg1;
- (void)doneTrackingMenu:(id)arg1;
- (void)_setContentsDirty:(BOOL)arg1;
- (void)_updateFirstItemIfNecessary;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _NSNavNodeMenuItem : NSMenuItem
{
    BOOL _representedObjectIsObservedNode;
}

- (id)initWithTitle:(id)arg1 action:(SEL)arg2 keyEquivalent:(id)arg3 representedNavNode:(id)arg4;
- (void)_setIconRef:(struct OpaqueIconRef *)arg1;
- (void)startObservingNode;
- (void)stopObservingNode;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setRepresentedObject:(id)arg1;
- (void)dealloc;

@end

@interface NSNavNodePreviewHelper : NSObject
{
    NSNavNode *_node;
    id _delegate;
    NSImage *_cachedPreviewThumbnailImage;
    unsigned int _lookedupPreviewThumbnailImage:1;
    unsigned int _computingThumbnailInDetatchedThread:1;
    unsigned int _reserved:30;
}

+ (void)_subthreadComputePreviewThumbnailImages;
+ (void)_computeThumbnailImageInSubthreadFor:(id)arg1;
- (id)initWithNode:(id)arg1 delegate:(id)arg2;
- (void)dealloc;
- (BOOL)_backgroundDataCancelled;
- (id)node;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)handlePreviewImageChanged;
- (struct CGSize)previewSize;
- (BOOL)previewImageShouldHaveIconModeThumbnail;
- (void)_mainthreadComputePreviewThumbnailFinished:(id)arg1;
- (id)previewThumbnailImage;

@end

@interface NSNavOutlineCell : NSNavBrowserCell
{
}

- (void)setNode:(id)arg1 displayState:(int)arg2;
- (void)setLeaf:(BOOL)arg1;

@end

@interface NSNavOutlineDelegate : NSNavFileListDelegate <NSNavOutlineViewDelegate, NSOutlineViewDataSource>
{
    NSOutlineView *_outline;
    NSNavNode *_currentDirectoryNode;
    double _normalIndentationPerLevel;
    NSArray *_highlightedNodesToRestore;
    NSNavNode *_topNodeBeforeReload;
    unsigned int _useRelativeDates:1;
    unsigned int _calculateFolderSizes:1;
    unsigned int _showIconThumbnails:1;
    unsigned int _reserved:29;
}

- (void)dealloc;
- (id)outline;
- (BOOL)supportsSortingByFileProperties;
- (void)prepareForReloadChildrenForNode:(id)arg1;
- (void)_readDefaultsFromFinder;
- (void)setOutline:(id)arg1;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (id)_cachedChildrenForNode:(id)arg1 allowInteraction:(BOOL)arg2;
- (void)_synchronizeExpandedNodesWithOutlineExpandedItems;
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (void)reloadChildrenForNode:(id)arg1;
- (void)reloadDisplayState;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (void)configureForAllowsExpandingMultipleDirectories:(BOOL)arg1;
- (void)configureForSortedByFileProperty:(id)arg1 ascending:(BOOL)arg2 caseSensitive:(BOOL)arg3;
- (void)configureForDisplayedFileProperties:(id)arg1;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (BOOL)_setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (id)_doFindIndexesOfNodes:(id)arg1 inDirectory:(id)arg2 visitedNodes:(id)arg3;
- (void)_setHighlightedRowsFromNodes:(id)arg1 maintainFirstVisibleRow:(BOOL)arg2;
- (id)_highlightedNodes;
- (id)_selectedNodesWithEntireSelection:(BOOL)arg1;
- (id)selectedNodesIncludingDirectories;
- (id)selectedNodes;
- (void)sendSelectionChangedNotification;
- (void)_outlineAction:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (id)currentTypeSelectSearchString;
- (BOOL)outlineView:(id)arg1 performKeyEquivalent:(id)arg2;
- (void)outlineView:(id)arg1 didClickOnDisabledCell:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)_outlineDoubleAction:(id)arg1;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (int)navOutlineView:(id)arg1 displayStateForItem:(id)arg2;
- (long long)navOutlineView:(id)arg1 labelColorIndexForItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)_ejectButtonClicked:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)_userClickedInEjectButtonFrame;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (void)_debug;
- (struct CGRect)sourceFrameOnScreenForNavNode:(id)arg1;
- (id)view;

@end

@interface NSNavOutlineHeaderCell : NSTableHeaderCell
{
    NSTableColumn *_tableColumn;
}

- (void)setTableColumn:(id)arg1;
- (id)tableColumn;
- (id)_outlineView;
- (long long)_typesetterBehavior;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSNavOutlineView : NSOutlineView
{
    long long _fauxHighlightedCellRow;
    long long _fauxHighlightedCellCol;
    NSCell *_fauxHighlightedCell;
    int _displayStateForDrawingRow;
    unsigned int _delegate_displayStateForItem:1;
    unsigned int _delegate_labelColorForItem:1;
    unsigned int _reserved2:30;
}

+ (unsigned long long)defaultFocusRingType;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)sendMouseUpActionForDisabledCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setFauxHighlightedCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (id)cellAtRow:(long long)arg1 column:(long long)arg2 loaded:(BOOL)arg3;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (BOOL)_canUseReorderResizeImageCacheForColumn:(long long)arg1;
- (BOOL)_shouldContinueExpandAtLevel:(long long)arg1 beganAtLevel:(long long)arg2;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)showsOutlineCell;
- (void)mouseDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_canUseWhiteDisclosureTriangles;
- (double)_sizeToFitWidthOfColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_supportsTrackingAreasForCells;
@property(readonly) int displayStateForDrawingRow; // @synthesize displayStateForDrawingRow=_displayStateForDrawingRow;

@end

@interface NSNavScopeView : NSView
{
    NSNavNode *_queryNode;
    NSMutableArray *_scopeButtons;
    NSButton *_plusButton;
    NSButton *_saveButton;
    NSButton *_editButton;
    NSButton *_smartFolderTitle;
    unsigned int _isEditing:1;
    unsigned int _shouldShowPlus:1;
    unsigned int _reserved:30;
    NSBox *_seperatorView;
    NSArray *_searchTypeButtons;
}

- (id)_plusImage:(BOOL)arg1;
- (void)_updatePlusButtonImage;
@property(nonatomic) BOOL shouldShowPlus; // @dynamic shouldShowPlus;
- (void)_createPlusButtonIsRequired;
- (void)_sizeButtonToFit:(id)arg1;
- (id)_createButtonWithTitle:(id)arg1;
- (void)_editButtonClick:(id)arg1;
- (void)_createEditButtonIfRequired;
- (id)_smartFolderTitleString;
- (void)_createSmartFolderTitleIfRequired;
- (id)smartFolderTitleButton;
- (void)setSmartFolderTitleButton:(id)arg1;
- (void)_createSaveButtonIfRequired;
- (Class)scopeButtonClass;
- (void)_updateSearchTypeButtons;
- (void)_searchFileNameButtonClicked:(id)arg1;
- (void)_addSearchTypeButtons;
- (void)_addDefaultScopeButtons;
- (void)setEditing:(BOOL)arg1;
- (BOOL)isEditing;
- (void)dealloc;
- (void)_layoutViews:(id)arg1 startingInsetFromXOrigin:(double)arg2 insetFromTop:(double)arg3 withSpacing:(double)arg4 sizeToFit:(BOOL)arg5 horizontal:(BOOL)arg6;
- (void)_storeDefaultSearchScopeMode;
- (void)scopeButtonAction:(id)arg1;
- (id)_selectedScopeButton;
- (struct CGRect)_frameForButtonOnTheRight:(id)arg1;
- (double)_startForSearchButtonsX;
- (double)_lastScopeButtonX;
- (void)_layoutRightHandButtons;
- (void)tile;
- (void)setFrame:(struct CGRect)arg1;
- (void)_ensureSeperatorView;
- (void)_syncScopeLayout;
- (void)sizeToFit;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setPlusButtonAction:(SEL)arg1 target:(id)arg2;
- (void)setSaveButtonAction:(SEL)arg1 target:(id)arg2;
- (id)saveButton;
- (void)setSaveButton:(id)arg1;
- (id)editButton;
- (void)setEditButton:(id)arg1;
- (id)plusButton;
- (void)setPlusButton:(id)arg1;
- (void)_hideAllScopeButtons;
- (void)_selectCorrectScopeButton;
- (void)setQueryNode:(id)arg1;
- (id)queryNode;
- (BOOL)isFlipped;
- (id)_backgroundColor;
- (void)drawRect:(struct CGRect)arg1;
- (void)windowDidUpdate:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsIgnored;

@end

@interface NSNavScopeButton : NSButton
{
    NSArray *_scopeLocations;
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setScopeLocations:(id)arg1;
- (id)scopeLocations;
- (void)setStringValue:(id)arg1;
- (void)setStateToSelected;
- (void)setStateToUnselected;
- (BOOL)isSelected;

@end

@interface NSNavScopeButtonCell : NSButtonCell
{
}

- (BOOL)_alwaysShowBezelForCurrentBezelStyleAndState;

@end

@interface _NSNavButtonCell : NSButtonCell
{
}

- (unsigned long long)bezelStyle;

@end

@interface NSNavSegmentSwitchControl : NSSegmentedControl
{
}

- (id)switchCell;
- (BOOL)becomeFirstResponder;

@end

@interface NSNavSimpleButtonCell : NSButtonCell
{
    BOOL _showsRollover;
    BOOL _mouseInside;
    BOOL _showsShadowedText;
    BOOL _disabledWhenInactive;
    struct CGSize _titleSize;
    NSMutableDictionary *_buttonImagesTable;
}

- (void)setupAttributes;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (id)textColorForButtonState:(struct NSNavSimpleButtonState)arg1;
- (id)textShadowForButtonState:(struct NSNavSimpleButtonState)arg1;
- (id)buttonImageNamePrefixForButtonState:(struct NSNavSimpleButtonState)arg1;
- (id)buttonImagesForButtonState:(struct NSNavSimpleButtonState)arg1;
- (void)setShowsShadowedText:(BOOL)arg1;
- (BOOL)showsShadowedText;
- (void)setShowsRollover:(BOOL)arg1;
- (BOOL)showsRollover;
- (void)setDisabledWhenInactive:(BOOL)arg1;
- (BOOL)disabledWhenInactive;
- (void)setTitle:(id)arg1;
- (BOOL)isPressed;
- (BOOL)isSelected;
- (BOOL)_needsRedrawOnMouseInsideChange;
- (BOOL)_shouldShowRollovers;
- (BOOL)_enablesOnWindowChangedKeyState;
- (BOOL)isEnabled;
- (struct NSNavSimpleButtonState)currentButtonState;
- (id)_textAttributes;
- (id)attributedTitle;
- (BOOL)_getButtonImageParts:(id *)arg1:(id *)arg2:(id *)arg3;
- (id)buttonImageForHeightReference;
- (double)buttonHeight;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NSNavSplitView : NSSplitView
{
}

- (id)dividerColor;

@end

@interface NSNavSplitViewController : NSObject
{
    NSNavView *_navView;
    NSNavSplitView *_splitView;
    long long _lastUncollapsedSidebarWidth;
    double _sidebarInset;
    unsigned int _restoredSavedSettings:1;
    unsigned int _sidebarWasCollapsed:1;
    unsigned int _reserved:30;
}

- (id)leftView;
- (id)rightView;
- (void)_restoreSplitPositionFromDefaults;
- (long long)lastUncollapsedSidebarWidth;
- (void)setLastUncollapsedSidebarWidth:(long long)arg1;
- (void)restoreSavedSettings;
- (void)_saveSplitPositionToDefaults;
- (void)awakeFromNib;
- (double)sidebarInset;
- (id)navView;
- (id)splitView;
- (void)dealloc;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)_setSidebarWidth:(double)arg1 maintainSnap:(BOOL)arg2 constrain:(BOOL)arg3;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (BOOL)_isSidebarCollapsed;
- (void)_updateLastUncollapsedSidebarWidth;
- (void)splitViewDidResizeSubviews:(id)arg1;

@end

@interface NSNavView : NSView <NSPathControlDelegate, NSTextFieldDelegate>
{
    NSNavDataSource *_dataSource;
    NSSavePanel *_savePanel;
    NSView *_fileListViewContainer;
    NSBrowser *_browser;
    NSOutlineView *_outline;
    NSIconView *_iconView;
    NSOutlineView *_sidebarOutlineView;
    NSNavSidebarController *_sidebarController;
    NSControl *_fileListModeControl;
    NSControl *_historyControl;
    NSNavNodePopUpButton *_pathComponentPicker;
    NSNavSplitViewController *_splitViewController;
    NSMenu *_iconViewMenu;
    NSSearchField *_searchField;
    NSTextField *_searchResultsCountField;
    NSProgressIndicator *_searchProgressIndicator;
    NSNavScopeView *_searchScopeView;
    NSPathControl *_pathLocationControl;
    NSRuleEditor *_sliceRuleEditor;
    BOOL _restoredSavedSettings;
    BOOL _showingSearchParts;
    NSView *_currentModeView;
    NSNavAdvancedSearchController *_advSearchController;
    NSSegmentedCell *_normalModeSegmentedCell;
    NSNavVirtualNode *_mediaBrowserNode;
    ILMediaBrowserView *_mediaBrowserView;
    unsigned int _isSaveMode:1;
    unsigned int _sidebarLoaded:1;
    unsigned int _reserved:30;
    NSNavViewController *_navViewController;
    NSNavSharedServerController *_sharedServerBannerController;
    NSNavBannerView *_sharedFolderBannerView;
    NSNavNode *_sharedFolderNode;
}

+ (id)navView;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)currentModeView;
- (void)clockPreferencesChanged:(id)arg1;
- (id)_historyControlCell;
- (id)_fileListModeControlCell;
- (id)_setupSegmentSwitchForControl:(id)arg1 firstImage:(id)arg2 secondImage:(id)arg3 thirdImage:(id)arg4 action:(SEL)arg5 showDropDown:(BOOL)arg6;
- (void)_setupHistoryControl;
- (void)_setAccessibilityStringsForNormalFileListModeControl;
- (void)_setupNormalFileListModeControl;
@property(nonatomic) int lastFileListMode;
- (void)_setupSearchParts;
- (BOOL)_iLifeMediaBrowserFrameworkInstalled;
- (id)_mediaBrowserIcon;
- (BOOL)_ensureMediaBrowserViewLoaded;
@property(readonly, nonatomic) ILMediaBrowserView *mediaBrowserView; // @synthesize mediaBrowserView=_mediaBrowserView;
- (BOOL)shouldShowMediaBrowser;
- (void)awakeFromNib;
- (BOOL)_showFilesForBrowserType:(int)arg1;
- (id)_nodeForBrowserType:(int)arg1;
- (void)_loadMediaBrowserNodeIfRequired;
- (void)configureAndLoadLayout;
- (void)setSaveMode:(BOOL)arg1;
- (void)_loadAdvSearchController;
- (id)_advancedQueryStringPortion;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
- (void)queryStringChangedForSearchController:(id)arg1;
- (void)windowOrderedOut;
- (void)windowOrderedIn;
- (void)ruleEditorSizeChangedForSearchController:(id)arg1;
- (void)_slicePlusButtonClick:(id)arg1;
- (void)_setupRuleEditorForScopeView;
- (void)_editQueryButtonClick:(id)arg1;
- (void)_saveAppSmartFolderQueryNode:(id)arg1;
- (BOOL)_isAppSmartFolderNameUsed:(id)arg1;
- (id)_queryViewOptions;
- (BOOL)_isAppSmartFolderNode:(id)arg1;
- (void)_saveQueryButtonClick:(id)arg1;
- (void)saveQuery;
- (id)_duplicateItemReason;
- (BOOL)searchController:(id)arg1 queryShouldSaveWithName:(id)arg2 forAllApps:(BOOL)arg3;
- (void)_selectFirstKeyView;
- (id)_topContainerView;
- (id)_bottomContainerView;
- (id)_activeFileListViewForResizing;
- (BOOL)preservesContentDuringLiveResize;
- (void)tileVertically;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)_positionAndResizeSearchParts;
- (id)sidebarController;
- (void)loadSidebar;
- (void)dealloc;
- (id)_iconView;
- (id)_dataSource;
- (id)savePanel;
- (void)setSavePanel:(id)arg1;
- (Class)navNodeClass;
- (void)setNavNodeClass:(Class)arg1;
@property(retain, nonatomic) NSNavNode *rootNode; // @dynamic rootNode;
- (void)setRootPath:(id)arg1;
- (void)reloadRootNode;
- (id)visualRootNode;
@property(retain, nonatomic) NSNavNode *currentDirectoryNode; // @dynamic currentDirectoryNode;
- (BOOL)setSelectionFromDroppedNode:(id)arg1 selectionHelper:(id)arg2;
- (BOOL)setSelectionFromPasteboard:(id)arg1 selectionHelper:(id)arg2;
- (BOOL)_dropNode:(id)arg1;
- (id)showNodeInCurrentDirectoryWithFilename:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)arg1 selectIfEnabled:(BOOL)arg2;
- (id)selectedResolvedNodes;
- (id)currentResolvedDirectoryNode;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (void)_configureHistoryControl;
- (void)_setPathLocationEmptyTitle:(id)arg1;
- (void)_configureSearching;
- (void)_configureFileListModeControlForMode:(int)arg1;
- (void)_configureForFileListMode:(int)arg1;
- (void)_configureForShowingInPanel;
- (void)_setSearchResultsCountTo:(int)arg1;
- (void)_updateSearchResultsCount:(BOOL)arg1;
- (void)_prepareForReloadChildrenForNode:(id)arg1;
- (void)_handleFileListDidReloadChildrenForNode:(id)arg1;
- (void)_changeMediaBrowserTypeTo:(int)arg1;
- (BOOL)handleGoIntoSelectedDirectory;
- (BOOL)canGoIntoSelectedDirectory;
- (BOOL)_isSharingEnabled;
- (void)_configureSharedServerBannerViewAndTile:(BOOL)arg1;
- (void)_commonHandleRootOrCurrentDirectoryChanged;
- (void)handleRootChangedFromNode:(id)arg1 toNode:(id)arg2 andNotify:(BOOL)arg3;
- (void)handleCurrentDirectoryNodeChanged;
- (void)_handleCurrentBrowsingNodePathChanged;
- (void)_handleFileListModeChanged;
- (void)_updatePathLocationControl;
- (void)_handleSelectionChanged;
- (void)_handleSelectionConfirmed;
- (void)_handleFauxDisabledNodeClicked:(id)arg1;
- (void)_changeHistory:(id)arg1;
- (BOOL)goForwardInHistoryIfPossible;
- (BOOL)goBackwardInHistoryIfPossible;
- (void)goUpDirectory;
- (void)_changeFileListMode:(id)arg1;
- (void)_directoryPopUpButtonClick:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)_recentPlacesNode;
- (id)lazyGetChildrenForNodeWithIdentifier:(id)arg1;
- (void)_configurePathComponentPicker;
- (void)_addCurrentDirectoryToRecentPlaces;
- (int)fileListMode;
- (void)setFileListMode:(int)arg1;
- (id)enabledFileTypes;
- (void)setEnabledFileTypes:(id)arg1;
- (id)fauxFilePackageTypes;
- (void)setFauxFilePackageTypes:(id)arg1;
- (id)fileListOrderedByFileProperty;
- (void)setFileListOrderedByFileProperty:(id)arg1;
- (BOOL)isFileListOrderedAscending;
- (void)setIsFileListOrderedAscending:(BOOL)arg1;
- (BOOL)isFileListOrderedCaseSensitive;
- (void)setIsFileListOrderedCaseSensitive:(BOOL)arg1;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)arg1;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)arg1;
- (BOOL)showsPreviews;
- (void)setShowsPreviews:(BOOL)arg1;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)arg1;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)arg1;
- (BOOL)canClickDisabledFiles;
- (void)setCanClickDisabledFiles:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)arg1;
- (BOOL)treatsDirectoryAliasesAsDirectories;
- (void)setTreatsDirectoryAliasesAsDirectories:(BOOL)arg1;
- (BOOL)calculatesAllSizes;
- (void)setCalculatesAllSizes:(BOOL)arg1;
- (BOOL)allowsExpandingMultipleDirectories;
- (void)setAllowsExpandingMultipleDirectories:(BOOL)arg1;
- (void)_showQueryProgress;
- (void)_hideQueryProgress;
- (void)_stopObservingRootNode:(id)arg1;
- (void)_startObservingRootNode:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_openSyncPropertyChanged:(id)arg1;
- (void)_searchFieldCancelAction:(id)arg1;
- (void)_searchFieldAction:(id)arg1;
- (BOOL)searchField:(id)arg1 shouldChangeCancelButtonVisibility:(BOOL)arg2;
- (void)_updateMenuItem:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (BOOL)_saveMode;
- (void)_loadSavedLayout;
- (void)_saveIconViewSize:(double)arg1;
- (void)_saveIconViewTextSize:(double)arg1;
- (void)_saveIconViewImagePosition:(long long)arg1;
- (void)_changeIconViewTextSize:(id)arg1;
- (void)_changeIconViewIconSize:(id)arg1;
- (void)_changeIconViewTextPosition:(id)arg1;
- (void)_pathLocationControlDoubleClick:(id)arg1;
- (BOOL)worksWhenModal;
- (void)reloadDisplayState;
- (BOOL)isEnabledNode:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (void)endPreviewPanelControl:(id)arg1;
- (Class)_QLPreviewPanelClass;
- (BOOL)_updatePreviewPanelIfRequired;
- (BOOL)hidePreviewPanelIfNecessary;
- (BOOL)showOrHidePreviewPanel;
- (id)_selectedPreviewNodes;
- (unsigned long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(unsigned long long)arg2;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (id)previewPanel:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
@property(readonly, nonatomic) NSNavVirtualNode *mediaBrowserNode; // @synthesize mediaBrowserNode=_mediaBrowserNode;
@property(readonly, nonatomic) NSIconView *iconView; // @synthesize iconView=_iconView;
@property(readonly, nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outline;
@property(readonly, nonatomic) NSBrowser *browser; // @synthesize browser=_browser;

@end

@interface NSNavVirtualNode : NSNavNode
{
    NSNavNode *_parent;
    NSString *_name;
    NSString *_displayName;
    NSString *_path;
    NSNavNode *_originalNode;
    struct OpaqueIconRef *_iconRef;
    BOOL _isContainer;
    BOOL _isVisible;
    BOOL _isPackage;
    BOOL _isAlias;
    BOOL _isVolume;
    BOOL _isExtensionHidden;
    BOOL _isDisconnectedMountPoint;
    BOOL _isUnauthenticatedMountPoint;
    NSDate *_modDate;
    NSDate *_creationDate;
    long long _physicalSize;
    long long _logicalSize;
    long long _usedSize;
    NSString *_kind;
    NSString *_fileType;
    NSString *_shortVersion;
    NSString *_comment;
    NSMutableArray *_children;
    NSImage *_icon;
}

+ (id)userHomeNode;
+ (id)node;
+ (id)containerNode;
+ (id)containerNodeWithChildren:(id)arg1;
+ (id)nodeWithPath:(id)arg1 logonOK:(BOOL)arg2;
- (id)init;
- (id)initWithPath:(id)arg1 logonOK:(BOOL)arg2;
- (id)initWithPath:(id)arg1;
- (id)initWithQueryString:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromChildrenAtIndex:(unsigned long long)arg1;
- (id)addChildWithPath:(id)arg1;
- (void)addChild:(id)arg1;
- (void)addChildren:(id)arg1;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)name;
- (void)setName:(id)arg1;
@property(copy, nonatomic) NSString *displayName; // @dynamic displayName;
- (id)path;
- (void)setPath:(id)arg1;
- (id)getNodeAsResolvedNode:(BOOL)arg1 withError:(int *)arg2;
- (id)getNodeAsDeepResolvedNode:(BOOL)arg1;
- (void)setOriginalNode:(id)arg1;
- (struct OpaqueIconRef *)copyIcon;
- (struct OpaqueIconRef *)copyPreviewIcon;
- (id)previewThumbnailImage;
- (void)setIconRef:(struct OpaqueIconRef *)arg1;
- (BOOL)isContainer;
- (void)setIsContainer:(BOOL)arg1;
- (BOOL)isVisible;
- (void)setIsVisible:(BOOL)arg1;
- (BOOL)isPackage;
- (void)setIsPackage:(BOOL)arg1;
- (BOOL)isAlias;
- (void)setIsAlias:(BOOL)arg1;
- (BOOL)isVolume;
- (void)setIsVolume:(BOOL)arg1;
- (BOOL)isExtensionHidden;
- (void)setIsExtensionHidden:(BOOL)arg1;
- (BOOL)isDisconnectedMountPoint;
- (void)setIsDisconnectedMountPoint:(BOOL)arg1;
- (BOOL)isUnauthenticatedMountPoint;
- (void)setIsUnauthenticatedMountPoint:(BOOL)arg1;
- (id)modDate;
- (void)setModDate:(id)arg1;
- (id)creationDate;
- (void)setCreationDate:(id)arg1;
- (long long)physicalSize;
- (void)setPhysicalSize:(long long)arg1;
- (long long)logicalSize;
- (void)setLogicalSize:(long long)arg1;
- (long long)usedSize;
- (void)setUsedSize:(long long)arg1;
- (id)kind;
- (void)setKind:(id)arg1;
- (id)fileType;
- (void)setFileType:(id)arg1;
- (id)shortVersion;
- (void)setShortVersion:(id)arg1;
- (id)comment;
- (void)setComment:(id)arg1;
- (id)labelColor;
- (id)labelName;
- (id)children;
- (void)setChildren:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)acceptsRootNode;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;

@end

@interface NSNextStepFrame : NSView
{
    NSTextFieldCell *titleCell;
    NSButton *closeButton;
    NSButton *minimizeButton;
    unsigned long long styleMask;
    struct _frFlags {
        unsigned int defeatTitleWrap:1;
        unsigned int resizeByIncrement:1;
        unsigned int shadowIsActive:1;
        unsigned int RESERVED:29;
    } fvFlags;
    struct CGSize sizingParams;
}

+ (void)initialize;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minContentSizeForMinFrameSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
- (struct CGRect)dragRectForFrameRect:(struct CGRect)arg1;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (double)_distanceFromToolbarBaseToTitlebar;
- (void)setRepresentedFilename:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (void)shapeWindow;
- (BOOL)isOpaque;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (id)_newButtonOfClass:(Class)arg1 withNormalIconNamed:(id)arg2 alternateIconNamed:(id)arg3 action:(SEL)arg4;
- (void)_updateButtons;
- (id)closeButton;
- (id)minimizeButton;
- (id)zoomButton;
- (id)doIconify:(id)arg1;
- (void)dealloc;
- (void)_setTitleNeedsDisplay;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 andDefeatWrap:(BOOL)arg2;
- (id)doClose:(id)arg1;
- (long long)resizeFlags;
- (id)_resize:(id)arg1;
- (id)titleFont;
- (id)title;
- (id)setCloseTarget:(id)arg1;
- (id)setCloseAction:(SEL)arg1;
- (BOOL)_optimizedRectFill:(const struct CGRect *)arg1 gray:(double)arg2;
- (BOOL)_drawOptimizedRectFills;
- (struct CGRect)titleRect;
- (struct CGRect)innerTitleRect;
- (BOOL)_isHUDWindow;
- (id)contentFill;
- (double)contentAlpha;
- (BOOL)needsFill;
- (void)drawRect:(struct CGRect)arg1;
- (void)displayIfNeeded;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (void)_drawMiniWindow:(struct CGRect)arg1;
- (struct CGRect)titlebarRect;
- (void)_drawMenuFrame:(struct CGRect)arg1;
- (double)_titleWidth;
- (id)_calcTextRect:(struct CGRect *)arg1;
- (void)_drawTitleStringIn:(struct CGRect)arg1 withColor:(double)arg2;
- (void)_drawTitledFrame:(struct CGRect)arg1;
- (long long)_inResize:(const struct CGPoint *)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_clearDragMargins;
- (void)_resetDragMargins;
- (void)tile;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_setCloseEnabled:(BOOL)arg1;
- (void)_setUtilityWindow:(BOOL)arg1;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (BOOL)worksWhenModal;
- (void)helpRequested:(id)arg1;
- (void)setResizeIncrements:(struct CGSize)arg1;
- (struct CGSize)resizeIncrements;
- (void)setAspectRatio:(struct CGSize)arg1;
- (struct CGSize)aspectRatio;
- (void)setStyleMask:(unsigned long long)arg1;
- (unsigned long long)styleMask;
- (void)_clearPressedButtons;
- (void)_drawFrameShadowAndFlushContext:(id)arg1;

@end

@interface NSDocumentDragButton : NSButton
{
    struct __ddbFlags {
        unsigned int waitForDrag:1;
        unsigned int currentlyDragging:1;
        unsigned int shouldDrag:1;
        unsigned int RESERVED:29;
    } _ddbFlags;
    NSURL *representedURL;
    NSEvent *mouseDownEvent;
}

- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)setRepresentedFilename:(id)arg1;
- (id)representedFilename;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)_dragFile:(id)arg1 fromRect:(struct CGRect)arg2 slideBack:(BOOL)arg3 event:(id)arg4;
- (void)_showDragError:(int)arg1 forFilename:(id)arg2;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSNib : NSObject <NSCoding>
{
    NSData *_data;
    NSArray *_images;
    NSArray *_sounds;
    NSBundle *_bundle;
    struct _NSNibFlags _flags;
    NSString *_path;
    id reserved2;
}

- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithNibNamed:(id)arg1 bundle:(id)arg2;
- (id)_initWithPath:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)instantiateNibWithOwner:(id)arg1 topLevelObjects:(id *)arg2;
- (BOOL)instantiateNibWithExternalNameTable:(id)arg1;
- (void)_loadNibDataFromPath:(id)arg1;

@end

@interface NSNibAXAttributeConnector : NSObject <NSCoding>
{
    id _destination;
    NSString *_attributeType;
    NSString *_attributeValue;
}

- (void)dealloc;
- (id)attributeType;
- (void)setAttributeType:(id)arg1;
- (id)attributeValue;
- (void)setAttributeValue:(id)arg1;
- (id)source;
- (void)setSource:(id)arg1;
- (id)destination;
- (void)setDestination:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;

@end

@interface NSNibAXRelationshipConnector : NSNibConnector
{
}

- (void)establishConnection;

@end

@interface NSNibBindingConnector : NSNibConnector <NSCoding>
{
    NSString *_binding;
    NSString *_keyPath;
    NSDictionary *_options;
    struct __nibBindingConnectorFlags {
        unsigned int _hasEstablishedConnection:1;
        unsigned int _reservedNibBindingConnector:31;
    } _nibBindingConnectorFlags;
    NSNibBindingConnector *_previousConnector;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)_updateForVersion:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_updateLabel;
- (void)setBinding:(id)arg1;
- (id)binding;
- (void)setKeyPath:(id)arg1;
- (id)keyPath;
- (void)setOptions:(id)arg1;
- (id)options;
- (void)_setPreviousNibBindingConnector:(id)arg1;
- (id)_previousNibBindingConnector;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (id)description;

@end

@interface NSNibConnector : NSObject <NSCoding>
{
    id _source;
    id _destination;
    NSString *_label;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)source;
- (void)setSource:(id)arg1;
- (id)destination;
- (void)setDestination:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSNibControlConnector : NSNibConnector
{
}

+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)establishConnection;

@end

@interface NSNibOutletConnector : NSNibConnector
{
}

+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)establishConnection;

@end

@interface _NSLazyFetchingArray : NSMutableArray
{
    NSMutableArray *_objects;
    NSIndexSet *_fetchedIndexes;
    unsigned long long _batchSize;
    id _owner;
    BOOL _shouldFetchAllRanges;
    BOOL _hasChanges;
    BOOL _madeMutable;
}

- (id)init;
- (void)dealloc;
- (void)setOwner:(id)arg1;
- (id)_fetchedIndexes;
- (void)updateBatchSizeForRange:(struct _NSRange)arg1;
- (void)_ensureContentArrayIsMutable;
- (void)setArray:(id)arg1;
- (void)contextDidSave;
- (void)_fetchBatchForIndexes:(id)arg1;
- (unsigned long long)count;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectIDAtIndex:(unsigned long long)arg1;
- (id)_underlyingArrayObjectAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)mutableCopy;
- (unsigned long long)indexOfObjectIdenticalTo:(id)arg1;
- (void)addObjectsIDsFromArray:(id)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)removeObjectIdenticalTo:(id)arg1;
- (void)setShouldFetchAllRanges:(BOOL)arg1;
- (void)_contextDidSave;
- (void)_fetchAllRanges;
- (void)_sortUsingDescriptors:(id)arg1;
- (void)sortUsingDescriptors:(id)arg1;
- (void)filterUsingPredicate:(id)arg1;
- (void)removeLastObject;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;

@end

@interface _NSManagedProxy : NSObject
{
    id _callbackHandler;
    NSManagedObjectContext *_managedObjectContext;
    NSString *_entityName;
    NSPredicate *_fetchPredicate;
    NSArray *_sortDescriptors;
    id _lazyFetchingArray;
}

- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)_setCallbackHandler:(id)arg1;
- (id)_callbackHandler;
- (void)setManagedObjectContext:(id)arg1;
- (id)managedObjectContext;
- (void)setEntityName:(id)arg1;
- (id)entityName;
- (void)setFetchPredicate:(id)arg1;
- (id)fetchPredicate;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (id)_managedObjectContext;
- (id)_persistentStoreCoordinator;
- (id)_entity;
- (BOOL)isEntityUsable:(id)arg1;
- (id)usableSortDescriptorsFromArray:(id)arg1;
- (id)_relationshipKeyPathsForPrefetching;
- (id)fetchRequestWithSortDescriptors:(id)arg1 limit:(unsigned long long)arg2;
- (id)fetchObjectsWithFetchRequest:(id)arg1 error:(id *)arg2;
- (void)_executeFetchForObjects:(id)arg1;
- (id)newInsertedObjectForEntity:(id)arg1;
- (id)newInsertedObject;
- (void)deleteObject:(id)arg1;
- (BOOL)_objectMatchesEntity:(id)arg1;
- (void)_storesDidChange:(id)arg1;
- (BOOL)_objectMatchesFetchPredicate:(id)arg1;
- (void)_managedObjectContextDidSave:(id)arg1;
- (void)_managedObjectsChangedInContext:(id)arg1;
- (void)updateBatchSizeForRange:(struct _NSRange)arg1;
- (id)_lazyFetchResultProxyForObjects:(id)arg1;

@end

@interface NSObjectController : NSController
{
    void *_reserved3;
    id _managedProxy;
    struct __objectControllerFlags {
        unsigned int _editable:1;
        unsigned int _automaticallyPreparesContent:1;
        unsigned int _hasLoadedData:1;
        unsigned int _explicitlyCannotAdd:1;
        unsigned int _explicitlyCannotRemove:1;
        unsigned int _isUsingManagedProxy:1;
        unsigned int _hasFetched:1;
        unsigned int _batches:1;
        unsigned int _reservedObjectController:24;
    } _objectControllerFlags;
    NSString *_objectClassName;
    Class _objectClass;
    NSArray *_contentObjectArray;
    id _content;
    id _objectHandler;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
+ (Class)_defaultObjectClass;
+ (id)_defaultObjectClassName;
+ (id)_keyValueBindingAccessPoints;
+ (id)_modelAndProxyKeys;
- (void)_init;
- (id)init;
- (id)initWithContent:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)awakeFromNib;
- (void)_dealloc;
- (id)description;
- (void)_setObjectHandler:(id)arg1;
- (void)setContent:(id)arg1;
- (void)_notifyEditorStateChanged:(BOOL)arg1;
- (void)_notifyOfAnyContentChange;
- (id)content;
- (void)_markHasLoadedData:(BOOL)arg1;
- (void)setAutomaticallyPreparesContent:(BOOL)arg1;
- (BOOL)automaticallyPreparesContent;
- (void)_changeEditable:(BOOL)arg1;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)_setObjectClassName:(id)arg1;
- (id)_objectClassName;
- (void)setObjectClass:(Class)arg1;
- (Class)objectClass;
- (id)newObject;
- (void)_prepareContentWithNewObject:(id)arg1;
- (void)prepareContent;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)_executeAdd:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)add:(id)arg1;
- (void)remove:(id)arg1;
- (void)_setExplicitlyCannotAdd:(BOOL)arg1 remove:(BOOL)arg2;
- (BOOL)_explicitlyCannotAdd;
- (BOOL)_explicitlyCannotRemove;
- (BOOL)canAdd;
- (BOOL)canRemove;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)_singleValueForKey:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (id)_singleMutableArrayValueForKeyPath:(id)arg1;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)_controllerKeys;
- (id)selectedObjects;
- (id)selection;

@end

@interface NSObjectDetailBinder : NSEditorBinder
{
    NSResponder *_errorPresenter;
    struct __objectDetailBinderFlags {
        unsigned int _handlesContentAsCompoundValue:1;
        unsigned int _deletesObjectsOnRemove:1;
        unsigned int _reservedObjectDetailBinder:30;
    } _objectDetailBinderFlags;
}

+ (void)initialize;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)_notifyEditorStateChanged:(BOOL)arg1;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)setHandlesContentAsCompoundValue:(BOOL)arg1;
- (BOOL)handlesContentAsCompoundValue;
- (void)setDeletesObjectsOnRemove:(BOOL)arg1;
- (BOOL)deletesObjectsOnRemove;
- (id)_referenceBinding;
- (void)refreshDetailContent;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (BOOL)setMasterObjectRelationship:(id)arg1 refreshDetailContent:(BOOL)arg2;
- (BOOL)setMasterObjectRelationship:(id)arg1;
- (void)noteContentValueHasChanged;
- (void)_useErrorPresenter:(id)arg1;

@end

@interface NSObjectParameterBinder : NSBinder
{
    struct __objectParameterBinderFlags {
        unsigned int _needsToRefreshOriginalValues:1;
        unsigned int _reservedObjectParameterBinder:31;
    } _objectParameterBinderFlags;
    NSString *_bindingValueBeingSet;
    NSMutableDictionary *_originalValues;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasEstablished;
- (id)availableBindings;
- (BOOL)canAddBinding:(id)arg1 toController:(id)arg2;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;

@end

@interface NSOpenGLContext : NSObject
{
    NSView *_view;
    struct _CGLContextObject *_contextAuxiliary;
}

+ (id)currentContext;
+ (void)clearCurrentContext;
- (id)initWithFormat:(id)arg1 shareContext:(id)arg2;
- (id)initWithCGLContextObj:(void *)arg1;
- (void)dealloc;
- (void)finalize;
- (void)makeCurrentContext;
- (void)copyAttributesFromContext:(id)arg1 withMask:(unsigned int)arg2;
- (void)flushBuffer;
- (void)clearDrawable;
- (void)update;
- (void)setView:(id)arg1;
- (void)_surfaceWillGoAway:(id)arg1;
- (void)_surfaceDidComeBack:(id)arg1;
- (void)setOffScreen:(void *)arg1 width:(int)arg2 height:(int)arg3 rowbytes:(int)arg4;
- (void)setFullScreen;
- (id)view;
- (void)setValues:(const int *)arg1 forParameter:(int)arg2;
- (void)getValues:(int *)arg1 forParameter:(int)arg2;
- (void)setCurrentVirtualScreen:(int)arg1;
- (int)currentVirtualScreen;
- (void)createTexture:(unsigned int)arg1 fromView:(id)arg2 internalFormat:(unsigned int)arg3;
- (void *)CGLContextObj;
- (void)setPixelBuffer:(id)arg1 cubeMapFace:(unsigned int)arg2 mipMapLevel:(int)arg3 currentVirtualScreen:(int)arg4;
- (id)pixelBuffer;
- (unsigned int)pixelBufferCubeMapFace;
- (int)pixelBufferMipMapLevel;
- (void)setTextureImageToPixelBuffer:(id)arg1 colorBuffer:(unsigned int)arg2;

@end

@interface NSOpenGLPixelBuffer : NSObject
{
    struct _CGLPBufferObject *_pixelBufferAuxiliary;
    void *_reserved1;
    void *_reserved2;
}

- (id)initWithTextureTarget:(unsigned int)arg1 textureInternalFormat:(unsigned int)arg2 textureMaxMipMapLevel:(int)arg3 pixelsWide:(int)arg4 pixelsHigh:(int)arg5;
- (id)initWithCGLPBufferObj:(void *)arg1;
- (void *)CGLPBufferObj;
- (void)dealloc;
- (void)finalize;
- (int)pixelsWide;
- (int)pixelsHigh;
- (unsigned int)textureTarget;
- (unsigned int)textureInternalFormat;
- (int)textureMaxMipMapLevel;

@end

@interface NSOpenGLPixelFormat : NSObject <NSCoding>
{
    struct _CGLPixelFormatObject *_pixelFormatAuxiliary;
    NSData *_pixelAttributes;
    long long _reserved1;
    long long _reserved2;
    long long _reserved3;
}

+ (void)initialize;
- (id)initWithAttributes:(const unsigned int *)arg1;
- (id)initWithCGLPixelFormatObj:(void *)arg1;
- (id)initWithData:(id)arg1;
- (id)attributes;
- (void)setAttributes:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)getValues:(int *)arg1 forAttribute:(unsigned int)arg2 forVirtualScreen:(int)arg3;
- (int)numberOfVirtualScreens;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void *)CGLPixelFormatObj;

@end

@interface NSOpenGLView : NSView
{
    NSOpenGLContext *_openGLContext;
    NSOpenGLPixelFormat *_pixelFormat;
    long long _reserved1;
    long long _reserved2;
    long long _reserved3;
}

+ (void)initialize;
+ (id)defaultPixelFormat;
- (id)makeBackingLayer;
- (id)initWithFrame:(struct CGRect)arg1 pixelFormat:(id)arg2;
- (void)dealloc;
- (void)finalize;
- (void)setOpenGLContext:(id)arg1;
- (id)openGLContext;
- (void)clearGLContext;
- (BOOL)isOpaque;
- (void)setPixelFormat:(id)arg1;
- (id)pixelFormat;
- (BOOL)lockFocusIfCanDraw;
- (void)prepareOpenGL;
- (void)reshape;
- (void)update;
- (id)_invalidateGStatesForTree;
- (void)_surfaceNeedsUpdate:(id)arg1;
- (void)setWantsLayer:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSOpenPanel : NSSavePanel
{
    char _reservedOpenPanel[4];
    void *_privateOpenPanel;
}

+ (id)openPanel;
- (void)_initSaveMode;
- (id)URLs;
- (id)filenames;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)arg1;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)arg1;
- (BOOL)preventsApplicationTerminationWhenModal;
- (void)_dismissModalForTerminate;

@end

@interface NSOutlineView : NSTableView
{
    long long _numberOfRows;
    struct __NSOVRowEntry *_rowEntryTree;
    struct __CFDictionary *_itemToEntryMap;
    long long _unused2;
    long long _unused3;
    long long _unused1;
    NSTableColumn *_outlineTableColumn;
    BOOL _initedRows;
    BOOL _indentationMarkerInCell;
    long long _indentationPerLevel;
    NSButtonCell *_outlineCell;
    struct CGRect _trackingOutlineFrame;
    NSMouseTracker *_tracker;
    id _unused4;
    struct __OvFlags {
        unsigned int _reserved:3;
        unsigned int dontRedisplayOnFrameChange:1;
        unsigned int flashingOutlineCell:1;
        unsigned int flashingEntireRow:1;
        unsigned int delegateShouldAutoExpandItem:1;
        unsigned int delegateAutoCollapseItem:1;
        unsigned int delegateAutoExpandItem:1;
        unsigned int delegateShouldShowOutlineCellForItem:1;
        unsigned int dataSourceDraggedImageMovedTo:1;
        unsigned int dataSourceDraggingEndedAt:1;
        unsigned int reloadingData:1;
        unsigned int validDataSourceMethods:1;
        unsigned int numberOfRowsDataExpandEntered:1;
        unsigned int delayRowEntryFreeDisabled:1;
        unsigned int delegateHeightOfRowByItem:1;
        unsigned int _unused:1;
        unsigned int autoExpandFlashState:1;
        unsigned int selectionAdjustmentDisabled:1;
        unsigned int removeChildInProgress:1;
        unsigned int delegateWillDisplayOutlineCell:1;
        unsigned int enableExpandNotifications:1;
        unsigned int autoSaveExpandItems:1;
        unsigned int autoresizesOutlineColumn:1;
        unsigned int delegateShouldExpandItem:1;
        unsigned int delegateShouldCollapseItem:1;
        unsigned int delegateSelectionShouldChangeInOutlineView:1;
        unsigned int delegateShouldSelectTableColumn:1;
        unsigned int delegateShouldSelectItem:1;
        unsigned int delegateShouldEditTableColumn:1;
        unsigned int delegateWillDisplayCell:1;
    } _ovFlags;
    id _ovLock;
    long long *_indentArray;
    long long _originalWidth;
    id _expandSet;
    id _expandSetToExpandItemsInto;
    long long _indentArraySize;
    NSButtonCell *_trackingOutlineCell;
    long long _trackingRow;
    id _ovReserved;
}

+ (void)initialize;
+ (void)_delayedFreeRowEntryFreeList;
+ (void)_initializeRegisteredDefaults;
+ (BOOL)_shouldAllowAutoExpandItemsDuringDragsDefault;
+ (BOOL)_shouldAllowAutoCollapseItemsDuringDragsDefault;
+ (BOOL)_shouldRequireAutoCollapseOutlineAfterDropsDefault;
- (void)_commonInit;
- (void)_goneMultiThreaded;
- (void)_goneSingleThreaded;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_finishedMakingConnections;
- (void)_finishedTableViewInitWithCoder;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)isExpandable:(id)arg1;
- (void)_redisplayAfterExpansionChangeFromRow:(long long)arg1 withOriginalRowCount:(long long)arg2;
- (BOOL)_shouldContinueExpandAtLevel:(long long)arg1 beganAtLevel:(long long)arg2;
- (BOOL)_shouldExpandItem:(id)arg1;
- (BOOL)_shouldCollapseItem:(id)arg1;
- (void)_expandItemEntryChildren:(struct __NSOVRowEntry *)arg1 atStartLevel:(long long)arg2 expandChildren:(BOOL)arg3 andInvalidate:(BOOL)arg4;
- (void)_expandItemEntry:(struct __NSOVRowEntry *)arg1 expandChildren:(BOOL)arg2 startLevel:(long long)arg3;
- (void)_expandItemEntry:(struct __NSOVRowEntry *)arg1 expandChildren:(BOOL)arg2;
- (void)_batchExpandItemsWithItemEntries:(struct __CFArray *)arg1 expandChildren:(BOOL)arg2;
- (void)expandItem:(id)arg1;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)_collapseItemEntry:(struct __NSOVRowEntry *)arg1 collapseChildren:(BOOL)arg2 clearExpandState:(BOOL)arg3 recursionLevel:(long long)arg4;
- (void)_batchCollapseItemsWithItemEntries:(struct __CFArray *)arg1 collapseChildren:(BOOL)arg2 clearExpandState:(BOOL)arg3;
- (void)_batchCollapseItemsWithItemEntries:(struct __CFArray *)arg1 collapseChildren:(BOOL)arg2;
- (void)collapseItem:(id)arg1;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)_collapseRootEntry:(BOOL)arg1 clearExpandState:(BOOL)arg2;
- (void)_collapseItem:(id)arg1 collapseChildren:(BOOL)arg2 clearExpandState:(BOOL)arg3;
- (void)_endEditingIfEditedCellIsChildOfItemEntry:(struct __NSOVRowEntry *)arg1;
- (void)_adjustEditedCellLocation;
- (void)_scrollFieldEditorToVisible:(id)arg1;
- (BOOL)_supportsVariableHeightRows;
- (BOOL)_delegateShouldReorderColumn:(long long)arg1 toColumn:(long long)arg2;
- (double)_sourceListGroupRowBottomSpacing;
- (double)_sendDelegateHeightOfRow:(long long)arg1;
- (BOOL)_sendShouldTrackCell:(id)arg1 forTableColumn:(id)arg2 row:(long long)arg3;
- (id)_delegate_dataCellForTableColumn:(id)arg1 row:(long long)arg2;
- (void)_adjustSelectionForItemEntry:(struct __NSOVRowEntry *)arg1 numberOfRows:(long long)arg2 adjustFieldEditorIfNecessary:(BOOL)arg3;
- (double)_originalOutlineColumnWidth;
- (void)_calcOutlineColumnWidth;
- (void)_resizeOutlineColumn;
- (void)reloadData;
- (void)reloadItem:(id)arg1;
- (void)reloadItem:(id)arg1 reloadChildren:(BOOL)arg2;
- (void)setIndentationPerLevel:(double)arg1;
- (double)indentationPerLevel;
- (void)setIndentationMarkerFollowsCell:(BOOL)arg1;
- (BOOL)indentationMarkerFollowsCell;
- (void)setOutlineTableColumn:(id)arg1;
- (id)outlineTableColumn;
- (void)removeTableColumn:(id)arg1;
- (void)setAutoresizesOutlineColumn:(BOOL)arg1;
- (BOOL)autoresizesOutlineColumn;
- (void)_postItemWillExpandNotification:(id)arg1;
- (void)_postItemWillCollapseNotification:(id)arg1;
- (void)_postItemDidExpandNotification:(id)arg1;
- (void)_postItemDidCollapseNotification:(id)arg1;
- (void)_checkDataSource;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (long long)numberOfRows;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (BOOL)_clickedInExpansionTriangle:(struct CGPoint)arg1;
- (BOOL)_isEditingRowAChildOfRowAtPoint:(struct CGPoint)arg1;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)arg1;
- (void)_drawOutlineCell:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_highlightOutlineCell:(id)arg1 highlight:(BOOL)arg2 withFrame:(struct CGRect)arg3 inView:(id)arg4;
- (void)_doUserExpandOrCollapseOfItem:(id)arg1 isExpand:(BOOL)arg2 optionKeyWasDown:(BOOL)arg3;
- (struct __CFArray *)_createSelectedRowEntriesArrayIncludingExpandable:(BOOL)arg1 includingUnexpandable:(BOOL)arg2 withCurrentExpandState:(BOOL)arg3;
- (void)keyDown:(id)arg1;
- (BOOL)_canUseWhiteDisclosureTriangles;
- (BOOL)_shouldIndentBackgroundRect;
- (BOOL)mouseTracker:(id)arg1 shouldStartTrackingWithEvent:(id)arg2;
- (BOOL)mouseTracker:(id)arg1 shouldContinueTrackingWithEvent:(id)arg2;
- (BOOL)mouseTracker:(id)arg1 didStopTrackingWithEvent:(id)arg2;
- (void)_printDataSourceWarning;
- (BOOL)_dataSourceIsItemExpandable:(id)arg1;
- (id)_dataSourceChild:(long long)arg1 ofItem:(id)arg2;
- (long long)_dataSourceNumberOfChildrenOfItem:(id)arg1;
- (id)_dataSourceValueForColumn:(id)arg1 row:(long long)arg2;
- (void)_dataSourceSetValue:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_delegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_delegateWillDisplayOutlineCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_sendDelegateWillDisplayOutlineCell:(id)arg1 inOutlineTableColumnAtRow:(long long)arg2;
- (BOOL)_delegateRespondsToShouldShowCellExpansion;
- (BOOL)_sendDelegateShouldShowCellExpansionForColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_delegateRespondsToGetToolTip;
- (id)_sendDelegateToolTipForCell:(id)arg1 tableColumn:(id)arg2 rect:(struct CGRect *)arg3 row:(long long)arg4 mouseLocation:(struct CGPoint)arg5;
- (void)_sendBindingAdapterWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_sendDelegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (id)_alternateAutoExpandImageForOutlineCell:(id)arg1 inRow:(long long)arg2 withFrame:(struct CGRect)arg3;
- (void)_debugDrawRowNumberInCell:(id)arg1 withFrame:(struct CGRect)arg2 forRow:(long long)arg3;
- (struct CGRect)_highlightRectForRow:(long long)arg1;
- (void)drawRowIndexes:(id)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)_adjustRectForFocusRing:(struct CGRect)arg1 atRow:(long long)arg2;
- (void)_drawOutlineCellAtRow:(long long)arg1;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 withCellFrame:(struct CGRect)arg3;
- (void)_adjustDrawingTestFrame:(struct CGRect *)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setSelectionHighlightStyle:(long long)arg1;
- (double)_outlineCellIndentation;
- (double)_indentationForRow:(long long)arg1 withLevel:(long long)arg2 isSourceListGroupRow:(BOOL)arg3;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (struct CGRect)rectOfRow:(long long)arg1;
- (void)_setNeedsDisplayInRow:(long long)arg1;
- (BOOL)_delegateShouldShowOutlineCellForItem:(id)arg1;
- (struct CGRect)_frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (BOOL)_needsRedisplayOnFrameChange;
- (void)_redisplayAndResizeFromRow:(long long)arg1;
- (BOOL)_userCanChangeSelection;
- (BOOL)_delegateRespondsToCanSelectRow;
- (BOOL)_sendDelegateCanSelectRow:(long long)arg1;
- (id)_sendDelegateSelectionIndexesForProposedSelection:(id)arg1;
- (BOOL)_sendDelegateCanSelectColumn:(long long)arg1;
- (struct __NSOVRowEntry *)_rowEntryForItem:(id)arg1 requiredRowEntryLoadMask:(unsigned long long)arg2;
- (struct __NSOVRowEntry *)_lazyRowEntryForItem:(id)arg1 requiredRowEntryLoadMask:(unsigned long long)arg2;
- (struct __NSOVRowEntry *)_rowEntryForChild:(long long)arg1 ofParent:(struct __NSOVRowEntry *)arg2 requiredRowEntryLoadMask:(unsigned long long)arg3;
- (struct __NSOVRowEntry *)_rowEntryForRow:(long long)arg1 requiredRowEntryLoadMask:(unsigned long long)arg2;
- (id)_cheapItemAtRow:(long long)arg1;
- (id)itemAtRow:(long long)arg1;
- (long long)rowForItem:(id)arg1;
- (id)parentForItem:(id)arg1;
- (long long)levelForItem:(id)arg1;
- (long long)levelForRow:(long long)arg1;
- (BOOL)_isItemLoadedAndExpanded:(id)arg1;
- (BOOL)isItemExpanded:(id)arg1;
- (BOOL)_userCanEditTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)autosaveExpandedItems;
- (void)setAutosaveExpandedItems:(BOOL)arg1;
- (void)_readPersistentExpandItems;
- (id)_convertPersistentItem:(id)arg1;
- (void)_writePersistentExpandItems;
- (void)setAutosaveName:(id)arg1;
- (void)_writePersistentTableColumns;
- (void)_readPersistentTableColumns;
- (BOOL)_shouldSlideBackAfterDragFailed;
- (BOOL)_shouldAttemptDroppingAsChildOfLeafItems;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)arg1;
- (void)setDropItem:(id)arg1 dropChildIndex:(long long)arg2;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (void)_tryDrop:(id)arg1 dropItem:(id)arg2 dropChildIndex:(long long)arg3;
- (void)_updateDropFeedbackFromPriorItem:(id)arg1 childIndex:(long long)arg2 mask:(unsigned long long)arg3;
- (long long)_hitRowForDropTargetRow:(long long)arg1 point:(struct CGPoint)arg2;
- (void)_determineDropCandidateForDragInfo:(id)arg1;
- (void)_setNeedsDisplayForDropCandidateItem:(id)arg1 childIndex:(long long)arg2 mask:(unsigned long long)arg3;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (id)_columnsForDragImage;
- (BOOL)_shouldHighlightParentRows;
- (struct CGRect)_dropHighlightBackgroundRectForRow:(long long)arg1;
- (long long)_dropCandidateRow;
- (BOOL)_isDropFeedbackRow:(long long)arg1;
- (void)_drawDropHighlight;
- (BOOL)_canInitiateRowDragInColumn:(long long)arg1;
- (void)_sendDelegateDidMouseDownInHeader:(long long)arg1;
- (void)_sendDelegateDidClickColumn:(long long)arg1;
- (void)_sendDelegateDidDragColumn:(long long)arg1;
- (BOOL)_sendDataSourceWriteDragDataWithIndexes:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (void)_sendDataSourceSortDescriptorsDidChange:(id)arg1;
- (BOOL)_dataSourceRespondsToSortDescriptorsDidChange;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)_invalidateDropCandidateItem;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (id)_dataSourceNamesOfPromisedFilesAtDestination:(id)arg1;
- (BOOL)_dataSourceRespondsToNamesOfPromisedFilesDroppedAtDestination;
- (BOOL)_shouldAutoExpandNoExpandableItem:(id)arg1;
- (void)_startAutoExpandingItemFlash;
- (void)_autoExpandFlashOnce;
- (void)_stopAutoExpandingItemFlash;
- (BOOL)_shouldAutoExpandItem:(id)arg1;
- (void)_scheduleAutoExpandTimerForItem:(id)arg1;
- (void)_autoExpandItem:(id)arg1;
- (BOOL)_autoExpandItemUnderCursor;
- (void)_cancelAutoExpandTimer;
- (void)_collapseAllAutoExpandedItems;
- (void)_cancelAnyScheduledAutoCollapse;
- (void)_collapseAutoExpandedItems:(id)arg1;
- (id)_itemsFromRowsWithIndexes:(id)arg1;
- (double)_minXLocOfOutlineColumn;
- (long long)_countDisplayedDescendantsOfItem:(id)arg1;
- (id)_findParentWithLevel:(long long)arg1 beginingAtItem:(id)arg2 childEncountered:(long long *)arg3;
- (void)removeFromSuperview;
- (double)_delegate_sizeToFitWidthOfColumn:(long long)arg1;
- (double)_sizeToFitWidthOfColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_delegateRespondsTo_nextTypeSelectMatchFromRow;
- (long long)_delegate_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (BOOL)_delegateRespondsTo_typeSelectStringForTableColumn;
- (id)_delegateTypeSelectStringForTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_delegateRespondsTo_shouldTypeSelectForEvent;
- (BOOL)_delegate_shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (BOOL)_delegate_isGroupRow:(long long)arg1;
- (id)identifierForRow:(long long)arg1;
- (id)_createOutlineControlForRow:(long long)arg1 withFrame:(struct CGRect)arg2;
- (void)_outlineControlClicked:(id)arg1;
- (void)updateExtraViewsForRow:(long long)arg1 animated:(BOOL)arg2;

@end

@interface _NSOutlineViewReserved : NSObject
{
    NSMutableArray *draggedItems;
    id dropCandidateItem;
    long long dropCandidateChildIndex;
    NSMutableArray *autoExpandedItems;
    id autoExpandTimerItem;
    id expandingItem;
    struct CGPoint lastHoverPoint;
    unsigned long long lastDragOperation;
    struct __CFArray *rowEntryArray;
    long long firstRowIndexDrawn;
    long long expandedLevel0ItemsWithExpandableChild;
}

@end

@interface NSOutlineRow : NSTableRow
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySubroleAttribute;
- (id)accessibilityDisclosingAttribute;
- (BOOL)accessibilityIsDisclosingAttributeSettable;
- (void)accessibilitySetDisclosingAttribute:(id)arg1;
- (id)accessibilityDisclosedRowsAttribute;
- (BOOL)accessibilityIsDisclosedRowsAttributeSettable;
- (id)accessibilityDisclosedByRowAttribute;
- (BOOL)accessibilityIsDisclosedByRowAttributeSettable;
- (id)accessibilityDisclosureLevelAttribute;
- (BOOL)accessibilityIsDisclosureLevelAttributeSettable;
- (long long)_outlineTableColumnIndex;
- (BOOL)_accessibilityDisplaysDisclosureTriangleForRow:(long long)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)_accessibilityChildrenWithIndexes:(id)arg1;
- (long long)_childrenCount;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;

@end

@interface NSOutlineViewBinder : NSBinder
{
    struct ___outlineViewBinderFlags {
        unsigned int _isAutoCreated:1;
        unsigned int _reservedOutlineViewBinder:31;
    } _outlineViewBinderFlags;
    long long _ignoreChangesCount;
    struct _NSRange _previousVisibleRange;
    _NSTreeNodeObservingTracker *_treeNodeObservingTracker;
    id _contentBindingController;
}

+ (BOOL)_autoCreateBinderForObject:(id)arg1 withController:(id)arg2;
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)bindingCategory;
+ (id)bindingsForObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (BOOL)_isAutoCreated;
- (void)_markAutoCreated:(BOOL)arg1;
- (void)beginIgnoreChanges;
- (void)endIgnoreChanges;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)_updateObservingRegistration:(BOOL)arg1;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)_observeKeyPathForRelatedBinder:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (void)modifyObservingOutlineViewChildrenOfItem:(id)arg1 withOption:(unsigned long long)arg2;
- (void)startObservingOutlineViewChildrenOfItem:(id)arg1;
- (void)stopObservingOutlineViewChildrenOfItem:(id)arg1;
- (void)_childrenChangedForNode:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)expandIndexPath:(id)arg1;
- (void)tableView:(id)arg1 updateVisibleRowInformation:(struct _NSRange)arg2;
- (void)_scrollSelectionToVisible;
- (void)_updateSelectionIndexPaths:(id)arg1;
- (void)tableView:(id)arg1 didChangeToSelectedRowIndexes:(id)arg2;
- (void)_updateSortDescriptors:(id)arg1;
- (void)tableView:(id)arg1 didChangeToSortDescriptors:(id)arg2;
- (void)outlineView:(id)arg1 didExpandItem:(id)arg2;
- (void)outlineView:(id)arg1 willCollapseItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;

@end

@interface _NSPDFDocument : NSObject
{
    struct CGPDFDocument *_document;
    struct CGRect _bounds;
    long long _currentPage;
}

- (id)initWithData:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (struct CGPDFDocument *)documentRef;
- (struct CGRect)bounds;
- (void)setCurrentPage:(long long)arg1;
- (long long)currentPage;
- (long long)pageCount;

@end

@interface NSPDFImageRep : NSImageRep
{
    NSData *_pdfData;
    int _reserved1;
    int _reserved2;
    id _private;
}

+ (void)initialize;
+ (BOOL)canInitWithData:(id)arg1;
+ (id)imageRepWithData:(id)arg1;
+ (id)imageUnfilteredTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (BOOL)draw;
- (BOOL)_drawOnlyUsesOneDrawingOperation;
- (void *)_createPatternForRect:(struct CGRect)arg1 context:(id)arg2;
- (BOOL)_isValid;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)PDFRepresentation;
- (struct CGRect)bounds;
- (void)setCurrentPage:(long long)arg1;
- (long long)currentPage;
- (long long)pageCount;
- (long long)_uncachedSize;

@end

@interface NSPICTImageRep : NSImageRep
{
    struct CGPoint _pictOrigin;
    NSData *_pictData;
    id _imageRep;
    unsigned long long _pictOffset;
    unsigned int _reserved1;
    unsigned int _reserved2;
}

+ (void)initialize;
+ (id)imageRepWithData:(id)arg1;
+ (BOOL)_verifyDataIsPICT:(id)arg1;
+ (BOOL)canInitWithData:(id)arg1;
+ (id)imageUnfilteredTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
+ (id)_PICTDataFromImageData:(id)arg1 ofType:(id)arg2;
+ (id)_imageDataFromPICTData:(id)arg1 toType:(id)arg2;
- (id)init;
- (void)dealloc;
- (id)bitmapImageRecordForPICTData:(id)arg1;
- (id)newBitmapImageRepForHeight:(long long)arg1 width:(long long)arg2 data:(id)arg3;
- (BOOL)_common64BitInit;
- (id)initWithData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)boundingBox;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct CGPoint)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)_isValid;
- (long long)_uncachedSize;
- (void)setAlpha:(BOOL)arg1;
- (BOOL)hasAlpha;
- (void)setOpaque:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)setBitsPerSample:(long long)arg1;
- (long long)bitsPerSample;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)PICTRepresentation;

@end

@interface NSPPDParse : NSObject
{
    CDStruct_d87b8232 inputStreamStack[17];
    CDStruct_d87b8232 *input;
    id delegate;
    CDStruct_815caf98 argBuf;
    CDStruct_815caf98 keyTran;
    CDStruct_815caf98 argTran;
}

+ (id)typeToUnixName:(id)arg1;
+ (id)unixToTypeName:(id)arg1;
+ (id)availablePPDTypeFiles;
+ (id)findPPDFileName:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)processKeyword:(char *)arg1 option:(char *)arg2 keyTran:(char *)arg3 arg:(char *)arg4 argTran:(char *)arg5 quotedArg:(BOOL)arg6;
- (id)growBuffer:(CDStruct_815caf98 *)arg1 current:(char **)arg2 end:(char **)arg3 factor:(float)arg4;
- (BOOL)getMoreInput;
- (BOOL)parseKey:(BOOL)arg1;
- (id)parseStream;
- (id)run;
- (id)openInclude:(id)arg1;
- (id)startInputStream:(id)arg1;
- (id)endInputStream;
- (id)readFromFile:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;

@end

@interface NSPSMatrix : NSObject <NSCoding>
{
    double matrixElements[12];
    struct _mFlags {
        unsigned int identity:1;
        unsigned int rotated:1;
        unsigned int rotationOnly:1;
        unsigned int _RESERVED:13;
    } mFlags;
}

+ (void)initialize;
- (id)init;
- (id)_doRotationOnly;
- (double)getRotationAngle;
- (void)scaleUnitSquareToSize:(struct CGSize)arg1;
- (void)translateOriginToPoint:(struct CGPoint)arg1;
- (void)rotateByAngle:(double)arg1;
- (id)scaleTo:(double)arg1:(double)arg2;
- (id)translateTo:(double)arg1:(double)arg2;
- (void)setFrameRotation:(double)arg1;
- (id)concat:(id)arg1;
- (id)send;
- (id)sendInv;
- (id)transform:(struct CGPoint *)arg1;
- (id)invTransform:(struct CGPoint *)arg1;
- (id)makeIdentity;
- (BOOL)identity;
- (BOOL)rotated;
- (id)transformRect:(struct CGRect *)arg1;
- (id)invTransformRect:(struct CGRect *)arg1;
- (id)_computeInv;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSPageLayout : NSObject
{
    NSMutableArray *_accessoryControllers;
    NSPrintInfo *_originalPrintInfo;
    id _delegate;
    SEL _didEndSelector;
    void *_contextInfo;
    NSPrintInfo *_presentedPrintInfo;
    NSWindowController *_windowController;
    id _reserved[4];
}

+ (id)pageLayout;
- (void)dealloc;
- (void)addAccessoryController:(id)arg1;
- (void)removeAccessoryController:(id)arg1;
- (id)accessoryControllers;
- (void)beginSheetWithPrintInfo:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)_sheet:(id)arg1 didEndWithResult:(long long)arg2 contextInfo:(void *)arg3;
- (long long)runModalWithPrintInfo:(id)arg1;
- (long long)runModal;
- (id)printInfo;

@end

@interface NSKitPanelController : NSObject
{
    NSPanel *panel;
}

- (id)panel;

@end

@interface NSPanel : NSWindow
{
}

+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
- (id)_initContent:(const struct CGRect *)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 contentView:(id)arg5;
- (id)_initContent:(const struct CGRect *)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 counterpart:(id)arg5;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)init;
- (BOOL)isFloatingPanel;
- (void)setFloatingPanel:(BOOL)arg1;
- (void)setBecomesKeyOnlyIfNeeded:(BOOL)arg1;
- (BOOL)becomesKeyOnlyIfNeeded;
- (void)resignKeyWindow;
- (BOOL)_toggleOrderedFrontMostWillOrderOut;
- (void)setWorksWhenModal:(BOOL)arg1;
- (BOOL)worksWhenModal;
- (void)cancel:(id)arg1;
- (BOOL)_showToolTip;
- (id)_setTempHidden:(BOOL)arg1;
- (id)_doSetAccessoryView:(id)arg1 topView:(id)arg2 bottomView:(id)arg3 previousKeyView:(id)arg4 oldView:(id *)arg5;
- (id)_doSetAccessoryView:(id)arg1 topView:(id)arg2 bottomView:(id)arg3 oldView:(id *)arg4;
- (id)_replaceAccessoryView:(id)arg1 with:(id)arg2 topView:(id)arg3 bottomView:(id)arg4 previousKeyView:(id)arg5;

@end

@interface NSMutableParagraphStyle : NSParagraphStyle
{
}

- (void)setParagraphStyle:(id)arg1;
- (void)setLineSpacing:(double)arg1;
- (void)setParagraphSpacing:(double)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setHeadIndent:(double)arg1;
- (void)setTailIndent:(double)arg1;
- (void)setFirstLineHeadIndent:(double)arg1;
- (void)setMinimumLineHeight:(double)arg1;
- (void)setMaximumLineHeight:(double)arg1;
- (void)setLineBreakMode:(unsigned long long)arg1;
- (void)setLineHeightMultiple:(double)arg1;
- (void)setParagraphSpacingBefore:(double)arg1;
- (void)setDefaultTabInterval:(double)arg1;
- (void)setTextBlocks:(id)arg1;
- (void)setTextLists:(id)arg1;
- (void)_mutateTabStops;
- (void)addTabStop:(id)arg1;
- (void)removeTabStop:(id)arg1;
- (void)setTabStops:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setHyphenationFactor:(float)arg1;
- (void)setTighteningFactorForTruncation:(float)arg1;
- (void)setHeaderLevel:(long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    double _lineSpacing;
    double _paragraphSpacing;
    double _headIndent;
    double _tailIndent;
    double _firstLineHeadIndent;
    double _minimumLineHeight;
    double _maximumLineHeight;
    NSArray *_tabStops;
    struct {
        unsigned int alignment:4;
        unsigned int lineBreakMode:4;
        unsigned int tabStopsIsMutable:1;
        unsigned int isNaturalDirection:1;
        unsigned int rightToLeftDirection:1;
        unsigned int fixedMultiple:2;
        unsigned int refCount:19;
        unsigned int :32;
    } _flags;
    double _defaultTabInterval;
    id _extraData;
}

+ (void)initialize;
+ (id)defaultParagraphStyle;
+ (long long)_defaultWritingDirection;
+ (long long)defaultWritingDirectionForLanguage:(id)arg1;
- (void)_allocExtraData;
- (void)_deallocExtraData;
- (id)_initWithParagraphStyle:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (double)lineSpacing;
- (double)paragraphSpacing;
- (unsigned long long)alignment;
- (double)headIndent;
- (double)tailIndent;
- (id)tabStops;
- (double)firstLineHeadIndent;
- (double)minimumLineHeight;
- (double)maximumLineHeight;
- (unsigned long long)lineBreakMode;
- (long long)baseWritingDirection;
- (double)lineHeightMultiple;
- (double)paragraphSpacingBefore;
- (double)defaultTabInterval;
- (id)textBlocks;
- (id)textLists;
- (float)hyphenationFactor;
- (float)tighteningFactorForTruncation;
- (long long)headerLevel;
- (BOOL)_isSuitableForFastStringDrawingWithAlignment:(unsigned long long *)arg1 lineBreakMode:(unsigned long long *)arg2 tighteningFactorForTruncation:(double *)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSParagraphStyleExtraData : NSObject
{
    double _lineHeightMultiple;
    double _paragraphSpacingBefore;
    double _hyphenationFactor;
    double _tighteningFactor;
    long long _headerLevel;
    NSArray *_textBlocks;
    NSArray *_textLists;
}

@end

@interface NSTextTab : NSObject <NSCopying, NSCoding>
{
    struct {
        unsigned int alignment:4;
        unsigned int refCount:24;
        unsigned int unused:4;
        unsigned int :32;
    } _flags;
    double _location;
    id _reserved;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(unsigned long long)arg1 location:(double)arg2;
- (id)initWithTextAlignment:(unsigned long long)arg1 location:(double)arg2 options:(id)arg3;
- (unsigned long long)alignment;
- (id)options;
- (void)dealloc;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)location;
- (unsigned long long)tabStopType;
- (id)accessibilityRulerMarkerType;
- (id)accessibilityRulerMarkerTypeDescription;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface NSPasteboard : NSObject
{
    id _pboard;
    int _gen;
    id _owners;
    long long _cachedTypeNameChangeCount;
    id _cachedTypeNames;
    NSMutableDictionary *_promiseTypeNamesByIdentifier;
    id _support;
    id _pasteboardItems;
    void *_reserved[3];
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
+ (id)_tmpPasteboardWithCFPasteboard:(struct __CFPasteboard *)arg1;
+ (id)_pasteboardWithName:(id)arg1;
+ (id)generalPasteboard;
+ (id)pasteboardWithUniqueName;
+ (id)pasteboardWithName:(id)arg1;
+ (void)_provideAllPromisedData:(id)arg1;
+ (void)initialize;
+ (id)_convertPropertyListToData:(id)arg1;
+ (id)_convertDataToPropertyList:(id)arg1;
+ (id)_convertStringToData:(id)arg1;
+ (id)_convertDataToString:(id)arg1;
+ (BOOL)_isValidPasteboardUTI:(id)arg1 logStringMessage:(id)arg2;
- (void)dealloc;
- (void)_clearOutstandingPromises;
- (void)_removeFromGlobalTable;
- (void)releaseGlobally;
- (id)name;
- (struct __CFPasteboard *)_cfPasteboard;
- (long long)_currentGeneration;
- (long long)changeCount;
- (id)_promiseTypeNameForIdentifier:(struct __CFString *)arg1;
- (id)_pasteboardItems;
- (BOOL)_setData:(id)arg1 forType:(id)arg2 index:(unsigned long long)arg3 usesPboardTypes:(BOOL)arg4;
- (long long)_setOwner:(id)arg1 forTypes:(id)arg2 atIndex:(unsigned long long)arg3 selector:(SEL)arg4 usesPboardTypes:(BOOL)arg5;
- (void)_updateTypeCacheIfNeeded;
- (id)_cachedTypeNameUnion;
- (id)_typesAtIndex:(unsigned long long)arg1 usesPboardTypes:(BOOL)arg2;
- (id)_availableTypeFromArray:(id)arg1 inExistingTypes:(id)arg2;
- (id)_dataWithoutConversionForTypeIdentifier:(id)arg1 index:(unsigned long long)arg2;
- (id)_dataWithoutConversionForTypeIdentifier:(id)arg1;
- (id)_combinedPasteboardDataForTypeIdentifier:(id)arg1;
- (BOOL)_canRequestDataForType:(id)arg1 index:(unsigned long long)arg2 usesPboardTypes:(BOOL)arg3;
- (id)_dataForType:(id)arg1 index:(unsigned long long)arg2 usesPboardTypes:(BOOL)arg3;
- (id)_dataWithoutConversionForType:(id)arg1;
- (long long)clearContents;
- (BOOL)writeObjects:(id)arg1;
- (BOOL)_contentsOfURL:(id)arg1 conformToTypeIdentifiers:(id)arg2;
- (id)readObjectsForClasses:(id)arg1 options:(id)arg2;
- (id)pasteboardItems;
- (unsigned long long)indexOfPasteboardItem:(id)arg1;
- (id)_conformingTypeIdentifiers;
- (BOOL)canReadItemWithDataConformingToTypes:(id)arg1;
- (BOOL)canReadObjectForClasses:(id)arg1 options:(id)arg2;
- (long long)declareTypes:(id)arg1 owner:(id)arg2;
- (long long)addTypes:(id)arg1 owner:(id)arg2;
- (id)types;
- (id)availableTypeFromArray:(id)arg1;
- (BOOL)setData:(id)arg1 forType:(id)arg2;
- (id)dataForType:(id)arg1;
- (BOOL)setDataProvider:(id)arg1 forTypes:(id)arg2;
- (BOOL)setPropertyList:(id)arg1 forType:(id)arg2;
- (id)propertyListForType:(id)arg1;
- (BOOL)setString:(id)arg1 forType:(id)arg2;
- (id)stringForType:(id)arg1;

@end

@interface _NSPasteboardOwnersCollection : NSObject
{
    NSMapTable *_ownersByIndex;
    NSMapTable *_ownerCounts;
    NSPasteboard *_pasteboard;
}

- (id)initWithPasteboard:(id)arg1;
- (void)dealloc;
- (void)_decrementCountForOwner:(id)arg1;
- (void)_incrementCountForOwner:(id)arg1;
- (void)_setOwner:(id)arg1 forTypeIdentifier:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_removeOwnerForTypeIdentifier:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_handleOwnershipChange;

@end

@interface _NSPasteboardItemCollection : NSObject
{
    NSMapTable *_sparsePasteboardItems;
    long long _cachedItemGenerationCount;
}

- (id)init;
- (void)dealloc;
- (void)_addPasteboardItem:(id)arg1 atIndex:(unsigned long long)arg2 generationCount:(long long)arg3;
- (id)_pasteboardItemAtIndex:(unsigned long long)arg1 pasteboard:(id)arg2 generationCount:(long long)arg3;
- (id)_pasteboardItemsWithItemCount:(unsigned long long)arg1 pasteboard:(id)arg2 generationCount:(long long)arg3;

@end

@interface _NSPasteboardTypeCache : NSObject
{
    NSMutableArray *_cachedTypeNames;
    NSMutableSet *_cachedTypeNameUnion;
    NSMutableSet *_conformingTypeIdentifiers;
    NSMapTable *_cachedRequestOnlyTypeNames;
}

- (id)init;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSMutableSet *_cachedTypeNameUnion; // @dynamic _cachedTypeNameUnion;
- (id)_conformingTypeIdentifiers;
- (void)_addRequestOnlyType:(id)arg1 forIndex:(long long)arg2;
- (id)_requestOnlyTypesForIndex:(long long)arg1;
@property(retain, nonatomic) NSMutableArray *_cachedTypeNames; // @synthesize _cachedTypeNames;

@end

@interface _NSFilePromiseTypeConverter : NSObject
{
}

+ (id)_getConvertedDataFromPasteboard:(id)arg1;

@end

@interface _NSPromiseContentsTypeConverter : NSObject
{
}

+ (id)_getConvertedDataFromPasteboard:(id)arg1;

@end

@interface _NSStringPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)_getConvertedDataFromPasteboard:(id)arg1;

@end

@interface _NSRTFPboardTypeConverter : _NSPboardTypeConverter <NSPasteboardItemDataProvider>
{
}

+ (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
+ (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3;
+ (id)_getConvertedDataFromPasteboard:(id)arg1;
+ (id)_getConvertedDataFromPasteboard:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)pasteboard:(id)arg1 item:(id)arg2 provideDataForType:(id)arg3;

@end

@interface _NSColorPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)arg1 fromPasteboard:(id)arg2;

@end

@interface _NSURLPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (void)_setConvertedData:(id)arg1 pboard:(struct __CFPasteboard *)arg2 generation:(long long)arg3 inItem:(void *)arg4;
+ (id)_getConvertedDataFromPasteboard:(id)arg1;

@end

@interface _NSFilenamePboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)arg1 fromPasteboard:(id)arg2;
+ (void)_setConvertedData:(id)arg1 pboard:(struct __CFPasteboard *)arg2 generation:(long long)arg3 inItem:(void *)arg4;
+ (id)_getConvertedDataFromPasteboard:(id)arg1;

@end

@interface _NSAsciiPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)arg1 fromPasteboard:(id)arg2;

@end

@interface _NSPboardTypeConverter : NSObject
{
}

+ (id)dataForType:(id)arg1 fromPasteboard:(id)arg2;
+ (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;

@end

@interface _NSPboardImageTypeConverter : NSObject
{
    NSString *_sourceType;
}

+ (id)imageTypeConverterForType:(id)arg1;
- (id)initWithType:(id)arg1;
- (void)dealloc;
- (id)_convertImageData:(id)arg1 toDataOfType:(id)arg2;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;

@end

@interface NSPersistentDocument : NSDocument
{
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_managedObjectContext;
    id _store;
    void *_reserved;
    void *_reserved2;
    void *_reserved3;
    void *_reserved4;
}

- (id)init;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)_isBeingEdited;
- (void)_discardEditing;
- (void)_commitEditing:(id)arg1;
- (void)_documentEditor:(id)arg1 didCommit:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)_commitEditingWithSuccessInvocation:(id)arg1 failureInvocation:(id)arg2;
- (void)setManagedObjectContext:(id)arg1;
- (id)managedObjectContext;
- (id)managedObjectModel;
- (id)persistentStoreTypeForFileType:(id)arg1;
- (id)_persistentStoreCoordinator;
- (BOOL)configurePersistentStoreCoordinatorForURL:(id)arg1 ofType:(id)arg2 modelConfiguration:(id)arg3 storeOptions:(id)arg4 error:(id *)arg5;
- (void)_automigrationCleanup:(id)arg1;
- (BOOL)hasUndoManager;
- (void)setHasUndoManager:(BOOL)arg1;
- (void)setUndoManager:(id)arg1;
- (void)setFileURL:(id)arg1;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface NSPopUpButton : NSButton
{
    struct __pbFlags {
        unsigned int needsPullsDownFromTemplate:1;
        unsigned int RESERVED:31;
    } _pbFlags;
    id _popupReserved;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 pullsDown:(BOOL)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)_fixTargetsForMenu:(id)arg1;
- (void)setMenu:(id)arg1;
- (id)menu;
- (void)setPullsDown:(BOOL)arg1;
- (BOOL)pullsDown;
- (void)setAutoenablesItems:(BOOL)arg1;
- (BOOL)autoenablesItems;
- (void)setPreferredEdge:(unsigned long long)arg1;
- (unsigned long long)preferredEdge;
- (void)addItemWithTitle:(id)arg1;
- (void)addItemsWithTitles:(id)arg1;
- (void)insertItemWithTitle:(id)arg1 atIndex:(long long)arg2;
- (void)removeItemWithTitle:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeAllItems;
- (id)itemArray;
- (long long)numberOfItems;
- (long long)indexOfItem:(id)arg1;
- (long long)indexOfItemWithTitle:(id)arg1;
- (long long)indexOfItemWithTag:(long long)arg1;
- (long long)indexOfItemWithRepresentedObject:(id)arg1;
- (long long)indexOfItemWithTarget:(id)arg1 andAction:(SEL)arg2;
- (id)itemAtIndex:(long long)arg1;
- (id)itemWithTitle:(id)arg1;
- (id)lastItem;
- (void)selectItem:(id)arg1;
- (void)selectItemAtIndex:(long long)arg1;
- (void)selectItemWithTitle:(id)arg1;
- (BOOL)selectItemWithTag:(long long)arg1;
- (void)setTitle:(id)arg1;
- (id)selectedItem;
- (long long)indexOfSelectedItem;
- (void)synchronizeTitleAndSelectedItem;
- (id)itemTitleAtIndex:(long long)arg1;
- (id)itemTitles;
- (id)titleOfSelectedItem;
- (void)sizeToFit;
- (void)performClick:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (BOOL)_allowsContextMenus;
- (void)_updateMenuUniquing;
- (id)_setWindow:(id)arg1;
- (void)_windowChangedKeyState;
- (id)title;
- (id)image;
- (long long)state;
- (long long)selectedTag;

@end

@interface NSPopUpButtonCell : NSMenuItemCell
{
    NSMenu *_menu;
    int _selectedIndex;
    struct __pbcFlags {
        unsigned int pullsDown:1;
        unsigned int preferredEdge:3;
        unsigned int menuIsAttached:1;
        unsigned int usesItemFromMenu:1;
        unsigned int altersStateOfSelectedItem:1;
        unsigned int decoding:1;
        unsigned int arrowPosition:2;
        unsigned int ignoreMenuLayout:1;
        unsigned int drawing:1;
        unsigned int menuShouldBeUniquedAgainstMain:1;
        unsigned int RESERVED:19;
    } _pbcFlags;
    id _popupReserved;
}

+ (void)initialize;
+ (id)_attachedCell;
- (id)initTextCell:(id)arg1 pullsDown:(BOOL)arg2;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_fixTargetsForMenu:(id)arg1;
- (void)_clearTargetsFromMenuPointingAtSelf:(id)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (void)setMenu:(id)arg1;
- (id)menu;
- (id)menuView;
- (void)setFont:(id)arg1;
- (void)setPullsDown:(BOOL)arg1;
- (BOOL)_shouldDrawTextWithDisabledAppearance;
- (BOOL)pullsDown;
- (void)setAutoenablesItems:(BOOL)arg1;
- (BOOL)autoenablesItems;
- (void)setPreferredEdge:(unsigned long long)arg1;
- (unsigned long long)preferredEdge;
- (void)setUsesItemFromMenu:(BOOL)arg1;
- (BOOL)usesItemFromMenu;
- (void)setMenuItem:(id)arg1;
- (void)setAltersStateOfSelectedItem:(BOOL)arg1;
- (BOOL)altersStateOfSelectedItem;
- (void)addItemWithTitle:(id)arg1;
- (void)addItemsWithTitles:(id)arg1;
- (void)insertItemWithTitle:(id)arg1 atIndex:(long long)arg2;
- (void)_itemAdded:(id)arg1;
- (void)removeItemWithTitle:(id)arg1;
- (void)removeItemAtIndex:(long long)arg1;
- (void)removeAllItems;
- (void)_itemRemoved:(id)arg1;
- (void)_itemChanged:(id)arg1;
- (id)itemArray;
- (long long)numberOfItems;
- (long long)indexOfItem:(id)arg1;
- (long long)indexOfItemWithTitle:(id)arg1;
- (long long)indexOfItemWithTag:(long long)arg1;
- (long long)indexOfItemWithRepresentedObject:(id)arg1;
- (long long)indexOfItemWithTarget:(id)arg1 andAction:(SEL)arg2;
- (id)itemAtIndex:(long long)arg1;
- (id)itemWithTitle:(id)arg1;
- (id)lastItem;
- (void)_rawSetSelectedIndex:(long long)arg1;
- (void)selectItem:(id)arg1;
- (void)selectItemAtIndex:(long long)arg1;
- (void)selectItemWithTitle:(id)arg1;
- (BOOL)selectItemWithTag:(long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setImage:(id)arg1;
- (id)selectedItem;
- (long long)indexOfSelectedItem;
- (void)synchronizeTitleAndSelectedItem;
- (id)itemTitleAtIndex:(long long)arg1;
- (id)itemTitles;
- (id)titleOfSelectedItem;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)_positionsMenuAsPullDown;
- (struct CGPoint)_menuLocationForEvent:(id)arg1 inCellFrame:(struct CGRect)arg2 ofView:(id)arg3;
- (double)_menuMinimumWidthForEvent:(id)arg1 inCellFrame:(struct CGRect)arg2 ofView:(id)arg3;
- (unsigned long long)_popUpMenuFlagsForEvent:(id)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGPoint)_locationForPopUpMenuWithFrame:(struct CGRect)arg1;
- (void)_handleWillPopUpNotification;
- (void)attachPopUpWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)dismissPopUp;
- (BOOL)keyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_doPopupSearchString;
- (id)_indicatorImageForCellHeight:(double)arg1;
- (double)keyEquivalentWidth;
- (struct CGRect)stateImageRectForBounds:(struct CGRect)arg1;
- (BOOL)_alwaysShowBezelForCurrentBezelStyleAndState;
- (double)_bezelAndIndicatorAreaWidthForCellFrame:(struct CGRect)arg1;
- (double)_imageToBezelOrIndicatorPadding;
- (double)_titleToBezelOrIndicatorPadding;
- (double)_bezelTopOffset;
- (double)_bezelBottomOffset;
- (double)_bezelTopPadding;
- (double)_bezelBottomPadding;
- (BOOL)_useTigerMetricsForLeftUnborderedOffset;
- (double)_leftBezelToTitleOrImageHorizontalOffset;
- (double)_imageToTitleHorizontalOffset;
- (struct CGSize)_popupImageSizeForCellFrame:(struct CGRect)arg1;
- (id)attributedTitle;
- (struct CGRect)_availableContentRectForCellFrame:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (double)_menuLocationHorizontalOffset;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_separatorRectForCellFrame:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
- (struct CGRect)keyEquivalentRectForBounds:(struct CGRect)arg1;
- (double)_extraWidthForCellHeight:(double)arg1;
- (BOOL)_shouldTweakRoundingBehaviorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)_coreUIDefaultIndicatorImage;
- (id)_defaultIndicatorImage;
- (id)_indicatorImage;
- (double)_preferredPopupHeight;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (BOOL)_popupHeightIsFlexible;
- (struct CGPoint)_indicatorOffset;
- (struct CGSize)_defaultIndicatorSize;
- (unsigned long long)_applicableArrowLocation;
- (struct CGRect)_indicatorFrameForCellFrame:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
- (struct CGRect)_indicatorFrameForCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawStandardPopUpBorderWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_shouldDrawIndicatorOnlyForFrame:(struct CGRect)arg1;
- (struct __CFDictionary *)_coreUIBezelDrawOptionsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBorderAndBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (BOOL)_obeysHiddenBit;
- (BOOL)isOpaque;
- (unsigned long long)_preferredFocusLocationMask;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)performClickWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_popUpItemAction:(id)arg1;
- (void)_menuWillSendAction:(id)arg1;
- (BOOL)_canBecomeDefaultButtonCell;
- (BOOL)_allowsContextMenus;
- (id)_highlightColor;
- (id)_highlightTextColor;
- (BOOL)validateMenuItem:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (unsigned long long)arrowPosition;
- (void)setArrowPosition:(unsigned long long)arg1;
- (void)_setMenuShouldBeUniquedAgainstMainMenu:(BOOL)arg1;
- (id)_keyEquivalentUniquerCreatingIfNecessary:(BOOL)arg1;
- (void)_createAndPopulateKeyEquivalentUniquerIfNecessary;

@end

@interface NSPreferences : NSObject
{
    NSWindow *_preferencesPanel;
    NSBox *_preferenceBox;
    NSMatrix *_moduleMatrix;
    NSButtonCell *_okButton;
    NSButtonCell *_cancelButton;
    NSButtonCell *_applyButton;
    NSMutableArray *_preferenceTitles;
    NSMutableArray *_preferenceModules;
    NSMutableDictionary *_masterPreferenceViews;
    NSMutableDictionary *_currentSessionPreferenceViews;
    NSBox *_originalContentView;
    BOOL _isModal;
    double _constrainedWidth;
    id _currentModule;
    void *_reserved;
}

+ (id)sharedPreferences;
+ (void)setDefaultPreferencesClass:(Class)arg1;
+ (Class)defaultPreferencesClass;
- (id)init;
- (void)dealloc;
- (void)addPreferenceNamed:(id)arg1 owner:(id)arg2;
- (void)_setupToolbar;
- (void)_setupUI;
- (struct CGSize)preferencesContentSize;
- (void)showPreferencesPanel;
- (void)showPreferencesPanelForOwner:(id)arg1;
- (long long)showModalPreferencesPanelForOwner:(id)arg1;
- (long long)showModalPreferencesPanel;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;
- (void)apply:(id)arg1;
- (void)_selectModuleOwner:(id)arg1;
- (id)windowTitle;
- (void)confirmCloseSheetIsDone:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (BOOL)usesButtons;
- (id)_itemIdentifierForModule:(id)arg1;
- (void)toolbarItemClicked:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;

@end

@interface NSPreferencesModule : NSObject <NSPreferencesModule>
{
    NSBox *_preferencesView;
    struct CGSize _minSize;
    BOOL _hasChanges;
    void *_reserved;
}

+ (id)sharedInstance;
- (void)dealloc;
- (void)finalize;
- (id)init;
- (id)preferencesNibName;
- (void)setPreferencesView:(id)arg1;
- (id)viewForPreferenceNamed:(id)arg1;
- (id)imageForPreferenceNamed:(id)arg1;
- (id)titleForIdentifier:(id)arg1;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (void)didChange;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (BOOL)isResizable;

@end

@interface NSPrintInfo : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_attributes;
    id _moreVars;
}

+ (void)initialize;
+ (void)setSharedPrintInfo:(id)arg1;
+ (id)sharedPrintInfo;
+ (id)defaultPrinter;
- (void)_setAttributesNoCopy:(id)arg1 pageFormat:(struct OpaquePMPageFormat *)arg2 orFlattenedData:(id)arg3 printSettings:(struct OpaquePMPrintSettings *)arg4 orFlattenedData:(id)arg5;
- (id)_initWithAttributesNoCopy:(id)arg1 flattenedPageFormatData:(id)arg2 printSettingsData:(id)arg3;
- (void)_setBool:(BOOL)arg1 ifNoAttributeForKey:(id)arg2;
- (void)_setFloat:(float)arg1 ifNoAttributeForKey:(id)arg2;
- (void)_setInt:(int)arg1 ifNoAttributeForKey:(id)arg2;
- (void)_setObject:(id)arg1 ifNoAttributeForKey:(id)arg2;
- (void)_validatePaginationAttributes;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)dictionary;
- (void)setPaperName:(id)arg1;
- (void)setPaperSize:(struct CGSize)arg1;
- (void)setOrientation:(unsigned long long)arg1;
- (void)setScalingFactor:(double)arg1;
- (id)paperName;
- (struct CGSize)paperSize;
- (unsigned long long)orientation;
- (double)scalingFactor;
- (void)setLeftMargin:(double)arg1;
- (void)setRightMargin:(double)arg1;
- (void)setTopMargin:(double)arg1;
- (void)setBottomMargin:(double)arg1;
- (double)leftMargin;
- (double)rightMargin;
- (double)topMargin;
- (double)bottomMargin;
- (void)setHorizontallyCentered:(BOOL)arg1;
- (void)setVerticallyCentered:(BOOL)arg1;
- (BOOL)isHorizontallyCentered;
- (BOOL)isVerticallyCentered;
- (void)setHorizontalPagination:(unsigned long long)arg1;
- (void)setVerticalPagination:(unsigned long long)arg1;
- (unsigned long long)horizontalPagination;
- (unsigned long long)verticalPagination;
- (void)setJobDisposition:(id)arg1;
- (id)jobDisposition;
- (BOOL)isSelectionOnly;
- (void)setSelectionOnly:(BOOL)arg1;
- (void)setPrinter:(id)arg1;
- (id)printer;
- (void)setUpPrintOperationDefaultValues;
- (id)localizedPaperName;
- (struct CGRect)imageablePageBounds;
- (id)printSettings;
- (void *)PMPrintSession;
- (void *)PMPageFormat;
- (void *)PMPrintSettings;
- (void)updateFromPMPageFormat;
- (void)updateFromPMPrintSettings;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)_compatibility_initWithUnkeyedCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSPrintInfoAdditionalIVars : NSObject
{
    struct OpaquePMPrintSession *printSession;
    struct OpaquePMPageFormat *pageFormat;
    struct OpaquePMPrintSettings *printSettings;
    NSData *flattenedPageFormatData;
    NSData *flattenedPrintSettingsData;
    BOOL printSessionIsReconciled;
    BOOL pageFormatIsReconciled;
    BOOL printSettingsIsReconciled;
    BOOL pageFormatIsValidated;
    BOOL printSettingsIsValidated;
    NSPrintInfoDictionaryProxy *attributesDictionaryProxy;
    NSPrintInfoDictionaryProxy *printSettingsDictionaryProxy;
    BOOL printerWasSetExplicitly;
}

@end

@interface NSConcretePrintOperation : NSPrintOperation
{
    BOOL canSpawnSeparateThread;
    BOOL _showsPrintPanel;
    BOOL _showsProgressPanel;
    NSGraphicsContext *_graphicsContext;
    long long _pageOrder;
    NSPrintPanel *_printPanel;
    id _accessoryView;
    id _thumbnailView;
    void *jobVars;
    NSView *_view;
    NSPrintInfo *_printInfo;
    BOOL _isCopying;
    struct CGRect _copyingBounds;
    BOOL _copyingToEPSNotPDF;
    NSMutableData *_copyingData;
    NSString *_copyingPath;
    NSString *_jobStyleHint;
    NSString *_jobTitle;
    NSProgressPanel *_progressPanel;
    struct _NSModalSession *_progressPanelAppModalSession;
    struct {
        NSWindow *_field1;
        id _field2;
        SEL _field3;
        void *_field4;
    } *_modalContextInfo;
    BOOL _didRunToCompletion;
    NSPrintOperationPrintEventRetrofitInfo *_printEventRetrofitInfo;
    BOOL _paginationIsValid;
    BOOL _viewKnowsPages;
    long long _firstPageNumber;
    long long _lastPageNumber;
    double _pageScaling;
    BOOL _jobPageNumbersAreValid;
    long long _firstJobPageNumber;
    long long _lastJobPageNumber;
    long long _firstRenderPageNumber;
    long long _lastRenderPageNumber;
    long long _currentPageNumber;
    struct CGRect _currentPageBounds;
    BOOL _isLockingFocus;
    BOOL _isRenderingBorder;
    BOOL _wasCancelledByUser;
}

- (id)_initWithView:(id)arg1 printInfo:(id)arg2;
- (id)_initWithView:(id)arg1 printInfo:(id)arg2 epsNotPDF:(BOOL)arg3 bounds:(struct CGRect)arg4 data:(id)arg5 orPath:(id)arg6;
- (void)dealloc;
- (void)finalize;
- (BOOL)isCopyingOperation;
- (void)setJobTitle:(id)arg1;
- (id)jobTitle;
- (void)setShowsPrintPanel:(BOOL)arg1;
- (BOOL)showsPrintPanel;
- (void)setShowsProgressPanel:(BOOL)arg1;
- (BOOL)showsProgressPanel;
- (void)setPrintPanel:(id)arg1;
- (BOOL)_showsPreviewByDefault;
- (id)printPanel;
- (void)setCanSpawnSeparateThread:(BOOL)arg1;
- (BOOL)canSpawnSeparateThread;
- (void)setPageOrder:(long long)arg1;
- (long long)pageOrder;
- (id)_preparedPrintPanel;
- (void)_createAndShowProgressPanelIfAppropriate:(BOOL)arg1;
- (void)_setPageOrderFromPrintInfo;
- (BOOL)_renderView;
- (void)_finishModalOperation;
- (void)_continueModalOperationToTheEnd:(id)arg1;
- (void)_continueModalOperationPastPrintPanel;
- (void)runOperationModalForWindow:(id)arg1 delegate:(id)arg2 didRunSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)_printPanel:(id)arg1 didEndAndReturn:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)runOperation;
- (void)_progressPanelWasCancelled:(id)arg1 contextInfo:(void *)arg2;
- (void)_progressPanel:(id)arg1 didEndAndReturn:(long long)arg2 contextInfo:(void *)arg3;
- (id)view;
- (id)printInfo;
- (void)setPrintInfo:(id)arg1;
- (id)context;
- (struct _NSRange)pageRange;
- (long long)currentPage;
- (id)createContext;
- (void)destroyContext;
- (BOOL)deliverResult;
- (void)cleanUpOperation;

@end

@interface NSPrintOperation : NSObject
{
}

+ (id)printOperationWithView:(id)arg1 printInfo:(id)arg2;
+ (id)PDFOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toData:(id)arg3 printInfo:(id)arg4;
+ (id)PDFOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toPath:(id)arg3 printInfo:(id)arg4;
+ (id)EPSOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toData:(id)arg3 printInfo:(id)arg4;
+ (id)EPSOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toPath:(id)arg3 printInfo:(id)arg4;
+ (id)printOperationWithView:(id)arg1;
+ (id)PDFOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toData:(id)arg3;
+ (id)EPSOperationWithView:(id)arg1 insideRect:(struct CGRect)arg2 toData:(id)arg3;
+ (id)currentOperation;
+ (void)setCurrentOperation:(id)arg1;
- (BOOL)isCopyingOperation;
- (void)setJobTitle:(id)arg1;
- (id)jobTitle;
- (void)setShowsPrintPanel:(BOOL)arg1;
- (BOOL)showsPrintPanel;
- (void)setShowsProgressPanel:(BOOL)arg1;
- (BOOL)showsProgressPanel;
- (void)setPrintPanel:(id)arg1;
- (id)printPanel;
- (void)setCanSpawnSeparateThread:(BOOL)arg1;
- (BOOL)canSpawnSeparateThread;
- (void)setPageOrder:(long long)arg1;
- (long long)pageOrder;
- (void)runOperationModalForWindow:(id)arg1 delegate:(id)arg2 didRunSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (BOOL)runOperation;
- (id)view;
- (id)printInfo;
- (void)setPrintInfo:(id)arg1;
- (id)context;
- (struct _NSRange)pageRange;
- (long long)currentPage;
- (id)createContext;
- (void)destroyContext;
- (BOOL)deliverResult;
- (void)cleanUpOperation;

@end

@interface NSPrintOperationPrintEventRetrofitInfo : NSObject
{
    NSDictionary *printSettings;
    BOOL showPrintPanel;
    id sender;
    id delegate;
    SEL didPrintSelector;
    void *contextInfo;
}

- (id)initWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 sender:(id)arg3 delegate:(id)arg4 didPrintSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)dealloc;

@end

@interface NSPrintPanel : NSObject
{
    NSMutableArray *_accessoryControllers;
    id _previewController;
    NSView *_thumbnailView;
    long long _options;
    NSString *_defaultButtonTitle;
    NSString *_helpAnchor;
    NSString *_jobStyleHint;
    NSPrintInfo *_originalPrintInfo;
    id _delegate;
    SEL _didEndSelector;
    void *_contextInfo;
    NSPrintInfo *_presentedPrintInfo;
    NSWindowController *_windowController;
    id _reserved[2];
}

+ (id)printPanel;
- (id)init;
- (void)dealloc;
- (void)addAccessoryController:(id)arg1;
- (void)removeAccessoryController:(id)arg1;
- (id)accessoryControllers;
- (void)setOptions:(long long)arg1;
- (long long)options;
- (void)setDefaultButtonTitle:(id)arg1;
- (id)defaultButtonTitle;
- (void)setHelpAnchor:(id)arg1;
- (id)helpAnchor;
- (void)setJobStyleHint:(id)arg1;
- (id)jobStyleHint;
- (unsigned int)_optionsForShowingAsSheet:(BOOL)arg1;
- (void)beginSheetWithPrintInfo:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)_sheet:(id)arg1 didEndWithResult:(long long)arg2 contextInfo:(void *)arg3;
- (long long)runModalWithPrintInfo:(id)arg1;
- (long long)runModal;
- (id)printInfo;

@end

@interface NSPrintPanelOldAccessoryController : NSViewController <NSPrintPanelAccessorizing>
{
}

- (id)localizedSummaryItems;
- (id)keyPathsForValuesAffectingPreview;

@end

@interface NSPrinter : NSObject <NSCopying, NSCoding>
{
    NSString *_printerName;
    void *_printer;
    NSDictionary *_cachedDeviceDescription;
    int _ppdCreationNum;
    void *_ppdNodes;
    void *_ppdPriv;
    id _reserved[3];
}

+ (id)printerNames;
+ (id)printerTypes;
+ (id)printerWithName:(id)arg1;
+ (id)printerWithType:(id)arg1;
- (id)_initWithName:(id)arg1 printer:(struct OpaquePMPrinter *)arg2;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)type;
- (long long)languageLevel;
- (struct CGSize)pageSizeForPaper:(id)arg1;
- (unsigned long long)statusForTable:(id)arg1;
- (BOOL)isKey:(id)arg1 inTable:(id)arg2;
- (BOOL)booleanForKey:(id)arg1 inTable:(id)arg2;
- (float)floatForKey:(id)arg1 inTable:(id)arg2;
- (int)intForKey:(id)arg1 inTable:(id)arg2;
- (struct CGRect)rectForKey:(id)arg1 inTable:(id)arg2;
- (struct CGSize)sizeForKey:(id)arg1 inTable:(id)arg2;
- (id)stringForKey:(id)arg1 inTable:(id)arg2;
- (id)stringListForKey:(id)arg1 inTable:(id)arg2;
- (id)deviceDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)_compatibility_initWithUnkeyedCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSProgressIndicator : NSView
{
    BOOL _isBezeled;
    BOOL _isIndeterminate;
    BOOL _threadedAnimation;
    double _minimum;
    double _maximum;
    double _value;
    int _animationIndex;
    double _animationDelay;
    id _timer;
    double _drawingWidth;
    id _roundColor;
    id _reserved;
    struct __progressIndicatorFlags {
        unsigned int isSpinning:1;
        unsigned int isVector:1;
        unsigned int isLocked:1;
        unsigned int controlTint:3;
        unsigned int controlSize:2;
        unsigned int style:1;
        unsigned int _delayedStartup:1;
        unsigned int _orderOutForResize:1;
        unsigned int hideWhenStopped:1;
        unsigned int revive:1;
        unsigned int _temporarilyBlockHeartBeating:1;
        unsigned int _isHidden:1;
        unsigned int _isHeartBeatInstalled:1;
        unsigned int _lastFrame:8;
        unsigned int RESERVED:8;
    } _progressIndicatorFlags;
    id _NSProgressIndicatorReserved1;
}

+ (void)_controlTintChanged:(id)arg1;
+ (void)initialize;
+ (id)_createImage:(id)arg1:(id)arg2:(double)arg3;
+ (id)_barberImage:(double)arg1;
+ (id)_gaugeImage:(double)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (unsigned long long)style;
- (void)setStyle:(unsigned long long)arg1;
- (void)_commonInit;
- (void)dealloc;
- (void)_setSurface:(id)arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)_drawThemeBackground;
- (void)_drawThemeProgressArea:(BOOL)arg1;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)_windowChangedKeyState;
- (void)drawRect:(struct CGRect)arg1;
- (double)doubleValue;
- (void)_reconfigureAnimationState:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)usesVectorMovement;
- (void)setUsesVectorMovement:(BOOL)arg1;
- (void)setDoubleValue:(double)arg1;
- (void)incrementBy:(double)arg1;
- (BOOL)usesThreadedAnimation;
- (void)setUsesThreadedAnimation:(BOOL)arg1;
- (void)_startAnimationWithThread:(BOOL)arg1;
- (void)startAnimation:(id)arg1;
- (void)_stopAnimationWithWait:(BOOL)arg1;
- (void)stopAnimation:(id)arg1;
- (BOOL)isDisplayedWhenStopped;
- (void)setDisplayedWhenStopped:(BOOL)arg1;
- (void)_windowExposed:(id)arg1;
- (void)_animationIdler:(id)arg1;
- (double)minValue;
- (double)maxValue;
- (void)setMinValue:(double)arg1;
- (void)setMaxValue:(double)arg1;
- (BOOL)isIndeterminate;
- (void)setIndeterminate:(BOOL)arg1;
- (void)_drawWindowsGaugeRects:(struct CGRect)arg1;
- (void)_drawAnimationStep;
- (void)_drawProgressArea;
- (void)_drawFrame;
- (void)_drawRemainderArea;
- (struct CGRect)_getProgressFrame;
- (struct CGRect)_getRemainderFrame;
- (double)_getPosition:(double)arg1;
- (struct CGRect)_getGaugeFrame;
- (void)_fillGrayRect:(struct CGRect *)arg1 with:(long long)arg2;
- (void)sizeToFit;
- (void)_setupSurfaceAndStartSpinning:(BOOL)arg1;
- (void)_installHeartBeat:(BOOL)arg1;
- (void)setBezeled:(BOOL)arg1;
- (BOOL)isBezeled;
- (unsigned long long)controlTint;
- (void)setControlTint:(unsigned long long)arg1;
- (unsigned long long)controlSize;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setRoundDeterminateColor:(id)arg1;
- (id)roundDeterminateColor;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_systemColorChanged:(id)arg1;
- (BOOL)_isThreadedAnimationLooping;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_setWindow:(id)arg1;
- (void)_clipViewAncestorDidScroll:(id)arg1;
- (id)_invalidateGStatesForTree;
- (void)_surfaceResized:(id)arg1;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)_recursiveOrderFrontSurfacesForNonHiddenViews;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;

@end

@interface NSProgressIndicatorBinder : NSViewStateBinder
{
}

+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;

@end

@interface NSProgressPanel : NSPanel
{
    NSButton *cancelButton;
    NSTextField *captionTextField;
    NSProgressIndicator *progressIndicator;
    id cancellationDelegate;
    SEL cancellationSelector;
    void *cancellationContextInfo;
    BOOL wasCancelled;
}

+ (id)progressPanel;
- (void)setCancellationDelegate:(id)arg1 wasCancelledSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (id)captionTextField;
- (id)progressIndicator;
- (void)cancelButtonPressed:(id)arg1;

@end

@interface NSLeafProxy <NSCopying>
{
    Class isa;
    NSString *dir;
    NSString *file;
    NSDocInfo *docInfo;
    long long refCount;
    id realObject;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
+ (void)forwardInvocation:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)initDir:(id)arg1 file:(id)arg2 docInfo:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (void)reallyDealloc;
- (id)retain;
- (void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (void)dealloc;
- (BOOL)isProxy;

@end

@interface NSDirInfoDeserializer : NSAKDeserializer
{
}

- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned long long)arg3;

@end

@interface NSDirInfoSerializer : NSAKSerializer
{
}

- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface NSDocumentSerializer : NSAKSerializer
{
}

- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface NSDocInfo : NSObject <NSCopying>
{
    long long time;
    unsigned short mode;
    struct {
        unsigned int isDir:1;
        unsigned int isSingleFile:1;
        unsigned int isSoftLink:1;
        unsigned int _pad:13;
    } flags;
}

- (id)initFromInfo:(struct stat *)arg1;
- (id)initWithFileAttributes:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;

@end

@interface NSDirInfo : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

- (id)init;
- (id)initWithObjects:(id *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (void)dealloc;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (id)serializeToData;

@end

@interface NSDocumentDeserializer : NSAKDeserializer
{
}

- (id)deserializeNewData;
- (void)fixupDirInfo:(id)arg1;
- (id)deserializeNewPList;

@end

@interface NSRTFD : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

+ (void)initialize;
- (id)init;
- (id)initWithObjects:(id *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (void)dealloc;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (BOOL)isPackage;
- (id)setPackage:(BOOL)arg1;
- (unsigned long long)initUnixFile:(id)arg1;
- (unsigned long long)initFromDocument:(id)arg1;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 markBusy:(BOOL)arg5 hardLinkPath:(id)arg6;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (unsigned long long)internalWritePath:(id)arg1 errorHandler:(id)arg2 remapContents:(BOOL)arg3 hardLinkPath:(id)arg4;
- (unsigned long long)internalSaveTo:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3 temp:(id)arg4 backup:(id)arg5;
- (id)nameFromPath:(id)arg1 extra:(id)arg2;
- (id)tmpNameFromPath:(id)arg1 extension:(id)arg2;
- (id)tmpNameFromPath:(id)arg1;
- (unsigned long long)internalSaveTo:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3;
- (unsigned long long)saveToDocument:(id)arg1 removeBackup:(BOOL)arg2 errorHandler:(id)arg3;
- (id)dataRepresentation;
- (id)initWithDataRepresentation:(id)arg1;
- (id)createRandomKey:(id)arg1;
- (id)createUniqueKey:(id)arg1;
- (id)uniqueKey:(id)arg1;
- (id)getDocument:(id)arg1 docInfo:(id)arg2;
- (id)replaceFile:(id)arg1 data:(id)arg2;
- (id)replaceFile:(id)arg1 path:(id)arg2;
- (id)addCommon:(id)arg1 docInfo:(id)arg2 value:(id)arg3 zone:(struct _NSZone *)arg4;
- (id)_getDocInfoForKey:(id)arg1;
- (id)addFile:(id)arg1;
- (id)addLink:(id)arg1;
- (id)dataForFile:(id)arg1;
- (id)removeFile:(id)arg1;
- (id)copy:(id)arg1 into:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)addData:(id)arg1 name:(id)arg2;
- (long long)validatePath:(id)arg1 ignore:(id)arg2;

@end

@interface NSPageData : NSData
{
    NSData *data;
    NSDate *_originalFileModDate;
    NSString *_originalFilePath;
}

+ (void)initialize;
+ (long long)_umask;
- (unsigned long long)length;
- (const void *)bytes;
- (id)init;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)initWithData:(id)arg1;
- (void)_setOriginalFileInfoFromFileAttributes:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfMappedFile:(id)arg1 withFileAttributes:(id)arg2;
- (id)_mappedFile;
- (void)dealloc;
- (unsigned long long)writePath:(id)arg1 docInfo:(id)arg2 errorHandler:(id)arg3 remapContents:(BOOL)arg4 hardLinkPath:(id)arg5;
- (id)initFromSerializerStream:(id)arg1 length:(unsigned long long)arg2;
- (id)deserializer;
- (id)initWithDataNoCopy:(id)arg1;
- (id)data;

@end

@interface NSAKDeserializer : NSObject
{
    id ds;
}

- (id)initForDeserializerStream:(id)arg1;
- (void)dealloc;
- (id)deserializerStream;
- (id)deserializeNewObject;
- (id)deserializeNewData;
- (id)deserializeData:(id)arg1;
- (id)deserializeNewString;
- (id)deserializeNewKeyString;
- (id)deserializeString:(id)arg1;
- (id)deserializeNewList;
- (id)deserializeList:(id)arg1;
- (id)deserializeListItemIn:(id)arg1 at:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)deserializeNewPList;
- (id)deserializePList:(id)arg1;
- (id)deserializePListKeyIn:(id)arg1;
- (id)deserializePListValueIn:(id)arg1 key:(id)arg2 length:(unsigned long long)arg3;

@end

@interface NSAKSerializer : NSObject
{
    id ss;
}

- (id)initForSerializerStream:(id)arg1;
- (void)dealloc;
- (id)serializerStream;
- (unsigned long long)serializeObject:(id)arg1;
- (unsigned long long)serializeData:(id)arg1;
- (unsigned long long)serializeString:(id)arg1;
- (unsigned long long)serializeList:(id)arg1;
- (unsigned long long)serializeListItemIn:(id)arg1 at:(unsigned long long)arg2;
- (unsigned long long)serializePropertyList:(id)arg1;
- (unsigned long long)serializePListKeyIn:(id)arg1 key:(id)arg2 value:(id)arg3;
- (unsigned long long)serializePListValueIn:(id)arg1 key:(id)arg2 value:(id)arg3;

@end

@interface NSAKDeserializerStream : NSObject <NSDeserializerStream>
{
    void *memory;
    char *current;
    unsigned long long left;
    unsigned long long max;
    BOOL freeWhenDone;
}

- (id)initFromMemoryNoCopy:(const void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (void)dealloc;
- (void)finalize;
- (id)initFromPath:(id)arg1;
- (int)readInt;
- (unsigned long long)readAlignedDataSize;
- (void)readData:(void *)arg1 length:(unsigned long long)arg2;

@end

@interface NSAKSerializerStream : NSObject <NSSerializerStream>
{
    void *memory;
    unsigned long long current;
    unsigned long long max;
    struct __CFDictionary *roomForIntLocations;
}

- (void)dealloc;
- (void)finalize;
- (unsigned long long)writeInt:(unsigned long long)arg1;
- (unsigned long long)writeAlignedDataSize:(unsigned long long)arg1;
- (unsigned long long)writeData:(const void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)writeRoomForInt:(int *)arg1;
- (void)writeDelayedInt:(unsigned long long)arg1 for:(int)arg2;
- (BOOL)writeToPath:(id)arg1 safely:(BOOL)arg2;
- (void)copySerializationInto:(void *)arg1;

@end

@interface NSRTFReader : NSObject
{
    NSMutableAttributedString *_topAttributedString;
    NSMutableAttributedString *_curAttributedString;
    NSMutableArray *_attributesStack;
    NSMutableDictionary *_curAttributes;
    unsigned int _level;
    NSData *_rtfData;
    NSMutableDictionary *_fontTable;
    NSFileWrapper *_document;
    union {
        unsigned char thin[128];
        unsigned short fat[128];
    } _textBuffer;
    unsigned long long _textBufferIndex;
    int _rtfVersion;
    int _cocoaVersion;
    int _cocoaSubVersion;
    int _readOnly;
    unsigned int _defaultToUniCharEncoding;
    struct _NSAttributeInfo _attributeInfo;
    NSMutableData *_attributeInfoStack;
    struct CGSize _paperSize;
    double _lMargin;
    double _rMargin;
    double _bMargin;
    double _tMargin;
    NSMutableDictionary *_documentInfoDictionary;
    struct CGSize _viewSize;
    int _viewScale;
    int _viewKind;
    NSMapTable *_cachedRTFFontTable;
    double _hyphenationFactor;
    double _defaultTabInterval;
    NSColor *_documentBackgroundColor;
    struct _NSRTFPriv _private;
    BOOL _textBufferContentsIsFat;
    BOOL _explicitCharSetEncountered;
    BOOL _isRTLDocument;
    long long _readLimit;
    long long _thumbnailLimit;
    BOOL _limitReached;
    NSArray *_textBlocks;
    NSMutableArray *_nestedTables;
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    BOOL _currentRowIsLast;
    BOOL _setTableCells;
    unsigned long long _currentBorderEdge;
    BOOL _currentBorderIsTable;
    NSMutableDictionary *_listDefinitions;
    int _currentListNumber;
    int _currentListLevel;
    NSCalendar *_gregorianCalendar;
    NSMutableDictionary *_fontAttributesTable;
}

- (id)initWithRTFD:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithRTFDFileWrapper:(id)arg1;
- (id)initWithRTF:(id)arg1;
- (void)_setRTFDFileWrapper:(id)arg1;
- (id)_RTFDFileWrapper;
- (void)setReadLimit:(long long)arg1;
- (void)setThumbnailLimit:(long long)arg1;
- (void)setPaperSize:(struct CGSize)arg1;
- (struct CGSize)paperSize;
- (void)setViewSize:(struct CGSize)arg1;
- (struct CGSize)viewSize;
- (void)setViewKind:(long long)arg1;
- (void)setViewScale:(long long)arg1;
- (long long)cocoaVersion;
- (long long)cocoaSubVersion;
- (void)setCocoaVersion:(long long)arg1;
- (void)setCocoaSubVersion:(long long)arg1;
- (double)floatCocoaVersion;
- (void)setReadOnly:(long long)arg1;
- (void)setLeftMargin:(double)arg1;
- (void)setRightMargin:(double)arg1;
- (void)setTopMargin:(double)arg1;
- (void)setBottomMargin:(double)arg1;
- (void)setHyphenationFactor:(float)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setDefaultTabInterval:(double)arg1;
- (double)defaultTabInterval;
- (void)setBaseWritingDirection:(long long)arg1;
- (long long)baseWritingDirection;
- (void)_ensureTableCells;
- (void)_beginTableRow;
- (id)_currentTable;
- (id)_currentTableCell;
- (unsigned long long)_currentBorderEdge;
- (BOOL)_currentBorderIsTable;
- (BOOL)_currentTableCellIsPlaceholder;
- (void)_setCurrentBorderEdge:(unsigned long long)arg1 isTable:(BOOL)arg2;
- (void)_pushTableState;
- (void)_popTableState;
- (void)_setTableCells;
- (void)_clearTableCells;
- (void)_setTableNestingLevel:(long long)arg1;
- (void)_startTableRowDefinition;
- (void)_endTableCellDefinition;
- (void)_paragraphInTable;
- (void)_endTableCell;
- (void)_lastTableRow;
- (void)_endTableRow;
- (void)_mergeTableCellsHorizontally;
- (void)_mergeTableCellsVertically;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;
- (id)mutableAttributedString;
- (id)mutableAttributes;
- (id)defaultParagraphStyle;
- (id)_mutableParagraphStyle;
- (id)attributedStringToEndOfGroup;
- (id)attributedString;
- (id)attributesAtEndOfGroup;
- (id)_documentInfoDictionary;
- (void)_updateAttributes;
- (long long)_currentListNumber;
- (void)_setCurrentListNumber:(long long)arg1;
- (long long)_currentListLevel;
- (void)_setCurrentListLevel:(long long)arg1;
- (id)_listDefinitions;
- (void)_addListDefinition:(id)arg1 forKey:(long long)arg2;
- (void)_addOverride:(long long)arg1 forKey:(long long)arg2;
- (void)processString:(id)arg1;
- (void)_pushState;
- (void)_popState;
- (void)dealloc;
- (void)finalize;

@end

@interface NSRTFReaderTableState : NSObject
{
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    BOOL _currentRowIsLast;
}

- (void)dealloc;

@end

@interface NSRTFWriter : NSObject
{
    NSMutableData *_output;
    NSAttributedString *_attrString;
    unsigned long long _attrStringLength;
    NSFileWrapper *_document;
    NSMutableDictionary *_fontNames;
    NSMutableDictionary *_colors;
    NSMutableArray *_listRanges;
    id _curFont;
    id _curForegroundColor;
    id _curBackgroundColor;
    id _curParagraphStyle;
    id _curKern;
    id _curBaselineOffset;
    id _curSuperscript;
    id _curUnderlineStyle;
    unsigned long long _curTraits;
    unsigned int _curEncoding;
    BOOL forceColorWrite;
    BOOL _activeFontFeatures;
    double _rightMargin;
    NSDictionary *_docAttrs;
}

+ (id)RTFDataForString:(id)arg1 range:(struct _NSRange)arg2 encoding:(unsigned int)arg3;
+ (id)RTFDataForDate:(id)arg1;
+ (void)initialize;
- (void)_writeCharacters:(id)arg1 range:(struct _NSRange)arg2;
- (void)writeEscapedUTF8String:(id)arg1;
- (int)_mostCompatibleCharset:(id)arg1;
- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (id)RTFD;
- (id)RTFDFileWrapper;
- (id)_RTFDFileWrapper;
- (void)_setRTFDFileWrapper:(id)arg1;
- (void)setDocumentAttributes:(id)arg1;
- (id)documentAttribute:(id)arg1;
- (id)documentAttributes;
- (void)writeRTF;
- (id)RTF;
- (void)collectResources;
- (void)writeFontTable;
- (void)writeColorTable;
- (void)writeStyleSheetTable;
- (void)writeListTable;
- (void)writePaperSize;
- (void)writeHyphenation;
- (void)writeDefaultTabInterval;
- (void)writeBackgroundColor;
- (void)_writeVersionsAndEncodings;
- (void)writeStringDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)writeDateDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)writeKeywordsDocumentAttribute;
- (void)writeInfo;
- (void)writeHeader;
- (void)writeColor:(id)arg1 type:(unsigned long long)arg2;
- (void)writeTableHeader:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (BOOL)writeCellTerminator:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (void)writeParagraphStyle:(id)arg1;
- (id)_plainFontNameForFont:(id)arg1;
- (void)writeFont:(id)arg1 forceFontNumber:(BOOL)arg2;
- (void)writeKern:(id)arg1;
- (void)writeUnderlineStyle:(id)arg1 allowStrikethrough:(BOOL)arg2;
- (void)writeStrikethroughStyle:(id)arg1;
- (void)writeSuperscript:(id)arg1;
- (void)writeBaselineOffset:(id)arg1;
- (void)writeLigature:(id)arg1;
- (void)writeCharacterShape:(id)arg1;
- (void)writeStrokeWidth:(id)arg1;
- (void)writeObliqueness:(id)arg1;
- (void)writeExpansion:(id)arg1;
- (void)writeShadow:(id)arg1;
- (void)restoreAttributes:(id)arg1;
- (void)writeCharacterAttributes:(id)arg1 previousAttributes:(id)arg2;
- (void)writeAttachment:(id)arg1;
- (void)writeGlyphInfo:(id)arg1;
- (BOOL)writeLinkInfo:(id)arg1;
- (void)writeDate:(id)arg1;
- (void)writeBody;

@end

@interface NSRegion : NSObject
{
    struct CGRect _bounds;
    void *_cgRegion;
}

- (id)init;
- (id)initWithRect:(struct CGRect)arg1;
- (id)initWithRects:(const struct CGRect *)arg1 count:(unsigned long long)arg2;
- (id)initWithCGSRegionObj:(void *)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copy;
- (id)mutableCopy;
- (id)description;
- (void *)cgsRegionObj;
- (BOOL)isEmpty;
- (struct CGRect)bounds;
- (BOOL)containsRect:(struct CGRect)arg1;
- (BOOL)intersectsRect:(struct CGRect)arg1;
- (BOOL)intersectsRegion:(id)arg1;
- (void)getRects:(struct CGRect **)arg1 count:(unsigned long long *)arg2;
- (void)setEmpty;
- (void)addRect:(struct CGRect)arg1;
- (void)addRegion:(id)arg1;
- (void)subtractRect:(struct CGRect)arg1;
- (void)subtractRegion:(id)arg1;
- (void)intersectWithRect:(struct CGRect)arg1;
- (void)translateBy:(struct CGPoint)arg1;
- (void)addClip;
- (void)fill;
- (void)stroke;

@end

@interface NSResponder : NSObject <NSCoding>
{
    id _nextResponder;
}

- (id)nextResponder;
- (id)_nextResponderForEvent:(id)arg1;
- (void)setNextResponder:(id)arg1;
- (BOOL)tryToPerform:(SEL)arg1 with:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)tabletPoint:(id)arg1;
- (void)tabletProximity:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)noResponderFor:(SEL)arg1;
- (BOOL)acceptsFirstResponder;
- (unsigned long long)gestureEventMask;
- (void)setGestureEventMask:(unsigned long long)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)interpretKeyEvents:(id)arg1;
- (void)flushBufferedKeyEvents;
- (void)setMenu:(id)arg1;
- (id)menu;
- (id)undoManager;
- (void)dealloc;
- (void)finalize;
- (void)helpRequested:(id)arg1;
- (void)showContextHelp:(id)arg1;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (BOOL)_shouldPostEventNotifications;
- (void)_setShouldPostEventNotifications:(BOOL)arg1;
- (void)_postEventNotification:(id)arg1;
- (void)_postEventNotification:(id)arg1 fromCell:(id)arg2;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)presentError:(id)arg1;
- (id)willPresentError:(id)arg1;

@end

@interface NSRulerMarker : NSObject <NSCopying, NSCoding>
{
    NSRulerView *_ruler;
    double _location;
    NSImage *_image;
    struct CGPoint _imageOrigin;
    struct __rFlags {
        unsigned int movable:1;
        unsigned int removable:1;
        unsigned int dragging:1;
        unsigned int pinned:1;
        unsigned int _reserved:28;
    } _rFlags;
    id _representedObject;
}

+ (id)_numericIndicatorCell;
+ (id)_numericIndicatorFormatter;
+ (void)initialize;
- (id)initWithRulerView:(id)arg1 markerLocation:(double)arg2 image:(id)arg3 imageOrigin:(struct CGPoint)arg4;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)ruler;
- (void)setMarkerLocation:(double)arg1;
- (double)markerLocation;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setImageOrigin:(struct CGPoint)arg1;
- (struct CGPoint)imageOrigin;
- (void)setMovable:(BOOL)arg1;
- (void)setRemovable:(BOOL)arg1;
- (BOOL)isMovable;
- (BOOL)isRemovable;
- (BOOL)isDragging;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (struct CGPoint)_originPointInRuler;
- (struct CGPoint)_compositePointInRuler;
- (struct CGRect)imageRectInRuler;
- (double)thicknessRequiredInRuler;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)trackMouse:(id)arg1 adding:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (double)_locationOfOriginPoint:(double)arg1;

@end

@interface NSRulerMarkerPanel : NSPanel
{
}

- (BOOL)hasShadow;
- (BOOL)canBecomeVisibleWithoutLogin;

@end

@interface NSRulerView : NSView
{
    NSScrollView *_scrollView;
    unsigned long long _orientation;
    NSString *_units;
    double _originOffset;
    double _ruleThickness;
    double _thicknessForMarkers;
    double _thicknessForAccessoryView;
    NSView *_clientView;
    NSMutableArray *_markers;
    NSView *_accessoryView;
    NSDictionary *_cachedHashDict;
    double _cachedDocViewToRulerConversion;
    struct CGPoint _cachedContentBoundsOrigin;
    NSRulerMarker *_draggingMarker;
    id _reservedRulerView1;
}

+ (void)registerUnitWithName:(id)arg1 abbreviation:(id)arg2 unitToPointsConversionFactor:(double)arg3 stepUpCycle:(id)arg4 stepDownCycle:(id)arg5;
+ (void)initialize;
- (id)initWithScrollView:(id)arg1 orientation:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setScrollView:(id)arg1;
- (id)scrollView;
- (void)setOrientation:(unsigned long long)arg1;
- (unsigned long long)orientation;
- (double)baselineLocation;
- (double)requiredThickness;
- (void)setRuleThickness:(double)arg1;
- (double)ruleThickness;
- (void)setReservedThicknessForMarkers:(double)arg1;
- (double)reservedThicknessForMarkers;
- (void)setReservedThicknessForAccessoryView:(double)arg1;
- (double)reservedThicknessForAccessoryView;
- (void)setMeasurementUnits:(id)arg1;
- (id)measurementUnits;
- (void)setOriginOffset:(double)arg1;
- (double)originOffset;
- (void)setClientView:(id)arg1;
- (id)clientView;
- (void)setMarkers:(id)arg1;
- (void)addMarker:(id)arg1;
- (void)removeMarker:(id)arg1;
- (id)markers;
- (BOOL)trackMarker:(id)arg1 withMouseEvent:(id)arg2;
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)moveRulerlineFromLocation:(double)arg1 toLocation:(double)arg2;
- (void)invalidateHashMarks;
- (struct CGRect)_rectWithSingleThickness:(struct CGRect)arg1;
- (struct CGRect)_centerScanSeparatorRect:(struct CGRect)arg1;
- (struct CGRect)centerScanRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)drawSeparatorInRect:(struct CGRect)arg1;
- (id)labelStringForValue:(id)arg1;
- (void)setLabelString:(id)arg1 forValue:(id)arg2;
- (void)viewDidEndLiveResize;
- (void)drawHashMarksAndLabelsInRect:(struct CGRect)arg1;
- (void)drawMarkersInRect:(struct CGRect)arg1;
- (void)drawRulerLines;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)_captureVisibleIntoLiveResizeCache;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;

@end

@interface NSAccessibilityRulerMarker : NSAccessibilityMockUIElement
{
    NSRulerMarker *_marker;
}

+ (id)markerWithRulerMarker:(id)arg1 parent:(id)arg2;
- (id)initWithRulerMarker:(id)arg1 parent:(id)arg2;
- (void)dealloc;
- (id)marker;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityAttributeNames;
- (id)accessibilityMarkerTypeAttribute;
- (BOOL)accessibilityIsMarkerTypeAttributeSettable;
- (id)accessibilityMarkerTypeDescriptionAttribute;
- (BOOL)accessibilityIsMarkerTypeDescriptionAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSRulerViewAccessibilityPanelController : NSObject
{
    NSWindow *_accessibilityPanel;
    NSTextField *_valueField;
    NSPopUpButton *_markerTypeButton;
    NSRulerView *_rulerView;
}

- (id)initWithRulerView:(id)arg1;
- (void)dealloc;
- (id)_accessibilityPanel;
- (id)_valueField;
- (id)_markerTypeButton;
- (void)_addMarker:(id)arg1;
- (void)_cancelAddMarker:(id)arg1;

@end

@interface NSRulerMarkerView : NSView
{
    NSRulerMarker *_rulerMarker;
}

- (void)dealloc;
- (void)updateFrame;
- (id)rulerMarker;
- (void)setRulerMarker:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;

@end

@interface NSRulerViewPrivateData : NSObject
{
    id _accessibilityPanelController;
    NSMutableArray *_markerLines;
    id _draggingMarkerView;
    id _formattedHashLabelCache;
    struct {
        unsigned int _showTooltip:1;
        unsigned int _rtlLayoutDirection:1;
        unsigned int _reserved:30;
    } _rvFlags;
}

- (void)dealloc;

@end

@interface NSRulerLabelCell : NSTextFieldCell
{
    NSNumberFormatter *_auxiliaryFormatter;
}

- (long long)_typesetterBehavior;
- (id)_auxiliaryFormatter;
- (void)_setAuxiliaryFormatter:(id)arg1;
- (void)dealloc;

@end

@interface NSIdRunStorage : NSRunStorage
{
}

+ (void)initialize;
- (void)_allocData:(unsigned long long)arg1;
- (void)_reallocData:(unsigned long long)arg1;
- (void)_deallocData;
- (void)dealloc;

@end

@interface NSRunStorage : NSObject <NSCopying>
{
    unsigned long long _count;
    unsigned long long _elementSize;
    unsigned long long _numBlocks;
    unsigned long long _maxBlocks;
    unsigned long long _indexDeltaStartBlock;
    long long _indexDelta;
    struct _NSRunBlock *_runs;
    unsigned long long _cachedBlock;
    struct _NSRange _cachedBlockRange;
    unsigned long long _gapBlockIndex;
}

+ (void)initialize;
- (void)_allocData:(unsigned long long)arg1;
- (void)_reallocData:(unsigned long long)arg1;
- (void)_deallocData;
- (id)initWithElementSize:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)init;
- (id)initWithRunStorage:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (unsigned long long)elementSize;
- (void *)elementAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)replaceElementsInRange:(struct _NSRange)arg1 withElement:(void *)arg2 coalesceRuns:(BOOL)arg3;
- (void)insertElement:(void *)arg1 range:(struct _NSRange)arg2 coalesceRuns:(BOOL)arg3;
- (void)removeElementsInRange:(struct _NSRange)arg1 coalesceRuns:(BOOL)arg2;
- (id)description;

@end

@interface NSSavePanelNameFieldCell : NSTextFieldCell
{
}

- (BOOL)wantsNotificationForMarkedText;
- (id)_textAttributes;

@end

@interface _NSSavePanelTextView : NSTextView
{
}

- (void)keyDown:(id)arg1;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;

@end

@interface NSSavePanel : NSPanel
{
    NSNavView *_navView;
    NSView *_accessoryView;
    NSArray *_allowedFileTypes;
    NSString *_validatedPosixName;
    NSString *_hiddenExtension;
    NSTextField *_messageTextField;
    NSView *_savePane;
    NSBox *_saveNavSeparatorBox;
    NSView *_savePaneTopPartsContainer;
    NSTextField *_nameField;
    NSTextField *_nameFieldLabel;
    NSButton *_expansionButton;
    NSView *_directoryPopUpContainer;
    id _directoryPopUp;
    NSTextField *_directoryPopUpLabel;
    NSBox *_navViewContainer;
    NSBox *_accessoryViewContainer;
    NSView *_bottomControlsContainer;
    NSButton *_hideExtensionButton;
    NSButton *_newFolderButton;
    NSButton *_cancelButton;
    NSButton *_okButton;
    id _filepathInputController;
    id _newFolderController;
    struct __SPFlags {
        unsigned int saveMode:1;
        unsigned int isExpanded:1;
        unsigned int allowsOtherFileTypes:1;
        unsigned int canCreateDirectories:1;
        unsigned int canSelectedHiddenExtension:1;
        unsigned int inConfigureForDirectory:1;
        unsigned int delegate_shouldShowFilename:1;
        unsigned int delegate_compareFilename:1;
        unsigned int delegate_shouldEnableURL:1;
        unsigned int delegate_validateURL:1;
        unsigned int delegate_didChangeToDirectoryURL:1;
        unsigned int changingFrameSize:1;
        unsigned int movingAccessoryView:1;
        unsigned int userAccessoryViewFrameChange:1;
        unsigned int reserved:18;
    } _spFlags;
    NSSavePanelAuxiliary *_spAuxiliaryStorage;
    char _reserved[5];
    NSProgressIndicator *_openProgressIndicator;
}

+ (id)_crunchyRawUnbonedPanel;
+ (id)savePanel;
+ (void)_callSavePanelContextEnd;
- (void)_initSaveMode;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (BOOL)_shouldShowHiddenFiles;
- (void)_selectFirstKeyView;
- (void)_bonafiedDeallocHelper;
- (void)_bonafiedDealloc;
- (void)finalize;
- (void)dealloc;
- (void)orderOut:(id)arg1;
- (id)_navView;
- (void)_restoreDefaultSettingsCommon;
- (void)_restoreDefaultSettingsForSaveMode;
- (void)_restoreDefaultSettingsForOpenMode;
- (void)_initSidebarAndPopups;
- (void)_initPanelCommon;
- (void)_updateOkButtonEnabledState;
- (void)_updateNewFolderButtonEnabledState;
- (void)_updateExpansionButtonEnabledState;
- (void)_updateHideExtensionButtonStateFromNameFieldContents;
- (void)_updateNameFieldContentsFromHideExtensionButtonState;
- (void)_handleNameFieldContentsChanged:(id)arg1;
- (id)URL;
- (id)URLs;
- (id)_validatedPosixName;
- (void)_setValidatedPosixName:(id)arg1;
- (id)_hiddenExtension;
- (void)_setHiddenExtension:(id)arg1;
- (id)_nameFieldContentsAsPosixName;
- (void)_setUndoableNameFieldString:(id)arg1;
- (void)_setNameFieldContentsFromPosixName:(id)arg1 addToUndo:(BOOL)arg2;
- (void)_setInitialNameFieldContentsFromPosixName:(id)arg1;
- (void)_selectNameFieldContentsExcludingExtension;
- (id)_filenamesWithAlwaysIncludingDirectories:(BOOL)arg1;
- (id)filenames;
- (id)_filenamesAlwaysIncludingDirectories;
- (id)filename;
- (BOOL)_isSaveFilenameLengthLegal;
- (id)_directoryPreferringURL:(BOOL)arg1;
- (void)_setDirectory:(id)arg1;
- (id)directory;
- (void)setDirectory:(id)arg1;
- (id)directoryURL;
- (void)setDirectoryURL:(id)arg1;
- (BOOL)_saveMode;
- (id)requiredFileType;
- (void)setRequiredFileType:(id)arg1;
- (id)allowedFileTypes;
- (void)setAllowedFileTypes:(id)arg1;
- (BOOL)_filenameHasNonEmptyAcceptableFileType:(id)arg1;
- (BOOL)_filenameHasAcceptableFileType:(id)arg1;
- (BOOL)_isAllowedFileNameExtension:(id)arg1;
- (id)_preferredFileNameExtension;
- (BOOL)allowsOtherFileTypes;
- (void)setAllowsOtherFileTypes:(BOOL)arg1;
- (id)_enabledFileTypes;
- (void)_setEnabledFileTypes:(id)arg1;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)arg1;
- (id)accessoryView;
- (void)setAccessoryView:(id)arg1;
- (BOOL)_isUserAccessoryViewFrameChange;
- (void)_accessoryViewFrameDidChange:(id)arg1;
- (id)delegate;
- (void)_refreshDelegateOptions;
- (void)_clearDelegateOptions;
- (void)setDelegate:(id)arg1;
- (void)validateVisibleColumns;
- (void)_reloadDisplayState;
- (BOOL)isExpanded;
- (void)_setIsExpanded:(BOOL)arg1;
- (void)toggleIsExpanded:(id)arg1;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)arg1;
- (BOOL)canCreateDirectories;
- (void)setCanCreateDirectories:(BOOL)arg1;
- (BOOL)canSelectHiddenExtension;
- (void)setCanSelectHiddenExtension:(BOOL)arg1;
- (void)_handleShowAllExtensionsPrefChanged:(id)arg1;
- (BOOL)isExtensionHidden;
- (void)setExtensionHidden:(BOOL)arg1;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)arg1;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)arg1;
- (id)prompt;
- (void)setPrompt:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)nameFieldLabel;
- (void)setNameFieldLabel:(id)arg1;
- (id)nameFieldStringValue;
- (void)setNameFieldStringValue:(id)arg1;
- (id)message;
- (id)_defaultMessageAttributes;
- (void)setMessage:(id)arg1;
- (void)_readFileListMode;
- (void)_writeFileListMode;
- (BOOL)_fetchExpandedState;
- (void)_storeExpandedState;
- (struct CGSize)_fetchExpandedFrameSize;
- (void)center;
- (void)_storeExpandedFrameSize;
- (id)_fetchRootDirectory;
- (void)_storeRootDirectory;
- (id)_fetchCurrentDirectory;
- (void)_storeCurrentDirectory;
- (BOOL)_fetchUserSetHideExtensionButtonState;
- (void)_storeUserSetHideExtensionButtonState;
- (id)_perDialogPrefString:(id)arg1;
- (BOOL)_canShowGoto;
- (void)_handleGotoFinishedWithResult:(long long)arg1;
- (void)gotoSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (Class)filepathInputControllerClass;
- (void)showGotoWithInitialFilename:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_shouldHandleAsGotoForTypedString:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)_handleNameFieldContentsChangedAsGoto;
- (id)_runCreateNewFolderDialog;
- (void)newFolder:(id)arg1;
- (void)selectText:(id)arg1;
- (void)hideExtensionButtonClick:(id)arg1;
- (void)directorySelectionPopUpButtonClick:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)_sendDirectoryDidChange;
- (void)_sendSelectionDidChange;
- (void)_handleRootNodeChanged:(id)arg1;
- (void)_handleCurrentDirectoryChanged:(id)arg1;
- (void)_handleFileListModeChanged:(id)arg1;
- (void)_handleFileListSelectionChanged:(id)arg1;
- (void)_handleFileListConfirmedSelection:(id)arg1;
- (void)_handleDisabledNodeClicked:(id)arg1;
- (void)_registerForDragTypes;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)selectDraggedFileNode:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)fieldEditor:(BOOL)arg1 forObject:(id)arg2;
- (void)selectKeyViewFollowingView:(id)arg1;
- (void)selectKeyViewPrecedingView:(id)arg1;
- (void)setHidesSharedSection:(BOOL)arg1;
- (BOOL)hidesSharedSection;
- (BOOL)_delegateShouldEnableURL:(id)arg1;
- (BOOL)_delegateShouldEnableNode:(id)arg1;
- (BOOL)_delegateRespondsToCompareFilename;
- (long long)_delegateCompareFilename:(id)arg1 with:(id)arg2 caseSensitive:(BOOL)arg3;
- (void)_reallyStartOpenProgressIndicator;
- (void)_startOpenProgressIndicator;
- (void)_stopOpenProgressIndicator;
- (void)_saveCurrentPanelState:(long long)arg1;
- (void)_configureForFilename:(id)arg1;
- (void)_configureForDirectory:(id)arg1;
- (void)_loadPreviousModeAndLayout;
- (long long)runModalForDirectory:(id)arg1 file:(id)arg2 types:(id)arg3;
- (void)beginSheetForDirectory:(id)arg1 file:(id)arg2 types:(id)arg3 modalForWindow:(id)arg4 modalDelegate:(id)arg5 didEndSelector:(SEL)arg6 contextInfo:(void *)arg7;
- (void)beginForDirectory:(id)arg1 file:(id)arg2 types:(id)arg3 modelessDelegate:(id)arg4 didEndSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)beginSheetModalForWindow:(id)arg1 completionHandler:(id)arg2;
- (void)beginWithCompletionHandler:(id)arg1;
- (void)_didEndSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_dismissModeless:(long long)arg1;
- (long long)runModalForDirectory:(id)arg1 file:(id)arg2;
- (void)_sendFileSystemChangeNotification;
- (long long)runModal;
- (void)beginSheetForDirectory:(id)arg1 file:(id)arg2 modalForWindow:(id)arg3 modalDelegate:(id)arg4 didEndSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (long long)runModalForTypes:(id)arg1;
- (id)_nameWithLooseRequiredExtensionCheck:(id)arg1;
- (id)_nameWithStrictRequiredExtensionCheck:(id)arg1;
- (id)_nameWithRequiredExtensionCheck:(id)arg1 appendExtensionIfRequired:(BOOL)arg2;
- (BOOL)_overwriteExistingFileCheck:(id)arg1;
- (BOOL)_delegateValidateFilenameOrURL:(id)arg1 error:(id *)arg2;
- (BOOL)_okForSaveMode;
- (void)_didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (BOOL)_okForOpenMode;
- (BOOL)_isModal;
- (void)_cancelAndClose;
- (void)dismissWindow:(long long)arg1;
- (BOOL)_shouldGoIntoSelectedDirectory;
- (void)ok:(id)arg1;
- (void)overwriteAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)cancel:(id)arg1;

@end

@interface NSSavePanelAuxiliary : NSObject
{
    SEL modalDelegateDidEndSelector;
    void *contextInfo;
    long long _distanceBetweenExtensionCheckAndNewFolderButton;
    id modalDelegate;
    NSAlert *currentAlert;
    id delegate;
    unsigned int openProgressIndicatorScheduled:1;
    unsigned int _runningAsSheet:1;
    unsigned int _reserved:30;
    id _completionHandler;
}

@end

@interface NSScreen : NSObject
{
    struct CGRect _frame;
    int _depth;
    int _screenNumber;
    id _auxiliaryStorage;
}

+ (void)initialize;
+ (void)_updateSavedFrames;
+ (id)screens;
+ (void)_resetScreens;
+ (id)mainScreen;
+ (id)_zeroScreen;
+ (double)_zeroScreenHeight;
+ (BOOL)_zeroScreenIsNew;
+ (id)deepestScreen;
+ (void)_displayProfileChangedForScreenNumber:(long long)arg1;
- (int)depth;
- (void)_setCachedColorSpace:(id)arg1;
- (id)colorSpace;
- (struct CGRect)frame;
- (struct CGRect)visibleFrame;
- (struct CGRect)_savedVisibleFrame;
- (void)_saveVisibleFrameAtIndex:(long long)arg1;
- (id)deviceDescription;
- (id)init;
- (void)dealloc;
- (const int *)supportedWindowDepths;
- (double)userSpaceScaleFactor;

@end

@interface NSScreenAux : NSObject
{
    NSColorSpace *cachedColorSpace;
}

@end

@interface NSScroller : NSControl
{
    double _curValue;
    double _percent;
    double _knobSize;
    struct __sFlags2 {
        unsigned int hitPart:4;
        unsigned int controlSize:2;
        unsigned int inMaxEnd:1;
        unsigned int setFloatValueOverridden:1;
        unsigned int setFloatValueKnobProportionOverridden:1;
        unsigned int reserved:23;
    } _sFlags2;
    id _target;
    SEL _action;
    struct _sFlags {
        unsigned int isHoriz:1;
        unsigned int arrowsLoc:2;
        unsigned int partsUsable:2;
        unsigned int fine:1;
        unsigned int needsEnableFlush:1;
        unsigned int thumbing:1;
        unsigned int slotDrawn:1;
        unsigned int knobDrawn:1;
        unsigned int lit:1;
        unsigned int knobLit:1;
        unsigned int reserved:1;
        unsigned int controlTint:3;
        unsigned int repeatCount:16;
    } sFlags;
}

+ (void)_aquaScrollerBehaviorChanged:(id)arg1;
+ (void)_aquaScrollerVariantChanged:(id)arg1;
+ (double)scrollerWidth;
+ (double)scrollerWidthForControlSize:(unsigned long long)arg1;
+ (void)initialize;
+ (int)_arrowsConfig;
+ (void)_setArrowsConfig:(int)arg1;
+ (void)_drawEndCapInRect:(struct CGRect)arg1;
- (BOOL)_useTigerMetrics;
- (BOOL)_hasSeparateArrows;
- (double)_repeatTime;
- (id)_setWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)drawParts;
- (struct CGRect)_drawingRectForPart:(unsigned long long)arg1;
- (struct CGRect)rectForPart:(unsigned long long)arg1;
- (void)checkSpaceForParts;
- (unsigned long long)usableParts;
- (id)target;
- (void)setTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (void)_adjustForGrowBox;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setArrowsPosition:(unsigned long long)arg1;
- (unsigned long long)arrowsPosition;
- (void)setControlTint:(unsigned long long)arg1;
- (unsigned long long)controlTint;
- (void)setControlSize:(unsigned long long)arg1;
- (unsigned long long)controlSize;
- (unsigned long long)_realControlTint;
- (void)setEnabled:(BOOL)arg1;
- (struct __CFDictionary *)_copyCompositeCoreUIDrawOptions;
- (void)_old_drawArrow:(unsigned long long)arg1 highlightPart:(unsigned long long)arg2;
- (void)drawArrow:(unsigned long long)arg1 highlightPart:(unsigned long long)arg2;
- (void)drawArrow:(unsigned long long)arg1 highlight:(BOOL)arg2;
- (void)_old_drawKnob;
- (void)drawKnob;
- (void)_old_drawKnobSlotInRect:(struct CGRect)arg1 highlight:(BOOL)arg2;
- (void)drawKnobSlotInRect:(struct CGRect)arg1 highlight:(BOOL)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)highlight:(BOOL)arg1;
- (void)_getPartStruct:(struct _PartStruct *)arg1 numberOfParts:(unsigned long long *)arg2 withInnerBounds:(struct CGRect)arg3;
- (unsigned long long)_testPartUsingDestinationFloatValue:(struct CGPoint)arg1;
- (unsigned long long)testPart:(struct CGPoint)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)trackKnob:(id)arg1;
- (void)trackScrollButtons:(id)arg1;
- (void)trackPagingArea:(id)arg1;
- (void)mouseDown:(id)arg1;
- (unsigned long long)hitPart;
- (float)floatValue;
- (double)doubleValue;
- (double)knobProportion;
- (void)setKnobProportion:(double)arg1;
- (void)setFloatValue:(float)arg1 knobProportion:(double)arg2;
- (void)setFloatValue:(float)arg1;
- (void)setDoubleValue:(double)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setInterfaceStyle:(unsigned long long)arg1;
- (void)_windowChangedKeyState;

@end

@interface NSAccessibilityScrollerPart : NSAccessibilityMockUIElement
{
    unsigned long long _partCode;
}

+ (id)partWithCode:(unsigned long long)arg1 parent:(id)arg2;
- (id)initWithPartCode:(unsigned long long)arg1 parent:(id)arg2;
- (unsigned long long)partCode;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSSearchField : NSTextField
{
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (void)setRecentSearches:(id)arg1;
- (id)recentSearches;
- (void)setRecentsAutosaveName:(id)arg1;
- (id)recentsAutosaveName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setSearchMenuTemplate:(id)arg1;
- (id)searchMenuTemplate;
- (BOOL)searchFieldCell:(id)arg1 shouldChangeCancelButtonVisibility:(BOOL)arg2;

@end

@interface NSSearchFieldBinder : NSViewStateBinder <NSMenuDelegate>
{
    struct __searchFieldBinderFlags {
        unsigned int _numberOfPredicateBindings:7;
        unsigned int _ignoreUpdates:1;
        unsigned int _bindingCountDidChange:1;
        unsigned int _reservedSearchFieldBinder:23;
    } _searchFieldBinderFlags;
    NSMutableDictionary *_predicateBindingTable;
    NSString *_selectedPredicateBinding;
    NSMenu *_searchMenuTemplate;
}

+ (id)bindingsForObject:(id)arg1;
+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)_enumeratedPredicateBindings:(unsigned long long)arg1;
- (void)_countBindings;
- (void)addBinding:(id)arg1 toController:(id)arg2 withKeyPath:(id)arg3 valueTransformer:(id)arg4 options:(id)arg5;
- (void)_removeBinding:(id)arg1;
- (void)removeBinding:(id)arg1;
- (id)availableBindings;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)_cellForObject;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (id)_predicateOptionPairForBinding:(id)arg1;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (Class)valueClassForBinding:(id)arg1;
- (void)searchFieldCellOrControlDidClearRecents:(id)arg1;
- (void)performAction:(id)arg1;
- (id)searchMenuTemplate;
- (void)deactivateMenuItemsInMenu:(id)arg1;
- (void)check:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)updateSearchFieldWithPredicate:(id)arg1;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;

@end

@interface _NSSearchFieldBinderPredicateOptionPair : NSObject
{
    NSString *_predicateString;
    NSString *_predicateName;
    NSPredicate *_predicate;
    _NSFilterPredicateVisitor *_visitor;
}

- (id)init;
- (void)dealloc;
- (id)predicateString;
- (void)setPredicateString:(id)arg1;
- (id)predicateName;
- (void)setPredicateName:(id)arg1;
- (id)predicate;
- (id)visitor;

@end

@interface _NSFilterPredicateVisitor : NSObject <NSPredicateVisitor>
{
    NSMutableArray *_predicateParts;
    unsigned long long _predicatePartsCount;
    BOOL _didFirstVisit;
    BOOL _bail;
    unsigned long long _visitingIndex;
    NSString *_substitutedValue;
}

- (id)initWithPredicate:(id)arg1;
- (void)dealloc;
- (void)visitPredicate:(id)arg1;
- (void)visitPredicateExpression:(id)arg1;
- (void)visitPredicateOperator:(id)arg1;
- (void)reset;
- (id)substitutedValueForPredicate:(id)arg1;
- (id)result;

@end

@interface NSSearchFieldCell : NSTextFieldCell
{
    struct __sfFlags {
        unsigned int sendsWholeSearchString:1;
        unsigned int maximumRecents:8;
        unsigned int cancelVisible:1;
        unsigned int reserved2:2;
        unsigned int disableText:1;
        unsigned int menuTracking:1;
        unsigned int deferredUpdate:1;
        unsigned int sendsImmediately:1;
        unsigned int reserved:16;
    } _sfFlags;
    NSButtonCell *_searchButtonCell;
    NSButtonCell *_cancelButtonCell;
    NSMenu *_searchMenuTemplate;
    NSString *_recentsAutosaveName;
    NSMutableArray *_recentSearches;
    NSMenu *_searchMenu;
    NSTimer *_partialStringTimer;
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)searchButtonCell;
- (void)setSearchButtonCell:(id)arg1;
- (id)cancelButtonCell;
- (void)setCancelButtonCell:(id)arg1;
- (void)resetSearchButtonCell;
- (void)resetCancelButtonCell;
- (void)setControlSize:(unsigned long long)arg1;
- (struct CGRect)searchTextRectForBounds:(struct CGRect)arg1;
- (struct CGRect)searchButtonRectForBounds:(struct CGRect)arg1;
- (struct CGRect)cancelButtonRectForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (void)setObjectValue:(id)arg1;
- (void)setSearchMenuTemplate:(id)arg1;
- (id)searchMenuTemplate;
- (Class)searchMenuFactoryClass;
- (void)setEnabled:(BOOL)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setTextColor:(id)arg1;
- (void)_getTextColor:(id *)arg1 backgroundColor:(id *)arg2;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)arg1;
- (id)_selectOrEdit:(const struct CGRect *)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)textDidChange:(id)arg1;
- (void)_tearDownPartialStringTimer;
- (BOOL)_sendActionFrom:(id)arg1;
- (void)endEditing:(id)arg1;
- (void)setSendsWholeSearchString:(BOOL)arg1;
- (BOOL)sendsWholeSearchString;
- (void)setMaximumRecents:(long long)arg1;
- (long long)maximumRecents;
- (void)setRecentSearches:(id)arg1;
- (id)recentSearches;
- (void)setRecentsAutosaveName:(id)arg1;
- (id)recentsAutosaveName;
- (BOOL)sendsSearchStringImmediately;
- (void)setSendsSearchStringImmediately:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSSearchButtonCellProxy : NSAccessibilityReparentingCellProxy
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (void)_accessibilityPressAction:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSSecureTextField : NSTextField
{
}

+ (void)initialize;
+ (void)setCellClass:(Class)arg1;
+ (Class)cellClass;
- (void)_commonSecureTextFieldInit:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_setBulletCharacter:(unsigned short)arg1;
- (unsigned short)_bulletCharacter;

@end

@interface NSSecureTextFieldCell : NSTextFieldCell
{
    BOOL _echosBullets;
}

+ (void)initialize;
+ (id)_sharedSecureFieldEditor;
- (id)fieldEditorForView:(id)arg1;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)_setBulletCharacter:(unsigned short)arg1;
- (unsigned short)_bulletCharacter;
- (id)initTextCell:(id)arg1;
- (void)setEchosBullets:(BOOL)arg1;
- (BOOL)echosBullets;
- (id)_bulletStringForString:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

@interface NSSecureTextView : NSTextView <NSLayoutManagerDelegate>
{
    long long _outerTag;
    long long _innerTag;
    struct {
        unsigned int _secureInput:1;
        unsigned int _capsLockDown:1;
        unsigned int _numLockDown:1;
        unsigned int _invalidated:1;
        unsigned int _reserved:28;
    } _sdvFlags;
}

+ (void)_doMenu:(id)arg1;
+ (id)secureTextViewForWindow:(id)arg1;
+ (void)initialize;
+ (BOOL)_allowKillRing;
- (void)_detachFieldEditorFromWindow:(id)arg1;
- (void)_resetTooltips;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)arg1;
- (void)enableSecureInput:(BOOL)arg1;
- (void)setSelectable:(BOOL)arg1;
- (void)setRichText:(BOOL)arg1;
- (void)setImportsGraphics:(BOOL)arg1;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (void)copy:(id)arg1;
- (BOOL)_continuousCheckingAllowed;
- (BOOL)_allowsMultipleTextSelectionByMouse;
- (void)startSpeaking:(id)arg1;
- (void)complete:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (unsigned long long)enabledTextCheckingTypes;
- (id)menuForEvent:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)_updateIndicators;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (id)inputContext;
- (void)keyDown:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)flagsChanged:(id)arg1;
- (void)didChangeText;
- (void)layoutManagerDidInvalidateLayout:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)updateTrackingAreas;

@end

@interface NSSecureTextStorage : NSTextStorage
{
    struct __CFAttributedString *_storage;
    NSFont *_font;
    long long _level;
    unsigned short _bulletCharacter;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)beginSecureMode;
- (void)endSecureMode;
- (void)setBulletCharacter:(unsigned short)arg1;
- (unsigned short)bullferCharacter;
- (void)setFont:(id)arg1;
- (id)font;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)lineBreakByHyphenatingBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;

@end

@interface NSSecureStringWrapper : NSString
{
    struct __CFString *_originalString;
    unsigned short _bulletCharacter;
    unsigned long long _length;
}

- (id)initWithOriginalString:(struct __CFString *)arg1;
- (id)initWithBulletCharacter:(unsigned short)arg1 length:(unsigned long long)arg2;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (const unsigned short *)_fastCharacterContents;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSSegmentedCell : NSActionCell
{
    NSMutableArray *_segmentItems;
    long long _selectedSegment;
    long long _keySegment;
    struct CGRect _lastBounds;
    struct {
        unsigned int trackingMode:3;
        unsigned int trimmedLabels:1;
        unsigned int drawing:1;
        unsigned int reserved1:2;
        unsigned int recalcToolTips:1;
        unsigned int usesWindowsStyle:1;
        unsigned int dontShowSelectedAndPressedAppearance:1;
        unsigned int menuShouldBeUniquedAgainstMain:1;
        unsigned int style:8;
        unsigned int reserved:13;
    } _seFlags;
    id _segmentTrackingInfo;
    id _menuUniquer;
    long long _reserved3;
    long long _reserved4;
}

+ (void)initialize;
+ (id)_labelCell;
+ (BOOL)prefersTrackingUntilMouseUp;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setSegmentCount:(long long)arg1;
- (long long)segmentCount;
- (void)setSelectedSegment:(long long)arg1;
- (long long)_trackingSegment;
- (long long)selectedSegment;
- (BOOL)selectSegmentWithTag:(long long)arg1;
- (long long)indexOfSelectedItem;
- (long long)_keySegment;
- (void)_setKeySegment:(long long)arg1;
- (void)makeNextSegmentKey;
- (void)makePreviousSegmentKey;
- (BOOL)acceptsFirstResponder;
- (void)setTrackingMode:(unsigned long long)arg1;
- (unsigned long long)trackingMode;
- (id)_segmentsDeselectedBySegment:(long long)arg1;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (BOOL)_needsRolloverTracking;
- (void)_setInactiveStateShowsRollovers:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)_inactiveStateShowsRolloversForSegment:(long long)arg1;
- (long long)segmentStyle;
- (void)setSegmentStyle:(long long)arg1;
- (void)_setSegmentedCellStyle:(long long)arg1;
- (long long)_segmentedCellStyle;
- (void)setWidth:(double)arg1 forSegment:(long long)arg2;
- (double)widthForSegment:(long long)arg1;
- (id)imageForSegment:(long long)arg1;
- (void)setImage:(id)arg1 forSegment:(long long)arg2;
- (void)setAlternateImage:(id)arg1 forSegment:(long long)arg2;
- (id)alternateImageForSegment:(long long)arg1;
- (void)setLabel:(id)arg1 forSegment:(long long)arg2;
- (void)setImageScaling:(unsigned long long)arg1 forSegment:(long long)arg2;
- (unsigned long long)imageScalingForSegment:(long long)arg1;
- (id)labelForSegment:(long long)arg1;
- (void)setSelected:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)isSelectedForSegment:(long long)arg1;
- (void)setEnabled:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)isEnabledForSegment:(long long)arg1;
- (void)setMenu:(id)arg1 forSegment:(long long)arg2;
- (id)menuForSegment:(long long)arg1;
- (void)setToolTip:(id)arg1 forSegment:(long long)arg2;
- (id)toolTipForSegment:(long long)arg1;
- (BOOL)_needsToolTipRecalc;
- (void)_setNeedsToolTipRecalc:(BOOL)arg1;
- (BOOL)_hasItemTooltips;
- (void)setTag:(long long)arg1 forSegment:(long long)arg2;
- (long long)tagForSegment:(long long)arg1;
- (void)setMenuIndicatorShown:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)isMenuIndicatorShownForSegment:(long long)arg1;
- (void)_resizeSegmentsForCellFrame:(struct CGRect)arg1;
- (void)setFont:(id)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setControlView:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)_clearMouseTracking;
- (void)_setMouseTrackingInRect:(struct CGRect)arg1 ofView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)isOpaque;
- (struct CGRect)_boundsForCellFrame:(struct CGRect)arg1;
- (struct CGRect)_rectForSegment:(long long)arg1 inFrame:(struct CGRect)arg2;
- (struct CGRect)rectForSegment:(long long)arg1 inFrame:(struct CGRect)arg2;
- (BOOL)_wantsMenuIndicatorForSegment:(long long)arg1;
- (void)_drawMenuIndicatorForSegment:(long long)arg1 withRect:(struct CGRect)arg2 inView:(id)arg3;
- (long long)_applicableSegmentedCellStyle;
- (unsigned long long)_applicableTrackingModeForSegment:(long long)arg1;
- (long long)_segmentHighlightState:(long long)arg1;
- (struct __CFDictionary *)_copyCoreUIBackgroundDrawOptionsForSegment:(long long)arg1 withView:(id)arg2 drawFlags:(unsigned long long *)arg3;
- (BOOL)_coreUIDrawSegmentBackground:(long long)arg1 withCellFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_shouldUseAlternateImageForSegment:(long long)arg1;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (double)_segmentedMenuDelayTime;
- (double)_segmentedMenuDragSlopRect;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (BOOL)_trackMouse:(id)arg1 forSegment:(long long)arg2 inRects:(const struct CGRect *)arg3 count:(unsigned long long)arg4 inCellFrame:(struct CGRect)arg5 ofView:(id)arg6 untilMouseUp:(BOOL)arg7;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)_selectHighlightedSegment;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)_sendActionFrom:(id)arg1;
- (void)_performClick:(id)arg1 onSegment:(long long)arg2 ignoreMenus:(BOOL)arg3;
- (void)_performClick:(id)arg1 ignoreMenus:(BOOL)arg2;
- (void)performClick:(id)arg1;
- (long long)indexOfSegmentContainingPoint:(struct CGPoint)arg1 inCellFrame:(struct CGRect)arg2;
- (void)_calculateSelectedSegmentForPoint:(struct CGPoint)arg1;
- (void)_trackSelectedItemMenu;
- (void)_displayDelayedMenu;
- (BOOL)_isTextured;
- (void)_removeAllToolTips;
- (void)_setMenuShouldBeUniquedAgainstMainMenu:(BOOL)arg1;
- (id)_keyEquivalentUniquerCreatingIfNecessary:(BOOL)arg1;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (long long)interiorBackgroundStyleForSegment:(long long)arg1;
- (long long)_initialBackgroundStyleCompatibilityGuess;

@end

@interface NSSegmentItem : NSObject <NSCopying, NSCoding>
{
    double _width;
    NSImage *_image;
    NSString *_label;
    NSMenu *_menu;
    NSString *_toolTip;
    long long _tag;
    struct {
        unsigned int needsRecalc:1;
        unsigned int selected:1;
        unsigned int disabled:1;
        unsigned int showMenuIndicator:1;
        unsigned int mouseInside:1;
        unsigned int inactiveStateDisablesRollovers:1;
        unsigned int imageScaling:2;
        unsigned int reserved:24;
    } _flags;
    double _fullWidth;
    double _shrinkage;
    struct CGRect _imageRect;
    struct CGRect _labelRect;
    struct CGRect _menuIndRect;
    long long _toolTipTag;
    NSImage *_alternateImage;
    NSSegmentedCell *_owningCell;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)_setWidth:(double)arg1;
- (BOOL)_setImage:(id)arg1;
- (BOOL)_setAlternateImage:(id)arg1;
- (BOOL)_setImageScaling:(unsigned long long)arg1;
- (BOOL)_setLabel:(id)arg1;
- (BOOL)_setMenu:(id)arg1;
- (void)_setOwningCell:(id)arg1;
- (void)_setNeedsRecalc;
- (BOOL)_needsRecalc;
- (void)_recalcRectsForCell:(id)arg1;
- (double)_displayWidth;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;

@end

@interface NSAccessibilitySegment : NSAccessibilityIndexedMockUIElement
{
}

+ (id)segmentWithIndex:(long long)arg1 parent:(id)arg2;
- (id)initWithIndex:(long long)arg1 parent:(id)arg2;
- (id)segmentedCell;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)_accessibilityPerformClickAction:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;

@end

@interface NSSegmentedControl : NSControl
{
    long long _reserved1;
    long long _reserved2;
    long long _reserved3;
    long long _reserved4;
}

+ (void)initialize;
- (BOOL)isFlipped;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)_updateMenuUniquing;
- (id)_setWindow:(id)arg1;
- (void)_windowChangedKeyState;
- (void)viewDidEndLiveResize;
- (void)setSegmentCount:(long long)arg1;
- (long long)segmentCount;
- (void)setSelectedSegment:(long long)arg1;
- (long long)selectedSegment;
- (BOOL)selectSegmentWithTag:(long long)arg1;
- (long long)indexOfSelectedItem;
- (void)setWidth:(double)arg1 forSegment:(long long)arg2;
- (double)widthForSegment:(long long)arg1;
- (void)setImage:(id)arg1 forSegment:(long long)arg2;
- (id)imageForSegment:(long long)arg1;
- (void)setAlternateImage:(id)arg1 forSegment:(long long)arg2;
- (id)alternateImageForSegment:(long long)arg1;
- (unsigned long long)imageScalingForSegment:(long long)arg1;
- (void)setImageScaling:(unsigned long long)arg1 forSegment:(long long)arg2;
- (void)setLabel:(id)arg1 forSegment:(long long)arg2;
- (id)labelForSegment:(long long)arg1;
- (void)setMenu:(id)arg1 forSegment:(long long)arg2;
- (id)menuForSegment:(long long)arg1;
- (void)setSelected:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)isSelectedForSegment:(long long)arg1;
- (void)setEnabled:(BOOL)arg1 forSegment:(long long)arg2;
- (BOOL)isEnabledForSegment:(long long)arg1;
- (void)_updateHeightToReflectNewWindowStyleIfNecessary;
- (void)viewDidMoveToWindow;
- (void)setSegmentStyle:(long long)arg1;
- (long long)segmentStyle;
- (void)updateTrackingAreas;
- (void)moveDown:(id)arg1;

@end

@interface NSSegmentedControlBinder : NSValueBinder
{
}

+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)_referenceBinding;
- (id)availableBindings;

@end

@interface NSMultipleSelectionBinder : NSSelectionBinder
{
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (BOOL)insertsNullPlaceholder;
- (id)availableBindings;
- (id)_referenceBinding;

@end

@interface NSSelectionBinder : NSValueBinder
{
    long long _contentPlacementTag;
    struct __selectionBinderFlags {
        unsigned int _insertsNullPlaceholder:1;
        unsigned int _contentValuesBindingIsInSync:1;
        unsigned int _contentObjectsBindingIsInSync:1;
        unsigned int _needsToSetUpObserving:1;
        unsigned int _isUpdatingObject:1;
        unsigned int _reservedSelectionBinder:27;
    } _selectionBinderFlags;
    id _modelObservingTracker;
}

+ (void)initialize;
+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (id)bindingsForObject:(id)arg1;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (void)_copyDetailsFromBinder:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (BOOL)_isReferenceBinding:(id)arg1;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)setInsertsNullPlaceholder:(BOOL)arg1;
- (BOOL)insertsNullPlaceholder;
- (void)setContentPlacementTag:(long long)arg1;
- (long long)contentPlacementTag;
- (void)selectionMechanismWasDismissed:(id)arg1;
- (id)availableBindings;
- (BOOL)_analyzeContentBindingInSyncWithBinding:(id)arg1;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)_updateObservingRegistration:(BOOL)arg1;
- (BOOL)_observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (id)_referenceBinding;
- (BOOL)_valueClassIsSortableWithBinding:(id)arg1;
- (id)_defaultSortDescriptorPrototypeKey;
- (id)_preferredPlaceholderForMarker:(id)arg1 onlyIfNotExplicitlySet:(BOOL)arg2;
- (id)preferredPlaceholderForMarker:(id)arg1;
- (id)contentValueKey;
- (id)contentObjectKey;
- (id)_valueForBindingWithoutResolve:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2;
- (void)_adjustObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 observedController:(id)arg3 observedKeyPath:(id)arg4 context:(void *)arg5 editableState:(char *)arg6 adjustState:(char *)arg7;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)contentValueWithEditedMode:(struct __NSKeyValueCodingControllerModeType)arg1 contentIndex:(unsigned long long)arg2;
- (id)contentObjectWithEditedMode:(struct __NSKeyValueCodingControllerModeType)arg1 contentIndex:(unsigned long long)arg2;
- (unsigned long long)contentCountWithEditedMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (id)contentValueWithEditedMode:(struct __NSKeyValueCodingControllerModeType)arg1 selectedObject:(id)arg2;

@end

@interface NSServiceMaster : NSObject <NSServiceMasterProto>
{
    NSMutableDictionary *_localObjects;
    id _reserved;
    struct {
        unsigned int serviceVendingIsActive:1;
        unsigned int reserved:31;
    } _serviceFlags;
}

+ (id)sharedServiceMaster;
- (id)init;
- (void)dealloc;
- (void)registerObject:(id)arg1 withServicePath:(id)arg2;
- (void)unregisterObjectWithServicePath:(id)arg1;
- (id)serviceListener;
- (id)objectForServicePath:(id)arg1;
- (id)objectForServicePath:(id)arg1 app:(id)arg2 doLaunch:(BOOL)arg3 limitDate:(id)arg4 basePortName:(id)arg5;
- (id)objectForServicePath:(id)arg1 app:(id)arg2 doLaunch:(BOOL)arg3 limitDate:(id)arg4;

@end

@interface NSServiceListener : NSObject <NSServiceListenerProto>
{
    NSMutableArray *serviceProviders;
}

- (void)addServiceProvider:(id)arg1;
- (void)removeServiceProvider:(id)arg1;
- (id)providerRespondingToSelector:(SEL)arg1;
- (id)_doInvokeServiceIn:(id)arg1 msg:(id)arg2 pb:(id)arg3 userData:(id)arg4 error:(id *)arg5 unhide:(BOOL)arg6;

@end

@interface NSShadow : NSObject <NSCopying, NSCoding>
{
    unsigned long long _shadowFlags;
    struct CGSize _shadowOffset;
    double _shadowBlurRadius;
    NSColor *_shadowColor;
    double _reservedFloat[3];
    void *_reserved;
}

+ (void)initialize;
+ (id)shadow;
+ (id)defaultShadowColor;
- (id)init;
- (id)initWithShadow:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (double)shadowBlurRadius;
- (void)setShadowBlurRadius:(double)arg1;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
- (void)set;
- (id)description;

@end

@interface NSShadowSurface : NSSurface
{
    int _height;
    char *_fill;
    BOOL _isHorizontal;
}

- (id)initWithView:(id)arg1 height:(long long)arg2 fill:(const char *)arg3 isHorizontal:(BOOL)arg4;
- (id)initWithView:(id)arg1 height:(long long)arg2 fill:(const char *)arg3;
- (void)dealloc;
- (void)finalize;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface NSSlider : NSControl
{
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)sizeToFit;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (double)altIncrementValue;
- (void)setAltIncrementValue:(double)arg1;
- (void)setTitleCell:(id)arg1;
- (id)titleCell;
- (void)setTitleColor:(id)arg1;
- (id)titleColor;
- (void)setTitleFont:(id)arg1;
- (id)titleFont;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)setTitleNoCopy:(id)arg1;
- (void)setKnobThickness:(double)arg1;
- (double)knobThickness;
- (void)setImage:(id)arg1;
- (id)image;
- (long long)isVertical;
- (void)setEnabled:(BOOL)arg1;
- (void)_moveInDirection:(unsigned long long)arg1;
- (void)moveRight:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)setNumberOfTickMarks:(long long)arg1;
- (long long)numberOfTickMarks;
- (void)setTickMarkPosition:(unsigned long long)arg1;
- (unsigned long long)tickMarkPosition;
- (void)setAllowsTickMarkValuesOnly:(BOOL)arg1;
- (BOOL)allowsTickMarkValuesOnly;
- (double)tickMarkValueAtIndex:(long long)arg1;
- (struct CGRect)rectOfTickMarkAtIndex:(long long)arg1;
- (long long)indexOfTickMarkAtPoint:(struct CGPoint)arg1;
- (double)closestTickMarkValueToValue:(double)arg1;

@end

@interface NSSliderCell : NSActionCell
{
    int _reserved[3];
    int _numberOfTickMarks;
    double _altIncValue;
    double _value;
    double _maxValue;
    double _minValue;
    struct CGRect _trackRect;
    struct __sliderCellFlags {
        unsigned int weAreVertical:1;
        unsigned int weAreVerticalSet:1;
        unsigned int reserved1:1;
        unsigned int isPressed:1;
        unsigned int allowsTickMarkValuesOnly:1;
        unsigned int tickMarkPosition:1;
        unsigned int sliderType:2;
        unsigned int drawing:1;
        unsigned int reserved2:23;
    } _scFlags;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
+ (struct __CFDictionary *)_coreUILinearBarCallbacksMap;
+ (struct __CFDictionary *)_coreUILinearKnobCallbacksMap;
+ (struct __CFDictionary *)_coreUIDialCallbacksMap;
- (id)init;
- (BOOL)_highlightsWithHighlightRect;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (int)intValue;
- (void)setIntValue:(int)arg1;
- (long long)integerValue;
- (void)setIntegerValue:(long long)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (double)doubleValue;
- (void)setDoubleValue:(double)arg1;
- (void)setContinuous:(BOOL)arg1;
- (BOOL)isContinuous;
- (BOOL)isOpaque;
- (BOOL)_applicableShowsFocus;
- (BOOL)_usesCustomTrackImage;
- (void)_drawCustomTrackWithTrackRect:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_shouldTryCoreUIDrawing;
- (struct __CFString *)_coreUIWidget:(id)arg1;
- (struct __CFString *)_coreUISize:(id)arg1;
- (struct __CFBoolean *)_coreUIIsFocused:(id)arg1;
- (struct CGStyle *)_coreUIFocusStyleWithView:(id)arg1;
- (struct __CFBoolean *)_coreUIIsFlippedWithView:(id)arg1;
- (struct __CFString *)_coreUILinearState:(id)arg1;
- (id)_coreUILinearValue:(id)arg1;
- (struct __CFString *)_coreUILinearOrientation:(id)arg1;
- (struct __CFString *)_coreUILinearDirection:(id)arg1;
- (struct __CFBoolean *)_coreUILinearBarNoIndicator:(id)arg1;
- (struct __CFBoolean *)_coreUILinearBarIsFocused:(id)arg1;
- (struct CGStyle *)_coreUILinearBarFocusStyleWithView:(id)arg1;
- (struct __CFString *)_coreUILinearKnobWidget:(id)arg1;
- (struct __CFBoolean *)_coreUILinearKnobIndicatorOnly:(id)arg1;
- (struct __CFString *)_coreUICircularState:(id)arg1;
- (id)_coreUICircularValue:(id)arg1;
- (struct __CFDictionary *)_copyCoreUIDialDrawOptionsWithView:(id)arg1;
- (struct __CFDictionary *)_copyCoreUILinearBarDrawOptionsWithView:(id)arg1;
- (struct __CFDictionary *)_copyCoreUILinearKnobDrawOptionsWithView:(id)arg1;
- (void)_drawTickMarks;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)setKnobThickness:(double)arg1;
- (BOOL)_setKnobThickness:(double)arg1 usingInsetRect:(BOOL)arg2;
- (double)knobThickness;
- (void)setImage:(id)arg1;
- (id)image;
- (void)setTitleColor:(id)arg1;
- (id)titleColor;
- (void)setTitleFont:(id)arg1;
- (id)titleFont;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)setTitleCell:(id)arg1;
- (id)titleCell;
- (void)setSliderType:(unsigned long long)arg1;
- (unsigned long long)sliderType;
- (struct CGRect)knobRectFlipped:(BOOL)arg1;
- (void)drawKnob:(struct CGRect)arg1;
- (void)_drawLiveResizeHighlightWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawKnob;
- (BOOL)_calcTrackRect:(struct CGRect *)arg1 andAdjustRect:(BOOL)arg2;
- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)setAltIncrementValue:(double)arg1;
- (double)altIncrementValue;
- (long long)isVertical;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)_vetoMouseDragActionDispatch;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGRect)trackRect;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setNumberOfTickMarks:(long long)arg1;
- (long long)numberOfTickMarks;
- (void)setTickMarkPosition:(unsigned long long)arg1;
- (unsigned long long)tickMarkPosition;
- (void)setAllowsTickMarkValuesOnly:(BOOL)arg1;
- (BOOL)allowsTickMarkValuesOnly;
- (double)tickMarkValueAtIndex:(long long)arg1;
- (struct CGRect)rectOfTickMarkAtIndex:(long long)arg1;
- (long long)indexOfTickMarkAtPoint:(struct CGPoint)arg1;
- (double)closestTickMarkValueToValue:(double)arg1;
- (void)_moveInDirection:(unsigned long long)arg1;

@end

@interface NSCallbackDictionary : NSDictionary
{
    id _delegate;
    struct __CFDictionary *_keyToSelectorMap;
    id _context;
}

+ (id)dictionaryWithDelegate:(id)arg1 keyToSelectorMap:(struct __CFDictionary *)arg2 context:(id)arg3;
- (id)initWithDelegate:(id)arg1 keyToSelectorMap:(struct __CFDictionary *)arg2 context:(id)arg3;
- (void)dealloc;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)keyEnumerator;

@end

@interface NSAccessibilitySliderValueIndicator : NSAccessibilityMockUIElement
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;

@end

@interface NSSortedArray : NSMutableArray
{
    NSMutableArray *_array;
    SEL _compareSelector;
    unsigned long long _cachedCount;
    id _cachedFirstObject;
}

+ (void)initialize;
- (id)initWithCapacity:(unsigned long long)arg1 compareSelector:(SEL)arg2;
- (id)initWithCompareSelector:(SEL)arg1;
- (id)init;
- (SEL)compareSelector;
- (void)setCompareSelector:(SEL)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithObjects:(id *)arg1 count:(unsigned long long)arg2;
- (id)initWithObjects:(id)arg1;
- (id)initWithArray:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithArray:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)dealloc;
- (void)_insertObjectInSortOrder:(id)arg1;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)addObject:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)setArray:(id)arg1;
- (void)sortUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)sortUsingSelector:(SEL)arg1;

@end

@interface NSSound : NSObject <NSCopying, NSCoding, NSPasteboardReading, NSPasteboardWriting>
{
    id _delegate;
    id _info;
    id _reserved[6];
    unsigned long long _sFlags;
}

+ (void)initialize;
+ (id)soundUnfilteredTypes;
+ (id)soundUnfilteredFileTypes;
+ (id)soundUnfilteredPasteboardTypes;
+ (BOOL)canInitWithPasteboard:(id)arg1;
+ (id)_searchForSoundNamed:(id)arg1;
+ (id)soundNamed:(id)arg1;
+ (void)_forceSoundEngine:(long long)arg1;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (void)_postInitialization;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)_allocateExtraFields;
- (id)initWithContentsOfFile:(id)arg1 byReference:(BOOL)arg2;
- (id)initWithContentsOfURL:(id)arg1 byReference:(BOOL)arg2;
- (id)initWithData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)initWithPasteboard:(id)arg1;
- (void)writeToPasteboard:(id)arg1;
- (id)_url;
- (id)url;
- (id)name;
- (BOOL)setName:(id)arg1;
- (void)_setRegistersName:(BOOL)arg1;
- (BOOL)_registersName;
- (BOOL)_setAudioDeviceUID:(id)arg1 channels:(id)arg2 error:(id *)arg3;
- (void)setPlaybackDeviceIdentifier:(id)arg1;
- (id)playbackDeviceIdentifier;
- (BOOL)_setChannelMapping:(id)arg1 error:(id *)arg2;
- (void)setChannelMapping:(id)arg1;
- (id)channelMapping;
- (BOOL)isPlaying;
- (BOOL)pause;
- (BOOL)resume;
- (BOOL)play;
- (BOOL)stop;
- (void)_updateVolumeByStoredVolume;
- (void)_updateSoundShouldLoopByStoredLoopFlag;
- (void)setVolume:(float)arg1;
- (float)volume;
- (void)setLoops:(BOOL)arg1;
- (BOOL)loops;
- (double)duration;
- (double)currentTime;
- (void)setCurrentTime:(double)arg1;
- (void)_audioCompleted1;
- (void)_qtMovieDidEnd:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;

@end

@interface _NSSoundAux : NSObject
{
    struct OpaqueAudioConverter *_audioConverter;
    struct AudioBuffer _converterBuffer;
    struct ComponentInstanceRecord *_outputUnit;
    struct OpaqueAudioFileID *_audioFile;
    struct AudioStreamBasicDescription _audioFormat;
    long long _audioDataReadHeadPosition;
    unsigned long long _audioDataLength;
    long long _audioValidFrameCount;
    unsigned int _maximumPackets;
    struct AudioStreamPacketDescription *_audioPacketDescriptions;
    NSString *audioDeviceUID;
    float _volume;
    int _spinLock;
    unsigned char _ivarFlags;
}

@end

@interface NSSpeechRecognizerVars : NSObject
{
    id _delegate;
    NSMutableDictionary *_commandDisplay;
    NSString *_displayedTitle;
    NSArray *_displayedStrings;
    NSArray *_simpleCommandsArray;
    id _languageModel;
    struct OpaqueSRSpeechObject *_srRecognizer;
    struct OpaqueSRSpeechObject *_srRecognitionSystem;
    id _objectForCurrentRecognition;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setSRRecognitionSystem:(struct OpaqueSRSpeechObject *)arg1;
- (struct OpaqueSRSpeechObject *)srRecognitionSystem;
- (void)setSRRecognizer:(struct OpaqueSRSpeechObject *)arg1;
- (struct OpaqueSRSpeechObject *)srRecognizer;
- (void)setDisplayedStringsArray:(id)arg1;
- (id)displayedStringsArray;
- (void)setDisplayedTitle:(id)arg1;
- (id)displayedTitle;
- (id)commandDisplay;
- (void)setSimpleCommandsArray:(id)arg1;
- (id)simpleCommandsArray;
- (void)setObjectForCurrentRecognition:(id)arg1;
- (void)setLanguageModel:(id)arg1;
- (id)languageModel;

@end

@interface NSSpeechRecognizer : NSObject
{
    id _privateNSSpeechRecognizerVars;
}

+ (id)_forSRSpeechObject:(struct OpaqueSRSpeechObject *)arg1 objectForProperty:(unsigned int)arg2 usingDataSize:(int)arg3 withRequestedObjectClass:(Class)arg4;
+ (BOOL)_forSRSpeechObject:(struct OpaqueSRSpeechObject *)arg1 setObject:(id)arg2 forProperty:(unsigned int)arg3 usingDataSize:(int)arg4;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)startListening;
- (void)stopListening;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)commands;
- (void)setCommands:(id)arg1;
- (id)displayedCommandsTitle;
- (void)setDisplayedCommandsTitle:(id)arg1;
- (BOOL)listensInForegroundOnly;
- (void)setListensInForegroundOnly:(BOOL)arg1;
- (BOOL)blocksOtherRecognizers;
- (void)setBlocksOtherRecognizers:(BOOL)arg1;
- (void)_setDisplayContents:(id)arg1 usingSimpleCommandDefaults:(BOOL)arg2;
- (void)_setDisplayContents:(id)arg1;
- (void)_setDisplayPositionHint:(long long)arg1;
- (void)_setDisplayRelativeOrder:(long long)arg1;
- (void)_setTargetProcess:(struct ProcessSerialNumber *)arg1;
- (void)_setLanguageModel:(id)arg1;
- (id)_languageModel;
- (void)_updateCommandDisplayWithRecognizer;
- (struct OpaqueSRSpeechObject *)_createSRLanguageModelWithDescription:(id)arg1;
- (struct OpaqueSRSpeechObject *)_createSRLanguagePath;
- (struct OpaqueSRSpeechObject *)_createSRLanguagePhraseWithString:(id)arg1;
- (struct OpaqueSRSpeechObject *)_createSRLanguageWordWithString:(id)arg1;
- (void)_handleRecognitionBeginningWithRecognitionResult:(struct OpaqueSRSpeechObject *)arg1;
- (void)_handleRecognitionDoneWithRecognitionResult:(struct OpaqueSRSpeechObject *)arg1;
- (id)_objectForProperty:(unsigned int)arg1 usingDataSize:(int)arg2 withRequestedObjectClass:(Class)arg3;
- (BOOL)_setObject:(id)arg1 forProperty:(unsigned int)arg2 usingDataSize:(int)arg3;

@end

@interface NSSpeechSynthesizerVars : NSObject
{
    id _delegate;
    struct SpeechChannelRecord *_speechChannel;
    unsigned int _speechFeedbackServicesRef;
    NSTimer *_speechFeedbackServicesTimer;
    NSString *_currentVoice;
    float _normalSpeakingRate;
    BOOL _usingDefaultVoice;
    BOOL _usesFeedbackWindow;
    BOOL _speakingSpeechFeedbackServices;
    BOOL _needsResyncWithDefaultVoice;
    BOOL _speechFinishedSuccessfully;
    BOOL _synthesizerIsRetained;
}

+ (BOOL)findVoiceByIdentifier:(id)arg1 returningCreator:(unsigned int *)arg2 returningID:(unsigned int *)arg3;
+ (id)voiceIdentifierForVoiceCreator:(unsigned int)arg1 voiceID:(unsigned int)arg2;
- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (short)setSpeechChannelWithVoiceIdentifier:(id)arg1;
- (short)setSpeechChannelWithVoiceCreator:(unsigned int)arg1 voiceID:(unsigned int)arg2;
- (struct SpeechChannelRecord *)speechChannel;
- (unsigned int)speechFeedbackServicesRef;
- (void)setCurrentVoiceIdentifier:(id)arg1;
- (id)currentVoiceIdentifier;
- (float)normalSpeakingRate;
- (void)setUsingDefaultVoice:(BOOL)arg1;
- (BOOL)usingDefaultVoice;
- (void)setUsesFeedbackWindow:(BOOL)arg1;
- (BOOL)usesFeedbackWindow;
- (void)setSpeakingSpeechFeedbackServices:(BOOL)arg1;
- (BOOL)speakingSpeechFeedbackServices;
- (void)setSpeechFeedbackServicesTimer:(id)arg1;
- (id)speechFeedbackServicesTimer;
- (void)setNeedsResyncWithDefaultVoice:(BOOL)arg1;
- (BOOL)needsResyncWithDefaultVoice;
- (void)setSpeechFinishedSuccessfully:(BOOL)arg1;
- (BOOL)speechFinishedSuccessfully;
- (void)setSynthesizerIsRetained:(BOOL)arg1;
- (BOOL)synthesizerIsRetained;

@end

@interface NSSpeechSynthesizer : NSObject
{
    id _privateNSSpeechSynthesizerVars;
}

+ (BOOL)isAnyApplicationSpeaking;
+ (id)defaultVoice;
+ (id)availableVoices;
+ (id)attributesForVoice:(id)arg1;
- (id)init;
- (id)initWithVoice:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)startSpeakingString:(id)arg1;
- (BOOL)startSpeakingString:(id)arg1 toURL:(id)arg2;
- (BOOL)isSpeaking;
- (void)stopSpeaking;
- (void)stopSpeakingAtBoundary:(unsigned long long)arg1;
- (void)pauseSpeakingAtBoundary:(unsigned long long)arg1;
- (void)continueSpeaking;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)voice;
- (BOOL)setVoice:(id)arg1;
- (void)setRate:(float)arg1;
- (float)rate;
- (void)setVolume:(float)arg1;
- (float)volume;
- (BOOL)usesFeedbackWindow;
- (void)setUsesFeedbackWindow:(BOOL)arg1;
- (void)addSpeechDictionary:(id)arg1;
- (id)phonemesFromText:(id)arg1;
- (id)objectForProperty:(id)arg1 error:(id *)arg2;
- (BOOL)setObject:(id)arg1 forProperty:(id)arg2 error:(id *)arg3;
- (BOOL)_feedbackWindowIsVisible;
- (void)_checkIfSpeakingThroughSpeechFeedbackWindowIsFinished:(id)arg1;
- (void)_handleSpeechDoneCallback;
- (void)_handleWordCallbackWithParams:(id)arg1;
- (void)_handlePhonemeCallbackWithOpcode:(id)arg1;
- (void)_handleErrorCallbackWithParams:(id)arg1;
- (void)_handleSyncCallbackWithMessage:(id)arg1;
- (BOOL)_beginSpeakingString:(id)arg1 optionallyToURL:(id)arg2;
- (void)_setupCallbacks;
- (void)_handleDefaultVoiceChange;
- (float)_normalSpeakingRate;
- (void)_setPitchBase:(float)arg1;
- (float)_pitchBase;
- (void)_setRate:(float)arg1;
- (float)_rate;
- (void)_setVolume:(float)arg1;
- (float)_volume;
- (void)_stopSpeakingAtBoundary:(unsigned long long)arg1;
- (void)_pauseSpeakingAtBoundary:(unsigned long long)arg1;
- (void)_continueSpeaking;
- (id)_objectForProperty:(unsigned int)arg1 usingDataSize:(int)arg2 withRequestedObjectClass:(Class)arg3;
- (BOOL)_setObject:(id)arg1 forProperty:(unsigned int)arg2 usingDataSize:(int)arg3;

@end

@interface NSTextCheckingOperation : NSOperation
{
    NSString *_string;
    struct _NSRange _range;
    unsigned long long _offset;
    unsigned long long _checkingTypes;
    NSDictionary *_options;
    long long _tag;
    long long _sequenceNumber;
    id _completionHandler;
    NSArray *_results;
    NSOrthography *_orthography;
    long long _wordCount;
}

- (id)initWithString:(id)arg1 range:(struct _NSRange)arg2 offset:(unsigned long long)arg3 types:(unsigned long long)arg4 options:(id)arg5 tag:(long long)arg6 sequenceNumber:(long long)arg7 completionHandler:(id)arg8;
- (void)dealloc;
@property(readonly) long long sequenceNumber;
@property(readonly) NSArray *results;
@property(readonly) NSOrthography *orthography;
@property(readonly) long long wordCount;
- (void)performCompletionHandler;
- (void)main;

@end

@interface NSSpellingLanguageTableView : NSTableView
{
}

- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;

@end

@interface NSSpellChecker : NSObject
{
    id _guessesBrowser;
    id _wordField;
    id _languagePopUp;
    id _reserved1;
    id _panel;
    id _reserved2;
    id _correctButton;
    id _guessButton;
    id _ignoreButton;
    id _reserved3;
    id _languagesBrowser;
    id _quotesBrowser;
    id _replacementsBrowser;
    id _defineButton;
    struct __scFlags {
        unsigned int autoShowGuesses:1;
        unsigned int needDelayedGuess:1;
        unsigned int unignoreInProgress:1;
        unsigned int wordFieldEdited:1;
        unsigned int inSpelling:1;
        unsigned int reconnectSpelling:1;
        unsigned int inGrammar:1;
        unsigned int reconnectGrammar:1;
        unsigned int languageIdentification:1;
        unsigned int languagesHidden:1;
        unsigned int quotesByLanguage:1;
        unsigned int _reserved:21;
    } _scFlags;
    id _substitutionsPanel;
    id _reserved4;
    id _learnButton;
    id _infoField;
    id _grammarControl;
}

+ (long long)uniqueSpellDocumentTag;
+ (id)sharedSpellChecker;
+ (BOOL)sharedSpellCheckerExists;
- (id)_nameOfDictionaryForDocumentTag:(long long)arg1;
- (void)_setLanguageDictionaryName:(id)arg1;
- (void)_setDocumentDictionaryName:(id)arg1;
- (void)_setPreferredOrthographyIndexes;
- (id)_defaultServerURL;
- (BOOL)_fillSpellCheckerPopupButton:(id)arg1;
- (BOOL)_usePerAppLanguageIdentification;
- (id)init;
- (BOOL)_inSystemPreferences;
- (void)_fillLanguagePopUp:(id)arg1;
- (id)languageMenu;
- (void)_hideLanguagePopUp;
- (void)_showLanguagePopUp;
- (void)_initUI;
- (void)setupGuessesBrowser;
- (void)awakeFromNib;
- (long long)_indexOfItemInArray:(id)arg1 forLanguage:(id)arg2;
- (long long)_indexOfItemInPopUp:(id)arg1 forLanguage:(id)arg2;
- (long long)_indexOfPopupItemForLanguage:(id)arg1;
- (BOOL)setLanguage:(id)arg1;
- (id)language;
- (BOOL)setGuessLanguage:(id)arg1;
- (id)guessLanguage;
- (id)availableLanguages;
- (id)userPreferredLanguages;
- (BOOL)automaticallyIdentifiesLanguages;
- (void)setAutomaticallyIdentifiesLanguages:(BOOL)arg1;
- (id)_responder;
- (void)_updateControl:(id)arg1 forResponder:(id)arg2 getSelector:(SEL)arg3 setSelector:(SEL)arg4 toggleSelector:(SEL)arg5;
- (void)_activateControl:(id)arg1 forResponder:(id)arg2 setSelector:(SEL)arg3 toggleSelector:(SEL)arg4;
- (void)_updateGrammar;
- (void)updateGrammar:(id)arg1;
- (void)_changeGrammar:(id)arg1;
- (void)setWordFieldStringValue:(id)arg1;
- (BOOL)windowIsSpellingPanel:(id)arg1;
- (id)spellingPanel;
- (id)accessoryView;
- (id)_viewAboveAccessoryView;
- (void)setAccessoryView:(id)arg1;
- (id)_spellServers;
- (id)_titleForSelectedItem;
- (long long)_tagForSelectedItem;
- (BOOL)_launchSpellChecker:(long long)arg1 error:(id *)arg2;
- (id)_chosenSpellServer:(BOOL)arg1 launchIfNecessary:(BOOL)arg2;
- (void)_preflightChosenSpellServer;
- (void)_preflightTextCheckingForTypes:(unsigned long long)arg1;
- (void)_normalizeUserDictionary:(id)arg1;
- (id)_learnOrForgetOrInvalidate:(long long)arg1 word:(id)arg2 dictionary:(id)arg3 language:(id)arg4 ephemeral:(long long)arg5;
- (void)_learn:(id)arg1;
- (void)_forget:(id)arg1;
- (void)_ignore:(id)arg1;
- (void)ignoreWord:(id)arg1 inSpellDocumentWithTag:(long long)arg2;
- (id)_nonIgnoredDetailsForGrammarString:(id)arg1 details:(id)arg2 inSpellDocumentWithTag:(long long)arg3;
- (id)_nonIgnoredGrammarCheckingResultForResult:(id)arg1 stringToCheck:(id)arg2 offset:(unsigned long long)arg3 inSpellDocumentWithTag:(long long)arg4;
- (void)learnWord:(id)arg1 language:(id)arg2;
- (void)learnWord:(id)arg1;
- (void)forgetWord:(id)arg1 language:(id)arg2;
- (void)forgetWord:(id)arg1;
- (void)unlearnWord:(id)arg1;
- (BOOL)hasLearnedWord:(id)arg1;
- (id)ignoredWordsInSpellDocumentWithTag:(long long)arg1;
- (void)setIgnoredWords:(id)arg1 inSpellDocumentWithTag:(long long)arg2;
- (void)closeSpellDocumentWithTag:(long long)arg1;
- (void)_chooseGuess:(id)arg1;
- (void)_reallyChooseGuess:(id)arg1;
- (void)_correct:(id)arg1;
- (void)_setSingleQuotes:(id)arg1 doubleQuotes:(id)arg2 useByLanguage:(id)arg3 quotesBrowser:(id)arg4 replacementsBrowser:(id)arg5 addReplacement:(id)arg6 removeReplacement:(id)arg7;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 canDragRowsWithIndexes:(id)arg2 atPoint:(struct CGPoint)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_addReplacement:(id)arg1;
- (void)_removeReplacement:(id)arg1;
- (void)_copyFromMenu:(id)arg1;
- (void)_define:(id)arg1;
- (void)_defineFromMenu:(id)arg1;
- (void)_setLastGuess:(id)arg1;
- (void)_setSelectionString:(id)arg1;
- (id)guessesForWord:(id)arg1;
- (id)guessesForWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4;
- (void)_setGuesses:(id)arg1;
- (void)_guess:(id)arg1;
- (void)updatePanels;
- (void)_doUpdate:(id)arg1;
- (void)_windowDidBecomeVisible:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (BOOL)_shouldWriteLanguageSettingsToDefaults;
- (void)_openSystemPreferences:(id)arg1;
- (void)_changeLanguageFromMenu:(id)arg1;
- (void)_changeLanguage:(id)arg1;
- (void)_configureLanguages:(id)arg1;
- (void)confirmSheet:(id)arg1;
- (void)cancelSheet:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_languagePreferencesChanged:(BOOL)arg1;
- (void)_findNext:(id)arg1;
- (long long)adjustOffsetToNextWordBoundaryInString:(id)arg1 startingAt:(long long)arg2;
- (struct _NSRange)_chunkAndCheckGrammarInString:(id)arg1 language:(id)arg2 usingSpellServer:(id)arg3 details:(id *)arg4;
- (struct _NSRange)_chunkAndFindMisspelledWordInString:(id)arg1 language:(id)arg2 learnedDictionaries:(id)arg3 wordCount:(long long *)arg4 usingSpellServer:(id)arg5;
- (struct _NSRange)_checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id *)arg6 reconnectOnError:(BOOL)arg7;
- (struct _NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id *)arg6 reconnectOnError:(BOOL)arg7;
- (struct _NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id *)arg6;
- (struct _NSRange)_checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long *)arg6 reconnectOnError:(BOOL)arg7;
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long *)arg6 reconnectOnError:(BOOL)arg7;
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(BOOL)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long *)arg6;
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2;
- (long long)countWordsInString:(id)arg1 language:(id)arg2;
- (void)_checkSpellingAndGrammarInString:(id)arg1 range:(struct _NSRange)arg2 enclosingRange:(struct _NSRange)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7 inSpellDocumentWithTag:(long long)arg8 mutableResults:(id)arg9 wordCount:(long long *)arg10;
- (id)checkString:(id)arg1 range:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 orthography:(id *)arg6 wordCount:(long long *)arg7;
- (id)completionsForPartialWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4;
- (void)updateSpellingPanelWithMisspelledWord:(id)arg1;
- (void)updateSpellingPanelWithGrammarString:(id)arg1 detail:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)substitutionsPanel;
- (id)substitutionsPanelAccessoryViewController;
- (void)setSubstitutionsPanelAccessoryViewController:(id)arg1;
- (void)_updateSingleQuotes:(id)arg1 doubleQuotes:(id)arg2 useByLanguage:(id)arg3;
- (void)_updateSubstitutions;
- (void)checkTextInDocument:(id)arg1;
- (void)checkTextInSelection:(id)arg1;
- (void)_changeSubstitutions:(id)arg1;
- (void)_changeQuotes:(id)arg1;
- (id)userQuotesArrayForLanguage:(id)arg1;
- (void)_quotesPreferencesChanged;
- (void)_writeReplacementPreferences;
- (void)_reallyResetReplacementPreferences;
- (void)_replacementPreferencesSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_resetReplacementPreferences;
- (void)_replacementPreferencesChanged;
- (id)userReplacementsDictionary;
- (id)_dataDetectorsActionsManager;
- (id)menuForResult:(id)arg1 string:(id)arg2 options:(id)arg3 atLocation:(struct CGPoint)arg4 inView:(id)arg5;
- (long long)requestCheckingOfString:(id)arg1 range:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 completionHandler:(id)arg6;
- (id)languageForWordRange:(struct _NSRange)arg1 inString:(id)arg2 orthography:(id)arg3;

@end

@interface NSSpellingPanel : NSPanel
{
}

- (BOOL)worksWhenModal;

@end

@interface NSSplitView : NSView
{
    id _variables;
}

+ (void)initialize;
+ (id)_autosaveDefaultsKeyForName:(id)arg1;
- (void)_initVariables;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setVertical:(BOOL)arg1;
- (BOOL)isVertical;
- (void)setDividerStyle:(long long)arg1;
- (long long)dividerStyle;
- (void)setAutosaveName:(id)arg1;
- (id)autosaveName;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)drawDividerInRect:(struct CGRect)arg1;
- (id)dividerColor;
- (double)dividerThickness;
- (BOOL)_hasHidableDividerAtIndex:(long long)arg1;
- (BOOL)_shouldAdjustSizeOfSubview:(id)arg1;
- (double)_scaledDividerThickness;
- (id)_dividerFrames;
- (void)_autosaveSubviewLayoutIfNecessary;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)_finishedMakingConnections;
- (void)_setSubviewsAreAdjusted:(BOOL)arg1;
- (BOOL)_subviewsOrDividersHaveChangedSinceAdjustment;
- (void)adjustSubviews;
- (BOOL)isSubviewCollapsed:(id)arg1;
- (double)minPossiblePositionOfDividerAtIndex:(long long)arg1;
- (double)maxPossiblePositionOfDividerAtIndex:(long long)arg1;
- (double)_unscaledDividerThickness;
- (CDStruct_0a28aba5)_dragConstraintsOfDividerAtIndex:(unsigned long long)arg1;
- (id)_dragParamsOfDividerAtIndex:(unsigned long long)arg1;
- (CDStruct_8e9e3288)_resultOfDividerDragToPosition:(double)arg1 withParams:(id)arg2;
- (double)_presentDividerDragResult:(CDStruct_8e9e3288)arg1 withParams:(id)arg2;
- (void)setPosition:(double)arg1 ofDividerAtIndex:(long long)arg2;
- (void)setIsPaneSplitter:(BOOL)arg1;
- (BOOL)isPaneSplitter;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_effectiveFrameForDrawnFrame:(struct CGRect)arg1 ofDividerAtIndex:(long long)arg2;
- (struct CGRect)_additionalEffectiveFrameOfDividerAtIndex:(long long)arg1;
- (long long)_indexOfDividerForLocation:(struct CGPoint)arg1 andReturnFrame:(struct CGRect *)arg2;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)isFlipped;
- (BOOL)_allSubviewsAreOpaque;
- (BOOL)isOpaque;
- (id)_cursorOfDividerAtIndex:(unsigned long long)arg1 position:(double)arg2 dragConstraints:(CDStruct_0a28aba5)arg3;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)preservesContentDuringLiveResize;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)resetCursorRects;
- (BOOL)_validateSubviewFrames;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setAutoresizesSubviews:(BOOL)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)_adjustSubviewsIfNecessary;
- (void *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (void)viewWillDraw;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)willRemoveSubview:(id)arg1;
- (void)_windowChangedKeyState;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_compatibility_seemsToBeVertical;
- (id)initWithCoder:(id)arg1;
- (struct CGRect)_resizeViewsForOffset:(long long)arg1 coordinate:(double)arg2;

@end

@interface NSSplitViewDividerDragParams : NSObject
{
    long long index;
    NSView *originalFocusedSubview;
    CDStruct_0a28aba5 staticConstraints;
    BOOL delegateDynamicallyConstrains;
}

- (void)dealloc;

@end

@interface NSSplitViewVariables : NSObject
{
    BOOL isVertical;
    BOOL dividerStyle;
    NSString *autosaveName;
    id delegate;
    BOOL isPaneSplitter;
    int cachedSubviewOpacity;
    NSMutableArray *lastAdjustmentSubviewFrames;
    double lastAdjustmentDividerThickness;
    NSMutableArray *originalSubviewProportionsDuringResizing;
    NSMutableArray *subviewIsResizable;
    struct {
        unsigned int resizeSubviewsWithOldSizeIsBeingInvokedByViewWillDraw:1;
        unsigned int resizeSubviewsWithOldSizeInvokedDelegate:1;
        unsigned int warnedAboutInvalidSubviewFrames:1;
        unsigned int warnedAboutInvalidSubviewOrder:1;
        unsigned int delegateCursorOfDividerAtIndex:1;
        unsigned int unarchiving:1;
        unsigned int autosaveDelayed:1;
        unsigned int shouldDelayAutosave:1;
        unsigned int firstDividerIsHidden:1;
        unsigned int lastDividerIsHidden:1;
        unsigned int unused:22;
    } svFlags;
}

@end

@interface NSSplitViewSplitter : NSAccessibilityMockUIElement
{
    long long _index;
}

+ (id)splitterWithIndex:(long long)arg1 parent:(id)arg2;
- (id)initWithIndex:(long long)arg1 parent:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)index;

@end

@interface NSStatusBar : NSObject
{
    id _items;
    void *_fReserved1;
    void *_fReserved2;
    long long _registeredForNote;
}

+ (id)systemStatusBar;
+ (BOOL)_performKeyEquivalent:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)statusItemWithLength:(double)arg1;
- (void)removeStatusItem:(id)arg1;
- (BOOL)isVertical;
- (double)thickness;
- (id)_name;
- (id)_lockName;
- (id)_statusItemWithLength:(double)arg1 withPriority:(long long)arg2;
- (void)_activeMenuBarDrawingStyleDidChange:(id)arg1;
- (void)_removeObjectFromItemArray:(id)arg1;
- (void)_insertObjectInItemArray:(id)arg1;
- (void)_insertStatusItem:(id)arg1 withPriority:(long long)arg2;
- (void)_removeStatusItem:(id)arg1;
- (void)_setLengthOfStatusItem:(id)arg1 to:(double)arg2;
- (void)_setUpdatesDisabled:(BOOL)arg1;
- (BOOL)_updatesDisabled;
- (BOOL)_performKeyEquivalent:(id)arg1;
- (void)_statusItemIsDeallocing:(id)arg1;

@end

@interface NSStatusBarButton : NSButton
{
}

+ (void)initialize;
- (void)setBackgroundStyle:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1 inStatusBar:(id)arg2;
- (id)statusMenu;
- (void)setStatusMenu:(id)arg1;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (void)rightMouseDown:(id)arg1;

@end

@interface NSStatusBarButtonCell : NSButtonCell
{
    NSStatusBar *_fStatusBar;
    NSMenu *_fStatusMenu;
    BOOL _fHighlightMode;
    BOOL _fDoubleClick;
    SEL _fDoubleAction;
}

+ (void)popupStatusBarMenu:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 withEvent:(id)arg4;
- (id)init;
- (void)dealloc;
- (void)setStatusBar:(id)arg1;
- (id)statusMenu;
- (void)setStatusMenu:(id)arg1;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (BOOL)acceptsFirstResponder;
- (long long)interiorBackgroundStyle;
- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_fillBackground:(struct CGRect)arg1 withAlternateColor:(BOOL)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)performClick:(id)arg1;
- (BOOL)_sendActionFrom:(id)arg1;

@end

@interface NSStatusBarWindow : NSWindow
{
    id _statusBarReserved;
}

- (id)initWithContentRect:(struct CGRect)arg1;
- (void)_setWindowNumber:(long long)arg1;
- (BOOL)_showToolTip;
- (void)_setWindowTag;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (struct CGRect)constrainFrameRect:(struct CGRect)arg1 toScreen:(id)arg2;
- (void *)windowRef;
- (void)_noticeStatusBarVisibilityChangeIfNecessary;
- (void)sendEvent:(id)arg1;
- (struct CGPoint)convertBaseToScreen:(struct CGPoint)arg1;
- (BOOL)worksWhenModal;
- (BOOL)canHide;
- (void)_automateLiveResize;
- (BOOL)_drawsWithinMenuBar;

@end

@interface NSStatusItem : NSObject
{
    NSStatusBar *_fStatusBar;
    double _fLength;
    NSWindow *_fWindow;
    NSView *_fView;
    int _fPriority;
    struct {
        unsigned int customView:1;
        unsigned int highlightMode:1;
        unsigned int hasAlternateImage:1;
        unsigned int hidden:1;
        unsigned int backgroundStyle:4;
        unsigned int inAdjustLength:1;
        unsigned int reserved:23;
    } _fFlags;
    id _statusItemMenu;
    id _fReserved2;
    id _fReserved3;
    id _fReserved4;
}

+ (id)_itemInStatusBar:(id)arg1 withLength:(double)arg2 withPriority:(long long)arg3;
- (void)dealloc;
- (id)statusBar;
- (double)length;
- (void)setLength:(double)arg1;
- (BOOL)_isHidden;
- (void)_setHidden:(BOOL)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (void)_updateButtonImagePosition;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)alternateImage;
- (void)setAlternateImage:(id)arg1;
- (id)_statusItemMenu;
- (id)menu;
- (void)setMenu:(id)arg1;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)arg1;
- (long long)sendActionOn:(long long)arg1;
- (void)popUpStatusItemMenu:(id)arg1;
- (long long)backgroundStyleForHighlight:(BOOL)arg1;
- (void)drawStatusBarBackgroundInRect:(struct CGRect)arg1 withHighlight:(BOOL)arg2;
- (id)view;
- (void)_propagateBackgroundStyle;
- (void)_activeMenuBarDrawingStyleDidChange;
- (void)setView:(id)arg1;
- (id)_initInStatusBar:(id)arg1 withLength:(double)arg2 withPriority:(long long)arg3;
- (id)_initInStatusBar:(id)arg1 withLength:(double)arg2 withPriority:(long long)arg3 hidden:(BOOL)arg4;
- (id)_window;
- (id)_button;
- (void)_adjustLength;
- (void)_adjustLengthDueToViewFrameChange:(id)arg1;
- (long long)_backgroundStyle;
- (void)_setBackgroundStyle:(long long)arg1;

@end

@interface NSStepper : NSControl
{
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (double)increment;
- (void)setIncrement:(double)arg1;
- (BOOL)valueWraps;
- (void)setValueWraps:(BOOL)arg1;
- (BOOL)autorepeat;
- (void)setAutorepeat:(BOOL)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSStepperCell : NSActionCell
{
    double _value;
    double _minValue;
    double _maxValue;
    double _increment;
    struct {
        unsigned int valueWraps:1;
        unsigned int autorepeat:1;
        unsigned int drawing:1;
        unsigned int reserved:29;
    } _stFlags;
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (double)minValue;
- (void)setMinValue:(double)arg1;
- (double)maxValue;
- (void)setMaxValue:(double)arg1;
- (double)increment;
- (void)setIncrement:(double)arg1;
- (BOOL)valueWraps;
- (void)setValueWraps:(BOOL)arg1;
- (BOOL)autorepeat;
- (void)setAutorepeat:(BOOL)arg1;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (int)intValue;
- (void)setIntValue:(int)arg1;
- (long long)integerValue;
- (void)setIntegerValue:(long long)arg1;
- (float)floatValue;
- (void)setFloatValue:(float)arg1;
- (double)doubleValue;
- (void)setDoubleValue:(double)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct __CFDictionary *)_coreUIDrawOptionsWithView:(id)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)getPeriodicDelay:(float *)arg1 interval:(float *)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)_sendActionFrom:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSAccessibilityStepperArrowButton : NSAccessibilityMockUIElement
{
    BOOL _increments;
}

+ (id)incrementButtonWithParent:(id)arg1;
+ (id)decrementButtonWithParent:(id)arg1;
- (id)initWithIncrements:(BOOL)arg1 parent:(id)arg2;
- (BOOL)increments;
- (BOOL)isEqual:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSStopTouchingMeBox : NSBox
{
    NSView *sibling1;
    NSView *sibling2;
    double offset;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)setSibling1:(id)arg1;
- (void)setSibling2:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setOffset:(double)arg1;
- (void)tile;
- (void)viewDidEndLiveResize;

@end

@interface NSStorage : NSObject
{
    id _storage;
    long long _hintCapacity;
    unsigned long long _reserved[4];
}

+ (void)initialize;
- (id)initWithElementSize:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)init;
- (void)dealloc;
- (unsigned long long)count;
- (unsigned long long)capacity;
- (void)setHintCapacity:(unsigned long long)arg1;
- (unsigned long long)hintCapacity;
- (unsigned long long)elementSize;
- (void *)elementAtIndex:(unsigned long long)arg1;
- (void)insertElements:(void *)arg1 count:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)removeElementAtIndex:(unsigned long long)arg1;
- (void)replaceElementAtIndex:(unsigned long long)arg1 withElement:(void *)arg2;
- (void)removeElementsInRange:(struct _NSRange)arg1;
- (void *)pointerToElement:(unsigned long long)arg1 directlyAccessibleElements:(struct _NSRange *)arg2;
- (void)insertElement:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void)addElement:(void *)arg1;
- (id)description;

@end

@interface _NSCachedAttributedString : NSMutableAttributedString
{
    id _contents;
    NSAttributeDictionary *_baseAttributes;
    long long _length;
    unsigned long long _hashValue;
    struct {
        NSAttributeDictionary *_field1;
        long long _field2;
    } *_runs;
    long long _numRuns;
    long long _allocedRunsSize;
    long long _numHits;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)release;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)length;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (BOOL)_isStringDrawingTextStorage;
- (BOOL)_baselineMode;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)cache;
- (id)copyCachedInstance;

@end

@interface NSStringDrawingTextStorage : NSTextStorage <NSLayoutManagerDelegate>
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    NSLayoutManager *_layoutManager;
    NSTextContainer *_textContainer;
    NSFlippableView *_flippedView;
    id _preliminaryCache;
    id _cache;
    NSTextContainer *_firstTextContainer;
    NSTextContainer *_secondTextContainer;
    struct _NSRange _currentCharacterRange;
    struct _NSRange _currentGlyphRange;
    struct _NSRange _temporaryCharacterRange;
    unsigned long long _retainCount;
    double _baselineDelta;
    struct {
        unsigned int _typesetterBehavior:4;
        unsigned int _needToFlushCache:1;
        unsigned int _baselineMode:1;
        unsigned int _truncatesLastVisibleLine:1;
        unsigned int _reserved:25;
    } _sdflags;
}

+ (void)initialize;
+ (id)stringDrawingTextStorage;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (BOOL)_fastDrawString:(id)arg1 attributes:(id)arg2 length:(long long)arg3 inRect:(struct CGRect)arg4 graphicsContext:(id)arg5 baselineRendering:(BOOL)arg6 usesFontLeading:(BOOL)arg7 usesScreenFont:(BOOL)arg8 typesetterBehavior:(long long)arg9 paragraphStyle:(id)arg10 lineBreakMode:(unsigned long long)arg11 boundingRect:(struct CGRect *)arg12 padding:(double)arg13 scrollable:(_Bool)arg14;
+ (void)_setHasCustomSettings:(BOOL)arg1;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (BOOL)_informationForFont:(id)arg1 glyphTable:(unsigned short **)arg2 positionTable:(double **)arg3;
- (BOOL)_fastDrawGlyphs:(unsigned short *)arg1 advances:(struct CGSize *)arg2 length:(unsigned long long)arg3 font:(id)arg4 color:(id)arg5 containerSize:(struct CGSize)arg6 usedRect:(struct CGRect)arg7 startingLocation:(struct CGPoint)arg8 inRect:(struct CGRect)arg9 onView:(id)arg10 context:(id)arg11 pinToTop:(BOOL)arg12;
- (BOOL)fastDrawString:(id)arg1 attributes:(id)arg2 containerSize:(struct CGSize)arg3 padding:(double)arg4 inRect:(struct CGRect)arg5 onView:(id)arg6 pinToTop:(BOOL)arg7 sizeOnly:(BOOL)arg8 size:(struct CGSize *)arg9;
- (BOOL)fastDrawAttributedString:(id)arg1 containerSize:(struct CGSize)arg2 padding:(double)arg3 inRect:(struct CGRect)arg4 onView:(id)arg5 pinToTop:(BOOL)arg6 sizeOnly:(BOOL)arg7 size:(struct CGSize *)arg8;
- (id)layoutManager;
- (id)textContainer;
- (id)flippedView;
- (long long)typesetterBehavior;
- (struct CGRect)usedRectForTextContainer:(id)arg1;
- (void)_setBaselineDelta:(double)arg1;
- (double)_baselineDelta;
- (void)_setBaselineMode:(BOOL)arg1;
- (BOOL)_baselineMode;
- (BOOL)_truncatesLastLine;
- (void)_setTruncatesLastLine:(BOOL)arg1;
- (void)drawTextContainer:(id)arg1 withRect:(struct CGRect)arg2 graphicsContext:(id)arg3 baselineMode:(BOOL)arg4 scrollable:(BOOL)arg5 padding:(double)arg6;
- (void)drawTextContainer:(id)arg1 inRect:(struct CGRect)arg2 onView:(id)arg3 pinToTop:(BOOL)arg4;
- (void)drawInRect:(struct CGRect)arg1 onView:(id)arg2 pinToTop:(BOOL)arg3;
- (void)drawTextContainer:(id)arg1 inRect:(struct CGRect)arg2 onView:(id)arg3;
- (void)drawInRect:(struct CGRect)arg1 onView:(id)arg2;
- (id)textContainerForAttributedString:(id)arg1;
- (id)textContainerForAttributedString:(id)arg1 containerSize:(struct CGSize)arg2 lineFragmentPadding:(double)arg3;
- (void)invalidate;
- (void)fontSetChanged;
- (BOOL)_isStringDrawingTextStorage;
- (id)init;
- (void)processEditing;
- (unsigned long long)length;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;

@end

@interface NSSubTextStorage : NSTextStorage
{
    NSTextStorage *_parent;
    struct _NSRange _range;
    BOOL _releasing;
    BOOL _editing;
}

- (id)initWithTextStorage:(id)arg1 range:(struct _NSRange)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)finalize;
- (void)release;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)_subtextStorageFromRange:(struct _NSRange)arg1;
- (void)textStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)setTextStorage:(id)arg1;
- (struct _NSRange)range;

@end

@interface NSSurface : NSObject
{
    NSView *_view;
    NSWindow *_window;
    struct CGRect _frame;
    unsigned int _surfaceID;
    unsigned int _backingStore;
    int _saveWeighting;
    NSWindowGraphicsContext *_graphicsContext;
    NSGraphicsContext *_saveContext;
    struct {
        unsigned int opaque:1;
        unsigned int orderedIn:1;
        unsigned int deferSync:1;
        unsigned int focused:1;
        unsigned int reserved:28;
    } _sFlags;
    int _lastScreenNumber;
}

- (id)description;
- (id)initWithView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 inWindow:(id)arg2;
- (void)_updateLastScreenNumber;
- (void)_createBackingStore;
- (void)_disposeBackingStore;
- (void)_createSurface;
- (void)_disposeSurface;
- (void)dealloc;
- (void)finalize;
- (void)syncToViewUnconditionally;
- (void)syncToView:(BOOL)arg1;
- (void)updateColorSpace;
- (void)orderFront;
- (void)orderBack;
- (void)orderOut;
- (void)orderSurface:(long long)arg1 relativeTo:(id)arg2;
- (unsigned int)surfaceID;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (void)setWindow:(id)arg1;
- (id)screen;
- (void)_windowWillClose:(id)arg1;
- (void)_windowWillGoAway:(id)arg1;
- (void)_windowDidComeBack:(id)arg1;
- (void)_windowDidChangeColorSpace:(id)arg1;
- (void)_windowDidChangeScreens:(id)arg1;
- (void)_surfaceDidChangeScreen;
- (void)_windowDidMove:(id)arg1;
- (id)window;
- (void)setView:(id)arg1;
- (id)view;
- (BOOL)hasBackingStore;
- (void)clearBackingStore;
- (void)setDeferSync:(BOOL)arg1;
- (BOOL)deferSync;
- (void)setOpaque:(BOOL)arg1;
- (BOOL)isOpaque;
- (BOOL)isOrderedIn;
- (BOOL)isVisible;
- (void)setSaveWeighting:(int)arg1;
- (int)saveWeighting;
- (BOOL)lockFocusIfCanDraw;
- (void)lockFocus;
- (void)unlockFocus;
- (void)flush;

@end

@interface NSSystemInfoPanel : NSObject <NSTextViewDelegate>
{
    NSScrollView *creditScrollView;
    NSPanel *infoPanel;
    NSImageView *appIconView;
    NSTextField *appNameField;
    NSTextView *creditView;
    NSTextView *copyrightView;
    NSTextField *versionField;
    NSMutableDictionary *_optionsDictionary;
}

+ (id)sharedInfoPanel;
+ (void)updateOptions:(id)arg1;
+ (void)updateOptionsWithApplicationIcon:(id)arg1;
+ (void)updateOptionsWithApplicationName:(id)arg1;
+ (void)updateOptionsWithCopyright:(id)arg1;
+ (void)updateOptionsWithCredits:(id)arg1;
+ (void)updateOptionsWithMarketingVersion:(id)arg1;
+ (void)updateOptionsWithVersion:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)showInfoPanel:(id)arg1;
- (void)setOptionsDictionary:(id)arg1;
- (void)loadNib;
- (void)unloadNib:(BOOL)arg1;
- (void)updateNib;
- (id)applicationIcon;
- (id)applicationName;
- (id)backgroundImage;
- (id)copyright;
- (id)credits;
- (id)versionString;
- (void)sizeCreditsView;
- (void)sizeCopyrightView;
- (void)windowWillClose:(id)arg1;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;

@end

@interface NSSystemStatusBar : NSStatusBar
{
}

- (id)_createStatusItemControlInWindow:(id)arg1;
- (id)_name;
- (id)_lockName;
- (long long)_placement;
- (long long)_direction;
- (struct CGSize)_initialOffset;
- (double)thickness;
- (void)drawBackgroundInRect:(struct CGRect *)arg1 inView:(id)arg2 highlight:(BOOL)arg3;
- (double)_lengthForSize:(struct CGSize)arg1;

@end

@interface NSTabView : NSView
{
    id _tabViewItems;
    NSTabViewItem *_selectedTabViewItem;
    NSFont *_font;
    unsigned long long _tabViewType;
    BOOL _allowTruncatedLabels;
    id _delegate;
    BOOL _tabViewUnusedBOOL1;
    BOOL _drawsBackground;
    NSTabViewItem *_pressedTabViewItem;
    long long _endTabWidth;
    long long _maxOverlap;
    double _tabHeight;
    NSTabViewItem *_tabViewItemWithKeyView;
    NSView *_originalNextKeyView;
    struct __NSTabViewDelegateRespondTo {
        unsigned int shouldSelectTabViewItem:1;
        unsigned int willSelectTabViewItem:1;
        unsigned int didSelectTabViewItem:1;
        unsigned int didChangeNumberOfTabViewItems:1;
        unsigned int reserved:28;
    } _delegateRespondTo;
    struct __NSTabViewFlags {
        unsigned int needsLayout:1;
        unsigned int controlTint:3;
        unsigned int controlSize:2;
        unsigned int wiringNibConnections:1;
        unsigned int wiringInteriorLastKeyView:1;
        unsigned int originalNextKeyViewChanged:1;
        unsigned int liveResizeSkippedResetToolTips:1;
        unsigned int reserved:22;
    } _flags;
    NSTabViewItem *_focusedTabViewItem;
    void *_tabViewUnused2;
}

+ (void)initialize;
+ (BOOL)_usesToolTipsWhenTruncated;
+ (void)_setUsesToolTipsWhenTruncated:(BOOL)arg1;
- (BOOL)_shouldTryCoreUIDrawing;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;
- (void)dealloc;
- (void)finalize;
- (BOOL)allowsTruncatedLabels;
- (id)tabViewItems;
- (long long)indexOfTabViewItem:(id)arg1;
- (id)tabViewItemAtIndex:(long long)arg1;
- (long long)indexOfTabViewItemWithIdentifier:(id)arg1;
- (id)selectedTabViewItem;
- (long long)numberOfTabViewItems;
- (id)font;
- (BOOL)isFlipped;
- (unsigned long long)_tabOrientation;
- (BOOL)_hasHorizontalOrientation;
- (unsigned long long)tabViewType;
- (BOOL)_hasTabs;
- (BOOL)_hasBezelBorder;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)isOpaque;
- (unsigned long long)controlTint;
- (unsigned long long)controlSize;
- (void)setAllowsTruncatedLabels:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setTabViewType:(unsigned long long)arg1;
- (void)setControlTint:(unsigned long long)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)_addedTab:(id)arg1 atIndex:(long long)arg2;
- (void)addTabViewItem:(id)arg1;
- (void)insertTabViewItem:(id)arg1 atIndex:(long long)arg2;
- (void)removeTabViewItem:(id)arg1;
- (void)_removeTabViewItems:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (id)currentEditor;
- (BOOL)_hasKeyboardFocus;
- (BOOL)_hasKeyboardFocusInTabItem:(id)arg1;
- (id)_findFirstValidKeyViewStartingFrom:(id)arg1 inTabViewItem:(id)arg2;
- (void)_switchTabViewItem:(id)arg1 oldView:(id)arg2 withTabViewItem:(id)arg3 newView:(id)arg4 initialFirstResponder:(id)arg5 lastKeyView:(id)arg6;
- (void)_setInteriorNextKeyView:(id)arg1;
- (void)_setNextKeyViewFor:(id)arg1 toNextKeyView:(id)arg2;
- (void)setNextKeyView:(id)arg1;
- (BOOL)_isViewValidOriginalNextKeyView:(id)arg1;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (BOOL)_wiringNibConnections;
- (void)_finishedMakingConnections;
- (void)_primitiveSetNextKeyView:(id)arg1;
- (void)_primitiveSetPreviousKeyView:(id)arg1;
- (void)_prepareForDefaultKeyLoopComputation;
- (void)_recursiveBreakKeyViewLoop;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_primitiveSetDefaultNextKeyView:(id)arg1;
- (void)_concludeDefaultKeyLoopComputation;
- (id)_originalNextKeyView;
- (void)_switchInitialFirstResponder:(id)arg1 lastKeyView:(id)arg2 forTabViewItem:(id)arg3;
- (BOOL)_shouldSelectTabViewItem:(id)arg1;
- (void)selectTabViewItem:(id)arg1;
- (void)takeSelectedTabViewItemFromSender:(id)arg1;
- (void)selectTabViewItemAtIndex:(long long)arg1;
- (void)selectTabViewItemWithIdentifier:(id)arg1;
- (void)selectFirstTabViewItem:(id)arg1;
- (void)selectLastTabViewItem:(id)arg1;
- (void)selectNextTabViewItem:(id)arg1;
- (void)selectPreviousTabViewItem:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)tabViewItemAtPoint:(struct CGPoint)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (long long)_findPreviousNextTab:(long long)arg1 loop:(BOOL)arg2 startingAtTabItem:(id)arg3;
- (void)_previousNextTab:(long long)arg1 loop:(BOOL)arg2;
- (void)_cancelDelayedKeyboardNavigationTabSwitch;
- (void)_keyboardNavigateDoSelectOfFocusItem:(id)arg1;
- (void)_keyboardNavigateToTabAtIndex:(long long)arg1;
- (void)_keyboardNavigateToTabByDelta:(long long)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)performClick:(id)arg1;
- (struct CGRect)_tabRectAdjustedForOverlap:(struct CGRect)arg1;
- (void)_setNeedsDisplayForTabViewItem:(id)arg1;
- (void)_setKeyboardFocusRingNeedsDisplayForTabViewItem:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawThemeTab:(id)arg1 withState:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (void)_drawTabViewItem:(id)arg1 inRect:(struct CGRect)arg2;
- (struct CGRect)_labelRectForTabRect:(struct CGRect)arg1 forItem:(id)arg2;
- (struct CGRect)_titleRectForTabViewItem:(id)arg1;
- (struct CGSize)_nominalSizeNeedForTabItemLabel:(id)arg1;
- (struct CGSize)_minimumSizeNeedForTabItemLabel:(id)arg1;
- (struct CGRect)_themeContentRect;
- (struct CGRect)_themeTabAndBarArea;
- (void)_getThemeImageTabBarRect:(struct CGRect *)arg1 backgroundRect:(struct CGRect *)arg2 fillBackgroundRect:(struct CGRect *)arg3;
- (struct CGRect)_tabRectForTabViewItem:(id)arg1;
- (BOOL)_coreUIDrawTab:(id)arg1 withState:(unsigned long long)arg2 inRect:(struct CGRect)arg3;
- (BOOL)_coreUIDrawBezelInRect:(struct CGRect)arg1 withClip:(struct CGRect)arg2;
- (void)_drawThemeBezelBorder:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_drawBezelBorder:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_drawBorder:(id)arg1 inRect:(struct CGRect)arg2;
- (unsigned long long)_realControlTint;
- (void)_windowChangedKeyState;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_old_encodeWithCoder_NSTabView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSTabView:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGSize)minimumSize;
- (double)_totalTabsLength:(BOOL)arg1 overlap:(double)arg2;
- (double)_totalNominalTabsLengthWithOverlap:(double)arg1;
- (double)_totalMinimumTabsLengthWithOverlap:(double)arg1;
- (double)_endTabWidth;
- (double)_tabHeight;
- (double)_doLayoutTabs:(double)arg1;
- (void)_layoutTabs;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)_resizeSelectedTabViewItem;
- (struct CGRect)contentRect;
- (void)_invalidateTabsCache;
- (void)_systemColorChanged:(id)arg1;
- (void)_setPressedTabViewItem:(id)arg1;
- (BOOL)mouseTracker:(id)arg1 shouldStartTrackingWithEvent:(id)arg2;
- (BOOL)mouseTracker:(id)arg1 shouldContinueTrackingWithEvent:(id)arg2;
- (BOOL)mouseTracker:(id)arg1 didStopTrackingWithEvent:(id)arg2;
- (void)_selectTabWithDraggingInfo:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;

@end

@interface NSTabViewBinder : NSViewStateBinder
{
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (id)availableBindings;
- (Class)valueClassForBinding:(id)arg1;
- (void)_selectInTabView:(id)arg1 itemAtIndex:(id)arg2;
- (void)_selectInTabView:(id)arg1 itemWithLabel:(id)arg2;
- (void)_selectInTabView:(id)arg1 itemWithIdentifier:(id)arg2;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;

@end

@interface NSTabViewItem : NSObject <NSCoding>
{
    id _identifier;
    NSString *_label;
    NSView *_view;
    NSView *_initialFirstResponder;
    NSColor *_color;
    NSTabView *_tabView;
    unsigned long long _tabState;
    NSView *_lastKeyView;
    struct __tviFlags {
        unsigned int hasCustomColor:1;
        unsigned int labelSizeIsValid:1;
        unsigned int autoGeneratedIFR:1;
        unsigned int isTabDisabled:1;
        unsigned int RESERVED:28;
    } _tviFlags;
    struct CGSize _labelSize;
    struct CGRect _tabRect;
    long long _tabToolTipTag;
    id _auxiliaryStorage;
}

+ (id)_labelCell;
- (void)_allocAuxiliaryStorage;
- (void)_deallocAuxiliaryStorage;
- (id)init;
- (id)initWithIdentifier:(id)arg1;
- (void)_commonInit;
- (void)dealloc;
- (void)finalize;
- (id)view;
- (void)_validateViewIsInViewHeirarchy:(id *)arg1;
- (id)_lastKeyView;
- (id)initialFirstResponder;
- (id)label;
- (id)tabView;
- (id)color;
- (id)identifier;
- (struct CGRect)_tabRect;
- (unsigned long long)tabState;
- (void)setColor:(id)arg1;
- (BOOL)_hasCustomColor;
- (void)setIdentifier:(id)arg1;
- (void)_setTabView:(id)arg1;
- (void)setLabel:(id)arg1;
- (id)toolTip;
- (void)setToolTip:(id)arg1;
- (void)_setTabRect:(struct CGRect)arg1;
- (void)_setTabState:(unsigned long long)arg1;
- (void)_setTabEnabled:(BOOL)arg1;
- (BOOL)_isTabEnabled;
- (id)_labelColor;
- (void)setView:(id)arg1;
- (void)_setInitialFirstResponder:(id)arg1 autoGenerated:(BOOL)arg2;
- (void)setInitialFirstResponder:(id)arg1;
- (void)_finishedWiringNibConnections;
- (BOOL)_canAutoGenerateKeyboardLoops;
- (void)_setAutoGeneratedInitialFirstResponder:(id)arg1;
- (BOOL)_initialFirstResponderIsAutoGenerated;
- (void)_setDefaultKeyViewLoopAndInitialFirstResponder;
- (void)_clearInitialFirstResponderAndLastKeyViewIfAutoGenerated;
- (BOOL)_rotateCoordsForDrawLabelInRect:(struct CGRect)arg1;
- (void)_drawOrientedLabel:(BOOL)arg1 inRect:(struct CGRect)arg2;
- (void)drawLabel:(BOOL)arg1 inRect:(struct CGRect)arg2;
- (void)_drawKeyViewOutline:(struct CGRect)arg1;
- (void)_invalidLabelSize;
- (struct CGSize)sizeOfLabel:(BOOL)arg1;
- (id)_shadowTabColorAtIndex:(long long)arg1;
- (id)_highlightTabColor;
- (void)_old_encodeWithCoder_NSTabViewItem:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSTabViewItem:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (struct _NSRange)_rangeOfPrefixOfString:(id)arg1 fittingWidth:(double)arg2 withFont:(id)arg3;
- (id)_computeMinimumDisplayedLabelForWidth:(double)arg1;
- (struct CGSize)_computeDisplayedSizeOfString:(id)arg1;
- (struct CGSize)_computeMinimumDisplayedLabelSize;
- (struct CGSize)_computeNominalDisplayedLabelSize;
- (id)_fullLabel;
- (long long)_addToolTipRect:(struct CGRect)arg1;
- (void)_removeToolTip;
- (void)_resetToolTipIfNecessary;
- (void)_tabViewWillRemoveFromSuperview;

@end

@interface _NSTabViewItemAuxiliary : NSObject
{
    struct CGSize cachedMinimumLabelSize;
    NSString *explicitToolTip;
}

@end

@interface NSTabWell : NSView
{
    NSRulerMarker *_prototype;
    BOOL _disabled;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 prototypeRulerMarker:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setPrototype:(id)arg1;
- (id)prototype;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)mouseDown:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSTableBinder : NSBinder
{
    struct __tableBinderFlags {
        unsigned int _isAutoCreated:1;
        unsigned int _ignoreChanges:1;
        unsigned int _notifyContentControllerOfVisibleRowUpdates:1;
        unsigned int _reservedTableBinder:29;
    } _tableBinderFlags;
    unsigned long long _numberOfDisplayedObjects;
    id _modelObservingTracker;
}

+ (BOOL)_autoCreateBinderForObject:(id)arg1 withController:(id)arg2;
+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (id)_editableBinderForTableColumn:(id)arg1;
+ (id)_editableBinderAtIndex:(unsigned long long)arg1 forTableView:(id)arg2;
- (void)_init;
- (void)dealloc;
- (void)_copyDetailsFromBinder:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)_updateObservingRegistration:(BOOL)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_scrollSelectionToVisible;
- (BOOL)_isTableColumn:(id)arg1 boundWithKeyPath:(id)arg2;
- (void)_updateSortDescriptors:(id)arg1;
- (void)_updateSelectionIndexes:(id)arg1;
- (void)_updateContent;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)_markAutoCreated:(BOOL)arg1;
- (BOOL)_isAutoCreated;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didChangeToSortDescriptors:(id)arg2;
- (void)tableView:(id)arg1 didChangeToSelectedRowIndexes:(id)arg2;
- (void)tableView:(id)arg1 updateVisibleRowInformation:(struct _NSRange)arg2;
- (BOOL)_observeKeyPathForRelatedBinder:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (void)_redisplayTableContentWithRowIndexes:(id)arg1 columnIndexes:(id)arg2;
- (id)_visibleRowIndexesForObject:(id)arg1;
- (id)_visibleColumnIndexesForKeyPath:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface _NSTableUtilities : NSObject
{
}

+ (id)_tableBinderForTableView:(id)arg1;
+ (BOOL)_tableBinderForTableViewSupportsSorting:(id)arg1;
+ (void)_breakConnectionOfTableBinderIfAutoCreated:(id)arg1;
+ (void)_setPartialKeysWithTableBinder:(id)arg1 forTableColumnBinder:(id)arg2;
+ (void)_setPartialKeysWithTableBinder:(id)arg1 forAllTableColumnBindersOfTableView:(id)arg2;
+ (void)_registerTableColumnBinder:(id)arg1 toTableColumn:(id)arg2 autoCreateReferenceController:(id)arg3;
+ (void)_unregisterTableColumnBinder:(id)arg1 fromTableColumn:(id)arg2;
+ (id)_referenceBinderForTableColumn:(id)arg1;
+ (id)_referenceBinderAtIndex:(unsigned long long)arg1 forTableView:(id)arg2;

@end

@interface NSTableColumn : NSObject <NSCoding>
{
    id _identifier;
    double _width;
    double _minWidth;
    double _maxWidth;
    NSTableView *_tableView;
    NSCell *_headerCell;
    NSCell *_dataCell;
    struct __colFlags {
        unsigned int oldIsResizable:1;
        unsigned int isEditable:1;
        unsigned int resizedPostingDisableCount:8;
        unsigned int canUseReorderResizeImageCache:1;
        unsigned int userResizingAllowed:1;
        unsigned int autoResizingAllowed:1;
        unsigned int hidden:1;
        unsigned int RESERVED:18;
    } _cFlags;
    id _tcAuxiliaryStorage;
}

+ (void)initialize;
- (void)_disableResizedPosting;
- (void)_enableResizedPosting;
- (BOOL)_resizePostingDisabled;
- (void)_postColumnDidResizeNotificationWithOldWidth:(long long)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_old_encodeWithCoder_NSTableColumn:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSTableColumn:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (void)_finishedMakingConnections;
- (BOOL)isHidden;
- (void)setHidden:(BOOL)arg1;
- (void)_setReorderResizeImageCache:(id)arg1;
- (id)_reorderResizeImageCache;
- (void)_setCanUseReorderResizeImageCache:(BOOL)arg1;
- (BOOL)_canUseReorderResizeImageCache;
- (void)setTableView:(id)arg1;
- (id)tableView;
- (void)setSortDescriptorPrototype:(id)arg1;
- (id)sortDescriptorPrototype;
- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (void)setWidth:(double)arg1;
- (double)width;
- (void)setMinWidth:(double)arg1;
- (double)minWidth;
- (void)setMaxWidth:(double)arg1;
- (double)maxWidth;
- (void)setHeaderCell:(id)arg1;
- (id)headerCell;
- (void)_updateHeaderCellControlView;
- (void)_updateDataCellControlView;
- (void)setDataCell:(id)arg1;
- (id)dataCell;
- (id)dataCellForRow:(long long)arg1;
- (void)setResizingMask:(unsigned long long)arg1;
- (unsigned long long)resizingMask;
- (void)setResizable:(BOOL)arg1;
- (BOOL)isResizable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)sizeToFit;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (void)setHeaderToolTip:(id)arg1;
- (id)headerToolTip;

@end

@interface _NSTableColumnAuxiliary : NSObject
{
    NSSortDescriptor *_sortDescriptorPrototype;
    _NSBindingAdaptor *_bindingAdaptor;
    NSString *_headerToolTip;
    NSString *_userInterfaceIdentifier;
}

@end

@interface NSTableColumnBinder : NSViewStateBinder
{
}

+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (BOOL)isBindingReadOnly:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)_shouldProcessObservations;
- (void)_updateTableColumn:(id)arg1 withWidth:(id)arg2;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (void)tableColumn:(id)arg1 didChangeToWidth:(double)arg2;

@end

@interface NSTableHeaderCell : NSTextFieldCell
{
}

- (id)init;
- (void)dealloc;
- (unsigned long long)_realControlTintForView:(id)arg1;
- (BOOL)_shouldDrawRightSeparatorInView:(id)arg1;
- (struct __CFDictionary *)_coreUIBezelDrawOptionsWithView:(id)arg1 highlighted:(BOOL)arg2;
- (void)_drawBezelWithFrame:(struct CGRect)arg1 highlighted:(BOOL)arg2 inView:(id)arg3;
- (void)_drawThemeContents:(struct CGRect)arg1 highlighted:(BOOL)arg2 inView:(id)arg3;
- (BOOL)isOpaque;
- (void)_adjustFontSize;
- (BOOL)_textDimsWhenDisabled;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (struct __CFDictionary *)_coreUISortIndicatorDrawOptionsWithView:(id)arg1 ascending:(BOOL)arg2;
- (void)_drawSortIndicatorIfNecessaryWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSortIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2 ascending:(BOOL)arg3 priority:(long long)arg4;
- (id)_currentSortIndicatorImage;
- (struct CGRect)sortIndicatorRectForBounds:(struct CGRect)arg1;
- (void)_setSortable:(BOOL)arg1;
- (void)_setSortable:(BOOL)arg1 showSortIndicator:(BOOL)arg2 ascending:(BOOL)arg3 priority:(long long)arg4 highlightForSort:(BOOL)arg5;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (id)_convertToText:(id)arg1;
- (BOOL)_alignFrame:(struct CGRect *)arg1 withWithDataCellForView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)_setIndicatorImage:(id)arg1;
- (id)_indicatorImage;

@end

@interface NSAccessibilityTableHeaderCellProxy : NSAccessibilityReparentingCellProxy
{
}

- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSTableHeaderView : NSView
{
    NSTableView *_tableView;
    long long _resizedColumn;
    long long _draggedColumn;
    long long _pressedColumn;
    NSImage *_headerDragImage;
    double _draggedDistance;
    BOOL _isColumnResizing;
    BOOL _showHandCursorFired;
    BOOL _toolTipRectsDirty;
    BOOL _alignTitleWithDataCell;
    BOOL _skipDrawingSeparator;
    id _reserved;
}

+ (void)initialize;
- (id)init;
- (struct CGRect)headerRectOfColumn:(long long)arg1;
- (long long)columnAtPoint:(struct CGPoint)arg1;
- (void)_drawHeaderCell:(id)arg1 withFrame:(struct CGRect)arg2 withStateFromColumn:(long long)arg3;
- (void)_setOverflowHeaderCellPrototype:(id)arg1;
- (id)_overflowHeaderCellPrototype;
- (void)_tableView:(id)arg1 willAddTableColumn:(id)arg2;
- (void)_tableView:(id)arg1 willRemoveTableColumn:(id)arg2;
- (void)_drawHeaderFillerInRect:(struct CGRect)arg1 matchLastState:(BOOL)arg2;
- (void)_drawHeaderOfColumn:(long long)arg1;
- (struct CGRect)_overflowRectForBounds:(struct CGRect)arg1;
- (void)_drawOverflowHeaderInRect:(struct CGRect)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)_invalidateRightMostLineIfNeeded;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct CGRect)arg1;
- (void)_invalidateLiveResizeCachedImage;
- (BOOL)_layoutIsSameAsCachedLayoutWithFrame:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 liveResizeCacheCoveredArea:(struct CGRect)arg2;
- (void)_drawRect:(struct CGRect)arg1 liveResizeFill:(struct CGRect)arg2:(struct CGRect)arg3:(struct CGRect)arg4:(struct CGRect)arg5 cacheCoveredArea:(struct CGRect)arg6;
- (struct CGRect)_rowHeaderFixedContentRect;
- (struct CGRect)_rowHeaderScrollableContentVisibleRect;
- (BOOL)_hasRowHeaderColumn;
- (id)_rectsForMultiClippedContentDrawing;
- (BOOL)_drawingEndSeparator;
- (void)_drawColumnHeaderWithIndexes:(id)arg1;
- (void)_doModifySelectionWithEvent:(id)arg1 onColumn:(long long)arg2;
- (void)_showOpenHandCursor:(id)arg1;
- (void)_cancelDelayedShowOpenHandCursor;
- (void)_unshowOpenHandCursor:(id)arg1;
- (void)_scheduleDelayedShowOpenHandCursorIfNecessary;
- (BOOL)_trackAndModifySelectionWithEvent:(id)arg1 onColumn:(long long)arg2 stopOnReorderGesture:(char *)arg3;
- (struct CGRect)_unobstructedVisibleHeaderRectOfColumn:(long long)arg1;
- (void)_drawHeaderDragImageForColumn:(long long)arg1;
- (void)_beginDraggingColumn:(long long)arg1;
- (void)_endDragging;
- (id)_lastDraggedEventFollowing:(id)arg1;
- (id)_lastDraggedOrUpEventFollowing:(id)arg1 canceled:(char *)arg2;
- (id)_resizeCursorForTableColumn:(id)arg1;
- (void)_reorderColumn:(long long)arg1 withEvent:(id)arg2;
- (void)_resizeColumn:(long long)arg1 withEvent:(id)arg2;
- (void)_stopObservingKeyWindow;
- (void)_startObservingKeyWindow:(id)arg1;
- (void)dealloc;
- (void)_old_encodeWithCoder_NSTableHeaderView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSTableHeaderView:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_windowKeyChanged:(id)arg1;
- (void)_setToolTipRectsDirty:(BOOL)arg1;
- (void)_invalidateOrComputeNewCursorRectsIfNecessary;
- (struct CGRect)_unobstructedPortionOfRect:(struct CGRect)arg1;
- (void)_addToolTipRects;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (struct CGRect)_cursorRectForColumn:(long long)arg1;
- (void)resetCursorRects;
- (long long)_previousNonHiddenColumnStartingAtColumn:(long long)arg1;
- (long long)_resizeableColumnAtPoint:(struct CGPoint)arg1;
- (void)_windowChangedKeyState;
- (void)setTableView:(id)arg1;
- (id)tableView;
- (long long)resizedColumn;
- (long long)draggedColumn;
- (double)draggedDistance;
- (BOOL)_alignTitleWithDataCell;
- (void)_setAlignTitleWithDataCell:(BOOL)arg1;
- (void)viewWillMoveToWindow:(id)arg1;

@end

@interface NSTableRow : NSObject
{
    NSTableView *_tableView;
    long long _row;
}

+ (id)tableRow:(long long)arg1 ofTableView:(id)arg2;
- (id)initWithRow:(long long)arg1 ofTableView:(id)arg2;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)row;
- (id)_accessibilityChildrenWithIndexes:(id)arg1;
- (long long)_childrenCount;

@end

@interface NSTableView : NSControl <NSUserInterfaceValidations, NSTextViewDelegate>
{
    NSTableHeaderView *_headerView;
    NSView *_cornerView;
    NSMutableArray *_tableColumns;
    NSCell *_editingCell;
    id _delegate;
    id _dataSource;
    struct CGSize _intercellSpacing;
    double _rowHeight;
    long long _lastSelectedColumn;
    long long _lastSelectedRow;
    long long _editingRow;
    long long _editingColumn;
    NSMutableIndexSet *_selectedColumns;
    NSMutableIndexSet *_selectedRows;
    NSImage *_bodyDragImage;
    NSColor *_backgroundColor;
    NSColor *_gridColor;
    double _dragYPos;
    id _target;
    SEL _action;
    SEL _doubleAction;
    struct CGRect _rectOfLastColumn;
    long long _lastCachedRectColumn;
    struct CGRect _rectOfLastRow;
    long long _lastCachedRectRow;
    struct __TvFlags {
        unsigned int refusesFirstResponder:1;
        unsigned int movedPostingDisableCount:6;
        unsigned int selectionPostingDisableCount:7;
        unsigned int dataSourceSetObjectValue:1;
        unsigned int oldAutoresizesAllColumnsToFit:1;
        unsigned int delegateSelectionShouldChangeInTableView:1;
        unsigned int delegateShouldSelectTableColumn:1;
        unsigned int delegateShouldSelectRow:1;
        unsigned int delegateShouldEditTableColumn:1;
        unsigned int delegateWillDisplayCell:1;
        unsigned int compareWidthWithSuperview:2;
        unsigned int changingLayout:1;
        unsigned int selectionType:2;
        unsigned int allowsColumnSelection:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int allowsEmptySelection:1;
        unsigned int oldDrawsGridFlag:1;
        unsigned int allowsColumnResizing:1;
        unsigned int allowsColumnReordering:1;
    } _tvFlags;
    id _reserved;
}

+ (void)initialize;
+ (unsigned long long)defaultFocusRingType;
+ (id)_sourceListGroupTitleTextColor;
+ (id)_sourceListInactiveGroupTitleTextColor;
+ (id)_groupRowTitleTextColor;
+ (id)_defaultTableHeaderSortImage;
+ (id)_defaultTableHeaderReverseSortImage;
+ (id)_dropHighlightColor;
+ (id)_dropHighlightColorForEntireTableView;
+ (id)_dropHighlightBackgroundColor;
+ (Class)_dynamicToolTipManagerClass;
- (BOOL)_defaultValueForAllowsTypeSelect;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;
- (BOOL)_delegateRespondsTo_nextTypeSelectMatchFromRow;
- (long long)_delegate_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (BOOL)_delegateRespondsTo_typeSelectStringForTableColumn;
- (id)_delegateTypeSelectStringForTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_delegateRespondsTo_shouldTypeSelectForEvent;
- (BOOL)_delegate_shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (BOOL)_delegate_isGroupRow:(long long)arg1;
- (id)_delegate_dataCellForTableColumn:(id)arg1 row:(long long)arg2;
- (id)_dataCellForTableColumn:(id)arg1 row:(long long)arg2;
- (id)currentTypeSelectSearchString;
- (BOOL)_shouldTypeSelectForEvent:(id)arg1;
- (id)_typeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (id)_internalTypeSelectStringForColumn:(long long)arg1 row:(long long)arg2;
- (long long)_nextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (long long)_internalNextTypeSelectMatchFromRow:(long long)arg1 toRow:(long long)arg2 forString:(id)arg3;
- (BOOL)_performTypeSelect:(id)arg1;
- (void)_typeSelectEndCurrentSearchWithRedisplay:(BOOL)arg1;
- (void)_typeSelectEndCurrentSearch;
- (BOOL)_typeSelectUndoLastSearch;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (BOOL)_supportsVariableHeightRows;
- (void)_releaseRowHeightStorageIfNecessary;
- (id)_rowHeightStorage:(BOOL)arg1;
- (long long)_rowHeightStorageComputeRowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)_rowHeightStorageComputeRectOfRow:(long long)arg1 cacheHint:(BOOL)arg2;
- (void)_rowHeightStorageBeginLayoutChange;
- (void)_rowHeightStorageEndLayoutChange;
- (void)_rowHeightStorageInvalidateCacheAndStorage;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (void)_rowHeightStorageUpdateForInsertedRows:(long long)arg1 atIndex:(long long)arg2;
- (void)_rowHeightStorageUpdateForDeletedRows:(long long)arg1 atIndex:(long long)arg2;
- (double)_sendDelegateHeightOfRow:(long long)arg1;
- (double)_uncachedRectHeightOfRow:(long long)arg1;
- (void)__ivar_setTrackingCell:(id)arg1;
- (void)__ivar_setClickedRow:(long long)arg1 clickedColumn:(long long)arg2;
- (id)__ivar_getTrackingCell;
- (void)_invalidateGroupRowsIfNeeded;
- (BOOL)_needsRedrawOnKeyChange;
- (BOOL)_hasSourceListBackground;
- (void)_invalidateForKeyChange;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (double)_widthOfColumn:(long long)arg1;
- (struct CGRect)_rectOfColumn:(long long)arg1 ignoringTile:(BOOL)arg2;
- (struct CGRect)rectOfColumn:(long long)arg1;
- (struct CGRect)rectOfRow:(long long)arg1;
- (double)_fillerRectHeight;
- (struct CGRect)_rectOfRowAssumingRowExists:(long long)arg1;
- (double)_endOfLastNonHiddenColumn;
- (double)_locationOfColumn:(long long)arg1;
- (double)_locationOfRow:(long long)arg1;
- (double)_totalHeightOfTableView;
- (struct CGRect)_rectOfRowRange:(struct _NSRange)arg1;
- (struct CGRect)_rectOfColumnRange:(struct _NSRange)arg1;
- (long long)_columnAtLocation:(double)arg1;
- (long long)columnAtPoint:(struct CGPoint)arg1;
- (long long)_columnClosestToColumn:(long long)arg1 whenMoved:(double)arg2;
- (id)columnIndexesInRect:(struct CGRect)arg1;
- (id)_visibleTableColumnIndexes;
- (struct _NSRange)columnsInRect:(struct CGRect)arg1;
- (long long)rowAtPoint:(struct CGPoint)arg1;
- (struct _NSRange)rowsInRect:(struct CGRect)arg1;
- (id)_cellAtPoint:(struct CGPoint)arg1 row:(long long *)arg2 column:(long long *)arg3;
- (BOOL)_keyboardFocusNeedsDisplayForColumn:(long long)arg1 row:(long long)arg2;
- (void)_setNeedsDisplayInColumn:(long long)arg1 row:(long long)arg2;
- (int)_compareWidthWithSuperview;
- (BOOL)_fillsClipViewWidth;
- (BOOL)_fillsClipViewHeight;
- (long long)_rightmostAutoresizingColumn;
- (void)_moveAndResizeEditedCellWithOldFrame:(struct CGRect)arg1;
- (void)_verifySelectionIsOK;
- (void)_tileAndRedisplayAll;
- (void)_beginUpdate;
- (void)_endUpdate;
- (BOOL)_isUpdating;
- (struct CGSize)_minimumFrameSize;
- (void)tile;
- (void)_invalidateNumberOfRowsCache;
- (void)_finishedMakingConnections;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)reloadData;
- (void)noteNumberOfRowsChanged;
- (BOOL)_drawRectIfEmpty;
- (void)_tileIfNeeded;
- (struct CGRect)frame;
- (struct CGRect)bounds;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_userCanChangeSelection;
- (BOOL)_delegateRespondsToCanSelectRow;
- (BOOL)_sendDelegateCanSelectRow:(long long)arg1;
- (id)_sendDelegateSelectionIndexesForProposedSelection:(id)arg1;
- (BOOL)_sendDelegateCanSelectColumn:(long long)arg1;
- (BOOL)_oldUserCanSelectColumn:(long long)arg1;
- (void)_userDeselectRow:(long long)arg1;
- (void)_userDeselectColumn:(long long)arg1;
- (id)_selectableColumnIndexes:(id)arg1;
- (BOOL)_oldUserCanSelectRow:(long long)arg1;
- (id)_userSelectableRowIndexesForProposedSelection:(id)arg1 userCanAlreadyChangeSelection:(BOOL)arg2;
- (id)_userSelectableRowIndexesForProposedSelection:(id)arg1;
- (void)_userSelectRowIndexes:(id)arg1 withNewSelectedRow:(long long)arg2;
- (void)_userExtendSelectionWithRow:(long long)arg1;
- (void)_userSelectSingleRow:(long long)arg1;
- (BOOL)_userCanSelectSingleRow:(long long)arg1;
- (BOOL)_userCanSelectRow:(long long)arg1 withNewSelectedIndexes:(id)arg2;
- (void)_userSelectColumnIndexes:(id)arg1 withNewAnchorColumn:(long long)arg2;
- (void)_userSelectSingleColumn:(long long)arg1;
- (void)_revertToOldRowSelection:(id)arg1 fromRow:(long long)arg2 toRow:(long long)arg3;
- (void)_userDeselectToRow:(long long)arg1;
- (BOOL)_userCanEditTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_userCanSelectAndEditTableColumn:(id)arg1 row:(long long)arg2;
- (BOOL)_currentlyEditing;
- (BOOL)_cellIsEditableAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_userCanSelectAndEditColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_userSelectTextOfNextCellInSameColumn;
- (BOOL)_userSelectTextOfNextCell;
- (BOOL)_userSelectTextOfPreviousCell;
- (BOOL)_unarchiving;
- (void)_printDatasourceWarning;
- (id)_dataSourceValueForColumn:(id)arg1 row:(long long)arg2;
- (void)_dataSourceSetValue:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_setNewObjectValueFromCell:(id)arg1 ifNotEqualTo:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)_delegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (BOOL)_delegateRespondsToGetToolTip;
- (BOOL)_delegateRespondsToShouldShowCellExpansion;
- (BOOL)_sendDelegateShouldShowCellExpansionForColumn:(long long)arg1 row:(long long)arg2;
- (id)_sendDelegateToolTipForCell:(id)arg1 tableColumn:(id)arg2 rect:(struct CGRect *)arg3 row:(long long)arg4 mouseLocation:(struct CGPoint)arg5;
- (void)_sendBindingAdapterWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (void)_sendDelegateWillDisplayCell:(id)arg1 forColumn:(id)arg2 row:(long long)arg3;
- (long long)selectionHighlightStyle;
- (void)setSelectionHighlightStyle:(long long)arg1;
- (BOOL)_usesSourceListColors;
- (BOOL)_highlightColorDependsOnWindowState;
- (BOOL)_shouldUseSecondaryHighlightColor;
- (BOOL)selectionShouldUsePrimaryColor;
- (id)_highlightColorForCell:(id)arg1;
- (BOOL)_usingAlternateHighlightColorForCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 clipRect:(struct CGRect)arg3;
- (void)_setEnabledAttributesOnCell:(id)arg1;
- (BOOL)_shouldHighlightRows;
- (BOOL)_callDrawHighlight;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 withCellFrame:(struct CGRect)arg3;
- (void)_adjustDrawingTestFrame:(struct CGRect *)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_manualDrawBackgroundForGroupRow:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)_drawBackgroundForGroupRow:(long long)arg1 clipRect:(struct CGRect)arg2 isButtedUpRow:(BOOL)arg3;
- (BOOL)_flashingDropFeedbackRow;
- (void)_setFlashingDropFeedbackRow:(BOOL)arg1;
- (BOOL)_hasDropCandidateRow;
- (long long)_dropCandidateRow;
- (BOOL)_isDropFeedbackRow:(long long)arg1;
- (void)_beforeDrawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (id)_dragSourceRowOverlayColorForRow:(long long)arg1;
- (void)_afterDrawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)_drawContextMenuHighlightForIndexes:(id)arg1 clipRect:(struct CGRect)arg2;
- (BOOL)_isGroupRow:(long long)arg1;
- (void)drawRowIndexes:(id)arg1 clipRect:(struct CGRect)arg2;
- (void)drawRowsInRange:(struct _NSRange)arg1 clipRect:(struct CGRect)arg2;
- (void)_getSourceListColorFor:(int)arg1 startColor:(id *)arg2 endColor:(id *)arg3 bottomColor:(id *)arg4;
- (void)_manuallyDrawSourceListHighlightInRect:(struct CGRect)arg1 isButtedUpRow:(BOOL)arg2;
- (BOOL)_manuallyDrawSourceListHighlight;
- (void)_drawSourceListHighlightInRect:(struct CGRect)arg1 isButtedUpRow:(BOOL)arg2;
- (void)_drawSourceListHighlightInRect:(struct CGRect)arg1;
- (struct CGRect)_highlightRectForRow:(long long)arg1;
- (void)_highlightRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)_highlightColumn:(long long)arg1 clipRect:(struct CGRect)arg2;
- (BOOL)_hasSelectedColumn;
- (BOOL)_hasSelectedRow;
- (id)_selectedRowsToDraw;
- (void)_highlightSourceListSelectionInRange:(struct _NSRange)arg1;
- (void)_highlightRegularSelectionInRange:(struct _NSRange)arg1 clipRect:(struct CGRect)arg2;
- (void)highlightSelectionInClipRect:(struct CGRect)arg1;
- (struct _NSRange)_rowsInRectAssumingRowsCoverVisible:(struct CGRect)arg1;
- (long long)_lastNonHiddenColumn;
- (long long)_nextNonHiddenColumnFromColumn:(long long)arg1;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (void)setNeedsDisplayForRowIndexes:(id)arg1;
- (void)reloadDataForRowIndexes:(id)arg1 columnIndexes:(id)arg2;
- (void)_setNeedsDisplayInRow:(long long)arg1;
- (void)_setNeedsDisplayInColumn:(long long)arg1 includeHeader:(BOOL)arg2;
- (void)_updateViewFramesForColumnIndexes:(id)arg1;
- (void)_tableColumn:(id)arg1 changedWidthFrom:(double)arg2 toWidth:(double)arg3;
- (void)_setNeedsDisplayForSortingChangeInColumn:(long long)arg1;
- (void)_setNeedsDisplayForColumn:(long long)arg1 draggedDelta:(double)arg2;
- (double)_draggedColumnImageInset;
- (BOOL)_canUseReorderResizeImageCacheForColumn:(long long)arg1;
- (void)_beginDraggingColumn:(long long)arg1;
- (void)_endDragging;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (void)finalize;
- (void)dealloc;
- (void)_old_encodeWithCoder_NSTableView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)_old_initWithCoder_NSTableView:(id)arg1;
- (void)_finishedTableViewInitWithCoder;
- (void)_commonTableViewInit;
- (id)initWithCoder:(id)arg1;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)_markColumnWidthsNotYetCompared;
- (void)_updateColumnWidthsComparedToSuperview;
- (id)_setSuperview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (struct CGRect)_unobstructedPortionOfRect:(struct CGRect)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)_columnPositionsTheSame;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (struct CGRect)_liveResizeCacheableBounds;
- (void)_invalidateLiveResizeCachedImage;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct CGRect)arg1;
- (BOOL)_layoutIsSameAsCachedLayoutWithFrame:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 liveResizeCacheCoveredArea:(struct CGRect)arg2;
- (struct CGRect)_rectOfDraggedColumn;
- (void)_captureReorderResizeColumnImageCaches;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_alternatingRowBackgroundColors;
- (void)_drawAlternatingRowBackgroundColors:(id)arg1 inRect:(struct CGRect)arg2;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (struct CGRect)_adjustRectForFocusRing:(struct CGRect)arg1 atRow:(long long)arg2;
- (void)_setKeyboardFocusRingNeedsDisplayForCellInRect:(struct CGRect)arg1;
- (id)_focusRingBleedRegion;
- (void)_updateFocusRingsForOldLastSelectedRow:(long long)arg1;
- (id)_textBackgroundColor;
- (id)_nonKeyEditingFrameColor;
- (id)_controlShadowColor;
- (void)_viewBasedDrawRect:(struct CGRect)arg1;
- (struct CGRect)_drawEditingRectWhileCurrentlyEditing:(BOOL)arg1;
- (void)_drawDraggedColumn:(long long)arg1;
- (void)_drawCachedColumnsInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_updateLastEditingAndFocusRingFrame;
- (BOOL)_hasHorizontalScrollBar;
- (void)_viewBasedEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (void)_cellBasedEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4 inView:(id)arg5;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (void)_didSetFocusForCell:(id)arg1 withKeyboardFocusClipView:(id)arg2;
- (BOOL)_sendingTableViewRowAction;
- (BOOL)_sendAction:(SEL)arg1 to:(id)arg2 row:(long long)arg3 column:(long long)arg4;
- (void)_endMyEditing;
- (BOOL)_shouldDrawFocus;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_drawFocusRingAroundRect:(struct CGRect)arg1;
- (void)_drawTableExteriorFocusRingIfNecessaryInClipRect:(struct CGRect)arg1;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (void)_setFocusRingNeedsDisplayIfNecessary;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_setNeedsDisplayForFirstResponderChange;
- (void)_dirtyVisibleCellsForKeyStateChange;
- (void)_startWatchingWindowWillOrderOnScreen;
- (void)_stopWatchingWindowWillOrderOnScreen;
- (void)_tableViewWindowWillOrderOnScreen:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)abortEditing;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)refusesFirstResponder;
- (BOOL)_isEnabledTableView;
- (BOOL)_mouseDownShouldMakeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (id)_groupCellAttributesWithDefaults:(id)arg1 highlighted:(BOOL)arg2;
- (id)_selectedSourceListCellAttributesWithDefaults:(id)arg1;
- (id)_groupCellAttributedStringForString:(id)arg1 withDefaultAttributes:(id)arg2 highlighted:(BOOL)arg3;
- (BOOL)_addSelectedSourceListCellAttributesToCell:(id)arg1 withData:(id)arg2;
- (BOOL)_addGroupRowAttributesToCell:(id)arg1 withData:(id)arg2 highlighted:(BOOL)arg3;
- (BOOL)_isTrackingDataCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)_updateCellImage:(id)arg1;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_canInitiateRowDragInColumn:(long long)arg1;
- (BOOL)_canDragRowForClickOnCell:(id)arg1 column:(long long)arg2 row:(long long)arg3 atPoint:(struct CGPoint)arg4;
- (BOOL)_onlyDragOnContent;
- (BOOL)_onlyAcceptRowDropOnContent;
- (long long)_hitRowForDropTargetRow:(long long)arg1 point:(struct CGPoint)arg2;
- (BOOL)canDragRowsWithIndexes:(id)arg1 atPoint:(struct CGPoint)arg2;
- (unsigned long long)_hitTestForEvent:(id)arg1 atColumn:(long long)arg2 row:(long long)arg3;
- (BOOL)_isFullWidthCellAtRow:(long long)arg1;
- (BOOL)_editingIsPossibleForColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_shouldEditColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3;
- (BOOL)_editOnSingleClick;
- (void)_setEditOnSingleClick:(BOOL)arg1;
- (BOOL)_sendShouldTrackCell:(id)arg1 forTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)_shouldAbortMouseDownAfterDragAttempt:(id)arg1;
- (void)_delayedSelectRow;
- (void)_startEditingColumn:(long long)arg1 row:(long long)arg2 event:(id)arg3;
- (void)_delayStartEditing:(id)arg1;
- (void)_delayCancelStartEditing;
- (BOOL)_shouldAllowClickThroughForEvent:(id)arg1;
- (BOOL)_tryViewBasedMouseDown:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (BOOL)_delegateRespondsToShouldTrackCell;
- (BOOL)_tryCellBasedMouseDown:(id)arg1 atRow:(long long)arg2 column:(long long)arg3 withView:(id)arg4;
- (void)_removeSelectedIndexesFromIndexSet:(id)arg1 goingDown:(BOOL)arg2 fromRow:(long long)arg3;
- (void)mouseDown:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (BOOL)_allowTabbingIntoCells;
- (BOOL)canFocusCell:(id)arg1 atTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)shouldFocusCell:(id)arg1 atColumn:(long long)arg2 row:(long long)arg3;
- (long long)focusedColumn;
- (void)setFocusedColumn:(long long)arg1;
- (BOOL)_canFocusCellAtRow:(int)arg1 column:(int)arg2;
- (BOOL)_canPerformClickAtColumn:(long long)arg1 row:(long long)arg2;
- (long long)_focusedColumnToPerformClickOnRow:(long long)arg1;
- (void)performClickOnCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_attemptToPerformClickOnFocusedColumn;
- (long long)_focusedColumnToBeginEditingInRow:(long long)arg1;
- (BOOL)_attemptToEditFocusedColumn;
- (BOOL)_selectNextFocusedCellGoingForward:(BOOL)arg1 andEdit:(BOOL)arg2;
- (void)_selectRowsFromArrowKey:(unsigned short)arg1 withEvent:(id)arg2;
- (void)keyDown:(id)arg1;
- (void)updateCell:(id)arg1;
- (void)updateCellInside:(id)arg1;
- (id)selectedCell;
- (void)_prepareSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_doSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_restrictColumnResizingToWidth;
- (unsigned long long)_autoresizingStyleForColumnResize;
- (long long)_gdbCompareWidthWithSuperview;
- (void)_sizeToFitForUserColumnResizeWithOriginalWidths:(id)arg1;
- (void)_autoresizeToFit;
- (double)_delegate_sizeToFitWidthOfColumn:(long long)arg1;
- (double)_sizeToFitWidthOfColumn:(long long)arg1 row:(long long)arg2;
- (double)_sizeToFitWidthOfColumn:(long long)arg1;
- (void)superviewFrameChanged:(id)arg1;
- (void)_sizeTableColumnsToFitForAutoresizingWithStyle:(unsigned long long)arg1;
- (void)_sizeTableColumnsToFitForColumnResizeWithStyle:(unsigned long long)arg1;
- (void)_sizeTableColumnsToFitWithStyle:(unsigned long long)arg1;
- (void)sizeLastColumnToFit;
- (void)sizeToFit;
- (void)_setMinColumnLayoutMinRequiredVisibleWidth:(double)arg1;
- (double)__preLiveResizeWidthOfColumn:(id)arg1;
- (void)_sizeTableColumnsToFitWithStyle:(unsigned long long)arg1 forceExactFitIfPossible:(BOOL)arg2 originalWidths:(id)arg3;
- (void)__clearPreLiveColumnWidths;
- (void)__computePreLiveColumnResizeWidthsByColumn;
- (void)_logColumnWidths:(id)arg1;
- (void)_markLiveResizeColumnLayoutInfo;
- (void)_clearLiveResizeColumnLayoutInfo;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (BOOL)_okToStartTextEndEditing;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setDoubleAction:(SEL)arg1;
- (SEL)doubleAction;
- (void)setRefusesFirstResponder:(BOOL)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_checkDataSource;
- (void)setDataSource:(id)arg1;
- (id)dataSource;
- (void)setAllowsColumnReordering:(BOOL)arg1;
- (BOOL)allowsColumnReordering;
- (void)setColumnAutoresizingStyle:(unsigned long long)arg1;
- (unsigned long long)columnAutoresizingStyle;
- (void)setAutoresizesAllColumnsToFit:(BOOL)arg1;
- (BOOL)autoresizesAllColumnsToFit;
- (void)setAllowsColumnSelection:(BOOL)arg1;
- (BOOL)allowsColumnSelection;
- (void)setAllowsColumnResizing:(BOOL)arg1;
- (BOOL)allowsColumnResizing;
- (void)setIntercellSpacing:(struct CGSize)arg1;
- (struct CGSize)intercellSpacing;
- (id)tableColumns;
- (long long)numberOfColumns;
- (long long)numberOfRows;
- (void)addTableColumn:(id)arg1;
- (void)removeTableColumn:(id)arg1;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)setHeaderView:(id)arg1;
- (id)headerView;
- (void)setCornerView:(id)arg1;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)arg1;
- (BOOL)usesAlternatingRowBackgroundColors;
- (id)cornerView;
- (void)setGridStyleMask:(unsigned long long)arg1;
- (unsigned long long)gridStyleMask;
- (void)setDrawsGrid:(BOOL)arg1;
- (BOOL)drawsGrid;
- (BOOL)_drawsHorizontalGrid;
- (BOOL)_drawsVerticalGrid;
- (id)tableColumnWithIdentifier:(id)arg1;
- (long long)columnWithIdentifier:(id)arg1;
- (void)_disableMovedPosting;
- (void)_enableMovedPosting;
- (void)_postColumnDidMoveNotificationFromColumn:(long long)arg1 toColumn:(long long)arg2;
- (BOOL)_delegateShouldReorderColumn:(long long)arg1 toColumn:(long long)arg2;
- (BOOL)_userCanMoveColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)moveColumn:(long long)arg1 toColumn:(long long)arg2;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setGridColor:(id)arg1;
- (id)gridColor;
- (long long)editedColumn;
- (long long)editedRow;
- (long long)clickedRow;
- (long long)clickedColumn;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsEmptySelection:(BOOL)arg1;
- (BOOL)allowsEmptySelection;
- (void)_disableSelectionPosting;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_postSelectionDidChangeNotification;
- (void)_markSelectionIsChanging;
- (void)_postSelectionIsChangingAndMark:(BOOL)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)_deselectAll;
- (void)_deselectAllAndEndEditingIfNecessary:(BOOL)arg1;
- (void)deselectAll:(id)arg1;
- (void)_endMyEditingAndRemainFirstResponder;
- (void)_endEditingIfNecessaryWhenSelectingColumnRange:(struct _NSRange)arg1;
- (void)_endEditingIfNecessaryWhenSelectingRowRange:(struct _NSRange)arg1;
- (void)_endEditingIfNecessaryWhenDeselectingColumnRange:(struct _NSRange)arg1;
- (void)_endEditingIfNecessaryWhenDeselectingRowRange:(struct _NSRange)arg1;
- (BOOL)_validIndexes:(id)arg1 indexType:(int)arg2;
- (void)_doSelectIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2 indexType:(int)arg3 funnelThroughSingleIndexVersion:(BOOL)arg4;
- (void)selectColumn:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectRow:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectColumnIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)_deselectColumn:(long long)arg1;
- (void)deselectColumn:(long long)arg1;
- (void)deselectRow:(long long)arg1;
- (long long)selectedColumn;
- (long long)selectedRow;
- (BOOL)isColumnSelected:(long long)arg1;
- (BOOL)isRowSelected:(long long)arg1;
- (long long)numberOfSelectedColumns;
- (long long)numberOfSelectedRows;
- (id)selectedColumnEnumerator;
- (id)selectedRowEnumerator;
- (id)selectedRowIndexes;
- (id)selectedColumnIndexes;
- (void)scrollRowToVisible:(long long)arg1;
- (void)scrollColumnToVisible:(long long)arg1;
- (id)_columnWidthAutoSaveNameWithPrefix;
- (id)_hiddenTableColumnsAutoSaveName;
- (id)_sortOrderAutoSaveNameWithPrefix;
- (void)setAutosaveName:(id)arg1;
- (id)autosaveName;
- (BOOL)autosaveTableColumns;
- (void)setAutosaveTableColumns:(BOOL)arg1;
- (void)_readPersistentTableColumns;
- (void)_writePersistentTableColumns;
- (void)_setNeedsDisplayInPrimarySortColumns;
- (void)_setNeedsDisplayInPrimarySortColumnsIfNecessary;
- (BOOL)_dataSourceRespondsToSortDescriptorsDidChange;
- (void)_sendDataSourceSortDescriptorsDidChange:(id)arg1;
- (void)setSortDescriptors:(id)arg1;
- (void)_removeSortDescriptorForTableColumn:(id)arg1;
- (void)_fixupSortDescriptorPlaceholdersIfNecessary;
- (id)sortDescriptors;
- (void)_changeSortDescriptorsForClickOnColumn:(long long)arg1;
- (void)setIndicatorImage:(id)arg1 inTableColumn:(id)arg2;
- (id)indicatorImageInTableColumn:(id)arg1;
- (void)_sendDelegateDidMouseDownInHeader:(long long)arg1;
- (void)_sendDelegateDidClickColumn:(long long)arg1;
- (void)_sendDelegateDidDragColumn:(long long)arg1;
- (void)setHighlightedTableColumn:(id)arg1;
- (id)highlightedTableColumn;
- (void)_setDeselectsWhenMouseLeavesDuringDrag:(BOOL)arg1;
- (BOOL)_deselectsWhenMouseLeavesDuringDrag;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (unsigned long long)_dropCandidateOperation;
- (BOOL)_dataSourceRespondsToValidateDrop;
- (BOOL)_canShowDropGap;
- (void)_updateDropFeedbackFromPriorRow:(long long)arg1 operation:(unsigned long long)arg2 mask:(unsigned long long)arg3;
- (void)_tryDrop:(id)arg1 dropRow:(long long)arg2 dropOperation:(unsigned long long)arg3;
- (void)_determineDropCandidateForDragInfo:(id)arg1;
- (void)_setNeedsDisplayForDropCandidateRow:(long long)arg1 operation:(unsigned long long)arg2 mask:(unsigned long long)arg3;
- (void)_drawDropHighlight;
- (id)_dropHighlightColorForRow:(long long)arg1;
- (id)_dropHighlightColor;
- (id)_dropHighlightBackgroundColor;
- (void)_setContextMenuHighlightColorForRow:(long long)arg1;
- (struct CGRect)_dropHighlightOutlineRectForRow:(long long)arg1;
- (void)_drawDropHighlightOutlineForRow:(long long)arg1;
- (struct CGRect)_dropHighlightBackgroundRectForRow:(long long)arg1;
- (BOOL)_shouldDrawSourceListDraggingDestinationStyle;
- (void)_drawDropHighlightBackgroundForRow:(long long)arg1;
- (void)_drawDropHighlightOnEntireTableView;
- (void)_drawDropHighlightOnRow:(long long)arg1;
- (void)_drawDropHighlightBetweenUpperRow:(long long)arg1 andLowerRow:(long long)arg2 atOffset:(double)arg3;
- (void)_drawInsertionLineAtPoint:(struct CGPoint)arg1 length:(double)arg2 lineWidth:(double)arg3 drawCircle:(BOOL)arg4;
- (void)_drawDropHighlightBetweenUpperRow:(long long)arg1 andLowerRow:(long long)arg2 onRow:(long long)arg3 atOffset:(double)arg4;
- (void)_drawDropHighlightOffScreenIndicatorPointingLeftAtOffset:(double)arg1;
- (void)_drawDropHighlightOffScreenIndicatorPointingUp:(BOOL)arg1 atOffset:(double)arg2;
- (int)_highlightTypeForRow:(long long)arg1;
- (void)_drawSourceListContextMenuHighlightForRow:(long long)arg1;
- (void)_drawRegularContextMenuHighlightForRow:(long long)arg1;
- (void)drawContextMenuHighlightForRow:(long long)arg1;
- (void)setVerticalMotionCanBeginDrag:(BOOL)arg1;
- (BOOL)verticalMotionCanBeginDrag;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_candidateDragRowIndexForClickInRow:(long long)arg1;
- (BOOL)_isPoint:(struct CGPoint)arg1 inDragZoneOfRow:(long long)arg2;
- (id)_columnsForDragImage;
- (void)_drawDragImageCellAtColumn:(long long)arg1 row:(long long)arg2 withCellFrameUnion:(struct CGRect)arg3;
- (id)_dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
- (id)dragImageForRows:(id)arg1 event:(id)arg2 dragImageOffset:(struct CGPoint *)arg3;
- (void)_doImageDragUsingRowsWithIndexes:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5 startRow:(long long)arg6;
- (void)_doImageDragUsingRows:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5;
- (BOOL)_sendDataSourceWriteDragDataWithIndexes:(id)arg1 toPasteboard:(id)arg2;
- (void)__doImageDragUsingRowsWithIndexes:(id)arg1 event:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5 startRow:(long long)arg6;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (BOOL)_shouldSlideBackAfterDragFailed;
- (id)_draggingSource;
- (BOOL)_performDragFromMouseDown:(id)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)setDropRow:(long long)arg1 dropOperation:(unsigned long long)arg2;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)_cleanupDropFeedback;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)_dataSourceRespondsToNamesOfPromisedFilesDroppedAtDestination;
- (id)_dataSourceNamesOfPromisedFilesAtDestination:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (struct CGSize)_adjustFrameSizeToFitSuperview:(struct CGSize)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidMoveToSuperview;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (void)setToolTip:(id)arg1;
- (void)setEnabled:(BOOL)arg1;
- (id)menuForEvent:(id)arg1;
- (void)_resetClickedRowAndColumn;
- (void)_menuDidEndTracking:(id)arg1;
- (BOOL)wantsFirstResponderOnMouseEvents;
- (void)setWantsFirstResponderOnMouseEvents:(BOOL)arg1;
- (void)setDropFeedbackStyle:(long long)arg1;
- (long long)dropFeedbackStyle;
- (void)setDraggingDestinationFeedbackStyle:(long long)arg1;
- (long long)draggingDestinationFeedbackStyle;
- (BOOL)_supportsTrackingAreasForCells;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)_dropTrackingAreaData;
- (void)updateTrackingAreas;

@end

@interface NSTableOverlappingColumnClipHelper : NSObject
{
    NSGraphicsContext *_graphicsContext;
    NSTableView *_tableView;
    struct CGRect _origClipRect;
    struct CGRect _currClipRect;
    BOOL _isClipping;
}

- (id)initWithTableView:(id)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)currentClipRect;
- (void)dealloc;
- (void)clearClipping;
- (BOOL)clipForDrawingRow:(long long)arg1 column:(long long)arg2;

@end

@interface _NSTableViewReserved : NSObject
{
    NSIndexSet *selectionChanging;
    NSCell *trackingCell;
    NSString **notificationTable;
    NSString *autoSaveName;
    struct __TvFlags2 {
        unsigned int sizingToFitForColumnResize:1;
        unsigned int autoresizing:1;
        unsigned int columnAutoresizingStyle:3;
        unsigned int delegateRespondsTo_heightForRow:1;
        unsigned int dataSourceWriteDraggedRowsMethodVersion:2;
        unsigned int disablePersistTableColumns:1;
        unsigned int sendingTableViewTargetAction:1;
        unsigned int mouseDownShouldTrack:1;
        unsigned int datasourceRespondsTo_ObjectValue:1;
        unsigned int validDataSourceMethods:1;
        unsigned int dataSourceMethodsWarningPrinted:1;
        unsigned int afterLiveResizeFieldEditorShouldDrawBackground:1;
        unsigned int sortDescriptorsContainsPlaceholders:1;
        unsigned int usesStandardAlternatingRowColors:1;
        unsigned int numberOfRowsCacheIsValid:1;
        unsigned int okToEnterTextDidEndEditing:1;
        unsigned int okToCompleteTextDidEndEditing:1;
        unsigned int autoSaveTableColumns:1;
        unsigned int verticalMotionCanBeginDrag:1;
        unsigned int lastDropHoverInCenter:1;
        unsigned int returnNilHighlightColorForCell:1;
        unsigned int subclassIsSafeForLiveResize:1;
        unsigned int hasCachedSubclassIsSafeForLiveResize:1;
        unsigned int deselectsWhenMouseLeaves:1;
        unsigned int delegateRespondsTo_didDragColumn:1;
        unsigned int delegateRespondsTo_didClickColumn:1;
        unsigned int delegateRespondsTo_mouseDownInHeader:1;
        unsigned int drawsGridVertical:1;
        unsigned int drawsGridHorizontal:1;
        id _hiliteColId;
        long long clickedRow;
        long long clickedColumn;
    } _tvFlags2;
    unsigned long long dropCandidateOpMask;
    long long dropCandidateRow;
    unsigned long long dropCandidateOpType;
    NSIndexSet *draggedRowIndexes;
    long long lastDropHoverRow;
    unsigned long long lastDropHoverSourceMask;
    struct CGRect lastEditingCellFrame;
    struct CGRect lastFocusRingFrame;
    struct CGRect lastOffscreenDropIndicatorFrame;
    long long numberOfRowsCacheValue;
    NSArray *sortDescriptors;
    long long mouseDownEventNumber;
    double columnLayoutMinRequiredVisibleWidth;
    NSMutableDictionary *preLiveColumnResizeWidthsByColumn;
    double preLiveColumnResizeFirstVisibleColumnInset;
    long long preLiveColumnResizeFirstVisibleColumn;
    NSIndexSet *selection;
    _NSTableRowHeightStorage *rowHeightStorage;
    struct _TvFlags3 _tvFlags3;
    unsigned long long draggingSourceOperationMaskForLocal;
    unsigned long long draggingSourceOperationMaskForNonLocal;
    long long newSelectedRow;
    _NSTypeSelectData *typeSelectData;
    long long selectionHighlightStyle;
    long long updateCount;
    long long anchorRow;
    long long focusedColumn;
    NSEvent *lastSelectRowEvent;
    NSTableViewRowData *rowData;
    long long draggingDestinationFeedbackStyle;
    _NSCellTrackingData *cellTrackingData;
}

@end

@interface _NSCornerView : NSView
{
    NSCell *_drawCell;
}

- (void)dealloc;
- (BOOL)isFlipped;
- (id)enclosingScrollView;
- (struct CGRect)fillRect;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_drawingEndSeparator;

@end

@interface _NSFlippedImage : NSImage
{
}

- (BOOL)isFlipped;
- (id)initWithRect:(struct CGRect)arg1 color:(id)arg2 ofView:(id)arg3;

@end

@interface _NSCellTrackingData : NSObject
{
    NSCell *_mouseCell;
    long long _mouseRow;
    long long _mouseCol;
    BOOL _cellNeedsDisplay;
}

- (void)dealloc;
@property BOOL cellNeedsDisplay; // @synthesize cellNeedsDisplay=_cellNeedsDisplay;
@property(retain, nonatomic) NSCell *mouseCell; // @synthesize mouseCell=_mouseCell;
@property long long mouseCol; // @synthesize mouseCol=_mouseCol;
@property long long mouseRow; // @synthesize mouseRow=_mouseRow;

@end

@interface _NSTableViewDelayProxy : NSObject
{
    long long column;
    NSEvent *event;
    long long row;
}

+ (id)proxy;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSTableViewChildCellProxy : NSTableViewCellProxy
{
}

- (id)initWithRow:(long long)arg1 tableColumn:(id)arg2 realElement:(id)arg3;
- (void)dealloc;
- (id)accessibilityParentAttribute;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (struct CGRect)realElementRect;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;

@end

@interface NSTableViewListCellProxy : NSTableViewCellProxy
{
}

- (BOOL)_canDeselect;
- (id)accessibilityAttributeNames;
- (id)accessibilityParentAttribute;
- (id)accessibilitySizeAttribute;
- (id)accessibilitySelectedAttribute;
- (BOOL)accessibilityIsSelectedAttributeSettable;
- (void)accessibilitySetSelectedAttribute:(id)arg1;

@end

@interface NSTableViewCellProxy : NSAccessibilityProxy
{
    NSTableColumn *_tableColumn;
    long long _row;
    Class _alternateParentClass;
    id _realElement;
}

+ (id)cellForRow:(long long)arg1 column:(long long)arg2 tableView:(id)arg3;
+ (id)cellForRow:(long long)arg1 tableColumn:(id)arg2;
- (id)initWithRow:(long long)arg1 tableColumn:(id)arg2;
- (id)initWithRow:(long long)arg1 column:(long long)arg2 tableView:(id)arg3;
- (void)dealloc;
- (long long)row;
- (long long)column;
- (id)tableView;
- (long long)accessibilityColumnIndex;
- (Class)alternateParentClass;
- (void)setAlternateParentClass:(Class)arg1;
- (BOOL)isBeingEdited;
- (id)editor;
- (id)cellForProxy;
- (id)realElement;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityParentAttribute;
- (void)_sendDataSourceSetObjectValue:(id)arg1;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (void)_accessibilityPopUpButtonCellPressAction:(id)arg1;
- (void)_accessibilityPerformAction:(id)arg1 withValue:(id)arg2;
- (void)_accessibilityPerformAction:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (void)_accessibilityShowMenu:(id)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (id)accessibilityCurrentEditor;
- (id)accessibilityChildrenAttribute;
- (id)description;

@end

@interface NSTableViewDynamicToolTipManager : NSViewDynamicToolTipManager
{
}

- (BOOL)_wantsToolTipAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_wantsRevealoverAtColumn:(long long)arg1 row:(long long)arg2;
- (id)_tooltipStringForCell:(id)arg1 column:(long long)arg2 row:(long long)arg3 point:(struct CGPoint)arg4 trackingRect:(struct CGRect *)arg5;
- (void)_getColumn:(long long *)arg1 row:(long long *)arg2 cell:(id *)arg3 cellFrame:(struct CGRect *)arg4 toolTipRect:(struct CGRect *)arg5 wantsToolTip:(char *)arg6 wantsRevealover:(char *)arg7 atPoint:(struct CGPoint)arg8;
- (struct CGRect)dynamicToolTipRectAtPoint:(struct CGPoint)arg1;
- (id)dynamicToolTipStringAtPoint:(struct CGPoint)arg1 trackingRect:(struct CGRect *)arg2;
- (id)dynamicToolTipRevealoverInfoAtPoint:(struct CGPoint)arg1 trackingRect:(struct CGRect *)arg2;

@end

@interface NSText : NSView <NSChangeSpelling, NSIgnoreMisspelledWords>
{
    id _ivars;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)string;
- (void)setString:(id)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)RTFFromRange:(struct _NSRange)arg1;
- (id)RTFDFromRange:(struct _NSRange)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withRTF:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withRTFD:(id)arg2;
- (BOOL)writeRTFDToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)readRTFDFromFile:(id)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)arg1;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (unsigned long long)alignment;
- (void)setAlignment:(unsigned long long)arg1;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setFieldEditor:(BOOL)arg1;
- (BOOL)isFieldEditor;
- (void)setTextColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)setFont:(id)arg1 range:(struct _NSRange)arg2;
- (BOOL)usesFontPanel;
- (void)setUsesFontPanel:(BOOL)arg1;
- (struct CGSize)maxSize;
- (void)setMaxSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (BOOL)isHorizontallyResizable;
- (void)setHorizontallyResizable:(BOOL)arg1;
- (BOOL)isVerticallyResizable;
- (void)setVerticallyResizable:(BOOL)arg1;
- (void)sizeToFit;
- (void)copy:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copyRuler:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteRuler:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)unscript:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)toggleRuler:(id)arg1;
- (BOOL)isRulerVisible;
- (struct _NSRange)selectedRange;
- (void)setSelectedRange:(struct _NSRange)arg1;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)changeSpelling:(id)arg1;
- (void)ignoreSpelling:(id)arg1;

@end

@interface NSAccessibilityTextLink : NSAccessibilityMockUIElement
{
    struct _NSRange _characterRange;
}

+ (id)linkWithCharacterRange:(struct _NSRange)arg1 parent:(id)arg2;
- (id)initWithCharacterRange:(struct _NSRange)arg1 parent:(id)arg2;
- (struct _NSRange)characterRange;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSMultiplePagePDFImageViewTextAttachmentCell : NSViewTextAttachmentCell
{
    BOOL _isExpanded;
}

- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGSize)cellSize;
- (void)addView:(id)arg1 frame:(struct CGRect)arg2 toView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;
- (void)adjustView:(id)arg1 frame:(struct CGRect)arg2 forView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;

@end

@interface NSDocumentTextAttachmentScrollView : NSScrollView
{
    NSImageView *_imageView;
    NSView *_expandedView;
    NSLayoutManager *_layoutManager;
    unsigned long long _charIndex;
    BOOL _isExpanded;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isExpanded;
- (id)layoutManager;
- (unsigned long long)charIndex;
- (id)image;
- (void)setImage:(id)arg1;
- (id)expandedView;
- (void)setExpandedView:(id)arg1;
- (void)setCharacterIndex:(unsigned long long)arg1 layoutManager:(id)arg2;
- (void)setExpanded:(BOOL)arg1;
- (void)toggleExpanded:(id)arg1;

@end

@interface NSMultiplePagePDFImageView : NSView
{
    NSPDFImageRep *_imageRep;
}

- (void)dealloc;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (long long)numberOfPages;
- (id)imageRep;
- (void)setImageRep:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface NSImageKitViewTextAttachmentCell : NSViewTextAttachmentCell
{
}

- (void)_loadImageKit;
- (Class)_imageKitViewClass;
- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (id)helperForView:(id)arg1 layoutManager:(id)arg2 characterIndex:(unsigned long long)arg3;
- (id)viewForCharacterIndex:(unsigned long long)arg1 layoutManager:(id)arg2;
- (void)addView:(id)arg1 frame:(struct CGRect)arg2 toView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;
- (void)adjustView:(id)arg1 frame:(struct CGRect)arg2 forView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;

@end

@interface NSImageKitViewTextAttachmentCellHelper : NSViewTextAttachmentCellHelper
{
    unsigned long long _charIndex;
}

- (id)initWithView:(id)arg1 layoutManager:(id)arg2 characterIndex:(unsigned long long)arg3 attachmentCell:(id)arg4;
- (unsigned long long)characterIndex;
- (void)setCharacterIndex:(unsigned long long)arg1;
- (void)viewFrameChanged:(id)arg1;
- (void)dealloc;

@end

@interface NSImageViewTextAttachmentCell : NSViewTextAttachmentCell
{
}

- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)addView:(id)arg1 frame:(struct CGRect)arg2 toView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;

@end

@interface NSTextAttachmentImageView : NSImageView
{
}

- (void)mouseDown:(id)arg1;

@end

@interface NSMovieViewTextAttachmentCell : NSViewTextAttachmentCell
{
    QTMovie *_movie;
    struct CGSize _size;
}

- (id)initWithMovie:(id)arg1;
- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)addView:(id)arg1 frame:(struct CGRect)arg2 toView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;
- (struct CGSize)cellSize;
- (void)dealloc;

@end

@interface NSViewTextAttachmentCell : NSTextAttachmentCell
{
}

- (id)helperForView:(id)arg1 layoutManager:(id)arg2 characterIndex:(unsigned long long)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (id)viewForCharacterIndex:(unsigned long long)arg1 layoutManager:(id)arg2;
- (BOOL)wantsToTrackMouse;
- (id)viewWithFrame:(struct CGRect)arg1 forView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)addView:(id)arg1 frame:(struct CGRect)arg2 toView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;
- (void)adjustView:(id)arg1 frame:(struct CGRect)arg2 forView:(id)arg3 characterIndex:(unsigned long long)arg4 layoutManager:(id)arg5;
- (void)_helperDeallocatedForView:(id)arg1 layoutManager:(id)arg2;
- (void)removeView:(id)arg1 fromView:(id)arg2 layoutManager:(id)arg3;
- (void)releaseView:(id)arg1;

@end

@interface NSViewTextAttachmentCellHelper : NSObject
{
    NSView *_view;
    NSViewTextAttachmentCell *_attachmentCell;
    NSLayoutManager *_layoutManager;
}

- (id)initWithView:(id)arg1 layoutManager:(id)arg2 characterIndex:(unsigned long long)arg3 attachmentCell:(id)arg4;
- (id)view;
- (void)setView:(id)arg1;
- (void)removeView;
- (void)dealloc;
- (void)finalize;

@end

@interface NSTextAttachmentCell : NSCell <NSTextAttachmentCell>
{
    NSTextAttachment *_attachment;
}

- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGSize)cellSize;
- (struct CGPoint)cellBaselineOffset;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)arg1;
- (BOOL)wantsToTrackMouseForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (void)setAttachment:(id)arg1;
- (id)attachment;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4 untilMouseUp:(BOOL)arg5;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface NSTextAttachment : NSObject <NSCoding>
{
    NSFileWrapper *_fileWrapper;
    id <NSTextAttachmentCell> _cell;
    struct {
        unsigned int cellWasExplicitlySet:1;
        unsigned int ignoresOrientation:1;
        unsigned int :30;
    } _flags;
}

+ (void)_loadQTKit;
+ (Class)_QTDataReferenceClass;
+ (Class)_QTMovieClass;
+ (Class)_QTMovieViewClass;
- (id)initWithFileWrapper:(id)arg1;
- (void)setFileWrapper:(id)arg1;
- (id)fileWrapper;
- (void)setIgnoresOrientation:(BOOL)arg1;
- (BOOL)ignoresOrientation;
- (void)setAttachmentCell:(id)arg1;
- (id)attachmentCell;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSTextColorBinder : NSBinder
{
    NSColor *_originalColor;
    NSColor *_referenceBinderRequestedColor;
    struct __textColorBinderFlags {
        unsigned int _referenceBinderDidRequestColor:1;
        unsigned int _reservedTextColorBinder:31;
    } _textColorBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (void)_init;
- (void)_dealloc;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_connectionWasEstablished;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)arg1;
- (void)_requestTextColor:(id)arg1;
- (id)textColor;
- (id)textColorAtIndex:(unsigned long long)arg1;
- (id)textColorAtIndexPath:(id)arg1;
- (id)_textColorWithMode:(struct __NSKeyValueCodingControllerModeType)arg1;
- (id)_setTextColorInObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 compareDirectly:(BOOL)arg3 toTextColor:(id)arg4;
- (void)_showTextColorImmediatelyInObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2;
- (id)updateInvalidatedTextColor:(id)arg1 forObject:(id)arg2;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSTextContainer : NSObject <NSCoding>
{
    NSLayoutManager *_layoutManager;
    NSTextView *_textView;
    struct CGSize _size;
    double _lineFragmentPadding;
    struct __tcFlags {
        unsigned int widthTracksTextView:1;
        unsigned int heightTracksTextView:1;
        unsigned int observingFrameChanges:1;
        unsigned int _reserved:13;
    } _tcFlags;
}

+ (void)initialize;
- (void)_commonInit;
- (id)initWithContainerSize:(struct CGSize)arg1;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)layoutManager;
- (void)setLayoutManager:(id)arg1;
- (void)replaceLayoutManager:(id)arg1;
- (id)textView;
- (void)setTextView:(id)arg1;
- (void)setWidthTracksTextView:(BOOL)arg1;
- (BOOL)widthTracksTextView;
- (void)setHeightTracksTextView:(BOOL)arg1;
- (BOOL)heightTracksTextView;
- (void)setContainerSize:(struct CGSize)arg1;
- (struct CGSize)containerSize;
- (void)setLineFragmentPadding:(double)arg1;
- (double)lineFragmentPadding;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 sweepDirection:(unsigned long long)arg2 movementDirection:(unsigned long long)arg3 remainingRect:(struct CGRect *)arg4;
- (BOOL)isSimpleRectangularTextContainer;
- (BOOL)containsPoint:(struct CGPoint)arg1;

@end

@interface NSTextField : NSControl <NSUserInterfaceValidations>
{
    id _delegate;
    SEL _errorAction;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)arg1;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)allowsEditingTextAttributes;
- (void)setAllowsEditingTextAttributes:(BOOL)arg1;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)arg1;
- (void)setBezelStyle:(unsigned long long)arg1;
- (unsigned long long)bezelStyle;
- (void)setPreviousText:(id)arg1;
- (void)setNextText:(id)arg1;
- (id)nextText;
- (id)previousText;
- (BOOL)performMnemonic:(id)arg1;
- (void)setTitleWithMnemonic:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (void)selectText:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textShouldEndEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSTextFieldCell : NSActionCell
{
    NSColor *_backgroundColor;
    NSColor *_textColor;
    struct __tfFlags {
        unsigned int drawsBackground:1;
        unsigned int bezelStyle:3;
        unsigned int thcSortDirection:2;
        unsigned int thcSortPriority:4;
        unsigned int mini:1;
        unsigned int textColorIgnoresNormalDisableFlag:1;
        unsigned int textColorDisableFlag:1;
        unsigned int thcForceHighlightForSort:1;
        unsigned int invalidTextColor:1;
        unsigned int notificationForMarkedText:1;
        unsigned int reservedTextFieldCell:16;
    } _tfFlags;
}

+ (void)initialize;
- (id)init;
- (id)initTextCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isOpaque;
- (void)setBezeled:(BOOL)arg1;
- (BOOL)_acceptsFirstResponderWhenSelectableWithFullKeyboardAccess;
- (BOOL)acceptsFirstResponder;
- (void)setBackgroundColor:(id)arg1;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (id)backgroundColor;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)_invalidateTextColor;
- (void)setBezelStyle:(unsigned long long)arg1;
- (unsigned long long)bezelStyle;
- (void)setPlaceholderString:(id)arg1;
- (id)placeholderString;
- (void)setPlaceholderAttributedString:(id)arg1;
- (id)placeholderAttributedString;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)_selectOrEdit:(const struct CGRect *)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7;
- (struct CGRect)_focusRingFrameForFrame:(struct CGRect)arg1 cellFrame:(struct CGRect)arg2;
- (struct __CFDictionary *)_coreUIDrawOptionsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawKeyboardFocusRingWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawThemeBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawFocusRingWithFrame:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_highlightsWithHighlightRect;
- (BOOL)wantsNotificationForMarkedText;
- (void)setWantsNotificationForMarkedText:(BOOL)arg1;
- (id)allowedInputSourceLocales;
- (void)setAllowedInputSourceLocales:(id)arg1;
- (void)_getTextColor:(id *)arg1 backgroundColor:(id *)arg2;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (long long)interiorBackgroundStyle;
- (BOOL)_textDimsWhenDisabled;
- (BOOL)_permitDarkenedTextForDisabled;
- (id)_textAttributes;
- (void)setFont:(id)arg1;
- (long long)_typesetterBehavior;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_okayToHitTest;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NSTextList : NSObject <NSCoding, NSCopying>
{
    NSString *_markerFormat;
    unsigned long long _listFlags;
    long long _startIndex;
    void *_listSecondary;
}

+ (void)initialize;
+ (id)_standardMarkerAttributesForAttributes:(id)arg1;
- (id)initWithMarkerFormat:(id)arg1 options:(unsigned long long)arg2;
- (void)dealloc;
- (id)markerFormat;
- (unsigned long long)listOptions;
- (unsigned long long)options;
- (void)setStartingItemNumber:(long long)arg1;
- (long long)startingItemNumber;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)_markerForMarkerFormat:(id)arg1 itemNumber:(long long)arg2 isNumbered:(char *)arg3 substitutionStart:(unsigned long long *)arg4 end:(unsigned long long *)arg5 specifierStart:(unsigned long long *)arg6 end:(unsigned long long *)arg7;
- (id)markerForItemNumber:(long long)arg1;
- (BOOL)_isOrdered;
- (id)_markerTitle;
- (id)_markerPrefix;
- (id)_markerSpecifier;
- (id)_unaffixedMarkerFormat;
- (id)_unaffixedMarkerForItemNumber:(long long)arg1;
- (id)_unaffixedMarkerTitle;
- (id)_markerSuffix;
- (id)_markerAtIndex:(unsigned long long)arg1 inText:(id)arg2;

@end

@interface NSConcreteTextStorage : NSTextStorage
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    id _lock;
    struct {
        unsigned int _forceFixAttributes:1;
        unsigned int _needLock:1;
        unsigned int _reserved:30;
    } _pFlags;
}

- (Class)classForCoder;
- (BOOL)_lockForReading;
- (BOOL)_lockForWritingWithExceptionHandler:(BOOL)arg1;
- (void)_unlock;
- (void)becomeMultiThreaded:(id)arg1;
- (void)becomeSingleThreaded:(id)arg1;
- (void)_initLocks;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)init;
- (void)dealloc;
- (BOOL)fixesAttributesLazily;
- (unsigned long long)length;
- (id)string;
- (void)_setForceFixAttributes:(BOOL)arg1;
- (BOOL)_forceFixAttributes;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;

@end

@interface NSTextStorage : NSMutableAttributedString
{
    struct _NSRange _editedRange;
    long long _editedDelta;
    struct {
        unsigned int editedMask:8;
        unsigned int :8;
        unsigned int disabled:16;
        unsigned int :32;
    } _flags;
    NSMutableArray *_layoutManagers;
    id _sideData;
}

+ (void)_fontSetChanged:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)addLayoutManager:(id)arg1;
- (void)removeLayoutManager:(id)arg1;
- (id)layoutManagers;
- (BOOL)_lockForReading;
- (BOOL)_lockForWriting;
- (BOOL)_lockForWritingWithExceptionHandler:(BOOL)arg1;
- (void)_unlock;
- (void)_setForceFixAttributes:(BOOL)arg1;
- (BOOL)_forceFixAttributes;
- (void)beginEditing;
- (void)endEditing;
- (BOOL)_isEditing;
- (struct _NSRange)editedRange;
- (unsigned long long)editedMask;
- (long long)changeInLength;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)processEditing;
- (struct _NSRange)_rangeByEstimatingAttributeFixingForRange:(struct _NSRange)arg1;
- (void)invalidateAttributesInRange:(struct _NSRange)arg1;
- (void)ensureAttributesAreFixedInRange:(struct _NSRange)arg1;
- (BOOL)fixesAttributesLazily;
- (void)_notifyEdited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3 invalidatedRange:(struct _NSRange)arg4;
- (void)fontSetChanged;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;

@end

@interface _NSTextStorageSideData : NSObject
{
    id _delegate;
    struct _NSRange _lazyFixRange;
}

@end

@interface NSConcreteNotifyingMutableAttributedString : NSConcreteMutableAttributedString
{
    id _delegate;
}

+ (Class)_mutableStringClass;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)beginEditing;
- (void)endEditing;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;

@end

@interface NSUndoTyping : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSMutableAttributedString *_attributedString;
}

- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;
- (void)dealloc;
- (BOOL)coalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 text:(id)arg4;
- (void)undoRedo:(id)arg1;
- (BOOL)isSupportingCoalescing;

@end

@interface NSUndoSetAttributes : NSUndoTextOperation
{
    _NSAttributeRun *_attributes;
}

- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3;
- (void)dealloc;
- (void)undoRedo:(id)arg1;

@end

@interface NSUndoReplaceCharacters : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSAttributedString *_attributedString;
}

- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3 replacementRange:(struct _NSRange)arg4;
- (void)dealloc;
- (void)undoRedo:(id)arg1;

@end

@interface NSUndoTextOperation : NSObject
{
    struct _NSRange _affectedRange;
    NSUndoManager *_undoManager;
    NSLayoutManager *_layoutManager;
}

- (id)initWithAffectedRange:(struct _NSRange)arg1 layoutManager:(id)arg2 undoManager:(id)arg3;
- (void)dealloc;
- (void)undoRedo:(id)arg1;
- (id)firstTextViewForTextStorage:(id)arg1;
- (id)undoManager;
- (BOOL)isSupportingCoalescing;

@end

@interface NSTextTable : NSTextBlock
{
    unsigned long long _numCols;
    unsigned long long _tableFlags;
    id _lcache;
    void *_tablePrimary;
    void *_tableSecondary;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_takeValuesFromTextBlock:(id)arg1;
- (void)setNumberOfColumns:(unsigned long long)arg1;
- (unsigned long long)numberOfColumns;
- (BOOL)collapsesBorders;
- (void)setCollapsesBorders:(BOOL)arg1;
- (BOOL)hidesEmptyCells;
- (void)setHidesEmptyCells:(BOOL)arg1;
- (unsigned long long)layoutAlgorithm;
- (void)setLayoutAlgorithm:(unsigned long long)arg1;
- (unsigned long long)_tableFlags;
- (void)_setTableFlags:(unsigned long long)arg1;
- (id)_rowArrayForBlock:(id)arg1 atIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 withRepetitions:(BOOL)arg6 collapseBorders:(BOOL)arg7 rowCharRange:(struct _NSRange *)arg8 indexInRow:(unsigned long long *)arg9 startingRow:(long long *)arg10 startingColumn:(long long *)arg11 previousRowBlockHelper:(id *)arg12;
- (id)_descriptionAtIndex:(unsigned long long)arg1 text:(id)arg2;
- (struct CGRect)rectForBlock:(id)arg1 layoutAtPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 textContainer:(id)arg4 characterRange:(struct _NSRange)arg5;
- (struct CGRect)_contentRectForCharRange:(struct _NSRange)arg1 textContainer:(id)arg2;
- (struct CGRect)boundsRectForBlock:(id)arg1 contentRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 textContainer:(id)arg4 characterRange:(struct _NSRange)arg5;
- (BOOL)_missingColumnsForRowRange:(struct _NSRange)arg1 blockIndex:(unsigned long long)arg2 text:(id)arg3;
- (void)drawBackgroundForBlock:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3 characterRange:(struct _NSRange)arg4 layoutManager:(id)arg5;

@end

@interface NSTextTableBlock : NSTextBlock
{
    NSTextTable *_table;
    long long _rowNum;
    long long _colNum;
    long long _rowSpan;
    long long _colSpan;
    void *_tableBlockPrimary;
    void *_tableBlockSecondary;
}

+ (void)initialize;
- (id)initWithTable:(id)arg1 startingRow:(long long)arg2 rowSpan:(long long)arg3 startingColumn:(long long)arg4 columnSpan:(long long)arg5;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)table;
- (long long)startingRow;
- (long long)rowSpan;
- (long long)startingColumn;
- (long long)columnSpan;
- (void)_setRowSpan:(long long)arg1;
- (void)_setColumnSpan:(long long)arg1;
- (struct CGRect)rectForLayoutAtPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (struct CGRect)boundsRectForContentRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (void)drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterRange:(struct _NSRange)arg3 layoutManager:(id)arg4;

@end

@interface NSTextBlock : NSObject <NSCoding, NSCopying>
{
    void *_propVals;
    unsigned long long _propMask;
    unsigned long long _typeMask;
    id _primParamVal;
    id _otherParamVals;
    void *_blockPrimary;
    void *_blockSecondary;
}

+ (void)initialize;
- (id)init;
- (void)_createFloatStorage;
- (void)_destroyFloatStorage;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_setValue:(double)arg1 type:(unsigned long long)arg2 forParameter:(unsigned long long)arg3;
- (double)_valueForParameter:(unsigned long long)arg1;
- (unsigned long long)_valueTypeForParameter:(unsigned long long)arg1;
- (void)_takeValuesFromTextBlock:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setValue:(double)arg1 type:(unsigned long long)arg2 forDimension:(unsigned long long)arg3;
- (double)valueForDimension:(unsigned long long)arg1;
- (unsigned long long)valueTypeForDimension:(unsigned long long)arg1;
- (void)setContentWidth:(double)arg1 type:(unsigned long long)arg2;
- (double)contentWidth;
- (unsigned long long)contentWidthValueType;
- (void)setWidth:(double)arg1 type:(unsigned long long)arg2 forLayer:(long long)arg3 edge:(unsigned long long)arg4;
- (double)widthForLayer:(long long)arg1 edge:(unsigned long long)arg2;
- (unsigned long long)widthValueTypeForLayer:(long long)arg1 edge:(unsigned long long)arg2;
- (void)setWidth:(double)arg1 type:(unsigned long long)arg2 forLayer:(long long)arg3;
- (void)setVerticalAlignment:(unsigned long long)arg1;
- (unsigned long long)verticalAlignment;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setBorderColor:(id)arg1 forEdge:(unsigned long long)arg2;
- (id)borderColorForEdge:(unsigned long long)arg1;
- (void)setBorderColor:(id)arg1;
- (struct CGRect)rectForLayoutAtPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (struct CGRect)boundsRectForContentRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (void)drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterRange:(struct _NSRange)arg3 layoutManager:(id)arg4;
- (id)_attributeDescription;

@end

@interface NSTextBlockLayoutHelper : NSObject
{
    NSTextTableBlock *_block;
    struct _NSRange _charRange;
    struct _NSRange _glyphRange;
    struct CGRect _layoutRect;
    struct CGRect _boundsRect;
    double _lMargin;
    double _lBorder;
    double _lPadding;
    double _tMargin;
    double _tBorder;
    double _tPadding;
    double _width;
    double _height;
    double _rPadding;
    double _rBorder;
    double _rMargin;
    double _bPadding;
    double _bBorder;
    double _bMargin;
}

- (id)initWithTextBlock:(id)arg1 charRange:(struct _NSRange)arg2 glyphRange:(struct _NSRange)arg3 layoutRect:(struct CGRect)arg4 boundsRect:(struct CGRect)arg5 containerWidth:(double)arg6 allowMargins:(BOOL)arg7 collapseBorders:(BOOL)arg8 allowPadding:(BOOL)arg9;
- (id)initWithTextBlock:(id)arg1 charRange:(struct _NSRange)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(BOOL)arg6;
- (id)initWithTextBlock:(id)arg1 charIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(BOOL)arg6;
- (id)initWithTextTable:(id)arg1 charIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(BOOL)arg6;
- (id)description;
- (void)dealloc;

@end

@interface NSTextTemplate : NSViewTemplate
{
    id _contents;
    NSColor *_textColor;
    NSFont *_font;
    unsigned long long _alignment;
    NSColor *_backgroundColor;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    id _delegate;
    struct __ttFlags {
        unsigned int drawsBackground:1;
        unsigned int selectable:1;
        unsigned int editable:1;
        unsigned int richText:1;
        unsigned int importsGraphics:1;
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
        unsigned int fieldEditor:1;
        unsigned int usesFontPanel:1;
        unsigned int rulerVisible:1;
        unsigned int allowsUndo:1;
        unsigned int _pad:21;
    } _ttFlags;
}

+ (void)initialize;
- (id)initWithView:(id)arg1 className:(id)arg2;
- (void)dealloc;
- (id)createRealObject;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSTextValueBinder : NSValueBinder
{
    struct __textBinderFlags {
        unsigned int _objectSupportsTextColor:1;
        unsigned int _hasRequestedTextColor:1;
        unsigned int _reservedTextBinder:30;
    } _textBinderFlags;
    NSColor *_originalColor;
    NSColor *_nullColor;
    NSColor *_noSelectionColor;
    NSColor *_multipleValuesSelectionColor;
    NSColor *_notApplicableColor;
    id _textColorBinder;
}

+ (id)binderClassesSuperseded;
+ (void)setDefaultTextColor:(id)arg1 whenObjectValueIsUsed:(id)arg2;
+ (id)defaultTextColorWhenObjectValueIsUsed:(id)arg1;
- (void)_init;
- (void)_copyDetailsFromBinder:(id)arg1;
- (void)_dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_setObject:(id)arg1;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_noticeTextColorPeerBinder:(id)arg1;
- (void)_connectionWasEstablished;
- (void)setTextColor:(id)arg1 whenObjectValueIsUsed:(id)arg2;
- (id)textColorWhenObjectValueIsUsed:(id)arg1;
- (void)_adjustTextColorOfObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2;
- (void)_startChanging;
- (void)_endChanging;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;

@end

@interface NSTextView : NSText <NSTextInput, NSUserInterfaceValidations, NSTextInputClient>
{
}

+ (void)initialize;
+ (void)setDefaultMenu:(id)arg1;
+ (id)defaultMenu;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (void)_removeToolTipAndTimer;
- (void)_removeDataDetectionIndicator;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)textContainer;
- (void)setTextContainer:(id)arg1;
- (void)replaceTextContainer:(id)arg1;
- (void)setTextContainerInset:(struct CGSize)arg1;
- (struct CGSize)textContainerInset;
- (struct CGPoint)textContainerOrigin;
- (void)invalidateTextContainerOrigin;
- (id)layoutManager;
- (id)textStorage;
- (void)doCommandBySelector:(SEL)arg1;
- (void)_addSpellingAttributeForRange:(struct _NSRange)arg1;
- (void)_addGrammarAttributesForRange:(struct _NSRange)arg1 detailRange:(struct _NSRange)arg2 detail:(id)arg3;
- (void)_addGrammarAttributesForRange:(struct _NSRange)arg1 details:(id)arg2;
- (void)_removeSpellingAttributeForRange:(struct _NSRange)arg1 includeAccessibility:(BOOL)arg2;
- (void)_removeSpellingAttributeForRange:(struct _NSRange)arg1;
- (void)_removeGrammarAttributeForRange:(struct _NSRange)arg1 includeAccessibility:(BOOL)arg2;
- (void)_removeGrammarAttributeForRange:(struct _NSRange)arg1;
- (BOOL)_mightHaveSpellingAttributes;
- (BOOL)_canUnlearnSpellingForRange:(struct _NSRange)arg1;
- (id)_spellingGuessesForRange:(struct _NSRange)arg1 canCorrect:(char *)arg2;
- (id)_spellingGuessesForRange:(struct _NSRange)arg1;
- (struct _NSRange)_doubleClickAtIndex:(unsigned long long)arg1 limitedRangeOK:(BOOL)arg2;
- (struct _NSRange)_spellingSelectionRangeForProposedRange:(struct _NSRange)arg1;
- (struct _NSRange)_rangeByTrimmingWhitespaceFromRange:(struct _NSRange)arg1;
- (BOOL)_useTextChecking;
- (void)_clearSpellingForRange:(struct _NSRange)arg1;
- (void)_verifyQuotesAndParenthesesForRange:(struct _NSRange)arg1;
- (void)_checkSpellingForRange:(struct _NSRange)arg1 excludingRange:(struct _NSRange)arg2;
- (void)_unmarkTextEditedForRange:(struct _NSRange)arg1;
- (void)_markTextEditedForRange:(struct _NSRange)arg1;
- (void)_markForTextCheckingAfterChange;
- (void)_markAllForTextChecking;
- (void)_performScheduledTextChecking;
- (void)_scheduleTextCheckingForRange:(struct _NSRange)arg1;
- (void)_considerTextCheckingForRange:(struct _NSRange)arg1;
- (void)_checkLinksForRange:(struct _NSRange)arg1 excludingRange:(struct _NSRange)arg2;
- (void)_checkLinksAfterChange;
- (id)_quotesForRange:(struct _NSRange)arg1 useGermanApostrophes:(char *)arg2 useDutchApostrophes:(char *)arg3;
- (void)substituteQuotesForRange:(struct _NSRange)arg1;
- (void)checkTextInRange:(struct _NSRange)arg1 types:(unsigned long long)arg2 options:(id)arg3;
- (void)checkTextInDocumentUsingTypes:(unsigned long long)arg1 options:(id)arg2 restrictToSelection:(BOOL)arg3;
- (void)replaceQuotesInSelection:(id)arg1;
- (void)replaceDashesInSelection:(id)arg1;
- (void)addLinksInSelection:(id)arg1;
- (void)replaceTextInSelection:(id)arg1;
- (void)checkTextInSelection:(id)arg1;
- (void)checkTextInDocument:(id)arg1;
- (void)_handleTextCheckingResults:(id)arg1 sequenceNumber:(long long)arg2 forRange:(struct _NSRange)arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long)arg7 applyNow:(BOOL)arg8;
- (void)handleTextCheckingResults:(id)arg1 forRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 orthography:(id)arg5 wordCount:(long long)arg6;
- (id)inputContext;
- (id)_writingDirectionAttributeForInsertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (id)_writingDirectionAttributeForPeriodBeforeInsertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)insertText:(id)arg1;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (void)setAlignment:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)setBaseWritingDirection:(long long)arg1 range:(struct _NSRange)arg2;
- (void)transliterateToLatin:(id)arg1;
- (void)removeAccents:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)turnOffKerning:(id)arg1;
- (void)tightenKerning:(id)arg1;
- (void)loosenKerning:(id)arg1;
- (void)useStandardKerning:(id)arg1;
- (void)turnOffLigatures:(id)arg1;
- (void)useStandardLigatures:(id)arg1;
- (void)useAllLigatures:(id)arg1;
- (void)raiseBaseline:(id)arg1;
- (void)lowerBaseline:(id)arg1;
- (void)toggleTraditionalCharacterShape:(id)arg1;
- (void)rulerView:(id)arg1 didMoveMarker:(id)arg2;
- (void)rulerView:(id)arg1 didRemoveMarker:(id)arg2;
- (void)rulerView:(id)arg1 didAddMarker:(id)arg2;
- (BOOL)rulerView:(id)arg1 shouldMoveMarker:(id)arg2;
- (BOOL)rulerView:(id)arg1 shouldRemoveMarker:(id)arg2;
- (BOOL)rulerView:(id)arg1 shouldAddMarker:(id)arg2;
- (double)rulerView:(id)arg1 willMoveMarker:(id)arg2 toLocation:(double)arg3;
- (double)rulerView:(id)arg1 willAddMarker:(id)arg2 atLocation:(double)arg3;
- (void)rulerView:(id)arg1 handleMouseDown:(id)arg2;
- (void)rulerView:(id)arg1 willSetClientView:(id)arg2;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(BOOL)arg2;
- (BOOL)shouldDrawInsertionPoint;
- (void)_drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2;
- (void)drawInsertionPointInRect:(struct CGRect)arg1 color:(id)arg2 turnedOn:(BOOL)arg3;
- (void)updateRuler;
- (void)updateFontPanel;
- (void)updateSpellingPanel;
- (void)updateDragTypeRegistration;
- (void)_requestUpdateOfDragTypeRegistration;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)arg1 granularity:(unsigned long long)arg2;
- (id)string;
- (void)setString:(id)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)RTFFromRange:(struct _NSRange)arg1;
- (id)RTFDFromRange:(struct _NSRange)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withRTF:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withRTFD:(id)arg2;
- (BOOL)writeRTFDToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)readRTFDFromFile:(id)arg1;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setTextColor:(id)arg1;
- (id)textColor;
- (void)setAlignment:(unsigned long long)arg1;
- (unsigned long long)alignment;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setTextColor:(id)arg1 range:(struct _NSRange)arg2;
- (void)setFont:(id)arg1 range:(struct _NSRange)arg2;
- (struct CGSize)maxSize;
- (void)setMaxSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (BOOL)isHorizontallyResizable;
- (void)setHorizontallyResizable:(BOOL)arg1;
- (BOOL)isVerticallyResizable;
- (void)setVerticallyResizable:(BOOL)arg1;
- (void)sizeToFit;
- (void)delete:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)outline:(id)arg1;
- (void)unscript:(id)arg1;
- (struct _NSRange)_modifiedGrammarRangeForRange:(struct _NSRange)arg1 details:(id)arg2;
- (struct _NSRange)_checkGrammarStartingAt:(unsigned long long)arg1 detailRange:(struct _NSRange *)arg2 detail:(id *)arg3;
- (void)_checkSpelling:(BOOL)arg1;
- (void)checkSpelling:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)_changeSpellingToWord:(id)arg1;
- (void)_changeSpellingFromMenu:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)_ignoreSpellingFromMenu:(id)arg1;
- (void)_ignoreGrammarFromMenu:(id)arg1;
- (void)_learnSpellingFromMenu:(id)arg1;
- (void)_unlearnSpellingFromMenu:(id)arg1;
- (void)_forgetSpellingFromMenu:(id)arg1;
- (void)_turnOnSpellingCorrectionFromMenu:(id)arg1;
- (void)_replaceTextFromMenu:(id)arg1;
- (void)_turnOnTextReplacementFromMenu:(id)arg1;
- (void)spellCheckerDidLearnWord:(id)arg1;
- (void)spellCheckerDidUnlearnWord:(id)arg1;
- (void)spellCheckerDidChangeLanguage:(id)arg1;
- (void)_openLinkFromMenu:(id)arg1;
- (void)_removeLinkFromMenu:(id)arg1;
- (void)_makeLinkFromMenu:(id)arg1;
- (void)_restoreReplacedString:(id)arg1;
- (void)_searchWithGoogleFromMenu:(id)arg1;
- (void)showDefinitionForAttributedString:(id)arg1 range:(struct _NSRange)arg2 options:(id)arg3 baselineOriginProvider:(id)arg4;
- (void)_lookUpDefiniteRangeInDictionaryFromMenu:(id)arg1;
- (void)_lookUpIndefiniteRangeInDictionaryFromMenu:(id)arg1;
- (void)toggleRuler:(id)arg1;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (BOOL)isFlipped;
- (void)_propagateDownNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)_createTrackingArea;
- (void)resetCursorRects;
- (void)updateTrackingAreas;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_autoInvalidateBeforeFrameSizeChange;
- (void)_autoInvalidateAfterFrameSizeChange;
- (id)_invalidateGStatesForTree;
- (void)_checkRotatedOrScaledFromBase;
- (id)_setRotatedFromBase:(BOOL)arg1;
- (id)_setRotatedOrScaledFromBase:(BOOL)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)scaleUnitSquareToSize:(struct CGSize)arg1;
- (struct _NSRange)_extendedGlyphRangeForRange:(struct _NSRange)arg1 maxGlyphIndex:(unsigned long long)arg2 drawingToScreen:(BOOL)arg3;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (void)_showAllInsertionPointsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)_showParagraphDirectionalityForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_attachmentAtGlyphIndex:(unsigned long long)arg1 containsWindowPoint:(struct CGPoint)arg2;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)keyUp:(id)arg1;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)clickedOnLink:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)mouseDownCanMoveWindow;
- (void)_showDataDetectionIndicatorForRange:(struct _NSRange)arg1 dataResult:(id)arg2 windowPoint:(struct CGPoint)arg3;
- (void)_showToolTip:(id)arg1;
- (void)_toolTipTimer;
- (struct CGRect)_contentRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange)arg2;
- (id)_cellForPoint:(struct CGPoint)arg1 characterIndex:(unsigned long long)arg2 level:(unsigned long long *)arg3 row:(long long *)arg4 column:(long long *)arg5 range:(struct _NSRange *)arg6;
- (void)_mouseInside:(id)arg1;
- (void)_mouseExitedDataDetectionIndicator;
- (void)_conditionallyRemoveDataDetectionIndicator:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseCancelled:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)_resizeTable:(id)arg1 level:(unsigned long long)arg2 range:(struct _NSRange)arg3 column:(long long)arg4 widthDelta:(double)arg5;
- (void)_resizeTable:(id)arg1 level:(unsigned long long)arg2 range:(struct _NSRange)arg3 row:(long long)arg4 heightDelta:(double)arg5;
- (id)_rectangularCharacterRangesForGlyphRange:(struct _NSRange)arg1 from:(double)arg2 to:(double)arg3 granularity:(unsigned long long)arg4;
- (double)_distForGlyphLocation:(unsigned long long)arg1;
- (id)_selectedRangesByTogglingRanges:(id)arg1 withRanges:(id)arg2 initialCharacterIndex:(unsigned long long)arg3 granularity:(unsigned long long)arg4;
- (BOOL)_shouldHavePeriodicEventsForPoint:(struct CGPoint)arg1;
- (struct _NSRange)_characterRangeBetweenIndexes:(struct _NSRange)arg1;
- (void)mouseDown:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (BOOL)hasMarkedText;
- (void)lockDocument;
- (void)unlockDocument;
- (void)getMarkedText:(id *)arg1 selectedRange:(struct _NSRange *)arg2;
- (void)unmarkText;
- (long long)conversationIdentifier;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributedString;
- (long long)windowLevel;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (id)validAttributesForMarkedText;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (id)description;
- (struct _NSRange)_characterRangeByTrimmingWhitespaceFromRange:(struct _NSRange)arg1;
- (id)menuForEvent:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (id)_getUndoManager:(BOOL)arg1;
- (id)undoManager;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (unsigned long long)characterIndexForInsertionAtPoint:(struct CGPoint)arg1;
- (void)orderFrontLinkPanel:(id)arg1;
- (void)orderFrontSpacingPanel:(id)arg1;
- (void)orderFrontListPanel:(id)arg1;
- (void)orderFrontTablePanel:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)_changeToBidiControlCharacters:(id)arg1;
- (void)_changeToWritingDirectionAttribute:(id)arg1;

@end

@interface NSTextViewSharedData : NSObject <NSCoding>
{
    struct __sdFlags {
        unsigned int selectable:1;
        unsigned int editable:1;
        unsigned int richText:1;
        unsigned int importsGraphics:1;
        unsigned int fieldEditor:1;
        unsigned int usesFontPanel:1;
        unsigned int rulerVisible:1;
        unsigned int usesRuler:1;
        unsigned int postingTextDidEnd:1;
        unsigned int beganEditing:1;
        unsigned int continuousSpellCheckingEnabled:1;
        unsigned int drawsBackground:1;
        unsigned int hasSpellCheckerDocumentTag:1;
        unsigned int selectionAffinity:2;
        unsigned int selectionGranularity:2;
        unsigned int blinkCaretDrawn:1;
        unsigned int resigningFirstResponder:1;
        unsigned int becomingFirstResponder:1;
        unsigned int selectionExtensionAnchor:2;
        unsigned int rulerUpdateDisabled:1;
        unsigned int delegateHandlesKeyBindings:1;
        unsigned int insertionPointDisabled:1;
        unsigned int smartnessEnabled:1;
        unsigned int rulerDisabled:1;
        unsigned int continueKillRing:1;
        unsigned int trackingAttachmentCell:1;
        unsigned int bufferingAltKeypadDigits:1;
        unsigned int allowsUndo:1;
        unsigned int delegateProvidesUndoManager:1;
    } _sdFlags;
    struct _NSRange _selectedCharRange;
    struct _NSRange _dragAndDropCharRange;
    double _distanceForVerticalArrowKeyMovement;
    struct _NSRange _markedCharRange;
    NSDictionary *_markedAttributesDict;
    struct __CFRunLoopTimer *_blinkTimer;
    NSTextContainer *_blinkContainer;
    struct CGRect _blinkRect;
    id _delegate;
    NSTextView *_notifyingTextView;
    NSColor *_backgroundColor;
    NSDictionary *_selectedAttributesDict;
    NSColor *_insertionPointColor;
    long long _spellCheckerDocumentTag;
    NSDictionary *_typingAttributesDict;
    NSTextView *_rulerClient;
    NSRulerView *_ruler;
    NSParagraphStyle *_rulerStyle;
    unsigned long long _clickedCharIndex;
    id _undoTextObject;
    NSAttributedString *_attributedStringForMarkedRange;
    NSArray *_validMarkedAttributesDict;
    struct _NSRange _excludedSpellingCharRange;
    struct _NSRange _emacsMarkCharRange;
    struct __sdFlags2 {
        unsigned int _acceptsGlyphInfo:1;
        unsigned int _wantsNotificationForMarkedText:1;
        unsigned int _usesFindPanel:1;
        unsigned int _allowsDocumentBackgroundColorChange:1;
        unsigned int _delegateControlsInsertionPointDrawing:1;
        unsigned int _delegateHandlesEvents:1;
        unsigned int _delegateHearsAboutEvents:1;
        unsigned int _undoRedoInProgress:1;
        unsigned int _colorToChange:3;
        unsigned int _grammarCheckingEnabled:1;
        unsigned int _wasInUpDownMovement:1;
        unsigned int _inUpDownMovement:1;
        unsigned int _splitInsertionPoint:1;
        unsigned int _undoManagerUsed:1;
        unsigned int _insertingText:1;
        unsigned int _markingText:1;
        unsigned int _allowsImageEditing:1;
        unsigned int _quoteSubstitutionEnabled:1;
        unsigned int _linkDetectionEnabled:1;
        unsigned int _delegateHandlesSpellingState:1;
        unsigned int _displaysLinkToolTips:1;
        unsigned int _settingColorPanel:1;
        unsigned int _drawingFindIndicator:1;
        unsigned int _ignoringQuoteSubstitution:1;
        unsigned int _needsNewTypingAttributes:1;
        unsigned int _selectionIsRectangular:1;
        unsigned int _hasBeenScrolled:1;
        unsigned int _scrollingToEnd:1;
        unsigned int _pad:2;
    } _sdFlags2;
    unsigned long long _pastedGraphicCount;
    NSDictionary *_linkAttributesDict;
    NSParagraphStyle *_defaultParagraphStyle;
    struct __CFRunLoopTimer *_toolTipTimer;
    struct CGPoint _toolTipPoint;
    NSWindow *_toolTipWindow;
    NSTextView *_toolTipTrackingRectClient;
    long long _toolTipTrackingRectTag;
    NSTextInputContext *_inputContext;
    NSSelectionArray *_selectedRanges;
    NSSelectionArray *_savedSelectedRanges;
    NSSelectionArray *_dragAndDropCharRanges;
    struct CGRect _alternateBlinkRect;
    NSDictionary *_markedTypingAttributesDict;
    NSUndoManager *_fieldEditorUndoManager;
    struct _NSRange _excludedLinkCharRange;
    NSArray *_allowedInputLocales;
    NSArray *_smartLinkLocations;
    NSArray *_textCheckingChangeLocations;
    NSArray *_textCheckingScheduledRanges;
    struct _NSRange _liveResizeCheckingRange;
    struct __sdFlags3 {
        unsigned int _languageIdentificationEnabled:1;
        unsigned int _dateDetectionEnabled:1;
        unsigned int _addressDetectionEnabled:1;
        unsigned int _dashSubstitutionEnabled:1;
        unsigned int _textReplacementEnabled:1;
        unsigned int _spellingCorrectionEnabled:1;
        unsigned int _reservedTextCheckingType1:1;
        unsigned int _reservedTextCheckingType2:1;
        unsigned int _delegateHandlesWillCheckText:1;
        unsigned int _delegateHandlesDidCheckText:1;
        unsigned int _scheduleTextCheckingQuickly:1;
        unsigned int _registeredForSpellCheckerNotifications:1;
        unsigned int _centersOnScroll:1;
        unsigned int _inLineByLineScrolling:1;
        unsigned int _scrollRangeDisabled:1;
        unsigned int _pad:17;
    } _sdFlags3;
    unsigned long long _otherEnabledTextCheckingTypes;
    long long _previousCheckingSequenceNumber;
    long long _prechangeCheckingSequenceNumber;
    struct CGPoint _dataDetectionPoint;
    struct _NSRange _dataDetectionRange;
    NSWindow *_dataDetectionWindow;
    void *_dataDetectionHighlight;
}

+ (void)initialize;
- (void)_commonInit;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setSelectedTextAttributes:(id)arg1;
- (void)setLinkTextAttributes:(id)arg1;
- (void)setInsertionPointColor:(id)arg1;
- (void)setMarkedTextAttributes:(id)arg1;
- (id)typingAttributes;
- (void)setTypingAttributes:(id)arg1;
- (void)setDefaultParagraphStyle:(id)arg1;
- (void)setSelectedRanges:(id)arg1;
- (void)setDragAndDropCharRanges:(id)arg1;
- (void)setDelegate:(id)arg1 withNotifyingTextView:(id)arg2;
- (BOOL)isCoalescing;
- (void)stopCoalescing;
- (void)coalesceInTextView:(id)arg1 affectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)changeWillBeUndone:(id)arg1;
- (void)clearMarkedRange;
- (BOOL)acceptsGlyphInfo;
- (void)setAcceptsGlyphInfo:(BOOL)arg1;
- (id)validAttributesForMarkedText;
- (void)setWantsNotificationForMarkedText:(BOOL)arg1;
- (BOOL)wantsNotificationForMarkedText;
- (id)inputContextForFirstTextView:(id)arg1;

@end

@interface NSTextViewTemplate : NSViewTemplate
{
    id _contents;
    NSColor *_backgroundColor;
    NSDictionary *_selectedTextAttributes;
    NSColor *_insertionPointColor;
    struct CGSize _containerSize;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    id _delegate;
    struct __tvtFlags {
        unsigned int drawsBackground:1;
        unsigned int selectable:1;
        unsigned int editable:1;
        unsigned int richText:1;
        unsigned int importsGraphics:1;
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
        unsigned int fieldEditor:1;
        unsigned int usesFontPanel:1;
        unsigned int rulerVisible:1;
        unsigned int containerTracksWidth:1;
        unsigned int containerTracksHeight:1;
        unsigned int usesRuler:1;
        unsigned int allowsUndo:1;
        unsigned int _pad:18;
    } _tvtFlags;
    NSDictionary *_typingAttrs;
}

+ (void)initialize;
- (id)initWithView:(id)arg1 className:(id)arg2;
- (void)dealloc;
- (id)createRealObject;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSTextViewCompletionWindow : NSWindow
{
}

- (BOOL)wantsScrollWheelEvent:(id)arg1;
- (BOOL)canBecomeVisibleWithoutLogin;
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsChildOfApp;
- (id)accessibilityParentAttribute;

@end

@interface NSTextViewCompletionController : NSObject <NSTableViewDelegate, NSTableViewDataSource>
{
    NSWindow *_completionWindow;
    NSTableView *_tableView;
    NSWindow *_textViewWindow;
    NSTextView *_textView;
    struct _NSRange _charRange;
    NSString *_originalString;
    long long _movement;
    NSArray *_completions;
    long long _textViewWindowNumber;
}

+ (id)sharedController;
- (void)_setupWindow;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_reflectSelection:(BOOL)arg1;
- (void)displayCompletions:(id)arg1 forPartialWordRange:(struct _NSRange)arg2 originalString:(id)arg3 atPoint:(struct CGPoint)arg4 forTextView:(id)arg5;
- (void)_reloadWithCompletions:(id)arg1;
- (void)displayCompletions:(id)arg1 indexOfSelectedItem:(long long)arg2 forPartialWordRange:(struct _NSRange)arg3 originalString:(id)arg4 atPoint:(struct CGPoint)arg5 forTextView:(id)arg6;
- (id)currentTextView;
- (id)completionWindow;
- (void)endDisplayAndComplete:(BOOL)arg1;
- (void)endDisplayNoComplete;
- (void)endDisplay;
- (void)tableAction:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;

@end

@interface NSTextViewCompletionTableView : NSTableView
{
}

- (BOOL)_accessibilityWantsToBeList;

@end

@interface NSDataDetectionIndicatorView : NSView
{
    NSTrackingArea *_trackingArea;
    id _dataResult;
    NSString *_string;
    id _delegate;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setDataResult:(id)arg1;
- (void)setString:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)_showMenu:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;

@end

@interface NSSelectionArray : NSArray
{
    unsigned long long _count;
    struct _NSRange _firstRange;
    struct _NSRange *_ranges;
}

+ (id)arrayWithRanges:(const struct _NSRange *)arg1 count:(unsigned long long)arg2;
+ (id)arrayWithRange:(struct _NSRange)arg1;
+ (id)arrayWithIndexes:(id)arg1;
+ (id)arrayWithArray:(id)arg1;
+ (id)arrayWithObjects:(id *)arg1 count:(unsigned long long)arg2;
- (void)dealloc;
- (void)finalize;
- (id)initWithRanges:(const struct _NSRange *)arg1 count:(unsigned long long)arg2;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)initWithIndexes:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithObjects:(id *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqualToArray:(id)arg1;
- (struct _NSRange)firstRange;
- (struct _NSRange)lastRange;
- (struct _NSRange)maximumRange;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfFirstRangeContainingOrFollowing:(unsigned long long)arg1;

@end

@interface NSTextViewFindIndicator : NSObject
{
    struct _NSRange _charRange;
    NSTimer *_timer;
    double _startTime;
    NSArray *_windows;
    struct CGAffineTransform *_prePulseTransforms;
}

@end

@interface NSTextViewIvars : NSObject
{
    struct CGSize textContainerInset;
    struct CGPoint textContainerOrigin;
    NSLayoutManager *layoutManager;
    NSTextStorage *textStorage;
    struct CGSize maxBoundsSize;
    struct CGSize minBoundsSize;
    struct _tvFlags {
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
        unsigned int viewOwnsTextStorage:1;
        unsigned int displayWithoutLayout:1;
        unsigned int settingMarkedRange:1;
        unsigned int containerOriginInvalid:1;
        unsigned int registeredForDragging:1;
        unsigned int superviewIsClipView:1;
        unsigned int forceRulerUpdate:1;
        unsigned int typingText:1;
        unsigned int wasPostingFrameNotifications:1;
        unsigned int wasRotatedOrScaledFromBase:1;
        unsigned int settingNeedsDisplay:1;
        unsigned int mouseInside:1;
        unsigned int _pad:18;
    } tvFlags;
    NSTextViewSharedData *sharedData;
    NSMutableArray *eventList;
    struct _NSTextDragInfo *dragInfo;
    struct CGRect dirtyRectForDisplayWithoutLayout;
    struct CGRect _insertionPointRect;
    NSViewWindowBackingStoreBuffer *_insertionPointRectCache;
    NSTrackingArea *_trackingArea;
    NSEvent *_lastFirstMouseEvent;
    NSTextContainer *textContainer;
    NSTextViewFindIndicator *_findIndicator;
}

@end

@interface NSThemeFrame : NSTitledFrame
{
    NSButton *toolbarButton;
    int toolbarVisibleStatus;
    struct CGLayer *showToolbarTransitionLayer;
    struct CGSize showToolbarPreWindowSize;
    NSButton *modeButton;
    long long leftGroupTrackingTagNum;
    long long rightGroupTrackingTagNum;
    struct {
        unsigned int mouseInsideLeftGroup:1;
        unsigned int mouseInsideRightGroup:1;
        unsigned int bottomCornerRounded:2;
        unsigned int movableByBottomBar:1;
        unsigned int reserved:27;
    } _tFlags;
    int widgetState;
    NSString *displayName;
    NSButton *lockButton;
    double topBorderThickness;
    double bottomBorderThickness;
}

+ (void)initialize;
+ (id)_bevelForEdge:(unsigned long long)arg1 isHUD:(BOOL)arg2 isDarkWindow:(BOOL)arg3;
+ (void)drawBevel:(struct CGRect)arg1 inFrame:(struct CGRect)arg2 topCornerRounded:(BOOL)arg3 bottomCornerRounded:(BOOL)arg4 isHUD:(BOOL)arg5 isDarkWindow:(BOOL)arg6;
+ (void)drawBevel:(struct CGRect)arg1 inFrame:(struct CGRect)arg2 topCornerRounded:(BOOL)arg3 bottomCornerRounded:(BOOL)arg4;
+ (double)_windowBorderThickness:(unsigned long long)arg1;
+ (double)_minXWindowBorderWidth:(unsigned long long)arg1;
+ (double)_maxXWindowBorderWidth:(unsigned long long)arg1;
+ (double)_minYWindowBorderHeight:(unsigned long long)arg1;
+ (double)_windowTitlebarButtonSpacingWidth:(unsigned long long)arg1;
+ (double)_windowFileButtonSpacingWidth:(unsigned long long)arg1;
+ (double)_minXTitlebarWidgetInset:(unsigned long long)arg1;
+ (double)_maxXTitlebarWidgetInset:(unsigned long long)arg1;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (double)_windowSideTitlebarTitleMinWidth:(unsigned long long)arg1;
+ (double)_windowTitlebarTitleMinHeight:(unsigned long long)arg1;
+ (double)_sideTitlebarWidth:(unsigned long long)arg1;
+ (double)_titlebarHeight:(unsigned long long)arg1;
+ (double)_resizeHeight:(unsigned long long)arg1;
+ (BOOL)_resizeFromEdge;
+ (struct CGSize)sizeOfTitlebarButtons:(unsigned long long)arg1;
+ (double)_contentToFrameMinXWidth:(unsigned long long)arg1;
+ (double)_contentToFrameMaxXWidth:(unsigned long long)arg1;
+ (double)_contentToFrameMinYHeight:(unsigned long long)arg1;
+ (double)_contentToFrameMaxYHeight:(unsigned long long)arg1;
+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
- (BOOL)_isDarkWindow;
- (BOOL)_movableByBottomBar;
- (void)_setMovableByBottomBar:(BOOL)arg1;
- (BOOL)_effectiveMovableByBottomBar;
- (float)roundedCornerRadius;
- (void)setBottomCornerRounded:(BOOL)arg1;
- (BOOL)bottomCornerRounded;
- (struct CGSize)_topCornerSize;
- (struct CGSize)_bottomCornerSize;
- (void *)_createWindowOpaqueShape;
- (void)shapeWindow;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (struct CGRect)overlayBounds;
- (void)drawOverlayRect:(struct CGRect)arg1;
- (void *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (void)_drawFrameInterior:(struct CGRect *)arg1 clip:(struct CGRect)arg2;
- (void)_setTextShadow:(BOOL)arg1;
- (BOOL)_isOnePieceTitleAndToolbar;
- (struct CGRect)_separatorRectForInactiveWindow;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_drawUnifiedToolbarBackgroundInRect:(struct CGRect)arg1 withState:(long long)arg2;
- (void)_drawUnifiedToolbar:(int)arg1;
- (void)_drawTitleBar:(struct CGRect)arg1;
- (void)_drawResizeIndicators:(struct CGRect)arg1;
- (void)_drawFrameRects:(struct CGRect)arg1;
- (void)drawFrame:(struct CGRect)arg1;
- (BOOL)_isHUDWindow;
- (id)contentFill;
- (void)viewDidEndLiveResize;
- (double)contentAlpha;
- (void)setThemeFrameWidgetState:(int)arg1;
- (BOOL)constrainResizeEdge:(unsigned long long *)arg1 withDelta:(struct CGSize)arg2 elapsedTime:(double)arg3;
- (void)addFileButton:(id)arg1;
- (void)_updateButtons;
- (void)_updateButtonState;
- (id)newCloseButton;
- (id)newZoomButton;
- (id)newMiniaturizeButton;
- (id)newToolbarButton;
- (id)newLockButton;
- (id)newFileButton;
- (void)_resetTitleBarButtons;
- (void)setDocumentEdited:(BOOL)arg1;
- (id)toolbarButton;
- (id)lockButton;
- (id)modeButton;
- (id)initWithFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 owner:(id)arg3;
- (void)setStyleMask:(unsigned long long)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (id)_toolbarView;
- (id)_toolbar;
- (double)_distanceFromToolbarBaseToTitlebar;
- (unsigned long long)_shadowFlags;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRect;
- (struct CGRect)_contentRectExcludingToolbar;
- (struct CGRect)_contentRectIncludingToolbarAtHome;
- (void)_setToolbarShowHideResizeWeightingOptimizationOn:(BOOL)arg1;
- (BOOL)_usingToolbarShowHideWeightingOptimization;
- (void)handleSetFrameCommonRedisplay;
- (void)_startLiveResizeAsTopLevel;
- (void)_endLiveResizeAsTopLevel;
- (void)_growContentReshapeContentAndToolbarView:(int)arg1 animate:(BOOL)arg2;
- (BOOL)_growWindowReshapeContentAndToolbarView:(int)arg1 animate:(BOOL)arg2;
- (void)_reshapeContentAndToolbarView:(int)arg1 resizeWindow:(BOOL)arg2 animate:(BOOL)arg3;
- (void)_toolbarFrameSizeChanged:(id)arg1 oldSize:(struct CGSize)arg2;
- (void)_syncToolbarPosition;
- (void)_showHideToolbar:(int)arg1 resizeWindow:(BOOL)arg2 animate:(BOOL)arg3;
- (void)_showToolbarWithAnimation:(BOOL)arg1;
- (void)_hideToolbarWithAnimation:(BOOL)arg1;
- (void)_drawToolbarTransitionIfNecessary;
- (void)_computeHeightOfTop:(BOOL)arg1 bottom:(BOOL)arg2;
- (void)setContentBorderThickness:(double)arg1 forEdge:(unsigned long long)arg2;
- (double)contentBorderThicknessForEdge:(unsigned long long)arg1;
- (double)_topBarHeight;
- (double)_bottomBarHeight;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawWindowBackgroundRect:(struct CGRect)arg1;
- (void)drawWindowBackgroundRegion:(void *)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)_shouldBeTreatedAsInkEventInInactiveWindow:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)cursorUpdate:(id)arg1;
- (struct CGRect)_leftGroupRect;
- (struct CGRect)_rightGroupRect;
- (void)_updateWidgets;
- (void)_updateMouseTracking;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)_setMouseEnteredGroup:(BOOL)arg1 entered:(BOOL)arg2;
- (BOOL)_mouseInGroup:(id)arg1;
- (struct CGSize)miniaturizedSize;
- (double)_minXTitlebarDecorationMinWidth;
- (double)_maxXTitlebarDecorationMinWidth;
- (struct CGSize)minFrameSize;
- (double)_windowBorderThickness;
- (double)_windowTitlebarXResizeBorderThickness;
- (double)_windowTitlebarYResizeBorderThickness;
- (double)_windowResizeBorderThickness;
- (double)_minXWindowBorderWidth;
- (double)_maxXWindowBorderWidth;
- (double)_minYWindowBorderHeight;
- (double)_maxYWindowBorderHeight;
- (double)_minYTitlebarButtonsOffset;
- (double)_minYTitlebarTitleOffset;
- (double)_sideTitlebarWidth;
- (double)_titlebarHeight;
- (struct CGRect)_defaultTitlebarTitleRect;
- (struct CGRect)_titlebarTitleRect;
- (struct CGRect)titlebarRect;
- (double)_windowTitlebarTitleMinHeight;
- (struct CGSize)_sizeOfTitlebarFileButton;
- (struct CGSize)sizeOfTitlebarToolbarButton;
- (double)_windowTitlebarButtonSpacingWidth;
- (double)_windowFileButtonSpacingWidth;
- (double)_minXTitlebarWidgetInset;
- (double)_maxXTitlebarWidgetInset;
- (double)_minXTitlebarButtonsWidth;
- (double)_maxXTitlebarButtonsWidth;
- (struct CGPoint)_closeButtonOrigin;
- (struct CGPoint)_zoomButtonOrigin;
- (struct CGPoint)_collapseButtonOrigin;
- (struct CGPoint)_toolbarButtonOrigin;
- (struct CGPoint)_lockButtonOrigin;
- (struct CGPoint)_fileButtonOrigin;
- (void)_tileTitlebarAndRedisplay:(BOOL)arg1;
- (struct CGRect)_commandPopupRect;
- (struct CGRect)_draggableFrame;
- (void)_resetDragMargins;
- (double)_maxYTitlebarDragHeight;
- (double)_minXTitlebarDragWidth;
- (double)_maxXTitlebarDragWidth;
- (double)_contentToFrameMinXWidth;
- (double)_contentToFrameMaxXWidth;
- (double)_contentToFrameMinYHeight;
- (double)_contentToFrameMaxYHeight;
- (double)_windowResizeCornerThickness;
- (struct CGRect)_minYResizeRect;
- (struct CGRect)_minYminXResizeRect;
- (struct CGRect)_minYmaxXResizeRect;
- (struct CGRect)_minXResizeRect;
- (struct CGRect)_minXminYResizeRect;
- (struct CGRect)_minXmaxYResizeRect;
- (struct CGRect)_maxYResizeRect;
- (struct CGRect)_maxYminXResizeRect;
- (struct CGRect)_maxYmaxXResizeRect;
- (struct CGRect)_maxXResizeRect;
- (struct CGRect)_maxXminYResizeRect;
- (struct CGRect)_maxXmaxYResizeRect;
- (struct CGRect)_minXTitlebarResizeRect;
- (struct CGRect)_maxXTitlebarResizeRect;
- (struct CGRect)_minXBorderRect;
- (struct CGRect)_maxXBorderRect;
- (struct CGRect)_maxYBorderRect;
- (struct CGRect)_minYBorderRect;
- (void)_invalidateTitleCellSize;
- (void)_resetTitleFont;
- (BOOL)_isUtility;
- (double)_sheetHeightAdjustment;
- (void)_setSheet:(BOOL)arg1;
- (BOOL)_isSheet;
- (BOOL)_isResizable;
- (BOOL)_isClosable;
- (BOOL)_isMiniaturizable;
- (BOOL)_hasToolbar;
- (struct CGRect)_growBoxRect;
- (BOOL)_canDrawWindowGrowBox;
- (void)_drawGrowBoxWithClip:(struct CGRect)arg1 inRect:(struct CGRect)arg2 opaque:(BOOL)arg3;
- (void)_drawGrowBoxWithClip:(struct CGRect)arg1;
- (BOOL)_inactiveButtonsNeedMask;
- (BOOL)_mouseInPopupRect:(id)arg1;
- (BOOL)_mouseInTitleRect:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (id)menu;
- (id)menuForEvent:(id)arg1;
- (id)_displayName;
- (void)_setDisplayName:(id)arg1;
- (BOOL)_shouldRepresentFilename;
- (BOOL)_shouldShowDocumentIcon;
- (void)setRepresentedURL:(id)arg1;
- (void)setRepresentedFilename:(id)arg1;

@end

@interface NSThemeDocumentButton : NSDocumentDragButton
{
    BOOL _documentEdited;
}

+ (void)initialize;
- (void)setDocumentEdited:(BOOL)arg1;
- (BOOL)documentEdited;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)_setRepresentedURL:(id)arg1;
- (void)setRepresentedFilename:(id)arg1;
- (void)setRepresentedURL:(id)arg1;
- (id)representedURL;

@end

@interface NSThemeDocumentButtonCell : NSButtonCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface _NSThemeCloseWidget : _NSThemeWidget
{
}

+ (void)initialize;
+ (id)closeWidgetInView:(id)arg1 withButtonID:(long long)arg2 action:(SEL)arg3;
- (void)setDocumentEdited:(BOOL)arg1;

@end

@interface _NSThemeCloseWidgetCell : _NSThemeWidgetCell
{
    BOOL _edited;
}

- (int)getState:(id)arg1;
- (BOOL)isEdited;
- (BOOL)setEditedFlag:(BOOL)arg1;

@end

@interface _NSThemeWidget : NSButton
{
    long long _trackingTagNum;
}

+ (void)initialize;
+ (id)widgetInView:(id)arg1 withButtonID:(long long)arg2 action:(SEL)arg3;
- (id)initWithButtonID:(long long)arg1;
- (void)dealloc;
- (void)mouseDown:(id)arg1;
- (void)update;

@end

@interface _NSThemeWidgetCell : NSButtonCell
{
    int _buttonID;
    BOOL _hasRollover;
    BOOL _isObscured;
    BOOL _temporarilyDisabled;
    struct __CFDictionary *_coreUIDrawOptions;
}

- (void)_NSThemeWidgetCell_commonInit;
- (id)initTextCell:(id)arg1;
- (id)initImageCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)setCoreUIWidgetType:(struct __CFString *)arg1;
- (void)setCoreUIWindowType:(struct __CFString *)arg1;
- (void)setTemporarilyDisabled:(BOOL)arg1;
- (BOOL)temporarilyDisabled;
- (BOOL)isEdited;
- (BOOL)isEnabled;
- (struct __CFString *)coreUIState;
- (void)coreUIDrawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setButtonID:(long long)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (int)getState:(id)arg1;
- (void)setObscured:(BOOL)arg1;
- (BOOL)isObscured;
- (void)update;

@end

@interface NSTitledFrame : NSFrameView
{
    long long resizeFlags;
    NSDocumentDragButton *fileButton;
    struct CGSize titleCellSize;
}

+ (void)initialize;
+ (double)_windowBorderThickness:(unsigned long long)arg1;
+ (double)_minXWindowBorderWidth:(unsigned long long)arg1;
+ (double)_maxXWindowBorderWidth:(unsigned long long)arg1;
+ (double)_minYWindowBorderHeight:(unsigned long long)arg1;
+ (BOOL)_resizeFromEdge;
+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minContentSizeForMinFrameSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)_titleCellSizeForTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (double)_titleCellHeight:(unsigned long long)arg1;
+ (double)_windowTitlebarTitleMinHeight:(unsigned long long)arg1;
+ (double)_titlebarHeight:(unsigned long long)arg1;
+ (struct CGSize)sizeOfTitlebarButtons:(unsigned long long)arg1;
+ (double)windowTitlebarLinesSpacingWidth:(unsigned long long)arg1;
+ (double)windowTitlebarTitleLinesSpacingWidth:(unsigned long long)arg1;
+ (double)_contentToFrameMinXWidth:(unsigned long long)arg1;
+ (double)_contentToFrameMaxXWidth:(unsigned long long)arg1;
+ (double)_contentToFrameMinYHeight:(unsigned long long)arg1;
+ (double)_contentToFrameMaxYHeight:(unsigned long long)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (BOOL)worksWhenModal;
- (void)propagateFrameDirtyRects:(struct CGRect)arg1;
- (void)_showDrawRect:(struct CGRect)arg1;
- (id)frameHighlightColor;
- (id)frameShadowColor;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)tileAndSetWindowShape:(BOOL)arg1;
- (void)tile;
- (void)setTitle:(id)arg1;
- (void)_drawTitleStringIn:(struct CGRect)arg1 withColor:(id)arg2;
- (id)titleFont;
- (id)titleButtonOfClass:(Class)arg1;
- (id)initTitleButton:(id)arg1;
- (id)newCloseButton;
- (id)newZoomButton;
- (id)newMiniaturizeButton;
- (id)newFileButton;
- (id)fileButton;
- (BOOL)_eventInTitlebar:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)_minimizeWindowWithDoubleClick:(id)arg1;
- (void)mouseUp:(id)arg1;
- (unsigned long long)resizeEdgeForEvent:(id)arg1;
- (struct CGSize)_resizeDeltaFromPoint:(struct CGPoint)arg1 toEvent:(id)arg2;
- (struct CGRect)_validFrameForResizeFrame:(struct CGRect)arg1 fromResizeEdge:(unsigned long long)arg2;
- (struct CGRect)frame:(struct CGRect)arg1 resizedFromEdge:(unsigned long long)arg2 withDelta:(struct CGSize)arg3;
- (void)resizeWithEvent:(id)arg1;
- (long long)resizeFlags;
- (void)setDocumentEdited:(BOOL)arg1;
- (struct CGSize)miniaturizedSize;
- (struct CGSize)minFrameSize;
- (double)_windowBorderThickness;
- (double)_windowTitlebarXResizeBorderThickness;
- (double)_windowTitlebarYResizeBorderThickness;
- (double)_windowResizeBorderThickness;
- (double)_minXWindowBorderWidth;
- (double)_maxXWindowBorderWidth;
- (double)_minYWindowBorderHeight;
- (id)_customTitleCell;
- (void)_invalidateTitleCellWidth;
- (double)_titleCellHeight;
- (struct CGSize)_titleCellSize;
- (double)_titlebarHeight;
- (struct CGRect)titlebarRect;
- (struct CGRect)_maxTitlebarTitleRect;
- (struct CGRect)_titlebarTitleRect;
- (double)_windowTitlebarTitleMinHeight;
- (struct CGRect)dragRectForFrameRect:(struct CGRect)arg1;
- (struct CGSize)sizeOfTitlebarButtons;
- (struct CGSize)_sizeOfTitlebarFileButton;
- (double)_windowTitlebarButtonSpacingWidth;
- (double)_minXTitlebarButtonsWidth;
- (double)_maxXTitlebarButtonsWidth;
- (double)windowTitlebarLinesSpacingWidth;
- (double)windowTitlebarTitleLinesSpacingWidth;
- (double)_minLinesWidthWithSpace;
- (struct CGPoint)_closeButtonOrigin;
- (struct CGPoint)_zoomButtonOrigin;
- (struct CGPoint)_collapseButtonOrigin;
- (struct CGPoint)_fileButtonOrigin;
- (double)_maxYTitlebarDragHeight;
- (double)_minXTitlebarDragWidth;
- (double)_maxXTitlebarDragWidth;
- (double)_contentToFrameMinXWidth;
- (double)_contentToFrameMaxXWidth;
- (double)_contentToFrameMinYHeight;
- (double)_contentToFrameMaxYHeight;
- (struct CGRect)contentRect;
- (double)_windowResizeCornerThickness;
- (struct CGRect)_minYResizeRect;
- (struct CGRect)_minYminXResizeRect;
- (struct CGRect)_minYmaxXResizeRect;
- (struct CGRect)_minXResizeRect;
- (struct CGRect)_minXminYResizeRect;
- (struct CGRect)_minXmaxYResizeRect;
- (struct CGRect)_maxYResizeRect;
- (struct CGRect)_maxYminXResizeRect;
- (struct CGRect)_maxYmaxXResizeRect;
- (struct CGRect)_maxXResizeRect;
- (struct CGRect)_maxXminYResizeRect;
- (struct CGRect)_maxXmaxYResizeRect;
- (struct CGRect)_minXTitlebarResizeRect;
- (struct CGRect)_maxXTitlebarResizeRect;
- (struct CGRect)_minXBorderRect;
- (struct CGRect)_maxXBorderRect;
- (struct CGRect)_maxYBorderRect;
- (struct CGRect)_minYBorderRect;

@end

@interface NSTokenAttachmentCell : NSTextAttachmentCell
{
    id _representedObject;
    id _textColor;
    id _reserved;
    struct {
        unsigned int _selected:1;
        unsigned int _edgeStyle:2;
        unsigned int _reserved:29;
    } _tacFlags;
}

+ (void)initialize;
- (id)initTextCell:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (long long)interiorBackgroundStyle;
- (BOOL)_hasMenu;
- (id)tokenForegroundColor;
- (id)tokenBackgroundColor;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (id)pullDownImage;
- (id)menu;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGSize)cellSize;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)cellFrameForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (struct CGPoint)cellBaselineOffset;
- (struct CGRect)pullDownRectForBounds:(struct CGRect)arg1;
- (void)drawTokenWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (BOOL)isEnabled;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)wantsToTrackMouseForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4 untilMouseUp:(BOOL)arg5;

@end

@interface NSTokenAttachment : NSTextAttachment
{
    id _delegate;
}

- (id)initWithDelegate:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)attachmentCell;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface NSTokenField : NSTextField
{
    BOOL _reserved1;
    BOOL _reserved2;
    BOOL _reserved3;
    BOOL _reserved4;
    long long _trackingRectTag;
    id _reserved5;
    id _reserved6;
    id _reserved7;
}

+ (void)initialize;
+ (double)defaultCompletionDelay;
+ (id)defaultTokenizingCharacterSet;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)setTokenStyle:(unsigned long long)arg1;
- (unsigned long long)tokenStyle;
- (void)setCompletionDelay:(double)arg1;
- (double)completionDelay;
- (void)setTokenizingCharacterSet:(id)arg1;
- (id)tokenizingCharacterSet;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)tokenFieldCell:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)tokenFieldCell:(id)arg1 shouldAddObjects:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)tokenFieldCell:(id)arg1 displayStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 editingStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 tooltipStringForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 setUpTokenAttachmentCell:(id)arg2 forRepresentedObject:(id)arg3;
- (id)tokenFieldCell:(id)arg1 shouldUseDrawingAttributes:(id)arg2 forRepresentedObject:(id)arg3;
- (id)tokenFieldCell:(id)arg1 representedObjectForEditingString:(id)arg2;
- (unsigned long long)tokenFieldCell:(id)arg1 styleForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 menuForRepresentedObject:(id)arg2;
- (BOOL)tokenFieldCell:(id)arg1 hasMenuForRepresentedObject:(id)arg2;
- (id)tokenFieldCell:(id)arg1 readFromPasteboard:(id)arg2;
- (BOOL)tokenFieldCell:(id)arg1 writeRepresentedObjects:(id)arg2 toPasteboard:(id)arg3;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)tokenFieldCell;
- (void)setDisplaysTokenWhileEditing:(BOOL)arg1;
- (BOOL)displaysTokenWhileEditing;

@end

@interface NSTokenTextView : NSTextView
{
}

+ (id)trackingTokenTextView:(BOOL)arg1;
+ (id)tokenTextViewForWindow:(id)arg1;
- (void)_detachFieldEditorFromWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setDelegate:(id)arg1;
- (id)_tokenAttachmentForPoint:(struct CGPoint)arg1 glyphIndex:(out unsigned long long *)arg2 drawingRect:(out struct CGRect *)arg3;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (id)acceptableDragTypes;
- (id)writablePasteboardTypes;
- (id)readablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (struct _NSRange)rangeForUserCompletion;
- (id)tokenizingCharacterSet;
- (id)initWithCoder:(id)arg1;

@end

@interface NSTokenFieldCell : NSTextFieldCell
{
    NSCharacterSet *_tokenizingCharacterSet;
    id _delegate;
    double _completionDelay;
    id _cache;
    id _defaultTerminator;
    id _trackingArea;
    id _lastCell;
    struct CGRect _lastCellFrame;
    id _reserved[7];
    struct {
        unsigned int _style:4;
        unsigned int _invalidCache:1;
        unsigned int _inDidChange:1;
        unsigned int _validationDisabled:1;
        unsigned int _pendingComplete:1;
        unsigned int _autoCompleteMode:2;
        unsigned int _inValidateEditing:1;
        unsigned int _performingDrop:1;
        unsigned int _reserved:20;
    } _tfcFlags;
}

+ (void)initialize;
+ (id)defaultTokenizingCharacterSet;
+ (double)defaultCompletionDelay;
- (id)_defaultTokenizingCharacter;
- (id)_attributedStringForRepresentedObjects:(id)arg1;
- (id)_stringForRepresentedObjects:(id)arg1;
- (id)_representedOjectsForString:(id)arg1 andAttributedString:(id)arg2 range:(struct _NSRange)arg3;
- (BOOL)_tokenizeCharactersAdjacentToSelectionForTextView:(id)arg1 terminatorsNeeded:(BOOL)arg2;
- (id)initImageCell:(id)arg1;
- (id)init;
- (id)initTextCell:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setTokenizingCharacterSet:(id)arg1;
- (id)tokenizingCharacterSet;
- (void)setCompletionDelay:(double)arg1;
- (double)completionDelay;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setTokenStyle:(unsigned long long)arg1;
- (unsigned long long)tokenStyle;
- (BOOL)allowsEditingTextAttributes;
- (void)setScrollable:(BOOL)arg1;
- (void)setAlignment:(unsigned long long)arg1;
- (void)setWraps:(BOOL)arg1;
- (void)setFont:(id)arg1;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)setLineBreakMode:(unsigned long long)arg1;
- (void)setTextColor:(id)arg1;
- (id)setUpTokenAttachmentCell:(id)arg1 forRepresentedObject:(id)arg2;
- (id)tokenAttachment:(id)arg1 shouldUseTokenAttachmentCell:(id)arg2;
- (BOOL)tokenAttachment:(id)arg1 doubleClickedInRect:(struct CGRect)arg2 ofView:(id)arg3 atCharacterIndex:(unsigned long long)arg4;
- (BOOL)hasMenuForTokenAttachment:(id)arg1;
- (id)menuForTokenAttachment:(id)arg1;
- (id)_unformattedAttributedStringValue:(id)arg1;
- (BOOL)_hasAttributedStringValue;
- (id)_formatObjectValue:(id)arg1 invalid:(BOOL)arg2;
- (BOOL)_objectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (void)setObjectValue:(id)arg1;
- (void)_validateEditing:(id)arg1;
- (BOOL)_skipsSynchronizationForEditingTextView:(id)arg1;
- (id)fieldEditorForView:(id)arg1;
- (id)setUpFieldEditorAttributes:(id)arg1;
- (id)layoutManager:(id)arg1 shouldUseSelectedTextAttributes:(id)arg2 atCharacterIndex:(unsigned long long)arg3 effectiveRange:(struct _NSRange *)arg4;
- (id)textView:(id)arg1 shouldChangeTypingAttributes:(id)arg2 toAttributes:(id)arg3;
- (void)setAutoValidationDisabled:(BOOL)arg1;
- (BOOL)autoValidationDisabled;
- (struct _NSRange)textView:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textDidChange:(id)arg1;
- (id)tokenTextView:(id)arg1 shouldUseDraggingPasteboardTypes:(id)arg2;
- (id)tokenTextView:(id)arg1 shouldUseWritablePasteboardTypes:(id)arg2;
- (id)tokenTextView:(id)arg1 shouldUseReadablePasteboardTypes:(id)arg2;
- (BOOL)tokenTextView:(id)arg1 writeSelectionToPasteboard:(id)arg2 type:(id)arg3;
- (BOOL)tokenTextView:(id)arg1 readSelectionFromPasteboard:(id)arg2 type:(id)arg3;
- (void)_autoComplete:(id)arg1;
- (struct _NSRange)rangeForUserCompletion;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (void)updateTrackingAreaWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_performingDrop;
- (void)_setPerformingDrop:(BOOL)arg1;
- (void)_concludeTracking;
- (void)_setEditingTextView:(id)arg1;
- (id)_selectOrEdit:(const struct CGRect *)arg1 inView:(id)arg2 target:(id)arg3 editor:(id)arg4 event:(id)arg5 start:(long long)arg6 end:(long long)arg7;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (id)acceptableDragTypes;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;

@end

@interface NSToolTipManager : NSObject
{
    NSWindow *_toolTipWindow;
    NSMapTable *_toolTipsByView;
    double toolTipDelay;
    NSDate *timeToolTipRemovedFromScreen;
    struct __CFRunLoopTimer *toolTipDisplayTimer;
    NSToolTip *currentDisplayedToolTip;
    NSToolTip *currentFadingToolTip;
    double currentFadeValue;
    NSTimer *fadeTimer;
    NSWindow *lastToolTipWindow;
    NSWindow *_expansionToolTipWindow;
    NSToolTip *_currentExpansionToolTip;
}

+ (id)sharedToolTipManager;
+ (BOOL)isCurrentMouseLocationAboveWindow:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_menuDidBeginTracking:(id)arg1;
- (void)setInitialToolTipDelay:(double)arg1;
- (void)windowDidBecomeKeyNotification:(id)arg1;
- (BOOL)_shouldInstallToolTip:(void *)arg1;
- (void)_getDisplayDelegateFadesOutWhenInactive:(id)arg1;
- (void)_getIsExpansionToolTip:(id)arg1;
- (BOOL)_checkDisplayDelegate:(id)arg1;
- (long long)_addTrackingRect:(struct CGRect)arg1 andStartToolTipIfNecessary:(BOOL)arg2 view:(id)arg3 owner:(id)arg4 toolTip:(id)arg5 reuseExistingTrackingNum:(BOOL)arg6;
- (void)addTrackingRectForToolTip:(id)arg1 reuseExistingTrackingNum:(BOOL)arg2;
- (void)_addTrackingRectsForView:(id)arg1;
- (void)_removeToolTipsForView:(id)arg1 passingTest:(id)arg2;
- (long long)_setToolTip:(id)arg1 forView:(id)arg2 cell:(id)arg3 rect:(struct CGRect)arg4 owner:(id)arg5 ownerIsDisplayDelegate:(BOOL)arg6 userData:(void *)arg7;
- (void)_removeTrackingRectsForView:(id)arg1 stopTimerIfNecessary:(BOOL)arg2;
- (void)_removeTrackingRectForToolTip:(id)arg1 stopTimerIfNecessary:(BOOL)arg2;
- (long long)setToolTipForView:(id)arg1 rect:(struct CGRect)arg2 displayDelegate:(id)arg3 displayInfo:(id)arg4;
- (long long)setToolTipForView:(id)arg1 rect:(struct CGRect)arg2 owner:(id)arg3 userData:(void *)arg4;
- (void)setToolTipWithOwner:(id)arg1 forView:(id)arg2 cell:(id)arg3;
- (void)setToolTip:(id)arg1 forView:(id)arg2 cell:(id)arg3;
- (void)removeToolTipForView:(id)arg1 tag:(long long)arg2;
- (BOOL)viewHasToolTips:(id)arg1;
- (void)removeAllToolTipsForView:(id)arg1;
- (void)removeAllToolTipsForView:(id)arg1 withOwner:(id)arg2;
- (void)removeAllToolTipsForView:(id)arg1 withDisplayDelegate:(id)arg2;
- (id)_findToolTipForView:(id)arg1 passingTest:(id)arg2;
- (id)toolTipForView:(id)arg1 cell:(id)arg2;
- (void)orderOutToolTipForView:(id)arg1;
- (void)recomputeToolTipsForView:(id)arg1 remove:(BOOL)arg2 add:(BOOL)arg3;
- (void)_viewDidUpdateTrackingAreas:(id)arg1;
- (void)startTimer:(double)arg1 userInfo:(id)arg2;
- (void)stopTimer;
- (void)_stopTimerIfRunningForToolTip:(id)arg1;
- (id)_newToolTipWindow;
- (id)toolTipTextColor;
- (id)toolTipBackgroundColor;
- (struct CGSize)toolTipContentMargin;
- (double)toolTipYOffset;
- (id)toolTipAttributes;
- (id)toolTipContentViewWithAttributedString:(id)arg1 location:(struct CGPoint)arg2 where:(struct CGPoint)arg3 windowFrame:(struct CGRect *)arg4 toolTip:(id)arg5;
- (struct CGPoint)onScreenToolTipWindowFrameOriginForToolTip:(id)arg1 windowFrame:(struct CGRect)arg2 where:(struct CGPoint)arg3 location:(struct CGPoint)arg4;
- (void)installContentView:(id)arg1 forToolTip:(id)arg2 toolTipWindow:(id)arg3 isNew:(BOOL)arg4;
- (void)drawToolTip:(id)arg1 attributedString:(id)arg2 inView:(id)arg3;
- (void)displayToolTip:(id)arg1;
- (void)orderOutToolTip;
- (void)_stopFadeTimer;
- (void)fadeToolTip:(id)arg1;
- (void)orderOutToolTipImmediately:(BOOL)arg1;
- (void)abortToolTip;
- (BOOL)_inQuickDisplayModeForWindow:(id)arg1;
- (void)mouseEnteredToolTip:(id)arg1 inWindow:(id)arg2 withEvent:(id)arg3;
- (BOOL)_isToolTipAlive:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)isExpansionToolTipVisible;
- (BOOL)isRegularToolTipVisible;
- (void)orderOutOnlyExpansionToolTip;

@end

@interface NSToolTipPanel : NSPanel
{
    NSString *_toolTipString;
}

- (void)dealloc;
- (BOOL)hasShadow;
- (id)toolTipString;
- (void)setToolTipString:(id)arg1;
- (BOOL)canBecomeVisibleWithoutLogin;
- (BOOL)ignoresMouseEvents;
- (void)_setLevelToShowAboveWindow:(id)arg1;

@end

@interface NSToolTipStringDrawingLayoutManager : NSObject
{
    NSDictionary *_wrappingAttributes;
    NSLayoutManager *_layoutManager;
}

+ (id)sharedToolTipStringDrawingLayoutManager;
+ (struct CGSize)sizeForDisplayingAttributedString:(id *)arg1;
- (id)_wrappingAttributes;
- (struct CGSize)_sizeWithSize:(struct CGSize)arg1 attributedString:(id *)arg2;
- (void)dealloc;
@property(readonly, retain) NSDictionary *wrappingAttributes; // @synthesize wrappingAttributes=_wrappingAttributes;

@end

@interface NSToolTip : NSObject
{
    NSView *view;
    NSCell *cell;
    NSString *string;
    id owner;
    NSDictionary *dataDictionary;
    void *weakData;
    long long trackingNum;
    struct CGRect trackingRect;
    struct {
        unsigned int ownerIsDisplayDelegate:1;
        unsigned int isTemporary:1;
        unsigned int fadesOutWhenInactive:1;
        unsigned int isExpansionToolTip:1;
        unsigned int reserved:28;
    } ttFlags;
}

- (id)init;
- (void)dealloc;
- (BOOL)isTemporary;
- (id)description;
- (void *)data;
- (void)setData:(void *)arg1;

@end

@interface NSToolbar : NSObject
{
    NSString *_toolbarIdentifier;
    NSMutableArray *_currentItems;
    NSMutableArray *_currentItemIdentifiers;
    NSDictionary *_initPListDatabase;
    id _initPListTarget;
    NSString *_selectedItemIdentifier;
    void *_metrics;
    id _delegate;
    NSWindow *_window;
    id _configPalette;
    id _toolbarView;
    long long _syncPostEnabledCount;
    struct __tbFlags {
        unsigned int allowsUserCustomization:1;
        unsigned int autosavesUsingIdentifier:1;
        unsigned int initialConfigurationDone:1;
        unsigned int shouldHideAfterCustomization:1;
        unsigned int delegateDefaultItemIdentifiers:1;
        unsigned int delegateAllowedItemIdentifiers:1;
        unsigned int delegateItemWithItemIdentifier:1;
        unsigned int delegateNotificationsEnabled:1;
        unsigned int prefersToBeShown:1;
        unsigned int loadItemsImmediately:1;
        unsigned int currentItemsContainsPlaceholder:1;
        unsigned int customizationPanelIsRunning:1;
        unsigned int usesCustomSheetWidth:1;
        unsigned int clickAndDragPerformsCustomization:1;
        unsigned int showsNoContextMenu:1;
        unsigned int currentlyLoadingPlaceholders:1;
        unsigned int delegateItemWithItemIdentifier2:1;
        unsigned int reserved:4;
        unsigned int keyboardLoopNeedsUpdating:1;
        unsigned int showHideDuringConfigurationChangeDisabled:1;
        unsigned int displayMode:2;
        unsigned int sizeMode:2;
        unsigned int doNotShowBaselineSeparator:1;
        unsigned int hideWithoutResizingWindowHint:1;
        unsigned int autovalidatesItemsDisabled:1;
        unsigned int inAutovalidation:1;
        unsigned int loadedMetrics:1;
    } _tbFlags;
    long long _customizationSheetWidth;
    id _tbReserved;
}

+ (BOOL)_allowSmallIcons;
+ (void)_registerToolbarInstance:(id)arg1;
+ (void)_unregisterToolbarInstance:(id)arg1;
+ (id)toolbarInstancesWithIdentifier:(id)arg1;
+ (id)_newUnknownItemWithItemIdentifier:(id)arg1;
+ (id)_newPlaceholderItemWithItemIdentifier:(id)arg1;
+ (id)_newStandardItemWithItemIdentifier:(id)arg1;
- (void)_toolbarRegisterForNotifications;
- (void)_toolbarUnregisterForNotifications;
- (void)_toolbarCommonBeginInit;
- (void)_toolbarCommonFinishInit;
- (id)initWithIdentifier:(id)arg1;
- (id)initFromPList:(id)arg1 target:(id)arg2 andIdentifier:(id)arg3;
- (void)_setIdentifier:(id)arg1;
- (id)_toolbarAuxiliary:(BOOL)arg1;
- (void)_deallocAuxiliary;
- (void)dealloc;
- (void)_checkForObsoleteDelegateMethodsInObject:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)_setFirstMoveableItemIndex:(long long)arg1;
- (long long)_firstMoveableItemIndex;
- (void)_setWantsToolbarContextMenu:(BOOL)arg1;
- (BOOL)_wantsToolbarContextMenu;
- (void)_setCustomizesAlwaysOnClickAndDrag:(BOOL)arg1;
- (BOOL)_customizesAlwaysOnClickAndDrag;
- (void)setCustomizationSheetWidth:(long long)arg1;
- (void)_synchronizeUserDefaultsIfNecessary;
- (void)_setEnableDelegateNotifications:(BOOL)arg1;
- (void)_setToolbarViewWindow:(id)arg1;
- (void)_setToolbarView:(id)arg1;
- (id)_toolbarView;
- (id)_customMetrics;
- (void)_setMetrics:(struct __NSToolbarMetrics *)arg1;
- (const struct __NSToolbarMetrics *)_metrics;
- (void)_loadInitialItemIdentifiers:(id)arg1 requireImmediateLoad:(BOOL)arg2;
- (Class)_toolbarViewClass;
- (void)_loadViewIfNecessary;
- (void)_adjustViewToWindow;
- (void)_loadFromUDIfNecessary;
- (BOOL)_prefersToBeShown;
- (void)_setPrefersToBeShown:(BOOL)arg1;
- (void)_setHideWithoutResizingWindowHint:(BOOL)arg1;
- (BOOL)_hideWithoutResizingWindowHint;
- (void)_setWindowOriginOffsetWhenHidingHint:(double)arg1;
- (double)_windowOriginOffsetWhenHidingHint;
- (void)_windowWillShowToolbar;
- (void)_windowDidHideToolbar;
- (void)_show:(id)arg1;
- (void)_hide:(id)arg1;
- (void)_toggleShown:(id)arg1;
- (void)toggleShown:(id)arg1;
- (void)makeShown:(BOOL)arg1;
- (BOOL)isShown;
- (void)setVisible:(BOOL)arg1;
- (BOOL)isVisible;
- (void)runConfigurationPalette:(id)arg1;
- (BOOL)configurationPaletteIsRunning;
- (void)setAllowsUserConfiguration:(BOOL)arg1;
- (BOOL)allowsUserConfiguration;
- (void)runCustomizationPalette:(id)arg1;
- (id)_customizationPaletteSheetWindow;
- (void)_endCustomizationPalette:(id)arg1;
- (BOOL)customizationPaletteIsRunning;
- (BOOL)_customizationPanelIsRunningFlag;
- (void)_setCustomizationPanelIsRunningFlag:(BOOL)arg1;
- (BOOL)_isEditing;
- (void)_endCustomizationPanel;
- (BOOL)_canRunCustomizationPanel;
- (void)_runCustomizationPanel;
- (void)_configSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)_sizeModeIsValidForCurrentDisplayMode:(unsigned long long)arg1;
- (void)setSizeMode:(unsigned long long)arg1;
- (unsigned long long)sizeMode;
- (void)setDisplayMode:(unsigned long long)arg1;
- (void)setShowsBaselineSeparator:(BOOL)arg1;
- (BOOL)showsBaselineSeparator;
- (BOOL)_allowsDisplayMode:(unsigned long long)arg1;
- (BOOL)_allowsSizeMode:(unsigned long long)arg1;
- (BOOL)_isSelectableItemIdentifier:(id)arg1;
- (void)_setNeedsDisplayForItemIdentifierSelection:(id)arg1;
- (void)setSelectedItemIdentifier:(id)arg1;
- (id)selectedItemIdentifier;
- (unsigned long long)_nextDisplayMode;
- (unsigned long long)_previousDisplayMode;
- (unsigned long long)displayMode;
- (void)_setNextSizeAndDisplayMode;
- (void)_setPreviousSizeAndDisplayMode;
- (void)_setBackgroundColor:(id)arg1;
- (id)_backgroundColor;
- (BOOL)_drawsBackground;
- (void)setAllowsUserCustomization:(BOOL)arg1;
- (BOOL)allowsUserCustomization;
- (BOOL)_allowsDuplicateItems;
- (id)identifier;
- (id)_items;
- (long long)_numberOfItems;
- (id)_nonPlaceholderItems;
- (id)items;
- (id)visibleItems;
- (BOOL)_sanityCheckPListDatabase:(id)arg1;
- (id)_itemAtIndex:(long long)arg1;
- (id)_findFirstItemInArray:(id)arg1 withItemIdentifier:(id)arg2 withPropertyListRepresentation:(id)arg3;
- (BOOL)_keyboardLoopNeedsUpdating;
- (void)_setKeyboardLoopNeedsUpdating:(BOOL)arg1;
- (void)_computeToolbarItemKeyboardLoopIfNecessary;
- (void)_makeFirstResponderForKeyboardHotKeyEvent;
- (void)_forceAppendItem:(id)arg1;
- (void)_forceInsertItem:(id)arg1 atIndex:(long long)arg2;
- (void)_forceReplaceItemAtIndex:(long long)arg1 withItem:(id)arg2;
- (void)_forceMoveItemFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)_forceRemoveItemFromIndex:(long long)arg1;
- (void)_insertItem:(id)arg1 atIndex:(long long)arg2 notifyDelegate:(BOOL)arg3 notifyView:(BOOL)arg4 notifyFamilyAndUpdateDefaults:(BOOL)arg5;
- (void)_insertNewItemWithItemIdentifier:(id)arg1 atIndex:(long long)arg2 propertyListRepresentation:(id)arg3 notifyFlags:(unsigned long long)arg4;
- (void)_moveItemFromIndex:(long long)arg1 toIndex:(long long)arg2 notifyDelegate:(BOOL)arg3 notifyView:(BOOL)arg4 notifyFamilyAndUpdateDefaults:(BOOL)arg5;
- (void)_removeItemAtIndex:(long long)arg1 notifyDelegate:(BOOL)arg2 notifyView:(BOOL)arg3 notifyFamilyAndUpdateDefaults:(BOOL)arg4;
- (void)_setCurrentItemsToItemIdentifiers:(id)arg1 itemIndexToPlistDictionary:(id)arg2 notifyDelegate:(BOOL)arg3 notifyView:(BOOL)arg4 notifyFamilyAndUpdateDefaults:(BOOL)arg5;
- (void)_loadAllPlaceholderItems;
- (void)insertItemWithItemIdentifier:(id)arg1 atIndex:(long long)arg2;
- (void)removeItemAtIndex:(long long)arg1;
- (void)_userInsertItemsFromExternalDrag:(id)arg1 startingAtIndex:(long long)arg2;
- (void)_userInsertItemWithItemIdentifier:(id)arg1 atIndex:(long long)arg2;
- (void)_userMoveItemFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)_userRemoveItemAtIndex:(long long)arg1;
- (void)_userResetToDefaultConfiguration;
- (void)_userSetCurrentItemsToItemIdentifiers:(id)arg1;
- (void)_replaceAllItemsAndSetNewWithItemIdentifiers:(id)arg1;
- (BOOL)_canUserSetVisibilityPriority;
- (void)_disableChangeSync;
- (void)_enableChangeSync;
- (BOOL)_changeSyncPostingEnabled;
- (BOOL)_initialConfigurationDone;
- (void)_notifyDelegate_movedItem:(id)arg1 fromIndex:(long long)arg2 toIndex:(long long)arg3;
- (void)_notifyDelegate_DidRemoveItem:(id)arg1;
- (void)_notifyDelegate_DidRemoveItems:(id)arg1;
- (void)_notifyDelegate_WillAddItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_notifyFamily_DidRemoveItemAtIndex:(long long)arg1;
- (void)_notifyView_DidRemoveItemAtIndex:(long long)arg1;
- (void)_notifyFamily_MovedFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)_notifyView_MovedFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)_notifyFamily_InsertedNewItem:(id)arg1 atIndex:(long long)arg2;
- (void)_notifyView_InsertedNewItem:(id)arg1 atIndex:(long long)arg2;
- (void)_notifyFamily_DidSetAllCurrentItems:(id)arg1;
- (void)_notifyView_DidSetAllCurrentItems:(id)arg1;
- (void)_noteToolbarSizeModeChangedAndPostSyncSEL;
- (void)_noteToolbarDisplayModeChangedAndPostSyncSEL;
- (void)_noteItemUserVisibilityPriorityChanged:(id)arg1;
- (void)_noteToolbarShowsBaselinePropertyChanged;
- (id)_userVisibilityPriorityValues;
- (void)_syncToolbarItemUserVisibilityPriorityToValues:(id)arg1;
- (void)_syncToChangedToolbar:(id)arg1 itemRemoved:(id)arg2;
- (void)_syncToChangedToolbar:(id)arg1 itemMoved:(id)arg2;
- (void)_syncToChangedToolbar:(id)arg1 itemInserted:(id)arg2;
- (void)_syncToChangedToolbar:(id)arg1 toolbarReplacedAllItems:(id)arg2;
- (void)_syncToChangedToolbar:(id)arg1 toolbarModeChanged:(id)arg2;
- (void)_syncToChangedToolbar:(id)arg1 toolbarItemUserVisibilityPriorityChanged:(id)arg2;
- (id)_newItemFromInitPListWithItemIdentifier:(id)arg1;
- (id)_newToolbarItemFromProposedItem:(id)arg1 isForPalette:(BOOL)arg2;
- (id)_newItemFromDelegateWithItemIdentifier:(id)arg1 propertyListRepresentation:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)_newItemFromItemIdentifier:(id)arg1 propertyListRepresentation:(id)arg2 requireImmediateLoad:(BOOL)arg3 willBeInsertedIntoToolbar:(BOOL)arg4;
- (id)_createItemFromItemIdentifier:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)_defaultItemIdentifiers;
- (id)_allowedItemIdentifiers;
- (id)selectableItemIdentifiers;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)_itemIndexToPropertyListRepresentationDictionary;
- (id)_dictionaryForSavedConfiguration;
- (BOOL)_setConfigurationFromDictionary:(id)arg1 notifyFamilyAndUpdateDefaults:(BOOL)arg2;
- (void)_saveConfigurationUsingName:(id)arg1 domain:(id)arg2;
- (BOOL)_setConfigurationUsingName:(id)arg1 domain:(id)arg2;
- (id)_configurationAutosaveName;
- (void)_autoSaveConfiguration;
- (void)saveCofigurationUsingName:(id)arg1;
- (void)saveConfigurationUsingName:(id)arg1;
- (void)setConfigurationFromDictionary:(id)arg1;
- (BOOL)setConfigurationUsingName:(id)arg1;
- (id)configurationDictionary;
- (void)setAutosavesConfigurationUsingIdentifier:(BOOL)arg1;
- (BOOL)autosavesConfigurationUsingIdentifier;
- (void)setAutosavesConfiguration:(BOOL)arg1;
- (BOOL)autosavesConfiguration;
- (BOOL)_toolbarWindowHasAttachedSheetOtherThanCustomizationPalette;
- (void)_validateVisibleItemsInPresenceOfSheet;
- (void)validateVisibleItems;
- (void)_setAutovalidatesItems:(BOOL)arg1;
- (BOOL)_autovalidatesItems;
- (void)_autovalidateVisibleToolbarItems;
- (void)_autovalidateToolbarItem:(id)arg1;
- (void)_prepareToolbarItemsForSheet;
- (void)_restoreToolbarItemsAfterSheet;
- (void)_noteInstantiationFromWindowTemplate;
- (BOOL)_wiringNibConnections;
- (void)_endWiringNibConnections;
- (void)_finishedMakingConnections;
- (void)_setIdentifiedItems:(id)arg1;
- (id)_identifiedItems;
- (void)_setDefaultItems:(id)arg1;
- (id)_defaultItems;
- (void)_setAllowedItems:(id)arg1;
- (id)_allowedItems;
- (void)_setSelectableItems:(id)arg1;
- (id)_selectableItems;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setRegisteredDraggedTypes:(id)arg1;
- (id)registeredDraggedTypes;
- (BOOL)_delegateMightBeAbleToProduceToolbarItemsFromPasteboard:(id)arg1;
- (id)_toolbarItemsFromDelegateWithPasteboard:(id)arg1;
- (struct CGSize)_maximumSizeForSearchFieldToolbarItem;
- (struct CGSize)_minimumSizeForSearchFieldToolbarItem;
- (struct CGSize)_minimumWindowSizeEnsuringVisibilityOfItem:(id)arg1;
- (id)_window;
- (void)_setLoadedMetrics:(BOOL)arg1;
- (void)_setDoNotShowBaselineSeparator:(BOOL)arg1;

@end

@interface _NSToolbarTransitionGraphicsContext : NSBitmapGraphicsContext
{
}

- (BOOL)isDrawingToScreen;

@end

@interface _NSToolbarAuxiliary : NSObject
{
    NSColor *backgroundColor;
    NSArray *draggedTypes;
    double windowOriginOffsetWhenHidingHint;
    NSDictionary *identifiedItems;
    NSArray *defaultItems;
    NSArray *allowedItems;
    NSArray *selectableItems;
    struct {
        unsigned int wiringNibConnections:1;
        unsigned int firstMoveableItemIndex:6;
        unsigned int reserved:25;
    } _tbaFlags;
}

@end

@interface _NSToolbarItemPlaceholder : NSObject
{
    NSString *_itemIdentifier;
    NSToolbar *_tb;
    long long _visibilityPriority;
    BOOL _hasCustomVisibilityPriority;
    id _propertyListRepresentation;
}

- (id)initWithItemIdentifier:(id)arg1;
- (void)dealloc;
- (id)itemIdentifier;
- (void)_setToolbar:(id)arg1;
- (id)toolbar;
- (void)setVisibilityPriority:(long long)arg1;
- (long long)visibilityPriority;
- (BOOL)_hasCustomVisibilityPriority;
@property(retain, nonatomic) id propertyListRepresentation; // @synthesize propertyListRepresentation=_propertyListRepresentation;

@end

@interface NSToolbarButton : NSButton
{
    NSToolbarItem *_item;
    SEL _primaryAction;
    SEL _alternateAction;
    NSString *_primaryToolTip;
    NSString *_alternateToolTip;
    NSString *_primaryTitle;
    NSString *_alternateTitle;
    NSImage *_cachedDrawingImage;
    CDStruct_9fab449c _tbbFlags;
    id _toolbarButtonReserved;
}

+ (void)initialize;
- (id)initWithItem:(id)arg1;
- (void)dealloc;
- (id)_item;
- (void)setImagePosition:(unsigned long long)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (BOOL)sendAction;
- (BOOL)refusesFirstResponder;
- (void)invalidateCachedDrawingImage;
- (id)cachedDrawingImage;

@end

@interface _NSToolbarItemViewerLabelCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface _NSToolbarButtonCell : NSButtonCell
{
}

- (long long)nextState;
- (BOOL)refusesFirstResponder;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface NSToolbarClippedItemsIndicator : NSPopUpButton
{
    NSArray *_clippedItems;
    BOOL _cachedMenuIsValid;
    BOOL _returnFocusToWindowAfterClick;
    id _clippedItemsReservedn8;
}

+ (void)initialize;
+ (BOOL)isItemShownInPopupIfSoleEntry:(id)arg1;
+ (BOOL)willHaveItemsToDisplayForItemViewers:(id)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)hasItemsToDisplayInPopUp;
- (void)_computeMenuForClippedItems;
- (BOOL)_shouldDrawSelectionIndicatorForItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_simpleOverflowMenuItemClicked:(id)arg1;
- (void)_computeMenuForClippedItemsIfNeeded;
- (void)_willPopUpNotification:(id)arg1;
- (void)_updateMenuForClippedItems;
- (void)setClippedItems:(id)arg1;
- (id)clippedItems;
- (id)_clipViewAncestor;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)didSendActionNotification:(id)arg1;
- (void)performClick:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _NSToolbarClippedItemsIndicatorCell : NSPopUpButtonCell
{
}

- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (void)drawImageWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGPoint)_menuLocationForEvent:(id)arg1 inCellFrame:(struct CGRect)arg2 ofView:(id)arg3;
- (unsigned long long)_preferredFocusLocationMask;

@end

@interface NSToolbarConfigPanel : NSPanel
{
    NSToolbar *_editedToolbar;
    double _widthOfWidgets;
    NSToolbar *_individualItemsToolbar;
    NSTextField *_individualItemsText;
    NSToolbarView *_individualItemsToolbarView;
    NSScrollView *_individualItemsScrollView;
    NSTextField *_defaultItemsText;
    _NSToolbarImageRepView *_defaultToolbarImageRep;
    NSPopUpButton *_displayModePopUp;
    double _maxIndividualItemViewHeight;
    long long _desiredSheetWidth;
    NSButton *_useSmallIconsCheckBox;
    id _configPanelReserved;
}

+ (id)_nibName;
- (void)_finishInitialization;
- (BOOL)_shouldSuppressRolloversForSegmentedCellInView:(id)arg1;
- (id)initForToolbar:(id)arg1 withWidth:(long long)arg2;
- (void)_orderFrontRelativeToWindow:(id)arg1;
- (id)editedToolbar;
- (void)dealloc;
- (void)_syncToChangedToolbar:(id)arg1:(id)arg2 toolbarModeChanged:(id)arg3;
- (struct CGSize)_offsetFromStartRect;
- (BOOL)_addCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (void)ok:(id)arg1;
- (void)cancel:(id)arg1;
- (BOOL)_shouldUseTexturedAppearanceForSegmentedCellInView:(id)arg1;
- (void)_setUpTextField:(id)arg1;
- (void)_loadDefaultSetImageRep;
- (void)_loadData;
- (double)_resizeTextFieldToFit:(id)arg1;
- (double)_deltaForResizingTextField:(id)arg1;
- (double)_resizeToolbarImageRepViewToFit:(id)arg1;
- (double)_deltaForResizingImageRepView:(id)arg1;
- (void)_computeMaxItemViewHeight;
- (double)_resizeToolbarViewToFit:(id)arg1;
- (double)_resizeViewToFit:(id)arg1;
- (void)_layoutForData;
- (BOOL)preventsApplicationTerminationWhenModal;
- (void)_setDefaultToolbarItemSetFromMenuItem:(id)arg1;

@end

@interface _NSToolbarImageRepView : NSView
{
    NSArray *_itemIdentifiers;
    NSCGImageRep *_activeImageRep;
    NSCGImageRep *_inactiveImageRep;
}

- (void)dealloc;
- (BOOL)isOpaque;
- (void)setActiveImageRep:(id)arg1 inactiveImageRep:(id)arg2 forItemIdentifiers:(id)arg3;
- (void)sizeToFit;
- (void)sizeWidthToFit;
- (void)sizeHeightToFit;
- (struct CGSize)sizeWhenSizedToFit;
- (void)drawRect:(struct CGRect)arg1;
- (id)_computeDragImage;
- (void)mouseDown:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)_validDestinationForDragsWeInitiate;
- (BOOL)_isPaletteView;
- (void)_windowChangedKeyState;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityActionNames;

@end

@interface _NSToolbarDefaultImageRepWindow : NSWindow
{
    BOOL segmentedCellsGetTextures;
}

- (BOOL)_shouldUseTexturedAppearanceForSegmentedCellInView:(id)arg1;
- (BOOL)_shouldSuppressRolloversForSegmentedCellInView;

@end

@interface _NSToolbarConfigPanelLoader : NSObject
{
    NSPanel *panel;
}

+ (id)loadPanelNamed:(id)arg1;
- (id)panel;

@end

@interface NSToolbarFlexibleSpaceItem : NSToolbarItem
{
}

+ (id)itemIdentifier;
+ (BOOL)_resizeWeightSharedWithDuplicateItems;
+ (double)_resizeWeight;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)arg1;
- (id)init;
- (BOOL)isSeparatorItem;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
- (BOOL)_emptyContents;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (void)setTrackedSplitView:(id)arg1;
- (id)trackedSplitView;
- (void)setTrackedSplitViewDividerIndex:(long long)arg1;
- (long long)trackedSplitViewDividerIndex;

@end

@interface _NSToolbarFlexibleSpace : NSView
{
    NSToolbarFlexibleSpaceItem *_spaceItem;
    BOOL _inPalette;
    NSImage *_configPanelImage;
}

- (id)initWithSize:(struct CGSize)arg1 forSpaceItem:(id)arg2;
- (void)setInPalette:(BOOL)arg1;
- (BOOL)inPalette;
- (BOOL)_drawsNothing;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSToolbarItem : NSObject <NSCopying, NSValidatedUserInterfaceItem>
{
    NSToolbar *_toolbar;
    NSImage *_image;
    NSString *_itemIdentifier;
    NSString *_label;
    unsigned long long _labelAlignment;
    NSString *_paletteLabel;
    NSString *_toolTip;
    NSMenuItem *_menuItemRep;
    long long _tag;
    struct __tbiFlags {
        unsigned int viewRespondsToIsEnabled:1;
        unsigned int viewRespondsToSetEnabled:1;
        unsigned int viewRespondsToTag:1;
        unsigned int viewRespondsToSetTag:1;
        unsigned int viewRespondsToAction:1;
        unsigned int viewRespondsToSetAction:1;
        unsigned int viewRespondsToTarget:1;
        unsigned int viewRespondsToSetTarget:1;
        unsigned int viewRespondsToImage:1;
        unsigned int viewRespondsToSetImage:1;
        unsigned int isEnabled:1;
        unsigned int isUserRemovable:1;
        unsigned int menuHasBeenSet:1;
        unsigned int menuRepIsDefault:1;
        unsigned int viewHasBeenLoaded:1;
        unsigned int drawingForDragImage:1;
        unsigned int isCustomItemType:1;
        unsigned int hasValidatedAutoModeConfiguration:1;
        unsigned int useAutoModeConfiguration:1;
        unsigned int RESERVED2:1;
        unsigned int autovalidationDisabled:1;
        unsigned int tagHasBeenSet:1;
        unsigned int sizeHasBeenSet:1;
        unsigned int stateWasDisabledBeforeSheet:1;
        unsigned int RESERVED:8;
    } _tbiFlags;
    id _tbiReserved;
    id _itemViewer;
    NSView *_view;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    id _toolbarItemReserved;
}

+ (id)_newShowColorsItem;
+ (id)_newShowFontsItem;
+ (id)_newCustomizeToolbarItem;
+ (id)_newPrintItem;
+ (id)newStandardItemWithItemIdentifier:(id)arg1;
+ (id)standardItemWithItemIdentifier:(id)arg1;
+ (id)_imageForDrawingInRectOfSize:(struct CGSize)arg1 fromImage:(id)arg2;
+ (BOOL)_resizeWeightSharedWithDuplicateItems;
+ (double)_resizeWeight;
+ (BOOL)allowsDuplicatesInToolbar;
- (id)_allocDefaultView;
- (void)_loadViewIfNecessary;
- (void)_toolbarItemCommonInit;
- (id)initWithType:(int)arg1 itemIdentifier:(id)arg2;
- (id)initWithItemIdentifier:(id)arg1;
- (void)_setItemIdentifier:(id)arg1;
- (id)_copyOfCustomView;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_validateAsCommonItem:(id)arg1;
- (BOOL)_shouldValidateMenuFormRepresentation;
- (BOOL)_wantsImageWrapperForInsertionIntoPaletteToolbar:(id)arg1;
- (BOOL)_wantsCopyForInsertionIntoToolbar:(id)arg1 isPalette:(BOOL)arg2;
- (id)_itemMenuInPaletteForEvent:(id)arg1;
- (void)_validateMenuFormRepresentation:(id)arg1;
- (void)_validateAsCustomItem:(id)arg1;
- (void)setAutovalidates:(BOOL)arg1;
- (BOOL)autovalidates;
- (void)validate;
- (void)_validateInPresenceOfSheet;
- (void)_prepareToolbarItemForSheet;
- (void)_restoreToolbarItemAfterSheet;
- (id)itemIdentifier;
- (int)itemType;
- (id)toolbar;
- (void)_setAllPossibleLabelsToFit:(id)arg1;
- (id)_allPossibleLabelsToFit;
- (BOOL)_emptyContents;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (void)setLabel:(id)arg1;
- (id)_label;
- (id)label;
- (void)setPaletteLabel:(id)arg1;
- (id)_paletteLabel;
- (id)paletteLabel;
- (id)_applicableLabelsArrayForDisplayMode:(unsigned long long)arg1 isInPalette:(BOOL)arg2;
- (id)_viewsArray;
- (void)_collectItemRectsForLabels:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (void)_collectItemRectsForViews:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (void)setToolTip:(id)arg1;
- (id)toolTip;
- (id)propertyListRepresentation;
- (void)setPropertyListRepresentation:(id)arg1;
- (void)_clearDefaultMenuFormRepresentation;
- (void)setMenuFormRepresentation:(id)arg1;
- (void)_noteDefaultMenuAttributeChanged;
- (void)_itemLayoutChanged;
- (id)_imageForMenu;
- (BOOL)_menuRepresentationHasBeenSet;
- (BOOL)_menuRepresentationIsDefault;
- (id)_computeDefaultMenuFormRepresentation;
- (id)menuFormRepresentation;
- (id)_menuFormRepresentationForOverflowMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_performSwitchToIconMode;
- (void)_standardCommonMenuFormRepresentationClicked:(id)arg1;
- (void)_performMenuFormRepresentationClick;
- (BOOL)_mouseDownInSurroundingRegionShouldMoveWindow;
- (id)_partitionAdapter;
- (void)_setPartitionAdapter:(id)arg1;
- (BOOL)_isPartitionItem;
- (BOOL)_getPartitionRect:(struct CGRect *)arg1 inWindowCoordinatesForWindow:(id)arg2;
- (void)_toolbarItemPartitionAdapterDidChangeExcludedRect:(id)arg1;
- (id)_startingWindowForSendAction:(SEL)arg1;
- (void)_standardCustomMenuFormRepresentationClicked:(id)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (BOOL)_isEnabledAndHasEnabledSubitem;
- (BOOL)_applicableLabelIsEnabledAtIndex:(long long)arg1 forDisplayMode:(unsigned long long)arg2 isInPalette:(BOOL)arg3;
- (BOOL)_viewIsEnabledAtIndex:(long long)arg1;
- (id)_itemAtLabelIndex:(long long)arg1;
- (id)_itemAtViewIndex:(long long)arg1;
- (double)_interviewPadding;
- (double)_interlabelPadding;
- (void)setTag:(long long)arg1;
- (long long)tag;
- (BOOL)_isCustomItemType;
- (void)_autorecalculateMinSize:(struct CGSize *)arg1 maxSize:(struct CGSize *)arg2;
- (void)_autorecalculateSizesIfNotSetExplicitly;
- (void)_forceSetView:(id)arg1;
- (void)setView:(id)arg1;
- (id)view;
- (void)setVisibilityPriority:(long long)arg1;
- (long long)visibilityPriority;
- (BOOL)_resizeWeightSharedWithDuplicateItems;
- (double)_resizeWeight;
- (BOOL)_canUserSetVisibilityPriority;
- (void)_toggleUserVisibilityPriority:(id)arg1;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (void)setMaxSize:(struct CGSize)arg1;
- (struct CGSize)maxSize;
- (void)setImage:(id)arg1;
- (id)image;
- (BOOL)allowsDuplicatesInToolbar;

@end

@interface _NSToolbarItemAuxiliary : NSObject
{
    NSArray *_allPossibleLabelsToFit;
    id _partitionAdapter;
    id _propertyListRepresentation;
    long long _visibilityPriority;
}

- (void)dealloc;

@end

@interface NSToolbarItemViewer : NSView
{
    NSToolbarItem *_item;
    NSToolbarView *_toolbarView;
    NSMutableArray *_labelViews;
    struct CGRect _labelRect;
    double _labelHeight;
    struct CGSize _maxViewerSize;
    struct CGSize _minViewerSize;
    struct CGRect _minIconFrame;
    struct CGRect _minLabelFrame;
    struct _NSToolbarMotion *_motion;
    double _xOriginForLayout;
    double _iconWidthForLayout;
    double _forcibleFrameWidthForLayout;
    struct {
        unsigned int drawsIconPart:1;
        unsigned int drawsLabelPart:1;
        unsigned int iconAreaIncludesLabelArea:1;
        unsigned int transparentBackground:1;
        unsigned int labelOnlyShowsAsPopupMenu:1;
        unsigned int inMotion:1;
        unsigned int inRecursiveDisplay:1;
        unsigned int RESERVED1:1;
        unsigned int needsViewerLayout:1;
        unsigned int needsModeConfiguration:1;
        unsigned int inPaletteView:1;
        unsigned int returnFocusToWindowAfterClick:1;
        unsigned int needsInitialAutovalidation:1;
        unsigned int needsRedrawForChangeInActiveState:1;
        unsigned int RESERVED2:1;
        unsigned int accessibilityAddedDescriptionToSubelements:1;
        unsigned int UNUSED:16;
    } _tbivFlags;
}

- (Class)labelViewClass;
- (id)_labelFont;
- (void)_setLabelViewCount:(unsigned long long)arg1;
- (id)_firstLabelView;
- (id)initWithItem:(id)arg1 forToolbarView:(id)arg2;
- (id)item;
- (void)_setToolbarItem:(id)arg1;
- (void)_clearToolbarView;
- (void)dealloc;
- (void)setTransparentBackground:(BOOL)arg1;
- (BOOL)transparentBackground;
- (BOOL)isOpaque;
- (const struct __NSToolbarMetrics *)_metrics;
- (void)_updateLabelViewByLabelRect;
- (BOOL)_itemCanBeDraggedInTemporaryEditingModeFromPoint:(struct CGPoint)arg1;
- (double)_widthRequiredForLabelLayout;
- (void)_computeLayoutInfoForIconViewSize:(struct CGSize)arg1 frameSize:(struct CGSize *)arg2 iconFrame:(struct CGRect *)arg3 labelFrame:(struct CGRect *)arg4;
- (void)_recomputeLabelHeight;
- (void)_noteToolbarSizeModeChanged;
- (void)_configureLabelCellStringValue;
- (void)configureForLayoutInDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2 inToolbarView:(id)arg3;
- (void)layoutToFitInMinimumIconSize;
- (void)layoutToFitInViewerFrameHeight:(double)arg1;
- (double)frameWidthForIconWidth:(double)arg1;
- (void)layoutToFitInIconWidth:(double)arg1;
- (struct CGSize)maxSize;
- (struct CGSize)minViewerSize;
- (struct CGSize)minIconSize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)_teardownMotionData;
- (void)setDestinationRect:(struct CGRect)arg1 targetIconWidth:(double)arg2 travelTimeInSeconds:(double)arg3;
- (void)stepTowardsDestinationWithCurrentTime:(double)arg1;
- (BOOL)isInMotion;
- (struct CGPoint)destination;
- (void)_startInsertionOptimization;
- (void)_endInsertionOptimization;
- (void)_windowChangedKeyState;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)_captureVisibleIntoLiveResizeCache;
- (BOOL)_hasImageCache;
- (void)_captureVisibleIntoImageCache;
- (void)_drawWithImageCache;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (BOOL)_shouldDrawSelectionIndicator;
- (BOOL)_useLeopardToolbarSelectionHighlight;
- (BOOL)_useSquareToolbarSelectionHighlight;
- (BOOL)_shouldDrawFocus;
- (void)drawSelectionIndicatorInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (long long)_backgroundStyleForLabelCell:(id)arg1;
- (void)_setHighlighted:(BOOL)arg1 pieces:(unsigned long long)arg2 forItemAtIndex:(unsigned long long)arg3 displayNow:(BOOL)arg4;
- (void)_setHighlighted:(BOOL)arg1 displayNow:(BOOL)arg2;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)description;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)_acceptsFirstResponderInItem:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_allowsIndividualLabelViewSelection;
- (BOOL)_labelViewIsSelectable:(id)arg1;
- (BOOL)_isPartitionItem;
- (double)_spaceRequiredToSatisfySplitViewTrackingForMinimumLeftOrigin:(struct CGPoint)arg1 inWindow:(id)arg2;
- (id)_labelViewToSelectInDirection:(long long)arg1;
- (id)_initialLabelViewToSelectFromDirection:(long long)arg1;
- (void)_selectLabelView:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)labelOnlyMenuDidSendActionNotification:(id)arg1;
- (void)performClick:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)_shouldPreventCustomViewFromDraggingWindow:(id)arg1;
- (void *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (void)_popUpMenuFormRepresentationInLabelView:(id)arg1;
- (void)trackMouseForPopupMenuFormRepresentation:(id)arg1 forItem:(id)arg2 forLabelView:(id)arg3;
- (void)trackMouseForPopupMenuFormRepresentation:(id)arg1;
- (BOOL)_shouldMinimizeWindowForEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)_supportsSimultaneousSegmentAndLabelTrackingWithEvent:(id)arg1 segment:(long long *)arg2;
- (void)_segmentedControlDidChangeHighlightDuringTracking:(id)arg1;
- (BOOL)_simultaneousSegmentAndLabelTrackingWithEvent:(id)arg1 forSegmentAtIndex:(long long)arg2 withLabelRect:(struct CGRect)arg3;
- (void)mouseDown:(id)arg1;
- (void)_simulateClickInLabelView:(id)arg1 deferringPopUpsForAccessibility:(BOOL)arg2;
- (void)_beginToolbarEditingMode;
- (void)_endToolbarEditingMode;
- (void)_setNeedsModeConfiguration:(BOOL)arg1;
- (BOOL)_needsModeConfiguration;
- (void)_setNeedsViewerLayout:(BOOL)arg1;
- (BOOL)_needsViewerLayout;
- (BOOL)_heightIsFlexible;
- (BOOL)_widthIsFlexible;
- (BOOL)_labelOnlyShowsAsPopupMenu;
- (long long)_itemVisibilityPriority;
- (void)_itemChanged;
- (void)_itemEnabledStateChanged;
- (void)_itemChangedToolTip;
- (void)_itemLayoutChanged;
- (void)_itemChangedLabelOrPaletteLabel;
- (void)_menuFormRepresentationChanged;
@property(nonatomic) double forcibleFrameWidthForLayout; // @synthesize forcibleFrameWidthForLayout=_forcibleFrameWidthForLayout;
@property(nonatomic) double iconWidthForLayout; // @synthesize iconWidthForLayout=_iconWidthForLayout;
@property(nonatomic) double xOriginForLayout; // @synthesize xOriginForLayout=_xOriginForLayout;

@end

@interface _NSToolbarItemViewerLabelCellPopUpCell : NSPopUpButtonCell
{
    NSString *_realTitle;
    NSToolbarItemViewer *_itemViewer;
    struct CGSize _cachedOutputCellSize;
}

- (id)initTextCell:(id)arg1;
- (void)setItemViewer:(id)arg1;
- (id)itemViewer;
- (void)synchronizeTitleAndSelectedItem;
- (void)_setRealTitle:(id)arg1;
- (void)setFont:(id)arg1;
- (void)dealloc;
- (void)setTitle:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)beginUsingMenuFormRepresentation:(id)arg1;
- (void)finishUsingMenuRepresentation;
- (id)title;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (unsigned long long)alignment;
- (id)_sharedTextCell;
- (void)drawTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawRealTitleWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_setTextShadow:(BOOL)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (BOOL)_positionsMenuAsPullDown;
- (long long)indexOfSelectedItem;
- (struct CGPoint)_menuLocationForEvent:(id)arg1 inCellFrame:(struct CGRect)arg2 ofView:(id)arg3;
- (void)performClickWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface _NSToolbarItemViewerLabelView : NSControl
{
}

- (id)initWithFrame:(struct CGRect)arg1 text:(id)arg2;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (BOOL)acceptsFirstResponder;

@end

@interface NSEagerTrackingCell : NSCell
{
}

- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;

@end

@interface _NSToolbarPaletteItemViewerAccessibilityHelper : _NSToolbarItemViewerAccessibilityHelper
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityEnabledAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityHitTest:(struct CGPoint)arg1;

@end

@interface _NSToolbarSingleSegmentSegmentedViewItemViewerAccessibilityHelper : _NSToolbarButtonViewItemViewerAccessibilityHelper
{
}

- (id)realElement;

@end

@interface _NSToolbarSegmentedViewItemViewerAccessibilityHelper : _NSToolbarButtonViewItemViewerAccessibilityHelper
{
}

- (id)_accessibilityToolbarButtonElement;
- (BOOL)showsAccessibilityDescriptionInIconOnlyMode;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct CGPoint)arg1;

@end

@interface _NSToolbarSegmentedViewSegmentProxy : NSAccessibilityReparentingProxy
{
}

+ (id)segmentProxyFor:(id)arg1 parent:(id)arg2;
- (long long)index;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;

@end

@interface _NSToolbarButtonViewItemViewerAccessibilityHelper : _NSToolbarProxyItemViewerAccessibilityHelper
{
}

- (id)_accessibilityToolbarButtonElement;
- (id)initWithToolbarItemViewer:(id)arg1;
- (id)accessibilityRoleAttribute;

@end

@interface _NSToolbarButtonItemViewerAccessibilityHelper : _NSToolbarProxyItemViewerAccessibilityHelper
{
}

- (id)_accessibilityToolbarButtonElement;
- (id)initWithToolbarItemViewer:(id)arg1;
- (id)accessibilityRoleAttribute;

@end

@interface _NSToolbarProxyItemViewerAccessibilityHelper : _NSToolbarItemViewerAccessibilityHelper
{
    id _realElement;
}

- (void)dealloc;
- (id)realElement;
- (BOOL)showsAccessibilityDescriptionInIconOnlyMode;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityEnabledAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface _NSToolbarViewItemViewerAccessibilityHelper : _NSToolbarItemViewerAccessibilityHelper
{
}

- (id)accessibilityRoleAttribute;
- (id)accessibilityHitTest:(struct CGPoint)arg1;

@end

@interface _NSToolbarSeparatorAndSpaceItemViewerAccessibilityHelper : _NSToolbarItemViewerAccessibilityHelper
{
}

- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRoleAttribute;

@end

@interface _NSToolbarItemViewerAccessibilityHelper : NSObject
{
    NSToolbarItemViewer *_toolbarItemViewer;
    long long _configuration;
}

+ (id)accessibilityHelperForToolbarItemViewer:(id)arg1;
- (id)initWithToolbarItemViewer:(id)arg1;
- (void)dealloc;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityDescriptionAttribute;
- (id)accessibilityEnabledAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;

@end

@interface NSToolbarPoofAnimator : NSObject
{
    NSWindow *_poofWindow;
    NSPoofView *_poofWindowImageView;
    NSImage *_poofAnimFrames[5];
    double _nextPoofTime;
    long long _nextPoofFrame;
    BOOL _releasesAfterPoofing;
    NSDictionary *_callbackInfo;
    id _poofAnimatorReserved;
}

+ (void)runPoofAtPoint:(struct CGPoint)arg1 withSize:(struct CGSize)arg2 callbackInfo:(id)arg3;
+ (void)runPoofAtPoint:(struct CGPoint)arg1;
- (id)initAtPoint:(struct CGPoint)arg1 withSize:(struct CGSize)arg2 callbackInfo:(id)arg3;
- (void)dealloc;
- (void)setReleasesAfterPoofing:(BOOL)arg1;
- (void)setDragWindowImage:(id)arg1;
- (void)scheduleUpdate;
- (void)runPoof;
- (void)_doCallback;
- (void)_donePoofing;
- (void)updatePoofAnimation;

@end

@interface NSPoofView : NSView
{
    NSImage *_image;
}

- (void)dealloc;
- (void)setImage:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSToolbarSeparatorItem : NSToolbarItem
{
    id _separatorItemReserved;
}

+ (id)itemIdentifier;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)arg1;
- (id)init;
- (BOOL)isSeparatorItem;
- (BOOL)_participatesInDefiningMinimumGridWidthForCustomizationPalette;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;

@end

@interface _NSToolbarSeparator : NSView
{
    BOOL _inPalette;
}

- (id)init;
- (void)setInPalette:(BOOL)arg1;
- (struct CGPoint)rasterize:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;

@end

@interface NSToolbarSpaceItem : NSToolbarItem
{
}

+ (id)itemIdentifier;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)arg1;
- (id)init;
- (BOOL)isSeparatorItem;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (BOOL)_emptyContents;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (unsigned long long)spaceItemSize;

@end

@interface _NSToolbarSpace : NSView
{
    NSToolbarSpaceItem *_spaceItem;
    BOOL _inPalette;
    NSImage *_configPanelImage;
}

- (id)initWithSize:(struct CGSize)arg1 forSpaceItem:(id)arg2;
- (void)setInPalette:(BOOL)arg1;
- (BOOL)inPalette;
- (BOOL)_drawsNothing;
- (BOOL)preservesContentDuringLiveResize;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface NSToolbarView : NSView
{
    NSToolbar *_toolbar;
    NSToolbarClippedItemsIndicator *_clipIndicator;
    NSClipView *_ivClipView;
    void *_lastEventProcessedForValidation;
    NSMutableArray *_layoutOrderedItemViewers;
    NSMutableArray *_toolbarOrderedItemViewers;
    NSToolbarItem *_dragDataItem;
    long long _dragDataItemViewerStartIndex;
    BOOL _dragDataItemShouldBeRemoved;
    NSToolbarItem *_dragDataInsertionGapItem;
    struct CGPoint _dragDataLastPoint;
    BOOL _insertionAnimationRunning;
    struct CGPoint _halftonePhaseOverrideValue;
    NSToolbar *_actingPaletteTargetToolbar;
    long long _layoutEnabledCount;
    double _earliestDateToStartDragAnimation;
    struct __tbvFlags {
        unsigned int _layoutInProgress:1;
        unsigned int _sizingToFit:1;
        unsigned int _isEditing:1;
        unsigned int _inCustomizationMode:1;
        unsigned int _sourceDragMoves:1;
        unsigned int _enabledAsDragSrc:1;
        unsigned int _enabledAsDragDest:1;
        unsigned int _actingAsPalette:1;
        unsigned int _usePaletteLabels:1;
        unsigned int _validatesItems:1;
        unsigned int _forceItemsToBeMinSize:1;
        unsigned int _forceAllClicksToBeDrags:1;
        unsigned int _wrapsItems:1;
        unsigned int _useGridAlignment:1;
        unsigned int _autosizesToFitHorizontally:1;
        unsigned int transparentBackground:1;
        unsigned int _horizontalBaselineDrawingDisabled:1;
        unsigned int suppressedClipIndicatorDuringAnimation:1;
        unsigned int weStartedDrag:1;
        unsigned int dragOptimizationOn:1;
        unsigned int dragIsInsideView:1;
        unsigned int insertionOptimizationShouldEndAfterUpdates:1;
        unsigned int wantsKeyboardLoop:1;
        unsigned int clipIndicatorWasFirstResponder:1;
        unsigned int scheduledDelayedValidateVisibleItems:1;
        unsigned int canDeferDelayedValidateVisibleItems:1;
        unsigned int skippedLayoutWhileDisabled:1;
        unsigned int shouldHideAfterKeyboardHotKeyEvent:1;
        unsigned int windowWantsSquareToolbarSelectionHighlight:1;
        unsigned int RESERVED:3;
    } _tbvFlags;
    NSResponder *_windowPriorFirstResponder;
    id toolbarViewReserved;
}

+ (id)newViewForToolbar:(id)arg1 inWindow:(id)arg2 attachedToEdge:(unsigned long long)arg3;
+ (id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2;
+ (id)defaultMenu;
- (const struct __NSToolbarMetrics *)_metrics;
- (void)adjustToWindow:(id)arg1 attachedToEdge:(unsigned long long)arg2;
- (void)_toolbarViewCommonInit;
- (id)privateDragTypes;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_toolbarDidChangeDraggedTypesFrom:(id)arg1 to:(id)arg2;
- (BOOL)_inTexturedWindow;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)dealloc;
- (void)_setAllItemsTransparentBackground:(BOOL)arg1;
- (void)_setForceItemsToBeMinSize:(BOOL)arg1;
- (void)_setAllowsMultipleRows:(BOOL)arg1;
- (void)_setDrawsBaseline:(BOOL)arg1;
- (id)_validDestinationForDragsWeInitiate;
- (void)_setWantsKeyboardLoop:(BOOL)arg1;
- (BOOL)_wantsKeyboardLoop;
- (void)_setActsAsPalette:(BOOL)arg1 forToolbar:(id)arg2;
- (BOOL)_isPaletteView;
- (void)setToolbar:(id)arg1;
- (id)toolbar;
- (Class)_toolbarItemViewerClass;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)visibleItems;
- (id)clippedItems;
- (long long)numberOfItems;
- (void)_selectToolbarItemViewerInDirection:(long long)arg1 relativeToView:(id)arg2;
- (void)_selectToolbarItemViewerPreviousToView:(id)arg1;
- (void)_selectToolbarItemViewerAfterView:(id)arg1;
- (void)_swapToolbarItemViewerInDirection:(long long)arg1 relativeToView:(id)arg2;
- (void)_swapToolbarItemViewerPreviousToView:(id)arg1;
- (void)_swapToolbarItemViewerAfterView:(id)arg1;
- (BOOL)_clipIndicatorIsShowing;
- (id)_clipIndicator;
- (void)_suppressClipIndicatorDuringAnimation;
- (void)_unsuppressClipIndicatorAfterAnimationIfNecessary;
- (struct CGRect)_validItemViewerBoundsAssumingClipIndicatorNotShown;
- (struct CGRect)_validItemViewerBounds;
- (struct CGRect)_validItemViewerBoundsAssumingClipIndicatorShown;
- (void)_forceResetTexturedWindowDragMargins;
- (void)_beginTempEditingMode;
- (void)_beginCustomizationMode;
- (void)_endCustomizationMode;
- (BOOL)_isInCustomizationMode;
- (BOOL)_isInConfigurationMode;
- (BOOL)_isEditing;
- (BOOL)_shouldStealHitTestForCurrentEvent;
- (id)_findHitItemViewer:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)resetToolbarToDefaultConfiguration:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)_printVerboseDebuggingInformation:(id)arg1;
- (void)toggleKeepVisibleToolbarItem:(id)arg1;
- (void)removeToolbarItem:(id)arg1;
- (void)_addToolbarItemToToolbarFromMenuItem:(id)arg1;
- (BOOL)_mouseUpWithEvent:(id)arg1 forView:(id)arg2;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)arg1;
- (void)_drawForTransitionInWindow:(id)arg1 usingPatternPhase:(struct CGSize)arg2 inRect:(struct CGRect)arg3;
- (void)_windowChangedKeyState;
- (BOOL)_windowWantsSquareToolbarSelectionHighlight;
- (void)_setWindowWantsSquareToolbarSelectionHighlight:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_createClipIndicatorIfNecessary;
- (void)_setClipIndicatorItemsFromItemViewers:(id)arg1;
- (void)_adjustClipIndicatorPosition;
- (void)_syncItemSet;
- (void)_syncItemSetAndUpdateItemViewersWithSEL:(SEL)arg1 setNeedsModeConfiguration:(BOOL)arg2 sizeToFit:(BOOL)arg3 setNeedsDisplay:(BOOL)arg4 updateKeyLoop:(BOOL)arg5;
- (void)_setFrameSize:(struct CGSize)arg1;
- (id)_allItems;
- (id)_visibleItemViewers;
- (id)_clippedItemViewers;
- (void)_removeClipIndicatorFromSuperview;
- (void)_makeSureFirstResponderIsNotInInvisibleItemViewer;
- (void)_detatchNextAndPreviousForView:(id)arg1;
- (void)_detatchNextAndPreviousForAllSubviews;
- (void)_computeToolbarItemKeyboardLoop;
- (void)_computeToolbarItemKeyboardLoopIfNecessary;
- (void)_returnFirstResponderToWindowFromKeyboardHotKeyEvent;
- (id)_computePriorFirstResponder;
- (void)_makeFirstResponderForKeyboardHotKeyEvent;
- (void)viewDidMoveToSuperview;
- (void)_cycleWindows:(id)arg1;
- (id)_itemsFromItemViewers:(id)arg1;
- (id)_computeOrderedItemViewersOfType:(int)arg1 inRange:(struct _NSRange)arg2 resizeableOnly:(BOOL)arg3 excludePartitionItems:(BOOL)arg4;
- (id)_computeOrderedItemViewersOfType:(int)arg1;
- (id)_computeCommonItemViewers;
- (id)_computeCustomItemViewers;
- (id)_computeResizeableCustomItemViewersInRange:(struct _NSRange)arg1;
- (void)_makeSureItemViewersInArray:(id)arg1 areSubviews:(BOOL)arg2 from:(long long)arg3 to:(long long)arg4;
- (void)_distributeAvailableSpaceIfNecessary:(double)arg1 toFlexibleSizedItems:(id)arg2 lastItemIsRightAligned:(char *)arg3 undistributedWidth:(double *)arg4 ctm:(const struct CGAffineTransform *)arg5;
- (struct CGAffineTransform)_getPixelAligningTransformForLayout;
- (unsigned long long)_sizePartitioningSpacersInItemViewers:(id)arg1 startingAtPoint:(struct CGPoint)arg2 withInterItemViewerSpacing:(double)arg3 withCTM:(const struct CGAffineTransform *)arg4 withRemainingUndistributedWidth:(double *)arg5;
- (long long)_layoutRowStartingAtIndex:(long long)arg1 withFirstItemPosition:(struct CGPoint)arg2 gridWidth:(long long)arg3 allowOverflowMenu:(BOOL)arg4 validWidthWithClipIndicator:(double)arg5 withoutClip:(double)arg6;
- (struct CGSize)_minimumSizeEnsuringVisibilityOfItem:(id)arg1;
- (id)description;
- (void)_setNeedsModeConfiguration:(BOOL)arg1 itemViewers:(id)arg2;
- (void)_setNeedsViewerLayout:(BOOL)arg1 itemViewers:(id)arg2;
- (void)_setNeedsDisplayForItemViewerSelection:(id)arg1;
- (void)_setNeedsDisplayForItemIdentifierSelection:(id)arg1;
- (void)_fullLayout;
- (void)_disableLayout;
- (void)_enableLayout;
- (BOOL)_layoutEnabled;
- (void)_collectItemViewerFrames:(id)arg1 intoRectArray:(struct CGRect *)arg2;
- (void)_setNeedsDisplayIfTopLeftChanged;
- (BOOL)preservesContentDuringLiveResize;
- (void)_setNeedsDisplayForItemViewers:(id)arg1 movingFromFrames:(struct CGRect *)arg2 toFrames:(struct CGRect *)arg3;
- (double)_maximumItemViewerHeight;
- (void)_layoutDirtyItemViewersAndTileToolbar;
- (void)_endLiveResize;
- (void)_sizeToFit:(BOOL)arg1;
- (void)_sizeVerticalyToFit;
- (void)_sizeHorizontallyToFit;
- (void)_sizeHorizontallyToFitWidth:(double)arg1;
- (double)_distanceFromBaseToTopOfWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_noteToolbarModeChangedAndUpdateItemViewers:(SEL)arg1;
- (void)_noteToolbarSizeModeChanged;
- (void)_noteToolbarDisplayModeChanged;
- (void)_noteToolbarLayoutChanged;
- (void)_noteToolbarShowsBaselinePropertyChanged;
- (void)viewWillMoveToWindow:(id)arg1;
- (unsigned long long)_autovalidationTypeForTypedCharacters:(id)arg1;
- (unsigned long long)_autovalidationTypeForEvent:(id)arg1;
- (void)_cancelAnyDelayedValidation;
- (void)_scheduleDelayedValidationAfterTime:(double)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)_doDelayedValidateVisibleToolbarItems;
- (void)_validateVisibleToolbarItems;
- (void)_windowIsAddingOrRemovingSheet:(id)arg1;

@end

@interface _NSToolbarViewClipView : NSClipView
{
}

- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface _NSToolbarExternalDragItem : NSToolbarItem
{
    NSArray *externalItems;
}

- (void)dealloc;
@property(copy, nonatomic) NSArray *externalItems; // @synthesize externalItems;

@end

@interface _NSToolbarGapItem : NSToolbarItem
{
    double resizeWeight;
    BOOL resizeWeightSharedWithDuplicateItems;
}

- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
- (void)configureAsProxyForItem:(id)arg1 usingMetrics:(const struct __NSToolbarMetrics *)arg2;
- (double)_resizeWeight;
- (BOOL)_resizeWeightSharedWithDuplicateItems;

@end

@interface NSTracer : NSObject
{
    NSMapTable *flavorPriorityMap;
    id reporter;
    SEL reporterSelector;
    unsigned long long defaultPriority;
}

+ (void)initialize;
+ (id)sharedTracer;
+ (void)traceWithFlavor:(id)arg1 priority:(unsigned long long)arg2 format:(id)arg3;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setDefaultPriority:(unsigned long long)arg1;
- (void)setPriority:(unsigned long long)arg1 forFlavor:(id)arg2;
- (unsigned long long)priorityForFlavor:(id)arg1;
- (void)setReporter:(id)arg1 selector:(SEL)arg2;
- (void)traceWithFlavor:(id)arg1 priority:(unsigned long long)arg2 format:(id)arg3;
- (void)traceWithFlavor:(id)arg1 priority:(unsigned long long)arg2 format:(id)arg3 arguments:(CDStruct_19b88e92 [1])arg4;

@end

@interface NSTreeController : NSObjectController
{
    id _treeControllerReserved1;
    NSArray *_modelObservingKeyPaths;
    id _treeStructureObservers;
    id _arrangedObjects;
    id _rootNode;
    id _selectionIndexPaths;
    struct __treeControllerFlags {
        unsigned int _avoidsEmptySelection:1;
        unsigned int _preservesSelection:1;
        unsigned int _selectsInsertedObjects:1;
        unsigned int _explicitlyCannotInsert:1;
        unsigned int _explicitlyCannotInsertChild:1;
        unsigned int _explicitlyCannotAddChild:1;
        unsigned int _alwaysUsesMultipleValuesMarker:1;
        unsigned int _observingThroughArrangedObjects:1;
        unsigned int _mutatingNodes:1;
        unsigned int _performingFetch:1;
        unsigned int _skipSortingAfterFetch:1;
        unsigned int _usesIdenticalComparisonOfModelObjects:1;
        unsigned int _reservedTreeController:20;
    } _treeControllerFlags;
    NSArray *_selectedObjects;
    NSString *_childrenKeyPath;
    NSString *_countKeyPath;
    NSString *_leafKeyPath;
    NSArray *_sortDescriptors;
}

+ (id)_nonAutomaticObservingKeys;
+ (id)_keyValueBindingAccessPoints;
+ (id)_modelAndProxyKeys;
+ (Class)_modelObservingTrackerClass;
- (id)_copySelectedObjectLineages;
- (void)_prepareControllerTree;
- (void)_init;
- (void)_dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)awakeFromNib;
- (id)_multipleValuesObjectAtIndexPath:(id)arg1;
- (id)_controllerKeys;
- (id)_modelObservingKeyPaths;
- (BOOL)_registerObservingForAllModelObjects;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)_startObservingSelectionIfNecessary;
- (void)_stopObservingSelectionIfNecessary;
- (void)_stopObservingNodeIfNecessary:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)createChildNodeForRepresentedObject:(id)arg1;
- (id)arrangedObjects;
- (void)_prepareContentWithNewObject:(id)arg1;
- (void)rearrangeObjects;
- (void)_changeEditable:(BOOL)arg1;
- (void)_setExplicitlyCannotAdd:(BOOL)arg1 insert:(BOOL)arg2 remove:(BOOL)arg3;
- (BOOL)_explicitlyCannotAddChild;
- (BOOL)_explicitlyCannotInsertChild;
- (BOOL)_explicitlyCannotInsert;
- (BOOL)_skipSorting;
- (BOOL)_mutatingNodes;
- (BOOL)usesIdenticalComparisonOfModelObjects;
- (void)setUsesIdenticalComparisonOfModelObjects:(BOOL)arg1;
- (void)setChildrenKeyPath:(id)arg1;
- (id)childrenKeyPath;
- (void)setCountKeyPath:(id)arg1;
- (id)countKeyPath;
- (void)setLeafKeyPath:(id)arg1;
- (id)leafKeyPath;
- (id)childrenKeyPathForNode:(id)arg1;
- (id)countKeyPathForNode:(id)arg1;
- (id)leafKeyPathForNode:(id)arg1;
- (void)setAvoidsEmptySelection:(BOOL)arg1;
- (BOOL)avoidsEmptySelection;
- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)arg1;
- (BOOL)alwaysUsesMultipleValuesMarker;
- (void)setPreservesSelection:(BOOL)arg1;
- (BOOL)preservesSelection;
- (void)setSelectsInsertedObjects:(BOOL)arg1;
- (BOOL)selectsInsertedObjects;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (void)_setContentInBackground:(id)arg1;
- (void)setContent:(id)arg1;
- (id)content;
- (id)_rootNode;
- (unsigned long long)_rootContentCount;
- (void)insertObjects:(id)arg1 atArrangedObjectIndexPaths:(id)arg2;
- (void)insertObject:(id)arg1 atArrangedObjectIndexPath:(id)arg2;
- (void)addObject:(id)arg1;
- (void)addChildObject:(id)arg1;
- (BOOL)canAdd;
- (BOOL)canAddChild;
- (BOOL)canInsert;
- (BOOL)canInsertChild;
- (BOOL)canRemove;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)newObject;
- (id)newChildObject;
- (void)_executeAdd:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)add:(id)arg1;
- (void)_executeAddChild:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)addChild:(id)arg1;
- (id)_additionIndexPathAppendChildIndex:(BOOL)arg1;
- (id)_insertionIndexPathAppendChildIndex:(BOOL)arg1;
- (void)_insertChildOrSibling:(BOOL)arg1;
- (void)_executeInsert:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)insert:(id)arg1;
- (void)_executeInsertChild:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)insertChild:(id)arg1;
- (void)_insertObject:(id)arg1 atArrangedObjectIndexPath:(id)arg2 objectHandler:(id)arg3;
- (void)_removeObjectsAtArrangedObjectIndexPaths:(id)arg1 objectHandler:(id)arg2;
- (void)removeObjectsAtArrangedObjectIndexPaths:(id)arg1;
- (void)removeObjectAtArrangedObjectIndexPath:(id)arg1;
- (void)remove:(id)arg1;
- (void)removeObject:(id)arg1;
- (BOOL)_selectObjectsAtIndexPathsNoCopy:(id)arg1 avoidsEmptySelection:(BOOL)arg2 sendObserverNotifications:(BOOL)arg3;
- (void)_willChangeValuesForArrangedKeys:(BOOL)arg1 objectKeys:(BOOL)arg2 indexPathKeys:(BOOL)arg3;
- (void)_didChangeValuesForArrangedKeys:(BOOL)arg1 objectKeys:(BOOL)arg2 indexPathKeys:(BOOL)arg3;
- (id)selectedNodes;
- (void)moveNode:(id)arg1 toIndexPath:(id)arg2;
- (void)moveNodes:(id)arg1 toIndexPaths:(id)arg2;
- (void)moveNodes:(id)arg1 toIndexPath:(id)arg2;
- (id)selectedObjects;
- (id)_multipleValueForKey:(id)arg1 atIndexPath:(id)arg2;
- (id)_multipleValueForKeyPath:(id)arg1 atIndexPath:(id)arg2;
- (id)_multipleMutableArrayValueForKey:(id)arg1 atIndexPath:(id)arg2;
- (id)_multipleMutableArrayValueForKeyPath:(id)arg1 atIndexPath:(id)arg2;
- (void)_setMultipleValue:(id)arg1 forKey:(id)arg2 atIndexPath:(id)arg3;
- (void)_setMultipleValue:(id)arg1 forKeyPath:(id)arg2 atIndexPath:(id)arg3;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (void)_invokeMultipleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 atIndexPath:(id)arg4;
- (BOOL)_validateMultipleValue:(id *)arg1 forKeyPath:(id)arg2 atIndexPath:(id)arg3 error:(id *)arg4;
- (BOOL)_validateSingleValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)_singleValueForKeyPath:(id)arg1 operationType:(long long)arg2;
- (id)_singleValueForKey:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (BOOL)_selectObjectsAtIndexPaths:(id)arg1 avoidsEmptySelection:(BOOL)arg2 sendObserverNotifications:(BOOL)arg3;
- (BOOL)setSelectionIndexPath:(id)arg1;
- (id)selectionIndexPath;
- (BOOL)setSelectionIndexPaths:(id)arg1;
- (id)selectionIndexPaths;
- (BOOL)addSelectionIndexPaths:(id)arg1;
- (void)_removeSelectionIndexPathsBelowNode:(id)arg1;
- (BOOL)removeSelectionIndexPaths:(id)arg1;
- (id)_singleMutableArrayValueForKeyPath:(id)arg1;

@end

@interface _NSControllerTreeProxy : NSObject <_NSBindingTree>
{
    id _controller;
}

- (id)initWithController:(id)arg1;
- (unsigned long long)countOfChildNodes;
- (id)childNodes;
- (unsigned long long)count;
- (unsigned long long)countForIndexPath:(id)arg1;
- (BOOL)isExpandableAtArrangedObjectIndexPath:(id)arg1;
- (id)nodeAtIndexPath:(id)arg1;
- (id)descendantNodeAtIndexPath:(id)arg1;
- (id)objectInChildNodesAtIndex:(unsigned long long)arg1;
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndexPath:(id)arg2;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndexPath:(id)arg3;
- (id)objectAtIndexPath:(id)arg1;
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 ofObjectAtIndexPath:(id)arg4;
- (BOOL)_validateValue:(id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndexPath:(id)arg3 error:(id *)arg4;

@end

@interface _NSControllerTreeProxyMutatorArray : _NSControllerArrayProxyMutatorArray
{
}

- (id)initWithTreeController:(id)arg1 keyPath:(id)arg2;
- (void)dealloc;
- (id)_referenceArray;
- (void)_performMutatorOperation:(long long)arg1 object:(id)arg2 index:(unsigned long long)arg3;

@end

@interface NSTreeDetailBinder : NSArrayDetailBinder
{
    struct __treeDetailBinderFlags {
        unsigned int _reservedTreeDetailBinder:32;
    } _treeDetailBinderFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)binderClassesSuperseded;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_handlesSelectAll;
- (void)_selectAllContent:(id)arg1 inDetailController:(id)arg2;

@end

@interface NSTypesetter : NSObject
{
    void *_reserved;
}

+ (void)initialize;
+ (BOOL)_usesATSTypesetter;
+ (long long)defaultTypesetterBehavior;
+ (long long)defaultStringDrawingTypesetterBehavior;
+ (id)sharedSystemTypesetterForBehavior:(long long)arg1;
+ (id)sharedSystemTypesetter;
+ (struct CGSize)printingAdjustmentInLayoutManager:(id)arg1 forNominallySpacedGlyphRange:(struct _NSRange)arg2 packedGlyphs:(const char *)arg3 count:(unsigned long long)arg4;
- (CDStruct_e7e3bfe6 *)_allocateAuxData;
- (CDStruct_e7e3bfe6 *)_getAuxData;
- (void)dealloc;
- (void)finalize;
- (BOOL)_forceOriginalFontBaseline;
- (void)_setForceOriginalFontBaseline:(BOOL)arg1;
- (unsigned long long)_getRemainingNominalParagraphRange:(struct _NSRange *)arg1 andParagraphSeparatorRange:(struct _NSRange *)arg2 charactarIndex:(unsigned long long)arg3 layoutManager:(id)arg4 string:(id)arg5;
- (void)_updateParagraphStyleCache:(id)arg1;
- (CDUnion_9d5d46db *)_lineFragmentRectForProposedRectArgs;
- (unsigned long long)_sweepDirectionForGlyphAtIndex:(long long)arg1;
- (BOOL)usesFontLeading;
- (void)setUsesFontLeading:(BOOL)arg1;
- (long long)typesetterBehavior;
- (void)setTypesetterBehavior:(long long)arg1;
- (float)hyphenationFactor;
- (void)setHyphenationFactor:(float)arg1;
- (double)lineFragmentPadding;
- (void)setLineFragmentPadding:(double)arg1;
- (id)substituteFontForFont:(id)arg1;
- (id)textTabForGlyphLocation:(double)arg1 writingDirection:(long long)arg2 maxLocation:(double)arg3;
- (BOOL)bidiProcessingEnabled;
- (void)setBidiProcessingEnabled:(BOOL)arg1;
- (float)tightenThresholdForTruncation;
- (void)setTightenThresholdForTruncation:(float)arg1;
- (void)setAttributedString:(id)arg1;
- (id)attributedString;
- (void)setParagraphGlyphRange:(struct _NSRange)arg1 separatorGlyphRange:(struct _NSRange)arg2;
- (struct _NSRange)paragraphGlyphRange;
- (struct _NSRange)paragraphSeparatorGlyphRange;
- (struct _NSRange)paragraphCharacterRange;
- (struct _NSRange)paragraphSeparatorCharacterRange;
- (unsigned long long)layoutParagraphAtPoint:(struct CGPoint *)arg1;
- (void)beginParagraph;
- (void)endParagraph;
- (void)beginLineWithGlyphAtIndex:(unsigned long long)arg1;
- (void)endLineWithGlyphRange:(struct _NSRange)arg1;
- (double)lineSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (double)paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (double)paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (id)layoutManager;
- (id)textContainers;
- (id)currentTextContainer;
- (id)currentParagraphStyle;
- (void)setHardInvalidation:(BOOL)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 forParagraphSeparatorGlyphRange:(struct _NSRange)arg3 atProposedOrigin:(struct CGPoint)arg4;
- (id)attributesForExtraLineFragment;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)arg1;
- (void)_layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 maxCharacterIndex:(unsigned long long)arg4 nextGlyphIndex:(unsigned long long *)arg5 nextCharacterIndex:(unsigned long long *)arg6;
- (void)layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 nextGlyphIndex:(unsigned long long *)arg4;
- (struct _NSRange)layoutCharactersInRange:(struct _NSRange)arg1 forLayoutManager:(id)arg2 maximumNumberOfLineFragments:(unsigned long long)arg3;
- (double)baselineOffsetInLayoutManager:(id)arg1 glyphIndex:(unsigned long long)arg2;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(char *)arg5 bidiLevels:(char *)arg6;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (void)substituteGlyphsInRange:(struct _NSRange)arg1 withGlyphs:(unsigned int *)arg2;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)setNotShownAttribute:(BOOL)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setDrawsOutsideLineFragment:(BOOL)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setBidiLevels:(const char *)arg1 forGlyphRange:(struct _NSRange)arg2;

@end

@interface NSUIHeartBeat : NSObject
{
    CDStruct_d41e72e8 _times;
    NSLock *_drawingThreadLock;
    NSLock *_blockLock;
    NSLock *_clientsLock;
    NSMutableSet *_clients;
    NSThread *_heartBeatThread;
    NSView *_currentView;
    struct {
        unsigned int _isDrawingLocked:1;
        unsigned int _isClientsChanged:1;
        unsigned int _lockedByClient:1;
        unsigned int _sessionIsActive:1;
        unsigned int _registeredForNotifications:1;
        unsigned int _pendingClientUnlock:1;
        unsigned int _queueState:2;
        unsigned int _reserved:24;
    } _hbFlags;
}

+ (void)initialize;
+ (id)sharedHeartBeat;
+ (double)heartBeatCycle;
+ (void)setHeartBeatCycle:(double)arg1;
+ (BOOL)isHeartBeatThread;
- (BOOL)_isSpinning;
- (BOOL)_isBlocked;
- (void)_heartBeatThread:(id)arg1;
- (void)_sessionDidBecomeActive;
- (void)_sessionDidResignActive;
- (void)_registerForSessionNotifications;
- (void)_unregisterForSessionNotifications;
- (id)init;
- (void)dealloc;
- (void)addHeartBeatView:(id)arg1;
- (void)removeHeartBeatView:(id)arg1;
- (double)birthDate;
- (void)updateHeartBeatState;
- (void)disableHeartBeating;
- (void)reenableHeartBeating:(BOOL)arg1;
- (BOOL)lockFocusForView:(id)arg1 inRect:(struct CGRect)arg2 needsTranslation:(BOOL)arg3;
- (void)unlockFocusInRect:(struct CGRect)arg1;

@end

@interface NSUserDefaultsController : NSController
{
    void *_reserved3;
    void *_reserved4;
    NSUserDefaults *_defaults;
    NSMutableDictionary *_valueBuffer;
    NSDictionary *_initialValues;
    struct __userDefaultsControllerFlags {
        unsigned int _sharedInstance:1;
        unsigned int _appliesImmediately:1;
        unsigned int _reservedUserDefaultsController:30;
    } _userDefaultsControllerFlags;
}

+ (id)sharedUserDefaultsController;
+ (id)_nonAutomaticObservingKeys;
+ (id)_keyValueBindingAccessPoints;
+ (id)_modelAndProxyKeys;
- (void)_init;
- (id)init;
- (id)initWithDefaults:(id)arg1 initialValues:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_dealloc;
- (id)description;
- (void)_setDefaults:(id)arg1;
- (id)defaults;
- (void)setInitialValues:(id)arg1;
- (id)initialValues;
- (id)_valueBuffer;
- (void)_applyValue:(id)arg1 forKey:(id)arg2 registrationDomain:(id)arg3;
- (void)_applyAllValuesFromValueBuffer;
- (void)setAppliesImmediately:(BOOL)arg1;
- (BOOL)appliesImmediately;
- (void)revert:(id)arg1;
- (void)_executeSave:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)save:(id)arg1;
- (BOOL)hasUnappliedChanges;
- (void)revertToInitialValues:(id)arg1;
- (id)_controllerKeys;
- (id)values;
- (id)_singleValueForKey:(id)arg1;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (BOOL)_isSharedUserDefaultsControllerProxy;
- (void)_setSharedUserDefaultsControllerProxy:(BOOL)arg1;

@end

@interface NSValueBinder : NSEditorBinder
{
    struct __valueBinderFlags {
        unsigned int _allowsEditingMultipleValuesSelection:1;
        unsigned int _continuouslyUpdatesValue:1;
        unsigned int _createsSortDescriptor:1;
        unsigned int _isEditing:1;
        unsigned int _useFormattedValue:1;
        unsigned int _ignoreShowValue:1;
        unsigned int _commitOrDiscardEditingInProgress:1;
        unsigned int _hasUncommittedChanges:1;
        unsigned int _revertBackToOriginalValue:1;
        unsigned int _applyObjectValueInProgress:1;
        unsigned int _disardEditingSheetInProgress:1;
        unsigned int _reservedValueBinder:21;
    } _valueBinderFlags;
    id _cachedObjectValue;
    id _cachedDisplayValue;
    id _sortDescriptorPrototype;
    NSString *_referenceBinding;
}

+ (void)initialize;
+ (id)_pluginProtocol;
+ (id)bindingsForObject:(id)arg1;
+ (id)bindingCategory;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_copyDetailsFromBinder:(id)arg1;
- (void)_dealloc;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (BOOL)_supportsMinAndMax;
- (BOOL)_isBooleanBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (id)availableBindings;
- (void)_setParameter:(id)arg1 forOption:(id)arg2 withBindingInfo:(id)arg3;
- (BOOL)_isReferenceBinding:(id)arg1;
- (BOOL)_valueClassIsSortableWithBinding:(id)arg1;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (Class)_valueClass;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)canApplyValueTransformer:(id)arg1 toBinding:(id)arg2;
- (BOOL)_cachedValuesAreValid;
- (void)_cacheObjectValue:(id)arg1;
- (id)_cachedObjectValue;
- (void)_cacheDisplayValue:(id)arg1;
- (id)_cachedDisplayValue;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1 errorEncountered:(char *)arg2 error:(id *)arg3;
- (id)updateInvalidatedObjectValue:(id)arg1 forObject:(id)arg2;
- (id)_formatter;
- (id)displayValueForObjectValue:(id)arg1;
- (id)objectValueForDisplayValue:(id)arg1;
- (id)_referenceBindingValue;
- (id)_referenceBindingValueAtIndex:(unsigned long long)arg1;
- (id)_referenceBindingValueAtIndexPath:(id)arg1;
- (id)validateObjectValue:(id)arg1;
- (id)_validateDisplayValue;
- (BOOL)_shouldAlwaysUpdateDisplayValue;
- (void)setAllowsEditingMultipleValuesSelection:(BOOL)arg1;
- (BOOL)allowsEditingMultipleValuesSelection;
- (void)setContinuouslyUpdatesValue:(BOOL)arg1;
- (BOOL)continuouslyUpdatesValue;
- (void)setCreatesSortDescriptor:(BOOL)arg1;
- (BOOL)createsSortDescriptor;
- (id)_referenceBinding;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)releaseConnectionWithSynchronizePeerBinders:(BOOL)arg1;
- (BOOL)_isExplicitlyNonEditable;
- (BOOL)objectValueSupportsEnabledState:(id)arg1;
- (BOOL)selectionSupportsEnabledState;
- (void)_adjustObject:(id)arg1 mode:(struct __NSKeyValueCodingControllerModeType)arg2 observedController:(id)arg3 observedKeyPath:(id)arg4 context:(void *)arg5 editableState:(char *)arg6 adjustState:(char *)arg7;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)updateOutlineColumnOutlineCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;
- (BOOL)supportsTableEditing;
- (int)_handleApplyValueError:(id)arg1 forBinding:(id)arg2 canRecoverFromErrors:(BOOL)arg3 handleErrors:(BOOL)arg4 typeOfAlert:(BOOL)arg5 discardEditingCallback:(SEL)arg6 otherCallback:(SEL)arg7 callbackContextInfo:(void *)arg8 didRunAlert:(char *)arg9;
- (int)_applyObjectValue:(id *)arg1 forBinding:(id)arg2 canRecoverFromErrors:(BOOL)arg3 handleErrors:(BOOL)arg4 typeOfAlert:(BOOL)arg5 discardEditingCallback:(SEL)arg6 otherCallback:(SEL)arg7 callbackContextInfo:(void *)arg8 didRunAlert:(char *)arg9;
- (void)_revertDisplayValueBackToOriginalValue:(void *)arg1;
- (BOOL)_handleApplyValueResult:(int)arg1 cachedValue:(id)arg2 displayValue:(id)arg3 objectValue:(id)arg4;
- (BOOL)applyDisplayedValueHandleErrors:(BOOL)arg1 typeOfAlert:(BOOL)arg2 canRecoverFromErrors:(BOOL)arg3 discardEditingCallback:(SEL)arg4 otherCallback:(SEL)arg5 callbackContextInfo:(void *)arg6 didRunAlert:(char *)arg7;
- (BOOL)_applyDisplayedValueIfHasUncommittedChangesWithHandleErrors:(BOOL)arg1 typeOfAlert:(BOOL)arg2 discardEditingCallback:(SEL)arg3 otherCallback:(SEL)arg4 callbackContextInfo:(void *)arg5 didRunAlert:(char *)arg6;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)_commitEditingDiscardEditingCallback:(CDStruct_f8f0024c *)arg1;
- (void)_commitEditingOtherCallback:(CDStruct_f8f0024c *)arg1;
- (BOOL)isEditing;
- (void)_startChanging;
- (void)_endChanging;
- (void)editorDidBeginEditing:(id)arg1;
- (void)editorDidEndEditing:(id)arg1;
- (BOOL)handleValidationError:(id)arg1 description:(id)arg2 inEditor:(id)arg3 errorUserInterfaceHandled:(char *)arg4;
- (void)_discardValidateAndCommitValue:(void *)arg1;
- (BOOL)validateAndCommitValueInEditor:(id)arg1 editingIsEnding:(BOOL)arg2 errorUserInterfaceHandled:(char *)arg3;
- (void)performAction:(id)arg1;
- (id)_defaultSortDescriptorPrototypeKey;
- (id)defaultSortDescriptorPrototypeForTableColumn:(id)arg1;
- (BOOL)_presentDiscardEditingAlertPanelWithError:(id)arg1 relatedToBinding:(id)arg2;
- (void)_presentDiscardEditingSheetWithError:(id)arg1 discardEditingCallback:(SEL)arg2 otherCallback:(SEL)arg3 callbackContextInfo:(void *)arg4 relatedToBinding:(id)arg5;
- (void)_didPresentDiscardEditingSheetWithRecovery:(BOOL)arg1 contextInfo:(CDStruct_4fdc8b6f *)arg2;

@end

@interface NSViewMultiClipDrawingHelper : NSObject
{
    NSView *_drawingView;
    NSArray *_rects;
    long long _currentDrawingIndex;
}

- (id)initWithDrawingView:(id)arg1 rects:(id)arg2;
- (void)dealloc;
- (void)drawViewInRect:(struct CGRect)arg1;
- (BOOL)isDrawingContentAtIndex:(long long)arg1;

@end

@interface NSFlippableView : NSView
{
    BOOL isFlipped;
    BOOL isOpaque;
}

+ (void)_initFlippableViewCacheLock;
+ (id)newFlipped:(BOOL)arg1;
- (void)dealloc;
- (BOOL)isFlipped;
- (void)setOpaque:(BOOL)arg1;
- (BOOL)isOpaque;

@end

@interface NSView : NSResponder <NSAnimatablePropertyContainer>
{
    struct CGRect _frame;
    struct CGRect _bounds;
    id _superview;
    id _subviews;
    NSWindow *_window;
    id _gState;
    id _frameMatrix;
    id _drawMatrix;
    id _dragTypes;
    _NSViewAuxiliary *_viewAuxiliary;
    struct __VFlags {
        unsigned int aboutToResize:1;
        unsigned int retainCountOverMax:1;
        unsigned int retainCount:6;
        unsigned int interfaceStyle1:1;
        unsigned int specialArchiving:1;
        unsigned int needsDisplayForBounds:1;
        unsigned int interfaceStyle0:1;
        unsigned int removingWithoutInvalidation:1;
        unsigned int needsBoundsChangeNote:1;
        unsigned int boundsChangeNotesSuspended:1;
        unsigned int focusChangeNotesSuspended:1;
        unsigned int needsFrameChangeNote:1;
        unsigned int frameChangeNotesSuspended:1;
        unsigned int noVerticalAutosizing:1;
        unsigned int newGState:1;
        unsigned int validGState:1;
        unsigned int needsDisplay:1;
        unsigned int wantsGState:1;
        unsigned int autoresizeSubviews:1;
        unsigned int autosizing:6;
        unsigned int rotatedOrScaledFromBase:1;
        unsigned int rotatedFromBase:1;
    } _vFlags;
    struct __VFlags2 {
        unsigned int nextKeyViewRefCount:14;
        unsigned int previousKeyViewRefCount:14;
        unsigned int isVisibleRect:1;
        unsigned int hasToolTip:1;
        unsigned int needsRealLockFocus:1;
        unsigned int menuWasSet:1;
    } _vFlags2;
}

+ (void)initialize;
+ (void)_setShowsAllDrawing:(BOOL)arg1;
+ (BOOL)_showsAllDrawing;
+ (id)new;
+ (unsigned long long)defaultFocusRingType;
+ (void)_enableScreenUpdates;
+ (id)defaultAnimationForKey:(id)arg1;
+ (id)focusView;
+ (id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2;
+ (Class)_dynamicToolTipManagerClass;
+ (id)defaultMenu;
- (BOOL)_canCacheVisibleRectValue;
- (void)_setDrawsOwnDescendants:(BOOL)arg1;
- (BOOL)_drawsOwnDescendants;
- (BOOL)_drawnByAncestor;
- (void)_recursiveDisplayDescendantsInRect:(struct CGRect)arg1;
- (void)_recursiveDisplaySelfAndDescendantsInRect:(struct CGRect)arg1;
- (struct CGRect)_focusRingVisibleRect;
- (void)_showKeyboardUILoop;
- (void)_showBorder;
- (void)_showDrawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)_recursiveGainedDescendantThatOverridesNeedsDisplay;
- (BOOL)_autoDrawConcurrently;
- (void)_commonAwake;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)_resetRefCount:(long long)arg1;
- (BOOL)_allowsContextMenus;
- (void)_deallocateGState;
- (void)_releaseBindingAdaptor;
- (void)_finalizeWithReferenceCounting;
- (void)_finalizeWithGC;
- (void)_finalize;
- (void)dealloc;
- (void)finalize;
- (void)_addToOrphanList;
- (id)_setWindow:(id)arg1;
- (id)window;
- (id)superview;
- (id)subviews;
- (BOOL)isDescendantOf:(id)arg1;
- (id)ancestorSharedWithView:(id)arg1;
- (id)opaqueAncestor;
- (id)_clipViewAncestor;
- (void)_setKeyboardFocusRingNeedsDisplayAroundPerimeter;
- (void)_drawFocusRingDebugAroundRect:(struct CGRect)arg1;
- (void)_setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1 force:(BOOL)arg2;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setFocusRingType:(unsigned long long)arg1;
- (unsigned long long)focusRingType;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_updateLayerMasksToBoundsFromView;
- (void)_updateLayerContentsGravityFromView;
- (void)didAddSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)addSubview:(id)arg1;
- (void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)_sortSublayersToMatchSubviews;
- (void)setSubviews:(id)arg1;
- (void)sortSubviewsUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)_recursiveGainedHiddenAncestorDuringUnarchiving;
- (void)_recursiveGainedHiddenAncestor;
- (void)_recursiveLostHiddenAncestor;
- (void)viewDidHide;
- (void)viewDidUnhide;
- (void)_setHidden:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (BOOL)isHidden;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (void)_insertMissingSubviewLayers;
- (void)_disableScreenUpdatesUntilRunLoop;
- (void)_recursiveGainedLayerTreeHostAncestorDuringUnarchiving;
- (void)_recursiveGainedLayerTreeHostAncestor;
- (void)_recursiveClearLayerBacked;
- (void)_recursiveLostLayerTreeHostAncestor;
- (long long)layerContentsRedrawPolicy;
- (void)setLayerContentsRedrawPolicy:(long long)arg1;
- (long long)layerContentsPlacement;
- (void)setLayerContentsPlacement:(long long)arg1;
- (BOOL)wantsLayer;
- (void)setWantsLayer:(BOOL)arg1;
- (BOOL)isLayerTreeHost;
- (void)setLayerTreeHost:(BOOL)arg1;
- (id)animator;
- (id)animations;
- (void)setAnimations:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (void)_abortEditingIfFirstResponderIsASubview;
- (void)_endEditingIfFirstResponderIsASubview;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)_markRememberedEditingFirstResponderIfIsASubview;
- (id)_validRememberedEditingFirstResponder;
- (void)_makeRememberedOrNewEditingSubviewBecomeFirstResponder;
- (void)_clearRememberedEditingFirstResponder;
- (void)_replaceSubview:(id)arg1 with:(id)arg2 rememberAndResetEditingFirstResponder:(BOOL)arg3 abortEditingIfNecessary:(BOOL)arg4;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (id)_setSuperview:(id)arg1;
- (id)_addSubview:(id)arg1;
- (id)_removeSubview:(id)arg1;
- (id)_subviews;
- (void)_setPostsFocusChangedNotifications:(BOOL)arg1;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (void)_postFrameChangeNotification;
- (void)setPostsFrameChangedNotifications:(BOOL)arg1;
- (BOOL)postsFrameChangedNotifications;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (id)_setNoVerticalAutosizing:(BOOL)arg1;
- (BOOL)_noVerticalAutosizing;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_autoSizeView:(BOOL)arg1:(unsigned long long)arg2:(const struct CGRect *)arg3:(const struct CGRect *)arg4:(struct CGRect *)arg5;
- (void)setAutoresizesSubviews:(BOOL)arg1;
- (BOOL)autoresizesSubviews;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (unsigned long long)autoresizingMask;
- (void)_setNeedsDisplayInRectForLiveResize:(struct CGRect)arg1;
- (struct CGSize)_oldSizeDuringLiveResize;
- (struct CGPoint)_topLeftDuringLiveResize;
- (void)_invalidateForSubviewFrameChange:(struct CGRect)arg1 oldSize:(struct CGSize)arg2 oldTopLeft:(struct CGPoint)arg3;
- (struct CGRect)_oldBoundsDuringLiveResize;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_setNeedsDisplayIfTopLeftChanged;
- (void)_updateSizeAndLocation;
- (BOOL)_canPreserveContentDuringLiveResize;
- (void)_invalidateForLiveResize;
- (BOOL)preservesContentDuringLiveResize;
- (struct CGRect)rectPreservedDuringLiveResize;
- (void)getRectsExposedDuringLiveResize:(struct CGRect [4])arg1 count:(long long *)arg2;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (BOOL)_shouldTransformMatrix;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setFrameRotation:(double)arg1;
- (void)setFrameCenterRotation:(double)arg1;
- (double)frameCenterRotation;
- (struct CGRect)frame;
- (struct CGPoint)frameOrigin;
- (struct CGSize)frameSize;
- (struct CGSize)_minimumFrameSize;
- (double)frameRotation;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGPoint)boundsOrigin;
- (struct CGSize)boundsSize;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsRotation:(double)arg1;
- (void)translateOriginToPoint:(struct CGPoint)arg1;
- (void)scaleUnitSquareToSize:(struct CGSize)arg1;
- (void)rotateByAngle:(double)arg1;
- (struct CGRect)bounds;
- (double)boundsRotation;
- (BOOL)isFlipped;
- (BOOL)_inScaledWindow;
- (void)_setInScaledWindow:(BOOL)arg1;
- (id)_setRotatedFromBase:(BOOL)arg1;
- (id)_setRotatedOrScaledFromBase:(BOOL)arg1;
- (BOOL)isRotatedFromBase;
- (BOOL)isRotatedOrScaledFromBase;
- (BOOL)isOpaque;
- (void)setAlphaValue:(double)arg1;
- (double)alphaValue;
- (void)setBackgroundFilters:(id)arg1;
- (id)backgroundFilters;
- (void)setCompositingFilter:(id)arg1;
- (id)compositingFilter;
- (void)setContentFilters:(id)arg1;
- (id)contentFilters;
- (void)setShadow:(id)arg1;
- (id)shadow;
- (id)_drawMatrix;
- (id)_computeBounds;
- (BOOL)_convertPointFromSuperview:(struct CGPoint *)arg1 test:(BOOL)arg2;
- (struct CGPoint)_convertPointToSuperview:(struct CGPoint)arg1;
- (struct CGRect)_convertRectFromSuperview:(struct CGRect)arg1 test:(BOOL)arg2;
- (struct CGRect)_convertRectToSuperview:(struct CGRect)arg1;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 fromAncestor:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 toAncestor:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 fromView:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGRect)_convertRect:(struct CGRect)arg1 fromAncestor:(id)arg2;
- (struct CGRect)_convertRect:(struct CGRect)arg1 toAncestor:(id)arg2;
- (struct CGRect)centerScanRect:(struct CGRect)arg1;
- (struct CGPoint)_centerScanPoint:(struct CGPoint)arg1;
- (id)_crackRect:(struct CGRect *)arg1;
- (id)_crackPoint:(struct CGPoint *)arg1;
- (id)_crackSize:(struct CGSize *)arg1;
- (BOOL)_isPixelAlignedInWindow;
- (struct CGPoint)convertPointToBase:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromBase:(struct CGPoint)arg1;
- (struct CGSize)convertSizeToBase:(struct CGSize)arg1;
- (struct CGSize)convertSizeFromBase:(struct CGSize)arg1;
- (struct CGRect)convertRectToBase:(struct CGRect)arg1;
- (struct CGRect)convertRectFromBase:(struct CGRect)arg1;
- (BOOL)canDrawConcurrently;
- (void)setCanDrawConcurrently:(BOOL)arg1;
- (BOOL)canDraw;
- (BOOL)needsDisplay;
- (BOOL)_hasgState;
- (long long)gState;
- (void)allocateGState;
- (void)releaseGState;
- (void)_invalidateResourceForGraphicsContext:(id)arg1;
- (void)setUpGState;
- (void)renewGState;
- (id)_focusInto:(id)arg1 withClip:(BOOL)arg2;
- (id)_gatherFocusStateInto:(id)arg1 upTo:(id)arg2 withContext:(id)arg3;
- (void)_focusFromView:(id)arg1 withContext:(id)arg2;
- (void)lockFocus;
- (BOOL)lockFocusIfCanDraw;
- (BOOL)lockFocusIfCanDrawInContext:(id)arg1;
- (void)unlockFocus;
- (BOOL)_lockFocusNoRecursion;
- (void)_unlockFocusNoRecursion;
- (void)_postFocusChangedNotification;
- (void)_recursiveRecomputeToolTips;
- (id)_invalidateGStatesForTree;
- (id)_invalidateFocus;
- (struct CGRect)visibleRect;
- (struct CGRect)_visibleRectIgnoringViewsAbove:(id)arg1;
- (struct CGRect)_visibleRectInWindowDisregardingHiddenViews;
- (BOOL)_canOptimizeDrawing;
- (BOOL)_optimizedRectFill:(const struct CGRect *)arg1 gray:(double)arg2;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct CGRect)arg1;
- (BOOL)_shouldLiveResizeUseCachedImage;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_needsRedrawBeforeFirstLiveResizeCache;
- (void)_setNeedsRedrawBeforeFirstLiveResizeCache:(BOOL)arg1;
- (BOOL)_liveResizeCachedImageIsValid;
- (struct CGRect)_liveResizeCacheableBounds;
- (struct CGRect)_liveResizeCachedBounds;
- (id)_liveResizeCachedImage;
- (void)_releaseLiveResizeCachedImage;
- (void)_invalidateLiveResizeCachedImage;
- (void)_getRidOfCacheAndMarkYourselfAsDirty;
- (void)_captureVisibleIntoLiveResizeCache;
- (void)_drawLiveResizeCachedImage;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (BOOL)inLiveResize;
- (BOOL)_inLiveResize;
- (void)_setLiveResize:(BOOL)arg1;
- (void)_startLiveResizeAsTopLevel;
- (void)_endLiveResizeAsTopLevel;
- (void)_startLiveResizeCacheOK:(id)arg1;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (id)_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:(id)arg1;
- (BOOL)_drawRectIfEmpty;
- (BOOL)_drawRectIfEmptyWhenSubviewsCoverDirtyRect:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 liveResizeFill:(struct CGRect)arg2:(struct CGRect)arg3:(struct CGRect)arg4:(struct CGRect)arg5 cacheCoveredArea:(struct CGRect)arg6;
- (void)_drawRect:(struct CGRect)arg1 liveResizeCacheCoveredArea:(struct CGRect)arg2;
- (id)_multiClipDrawingHelper;
- (BOOL)_isDrawingMultiClippedContentAtIndex:(long long)arg1;
- (id)_rectsForMultiClippedContentDrawing;
- (BOOL)_drawAsMultiClippedContentInRect:(struct CGRect)arg1;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (struct CGRect)_dirtyRect;
- (void)_lightWeightRecursiveDisplayInRect:(struct CGRect)arg1;
- (BOOL)_displayingAllDirty;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (void)_propagateDownNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_drawOverlayRectSet:(id)arg1;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (struct CGRect)overlayBounds;
- (void)drawOverlayRect:(struct CGRect)arg1;
- (void)_sendViewWillDrawInRect:(struct CGRect)arg1 clipRootView:(id)arg2 suppressRecursion:(BOOL)arg3;
- (void)_displayRectIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3;
- (void)_recursiveTickleNeedsDisplay;
- (void)_propagateDirtyRectsToOpaqueAncestors;
- (BOOL)mouseDownCanMoveWindow;
- (void)setAcceptsTouchEvents:(BOOL)arg1;
- (BOOL)acceptsTouchEvents;
- (void)setWantsRestingTouches:(BOOL)arg1;
- (BOOL)wantsRestingTouches;
- (void *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)displayIfNeeded;
- (void)display;
- (void)displayIfNeededInRect:(struct CGRect)arg1;
- (void)displayRect:(struct CGRect)arg1;
- (void)displayIfNeededIgnoringOpacity;
- (void)displayIgnoringOpacity;
- (void)displayIfNeededInRectIgnoringOpacity:(struct CGRect)arg1;
- (void)displayRectIgnoringOpacity:(struct CGRect)arg1;
- (void)displayRectIgnoringOpacity:(struct CGRect)arg1 inContext:(id)arg2;
- (void)viewWillDraw;
- (void)drawRect:(struct CGRect)arg1;
- (void)getRectsBeingDrawn:(const struct CGRect **)arg1 count:(long long *)arg2;
- (BOOL)needsToDrawRect:(struct CGRect)arg1;
- (BOOL)wantsDefaultClipping;
- (id)_bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1 colorSpace:(id)arg2;
- (id)bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1;
- (void)cacheDisplayInRect:(struct CGRect)arg1 toBitmapImageRep:(id)arg2;
- (double)backgroundGray;
- (void)scrollPoint:(const struct CGPoint *)arg1 fromView:(id)arg2;
- (void)_scrollPoint:(const struct CGPoint *)arg1 fromView:(id)arg2;
- (void)scrollPoint:(struct CGPoint)arg1;
- (BOOL)scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (BOOL)_scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (BOOL)autoscroll:(id)arg1;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (void)invalidate:(struct CGRect)arg1;
- (void)scrollRect:(struct CGRect)arg1 by:(struct CGSize)arg2;
- (void)translateRectsNeedingDisplayInRect:(struct CGRect)arg1 by:(struct CGSize)arg2;
- (id)_nextResponderForEvent:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)mouse:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (id)viewWithTag:(long long)arg1;
- (long long)tag;
- (id)_recursiveFindDefaultButtonCell;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)_shouldBeTreatedAsInkEventInInactiveWindow:(id)arg1;
- (void)_setDrawDelegate:(id)arg1;
- (id)_drawDelegate;
- (void)_updateDrawDelegateForAlphaValue;
- (BOOL)_drawView:(id)arg1;
- (void)addCursorRect:(struct CGRect)arg1 cursor:(id)arg2;
- (void)removeCursorRect:(struct CGRect)arg1 cursor:(id)arg2;
- (void)discardCursorRects;
- (void)cursorUpdate:(id)arg1;
- (void)resetCursorRects;
- (id)_resetCursorRects;
- (long long)addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4;
- (void)_removeTrackingRectTag:(long long)arg1;
- (void)removeTrackingRect:(long long)arg1;
- (void)addTrackingArea:(id)arg1;
- (void)removeTrackingArea:(id)arg1;
- (id)trackingAreas;
- (void)updateTrackingAreas;
- (BOOL)shouldDrawColor;
- (id)enclosingScrollView;
- (void)_postBoundsChangeNotification;
- (void)setPostsBoundsChangedNotifications:(BOOL)arg1;
- (BOOL)postsBoundsChangedNotifications;
- (long long)compareGeometry:(id)arg1;
- (void)_primitiveSetDefaultNextKeyView:(id)arg1;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_setDefaultKeyViewLoop;
- (void)_recursiveEnsureSubviewNextKeyViewsAreSubviewsOf:(id)arg1;
- (void)_ensureSubviewNextKeyViewsAreSubviews;
- (id)_editingFirstResponderIfIsASubview;
- (id)_findLastViewInKeyViewLoopStartingAtView:(id)arg1;
- (id)_findLastViewInKeyViewLoop;
- (void)_prepareForDefaultKeyLoopComputation;
- (void)_concludeDefaultKeyLoopComputation;
- (BOOL)_ignoreForKeyViewLoop;
- (void)_setIgnoreForKeyViewLoop:(BOOL)arg1;
- (BOOL)_isAncestorOfViewIdenticalTo:(void *)arg1;
- (BOOL)_isAncestorOf:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (void)_primitiveSetPreviousKeyView:(id)arg1;
- (void)_primitiveSetNextKeyView:(id)arg1;
- (void)setNextKeyView:(id)arg1;
- (id)nextKeyView;
- (id)previousKeyView;
- (void)_removeNextPointersToMe;
- (void)_removePreviousPointersToMe;
- (void)_removeFromKeyViewLoop;
- (void)_recursiveBreakKeyViewLoop;
- (void)_recursiveGatherAllKeyViewCandidatesInArray:(id)arg1;
- (id)nextValidKeyView;
- (id)previousValidKeyView;
- (BOOL)canBecomeKeyView;
- (id)_dynamicToolTipManager;
- (void)_setDynamicToolTipsEnabled:(BOOL)arg1;
- (BOOL)_dynamicToolTipsEnabled;
- (void)scrollWheel:(id)arg1;
- (void)_delayedEnableRevealoverComputationAfterScrollWheel:(id)arg1;
- (void)_setRevealoversDirty:(BOOL)arg1;
- (void)_setWantsRevealovers:(BOOL)arg1;
- (BOOL)_wantsRevealovers;
- (BOOL)_shouldComputeRevealovers;
- (void)_recursiveWindowDidEnableToolTipCreationAndDisplay;
- (void)_removeAllRevealovers;
- (void)_invalidateAllRevealovers;
- (void)_toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)arg1 adding:(BOOL)arg2;
- (id)_revealoverInfoForCell:(id)arg1 cellRect:(struct CGRect)arg2;
- (long long)_addToolTipRect:(struct CGRect)arg1 displayDelegate:(id)arg2 displayInfo:(id)arg3;
- (void)_addRevealoverIfNecessaryForCell:(id)arg1 cellRect:(struct CGRect)arg2;
- (struct CGRect)_toolTipRectForCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)view:(id)arg1 customToolTip:(long long)arg2 drawInView:(id)arg3 displayInfo:(id)arg4;
- (struct CGRect)view:(id)arg1 customToolTip:(long long)arg2 frameForToolTipWithDisplayInfo:(id)arg3;
- (BOOL)view:(id)arg1 customToolTip:(long long)arg2 fadeOutAllowedForToolTipWithDisplayInfo:(id)arg3;
- (void)_setHasToolTip:(BOOL)arg1;
- (BOOL)_hasToolTip;
- (void)setToolTip:(id)arg1;
- (id)toolTip;
- (long long)addToolTipRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3;
- (void)removeToolTip:(long long)arg1;
- (void)removeAllToolTips;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_finishedMakingConnections;
- (void)interpretKeyEvents:(id)arg1;
- (void)setMenu:(id)arg1;
- (id)menu;
- (id)menuForEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (id)_contextMenuTargetForEvent:(id)arg1;
- (void)helpRequested:(id)arg1;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (id)_highlightColorForCell:(id)arg1;
- (BOOL)_usingAlternateHighlightColorForCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (id)inputContext;
- (id)layer;
- (void)setLayer:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (id)makeBackingLayer;

@end

@interface _NSViewAuxiliary : NSObject
{
    long long _retainCount;
    struct CGRect _dirtyRect;
    NSRegion *_dirtyRegion;
    NSMapTable *_gStateTable;
    NSTextInputContext *_inputContext;
    NSImage *_liveResizeCachedImage;
    struct CGRect _liveResizeCachedImageFrame;
    NSDate *_lastIdleLiveResizeInvalidation;
    struct {
        unsigned int _liveResizeImageCanBeCachedInStart:1;
        unsigned int _liveResizeActive:1;
        unsigned int _usesQuickdraw:1;
        unsigned int _hidden:1;
        unsigned int _hiddenOrHasHiddenAncestor:1;
        unsigned int _reallyNeedsDisplayForBounds:1;
        unsigned int _focusRingType:2;
        unsigned int _drawWithTintWhenHidden:1;
        unsigned int _impactsWindowMoving:1;
        unsigned int _drawsOwnDescendants:1;
        unsigned int _drawnByAncestor:1;
        unsigned int _setFrameWillAutoInvalidate:1;
        unsigned int _drawingByHIView:1;
        unsigned int _dynamicToolTipsEnabled:1;
        unsigned int _revealoverComputationEnabled:1;
        unsigned int _revealoverComputationNeeded:1;
        unsigned int _revealoversWanted:1;
        unsigned int _hasDrawDelegate:1;
        unsigned int _inScaledWindow:1;
        unsigned int _ignoreForKeyViewLoop:1;
        unsigned int _searchingForKeyViewReplacement:1;
        unsigned int _hasMultiClipDrawingHelper:1;
        unsigned int _displayingAllDirty:1;
        unsigned int _focusRingNeedsDisplayOutsideSelf:1;
        unsigned int _invalidTrackingRects:1;
        unsigned int _invalidCursorRects:1;
        unsigned int _wantsLayer:1;
        unsigned int _layerBacked:1;
        unsigned int _layerNeedsDisplay:1;
        unsigned int _dontSuppressLayerAnimation:1;
        unsigned int _canDrawConcurrently:1;
    } _vFlags2;
    struct {
        unsigned int _appkitManagesLayer:1;
        unsigned int _overridesVisibleRect:1;
        unsigned int _canCacheVisibleRectValue:1;
        unsigned int _cachedVisibleRectValueIsValid:1;
        unsigned int _layerTreeRendererSurfaceGone:1;
        unsigned int _layerTreeRendererNeedsUpdate:1;
        unsigned int _layerTreeRendererPaused:1;
        unsigned int _autoscalesBoundsToPixelUnits:1;
        unsigned int _detachingFromWindow:1;
        unsigned int _hasLayerBackedOpenGLContext:1;
        unsigned int _hasSurfaceBackedOpenGLContext:1;
        unsigned int _anySubviewExceedsSelfsBoundsBitIsValid:1;
        unsigned int _anySubviewExceedsSelfsBounds:1;
        unsigned int _drawsNothing:1;
        unsigned int _hasTiledBackingLayer:1;
        unsigned int _overridesNeedsDisplay:1;
        unsigned int _someDescendantMightOverrideNeedsDisplay:1;
        unsigned int _isWebClipView:1;
        unsigned int _checkedIfWebFrameView:1;
        unsigned int _isWebFrameView:1;
        unsigned int _layersFrozenForTransplant:1;
        unsigned int _anyDescendantCanDrawConcurrently:1;
        unsigned int _cachedShouldUseTrackingAreasForToolTips:1;
        unsigned int _shouldUseTrackingAreasForToolTips:1;
        unsigned int _layerContentsRedrawPolicy:3;
        unsigned int _layerContentsPlacement:4;
        unsigned int _explicitSurfaceColorSpace:1;
    } _vFlags3;
    struct {
        unsigned int _acceptsTouches:1;
        unsigned int _wantsRestingTouches:1;
        unsigned int _liveAnimationActive:1;
        unsigned int _surfaceSyncPostponed:1;
        unsigned int _needsRedrawBeforeFirstLiveResizeCache:1;
        unsigned int _viewDying:1;
        unsigned int _reserved:26;
    } _vFlags4;
    struct CGRect _visibleRectValue;
    _NSBindingAdaptor *_bindingAdaptor;
    struct _NSViewTrackingRect *_trackingRects;
    NSMenu *_menu;
    NSViewDynamicToolTipManager *_dynamicToolTipManager;
    struct CGPoint topLeft;
    struct CGRect _errorOffsets;
    struct CGSize oldSize;
    NSRegion *_regionInvalidatedDuringDisplay;
    _NSViewAnimator *_animator;
    NSDictionary *_animationsDictionary;
    struct _CAView *_layerTreeRenderer;
    CALayer *_layer;
    double _alphaValue;
    NSArray *_contentFilters;
    NSArray *_backgroundFilters;
    CIFilter *_compositingFilter;
    NSShadow *_shadow;
    NSSurface *_surface;
    NSColorSpace *_surfaceColorSpace;
    NSMutableSet *_trackingAreas;
    int _trackingAreasDirty;
    unsigned int _lastCAViewFlags;
    NSString *_userInterfaceItemIdentifier;
    struct {
        float last;
        float min;
        float max;
        float mean;
        float total;
        int count;
    } _drawRectTimeStats;
}

@end

@interface _NSViewGState : NSObject
{
    NSGraphicsContext *_graphicsContext;
    struct CGGState *_state;
    BOOL _isInvalid;
}

- (id)initWithGraphicsContext:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSViewAnimation : NSAnimation
{
    NSArray *_viewAnimations;
    struct __CFDictionary *_viewAnimationInfo;
    struct __CFDictionary *_windowAnimationInfo;
    unsigned long long _reserved4a;
    unsigned long long _reserved4b;
    unsigned long long _reserved4c;
    struct __vaFlags {
        unsigned int reserved:32;
    } _vaFlags;
    unsigned long long _reserved5;
    unsigned long long _reserved6;
    unsigned long long _reserved7;
    unsigned long long _reserved8;
}

- (id)initWithViewAnimations:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)viewAnimations;
- (void)setViewAnimations:(id)arg1;
- (void)setCurrentProgress:(float)arg1;
- (void)_startAnimation;
- (void)_freeViewAnimationInfo;
- (void)_stopAnimation:(int)arg1 withTimer:(void *)arg2;
- (BOOL)_drawView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSAnimationInfo : NSObject <NSCopying>
{
    struct CGRect _startFrame;
    struct CGRect _endFrame;
    int _effect;
    struct CGRect _lastFrame;
    NSBitmapImageRep *_viewImage;
    struct CGRect _viewImageAlignmentRect;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSViewDynamicToolTipManager : NSObject
{
    NSView *_view;
    struct __CFRunLoopTimer *_monitorMovementTimerRef;
    struct CGPoint _lastFixedMousePoint;
    struct CGRect _lastFixedMousePointToolTipRect;
    double _lastFixedMousePointTime;
    double _displayToolTipDelay;
    struct CGRect _toolTipTrackingRect;
    long long _toolTipTrackingRectTag;
    long long _visibleViewTrackingRectTag;
    unsigned int _trackingAreaAroundMouse:1;
    unsigned int _inQuickToolTipMode:1;
    unsigned int _mouseInsideVisibleTrackingRect:1;
    unsigned int _reserved:29;
}

+ (void)_registerDynamicToolTipManagerInstance:(id)arg1;
+ (void)_unregisterDynamicToolTipManagerInstance:(id)arg1;
+ (id)_dynamicToolTipManagerInstances;
+ (void)abortAllToolTips;
- (void)_removeToolTipTrackingRectIfNecessary;
- (void)_removeVisibleViewTrackingRectIfNecessary;
- (void)_abortAndRestartTracking:(BOOL)arg1;
- (void)abortToolTip;
- (id)initWithView:(id)arg1;
- (void)_removeAllTrackingRects;
- (void)detatchFromView;
- (void)dealloc;
- (void)finalize;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_viewVisibleBoundsChanged;
- (void)_threadsafeViewVisibleBoundsChanged;
- (void)_setupForWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)windowDidBecomeVisibleNotification:(id)arg1;
- (void)viewWillResetCursorRects;
- (void)viewDidEndLiveResize;
- (void)_appActivationChanged:(id)arg1;
- (void)_windowDidEnableToolTipCreationAndDisplay;
- (void)windowDidEnableToolTipCreationAndDisplay;
- (void)_windowChangedKeyState;
- (void)windowChangedKeyState;
- (struct CGRect)dynamicToolTipRectAtPoint:(struct CGPoint)arg1;
- (id)dynamicToolTipStringAtPoint:(struct CGPoint)arg1 trackingRect:(struct CGRect *)arg2;
- (id)dynamicToolTipRevealoverInfoAtPoint:(struct CGPoint)arg1 trackingRect:(struct CGRect *)arg2;
- (BOOL)isExpansionToolTipInView:(id)arg1 withDisplayInfo:(id)arg2;
- (void)view:(id)arg1 customToolTip:(long long)arg2 drawInView:(id)arg3 displayInfo:(id)arg4;
- (struct CGRect)view:(id)arg1 customToolTip:(long long)arg2 frameForToolTipWithDisplayInfo:(id)arg3;
- (BOOL)view:(id)arg1 customToolTip:(long long)arg2 fadeOutAllowedForToolTipWithDisplayInfo:(id)arg3;
- (void)_cancelCurrentToolTipWindowImmediately:(BOOL)arg1;
- (BOOL)_canShowToolTip;
- (BOOL)_shouldTrack;
- (int)_displayToolTipIfNecessaryIgnoringTime:(BOOL)arg1;
- (BOOL)_shouldRestartMovementTracking;
- (void)_markMovementTrackingInfo;
- (BOOL)_shouldShowRegularToolTipOnExpansionToolTip;
- (void)_cancelMovementTrackingTimer;
- (void)_disabledTrackingInNeighborhoodOfMouse;
- (void)_continueMovementTracking;
- (void)_restartMovementTracking;
- (struct CGPoint)_currentLocalMousePoint;

@end

@interface NSViewHierarchyLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (void)initialize;
+ (BOOL)_exceptionHandlingEnabled;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)_invalidate;
- (BOOL)_isValid;
- (id)retain;
- (void)release;
- (void)finalize;
- (void)lockForReadingWithExceptionHandler:(BOOL)arg1;
- (void)lockForReading;
- (BOOL)_lockForWriting:(BOOL)arg1 handler:(BOOL)arg2;
- (BOOL)tryLock;
- (BOOL)tryLockForWriting;
- (void)lockForWriting;
- (void)lockForWritingWithExceptionHandler:(BOOL)arg1;
- (BOOL)tryLockForWritingWithExceptionHandler:(BOOL)arg1;
- (void)lock;
- (void)unlock;
- (void)unlockTopMostReader;
- (id)description;

@end

@interface NSViewStateBinder : NSBinder
{
    struct __viewStateBinderFlags {
        unsigned int _ignoreUpdates:1;
        unsigned int _reservedViewStateBinder:31;
    } _viewStateBinderFlags;
}

+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)arg1;
- (void)_init;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (BOOL)_setValue:(id *)arg1 forBinding:(id)arg2 errorFallbackMessage:(id)arg3;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;

@end

@interface NSViewTemplate : NSView
{
    NSString *_className;
}

+ (void)initialize;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (id)initWithView:(id)arg1 className:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)finalize;
- (void)dealloc;
- (id)className;
- (void)setClassName:(id)arg1;
- (id)createRealObject;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSMoveHelper : NSObject
{
    struct __CFRunLoopTimer *unused;
    struct __CFRunLoop *unused1;
    double _startTime;
    double _totalTime;
    float _percent;
    void *_effect;
    NSWindow *_window;
    NSWindow *_sheet;
    struct CGRect _frameDelta;
    struct CGRect _startFrame;
    struct CGPoint _sheetOrigin;
    struct CGRect _sheetDelta;
    struct CGRect _sheetStartFrame;
    double _screenMaxY;
    double _sheetHeight;
    int _flavor;
    BOOL _done;
    BOOL _displayFlag;
    double _sheetEffectLeft;
    double _sheetEffectRight;
    double _sheetTime;
    double _sheetShift;
}

+ (double)_windowAnimationVelocity;
- (void *)_effect;
- (void)_releaseEffect;
- (void)dealloc;
- (void)finalize;
- (void)_resizeWindow:(id)arg1 toFrame:(struct CGRect)arg2 display:(BOOL)arg3;
- (double)_sheetShift;
- (void)_doAnimation;
- (void)_stopAnimation;

@end

@interface NSWindow : NSResponder <NSAnimatablePropertyContainer, NSUserInterfaceValidations>
{
    struct CGRect _frame;
    id _contentView;
    id _delegate;
    NSResponder *_firstResponder;
    NSView *_lastLeftHit;
    NSView *_lastRightHit;
    id _counterpart;
    id _fieldEditor;
    int _winEventMask;
    long long _windowNum;
    int _level;
    NSColor *_backgroundColor;
    id _borderView;
    unsigned char _postingDisabled;
    unsigned char _styleMask;
    unsigned char _flushDisabled;
    unsigned char _reservedWindow1;
    void *_cursorRects;
    void *_trectTable;
    NSImage *_miniIcon;
    int _unused;
    NSMutableSet *_dragTypes;
    NSURL *_representedURL;
    struct CGSize *_sizeLimits;
    NSString *_frameSaveName;
    NSSet *_regDragTypes;
    struct __wFlags {
        unsigned int backing:2;
        unsigned int visible:1;
        unsigned int isMainWindow:1;
        unsigned int isKeyWindow:1;
        unsigned int hidesOnDeactivate:1;
        unsigned int dontFreeWhenClosed:1;
        unsigned int oneShot:1;
        unsigned int deferred:1;
        unsigned int cursorRectsDisabled:1;
        unsigned int haveFreeCursorRects:1;
        unsigned int validCursorRects:1;
        unsigned int docEdited:1;
        unsigned int dynamicDepthLimit:1;
        unsigned int worksWhenModal:1;
        unsigned int limitedBecomeKey:1;
        unsigned int needsFlush:1;
        unsigned int viewsNeedDisplay:1;
        unsigned int ignoredFirstMouse:1;
        unsigned int repostedFirstMouse:1;
        unsigned int windowDying:1;
        unsigned int tempHidden:1;
        unsigned int floatingPanel:1;
        unsigned int wantsToBeOnMainScreen:1;
        unsigned int optimizedDrawingOk:1;
        unsigned int optimizeDrawing:1;
        unsigned int titleIsRepresentedFilename:1;
        unsigned int excludedFromWindowsMenu:1;
        unsigned int depthLimit:4;
        unsigned int delegateReturnsValidRequestor:1;
        unsigned int lmouseupPending:1;
        unsigned int rmouseupPending:1;
        unsigned int wantsToDestroyRealWindow:1;
        unsigned int wantsToRegDragTypes:1;
        unsigned int sentInvalidateCursorRectsMsg:1;
        unsigned int avoidsActivation:1;
        unsigned int frameSavedUsingTitle:1;
        unsigned int didRegDragTypes:1;
        unsigned int delayedOneShot:1;
        unsigned int postedNeedsDisplayNote:1;
        unsigned int postedInvalidCursorRectsNote:1;
        unsigned int initialFirstResponderTempSet:1;
        unsigned int autodisplay:1;
        unsigned int tossedFirstEvent:1;
        unsigned int isImageCache:1;
        unsigned int interfaceStyle:3;
        unsigned int keyViewSelectionDirection:2;
        unsigned int defaultButtonCellKETemporarilyDisabled:1;
        unsigned int defaultButtonCellKEDisabled:1;
        unsigned int menuHasBeenSet:1;
        unsigned int wantsToBeModal:1;
        unsigned int showingModalFrame:1;
        unsigned int isTerminating:1;
        unsigned int win32MouseActivationInProgress:1;
        unsigned int makingFirstResponderForMouseDown:1;
        unsigned int needsZoom:1;
        unsigned int sentWindowNeedsDisplayMsg:1;
        unsigned int liveResizeActive:1;
    } _wFlags;
    id _defaultButtonCell;
    NSView *_initialFirstResponder;
    NSWindowAuxiliary *_auxiliaryStorage;
}

+ (void)initialize;
+ (unsigned long long)_validateStyleMask:(unsigned long long)arg1;
+ (Class)frameViewClassForStyleMask:(unsigned long long)arg1;
+ (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (struct CGSize)minContentSizeForMinFrameSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
+ (double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2;
+ (id)standardWindowButton:(unsigned long long)arg1 forStyleMask:(unsigned long long)arg2;
+ (BOOL)_shouldMiniaturizeOnDoubleClick;
+ (double)standardContentBorderThicknessForEdge:(unsigned long long)arg1 borderSize:(unsigned long long)arg2 styleMask:(unsigned long long)arg3;
+ (double)standardContentBorderThicknessForEdge:(unsigned long long)arg1 borderSize:(unsigned long long)arg2;
+ (int)defaultDepthLimit;
+ (void)_minimizeAll;
+ (long long)windowNumberAtPoint:(struct CGPoint)arg1 belowWindowWithWindowNumber:(long long)arg2;
+ (id)windowNumbersWithOptions:(unsigned long long)arg1;
+ (void)_setAutoreleaseDuringLiveResize:(BOOL)arg1;
+ (BOOL)_autoreleaseDuringLiveResize;
+ (void)_removeFrameUsingName:(id)arg1 domain:(id)arg2;
+ (void)removeFrameUsingName:(id)arg1;
+ (void)_createMenuMapLock;
+ (void)menuChanged:(id)arg1;
+ (id)_windowsForMenu:(id)arg1;
+ (id)defaultAnimationForKeyPath:(id)arg1;
+ (id)defaultAnimationForKey:(id)arg1;
- (void)_fromScreenCommonCode:(id)arg1;
- (void)_setWantsToBeOnMainScreen:(BOOL)arg1;
- (id)_initContent:(const struct CGRect *)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 screen:(id)arg5 contentView:(id)arg6;
- (void)_commonInitFrame:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (void)_setUtilityWindow:(BOOL)arg1;
- (BOOL)_isUtilityWindow;
- (BOOL)_usesCustomDrawing;
- (BOOL)_isDarkWindow;
- (BOOL)_hasDarkShadow;
- (void)_setNonactivatingPanel:(BOOL)arg1;
- (BOOL)_isNonactivatingPanel;
- (id)_initContent:(const struct CGRect *)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 contentView:(id)arg5;
- (id)_initContent:(const struct CGRect *)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 counterpart:(id)arg5;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4 screen:(id)arg5;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)init;
- (id)_initFromGlobalWindow:(long long)arg1 inRect:(const struct CGRect *)arg2 styleMask:(unsigned long long)arg3;
- (id)_initFromGlobalWindow:(long long)arg1 inRect:(const struct CGRect *)arg2;
- (void)_finishedMakingConnections;
- (void)_setTexturedBackground:(BOOL)arg1;
- (unsigned long long)sheetBehavior;
- (BOOL)_hasMetalSheetEffect;
- (struct CGRect)_pointRectInPixels:(struct CGRect)arg1;
- (struct CGRect)_pixelRectInPoints:(struct CGRect)arg1;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1;
- (struct CGSize)minFrameSizeForMinContentSize:(struct CGSize)arg1 styleMask:(unsigned long long)arg2;
- (BOOL)_windowDying;
- (void)_cancelPerformSelectors;
- (void)dealloc;
- (void)finalize;
- (void)release;
- (id)windowController;
- (void)setWindowController:(id)arg1;
- (id)_getUndoManager:(BOOL)arg1;
- (id)_getActiveUndoManager;
- (id)undoManager;
- (void)undo:(id)arg1;
- (void)redo:(id)arg1;
- (BOOL)_wantToBeModal;
- (void)_setShowingModalFrame:(BOOL)arg1;
- (BOOL)_wantsUserAttention;
- (void)_setWindowNumber:(long long)arg1;
- (void)_resetFirstResponder;
- (id)_viewDetaching:(id)arg1;
- (id)_viewFreeing:(id)arg1;
- (void)_addTouchListener:(id)arg1;
- (void)_removeTouchListener:(id)arg1;
- (void)_setEventMask:(long long)arg1;
- (BOOL)_wantsMouseMoveEventsInBackground;
- (void)_setWantsMouseMoveEventsInBackground:(BOOL)arg1;
- (void)_setWindowTag;
- (BOOL)_windowMoveDisabled;
- (void)_commonAwake;
- (void)setBackingType:(unsigned long long)arg1;
- (unsigned long long)backingType;
- (unsigned long long)_backingType;
- (void)setExcludedFromWindowsMenu:(BOOL)arg1;
- (BOOL)isExcludedFromWindowsMenu;
- (BOOL)_titleIsRepresentedFilename;
- (id)_displayName;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)_setRepresentedURL:(id)arg1;
- (void)setRepresentedURL:(id)arg1;
- (id)representedURL;
- (id)representedFilename;
- (void)setRepresentedFilename:(id)arg1;
- (void)setTitleWithRepresentedFilename:(id)arg1;
- (void)_dosetTitle:(id)arg1 andDefeatWrap:(BOOL)arg2;
- (id)_calcAndSetFilenameTitle;
- (BOOL)_isTitleHidden;
- (id)_customTitleCell;
- (struct CGRect)_customTitleFrame;
- (void)setContentView:(id)arg1;
- (id)contentView;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)addDocumentIconButton;
- (id)standardWindowButton:(unsigned long long)arg1;
- (long long)windowNumber;
- (long long)_realWindowNumber;
- (void *)_auxStorage;
- (long long)_globalWindowNum;
- (long long)_cachedGlobalWindowNum;
- (id)_copyAcquiredViewHierarchyLock;
- (BOOL)_tryLockViewHierarchyForModification;
- (BOOL)_tryLockViewHierarchyForModificationWithHandler:(BOOL)arg1;
- (void)_lockViewHierarchyForModification;
- (void)_lockViewHierarchyForModificationWithExceptionHandler:(BOOL)arg1;
- (void)_unlockViewHierarchyForModification;
- (void)_lockViewHierarchyForDrawing;
- (void)_lockViewHierarchyForDrawingWithExceptionHandler:(BOOL)arg1;
- (void)_unlockViewHierarchyForDrawing;
- (id)fieldEditor:(BOOL)arg1 forObject:(id)arg2;
- (void)endEditingFor:(id)arg1;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (BOOL)_isDraggable;
- (struct CGRect)dragRectForFrameRect:(struct CGRect)arg1;
- (BOOL)_useMetalPattern;
- (void)_oldPlaceWindow:(struct CGRect)arg1;
- (void)_findNewGrowBoxOwner;
- (void)_updateGrowBoxOwner;
- (void)_stopClientSideMove;
- (void)_startClientSideMove;
- (void)_setFrameCommon:(struct CGRect)arg1 display:(BOOL)arg2 stashSize:(BOOL)arg3;
- (double)animationResizeTime:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setContentSize:(struct CGSize)arg1;
- (void)_setContentRect:(struct CGRect)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameTopLeftPoint:(struct CGPoint)arg1;
- (void)_setLocationTemporary:(BOOL)arg1;
- (BOOL)_locationTemporary;
- (BOOL)_shouldPropagateFrameChangesToWindowServer;
- (void)_setFrame:(struct CGRect)arg1 updateBorderViewSize:(BOOL)arg2;
- (void)_setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (void)setResizeIncrements:(struct CGSize)arg1;
- (struct CGSize)resizeIncrements;
- (void)setAspectRatio:(struct CGSize)arg1;
- (struct CGSize)aspectRatio;
- (void)setContentResizeIncrements:(struct CGSize)arg1;
- (struct CGSize)contentResizeIncrements;
- (void)setContentAspectRatio:(struct CGSize)arg1;
- (struct CGSize)contentAspectRatio;
- (struct CGPoint)mouseLocationOutsideOfEventStream;
- (BOOL)_isDocWindow;
- (unsigned long long)styleMask;
- (void)setStyleMask:(unsigned long long)arg1;
- (id)_resetDisableCounts;
- (void)disableFlushWindow;
- (void)enableFlushWindow;
- (BOOL)isFlushWindowDisabled;
- (void)_enableScreenUpdatesIfNeeded;
- (void)flushWindow;
- (void)flushWindowIfNeeded;
- (void)disableScreenUpdatesUntilFlush;
- (void)_forceFlushWindowToScreen;
- (void)_disableDelayedWindowDisplay;
- (void)_enableDelayedWindowDisplay;
- (BOOL)_delayedWindowDisplayEnabled;
- (void)_postWindowNeedsDisplay;
- (void)_delayedWindowDisplay:(id)arg1;
- (id)_resetPostingCounts;
- (void)_disablePosting;
- (void)_enablePosting;
- (BOOL)_postingDisabled;
- (void)_setNeedsDisplay:(id)arg1;
- (void)setViewsNeedDisplay:(BOOL)arg1;
- (BOOL)viewsNeedDisplay;
- (void)displayIfNeeded;
- (BOOL)_canOptimizeDrawing;
- (BOOL)_isImageCache;
- (void)useOptimizedDrawing:(BOOL)arg1;
- (void)display;
- (void)setAutodisplay:(BOOL)arg1;
- (BOOL)isAutodisplay;
- (void)update;
- (id)_borderView;
- (void)_installTrackingRect:(struct CGRect)arg1 assumeInside:(BOOL)arg2 userData:(void *)arg3 trackingNum:(long long)arg4;
- (void)_installTrackingRects:(struct CGRect *)arg1 insideList:(char *)arg2 userDataList:(void **)arg3 trackingNumList:(long long *)arg4 count:(long long)arg5;
- (void)_removeTrackingRect:(long long)arg1;
- (void)_removeTrackingRects:(long long *)arg1 count:(long long)arg2;
- (long long)_nextTrackingNum;
- (void)_setTrackingRects;
- (void)_clearTrackingRects;
- (void)_activateTrackingRectsForApplicationActivation;
- (void)_deactivateTrackingRectsForApplicationDeactivation;
- (CDStruct_602775a4 *)_setTrackingRect:(struct CGRect)arg1 inside:(BOOL)arg2 owner:(id)arg3 userData:(void *)arg4 useTrackingNum:(long long)arg5 install:(BOOL)arg6;
- (void)_setTrackingRects:(struct CGRect *)arg1 insideList:(char *)arg2 owner:(id)arg3 userDataList:(void **)arg4 trackingNums:(long long *)arg5 count:(long long)arg6;
- (long long)_setTrackingRect:(struct CGRect)arg1 inside:(BOOL)arg2 owner:(id)arg3 userData:(void *)arg4 useTrackingNum:(long long)arg5;
- (long long)_setTrackingRect:(struct CGRect)arg1 inside:(BOOL)arg2 owner:(id)arg3 userData:(void *)arg4;
- (void)_discardTrackingRects:(long long *)arg1 count:(long long)arg2;
- (void)_discardTrackingRect:(long long)arg1;
- (void)_disableTrackingRect:(long long)arg1;
- (void)_enableTrackingRect:(long long)arg1;
- (BOOL)_containsTrackingRect:(long long)arg1;
- (void)_disableTrackingArea:(id)arg1;
- (void)_enableTrackingArea:(id)arg1;
- (void)_lockFirstResponder;
- (void)_unlockFirstResponder;
- (BOOL)makeFirstResponder:(id)arg1;
- (id)_newFirstResponderAfterResigning;
- (id)_oldFirstResponderBeforeBecoming;
- (id)firstResponder;
- (void)_setFirstResponder:(id)arg1;
- (BOOL)_allowsOrdering;
- (id)nextEventMatchingMask:(unsigned long long)arg1;
- (id)nextEventMatchingMask:(unsigned long long)arg1 untilDate:(id)arg2 inMode:(id)arg3 dequeue:(BOOL)arg4;
- (id)currentEvent;
- (void)setAcceptsMouseMovedEvents:(BOOL)arg1;
- (BOOL)acceptsMouseMovedEvents;
- (void)setIgnoresMouseEvents:(BOOL)arg1;
- (BOOL)ignoresMouseEvents;
- (void)setGestureEventMask:(unsigned long long)arg1;
- (unsigned long long)gestureEventMask;
- (void)_setWasCGOrderingEnabled:(BOOL)arg1;
- (BOOL)_wasCGOrderingEnabled;
- (void)_setWasReshapingEnabled:(BOOL)arg1;
- (BOOL)_wasReshapingEnabled;
- (void)discardEventsMatchingMask:(unsigned long long)arg1 beforeEvent:(id)arg2;
- (void)postEvent:(id)arg1 atStart:(BOOL)arg2;
- (SEL)_keyboardUIActionForEvent:(id)arg1;
- (SEL)_cancelActionIfCmdDot:(id)arg1;
- (void)_cycleWindows:(id)arg1;
- (void)_cycleWindowsBackwards:(id)arg1;
- (void)_cycleDrawers:(id)arg1;
- (void)_cycleDrawersBackwards:(id)arg1;
- (void)_handleFocusToolbarHotKey:(id)arg1;
- (void)_cancelKey:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)selectKeyViewFollowingView:(id)arg1;
- (void)selectKeyViewPrecedingView:(id)arg1;
- (void)selectNextKeyView:(id)arg1;
- (void)selectPreviousKeyView:(id)arg1;
- (id)_findKeyLoopGroupingViewFollowingKeyLoopGroupingView:(id)arg1 direction:(unsigned long long)arg2;
- (id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2;
- (void)_selectFirstKeyView;
- (unsigned long long)keyViewSelectionDirection;
- (void)_setKeyViewSelectionDirection:(unsigned long long)arg1;
- (void)_setFallBackInitialFirstResponder:(id)arg1;
- (void)setInitialFirstResponder:(id)arg1;
- (id)initialFirstResponder;
- (void)setKeyView:(id)arg1;
- (BOOL)_processKeyboardUIKey:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (void)_markDefaultButtonCellDirty;
- (void)_verifyDefaultButtonCellIfDirty;
- (void)_verifyDefaultButtonCell:(BOOL)arg1;
- (void)setDefaultButtonCell:(id)arg1;
- (void)_setDefaultButtonCell:(id)arg1;
- (id)defaultButtonCell;
- (void)_disableEnablingKeyEquivalentForDefaultButtonCell;
- (void)_enableEnablingKeyEquivalentForDefaultButtonCell;
- (void)disableKeyEquivalentForDefaultButtonCell;
- (void)enableKeyEquivalentForDefaultButtonCell;
- (void)_drawKeyboardUIIndicationForView:(id)arg1 debuggingIndex:(id)arg2;
- (void)_drawKeyboardUILoopStartingAtResponder:(id)arg1 validOnly:(BOOL)arg2;
- (BOOL)_selectAnyValidResponderOverride;
- (void)_clearAnyValidResponderOverride;
- (BOOL)_allowsAnyValidResponder;
- (void)_toggleSelectAnyValidResponderOverride;
- (void)setAutorecalculatesKeyViewLoop:(BOOL)arg1;
- (BOOL)autorecalculatesKeyViewLoop;
- (void)recalculateKeyViewLoop;
- (void)_recalculateKeyViewLoopIfNeeded;
- (void)_setKeyViewLoopNeedsRecalc:(BOOL)arg1;
- (void)_setKeyViewGroupBoundaryNeedsRecalc:(BOOL)arg1;
- (BOOL)_keyViewRedirectionDisabled;
- (void)_setKeyViewRedirectionDisabled:(BOOL)arg1;
- (void)_performToggleToolbarShown:(id)arg1;
- (void)showToolbar:(id)arg1;
- (void)hideToolbar:(id)arg1;
- (void)toggleToolbarShown:(id)arg1;
- (void)runToolbarConfigurationPalette:(id)arg1;
- (void)runToolbarCustomizationPalette:(id)arg1;
- (void)changeToolbarDisplayMode:(id)arg1;
- (void)toggleUsingSmallToolbarIcons:(id)arg1;
- (void)_toggleToolbarConfigPanel:(id)arg1;
- (void)_setNextToolbarSizeAndDisplayMode:(id)arg1;
- (void)_setPreviousToolbarSizeAndDisplayMode:(id)arg1;
- (void)_setNextToolbarDisplayMode:(id)arg1;
- (void)_setNextToolbarSizeMode:(id)arg1;
- (BOOL)_toolbarButtonIsClickable;
- (void)_toolbarPillButtonClicked:(id)arg1;
- (id)_toolbarView;
- (BOOL)_toolbarIsShown;
- (void)setToolbar:(id)arg1;
- (id)toolbar;
- (BOOL)_hasToolbar;
- (void)_showToolbar:(id)arg1 animate:(BOOL)arg2;
- (void)_hideToolbar:(id)arg1 animate:(BOOL)arg2;
- (void)_toolbarFrameSizeChanged:(id)arg1 oldSize:(struct CGSize)arg2;
- (void)setShowsToolbarButton:(BOOL)arg1;
- (BOOL)showsToolbarButton;
- (void)setShowsLockButton:(BOOL)arg1;
- (BOOL)showsLockButton;
- (void)lockButtonClicked:(id)arg1;
- (void)_setResizeWeighting:(long long)arg1;
- (long long)_resizeWeighting;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)wantsScrollWheelEvent:(id)arg1;
- (BOOL)_viewHierarchyAcceptsTouches:(id)arg1;
- (void)_handleTouchEvent:(id)arg1;
- (void)sendEvent:(id)arg1;
- (BOOL)_lmouseUpPending;
- (id)_lastLeftHit;
- (id)_lastRightHit;
- (void)_windowExposed:(id)arg1;
- (void)_setNeedsZoom:(id)arg1;
- (void)_screenChanged:(id)arg1;
- (void)_moveByOffset:(struct CGSize)arg1;
- (void)_moveChildrenByOffset:(struct CGSize)arg1;
- (void)_setFrameOriginForDockMove:(struct CGPoint)arg1;
- (void)_setFrameAfterMove:(struct CGRect)arg1;
- (void)_windowMovedToRect:(struct CGRect)arg1;
- (void)_setAutoPositionMask:(unsigned long long)arg1;
- (unsigned long long)_autoPositionMask;
- (void)_adjustWindowToScreen;
- (id)_displayChangedDepth;
- (id)_displayChanged;
- (id)_displayProfileChanged;
- (id)_getPositionFromServer;
- (void)_windowMoved:(id)arg1;
- (void)_windowMovedToPoint:(struct CGPoint)arg1;
- (void)_hideMenu:(id)arg1;
- (long long)resizeFlags;
- (void)makeKeyWindow;
- (void)makeMainWindow;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_resignKeyFocus;
- (BOOL)_isKeyWindowIgnoringFocus;
- (BOOL)_allowsActiveInputContextDuringMenuTracking;
- (BOOL)_allowsActiveInputContext;
- (void)becomeMainWindow;
- (void)resignMainWindow;
- (void)_frameDidDrawTitle;
- (void)_setTitleNeedsDisplay;
- (void)_setFrameNeedsDisplay:(BOOL)arg1;
- (void)_absorbDeferredNeedsDisplayRegion;
- (BOOL)_needsDisplayInRect:(struct CGRect)arg1;
- (BOOL)_needsDisplayForEntireRect:(struct CGRect)arg1;
- (void)_setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_setNeedsDisplayInRegion:(id)arg1;
- (void)_adjustNeedsDisplayRegionForNewFrame:(struct CGRect)arg1;
- (id)_copyNeedsDisplayRegionInRect:(struct CGRect)arg1 validateSubtractedRegion:(BOOL)arg2;
- (void)_subtractFromNeedsDisplayRegion:(id)arg1;
- (id)_dirtyRegion;
- (void)_setLastFocusRingView:(id)arg1 bleedRegion:(id)arg2;
- (void)_getRetainedLastFocusRingView:(id *)arg1 bleedRegion:(id *)arg2;
- (void)rightMouseDown:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (BOOL)_performKeyEquivalentConditionally:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)_close;
- (void)close;
- (void)_closeForTermination;
- (void)setReleasedWhenClosed:(BOOL)arg1;
- (BOOL)isReleasedWhenClosed;
- (BOOL)isMiniaturized;
- (void)_setMiniaturized:(BOOL)arg1;
- (void)miniaturize:(id)arg1;
- (void)deminiaturize:(id)arg1;
- (id)_counterpart;
- (struct CGRect)_standardFrame;
- (BOOL)isZoomed;
- (void)_saveUserFrame;
- (void)zoom:(id)arg1;
- (BOOL)tryToPerform:(SEL)arg1 with:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (id)_setCounterpart:(id)arg1;
- (id)_getCounterpart;
- (BOOL)_hasGradientBackground;
- (id)_gradientImage;
- (id)_textureImage;
- (id)_texturePattern;
- (BOOL)_scalesBackgroundHorizontally;
- (BOOL)_scalesBackgroundVertically;
- (BOOL)_hasScaledBackground;
- (double)_topBarHeight;
- (double)_bottomBarHeight;
- (id)_generateScaledBackground;
- (void)_invalidateScaledBackground;
- (id)_scaledBackground;
- (void)_invalidateCompositedBackground;
- (unsigned long long)_metalStyle;
- (void)_resizeMetalBackground;
- (void)_updateMetalBackgroundStyle;
- (id)_generateMetalBackground;
- (id)_generateCompositedBackground;
- (id)_compositedBackground;
- (BOOL)_hasBackgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)_verticalSlice;
- (id)backgroundColor;
- (id)contentSeparatorColor;
- (id)contentInsetColor;
- (void)setContentBorderThickness:(double)arg1 forEdge:(unsigned long long)arg2;
- (double)contentBorderThicknessForEdge:(unsigned long long)arg1;
- (void)setAutorecalculatesContentBorderThickness:(BOOL)arg1 forEdge:(unsigned long long)arg2;
- (BOOL)autorecalculatesContentBorderThicknessForEdge:(unsigned long long)arg1;
- (void)setShowsContentSeparator:(BOOL)arg1 forEdge:(unsigned long long)arg2;
- (BOOL)showsContentSeparatorForEdge:(unsigned long long)arg1;
- (void)_setUsesLightBottomGradient:(BOOL)arg1;
- (BOOL)_usesLightBottomGradient;
- (BOOL)_movableByBottomBar;
- (void)_setMovableByBottomBar:(BOOL)arg1;
- (void)setMovableByWindowBackground:(BOOL)arg1;
- (BOOL)isMovableByWindowBackground;
- (void)setMovable:(BOOL)arg1;
- (BOOL)isMovable;
- (void)setHidesOnDeactivate:(BOOL)arg1;
- (BOOL)hidesOnDeactivate;
- (void)setDynamicDepthLimit:(BOOL)arg1;
- (BOOL)hasDynamicDepthLimit;
- (void)setDepthLimit:(int)arg1;
- (int)depthLimit;
- (void)_setWindowDepth:(int)arg1;
- (int)_windowDepth;
- (id)_adjustDynamicDepthLimit;
- (BOOL)displaysWhenScreenProfileChanges;
- (void)setDisplaysWhenScreenProfileChanges:(BOOL)arg1;
- (void)center;
- (BOOL)becomesKeyOnlyIfNeeded;
- (void)_makeKeyRegardlessOfVisibility;
- (void)makeKeyAndOrderFront:(id)arg1;
- (BOOL)_toggleOrderedFrontMostWillOrderOut;
- (void)_toggleOrderedFrontMost:(id)arg1;
- (id)_specialServicesMenuUpdate;
- (void)orderFront:(id)arg1;
- (void)orderBack:(id)arg1;
- (void)orderOut:(id)arg1;
- (void)orderFrontRegardless;
- (void)_justOrderOut;
- (void)orderWindow:(long long)arg1 relativeTo:(long long)arg2;
- (BOOL)_shouldParticipateInBatchOrdering:(long long)arg1;
- (void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3;
- (void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5;
- (void)_setOrderOutInProgress:(BOOL)arg1;
- (BOOL)_orderOutInProgress;
- (void)_orderOutAndCalcKeyWithCounter:(BOOL)arg1 stillVisible:(BOOL)arg2 docWindow:(id)arg3;
- (void)_orderOutAndCalcKeyWithCounter:(BOOL)arg1;
- (void)_setUpFirstResponderBeforeBecomingVisible;
- (void)_reallyDoOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5 isModal:(BOOL)arg6;
- (void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(BOOL)arg3 forCounter:(BOOL)arg4 force:(BOOL)arg5 isModal:(BOOL)arg6;
- (BOOL)_wantsToDestroyRealWindow;
- (void)_setWantsToDestroyRealWindow:(BOOL)arg1;
- (id)_destroyRealWindow:(BOOL)arg1;
- (id)_destroyRealWindowIfNotVisible:(id)arg1;
- (id)_destroyRealWindowIfNeeded;
- (long long)level;
- (void)setLevel:(long long)arg1;
- (void)_setModal:(BOOL)arg1;
- (id)_clearModalWindowLevel;
- (void)_restoreLevelAfterRunningModal;
- (void)_setModalWindowLevel;
- (id)_restoreModalWindowLevel;
- (void)_setCanCycle:(BOOL)arg1;
- (void)setCanCycle:(BOOL)arg1;
- (BOOL)canCycle;
- (void)setCanHide:(BOOL)arg1;
- (BOOL)canHide;
- (id)_tempHideHODWindow;
- (id)_tempUnhideHODWindow;
- (id)_hideHODWindow;
- (id)_unhideHODWindow;
- (void)_hideAttachedWindows:(BOOL)arg1 findKey:(BOOL)arg2;
- (BOOL)_keepChildrenAttached;
- (void)_setKeepChildrenAttached:(BOOL)arg1;
- (BOOL)_isHidden;
- (id)_tempHide:(BOOL)arg1 relWin:(long long)arg2;
- (BOOL)_wantsHideOnDeactivate;
- (void)_setWantsHideOnDeactivate:(BOOL)arg1;
- (void)setMiniwindowImage:(id)arg1;
- (void)_setMiniImageInDock;
- (void)setMiniwindowTitle:(id)arg1;
- (id)miniwindowImage;
- (id)miniwindowTitle;
- (id)dockTile;
- (id)_makeMiniView;
- (void)_setDocumentEdited:(BOOL)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (BOOL)isDocumentEdited;
- (BOOL)isVisible;
- (void)_setVisible:(BOOL)arg1;
- (BOOL)isKeyWindow;
- (BOOL)_isKeyWindow;
- (BOOL)isMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)worksWhenModal;
- (BOOL)_worksWhenModalOrChildOfModalWindow;
- (BOOL)preventsApplicationTerminationWhenModal;
- (void)setPreventsApplicationTerminationWhenModal:(BOOL)arg1;
- (BOOL)_blocksActionWhenModal:(SEL)arg1;
- (void)_dismissModalForTerminate;
- (BOOL)_miniaturizedOrCanBecomeMain;
- (BOOL)_visibleAndCanBecomeKey;
- (BOOL)_visibleAndCanBecomeKeyLimitedOK:(BOOL)arg1;
- (struct CGPoint)convertBaseToScreen:(struct CGPoint)arg1;
- (struct CGPoint)convertScreenToBase:(struct CGPoint)arg1;
- (void)__close;
- (void)_close:(id)arg1;
- (void)_document:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)performClose:(id)arg1;
- (void)performMiniaturize:(id)arg1;
- (void)performZoom:(id)arg1;
- (id)_batchClose;
- (id)_batchZoom;
- (long long)gState;
- (void)setOneShot:(BOOL)arg1;
- (id)_setOneShotIsDelayed:(BOOL)arg1;
- (BOOL)isOneShot;
- (BOOL)canBecomeVisibleWithoutLogin;
- (void)setCanBecomeVisibleWithoutLogin:(BOOL)arg1;
- (BOOL)canBeVisibleOnAllSpaces;
- (void)setCanBeVisibleOnAllSpaces:(BOOL)arg1;
- (BOOL)shouldBeVisibleOnlyOnCurrentSpace;
- (void)setShouldBeVisibleOnlyOnCurrentSpace:(BOOL)arg1;
- (BOOL)isOnActiveSpace;
- (unsigned long long)_defaultCollectionBehavior;
- (unsigned long long)_effectiveCollectionBehavior;
- (void)setCollectionBehavior:(unsigned long long)arg1;
- (unsigned long long)collectionBehavior;
- (void)_setAvoidsActivation:(BOOL)arg1;
- (BOOL)_avoidsActivation;
- (void)_setPreventsActivation:(BOOL)arg1;
- (BOOL)_preventsActivation;
- (void)_changeJustMain;
- (void)_changeKeyAndMainLimitedOK:(BOOL)arg1;
- (void)_win32ChangeKeyAndMain;
- (id)_wsmIconInitFor:(long long)arg1;
- (BOOL)_wsmOwnsWindow;
- (id)dataWithEPSInsideRect:(struct CGRect)arg1;
- (id)dataWithPDFInsideRect:(struct CGRect)arg1;
- (void)print:(id)arg1;
- (BOOL)_showToolTip;
- (void)setAllowsToolTipsWhenApplicationIsInactive:(BOOL)arg1;
- (BOOL)allowsToolTipsWhenApplicationIsInactive;
- (BOOL)_addCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (BOOL)_removeCursorRect:(struct CGRect)arg1 cursor:(id)arg2 forView:(id)arg3;
- (BOOL)_hasCursorRectsForView:(id)arg1;
- (void)GDBDumpCursorRects;
- (BOOL)_inLiveResize;
- (BOOL)_shouldSyncSurfaceToView;
- (BOOL)inLiveResize;
- (void)_setLiveResizeImageCacheingEnabled:(BOOL)arg1;
- (BOOL)_liveResizeImageCacheingEnabled;
- (void)setPreservesContentDuringLiveResize:(BOOL)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)_liveResizeLOptimizationEnabled;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (BOOL)_hasCursorRects;
- (void)disableCursorRects;
- (void)enableCursorRects;
- (BOOL)areCursorRectsEnabled;
- (void)discardCursorRects;
- (id)_runLoopModesForInvalidCursorRectsObserver;
- (void)_postInvalidCursorRects;
- (void)_disableToolTipCreationAndDisplay;
- (void)_enableToolTipCreationAndDisplay;
- (BOOL)_isToolTipCreationAndDisplayEnabled;
- (void)_invalidateAllRevealoversForView:(id)arg1;
- (void)_setTrackingAreasDirty;
- (void)_moveTrackingArea:(id)arg1 toRect:(struct CGRect)arg2;
- (void)_invalidateCursorRectsForView:(id)arg1 force:(BOOL)arg2;
- (void)invalidateCursorRectsForView:(id)arg1;
- (BOOL)_shouldResetCursorRects;
- (BOOL)allowsCursorRectsWhenInactive;
- (void)setAllowsCursorRectsWhenInactive:(BOOL)arg1;
- (BOOL)_shouldShowCursorRects;
- (void)resetCursorRects;
- (id)_discardCursorRectsForView:(id)arg1;
- (void)_markCursorRectsForRemovedView:(id)arg1;
- (void)_deallocCursorRects;
- (void)cacheImageInRect:(struct CGRect)arg1;
- (void)restoreCachedImage;
- (void)discardCachedImage;
- (id)_stringWithSavedFrame;
- (void)_saveFrameUsingName:(id)arg1 domain:(id)arg2;
- (void)saveFrameUsingName:(id)arg1;
- (id)stringWithSavedFrame;
- (struct CGRect)_adjustedFrameFromDefaults:(struct CGRect)arg1;
- (struct CGRect)_adjustedFrameForSaving:(struct CGRect)arg1;
- (BOOL)_setFrameFromString:(id)arg1 force:(BOOL)arg2;
- (BOOL)_setFrameUsingName:(id)arg1 domain:(id)arg2 force:(BOOL)arg3;
- (BOOL)_setFrameUsingName:(id)arg1 domain:(id)arg2;
- (void)setFrameFromString:(id)arg1;
- (BOOL)setFrameUsingName:(id)arg1;
- (BOOL)setFrameUsingName:(id)arg1 force:(BOOL)arg2;
- (BOOL)_setFrameAutosaveName:(id)arg1 changeFrame:(BOOL)arg2;
- (BOOL)setFrameAutosaveName:(id)arg1;
- (id)frameAutosaveName;
- (id)_toggleFrameAutosaveEnabled:(id)arg1;
- (void)_setFrameSavedUsingTitle:(BOOL)arg1;
- (BOOL)canStoreColor;
- (id)deepestScreen;
- (id)deviceDescription;
- (id)screen;
- (void)setHasShadow:(BOOL)arg1;
- (BOOL)hasShadow;
- (void)invalidateShadow;
- (struct CGRect)constrainFrameRect:(struct CGRect)arg1 toScreen:(id)arg2;
- (void)_validSize:(struct CGSize *)arg1 force:(BOOL)arg2;
- (struct CGRect)_validFrameForFrame:(struct CGRect)arg1 resizedFromEdge:(unsigned long long)arg2;
- (BOOL)_confirmSize:(struct CGSize *)arg1 force:(BOOL)arg2;
- (void)setMinSize:(struct CGSize)arg1;
- (void)setMaxSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)_adjustMinAndMaxSizeForSheet:(BOOL)arg1;
- (void)setContentMinSize:(struct CGSize)arg1;
- (void)setContentMaxSize:(struct CGSize)arg1;
- (struct CGSize)contentMinSize;
- (struct CGSize)contentMaxSize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGPoint)cascadeTopLeftFromPoint:(struct CGPoint)arg1;
- (void)_setOwnsRealWindow:(BOOL)arg1;
- (BOOL)_doesOwnRealWindow;
- (void)_termOneShotWindow;
- (void)_termWindowIfOwner;
- (BOOL)_isTerminating;
- (void)_setWin32MouseActivationInProgress:(BOOL)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMenu:(id)arg1;
- (void)_cleanupMenuMaps;
- (id)menu;
- (void)_takeApplicationMenuIfNeeded:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)_forwardActionToParent:(SEL)arg1;
- (void)helpRequested:(id)arg1;
- (BOOL)_makingFirstResponderForMouseDown;
- (void)_blockHeartBeat:(BOOL)arg1;
- (id)_threadContext;
- (void *)graphicsPort;
- (void)_windowDeviceRound;
- (id)graphicsContext;
- (void)_setWindowContextForCurrentThread:(id)arg1;
- (void)_cleanWindowGraphicsContextForThread:(void *)arg1 withSequenceNumber:(long long)arg2;
- (void)setAutofill:(BOOL)arg1;
- (BOOL)autofill;
- (void)setAutofillColor:(id)arg1;
- (id)autofillColor;
- (void)setOpaque:(BOOL)arg1;
- (BOOL)isOpaque;
- (void)setAlphaValue:(double)arg1;
- (double)alphaValue;
- (void)setShowsResizeIndicator:(BOOL)arg1;
- (BOOL)showsResizeIndicator;
- (id)attachedSheet;
- (BOOL)isSheet;
- (void)setBottomCornerRounded:(BOOL)arg1;
- (BOOL)bottomCornerRounded;
- (void)_removeFromGroups:(id)arg1;
- (void)_addToGroups:(id)arg1 ordered:(long long)arg2;
- (void)_hideChildren;
- (void)_unhideChildren;
- (void)_setRelativeOrdering:(long long)arg1;
- (void)addChildWindow:(id)arg1 ordered:(long long)arg2;
- (void)addChildWindow:(id)arg1 ordered:(long long)arg2 shareKey:(BOOL)arg3;
- (BOOL)_sharesParentKeyState;
- (BOOL)_canBecomeSecondaryKeyWindow;
- (BOOL)_acceptsSecondaryKey;
- (void)removeChildWindow:(id)arg1;
- (id)_childWindows;
- (id)childWindows;
- (id)parentWindow;
- (void)setParentWindow:(id)arg1;
- (id)_topmostChild;
- (void)_setExcludedFromVisibleWindowList:(BOOL)arg1;
- (BOOL)_excludedFromVisibleWindowList;
- (double)userSpaceScaleFactor;
- (id)animator;
- (id)animations;
- (void)setAnimations:(id)arg1;
- (id)animationForKeyPath:(id)arg1;
- (id)animationForKey:(id)arg1;
- (void)setSharingType:(unsigned long long)arg1;
- (unsigned long long)sharingType;
- (void)setPreferredBackingLocation:(unsigned long long)arg1;
- (unsigned long long)preferredBackingLocation;
- (unsigned long long)backingLocation;
- (BOOL)allowsConcurrentViewDrawing;
- (void)setAllowsConcurrentViewDrawing:(BOOL)arg1;
- (BOOL)_anyViewCanDrawConcurrently;
- (void)_setAnyViewCanDrawConcurrently:(BOOL)arg1;
- (BOOL)_colorSpaceIsInherited;
- (void)_setColorSpace:(id)arg1 sendNotification:(BOOL)arg2;
- (void)setColorSpace:(id)arg1;
- (id)colorSpace;
- (void)_updateGrowBoxViewForSurface:(id)arg1;
- (void)_surfaceMovedInWindow:(id)arg1;
- (void)_surfaceOrderedInWindow:(id)arg1;
- (void)_surfaceRemovedFromWindow:(id)arg1;

@end

@interface NSWindowAuxiliary : NSObject
{
    NSString *_userInterfaceItemIdentifier;
    NSDockTile *dockTile;
    _NSWindowAnimator *_animator;
    struct CGRect standardFrame;
    int realWindowNumber;
    unsigned int _rememberedFirstResponderState;
    NSMultiReadUniWriteLock *viewHierarchyLock;
    NSUndoManager *undoManager;
    NSWindowController *windowController;
    NSRecursiveLock *responderLock;
    id _rememberedFirstResponder;
    struct __CFRunLoopObserver *_windowDisplayObserver;
    struct __CFRunLoopObserver *_invalidCursorObserver;
    NSGraphicsContext *_appkitThreadContext;
    NSMapTable *_subthreadContexts;
    NSView *_lastFocusRingView;
    NSRegion *_lastFocusRingBleedRegion;
    NSWindow *docWindow;
    NSWindow *sheetWindow;
    NSString *dockWindowTitle;
    NSMutableArray *_heartBeatClients;
    NSGraphicsContext *_heartBeatThreadContext;
    double _lastDisplayTime;
    struct CGPoint stashedOrigin;
    id _moveHelper;
    void *windowHandlerRef;
    void *rootMetricsHandlerRef;
    unsigned int autoPositionMask;
    short _toolTipDisabledCount;
    unsigned short _delayedDisplayDisableCount;
    id timeMachineDelegate;
    NSColorSpace *colorSpace;
    double alpha;
    struct CGPoint collapsedOrigin;
    NSColor *pattern;
    id _bindingAdaptor;
    id _growBoxOwner;
    NSWindow *parentWindow;
    NSView *_lastOtherHit;
    NSColor *compositedPattern;
    struct __auxWFlags {
        unsigned int hasShadow:1;
        unsigned int forceActiveControls:1;
        unsigned int minimized:1;
        unsigned int keepChildrenAttached:1;
        unsigned int restoreLocation:1;
        unsigned int explicitCollectionBehavior:1;
        unsigned int activeAppearanceDuringRestore:1;
        unsigned int miniWindowTitleIsAGuess:1;
        unsigned int dontSyncSurfaceToView:1;
        unsigned int windowPositionIsStale:1;
        unsigned int miniWindowTitleNeedsUpdate:1;
        unsigned int blockHeartBeat:1;
        unsigned int resizeCornerShown:1;
        unsigned int locationIsTemporary:1;
        unsigned int canHide:1;
        unsigned int autofill:1;
        unsigned int isOpaque:1;
        unsigned int receivedDockDeathNotification:1;
        unsigned int minimizeCompleted:1;
        unsigned int minimizeFailed:1;
        unsigned int windowClosed:1;
        unsigned int omouseupPending:1;
        unsigned int borderViewHasDisplayName:1;
        unsigned int delegateReturnsFieldEditor:1;
        unsigned int needsConstraint:1;
        unsigned int ownsRealWindow:1;
        unsigned int windowRefRequiredForCarbonControl:1;
        unsigned int windowRefRequiredForCarbonApp:1;
        unsigned int mightBeMovingClientSide:1;
        unsigned int defaultButtonPaused:1;
        unsigned int movableByBackground:1;
        unsigned int preventsActivation:1;
        unsigned int ignoresMouseEvents:1;
        unsigned int keyWindowIgnoringFocus:1;
        unsigned int liveResizeImageCacheingEnabled:1;
        unsigned int currentDepth:4;
        unsigned int needsScaling:1;
        unsigned int allowsToolTipsWhenApplicationIsInactive:1;
        unsigned int needsToSetIgnoreTag:1;
        unsigned int needsToResetDragMargins:1;
        unsigned int preserveTag:1;
        unsigned int needsToRemoveFieldEditor:1;
        unsigned int wantsHideOnDeactivate:1;
        unsigned int aspectRatioForContent:1;
        unsigned int resizeIncrementsForContent:1;
        unsigned int minSizeForContent:1;
        unsigned int maxSizeForContent:1;
        unsigned int modalIsActive:1;
        unsigned int excludedFromVisibleWindowList:1;
        unsigned int preservesContentDuringLiveResize:1;
        unsigned int autorecalculatesKeyViewLoop:1;
        unsigned int keyViewLoopNeedsRecalc:1;
        unsigned int keyViewGroupBoundaryNeedRecalc:1;
        unsigned int keyViewRedirectionDisabled:1;
        unsigned int displaysWhenScreenProfileChanges:1;
        unsigned int hidesToolbarButton:1;
        unsigned int dirtyDefaultButtonCell:1;
        unsigned int noDefaultButton:1;
        unsigned int screenUpdatesDisabledUntilFlush:1;
        unsigned int allowsCursorRectsWhenInactive:1;
        unsigned int sharesParentKeyState:1;
        unsigned int canBecomeVisibleWithoutLogin:1;
        unsigned int trackingAreasDirty:1;
        unsigned int wantsMouseMoveEventsInBackground:1;
        unsigned int sharingType:2;
        unsigned int preferredBackingLocation:2;
        unsigned int orderOutInProgress:1;
        unsigned int movable:1;
        unsigned int showsLockButton:1;
        unsigned int wasCGOrderingEnabled:1;
        unsigned int wasReshapingEnabled:1;
        unsigned int autorecalculatesTopBorderThickness:1;
        unsigned int autorecalculatesBottomBorderThickness:1;
        unsigned int relativeOrdering:2;
        unsigned int resizeWeighting:2;
        unsigned int showsTopBorderSeparator:1;
        unsigned int showsBottomBorderSeparator:1;
        unsigned int lightBottomGradient:1;
        unsigned int collectionBehavior:7;
        unsigned int shadowStyle:6;
        unsigned int pendingTrackingAreas:1;
        unsigned int handlingInvalidCursorRects:1;
        unsigned int allowsConcurrentViewDrawing:1;
        unsigned int anyViewCanDrawConcurrently:1;
        unsigned int preventsAppTerminationWhenModal:1;
        unsigned int explicitColorSpace:1;
    } _auxWFlags;
    void *_windowRef;
    double _scaleFactor;
    struct __CFArray *_mouseMovedListeners;
    NSRegion *_needsDisplayRegion;
    NSRegion *_deferredNeedsDisplayRegion;
    struct CGRect userFrame;
    NSToolbar *toolbar;
    struct CGRect screenFrame;
    NSMutableSet *_customFieldEditors;
    NSMutableArray *childWindows;
    NSMutableArray *childOrdering;
    NSMutableArray *_touchListeners;
    NSDictionary *_animationsDictionary;
    struct __CFMachPort *clientSideDragPort;
    struct __CFRunLoopSource *clientSideDragSource;
    NSMutableSet *surfacesThatIntersectGrowBox;
    NSView *growBoxView;
}

@end

@interface NSAccessibilityWindowGrowBox : NSAccessibilityMockUIElement
{
}

+ (id)growBoxWithParent:(id)arg1;
- (id)accessibilityAttributeNames;

@end

@interface NSWindowBinder : NSViewStateBinder
{
}

+ (void)initialize;
+ (void)_applicationWillTerminate:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (Class)valueClassForBinding:(id)arg1;
- (BOOL)isBindingReadOnly:(id)arg1;
- (BOOL)_isBooleanBinding:(id)arg1;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (BOOL)shouldProcessObservations;
- (void)_updateWindow:(id)arg1 withWidth:(id)arg2 height:(id)arg3;
- (void)_updateWindow:(id)arg1 withVisibilityState:(id)arg2;
- (void)_updateObject:(id)arg1 observedController:(id)arg2 observedKeyPath:(id)arg3 context:(void *)arg4;
- (void)window:(id)arg1 didChangeToVisibleState:(BOOL)arg2;
- (void)windowDidResize:(id)arg1;

@end

@interface NSWindowController : NSResponder <NSCoding>
{
    NSWindow *_window;
    NSString *_windowNibName;
    NSDocument *_document;
    NSArray *_topLevelObjects;
    id _owner;
    struct __wcFlags {
        unsigned int shouldCloseDocument:1;
        unsigned int shouldCascade:1;
        unsigned int nibIsLoaded:1;
        unsigned int nibNameIsPath:1;
        unsigned int RESERVED:28;
    } _wcFlags;
    NSString *_frameAutosaveName;
    id _moreVars;
}

+ (void)initialize;
+ (void)_doneWithLocations;
- (id)initWithWindow:(id)arg1;
- (id)init;
- (id)initWithWindowNibName:(id)arg1;
- (id)initWithWindowNibName:(id)arg1 owner:(id)arg2;
- (id)initWithWindowNibPath:(id)arg1 owner:(id)arg2;
- (void)release;
- (void)dealloc;
- (id)_compatibility_initWithUnkeyedCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)windowNibName;
- (id)windowNibPath;
- (id)owner;
- (void)setWindowFrameAutosaveName:(id)arg1;
- (id)windowFrameAutosaveName;
- (BOOL)shouldCascadeWindows;
- (void)setShouldCascadeWindows:(BOOL)arg1;
- (id)document;
- (void)setDocument:(id)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (BOOL)shouldCloseDocument;
- (void)setShouldCloseDocument:(BOOL)arg1;
- (void)setWindow:(id)arg1;
- (id)window;
- (void)synchronizeWindowTitleWithDocumentName;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)_windowDidClose;
- (void)close;
- (void)_findWindowLocationsWithRepresentativeWindow:(id)arg1 count:(unsigned long long)arg2;
- (void)showWindow:(id)arg1;
- (BOOL)isWindowLoaded;
- (void)windowWillLoad;
- (void)windowDidLoad;
- (void)_windowDidLoad;
- (void)_windowWillLoad;
- (void)loadWindow;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)presentError:(id)arg1;
- (id)_autounbinder;

@end

@interface NSWindowControllerMoreIVars : NSObject
{
    NSAutounbinder *autounbinder;
    long long cascadeNumber;
    struct CGPoint cascadePoint;
}

@end

@interface NSBitmapGraphicsContext : NSWindowGraphicsContext
{
    NSFocusStack *_focusStack;
    NSBitmapImageRep *_imageRep;
    struct {
        unsigned int _isFlipped:1;
        unsigned int _noOldCompOp:1;
        unsigned int _carbonOffscreen:1;
        unsigned int _unused:29;
    } _bgcFlags;
}

- (id)_initWithGraphicsPort:(void *)arg1 flipped:(BOOL)arg2;
- (id)_initWithGraphicsPort:(void *)arg1 flipped:(BOOL)arg2 carbonOffscreen:(BOOL)arg3;
- (id)_initWithBitmapImageRep:(id)arg1;
- (void)dealloc;
- (id)focusStack;
- (void)setFocusStack:(id)arg1;
- (BOOL)isFlipped;
- (BOOL)isDrawingToScreen;

@end

@interface NSWindowGraphicsContext : NSCGSContext
{
    unsigned int _cgsWindowID;
    unsigned int _displayPostingDisableCount;
    unsigned int _flushDisableCount;
    _NSWindowGraphicsContextAux *_auxiliary;
}

- (id)_initWithWindowNumber:(long long)arg1 scaleFactor:(double)arg2;
- (id)_initWithWindowNumber:(long long)arg1;
- (id)initWithWindow:(id)arg1;
- (id)attributes;
- (unsigned int)windowID;
- (BOOL)isDrawingToScreen;
- (id)focusStack;
- (void)setFocusStack:(id)arg1;
- (void)dealloc;
- (void)disableDisplayPositing;
- (void)reenableDisplayPosting;
- (BOOL)isDisplayPostingDisabled;
- (void)resetDisplayDisableCount;
- (void)disableFlush;
- (void)reenableFlush;
- (BOOL)isFlushDisabled;
- (void)resetFlushDisableCount;
- (double)_scaleFactor;
- (void)_setShouldEnforcePixelAlignment:(BOOL)arg1;
- (BOOL)_shouldEnforcePixelAlignment;
- (long long)_threadSequence;
- (void)_setThreadSequence:(long long)arg1;

@end

@interface _NSWindowGraphicsContextAux : NSObject
{
    double _scaleFactor;
    long long _threadSequence;
    BOOL _pixelAlign;
}

- (id)init;
- (void)dealloc;

@end

@interface NSWindowTemplate : NSObject <NSCoding>
{
    struct CGRect windowRect;
    int windowStyleMask;
    int windowBacking;
    NSString *windowTitle;
    id viewClass;
    NSString *windowClass;
    id windowView;
    NSWindow *realObject;
    id extension;
    struct CGSize minSize;
    struct __WtFlags {
        unsigned int _PADDING:10;
        unsigned int hidesToolbarButton:1;
        unsigned int autorecalculatesKeyViewLoop:1;
        unsigned int hideShadow:1;
        unsigned int allowsToolTipsWhenInactive:1;
        unsigned int autoSetMiniaturizableMask:1;
        unsigned int autoSetZoomableMask:1;
        unsigned int interfaceStyle:2;
        unsigned int savePosition:1;
        unsigned int autoPositionMask:6;
        unsigned int dynamicDepthLimit:1;
        unsigned int wantsToBeColor:1;
        unsigned int visible:1;
        unsigned int oneShot:1;
        unsigned int defer:1;
        unsigned int dontFreeWhenClosed:1;
        unsigned int hidesOnDeactivate:1;
    } _wtFlags;
    struct CGRect screenRect;
    NSString *frameAutosaveName;
    struct CGSize maxSize;
    struct CGSize contentMinSize;
    struct CGSize contentMaxSize;
    unsigned long long windowBackingLocation;
    unsigned long long windowSharingType;
    char autorecalculateContentBorderThicknesses[4];
    double contentBorderThicknesses[4];
}

+ (void)initialize;
- (void)dealloc;
- (void)finalize;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)className;
- (void)setClassName:(id)arg1;
- (unsigned long long)styleMask;
- (void)setStyleMask:(unsigned long long)arg1;
- (unsigned long long)backingType;
- (void)setBackingType:(unsigned long long)arg1;
- (BOOL)isOneShot;
- (void)setOneShot:(BOOL)arg1;
- (BOOL)hasDynamicDepthLimit;
- (void)setDynamicDepthLimit:(BOOL)arg1;
- (BOOL)isDeferred;
- (void)setDeferred:(BOOL)arg1;
- (BOOL)isReleasedWhenClosed;
- (void)setReleasedWhenClosed:(BOOL)arg1;
- (BOOL)hidesOnDeactivate;
- (void)setHidesOnDeactivate:(BOOL)arg1;
- (BOOL)wantsToBeColor;
- (void)setWantsToBeColor:(BOOL)arg1;
- (unsigned long long)autoPositionMask;
- (void)setAutoPositionMask:(unsigned long long)arg1;
- (unsigned long long)interfaceStyle;
- (void)setInterfaceStyle:(unsigned long long)arg1;
- (void)setFrameAutosaveName:(id)arg1;
- (id)frameAutosaveName;
- (struct CGSize)minSize;
- (void)setMinSize:(struct CGSize)arg1;
- (struct CGSize)maxSize;
- (void)setMaxSize:(struct CGSize)arg1;
- (void)setAllowsToolTipsWhenApplicationIsInactive:(BOOL)arg1;
- (BOOL)allowsToolTipsWhenApplicationIsInactive;
- (void)setHasShadow:(BOOL)arg1;
- (BOOL)hasShadow;
- (void)setAutorecalculatesKeyViewLoop:(BOOL)arg1;
- (BOOL)autorecalculatesKeyViewLoop;
- (id)toolbar;
- (void)setToolbar:(id)arg1;
- (unsigned long long)windowSharingType;
- (void)setWindowSharingType:(unsigned long long)arg1;
- (unsigned long long)windowBackingLocation;
- (void)setWindowBackingLocation:(unsigned long long)arg1;
- (struct CGSize)contentMaxSize;
- (void)setContentMaxSize:(struct CGSize)arg1;
- (struct CGSize)contentMinSize;
- (void)setContentMinSize:(struct CGSize)arg1;
- (BOOL)showsToolbarButton;
- (void)setShowsToolbarButton:(BOOL)arg1;
- (void)setAutorecalculatesContentBorderThickness:(BOOL)arg1 forEdge:(unsigned long long)arg2;
- (BOOL)autorecalculatesContentBorderThicknessForEdge:(unsigned long long)arg1;
- (void)setContentBorderThickness:(double)arg1 forEdge:(unsigned long long)arg2;
- (double)contentBorderThicknessForEdge:(unsigned long long)arg1;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;

@end

@interface NSWorkspace : NSObject
{
    NSNotificationCenter *notificationCenter;
    id _reservedWorkspace1;
}

+ (id)sharedWorkspace;
- (id)init;
- (id)_getAuxCreating:(BOOL)arg1;
- (id)URLForApplicationWithBundleIdentifier:(id)arg1;
- (id)URLForApplicationToOpenURL:(id)arg1;
- (id)absolutePathForAppBundleWithIdentifier:(id)arg1;
- (BOOL)_openURLs:(id)arg1 withAppPath:(id)arg2 options:(unsigned long long)arg3 additionalEventParamDescriptor:(id)arg4 launchIdentifiers:(id *)arg5;
- (BOOL)openURLs:(id)arg1 withAppBundleIdentifier:(id)arg2 options:(unsigned long long)arg3 additionalEventParamDescriptor:(id)arg4 launchIdentifiers:(id *)arg5;
- (BOOL)launchAppWithBundleIdentifier:(id)arg1 options:(unsigned long long)arg2 additionalEventParamDescriptor:(id)arg3 launchIdentifier:(id *)arg4;
- (BOOL)openFile:(id)arg1 withApplication:(id)arg2;
- (BOOL)openFile:(id)arg1;
- (id)iconForFiles:(id)arg1;
- (id)notificationCenter;
- (id)_notificationCenterWithoutTriggeringCreation;
- (void)_fileOperationCompleted:(long long)arg1;
- (void)_willPowerOff;
- (void)dealloc;
- (BOOL)openURL:(id)arg1;
- (BOOL)_openFile:(id)arg1 withApplication:(id)arg2 asService:(BOOL)arg3 andWait:(BOOL)arg4 andDeactivate:(BOOL)arg5;
- (BOOL)openFile:(id)arg1 withApplication:(id)arg2 andDeactivate:(BOOL)arg3;
- (BOOL)openTempFile:(id)arg1;
- (BOOL)openFile:(id)arg1 fromImage:(id)arg2 at:(struct CGPoint)arg3 inView:(id)arg4;
- (BOOL)_launchService:(id)arg1 andWait:(BOOL)arg2;
- (BOOL)launchApplication:(id)arg1;
- (BOOL)launchApplication:(id)arg1 showIcon:(BOOL)arg2 autolaunch:(BOOL)arg3;
- (id)launchApplicationAtURL:(id)arg1 options:(unsigned long long)arg2 configuration:(id)arg3 error:(id *)arg4;
- (id)_defaultDocIcon;
- (id)iconForFileType:(id)arg1;
- (id)_iconForOSType:(unsigned int)arg1 creator:(unsigned int)arg2;
- (id)_iconForOSType:(unsigned int)arg1;
- (id)iconForFile:(id)arg1;
- (BOOL)_sendFinderAppleEvent:(unsigned int)arg1 class:(unsigned int)arg2 URLs:(id)arg3 followSymlinks:(BOOL)arg4;
- (BOOL)_sendFinderAppleEvent:(unsigned int)arg1 class:(unsigned int)arg2 file:(id)arg3;
- (BOOL)setIcon:(id)arg1 forFile:(id)arg2 options:(unsigned long long)arg3;
- (BOOL)getInfoForFile:(id)arg1 application:(id *)arg2 type:(id *)arg3;
- (BOOL)isFilePackageAtPath:(id)arg1;
- (long long)extendPowerOffBy:(long long)arg1;
- (void)slideImage:(id)arg1 from:(struct CGPoint)arg2 to:(struct CGPoint)arg3;
- (BOOL)setDesktopImageURL:(id)arg1 forScreen:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (id)desktopImageURLForScreen:(id)arg1;
- (id)desktopImageOptionsForScreen:(id)arg1;
- (BOOL)selectFile:(id)arg1 inFileViewerRootedAtPath:(id)arg2;
- (void)activateFileViewerSelectingURLs:(id)arg1;
- (BOOL)showSearchResultsForQueryString:(id)arg1;
- (id)_fullPathForService:(id)arg1;
- (id)_locationsForApplications;
- (id)fullPathForApplication:(id)arg1;
- (void)duplicateURLs:(id)arg1 completionHandler:(id)arg2;
- (void)recycleURLs:(id)arg1 completionHandler:(id)arg2;
- (BOOL)_fileOperation:(long long)arg1 source:(id)arg2 destination:(id)arg3 files:(id)arg4;
- (BOOL)performFileOperation:(id)arg1 source:(id)arg2 destination:(id)arg3 files:(id)arg4 tag:(long long *)arg5;
- (void)noteFileSystemChanged;
- (void)noteFileSystemChanged:(id)arg1;
- (BOOL)fileSystemChanged;
- (void)noteUserDefaultsChanged;
- (BOOL)userDefaultsChanged;
- (void)findApplications;
- (void)hideOtherApplications;
- (void)_applicationStatusChange:(id)arg1;
- (BOOL)_workspaceSessionIsActive;
- (void)_postSessionNotificationIfNeeded;
- (id)launchedApplications;
- (id)activeApplication;
- (BOOL)_volumeIsEjectableForRefNum:(short)arg1;
- (BOOL)_volumeSupportsLongFilenamesForRefNum:(short)arg1;
- (BOOL)_volumeIsLocalForRefNum:(short)arg1;
- (BOOL)_volumeSupportsLongFilenamesAtPath:(id)arg1;
- (BOOL)getFileSystemInfoForPath:(id)arg1 isRemovable:(char *)arg2 isWritable:(char *)arg3 isUnmountable:(char *)arg4 description:(id *)arg5 type:(id *)arg6;
- (id)mountedLocalVolumePaths;
- (id)mountedRemovableMedia;
- (id)mountNewRemovableMedia;
- (void)checkForRemovableMedia;
- (BOOL)unmountAndEjectDeviceAtPath:(id)arg1;
- (BOOL)unmountAndEjectDeviceAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)openFile:(id)arg1 operation:(int)arg2;
- (void)unhideApplication;
- (oneway void)startProfiling;
- (oneway void)stopProfiling;
- (oneway void)writeProfilingDataToPath:(id)arg1;
- (oneway void)resetProfiling;
- (id)fileLabelColors;
- (id)fileLabels;
- (id)_copyApplicationDictionaryFromLSDictionary:(struct __CFDictionary *)arg1 constructingAppFromCorpse:(BOOL)arg2;
- (id)typeOfFile:(id)arg1 error:(id *)arg2;
- (id)localizedDescriptionForType:(id)arg1;
- (id)preferredFilenameExtensionForType:(id)arg1;
- (BOOL)filenameExtension:(id)arg1 isValidForType:(id)arg2;
- (id)preferredFileNameExtensionForType:(id)arg1;
- (BOOL)fileNameExtension:(id)arg1 isValidForType:(id)arg2;
- (BOOL)type:(id)arg1 conformsToType:(id)arg2;
- (id)_URLForDuplicatingFileAtURL:(id)arg1;
- (void)_noteAppBirth:(struct __LSASN *)arg1;
- (void)_noteAppDeath:(struct __LSASN *)arg1;
- (void)_registerForRunningApplicationNotifications;
- (void)_unregisterForRunningApplicationsNotifications;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)_unobservedRunningAppsPropertyBecameStale;
- (void)_installStalenessObserver;
- (id)runningApplications;

@end

@interface _NSWorkspaceFileOperation : NSObject
{
    struct dispatch_queue_s *queue;
    NSLock *lock;
    NSMutableArray *remainingURLs;
    struct __CFArray *operationRefs;
    NSMutableDictionary *urlsToNewURLs;
    NSMutableDictionary *urlsToErrors;
    NSMutableDictionary *urlToLastTriedName;
    id completionHandler;
    long long whichOperation;
}

- (id)copyNextPathToTryForURL:(id)arg1;
- (void)scheduleOperationRef:(struct __FSFileOperation *)arg1 forURL:(id)arg2;
- (void)makeOperationRefs;
- (void)retryOperationRefWithNextName:(struct __FSFileOperation *)arg1;
- (id)initWithQueue:(struct dispatch_queue_s *)arg1 URLs:(id)arg2 operation:(long long)arg3 completionHandler:(id)arg4;
- (id)copyError;
- (void)updateOperationRef:(struct __FSFileOperation *)arg1 newPath:(const char *)arg2 error:(int)arg3 status:(struct __CFDictionary *)arg4;
- (void)operationRef:(struct __FSFileOperation *)arg1 didHaveImmediateError:(int)arg2;
- (void)operationRefDidComplete:(struct __FSFileOperation *)arg1 newPath:(const char *)arg2 error:(int)arg3 status:(struct __CFDictionary *)arg4;
- (void)dealloc;
@property(readonly) long long whichOperation; // @synthesize whichOperation;

@end

@interface _NSWorkspaceAux : NSObject
{
    NSLock *_lock;
    NSLSNotificationHelper *_notificationHelper;
    void *_runningAppNotification;
    NSMutableArray *_runningApplicationsProperty;
    NSArray *_runningApplicationsStaleArray;
    BOOL hasInstalledStalenessRunLoopObserverRef;
}

- (id)init;
- (void)dealloc;

@end

@interface NSZipTextReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSZipFileArchive *_archive;
    NSDictionary *_options;
    NSData *_contentData;
    NSData *_wordData;
    NSData *_opfData;
    NSData *_smilData;
    NSData *_xmlData;
    long long _indexingLimit;
    long long _thumbnailLimit;
    long long _errorCode;
}

- (void)_loadContentData;
- (void)_loadWordData;
- (void)_loadXMLData;
- (void)_load;
- (void)dealloc;
- (id)initWithArchive:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;

@end

@interface _NSBinderPluginRegistry : NSObject
{
    NSMapTable *_registry;
    NSMapTable *_cachedRegistry;
}

+ (id)sharedRegistry;
- (id)init;
- (void)dealloc;
- (void)registerPluginClass:(Class)arg1 forObjectClass:(Class)arg2 andBinderClass:(Class)arg3;
- (Class)pluginClassForObject:(id)arg1 andBinderClass:(Class)arg2 requiredPluginProtocol:(id)arg3;

@end

@interface _NSDoubleClickActionBinderPlugin : _NSActionBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)arg1;

@end

@interface _NSActionBinderPlugin : _NSBinderPlugin <_NSActionBinderPlugin>
{
    long long _actionIndex;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (BOOL)needsAction;
- (BOOL)prefersEnabledOverEditable:(id)arg1;
- (BOOL)conditionalBehaviorOffByDefault:(id)arg1;
- (void)_cacheTransientStateOfObject:(id)arg1;
- (void)_clearCachedTransientStateOfObject:(id)arg1;
- (BOOL)targetAndArgumentsAcceptableForPerformAction;
- (BOOL)invokeSelector:(SEL)arg1 withArguments:(id)arg2 forBinding:(id)arg3 object:(id)arg4;

@end

@interface _NSDisplayFontBinderPlugin : _NSBinderPlugin <_NSDisplayFontBinderPlugin>
{
    struct __displayFontBinderPluginFlags {
        unsigned int _isFontInvalidationCapable:1;
        unsigned int _reservedDisplayFontBinderPlugin:31;
    } _displayFontBinderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (id)fontInvalidationCapableObjectForObject:(id)arg1;

@end

@interface _NSTextColorBinderPlugin : _NSBinderPlugin <_NSTextColorBinderPlugin>
{
    struct __textColorBinderPluginFlags {
        unsigned int _isTextColorInvalidationCapable:1;
        unsigned int _reservedTextColorBinderPlugin:31;
    } _textColorBinderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (id)textColorInvalidationCapableObjectForObject:(id)arg1;

@end

@interface _NSEditableBinderPlugin : _NSBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)arg1;

@end

@interface _NSBinderPlugin : NSObject <_NSBinderPlugin>
{
    id _binder;
    struct __binderPluginFlags {
        unsigned int _isTableColumnPlugin:1;
        unsigned int _isOutlineColumnPlugin:1;
        unsigned int _isCellPlugin:1;
        unsigned int _reservedBinderPlugin:29;
    } _binderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)_deprecatedBindings;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (Class)defaultPlaceholderLookupClassForBinding:(id)arg1 object:(id)arg2;
- (id)cellOrControlForObject:(id)arg1;
- (id)viewForObject:(id)arg1;
- (id)indexPathForOutlineView:(id)arg1 row:(long long)arg2;
- (BOOL)shouldUseInvalidationForObject:(id)arg1;
- (BOOL)isInvalidationCapableObject:(id)arg1 withSelector:(SEL)arg2;
- (id)editorWithObject:(id)arg1;
- (BOOL)isEditingWithObject:(id)arg1;
- (BOOL)isEditingAtIndexPath:(id)arg1 withObject:(id)arg2;
- (BOOL)isEditingAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (BOOL)needsAction;
- (id)objectMechanismsRequired;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (void)connectionWasEstablished:(id)arg1;
- (void)connectionWasBroken:(id)arg1;
- (BOOL)handleObservingRefresh:(id)arg1;
- (BOOL)observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(BOOL)arg2 object:(id)arg3;

@end

@interface _NSBindingAdaptor : NSObject
{
    NSMutableArray *_binders;
    id _editableBinder;
    id _referenceBinder;
    id _contentBinder;
}

+ (void)copyBindingsFromObject:(id)arg1 toObject:(id)arg2;
+ (id)returnDisconnectedBindingsOfObject:(id)arg1;
+ (void)reconnectBindings:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)addBinder:(id)arg1;
- (void)removeBinder:(id)arg1;
- (id)binders;
- (void)suspendBinderObserving;
- (void)resumeBinderObserving;
- (id)editableBinder;
- (id)referenceBinder;
- (id)contentBinder;
- (void)_discardEditingForAllBinders;
- (void)_objectDidTriggerAction:(id)arg1 bindingAdaptor:(id)arg2;
- (void)objectDidTriggerDoubleClickAction:(id)arg1;
- (void)objectDidTriggerAction:(id)arg1;
- (void)_editor:(id)arg1 didChangeEditingState:(BOOL)arg2 bindingAdaptor:(id)arg3;
- (void)editorDidBeginEditing:(id)arg1;
- (void)editorDidEndEditing:(id)arg1;
- (BOOL)_handleValidationError:(id)arg1 description:(id)arg2 inEditor:(id)arg3 errorUserInterfaceHandled:(char *)arg4 bindingAdaptor:(id)arg5;
- (BOOL)handleValidationError:(id)arg1 description:(id)arg2 inEditor:(id)arg3 errorUserInterfaceHandled:(char *)arg4;
- (BOOL)_validateAndCommitValueInEditor:(id)arg1 editingIsEnding:(BOOL)arg2 errorUserInterfaceHandled:(char *)arg3 bindingAdaptor:(id)arg4;
- (BOOL)validateAndCommitValueInEditor:(id)arg1 editingIsEnding:(BOOL)arg2 errorUserInterfaceHandled:(char *)arg3;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)boundOutlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)browser:(id)arg1 selectRow:(long long)arg2 inColumn:(long long)arg3;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (void)window:(id)arg1 didChangeToVisibleState:(BOOL)arg2;
- (void)windowDidResize:(id)arg1;
- (void)drawer:(id)arg1 didChangeToState:(BOOL)arg2;
- (void)collectionView:(id)arg1 didChangeToSelectionIndexes:(id)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 didChangeToSortDescriptors:(id)arg2;
- (void)tableView:(id)arg1 didChangeToSelectedRowIndexes:(id)arg2;
- (void)tableView:(id)arg1 updateVisibleRowInformation:(struct _NSRange)arg2;
- (void)outlineColumn:(id)arg1 willDisplayOutlineCell:(id)arg2 row:(long long)arg3;
- (void)outlineColumn:(id)arg1 willDisplayCell:(id)arg2 row:(long long)arg3;
- (void)outlineView:(id)arg1 didExpandItem:(id)arg2;
- (void)outlineView:(id)arg1 willCollapseItem:(id)arg2;
- (void)tableColumn:(id)arg1 willDisplayCell:(id)arg2 row:(long long)arg3;
- (void)tableColumn:(id)arg1 didChangeToWidth:(double)arg2;
- (id)defaultSortDescriptorPrototypeForTableColumn:(id)arg1;
- (void)selectionMechanismWasDismissed:(id)arg1;
- (void)searchFieldCellOrControlDidClearRecents:(id)arg1;
- (id)updateInvalidatedObjectValue:(id)arg1 forObject:(id)arg2;
- (id)updateInvalidatedFont:(id)arg1 forObject:(id)arg2;
- (id)updateInvalidatedTextColor:(id)arg1 forObject:(id)arg2;
- (id)searchMenuTemplate;
- (BOOL)enabledStateForMenuItem:(id)arg1;
- (void)controller:(id)arg1 didChangeToSelectionIndexes:(id)arg2;
- (void)controller:(id)arg1 didChangeToSelectionIndexPaths:(id)arg2;
- (void)controller:(id)arg1 didChangeToSortDescriptors:(id)arg2;
- (void)controller:(id)arg1 didChangeToFilterPredicate:(id)arg2;

@end

@interface _NSTreeNodeObservingTracker : NSObject
{
    id _treeNodeObserver;
    NSArray *_availableModelAndProxyKeys;
    NSCountedSet *_treeNodeObservingTracking;
    id _observedTreeNodesData;
    struct __treeNodeObservingTrackerFlags {
        unsigned int _multipleObservedModelObjects:1;
        unsigned int _registersObservingWithKVOPriorKey:1;
        unsigned int _reservedModelObservingTrackerFlags:30;
    } _treeNodeObservingTrackerFlags;
    NSMutableDictionary *_observedModelKeyPathInfoTable;
}

- (id)initWithModelObserver:(id)arg1 availableModelAndProxyKeys:(id)arg2;
- (void)dealloc;
- (void)setRegistersObservingWithKVOPriorKey:(BOOL)arg1;
- (BOOL)registersObservingWithKVOPriorKey;
- (void)registerObservingForAnalyzableKeyPath:(id)arg1;
- (void)unregisterObservingForAnalyzableKeyPath:(id)arg1;
- (void)registerModelKeyPath:(id)arg1;
- (void)unregisterModelKeyPath:(id)arg1;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForKeyPath:(id)arg2 ofModelObject:(id)arg3;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForModelObject:(id)arg2;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForKeyPath:(id)arg2;
- (void)_startObservingModelObject:(id)arg1;
- (void)_stopObservingModelObject:(id)arg1;
- (void)startObservingModelObjectTree:(id)arg1;
- (void)stopAllModeObjectObserving;
- (void)startObservingModelObject:(id)arg1;
- (void)stopObservingModelObject:(id)arg1;

@end

@interface _NSBalancedModelObservingTracker : _NSModelObservingTracker
{
    NSCountedSet *_modelAndProxyKeysSet;
}

- (id)initWithModelObserver:(id)arg1 availableModelAndProxyKeys:(id)arg2;
- (void)_dealloc;
- (id)modelAndProxyKeysObserved;
- (void)addObservedKey:(id)arg1;
- (void)removeObservedKey:(id)arg1;

@end

@interface _NSModelObservingTracker : NSObject
{
    id _modelObserver;
    NSArray *_availableModelAndProxyKeys;
    NSArray *_indexReferenceModelObjectArray;
    NSMutableIndexSet *_observedModelIndexData;
    id _observedModelObjectsData;
    struct __modelObservingTrackerFlags {
        unsigned int _multipleObservedModelObjects:1;
        unsigned int _reservedModelObservingTrackerFlags:31;
    } _modelObservingTrackerFlags;
    NSMutableDictionary *_observedModelKeyPathInfoTable;
    NSMutableArray *_modelAndProxyKeysArray;
}

- (id)initWithModelObserver:(id)arg1 availableModelAndProxyKeys:(id)arg2;
- (void)_dealloc;
- (void)dealloc;
- (void)setIndexReferenceModelObjectArray:(id)arg1 clearAllModelObjectObserving:(BOOL)arg2;
- (id)indexReferenceModelObjectArray;
- (void)replaceIndexReferenceModelObjectArrayWithEqualCopy:(id)arg1;
- (void)updateReferenceIndexesToReflectInsertionAtIndex:(unsigned long long)arg1;
- (void)updateReferenceIndexesToReflectInsertionAtIndexes:(id)arg1;
- (void)updateReferenceIndexesToReflectRemovalAtIndex:(unsigned long long)arg1;
- (void)updateReferenceIndexesToReflectRemovalAtIndexes:(id)arg1;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForKeyPath:(id)arg2 ofModelObject:(id)arg3;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForModelObject:(id)arg2;
- (void)_registerOrUnregister:(BOOL)arg1 observerNotificationsForKeyPath:(id)arg2;
- (void)_startObservingModelObject:(id)arg1;
- (void)_stopObservingModelObject:(id)arg1;
- (void)startObservingModelObjectAtReferenceIndex:(unsigned long long)arg1;
- (void)stopObservingModelObjectAtReferenceIndex:(unsigned long long)arg1;
- (void)startObservingModelObjectsAtReferenceIndexes:(id)arg1;
- (void)stopObservingModelObjectsAtReferenceIndexes:(id)arg1;
- (void)setObservingToModelObjectsRange:(struct _NSRange)arg1;
- (void)startObservingModelObject:(id)arg1;
- (void)stopObservingModelObject:(id)arg1;
- (void)clearAllModelObjectObserving;
- (void)registerModelKeyPath:(id)arg1;
- (void)unregisterModelKeyPath:(id)arg1;
- (void)registerModelKeyPaths:(id)arg1 unregisterModelKeyPaths:(id)arg2;
- (void)addObservedKey:(id)arg1;
- (void)removeObservedKey:(id)arg1;
- (void)analyzeKeyPath:(id)arg1 registerOrUnregister:(BOOL)arg2;
- (id)modelAndProxyKeysObserved;
- (void)_logObservingInfo;

@end

@interface _NSExpectedObservingInfo : NSObject
{
    unsigned long long _suppressAllNotificationCounter;
    id _allSuppressedObject;
    id _specificSuppressedObject;
    NSString *_specificSuppressedKeyPath;
}

- (id)init;
- (void)dealloc;
- (void)suppressAllNotifications;
- (void)unsuppressAllNotifications;
- (void)suppressAllNotificationsFromObject:(id)arg1;
- (void)unsuppressAllNotificationsFromObject:(id)arg1;
- (void)suppressSpecificNotificationFromObject:(id)arg1 keyPath:(id)arg2;
- (void)unsuppressSpecificNotificationFromObject:(id)arg1 keyPath:(id)arg2;
- (BOOL)shouldSuppressNotificationFromObject:(id)arg1 keyPath:(id)arg2;
- (id)description;

@end

@interface _NSStringAndClassInfo : NSObject <NSCopying>
{
    NSString *_registryString;
    Class _objectClass;
    unsigned long long _registryStringHash;
    unsigned long long _objectClassHash;
    unsigned long long _hash;
}

- (id)initWithRegistryString:(id)arg1 andObjectClass:(Class)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)setRegistryString:(id)arg1;
- (void)setObjectClass:(Class)arg1;

@end

@interface _NSClassAndClassInfo : NSObject <NSCopying>
{
    Class _registryClass;
    Class _objectClass;
    unsigned long long _registryClassHash;
    unsigned long long _objectClassHash;
    unsigned long long _hash;
}

- (id)initWithRegistryClass:(Class)arg1 andObjectClass:(Class)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)setRegistryClass:(Class)arg1;
- (void)setObjectClass:(Class)arg1;

@end

@interface _NSStateMarker : NSObject <NSCopying>
{
    short _type;
    NSMapTable *_placeholderRegistry;
    NSMapTable *_cachedPlaceholderRegistry;
    NSColor *_textColor;
    unsigned long long _placeholderBindingsMask;
}

- (id)initWithType:(long long)arg1;
- (void)dealloc;
- (short)_type;
- (id)retain;
- (id)autorelease;
- (void)release;
- (id)copy;
- (unsigned long long)_hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)valueForKey:(id)arg1;
- (id)description;
- (void)setDefaultTextColor:(id)arg1;
- (id)defaultTextColor;
- (void)setDefaultPlaceholder:(id)arg1 forBinding:(id)arg2 onObjectClass:(Class)arg3;
- (id)defaultPlaceholderForBinding:(id)arg1 onObjectClass:(Class)arg2;

@end

@interface _NSTableRowHeightStorage : NSObject
{
    NSTableView *_tableView;
    struct CGRect _lastCachedRect;
    long long _lastCachedRectRowIndex;
    double _tableHeight;
    long long _minBucketSize;
    long long _heightBucketArrayCount;
    long long _heightBucketArraySize;
    struct __NSRowHeightBucket *_heightBucketArray;
    struct __rcFlags {
        unsigned int isCacheValid:1;
        unsigned int isHeightBucketArrayValid:1;
        unsigned int isComputingRowHeightSums:1;
        unsigned int reserved:29;
    } _rcFlags;
}

- (id)_debugHeightBucketArrayDescription;
- (id)initWithTableView:(id)arg1;
- (void)dealloc;
- (struct __NSRowHeightBucketLocation)_getBucketForSeekingToRow:(long long)arg1;
- (struct __NSRowHeightBucketLocation)_getBucketForSeekingToPoint:(struct CGPoint)arg1;
- (struct __NSRowHeightBucketLocation)_getBucketLocationForBucket:(long long)arg1;
- (void)_hintedGetBucketIndex:(long long *)arg1 bucketFirstRowIndex:(long long *)arg2 containingRowIndex:(long long)arg3;
- (void)_sizeHeightBucket:(struct __NSRowHeightBucket **)arg1 withSize:(long long *)arg2 toFitSize:(long long)arg3;
- (void)_shiftBucketDataFromIndex:(long long)arg1 by:(long long)arg2 insertionData:(struct __NSRowHeightBucket *)arg3;
- (void)_cacheRow:(long long)arg1 rect:(struct CGRect)arg2;
- (void)_cacheRowHeightsIntoBucket:(struct __NSRowHeightBucket *)arg1 bucketFirstRowIndex:(long long)arg2 lastCacheableRowIndex:(long long)arg3;
- (void)_recomputeBucketIndex:(long long *)arg1 bucketFirstRowIndex:(long long *)arg2;
- (BOOL)_fastGetCachedRect:(struct CGRect *)arg1 forRow:(long long)arg2;
- (void)_convert:(long long)arg1 row:(long long *)arg2 point:(struct CGPoint *)arg3 cacheHint:(BOOL)arg4;
- (struct CGPoint)_computeOriginForRow:(long long)arg1 cacheHint:(BOOL)arg2;
- (struct CGRect)computeRectOfRow:(long long)arg1 cacheHint:(BOOL)arg2;
- (long long)computeRowAtPoint:(struct CGPoint)arg1 cacheHint:(BOOL)arg2;
- (double)computeTableHeight;
- (void)_invalidateCachedRect;
- (void)createAndCacheRowHeightSumsIfNecessary;
- (void)invalidateCacheAndStorage;
- (void)beginLayoutChange;
- (void)endLayoutChange;
- (void)noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (void)insertRows:(long long)arg1 atIndex:(long long)arg2;
- (void)deleteRows:(long long)arg1 atIndex:(long long)arg2;

@end

@interface _NSMultipleSelectionMatrixPlugin : _NSMatrixPlugin <_NSMultipleSelectionBinderPlugin>
{
    struct __multipleSelectionMatrixPluginFlags {
        unsigned int _testedMode:1;
        unsigned int _reservedMultipleSelectionMatrixPlugin:31;
    } _multipleSelectionMatrixPluginFlags;
    unsigned long long _mode;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)connectionWasEstablished:(id)arg1;
- (unsigned long long)allowedValueBindingMask;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSSegmentedControlPlugin : _NSSelectionBinderPlugin
{
}

- (unsigned long long)allowedValueBindingMask;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (void)removeAllContentObjectsInCellOrControl:(id)arg1;
- (void)addContentObject:(id)arg1 isPlaceholder:(BOOL)arg2 insertsNullPlaceholder:(BOOL)arg3 value:(id)arg4 index:(long long)arg5 cellOrControl:(id)arg6;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSMatrixPlugin : _NSSelectionBinderPlugin
{
    struct __matrixPluginFlags {
        unsigned int _allowsEmptySelection:1;
        unsigned int _testedAllowsEmptySelection:1;
        unsigned int _invertedAllowsEmptySelection:1;
        unsigned int _reservedMatrixPlugin:29;
    } _matrixPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)connectionWasEstablished:(id)arg1;
- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (unsigned long long)allowedValueBindingMask;
- (unsigned long long)allowedContentBindingMask;
- (void)populateObject:(id)arg1 withContent:(id)arg2 valueKey:(id)arg3 objectKey:(id)arg4 insertsNullPlaceholder:(BOOL)arg5;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSComboBoxPlugin : _NSSelectionBinderPlugin
{
    NSDecimalNumber *_originalMinValue;
    NSDecimalNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (BOOL)prefersEnabledOverEditable:(id)arg1;
- (Class)_valueClass:(id)arg1;
- (id)objectMechanismsRequired;
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (BOOL)needsAction;
- (BOOL)needsDelegate;
- (BOOL)canPopulateWithPlaceholders;
- (BOOL)canIgnorePopulatingObject:(id)arg1;
- (void)removeAllContentObjectsInCellOrControl:(id)arg1;
- (void)addContentObject:(id)arg1 isPlaceholder:(BOOL)arg2 insertsNullPlaceholder:(BOOL)arg3 value:(id)arg4 index:(long long)arg5 cellOrControl:(id)arg6;
- (void)showValue:(id)arg1 inObject:(id)arg2;

@end

@interface _NSPopUpButtonPlugin : _NSSelectionBinderPlugin
{
    unsigned long long _dynamicContentPlacementIndex;
    struct __NSKeyValueCodingControllerModeType _modeWhileIgnoringPopUpPopulation;
    id _dynamicallyGeneratedItems;
}

- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (unsigned long long)allowedValueBindingMask;
- (unsigned long long)allowedContentBindingMask;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (void)connectionWasEstablished:(id)arg1;
- (void)recordDynamicallyGeneratedMenuItem:(id)arg1;
- (void)forgetDynamicallyGeneratedMenuItem:(id)arg1;
- (void)forgetAllDynamicallyGeneratedMenuItems;
- (BOOL)isMemberOfDynamicallyGeneratedMenuItems:(id)arg1;
- (void)removeAllContentObjectsInCellOrControl:(id)arg1;
- (id)_insertPopUpButtonItemInCellOrControl:(id)arg1 title:(id)arg2 representedObject:(id)arg3 menuItemIndex:(long long)arg4 index:(long long)arg5;
- (void)addContentObject:(id)arg1 isPlaceholder:(BOOL)arg2 insertsNullPlaceholder:(BOOL)arg3 value:(id)arg4 index:(long long)arg5 cellOrControl:(id)arg6;
- (BOOL)canIgnorePopulatingObject:(id)arg1;
- (void)storeModeWhenIgnoringObjectPopulation:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)shouldRefreshDisplayAfterSelectionMechanismWasDismissed:(id)arg1;
- (BOOL)canMixDynamicAndStaticContent;
- (long long)_supposedNumberOfItems;
- (void)_clearUnneccessaryItems:(id)arg1;
- (BOOL)_shouldCreateSelectionItemInControl:(id)arg1;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;
- (BOOL)shouldIgnoreAction:(id)arg1;
- (void)actionHasEnded:(id)arg1 sender:(id)arg2;

@end

@interface _NSSelectionBinderPlugin : _NSValueBinderPlugin <_NSSelectionBinderPlugin>
{
}

- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (unsigned long long)allowedContentBindingMask;
- (void)removeAllContentObjectsInCellOrControl:(id)arg1;
- (void)addContentObject:(id)arg1 isPlaceholder:(BOOL)arg2 insertsNullPlaceholder:(BOOL)arg3 value:(id)arg4 index:(long long)arg5 cellOrControl:(id)arg6;
- (BOOL)canPopulateWithPlaceholders;
- (BOOL)canMixDynamicAndStaticContent;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)canIgnorePopulatingObject:(id)arg1;
- (void)storeModeWhenIgnoringObjectPopulation:(struct __NSKeyValueCodingControllerModeType)arg1;
- (BOOL)shouldRefreshDisplayAfterSelectionMechanismWasDismissed:(id)arg1;
- (void)populateObject:(id)arg1 withContent:(id)arg2 valueKey:(id)arg3 objectKey:(id)arg4 insertsNullPlaceholder:(BOOL)arg5;

@end

@interface _NSProgressIndicatorPlugin : _NSDoubleValueBinderPlugin
{
}

- (BOOL)needsDelegate;
- (BOOL)needsAction;

@end

@interface _NSDoubleValueBinderPlugin : _NSValueBinderPlugin
{
    NSNumber *_originalMinValue;
    NSNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (Class)_valueClass:(id)arg1;
- (id)objectMechanismsRequired;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSMenuItemPlugin : _NSValueBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (BOOL)needsAction;
- (void)actionHasBegun:(id)arg1 sender:(id)arg2;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;
- (id)objectMechanismsRequired;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (BOOL)shouldAlwaysUpdateDisplayValue;

@end

@interface _NSDateValueBinderPlugin : _NSValueBinderPlugin
{
    NSDate *_originalMinValue;
    NSDate *_originalMaxValue;
}

- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (Class)_valueClass:(id)arg1;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)arg1;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;
- (id)editingColorAdjustableObject:(id)arg1;
- (id)objectMechanismsRequired;

@end

@interface _NSPredicateEditorPlugin : _NSValueBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (Class)_valueClass:(id)arg1;

@end

@interface _NSPathPlugin : _NSValueBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (Class)_valueClass:(id)arg1;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (void)showValue:(id)arg1 inObject:(id)arg2;

@end

@interface _NSColorWellPlugin : _NSValueBinderPlugin
{
}

- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)arg1;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSImageCellPlugin : _NSImageViewPlugin
{
}

- (BOOL)needsDelegate;
- (BOOL)needsAction;

@end

@interface _NSImageViewPlugin : _NSValueBinderPlugin
{
}

+ (id)_deprecatedBindings;
- (BOOL)prefersEnabledOverEditable:(id)arg1;
- (unsigned long long)allowedValueBindingMask;
- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSTextPlugin : _NSTextFieldPlugin
{
}

- (id)objectMechanismsRequired;
- (unsigned long long)allowedValueBindingMask;
- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (BOOL)conditionalBehaviorOffByDefault:(id)arg1;
- (BOOL)acceptsStyleChanges;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;

@end

@interface _NSPlaceholderTextFieldPlugin : _NSTextFieldPlugin
{
}

- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (id)formattedValueInObject:(id)arg1 errorEncountered:(char *)arg2 error:(id *)arg3;
- (void)showValue:(id)arg1 inObject:(id)arg2;

@end

@interface _NSTextFieldPlugin : _NSValueBinderPlugin
{
    NSDecimalNumber *_originalMinValue;
    NSDecimalNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (Class)_valueClass:(id)arg1;
- (BOOL)conditionalBehaviorOffByDefault:(id)arg1;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)arg1;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (BOOL)needsDelegate;
- (BOOL)acceptsStyleChanges;
- (id)editingColorAdjustableObject:(id)arg1;
- (id)objectMechanismsRequired;

@end

@interface _NSTokenFieldPlugin : _NSPlaceholderTextFieldPlugin
{
}

- (Class)_valueClass:(id)arg1;
- (id)shownValueInObject:(id)arg1;
- (id)formattedValueInObject:(id)arg1 errorEncountered:(char *)arg2 error:(id *)arg3;
- (void)_setPlaceholderForValue:(id)arg1 inObject:(id)arg2;
- (void)showValue:(id)arg1 inObject:(id)arg2;

@end

@interface _NSSearchFieldPlugin : _NSTextFieldPlugin
{
}

- (BOOL)needsAction;
- (unsigned long long)allowedValueBindingMask;

@end

@interface _NSCheckBoxPlugin : _NSValueBinderPlugin
{
    struct __checkBoxPluginFlags {
        unsigned int _allowsMixedState:1;
        unsigned int _testedMixedState:1;
        unsigned int _reservedCheckBoxPlugin:30;
    } _checkBoxPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)connectionWasEstablished:(id)arg1;
- (id)objectMechanismsRequired;
- (BOOL)isBooleanValueBindingForObject:(id)arg1;
- (BOOL)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char *)arg3;
- (Class)_valueClass:(id)arg1;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;
- (BOOL)shouldAlwaysUpdateDisplayValue;

@end

@interface _NSValueBinderPlugin : _NSBinderPlugin <_NSValueBinderPlugin>
{
    struct __valueBinderPluginFlags {
        unsigned int _isActionCellPlugin:1;
        unsigned int _isFormatterPlugin:1;
        unsigned int _isObjectValueInvalidationCapable:1;
        unsigned int _reservedValueBinderPlugin:29;
    } _valueBinderPluginFlags;
    unsigned long long _affectedIndex;
    NSIndexPath *_affectedIndexPath;
    Class _valueClass;
}

+ (BOOL)isUsableWithObject:(id)arg1;
- (id)initWithBinder:(id)arg1 object:(id)arg2;
- (void)dealloc;
- (id)objectValueInvalidationCapableObjectForObject:(id)arg1;
- (void)invalidateObjectValueInObject:(id)arg1;
- (id)viewForObject:(id)arg1;
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)arg1;
- (BOOL)canSupportMinAndMaxForObject:(id)arg1;
- (void)storeMin:(BOOL)arg1 andMax:(BOOL)arg2 ofObject:(id)arg3;
- (BOOL)updateCellOrControl:(id)arg1 forMinValue:(id)arg2;
- (BOOL)updateCellOrControl:(id)arg1 forMaxValue:(id)arg2;
- (BOOL)isBooleanValueBindingForObject:(id)arg1;
- (Class)_valueClass:(id)arg1;
- (Class)valueClass:(id)arg1;
- (Class)valueClass:(id)arg1 forBinding:(id)arg2;
- (BOOL)conditionalBehaviorOffByDefault:(id)arg1;
- (BOOL)prefersEnabledOverEditable:(id)arg1;
- (BOOL)needsDelegate;
- (BOOL)needsAction;
- (id)objectMechanismsRequired;
- (void)connectionWasEstablished:(id)arg1;
- (void)connectionWasBroken:(id)arg1;
- (struct __NSKeyValueCodingControllerModeType)editedMode:(id)arg1 forEditingOrAction:(BOOL)arg2;
- (id)binderReferenceObjectValue;
- (void)editingHasBegun:(id)arg1;
- (void)editingHasEnded:(id)arg1;
- (void)editingWasAborted:(id)arg1;
- (void)_actionHasBegun:(id)arg1 atIndexPath:(id)arg2;
- (void)_actionHasBegun:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)actionHasBegun:(id)arg1 sender:(id)arg2;
- (void)actionHasEnded:(id)arg1 sender:(id)arg2;
- (id)editingBinderForControl:(id)arg1;
- (BOOL)shouldIgnoreAction:(id)arg1;
- (void)showValue:(id)arg1 inObject:(id)arg2;
- (id)shownValueInObject:(id)arg1;
- (id)formattedValueInObject:(id)arg1 errorEncountered:(char *)arg2 error:(id *)arg3;
- (id)formatterOfObject:(id)arg1;
- (BOOL)isObjectTableColumnDataCell:(id)arg1;
- (BOOL)shouldProvideSortDescriptor:(id)arg1 optionsAdvertisingOnly:(BOOL)arg2;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)applyObjectValue:(id *)arg1 forBinding:(id)arg2 operation:(int *)arg3 needToRunAlert:(char *)arg4 error:(id *)arg5;

@end

@interface _NSServicesContextMenuUpdater : _NSServicesMenuUpdater
{
    id _requestorChain;
    NSMenu *_pluggingMenu;
    NSMenu *_pluggedMenu;
    NSMenuItem *_submenuItem;
}

- (id)initWithMenuRef:(struct OpaqueMenuRef *)arg1 correspondingToMenu:(id)arg2 withRequestorChain:(id)arg3;
- (void)dispose;
- (void)dealloc;
- (unsigned long long)serviceEntryKinds;
- (id)menuContext;
- (void)populateMenu:(id)arg1 withServiceEntries:(id)arg2 forDisplay:(BOOL)arg3;
- (void)performServiceFromEntry:(id)arg1;
- (id)menus;
- (void)updateForLiveServicesChangedNotification:(id)arg1;

@end

@interface _NSServicesPrincipalMenuUpdater : _NSServicesMenuUpdater
{
}

+ (id)_sharedPrincipalUpdater;
- (BOOL)menuShowsKeyEquivalents;
- (BOOL)contentsNeedsUpdatingForMenu:(id)arg1;
- (unsigned long long)serviceEntryKinds;
- (BOOL)updateMenu:(id)arg1 withEvent:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)populateMenuForUnavailableServices:(id)arg1;
- (void)addNonserviceMenuItemsToMenu:(id)arg1;
- (void)populateMenu:(id)arg1 withServiceEntries:(id)arg2 forDisplay:(BOOL)arg3;
- (id)menuContext;
- (void)updateVisibilityOfServicesItemsForMenu:(id)arg1 isForDisplay:(BOOL)arg2;
- (id)menus;

@end

@interface _NSServicesMenuUpdater : NSObject <NSMenuDelegate>
{
    unsigned long long _updateGeneration;
    struct OpaqueMenuRef *_pluggedMenuRef;
}

- (unsigned long long)serviceEntryKinds;
- (id)menuContext;
- (id)menus;
- (BOOL)menuShowsKeyEquivalents;
- (BOOL)contentsNeedsUpdatingForMenu:(id)arg1;
- (void)populateMenuForUnavailableServices:(id)arg1;
- (void)updateVisibilityOfServicesItemsForMenu:(id)arg1 isForDisplay:(BOOL)arg2;
- (void)registerCommonServicesIfNecessary;
- (id)init;
- (void)dealloc;
- (void)populateMenu:(id)arg1 withServiceEntries:(id)arg2 forDisplay:(BOOL)arg3;
- (void)insertServicesIntoMenu:(id)arg1 withKeyEvent:(id)arg2 isForDisplay:(BOOL)arg3;
- (BOOL)updateMenu:(id)arg1 withEvent:(id)arg2 withFlags:(unsigned long long)arg3;
- (BOOL)validateMenuItem:(id)arg1;
- (void)updateForLiveServicesChangedNotification:(id)arg1;
- (void)plugMenu:(id)arg1 intoMenuRef:(struct OpaqueMenuRef *)arg2;
- (void)unplugMenu:(id)arg1;
- (BOOL)isPluggedIntoMenuRef:(struct OpaqueMenuRef *)arg1;
- (void)performServiceFromEntry:(id)arg1;
- (void)_processRequest:(id)arg1;

@end

@interface NSServicesMenuHandler : NSObject
{
}

+ (id)_requestorStartingWithChain:(id)arg1 forProposedSendTypes:(id)arg2 proposedReturnTypes:(id)arg3 sendTypes:(id *)arg4 returnTypes:(id *)arg5;
+ (id)_appIdentifierFromServiceEntry:(id)arg1 appURL:(id *)arg2;
+ (int)_launchAppAtURL:(id)arg1;
+ (BOOL)_eventIsUserCancelledEvent:(id)arg1;
+ (BOOL)_checkForUserCancelledEventUpToDate:(id)arg1;
+ (int)_spinUntilWeCanConnectToApp:(struct __CFString *)arg1;
+ (void)_taskDidFinish:(id)arg1;
+ (long long)_runWorkflowForServiceEntry:(id)arg1 withPasteboard:(id)arg2 returnDataExpected:(BOOL)arg3 errorString:(id *)arg4;
+ (BOOL)_performServiceFromEntry:(id)arg1 withPasteboard:(id)arg2 withRequestor:(id)arg3 withCarbonFocus:(struct OpaqueEventTargetRef *)arg4 withSendTypes:(id)arg5 withReturnTypes:(id)arg6 canReleasePasteboardImmediately:(char *)arg7;
+ (BOOL)_performServiceFromEntry:(id)arg1 withPasteboard:(id)arg2 withRequestor:(id)arg3;
+ (BOOL)_performServiceFromDictionary:(id)arg1 withPasteboard:(id)arg2;
+ (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
+ (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
+ (id)_computeErrorForErrorCode:(long long)arg1 serviceName:(id)arg2 applicationName:(id)arg3 launchError:(int)arg4 appURL:(id)arg5 isWorkflow:(BOOL)arg6 additionalWorkflowErrorString:(id)arg7;
+ (void)_configureServicesMenu:(id)arg1;
+ (void)registerServicesMenuSendTypes:(id)arg1 returnTypes:(id)arg2;

@end

@interface NSFilePromiseDragSource : NSObject
{
    id _dragSource;
    NSArray *_filenames;
    struct __CFURL *_dropDestination;
    BOOL _dragEnded;
    int _typeCount;
}

- (id)initWithSource:(id)arg1;
- (void)dealloc;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (struct __CFURL *)copyDropDirectory;
- (void)getFilenamesAndDropLocation;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2 itemIdentifier:(long long)arg3;
- (void)setTypes:(id)arg1 onPasteboard:(id)arg2;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;

@end

@interface NSFileDragSource : NSObject
{
}

+ (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;

@end

@interface _NSWindowMenuUpdater : NSObject <NSMenuDelegate>
{
}

- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NSWindowMenuItem : NSObject
{
    NSWindow *_window;
    NSString *_path;
    NSString *_title;
}

@end

@interface NSThemeDocumentButtonPopUpMenuProxy : NSProxy
{
    id realObject;
    NSThemeDocumentButton *documentButton;
    NSPathControl *pathControl;
}

- (id)initWithDocumentButton:(id)arg1;
- (void)dealloc;
- (void)createRealObjectIfNeeded;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

@interface NSExceptionHandlingRecursiveLock : NSRecursiveLock
{
}

- (id)init;
- (void)lock;
- (void)unlock;

@end

@interface NSIconViewCell : NSTextFieldCell
{
    NSImage *_image;
    double _iconSize;
    unsigned long long _imagePosition;
}

- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (BOOL)acceptsFirstResponder;
- (id)image;
- (void)setImage:(id)arg1;
- (double)iconSize;
- (void)setIconSize:(double)arg1;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (struct CGSize)generalSizeOfAChar;
- (BOOL)_hasMultipleLinesOfText;
- (struct CGSize)maxCellTextAreaSize;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawSelectionAroundIconRect:(struct CGRect)arg1;
- (struct CGRect)rectForIconInCellFrame:(struct CGRect)arg1;
- (BOOL)drawSelection;
- (struct CGRect)_resizedTargetImageRect:(struct CGRect)arg1;
- (void)_drawImageInRect:(struct CGRect)arg1;
- (void)_ensureCellIsLoaded;
- (id)_blueHighlightColor;
- (id)_grayHighlightColor;
- (void)drawSelectionAroundTextRect:(struct CGRect)arg1;
- (id)_textAttributes;
- (id)_attributedString:(id)arg1 madeToFitInSize:(struct CGSize)arg2;
- (BOOL)_adjustTextBoundingRect:(struct CGRect *)arg1 toFitInCellFrame:(struct CGRect)arg2 withMaxSize:(struct CGSize)arg3;
- (void)_drawAttributedString:(id)arg1 withBoundingRect:(struct CGRect)arg2;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)drawingRectForBounds:(struct CGRect)arg1;
- (void)setControlView:(id)arg1;
- (unsigned long long)hitTestForRect:(struct CGRect)arg1 inCellFrame:(struct CGRect)arg2 ofView:(id)arg3;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isLoaded;
- (void)setLoaded:(BOOL)arg1;

@end

@interface _NSIconAnimation : NSAnimation
{
    double _targetIconSize;
    double _startingIconSize;
}

- (double)targetIconSize;
- (void)setTargetIconSize:(double)arg1;
- (double)startingIconSize;
- (void)setStartingIconSize:(double)arg1;
- (void)setCurrentProgress:(float)arg1;

@end

@interface _NSRubberBand : NSObject
{
    struct CGPoint _startingPoint;
    struct CGRect _currentRect;
    struct CGRect _lastRect;
    id _delegate;
    NSView *_view;
    id _data;
    NSEvent *_event;
}

- (id)initWithEvent:(id)arg1 inView:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)data;
- (void)setData:(id)arg1;
- (id)originalEvent;
- (void)performRubberBandingWithEvent:(id)arg1;
- (void)drawRubberBandWithClipRect:(struct CGRect)arg1;

@end

@interface NSIconView : NSMatrix <NSAnimationDelegate>
{
    struct {
        unsigned int unused:29;
        unsigned int allowsTypeSelect:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int needsLayoutUpdate:1;
    } _flags;
    NSMutableArray *_items;
    long long _itemCount;
    double _iconSize;
    unsigned long long _imagePosition;
    _NSRubberBand *_rubberBand;
    NSAnimation *_animation;
    unsigned long long _draggingSourceOperationMaskForLocal;
    unsigned long long _draggingSourceOperationMaskForNonLocal;
    _NSIconViewDragContext *_dragContext;
    _NSTypeSelectData *_typeSelectData;
    id _extra;
}

- (void)_setDefaultPrototypeCell;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (BOOL)isFlipped;
- (void)_performLayoutIfNeeded;
- (BOOL)getRow:(long long *)arg1 column:(long long *)arg2 ofCell:(id)arg3;
- (void)_getRowRange:(struct _NSRange *)arg1 columnRange:(struct _NSRange *)arg2 inRect:(struct CGRect)arg3;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToSuperview;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)reloadData;
- (void)deselectAllCells;
- (void)_checkLoaded;
- (long long)itemCount;
- (id)cellAtIndex:(long long)arg1;
- (void)scrollCellToVisible:(id)arg1;
- (void)_delegateLoadCell:(id)arg1 forIndex:(long long)arg2;
- (void)reloadCellAtIndex:(long long)arg1;
- (void)loadCell:(id)arg1;
- (void)drawCellAtRow:(long long)arg1 column:(long long)arg2;
- (id)makeCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)selectIndex:(long long)arg1;
- (void)selectCellAtRow:(long long)arg1 column:(long long)arg2;
- (void)updateCellSize;
- (void)_putCellNoUpdate:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)_createMatrixRowsAndColumns;
- (void)updateCell:(id)arg1;
- (id)_dropHighlightEdgeColor;
- (void)viewWillDraw;
- (void)drawRect:(struct CGRect)arg1;
- (double)iconSize;
- (void)setIconSize:(double)arg1;
- (void)animateSetIconSize:(double)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (unsigned long long)imagePosition;
- (void)setImagePosition:(unsigned long long)arg1;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_setNeedsDisplayForIndex:(long long)arg1;
- (void)_setNeedsDisplayInRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_isCellSelected:(id)arg1;
- (struct CGRect)cellFrameForCell:(id)arg1;
- (void)_setState:(long long)arg1 ofCell:(id)arg2;
- (void)deselectCell:(id)arg1;
- (void)deselectIndex:(long long)arg1;
- (void)_flipStateForCell:(id)arg1;
- (void)setSelectedIndexes:(id)arg1;
- (id)selectedIndexes;
- (id)_firstSelectedCell;
- (long long)cellIndexAtPoint:(struct CGPoint)arg1;
- (id)cellAtPoint:(struct CGPoint)arg1;
- (id)_cellThatHasContentAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_userSelectionIndexesForProposedSelection:(id)arg1;
- (void)selectAll:(id)arg1;
- (BOOL)_userCanSelectIndex:(long long)arg1 withNewSelectedIndexes:(id)arg2;
- (BOOL)_userCanSelectIndex:(long long)arg1;
- (BOOL)_userCanSelectCell:(id)arg1;
- (BOOL)_flipStateOfCellsInIndexSet:(id)arg1 toState:(long long)arg2;
- (BOOL)_userSetStateOfCellsInSet:(id)arg1 toState:(long long)arg2;
- (void)_trackMouseForHitCell:(id)arg1 withEvent:(id)arg2;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)rubberBand:(id)arg1 rectangleFrom:(struct CGRect)arg2 to:(struct CGRect)arg3 withEvent:(id)arg4;
- (void)setNeedsLayout;
- (BOOL)needsLayout;
- (void)superviewFrameChanged:(id)arg1;
- (void)setFont:(id)arg1;
- (BOOL)getRow:(long long *)arg1 column:(long long *)arg2 forPoint:(struct CGPoint)arg3;
- (BOOL)acceptsFirstResponder;
- (BOOL)_hasKeyboardFocus;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_setFocusRingNeedsDisplay;
- (void)setKeyCell:(id)arg1;
- (BOOL)_delegateRespondsTo_nextTypeSelectMatchFromIndex;
- (long long)_delegate_nextTypeSelectMatchFromIndex:(long long)arg1 toIndex:(long long)arg2 forString:(id)arg3;
- (BOOL)_delegateRespondsTo_typeSelectStringForIndex;
- (id)_delegateTypeSelectStringForIndex:(long long)arg1;
- (BOOL)_delegateRespondsTo_shouldTypeSelectForEvent;
- (BOOL)_delegate_shouldTypeSelectForEvent:(id)arg1 withCurrentSearchString:(id)arg2;
- (id)currentTypeSelectSearchString;
- (BOOL)_shouldTypeSelectForEvent:(id)arg1;
- (id)_typeSelectStringForIndex:(long long)arg1;
- (id)_internalTypeSelectStringForIndex:(long long)arg1;
- (long long)_nextTypeSelectMatchFromIndex:(long long)arg1 toIndex:(long long)arg2 forString:(id)arg3;
- (long long)_internalNextTypeSelectMatchFromIndex:(long long)arg1 toIndex:(long long)arg2 forString:(id)arg3;
- (BOOL)_performTypeSelect:(id)arg1;
- (void)_typeSelectEndCurrentSearch;
- (BOOL)_typeSelectUndoLastSearch;
- (BOOL)_typeSelectInterpretKeyEvent:(id)arg1;
- (long long)_findFirstNonSelectedIndexFrom:(long long)arg1 to:(long long)arg2 selectedIndexes:(id)arg3;
- (void)_handleArrowMovementForChar:(unsigned short)arg1;
- (void)moveDown:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (BOOL)_delegateRespondsToWriteIndexes;
- (BOOL)_sendDelegateWriteIndexes:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)dragImageForIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (void)_dragIndexes:(id)arg1 withEvent:(id)arg2 pasteboard:(id)arg3 source:(id)arg4 slideBack:(BOOL)arg5;
- (BOOL)_performDragFromMouseDown:(id)arg1;
- (void)setDropTargetIndex:(long long)arg1;
- (void)_setNeedsDisplayForDropIndex:(long long)arg1;
- (long long)_determineDropIndexForDragInfo:(id)arg1;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (void)_validateDropForDragInfo:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)ignoreModifierKeysWhileDragging;
- (BOOL)allowsTypeSelect;
- (void)setAllowsTypeSelect:(BOOL)arg1;

@end

@interface _NSEmptyIconViewCell : NSCell
{
}

+ (id)sharedEmptyIconViewCell;
- (BOOL)acceptsFirstResponder;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)setControlView:(id)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;

@end

@interface _NSIconViewDragContext : NSObject
{
    long long dropIndex;
    unsigned long long dragOperation;
    long long lastDropIndex;
    unsigned long long lastDropSourceMask;
}

@end

@interface NSNavIconViewDelegate : NSNavFileListDelegate <NSIconViewDelegate>
{
    NSIconView *_iconView;
    NSNavNode *_currentDirectoryNode;
    NSArray *_previouslyHighlightedNodes;
}

- (void)dealloc;
- (id)iconView;
- (void)setIconView:(id)arg1;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)_deselectAnySelectedDirectories;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (long long)numberOfItemsInIconView:(id)arg1;
- (void)iconView:(id)arg1 loadCell:(id)arg2 forIndex:(long long)arg3;
- (id)iconView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (long long)iconView:(id)arg1 nextTypeSelectMatchFromIndex:(long long)arg2 toIndex:(long long)arg3 forString:(id)arg4;
- (BOOL)iconView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (id)currentTypeSelectSearchString;
- (BOOL)iconView:(id)arg1 performKeyEquivalent:(id)arg2;
- (void)iconView:(id)arg1 didClickOnDisabledCell:(id)arg2;
- (BOOL)iconView:(id)arg1 writeIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (void)prepareForReloadChildrenForNode:(id)arg1;
- (void)_sendSelectionChangedNotification;
- (void)reloadChildrenForNode:(id)arg1;
- (void)reloadDisplayState;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (id)_cachedChildrenForNode:(id)arg1 allowInteraction:(BOOL)arg2;
- (void)_setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (id)_selectedNodesWithEntireSelection:(BOOL)arg1;
- (id)selectedNodesIncludingDirectories;
- (id)selectedNodes;
- (void)_iconViewAction:(id)arg1;
- (void)_iconViewDoubleAction:(id)arg1;
- (BOOL)_reloadChildNode:(id)arg1;
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (struct CGRect)sourceFrameOnScreenForNavNode:(id)arg1;
- (id)transitionImageForNavNode:(id)arg1;
- (id)view;

@end

@interface NSNavIconView : NSIconView
{
    NSCell *_fauxHighlightedCell;
    unsigned int _showPreviewIcon:1;
    unsigned int _reserved:31;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)showPreviewIcon;
- (void)_setDefaultPrototypeCell;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)sendMouseUpActionForDisabledCell:(id)arg1;
- (void)mouseDown:(id)arg1;

@end

@interface NSNavSegmentedCell : NSSegmentedCell
{
}

@end

@interface NSNavIconViewCell : NSIconViewCell
{
    struct {
        unsigned int isFauxDisabled:1;
        unsigned int _reserved:31;
    } _navFlags;
    NSNavNode *_node;
    NSNavNodePreviewHelper *_nodePreviewHelper;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)_releaseNodePreviewHelper;
- (void)_createNewNodePreviewHelper;
- (void)handlePreviewImageChanged;
- (struct CGSize)previewSize;
- (BOOL)previewImageShouldHaveIconModeThumbnail;
- (void)setDisplayState:(int)arg1;
- (void)setNode:(id)arg1 displayState:(int)arg2;
- (BOOL)isFauxDisabled;
- (void)setIconSize:(double)arg1;
- (struct CGSize)_scaleImageSize:(struct CGSize)arg1 toFitInSize:(struct CGSize)arg2;
- (void)_drawImageInRect:(struct CGRect)arg1;
- (void)drawSelectionAroundTextRect:(struct CGRect)arg1;
- (void)_drawAttributedString:(id)arg1 withBoundingRect:(struct CGRect)arg2;
- (id)node;
- (id)accessibilityAttributeNames;
- (id)accessibilityFilenameAttribute;
- (BOOL)accessibilityFilenameAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityURLAttributeSettable;

@end

@interface NSCarbonMenuWindow : NSCarbonWindow
{
    NSMutableDictionary *_trackingRectDictionary;
    struct OpaqueEventHandlerRef *_windowEventHandler;
    struct OpaqueEventHandlerRef *_controlEventHandler;
    struct {
        unsigned int windowRefIsDeallocated:1;
        unsigned int settingFirstResponder:1;
        unsigned int unhandledKey:1;
        unsigned int blockInputContext:1;
        unsigned int keyWindowProperties:2;
        unsigned int reserved:26;
    } _flags;
    id _rememberedKeyWindow;
    long long *_rememberedWindowOrdering;
    unsigned long long _rememberedWindowOrderingCount;
    id _carbonMenuWindowReserved;
}

+ (double)_scaleFactorForStyleMask:(unsigned long long)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)_handleKeyEvent:(id)arg1;
- (BOOL)_allowsActiveInputContext;
- (BOOL)_shouldPropagateFrameChangesToWindowServer;
- (BOOL)_allowsActiveInputContextDuringMenuTracking;
- (void)_sendManufacturedTrackingAreaEventsForMouseDraggedEvent:(id)arg1 forceExit:(BOOL)arg2;
- (BOOL)_sendManufacturedCursorUpdateEventForTrackingRectEvent:(id)arg1;
- (id)_runLoopModesForInvalidCursorRectsObserver;
- (BOOL)_handleEventsTheCarbonWay;
- (void)_recordPreviousKeyWindowProperties;
- (void)_clearPreviousKeyWindowProperties;
- (void)makeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)_hasActiveControls;
- (void)_setLastHitView:(id)arg1;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)arg1 takingOwnership:(BOOL)arg2 disableOrdering:(BOOL)arg3;
- (void)_installTrackingRect:(struct CGRect)arg1 assumeInside:(BOOL)arg2 userData:(void *)arg3 trackingNum:(long long)arg4;
- (void)_moveTrackingArea:(id)arg1 toRect:(struct CGRect)arg2;
- (void)_installTrackingRects:(struct CGRect *)arg1 insideList:(char *)arg2 userDataList:(void **)arg3 trackingNumList:(long long *)arg4 count:(long long)arg5;
- (void *)_trackingAreaInfoForTrackingRectTag:(long long)arg1;
- (void)_removeTrackingRect:(long long)arg1;
- (void)_removeTrackingRects:(long long *)arg1 count:(long long)arg2;
- (void)_setCursorRect:(struct CGRect)arg1 index:(long long)arg2;
- (void)_discardCursorRect:(long long)arg1;
- (void)_removeReferencesToCarbonWindowRef;
- (void)_postCarbonWindowActivateEvent:(BOOL)arg1 makeKeyWindow:(BOOL)arg2;
- (void)_updateMouseMovedState;
- (void)_setVisible:(BOOL)arg1;
- (id)_findKeyWindowToRestoreFromSavedProperties;
- (id)_substituteKeyWindowForAction:(SEL)arg1;
- (void)_restorePreviousKeyWindowFromSavedProperties;
- (void)_carbonWindowRefChangedVisibilityTo:(BOOL)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_propagateCocoaDirtyRectsForView:(id)arg1 toCarbonView:(struct OpaqueControlRef *)arg2;
- (void)_recursivelyPropagateCocoaDirtyRectsForView:(id)arg1 toCarbonView:(struct OpaqueControlRef *)arg2;
- (void)_recursivelyPropagateCocoaDirtyRectsToCarbonForHIView:(struct OpaqueControlRef *)arg1;
- (void)displayIfNeeded;
- (void)enableFlushWindow;
- (void)_enableFlushWindowWithoutPerformingFlush;
- (BOOL)accessibilityIsChildOfApp;
- (BOOL)makeFirstResponder:(id)arg1;

@end

@interface _NSCarbonMenuWindowTrackingAreaReference : NSObject
{
    struct CGRect rect;
    void *userData;
    struct OpaqueHIViewTrackingAreaRef *trackingRef;
    long long trackingNum;
    struct {
        unsigned int inside:1;
        unsigned int enabledDuringMouseDrag:1;
        unsigned int isCursorRect:1;
        unsigned int reserved:29;
    } f;
}

@end

@interface NSMenuItemViewer : NSView
{
    NSMenuItem *_menuItem;
    NSView *_menuItemView;
    struct CGRect _clipRect;
    struct {
        unsigned int settingSize:1;
        unsigned int drawnFromCarbon:1;
        unsigned int reserved:30;
    } _menuItemViewerFlags;
    void *_hiView;
    struct CGSize _minimumViewSize;
    id _rememberedFirstResponder;
    id _itemViewerReserved[2];
}

+ (struct __CFString *)_getMenuItemViewerHIViewClassRegisteringIfNecessary;
- (id)_menuItemView;
- (id)_menuItem;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_setFrameFromHIViewFrame:(struct CGRect)arg1;
- (void)_menuItemViewFrameChanged:(id)arg1;
- (struct CGSize)_minimumViewSize;
- (void)_setMenuItemView:(id)arg1;
- (void)_setHIView:(void *)arg1;
- (void *)_hiView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 forMenuItem:(id)arg2;
- (BOOL)wantsDefaultClipping;
- (void)drawMenuItemBackgroundWithHighlight:(BOOL)arg1 inRect:(struct CGRect)arg2 withClipRect:(struct CGRect)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (void)_setClipRect:(struct CGRect)arg1;
- (BOOL)lockFocusIfCanDraw;
- (id)_enclosingMenuItem;
- (id)opaqueAncestor;
- (BOOL)_isContainedInMenu;
- (BOOL)_rememberAndResignFirstResponder;
- (BOOL)_restoreOrBecomeFirstResponder;
- (void)_displayRectIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3;
- (void)_displayFromCarbonIgnoringOpacity;

@end

@interface NSRuleEditor : NSControl
{
    id _ruleDataSource;
    id _ruleDelegate;
    NSIndexSet *_draggingRows;
    NSMutableArray *_rowCache;
    NSView *_slicesHolder;
    NSMutableArray *_slices;
    double _sliceHeight;
    double _alignmentGridWidth;
    long long _subviewIndexOfDropLine;
    id _dropLineView;
    NSViewAnimation *_currentAnimation;
    NSTimer *_frameTimer;
    NSString *_stringsFileName;
    id _standardLocalizer;
    id _headerLocalizer;
    NSPredicate *_predicate;
    long long _nestingMode;
    struct {
        unsigned int elideUpdating:1;
        unsigned int lastAlternateKeyValue:1;
        unsigned int extendedDelegateCalls:1;
        unsigned int editable:1;
        unsigned int settingSize:1;
        unsigned int suppressKeyDown:1;
        unsigned int dropWasSuccessful:1;
        unsigned int delegateWantsValidation:1;
        unsigned int disallowEmpty:1;
        unsigned int lastDrewWithFRAppearance:1;
        unsigned int allowsEmptyCompoundRows:1;
        unsigned int dropChangedRowCount:1;
        unsigned int reserved:20;
    } _ruleEditorFlags;
    NSString *_typeKeyPath;
    NSString *_itemsKeyPath;
    NSString *_valuesKeyPath;
    NSString *_subrowsArrayKeyPath;
    Class _rowClass;
    id _boundArrayOwner;
    NSString *_boundArrayKeyPath;
    id _ruleReserved1;
    long long _lastRow;
    id _ruleReserved2;
}

- (id)_createSliceDropSeparator;
- (void)_initRuleEditorShared;
- (BOOL)_wantsMinimalArchival;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (long long)_queryNumberOfChildrenOfItem:(id)arg1 withRowType:(unsigned long long)arg2;
- (BOOL)_queryCanSelectItem:(id)arg1 displayValue:(id)arg2 inRow:(long long)arg3;
- (id)_queryChild:(long long)arg1 ofItem:(id)arg2 withRowType:(long long)arg3;
- (id)_queryValueForItem:(id)arg1 inRow:(long long)arg2;
- (id)_queryOrderLocalizedDictionaries:(id)arg1 withParent:(id)arg2;
- (void)_windowUpdate:(id)arg1;
- (id)_setWindow:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)selectAll:(id)arg1;
- (BOOL)_ruleViewHasFirstResponder;
- (BOOL)_isInDesignMode;
- (BOOL)_wantsRowAnimations;
- (void)_setSuppressKeyDownHandling:(BOOL)arg1;
- (BOOL)_suppressKeyDownHandling;
- (double)_minimumFrameHeight;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_windowChangedKeyState;
- (id)_createNewSliceWithFrame:(struct CGRect)arg1 ruleEditorView:(id)arg2;
- (id)_newSlice;
- (void)_postRuleOptionChangedNotification;
- (void)_postRowCountChangedNotificationOfType:(long long)arg1 indexes:(id)arg2;
- (void)_updateSliceIndentationAtIndex:(long long)arg1 toIndentation:(long long)arg2 withIndexSet:(id)arg3;
- (void)_updateSliceIndentations;
- (void)_stopAnimationWithoutChangingFrames;
- (void)_updateSliceRows;
- (void)_reconfigureSubviewsAnimate:(BOOL)arg1;
- (void)_stopObservingRowObjectsRecursively:(id)arg1;
- (void)_startObservingRowObjectsRecursively:(id)arg1;
- (void)_changedRowArray:(id)arg1 withOldRowArray:(id)arg2 forParent:(id)arg3;
- (void)_loadInitialRows;
- (void)_getAllAvailableItems:(id *)arg1 values:(id *)arg2 asChildrenOfItem:(id)arg3 inRow:(long long)arg4;
- (long long)_layoutOrderForItem:(id)arg1 inRow:(long long)arg2;
- (id)_layoutOrdersForChoiceRootedAtItem:(id)arg1 inRow:(long long)arg2;
- (id)_extendItem:(id)arg1 withRow:(long long)arg2;
- (void)setRowHeight:(double)arg1;
- (double)rowHeight;
- (void)_setPrivateDelegateMethodsEnabled:(BOOL)arg1;
- (BOOL)_privateDelegateMethodsEnabled;
- (void)setFormattingStringsFilename:(id)arg1;
- (id)formattingStringsFilename;
- (void)_setHeaderLocalizer:(id)arg1;
- (void)_setStandardLocalizer:(id)arg1;
- (void)setFormattingDictionary:(id)arg1;
- (id)formattingDictionary;
- (id)_localizerForSlice:(id)arg1;
- (id)predicateForRow:(long long)arg1;
- (void)_updatePredicate;
- (void)_sendRuleAction;
- (void)sizeToFit;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setCanRemoveAllRows:(BOOL)arg1;
- (BOOL)canRemoveAllRows;
- (BOOL)_allowsEmptyCompoundRows;
- (void)_setAllowsEmptyCompoundRows:(BOOL)arg1;
- (void)reloadPredicate;
- (void)reloadCriteria;
- (void)_removeSubrowsForRow:(long long)arg1 fromSet:(id)arg2;
- (id)_uniqueizeIndexSet:(id)arg1;
- (void)addRow:(id)arg1;
- (void)insertRowAtIndex:(long long)arg1 withType:(unsigned long long)arg2 asSubrowOfRow:(long long)arg3 animate:(BOOL)arg4;
- (void)setCriteria:(id)arg1 andDisplayValues:(id)arg2 forRowAtIndex:(long long)arg3;
- (void)removeRowAtIndex:(long long)arg1;
- (void)removeRowsAtIndexes:(id)arg1 includeSubrows:(BOOL)arg2;
- (id)_rowCacheForIndex:(long long)arg1;
- (id)_searchCacheForRowObject:(id)arg1;
- (void)_fullCacheUpdateRecursive:(id)arg1 intoRow:(long long *)arg2 withIndentation:(long long)arg3;
- (void)_fullCacheUpdate;
- (id)_rootRowsArray;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setBoundDataSource:(id)arg1 withKeyPath:(id)arg2 options:(id)arg3;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (id)_insertNewRowAtIndex:(long long)arg1 ofType:(unsigned long long)arg2 withParentRow:(long long)arg3;
- (id)_subrowObjectsOfObject:(id)arg1;
- (BOOL)_findRowObject:(id)arg1 startingAtObject:(id)arg2 withIndex:(long long *)arg3;
- (long long)_rowIndexForRowObject:(id)arg1;
- (long long)_countOfRowsStartingAtObject:(id)arg1;
- (id)_globalIndexesForSubrowIndexes:(id)arg1 ofParentObject:(id)arg2;
- (void)setNestingMode:(unsigned long long)arg1;
- (unsigned long long)nestingMode;
- (unsigned long long)_applicableNestingMode;
- (void)_setAlignmentGridWidth:(double)arg1;
- (double)_alignmentGridWidth;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)predicate;
- (void)_setPredicate:(id)arg1;
- (long long)_lastRow;
- (long long)numberOfRows;
- (id)subrowIndexesForRow:(long long)arg1;
- (id)criteriaForRow:(long long)arg1;
- (id)displayValuesForRow:(long long)arg1;
- (long long)rowForDisplayValue:(id)arg1;
- (unsigned long long)rowTypeForRow:(long long)arg1;
- (long long)parentRowForRow:(long long)arg1;
- (void)_changedItem:(id)arg1 toItem:(id)arg2 inRow:(long long)arg3;
- (BOOL)_nextUnusedItems:(id *)arg1 andValues:(id *)arg2 forRow:(long long)arg3 forRowType:(unsigned long long)arg4;
- (id)_getItemsAndValuesToAddForRow:(long long)arg1 ofType:(unsigned long long)arg2;
- (void)_addOptionFromSlice:(id)arg1 ofRowType:(unsigned long long)arg2;
- (void)_deleteSlice:(id)arg1;
- (BOOL)isFlipped;
- (id)_backgroundColors;
- (id)_sliceTopBorderColor;
- (id)_sliceBottomBorderColor;
- (id)_sliceLastBottomBorderColor;
- (id)_dragHandleColors;
- (void)_drawSliceBackgroundsWithClipRect:(struct CGRect)arg1;
- (id)_selectedActiveRowColor;
- (id)_selectedInactiveRowColor;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_shouldHideAddButtonForSlice:(id)arg1;
- (BOOL)_shouldHideSubtractButtonForSlice:(id)arg1;
- (BOOL)_validateItem:(id)arg1 value:(id)arg2 inRow:(long long)arg3;
- (id)_toolTipForAddSimpleRowButton;
- (id)_toolTipForAddCompoundRowButton;
- (id)_toolTipForDeleteRowButton;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_includeSubslicesForSlicesAtIndexes:(id)arg1;
- (id)_childlessParentsIfSlicesWereDeletedAtIndexes:(id)arg1;
- (id)_dragImageForIndices:(id)arg1;
- (long long)_lastSelectedSliceIndex;
- (id)_selectedSliceIndices;
- (id)selectedRowIndexes;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (id)_selectedSlices;
- (void)_performClickOnSlice:(id)arg1 withEvent:(id)arg2;
- (void)_mouseDownOnSlice:(id)arg1 withEvent:(id)arg2;
- (void)_rightMouseDownOnSlice:(id)arg1 withEvent:(id)arg2;
- (void)_deselectAll;
- (BOOL)_plusMinusButtonsAcceptFirstMouse;
- (id)_draggingTypes;
- (BOOL)_performDragForSlice:(id)arg1 withEvent:(id)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (unsigned long long)_dragOperationFromInfo:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (unsigned long long)_updateDragging:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)setRowClass:(Class)arg1;
- (Class)rowClass;
- (void)setRowTypeKeyPath:(id)arg1;
- (id)rowTypeKeyPath;
- (void)setSubrowsKeyPath:(id)arg1;
- (id)subrowsKeyPath;
- (void)setCriteriaKeyPath:(id)arg1;
- (id)criteriaKeyPath;
- (void)setDisplayValuesKeyPath:(id)arg1;
- (id)displayValuesKeyPath;
- (void)_recursiveGenerateFormattingDictionaryPlistForItem:(id)arg1 rowType:(unsigned long long)arg2 intoArray:(id)arg3 withPriorValues:(id)arg4 hasSiblings:(BOOL)arg5;
- (id)_generateFormattingDictionaryStringsFile;

@end

@interface _NSRuleEditorViewSliceHolder : NSView
{
}

- (BOOL)isFlipped;

@end

@interface _NSRuleEditorViewUnboundRowHolder : NSObject <NSCoding>
{
    NSMutableArray *boundArray;
}

- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface _NSRuleEditorCache : NSObject
{
    id rowObject;
    long long rowIndex;
    long long indentation;
}

- (id)description;

@end

@interface NSRuleEditorLocalizer : NSObject
{
    NSMutableArray *_default;
    NSMutableArray *_localized;
    NSDictionary *_dictionary;
    id _ruleEditorLocalizerReserved;
}

- (BOOL)_tokenizeString:(id)arg1 intoArray:(id)arg2 ignoringSeparators:(BOOL)arg3 errorDescription:(id *)arg4;
- (BOOL)_parseHalf:(id)arg1 intoArray:(id)arg2 isValue:(BOOL)arg3 ignoringSeparators:(BOOL)arg4 errorDescription:(id *)arg5;
- (id)_extractOrderedNonStaticItemsFromArray:(id)arg1;
- (BOOL)_parseKey:(id)arg1 value:(id)arg2 errorDescription:(id *)arg3;
- (id)dictionary;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;
- (id)_localizedItemForDefaultItemAtLayoutIndex:(unsigned long long)arg1 inDefaultItemsAtIndex:(long long)arg2;
- (id)_constructTitleMappingDictionariesFromOptionDictionaries:(id)arg1 localizationItemIndex:(unsigned long long *)arg2;
- (id)localizeOptionDictionaries:(id)arg1;

@end

@interface NSRuleEditorViewSlice : NSView <NSCoding>
{
    NSRuleEditor *_ruleEditor;
    NSColor *_backgroundColor;
    long long _indentation;
    struct CGRect _animationTargetRect;
    struct {
        unsigned int selected:1;
        unsigned int lastSelected:1;
        unsigned int hideNonPartDrawing:1;
        unsigned int reserved:29;
    } _flags;
    long long _rowIndex;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 ruleEditorView:(id)arg2;
- (id)_curveColorForIndentation:(long long)arg1;
- (struct CGShading *)_backgroundShader;
- (BOOL)containsDisplayValue:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)_relayoutSubviewsWidthChanged:(BOOL)arg1;
- (void)_reconfigureSubviews;
- (void)setIndentation:(long long)arg1;
- (long long)indentation;
- (void)setRowIndex:(long long)arg1;
- (long long)rowIndex;
- (BOOL)_isSelected;
- (void)_setSelected:(BOOL)arg1;
- (BOOL)_isLastSelected;
- (void)_setLastSelected:(BOOL)arg1;
- (void)_setHideNonPartDrawing:(BOOL)arg1;
- (void)_setAnimationTargetRect:(struct CGRect)arg1;
- (struct CGRect)_animationTargetRect;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;

@end

@interface NSRuleEditorViewSliceDropSeparator : NSRuleEditorViewSlice
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSRuleEditorViewSliceRow : NSRuleEditorViewSlice
{
    NSMutableArray *_ruleOptionViews;
    NSMutableArray *_ruleOptionFrames;
    NSMutableArray *_correspondingRuleItems;
    NSMutableArray *_ruleOptionInitialViewFrames;
    NSButton *_addButton;
    NSButton *_subtractButton;
    long long _rowType;
    long long _plusButtonRowType;
    struct {
        unsigned int editable:1;
        unsigned int reserved:31;
    } _sliceRowFlags;
    id _sliceRowReserved;
}

+ (void)initialize;
- (double)_interviewHorizontalPadding;
- (double)_minimumVerticalPopupPadding;
- (double)_leftmostViewFixedHorizontalPadding;
- (double)_indentationHorizontalPadding;
- (double)_rowButtonsRightHorizontalPadding;
- (double)_rowButtonsLeftHorizontalPadding;
- (double)_rowButtonsInterviewHorizontalPadding;
- (id)_createAddRowButton;
- (id)_createDeleteRowButton;
- (id)_createStaticTextFieldWithStringValue:(id)arg1;
- (id)_createPopUpButtonWithItems:(id)arg1 selectedItemIndex:(long long)arg2;
- (id)_createMenuItemWithTitle:(id)arg1;
- (id)_createMenuSeparatorItem;
- (BOOL)_isRuleStaticTextField:(id)arg1;
- (BOOL)_isRulePopup:(id)arg1;
- (void)_initShared;
- (id)initWithFrame:(struct CGRect)arg1 ruleEditorView:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (double)_alignmentGridWidth;
- (void)_tightenResizables:(id)arg1 intoGivenWidth:(double)arg2;
- (double)_minWidthForPass:(long long)arg1 forView:(id)arg2 withProposedMinWidth:(double)arg3;
- (void)_relayoutSubviewsWidthChanged:(BOOL)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_ruleOptionPopupChangedAction:(id)arg1;
- (void)_emptyRulePartSubviews;
- (void)_updateEnabledStateForSubviews;
- (id)_sortOptionDictionariesByLayoutOrder:(id)arg1;
- (void)_reconfigureSubviews;
- (void)_addOption:(id)arg1;
- (void)_deleteOption:(id)arg1;
- (BOOL)_nestingModeShouldHideAddButton;
- (BOOL)_nestingModeShouldHideSubtractButton;
- (void)_updateButtonVisibilities;
- (void)_setHideNonPartDrawing:(BOOL)arg1;
- (unsigned long long)_rowType;
- (void)_setRowType:(unsigned long long)arg1;
- (BOOL)containsDisplayValue:(id)arg1;
- (void)_configurePlusButtonByRowType:(long long)arg1;
- (BOOL)_plusMinusButtonsAcceptFirstMouse;
- (void)_setRowTypeToAddFromPlusButton:(long long)arg1;
- (BOOL)_dropsIndentWhenImmediatelyBelow;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)viewDidMoveToWindow;

@end

@interface NSRuleEditorButton : NSButton
{
}

- (Class)classForCoder;

@end

@interface NSRuleEditorButtonCell : NSButtonCell
{
}

- (struct CGRect)drawTitle:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)bezelStyle;
- (void)setRuleEditorButtonType:(long long)arg1;
- (id)initTextCell:(id)arg1;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (BOOL)_acceptsFirstMouseForEvent:(id)arg1 inView:(id)arg2;

@end

@interface NSRuleEditorTextFieldCell : NSTextFieldCell
{
}

@end

@interface NSRuleEditorTextField : NSTextField
{
}

- (id)hitTest:(struct CGPoint)arg1;

@end

@interface NSRuleEditorPopupButton : NSPopUpButton
{
}

+ (void)initialize;
- (void)sizeToFit;

@end

@interface NSRuleEditorPopupButtonCell : NSPopUpButtonCell
{
}

- (BOOL)sliceIsEditable;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (unsigned long long)arrowPosition;

@end

@interface NSCoreUIImageRep : NSImageRep
{
    struct __CFDictionary *_coreUIImageOptions;
}

+ (id)imageRepWithCocoaName:(id)arg1;
+ (id)imageRepWithCGImage:(struct CGImage *)arg1;
+ (id)imageRepWithCGLayer:(struct CGLayer *)arg1;
- (id)initWithCoreUIDrawOptions:(struct __CFDictionary *)arg1 size:(struct CGSize)arg2;
- (id)initWithCocoaName:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithCGLayer:(struct CGLayer *)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)state;
- (void)setState:(unsigned long long)arg1;
- (void)setBackgroundStyle:(unsigned long long)arg1;
- (BOOL)isTemplate;
- (void)setTemplate:(BOOL)arg1;
- (BOOL)_wantsToBeCached;
- (BOOL)suppressesCache;
- (void)setSuppressesCache:(BOOL)arg1;
- (BOOL)hasEffects;
- (void)addEffects:(id)arg1;
- (struct CGRect)boundingRectWithExtraEffectsForState:(unsigned long long)arg1 backgroundStyle:(unsigned long long)arg2;
- (struct CGRect)boundingRectWithExtraEffects:(id)arg1;
- (BOOL)_isValid;
- (id)description;
- (struct __CFDictionary *)coreUIDrawOptions;
- (BOOL)draw;

@end

@interface NSTrackingArea : NSObject <NSCopying, NSCoding>
{
    struct CGRect _rect;
    id _owner;
    NSDictionary *_userInfo;
    unsigned long long _options;
    long long _privateFlags;
    void *_reserved;
}

+ (void)initialize;
+ (BOOL)_isTrackingAreaObject:(id)arg1;
+ (void)_retainTrackingTag:(long long)arg1;
+ (void)_releaseTrackingTag:(long long)arg1;
+ (void)_autoreleaseTrackingTag:(long long)arg1;
- (id)initWithRect:(struct CGRect)arg1 options:(unsigned long long)arg2 owner:(id)arg3 userInfo:(id)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)description;
- (struct CGRect)rect;
- (void)_setRect:(struct CGRect)arg1;
- (id)owner;
- (id)userInfo;
- (void *)_userInfo;
- (unsigned long long)options;
- (void)_setInstallPending:(BOOL)arg1;
- (BOOL)_installPending;
- (void)_setUninstallPending:(BOOL)arg1;
- (BOOL)_uninstallPending;
- (void)_setInstalled:(BOOL)arg1;
- (BOOL)_installed;
- (void)_setEnabled:(BOOL)arg1;
- (BOOL)_enabled;
- (void)_setRemoved:(BOOL)arg1;
- (BOOL)_removed;
- (void)mouseMoved:(id)arg1;
- (void)_mouseEntered:(id)arg1;
- (void)_mouseExited:(id)arg1;
- (void)_sendMouseCancelledFromWindow:(id)arg1;

@end

@interface _NSPathLocationAnimation : NSAnimation
{
    NSMutableArray *_originalWidths;
}

- (void)dealloc;
- (void)addOriginalWidth:(double)arg1;
- (double)originalWidthForIndex:(long long)arg1;
- (long long)originalWidthsCount;
- (void)setCurrentProgress:(float)arg1;

@end

@interface NSPathCell : NSActionCell <NSOpenSavePanelDelegate>
{
    NSColor *_backgroundColor;
    NSMutableArray *_borderColors;
    NSMutableArray *_cells;
    NSPathComponentCell *_clickedCell;
    NSPathComponentCell *_hoveredCell;
    NSPopUpButtonCell *_popUpButtonCell;
    struct CGRect _currentRect;
    NSAnimation *_animation;
    NSArray *_allowedTypes;
    SEL _doubleAction;
    id _delegate;
    CDStruct_9fab449c _piFlags;
    long long _pathStyle;
    id _aux;
}

+ (Class)pathComponentCellClass;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)allowedTypes;
- (void)setAllowedTypes:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)_setNeedsSizeUpdate;
- (id)_valueAsFilePath;
- (void)_stopAnimation;
- (void)_autoUpdateCellContents;
- (id)pathComponentCells;
- (void)setPathComponentCells:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (id)URL;
- (void)setURL:(id)arg1;
- (void)_updateSizesForInteriorFrame:(struct CGRect)arg1;
- (id)_activeBackgroundColor;
- (id)_inActiveBackgroundColor;
- (id)_titleAttributes;
- (void)setControlSize:(unsigned long long)arg1;
- (void)setFont:(id)arg1;
- (struct CGSize)_iconSize;
- (id)_scaleImage:(id)arg1 forSize:(struct CGSize)arg2 lockFocusOK:(BOOL)arg3;
- (void)_setupPopUpButtonCellWithResizedImages:(BOOL)arg1;
- (id)_realPlaceHolderAttributedString;
- (void)setEnabled:(BOOL)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (long long)pathStyle;
- (void)setBordered:(BOOL)arg1;
- (void)setBezelStyle:(unsigned long long)arg1;
- (void)setPathStyle:(long long)arg1;
- (void)setBorderColor:(id)arg1 forEdge:(unsigned long long)arg2;
- (id)_borderColors;
- (id)borderColorForEdge:(unsigned long long)arg1;
- (void)setBorderColor:(id)arg1;
- (void)_drawBorderWithFrame:(struct CGRect)arg1;
- (struct CGRect)_insetFrameForBorder:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_updateCell;
- (void)_updateTrackingRects;
- (void)_createHoverChangeAnimation;
- (void)animationDidEnd:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)animation:(id)arg1 didReachProgressMark:(float)arg2;
- (void)_setHoveredCell:(id)arg1;
- (id)_hoveredCell;
- (void)mouseEntered:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)mouseExited:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)addPathComponentCell:(id)arg1;
- (void)insertPathComponentCell:(id)arg1 atIndex:(long long)arg2;
- (void)removePathComponentCellAtIndex:(long long)arg1;
- (id)pathComponentCellAtPoint:(struct CGPoint)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (struct CGRect)rectOfPathComponentCell:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)_changeContentsToPath:(id)arg1;
- (BOOL)_sendActionOrDoubleAction:(BOOL)arg1;
- (void)performClick:(id)arg1;
- (void)_setClickedPathComponentCell:(id)arg1;
- (void)_menuItemClick:(id)arg1;
- (void)_willDisplayOpenPanel:(id)arg1;
- (void)_otherItemClick:(id)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)_popUpMenu;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (id)clickedPathComponentCell;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setPlaceholderString:(id)arg1;
- (id)placeholderString;
- (void)setPlaceholderAttributedString:(id)arg1;
- (id)placeholderAttributedString;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)resetCursorRect:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)_resetClickedCell;
- (id)menuForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_menuDidEndTracking:(id)arg1;

@end

@interface NSPathControl : NSControl
{
    unsigned long long _draggingSourceOperationMaskForLocal;
    unsigned long long _draggingSourceOperationMaskForNonLocal;
    long long _reserved;
    id _delegate;
    id _aux;
}

+ (Class)cellClass;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setCell:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)arg1 adding:(BOOL)arg2;
- (void)_removeTrackingRects;
- (void)updateTrackingAreas;
- (BOOL)_isFirstResponder;
- (struct CGRect)_mainContentBounds;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)_hasRectangularFocusRingAroundFrame;
- (BOOL)preservesContentDuringLiveResize;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)isFlipped;
- (void)_setNeedsDisplay;
- (void)_windowChangedKeyState;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)resignFirstResponder;
- (id)clickedPathComponentCell;
- (id)pathComponentCells;
- (void)setPathComponentCells:(id)arg1;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)arg1;
- (id)URL;
- (void)setURL:(id)arg1;
- (long long)pathStyle;
- (void)setPathStyle:(long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)pathCell:(id)arg1 willDisplayOpenPanel:(id)arg2;
- (void)pathCell:(id)arg1 willPopUpMenu:(id)arg2;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1;
- (id)_dragImageForCell:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (BOOL)_performDragOfCell:(id)arg1 fromMouseDown:(id)arg2;
- (void)mouseDown:(id)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)ignoreModifierKeysWhileDragging;
- (id)_draggedURL:(id)arg1;
- (void)_ensureDragContext;
- (void)_updateDropTargetToCell:(id)arg1;
- (void)_updateDropTargetForDraggingInfo:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)setMenu:(id)arg1;
- (id)menu;

@end

@interface NSPathControlDragContext : NSObject
{
    unsigned long long _dropOperation;
    NSPathComponentCell *_dropCell;
}

- (void)dealloc;
@property unsigned long long dropOperation; // @synthesize dropOperation=_dropOperation;
@property(retain) NSPathComponentCell *dropCell; // @synthesize dropCell=_dropCell;

@end

@interface NSPathComponentCell : NSTextFieldCell
{
    NSImage *_image;
    double _fullWidth;
    double _resizedWidth;
    double _currentWidth;
    NSURL *_url;
    struct {
        unsigned int shouldDrawArrow:1;
        unsigned int drawsAsNavigationBar:1;
        unsigned int isFirstItem:1;
        unsigned int isLastItem:1;
        unsigned int isDropTarget:1;
        unsigned int reserved:27;
    } _flags;
    id _aux;
}

+ (struct CGSize)_iconSizeForControlSize:(unsigned long long)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (BOOL)_isDropTarget;
- (void)_setIsDropTarget:(BOOL)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)URL;
- (void)setURL:(id)arg1;
- (void)_setDrawsAsNavigationBar:(BOOL)arg1;
- (void)_setIsFirstItem:(BOOL)arg1;
- (void)_setIsLastItem:(BOOL)arg1;
- (BOOL)_shouldDrawArrow;
- (void)_setShouldDrawArrow:(BOOL)arg1;
- (void)_setShouldDrawArrowYes;
- (id)_textAttributes;
- (id)imageNamed:(id)arg1;
- (double)_overlapAmount;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (double)_fullWidth;
- (void)setFont:(id)arg1;
- (double)_minWidth;
- (long long)_compareToCell:(id)arg1;
- (double)_resizedWidth;
- (void)_setResizedWidth:(double)arg1;
- (double)_currentWidth;
- (void)_setCurrentWidth:(double)arg1;
- (void)_drawNavigationBarBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)_iconSize;
- (BOOL)_textDimsWhenDisabled;
- (BOOL)_shouldHighlightDropTarget;
- (long long)interiorBackgroundStyle;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;

@end

@interface NSNavAdvancedSearchController : NSViewController <NSRuleEditorDelegate, NSComboBoxDataSource>
{
    NSWindow *_editSearchTermsWindow;
    NSRuleEditor *_ruleEditor;
    NSArrayController *_searchTermsArrayController;
    NSPopUpButton *_rootItem;
    NSPopUpButton *_extraRootItems;
    NSPopUpButton *_kindPopUpButton;
    NSMenuItem *_anyAttributeMenuItem;
    NSView *_plainTextFieldView;
    NSView *_textFieldWithOptionsView;
    NSView *_booleanOptionsView;
    NSView *_dateOptionsView;
    NSView *_numberOptionsView;
    NSComboBox *_keywordsComboBox;
    NSComboBox *_kindsComboBox;
    NSTokenField *_keywordsTokenField;
    NSWindow *_saveSearchWindow;
    NSButton *_saveForAllAppsButton;
    NSTextField *_saveAsTextField;
    NSButton *_saveQueryButton;
    BOOL _seperatorAdded;
    BOOL _canShowAttributes;
    BOOL _addingAnyAttributeItem;
    long long _updateCount;
    NSView *_ruleItemsView;
    NSMutableArray *_availableSearchAttributes;
    NSArray *_searchKeywords;
    NSArray *_searchKinds;
    NSMetadataQuery *_searchKeywordsQuery;
    NSMetadataQuery *_searchKindQuery;
    id _delegate;
}

- (id)init;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)ruleEditor;
- (void)_setSearchSlice:(int)arg1 toHaveAttributeName:(id)arg2 inButton:(id)arg3;
- (void)_createAttributeNameMapping;
- (void)loadView;
- (void)_searchTermsWindowBecameKey:(id)arg1;
- (void)_editOtherSliceKind:(id)arg1;
- (void)_searchTermsOkClick:(id)arg1;
- (void)_searchTermsCancelClick:(id)arg1;
- (void)_addRootSeperatorIfNeeded;
- (id)_findItemWithAttributeName:(id)arg1 inMenu:(id)arg2;
- (id)_otherMenuItemForAttributeName:(id)arg1;
- (void)_customFieldWindowSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (id)queryString;
- (id)criteriaSlices;
- (id)anyAttributeString;
- (void)_createRowForCriteriaSlice:(id)arg1;
- (void)setCriteriaSlices:(id)arg1 anyAttributeString:(id)arg2;
- (void)_updateQueryString:(id)arg1;
- (id)availableSearchAttributes;
- (id)searchKeywords;
- (void)_reloadComboBoxWithTag:(long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)tokenField:(id)arg1 completionsForSubstring:(id)arg2 indexOfToken:(long long)arg3 indexOfSelectedItem:(long long *)arg4;
- (id)_createValueListQueryForAttribute:(id)arg1;
- (void)_loadKeywords;
- (void)_loadSearchKinds;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (void)ruleEditorRowsDidChange:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)_saveQueryClick:(id)arg1;
- (void)_cancelSaveQueryClick:(id)arg1;
- (void)_saveQuerySheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)runPromptToSaveQueryWithName:(id)arg1 modalForWindow:(id)arg2;

@end

@interface _NSSearchSliceKindHandler : NSObject
{
    int _searchSliceType;
    NSString *_attributeName;
}

- (id)initWithSearchSliceType:(int)arg1 attributeName:(id)arg2;
- (id)initWithAttributeName:(id)arg1;
- (long long)_relativeStartingDayForDateOptionType:(int)arg1;
- (long long)_dateUnitMultiplierForSearchDateSpan:(int)arg1;
- (id)queryStringForItems:(id)arg1 values:(id)arg2;
- (id)criteriaSliceForCriteria:(id)arg1 values:(id)arg2;
- (void)setCriteriaSlice:(id)arg1 forRuleEditer:(id)arg2 withRootMenuItem:(id)arg3 atRowIndex:(long long)arg4;
- (void)dealloc;
- (int)searchSliceType;
- (id)attributeName;

@end

@interface NSNavRuleEditor : NSRuleEditor
{
}

@end

@interface NSOutlineColumnMockGroup : NSObject
{
    long long _row;
    NSTableColumn *_tableColumn;
}

+ (id)outlineColumnGroupForRow:(long long)arg1 column:(long long)arg2 tableView:(id)arg3;
+ (id)outlineColumnGroupForRow:(long long)arg1 tableColumn:(id)arg2;
- (id)initWithRow:(long long)arg1 tableColumn:(id)arg2;
- (id)initWithRow:(long long)arg1 column:(long long)arg2 tableView:(id)arg3;
- (void)dealloc;
- (long long)row;
- (long long)column;
- (long long)accessibilityColumnIndex;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (struct CGRect)_groupRect;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;

@end

@interface NSOutlineMockDisclosureTriangle : NSObject
{
    long long _row;
    NSOutlineView *_outlineView;
    NSTableColumn *_column;
}

- (id)initWithRow:(long long)arg1 column:(long long)arg2 outlineView:(id)arg3;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)row;
- (long long)column;
- (id)accessibilityAttributeNames;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;

@end

@interface NSDictionaryDetailBinder : NSArrayDetailBinder
{
}

+ (id)binderClassesSuperseded;
+ (id)bindingsForObject:(id)arg1;
+ (BOOL)isUsableWithObject:(id)arg1;
- (id)_referenceBinding;
- (id)_optionsForBinding:(id)arg1 specifyOnlyIfDifferentFromDefault:(BOOL)arg2;
- (void)noteContentValueHasChanged;
- (void)_refreshDetailContentInBackground:(BOOL)arg1;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (BOOL)_canGuaranteeOrderOfContentObjects;
- (BOOL)_performArrayBinderOperation:(long long)arg1 singleObject:(id)arg2 multipleObjects:(id)arg3 singleIndex:(unsigned long long)arg4 multipleIndexes:(id)arg5 selectionMode:(int *)arg6;

@end

@interface NSDictionaryController : NSArrayController
{
    void *_reserved5;
    void *_reserved6;
    void *_reserved7;
    id _contentDictionary;
    NSString *_initialKey;
    id _initialValue;
    unsigned long long _minimumInsertionKeyIndex;
    NSString *_localizedKeyStringsFileName;
    NSDictionary *_localizedKeyForKeyDictionary;
    NSDictionary *_keyForLocalizedKeyDictionary;
    NSArray *_includedKeys;
    NSArray *_excludedKeys;
    struct __dictionaryControllerFlags {
        unsigned int _deepCopiesValues:1;
        unsigned int _suppressBuildingDictionary:1;
        unsigned int _reservedDictionaryController:30;
    } _dictionaryControllerFlags;
}

+ (id)_nonAutomaticObservingKeys;
+ (Class)_defaultObjectClass;
- (void)_init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_dealloc;
- (id)_keyForLocalizedKeyDictionary;
- (id)_transformationForString:(id)arg1 dictionary:(id)arg2;
- (id)_localizedKeyForKey:(id)arg1;
- (id)_keyForLocalizedKey:(id)arg1;
- (id)_insertionKeyForDictionary:(id)arg1 minimumIndex:(unsigned long long *)arg2;
- (id)_dictionaryForKeyValuePairArray:(id)arg1 pullExcludedKeysFromDictionary:(id)arg2;
- (id)_keyValuePairArrayForDictionary:(id)arg1 reuseKeyValuePairsFromArray:(id)arg2;
- (void)setInitialKey:(id)arg1;
- (id)initialKey;
- (void)setInitialValue:(id)arg1;
- (id)initialValue;
- (void)setDeepCopiesValues:(BOOL)arg1;
- (BOOL)deepCopiesValues;
- (void)setIncludedKeys:(id)arg1;
- (id)includedKeys;
- (void)setExcludedKeys:(id)arg1;
- (id)excludedKeys;
- (void)_recomputeLocalizedKeys;
- (void)setLocalizedKeyDictionary:(id)arg1;
- (id)localizedKeyDictionary;
- (void)_updateLocalizedDictionaryForNewLocalizedKeyTable;
- (void)setLocalizedKeyTable:(id)arg1;
- (id)localizedKeyTable;
- (id)newObject;
- (void)_prepareContentWithNewObject:(id)arg1;
- (void)_setArrayContentInBackground:(id)arg1;
- (void)_setContentInBackground:(id)arg1;
- (void)setContent:(id)arg1;
- (id)content;
- (BOOL)canRemove;
- (BOOL)_sendsContentChangeNotifications;
- (id)_arrayContent;
- (void)_buildAndAssignNewContentDictionary;
- (void)_noteKeyValuePairChangedKey:(id)arg1;
- (void)_noteKeyValuePairChangedValue:(id)arg1;
- (void)_insertObject:(id)arg1 atArrangedObjectIndex:(unsigned long long)arg2 objectHandler:(id)arg3;
- (void)_insertObjects:(id)arg1 atArrangedObjectIndexes:(id)arg2 objectHandler:(id)arg3;
- (void)_removeObjectAtArrangedObjectIndex:(unsigned long long)arg1 objectHandler:(id)arg2;
- (void)_removeObjectsAtArrangedObjectIndexes:(id)arg1 contentIndexes:(id)arg2 objectHandler:(id)arg3;
- (void)_removeObjects:(id)arg1 objectHandler:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;

@end

@interface _NSControllerKeyValuePair : NSObject
{
    NSDictionaryController *_dictionaryController;
    NSString *_localizedKey;
    NSString *_key;
    id _value;
    struct __controllerKeyValuePairFlags {
        unsigned int _isExplicitlyIncluded:1;
        unsigned int _reservedControllerKeyValuePair:31;
    } _controllerKeyValuePairFlags;
}

- (id)init;
- (void)dealloc;
- (void)setDictionaryController:(id)arg1;
- (id)dictionaryController;
- (void)_setWithoutNotificationLocalizedKey:(id)arg1 key:(id)arg2;
- (BOOL)_validateAnyKey:(id)arg1 error:(id *)arg2;
- (BOOL)validateLocalizedKey:(id *)arg1 error:(id *)arg2;
- (void)_setLocalizedKeyWithoutKey:(id)arg1;
- (void)setLocalizedKey:(id)arg1;
- (id)localizedKey;
- (BOOL)validateKey:(id *)arg1 error:(id *)arg2;
- (void)_setKeyWithoutLocalizedKey:(id)arg1;
- (void)setKey:(id)arg1;
- (id)key;
- (BOOL)validateValue:(id *)arg1 error:(id *)arg2;
- (void)_setValueWithoutNotification:(id)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (void)_markAsExplicitlyIncluded:(BOOL)arg1;
- (BOOL)isExplicitlyIncluded;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface NSDocumentTypeDescription : NSObject
{
    NSString *_className;
    int _role;
    NSString *_oldStyleName;
    NSString *_oldStyleAlias;
    id _identifierOrIdentifiers;
    NSArray *_exportableTypeIdentifiersOrOldStyleNames;
    NSArray *_fileNameExtensionsAndHFSFileTypes;
    NSString *_persistentStoreType;
}

+ (id)namesByAlias;
+ (id)aliasesByName;
+ (BOOL)parsesLSItemContentTypes;
+ (BOOL)_validateDeclarationString:(id)arg1 forKey:(id)arg2;
+ (BOOL)_validateDeclarationStrings:(id)arg1 forKey:(id)arg2;
+ (id)descriptionsWithDeclarations:(id)arg1;
+ (void)_addUniqueNameOrNames:(id)arg1 toNames:(id)arg2;
+ (id)_noneOrQuotingOfText:(id)arg1;
- (id)_initWithDeclaration:(id)arg1 cachedNamesByAlias:(id)arg2;
- (void)dealloc;
- (BOOL)isIdentifiedByUTIs;
- (id)className;
- (BOOL)isEditableByThisApp;
- (BOOL)isViewableByThisApp;
- (id)firstName;
- (BOOL)isIdentifiedByName:(id)arg1;
- (id)appSpecificPresentableNameForName:(id)arg1;
- (BOOL)exactlyMatchesFileNameExtensionOrHFSFileType:(id)arg1;
- (BOOL)matchesAnyFile;
- (id)fileNameExtensionsAndHFSFileTypes;
- (void)getReadableNotWritable:(BOOL)arg1 names:(id)arg2;
- (BOOL)isNativeName:(id)arg1;
- (id)persistentStoreType;
- (id)description;

@end

@interface NSLabelViewCell : NSActionCell
{
    long long _selectedParts;
    long long _hoveredPart;
    unsigned long long _imagePosition;
    BOOL _allowsMultipleSelection;
    long long _focusedPart;
}

- (void)_commonInit;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_isSelectedPart:(long long)arg1;
- (void)_selectPart:(long long)arg1;
- (void)_deselectPart:(long long)arg1;
- (void)_valueChanged:(id)arg1;
@property long long diskLabelValues; // @dynamic diskLabelValues;
- (BOOL)_isHoveredPart:(long long)arg1;
- (struct CGRect)part:(long long)arg1 boundsWithFrame:(struct CGRect)arg2;
- (id)_labelAttributes;
- (struct CGRect)_boundsForLabel:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)_drawBackgroundForPartRect:(struct CGRect)arg1 isPressedOrHovered:(BOOL)arg2;
- (void)_drawPart:(long long)arg1 withFrame:(struct CGRect)arg2;
- (long long)_partAtPoint:(struct CGPoint)arg1 inFrame:(struct CGRect)arg2;
- (id)_nameForLabelPart:(long long)arg1;
- (id)_currentLabelName;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_handleMouseMovedForEvent:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)mouseEntered:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)mouseExited:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
@property(readonly) long long numParts; // @dynamic numParts;
- (void)performClick:(id)arg1;
@property long long focusedPart; // @dynamic focusedPart;
@property BOOL allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property unsigned long long imagePosition; // @synthesize imagePosition=_imagePosition;
@property long long hoveredPart; // @synthesize hoveredPart=_hoveredPart;

@end

@interface NSLabelView : NSControl
{
}

+ (Class)cellClass;
@property unsigned long long imagePosition; // @dynamic imagePosition;
@property BOOL allowsMultipleSelection; // @dynamic allowsMultipleSelection;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateTrackingAreas;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)_setNeedsDisplayForPart:(long long)arg1;
- (void)_setFocusedPart:(long long)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;

@end

@interface NSWordMLWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableString *_documentStr;
    NSFileWrapper *_fileWrapper;
    NSZipFileArchive *_archive;
}

- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (void)setDocumentAttributes:(id)arg1;
- (BOOL)_isWordML;
- (void)_writeCharacterAttributes:(id)arg1;
- (void)_writeParagraphStyle:(id)arg1;
- (void)_writeDocumentProperties;
- (void)_writeFonts;
- (void)_writeDocumentAttributes;
- (id)_coreProperties;
- (id)_appProperties;
- (id)_metaProperties;
- (void)_generateDocument;
- (id)archive:(id)arg1 contentsForEntryName:(id)arg2;
- (id)archive:(id)arg1 propertiesForEntryName:(id)arg2;
- (id)XMLFormatData;
- (id)fileWrapper;
- (id)zipFileArchive;
- (id)docxFormatData;

@end

@interface NSWordMLReader : NSObject <NSXMLParserDelegate>
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSZipFileArchive *_archive;
    NSMutableDictionary *_styles;
    long long _errorCode;
    long long _parseState;
    long long _indexingLimit;
    long long _thumbnailLimit;
    NSMutableDictionary *_namespaces;
    NSMutableDictionary *_elementValues;
    NSMutableArray *_qualifiedAttributeNames;
    NSMutableDictionary *_relationships;
    NSMutableParagraphStyle *_curParStyle;
    NSMutableDictionary *_listDefinitions;
    NSMutableArray *_textBlocks;
    NSMutableArray *_textTables;
    NSMutableArray *_textTableRows;
    NSMutableArray *_textTableRowArrays;
    NSMutableDictionary *_curParAttributes;
    NSMutableDictionary *_curAttributes;
    NSMutableDictionary *_fontCache;
    NSMutableString *_curString;
    NSString *_curDocumentAttribute;
    NSString *_curStyleName;
    double _defaultTabInterval;
    long long _listLevel;
    long long _listNumber;
    long long _prevListLevel;
    long long _prevListNumber;
    BOOL _seenSect;
    BOOL _hasOOXMLNamespace;
}

+ (id)defaultParagraphStyle;
- (id)_dateForString:(id)arg1;
- (void)_addMarkersToList:(id)arg1 range:(struct _NSRange)arg2;
- (id)_textListsForListNumber:(long long)arg1 level:(long long)arg2;
- (void)_parseParagraphAttributesFromElement:(long long)arg1 attributes:(id)arg2;
- (void)_parseCharacterAttributesFromElement:(long long)arg1 attributes:(id)arg2;
- (void)_changeNamespace:(long long)arg1 fromPrefix:(id)arg2 toPrefix:(id)arg3;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (BOOL)_parseData:(id)arg1;
- (void)_parse;
- (void)dealloc;
- (id)initWithArchive:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;

@end

@interface NSOpenDocumentWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSFileWrapper *_fileWrapper;
    NSZipFileArchive *_archive;
    NSMutableArray *_paraStyleStrings;
    NSMutableArray *_paraStyleArrays;
    NSMutableArray *_charStyleStrings;
    NSMutableArray *_charStyleArrays;
    NSMutableArray *_tableStyleStrings;
    NSMutableArray *_tableColumnStyleStrings;
    NSMutableArray *_tableCellStyleStrings;
    NSMutableArray *_listStyleStrings;
    NSMutableDictionary *_fontNames;
    unsigned long long _tableNumber;
}

- (id)initWithAttributedString:(id)arg1;
- (void)dealloc;
- (void)setDocumentAttributes:(id)arg1;
- (unsigned long long)_spanClassForAttributes:(id)arg1 inParagraphClass:(unsigned long long)arg2 spanClass:(unsigned long long)arg3;
- (id)_defaultValueForAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)_paragraphClassforParagraphStyle:(id)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)_blockClassForBlock:(id)arg1;
- (void)_openBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_closeBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (unsigned long long)_listClassForListRange:(struct _NSRange)arg1;
- (void)_openListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_closeListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_generateContent;
- (id)archive:(id)arg1 contentsForEntryName:(id)arg2;
- (id)contentData;
- (id)metaData;
- (id)fileWrapper;
- (id)zipFileArchive;
- (id)openDocumentFormatData;

@end

@interface NSOpenDocumentReader : NSObject <NSXMLParserDelegate>
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSZipFileArchive *_archive;
    NSMutableDictionary *_styles;
    NSMutableDictionary *_defaultStyles;
    NSMutableDictionary *_listStyles;
    long long _errorCode;
    long long _parseState;
    long long _recursionLevel;
    long long _indexingLimit;
    long long _thumbnailLimit;
    NSMutableDictionary *_namespaces;
    NSMutableDictionary *_elementValues;
    NSMutableArray *_qualifiedAttributeNames;
    NSMutableParagraphStyle *_curParStyle;
    id _curLink;
    NSMutableArray *_textLists;
    NSMutableArray *_textListLocations;
    NSMutableDictionary *_curListStyle;
    NSArray *_curLists;
    NSMutableArray *_textBlocks;
    NSMutableArray *_textTables;
    NSMutableArray *_textTableRows;
    NSMutableArray *_textTableRowArrays;
    NSMutableArray *_tabStops;
    NSMutableDictionary *_curParAttributes;
    NSMutableDictionary *_curAttributes;
    NSMutableDictionary *_fontCache;
    NSMutableString *_curString;
    NSString *_curDocumentAttribute;
    NSString *_curStyleName;
    double _defaultTabInterval;
    BOOL seenSect;
}

+ (id)defaultParagraphStyle;
- (id)_dateForString:(id)arg1;
- (void)_parseParagraphAttributesFromElement:(long long)arg1 attributes:(id)arg2;
- (void)_parseCharacterAttributesFromElement:(long long)arg1 attributes:(id)arg2;
- (void)_addMarkersToList:(id)arg1 range:(struct _NSRange)arg2;
- (void)_applyAttributes:(id)arg1;
- (void)_changeNamespace:(long long)arg1 fromPrefix:(id)arg2 toPrefix:(id)arg3;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (BOOL)_parseData:(id)arg1;
- (void)_parse;
- (void)dealloc;
- (id)initWithArchive:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)arg1;

@end

@interface NSTreeControllerTreeNode : NSTreeNode
{
    NSString *_childrenKeyPath;
    NSString *_leafKeyPath;
    NSString *_countKeyPath;
    NSTreeController *_treeController;
    struct __NSTreeControllerTreeNodeFlags {
        unsigned int _observingIsSetup:1;
        unsigned int _isUpdatingChildNodes:1;
        unsigned int _observingRepresentedObjectChildren:1;
        unsigned int reserved:29;
    } _NSTreeControllerTreeNodeFlags;
}

- (id)initWithRepresentedObject:(id)arg1 treeController:(id)arg2;
- (void)dealloc;
- (void)_detachFromParent;
- (void)_setupObserving;
- (void)_tearDownObserving;
- (void)_configureObservingForChildNodesWithOption:(unsigned long long)arg1;
- (void)_configureObservingWithOption:(unsigned long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)leafKeyPath;
- (id)childrenKeyPath;
- (id)countKeyPath;
- (void)willAccessChildNodes;
- (unsigned long long)countOfSubNodes;
- (long long)_leafState;
- (BOOL)isLeaf;
- (void)setRepresentedObject:(id)arg1;
- (void)insertObject:(id)arg1 inSubNodesAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromSubNodesAtIndex:(unsigned long long)arg1;
- (void)_removeSubNodesAtIndexes:(id)arg1;
- (void)updateChildNodesForKeyPath:(id)arg1 affectedIndexPaths:(id)arg2;

@end

@interface NSTreeNode : NSObject
{
    id _childNodesProxy;
    id _representedObject;
    void *_observationInfo;
    id _reserved2;
    NSMutableArray *_childNodes;
    NSTreeNode *_parentNode;
    struct __NSTreeNodeFlags {
        unsigned int ignoreObserving:1;
        unsigned int reserved:31;
    } _NSTreeNodeFlags;
}

+ (id)treeNodeWithRepresentedObject:(id)arg1;
- (id)init;
- (id)initWithRepresentedObject:(id)arg1;
- (void)dealloc;
- (id)description;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_insertObject:(id)arg1 inSubNodesAtIndex:(unsigned long long)arg2;
- (void)insertObject:(id)arg1 inSubNodesAtIndex:(unsigned long long)arg2;
- (void)_removeObjectFromSubNodesAtIndex:(unsigned long long)arg1;
- (void)removeObjectFromSubNodesAtIndex:(unsigned long long)arg1;
- (void)_removeSubNodesAtIndexes:(id)arg1;
- (void)removeSubNodesAtIndexes:(id)arg1;
- (BOOL)hasAncestor:(id)arg1;
- (void)_disableObserving;
- (void)_enableObserving;
- (BOOL)_ignoreObserving;
- (id)observedObject;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (void)_detachFromParent;
- (void)setParentNode:(id)arg1;
- (id)parentNode;
- (id)_privateChildNodes;
- (id)childNodes;
- (id)mutableChildNodes;
- (id)descendantNodeAtIndexPath:(id)arg1;
- (void)willAccessChildNodes;
- (BOOL)isLeaf;
- (void)getSubNodes:(id *)arg1 range:(struct _NSRange)arg2;
- (id)subNodesAtIndexes:(id)arg1;
- (id)subnodeAtIndex:(unsigned long long)arg1;
- (id)objectInSubNodesAtIndex:(unsigned long long)arg1;
- (unsigned long long)childCountForKeyPath:(id)arg1;
- (unsigned long long)count;
- (unsigned long long)countOfSubNodes;
- (void)startObservingModelKeyPath:(id)arg1;
- (id)_indexPath;
- (id)indexPath;
- (void)sortWithSortDescriptors:(id)arg1 recursively:(BOOL)arg2;
- (id)_descendantNodeWithRepresentedObjectLineage:(id)arg1;
- (id)objectAtIndexPath:(id)arg1;

@end

@interface _NSTreeNodeChildNodesArrayProxy : NSObject
{
    NSTreeNode *_treeNode;
}

- (id)initWithTreeNode:(id)arg1;
- (unsigned long long)countOfSubNodes;
- (id)objectInSubNodesAtIndex:(unsigned long long)arg1;
- (id)subNodesAtIndexes:(id)arg1;
- (void)getSubNodes:(id *)arg1 range:(struct _NSRange)arg2;
- (void)removeObjectFromSubNodesAtIndex:(unsigned long long)arg1;
- (void)removeSubNodesAtIndexes:(id)arg1;
- (void)insertObject:(id)arg1 inSubNodesAtIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 inSubNodesAtIndexes:(id)arg2;

@end

@interface NSViewWindowBackingStoreBuffer : NSViewBuffer
{
    NSWindow *_window;
    struct CGRect _windowRect;
    struct CGRect _savedRect;
    NSImage *_savedImage;
}

- (id)initWithView:(id)arg1;
- (void)dealloc;
- (BOOL)cacheRect:(struct CGRect)arg1;
- (BOOL)restore;

@end

@interface NSOneLevelViewBuffer : NSViewBuffer
{
    NSWindow *_window;
    struct CGLayer *_cgLayer;
}

- (id)initWithView:(id)arg1;
- (void)dealloc;
- (void)invalidate;
- (BOOL)cacheRect:(struct CGRect)arg1;
- (BOOL)restore;

@end

@interface NSViewBuffer : NSObject
{
    BOOL _isValid;
    NSView *_view;
    struct CGRect _viewRect;
}

- (id)initWithView:(id)arg1;
- (BOOL)isValid;
- (void)invalidate;
- (void)validate;
- (BOOL)cacheRect:(struct CGRect)arg1;
- (BOOL)restore;

@end

@interface _NSViewAnimator : _NSObjectAnimator
{
}

- (void)setAlphaValue:(double)arg1;
- (void)setBackgroundFilters:(id)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setCompositingFilter:(id)arg1;
- (void)setContentFilters:(id)arg1;
- (void)setFrameCenterRotation:(double)arg1;
- (void)setFrameRotation:(double)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setShadow:(id)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)addSubview:(id)arg1;
- (void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (id)superview;
- (id)subviews;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;

@end

@interface NSAnimationContext : NSObject
{
    double _duration;
    id _reserved[5];
}

+ (id)currentContext;
+ (void)beginGrouping;
+ (void)endGrouping;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)duration;
- (void)setDuration:(double)arg1;
- (id)init;
- (void)dealloc;

@end

@interface _NSMainThreadTiledViewBackingLayer : CATiledLayer
{
    NSView *_view;
}

+ (BOOL)shouldDrawOnMainThread;
- (void)_appkitViewBackingLayerUniqueMethod;
- (id)description;
- (id)_view;
- (void)_setView:(id)arg1;

@end

@interface _NSThreadedTiledViewBackingLayer : CATiledLayer
{
    NSView *_view;
}

- (void)_appkitViewBackingLayerUniqueMethod;
- (id)description;
- (id)_view;
- (void)_setView:(id)arg1;

@end

@interface _NSViewBackingLayer : CALayer
{
    NSView *_view;
}

- (void)_appkitViewBackingLayerUniqueMethod;
- (id)description;
- (id)_view;
- (void)_setView:(id)arg1;

@end

@interface NSNavOutlineDateCell : NSTextFieldCell
{
    double _lastWidth;
    int _dateDetailLevel;
    int _todayAndYesterdayLevel;
    double _detailLevelWidths[5];
    double _detailNaturalWidths[4];
    NSDateFormatter *_lastDateFormatter;
    int _lastDetailLevel;
    NSString *_lastStringValue;
    unsigned int _calculatedDetailLevelWidths:1;
    unsigned int _useRelativeDates:1;
    unsigned int _reservedDC:30;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
@property(nonatomic) BOOL useRelativeDates; // @dynamic useRelativeDates;
- (id)timeDateFormatter;
- (id)_dateFormatterForDetailLevel:(int)arg1;
- (double)_widthOfLongestDateStringWithLevel:(int)arg1;
- (id)_todayString;
- (id)_yesterdayString;
- (void)resetDateFormats;
- (void)_updateDetailLevelWidths;
- (void)_updateDetailLevel;
- (id)_yesterdayStringToDrawForDate:(id)arg1;
- (id)_todayStringToDrawForDate:(id)arg1;
- (id)_dateStringToDraw;
- (void)setObjectValue:(id)arg1;
- (BOOL)_isValidDate:(id)arg1;
- (id)_stringToDraw;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)_interiorBoundsToDrawWithFrame:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (double)minimumWidth;
- (void)setFont:(id)arg1;

@end

@interface NSRectSet : NSObject
{
    struct CGRect _bounds;
    struct CGRect *_rects;
    unsigned long long _count;
}

+ (void)initialize;
+ (id)emptyRectSet;
- (id)init;
- (id)initWithRect:(struct CGRect)arg1;
- (id)initWithRegion:(id)arg1;
- (id)initWithCopyOfRects:(const struct CGRect *)arg1 count:(unsigned long long)arg2 bounds:(struct CGRect)arg3;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)isEmpty;
- (struct CGRect)bounds;
- (const struct CGRect *)rects;
- (unsigned long long)count;
- (void)setEmpty;
- (void)subtractRect:(struct CGRect)arg1;
- (void)intersectWithRect:(struct CGRect)arg1;
- (void)convertFromAncestor:(id)arg1 toView:(id)arg2 clipTo:(struct CGRect)arg3;
- (void)addClip;
- (void)setClip;
- (void)fill;
- (void)stroke;
- (void)fillExactInterior;
- (void)strokeExactInterior;

@end

@interface NSCollectionViewBinder : NSBinder
{
    struct {
        unsigned int _ignoreChanges:1;
        unsigned int _reservedTableBinder:31;
    } _collectionViewBinderFlags;
}

+ (BOOL)isUsableWithObject:(id)arg1;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)arg1;
+ (id)bindingsForObject:(id)arg1;
- (void)_init;
- (unsigned long long)_bindingAdaptorMethodsNeededMask;
- (void)_connectionWasBroken;
- (BOOL)isBindingReadOnly:(id)arg1;
- (void)_updateSelectionIndexes:(id)arg1;
- (void)_updateContent;
- (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 context:(void *)arg3;
- (void)collectionView:(id)arg1 didChangeToSelectionIndexes:(id)arg2;

@end

@interface NSPrintPreviewGraphicsContext : NSProxy
{
    id _paddingForAcrobat5454292;
    NSGraphicsContext *_previousContext;
}

- (id)initWithPreviousContext:(id)arg1;
- (void)dealloc;
- (BOOL)conformsToProtocol:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)attributes;
- (BOOL)isDrawingToScreen;
- (id)description;

@end

@interface NSPrintThumbnailView : NSView
{
    NSPrintOperation *_operation;
    NSShadow *_paperShadow;
    NSImage *_cachedImage;
    long long _basePageNumber;
}

- (void)dealloc;
- (void)setOperation:(id)arg1;
- (void)setBasePageNumber:(long long)arg1;
- (long long)basePageNumber;
- (struct CGSize)_pagesLayout;
- (unsigned short)_pagesDirection;
- (BOOL)_hasPagesBorder;
- (unsigned short)_pagesBorderType;
- (BOOL)_mirrorHorizontal;
- (BOOL)_reversePageOrientation;
- (id)_paperShadow;
- (struct CGSize)_paperSize;
- (double)_paperAspectRatio;
- (double)widthForHeight:(double)arg1;
- (double)heightForWidth:(double)arg1;
- (void)invalidateContents;
- (long long)_pageOffsetForRow:(long long)arg1 column:(long long)arg2;
- (void)_drawBorderOfType:(unsigned short)arg1 withScaleFactor:(double)arg2;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSPrintPreviewController : NSViewController
{
    struct CGSize _maxViewFrameSize;
    NSPrintThumbnailView *thumbnailView;
    NSView *pageNumberView;
    NSSegmentedControl *pageNumberLeftControl;
    NSTextField *pageNumberTextField;
    NSSegmentedControl *pageNumberRightControl;
    BOOL _didLoadView;
    double _pageNumberViewLeading;
    BOOL _isPreviewing;
    NSMapTable *_observedKeyPathsPerAccessoryController;
}

- (id)initWithOperation:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)setRepresentedObject:(id)arg1;
- (long long)_nUpPages;
- (long long)_firstPageNumber;
- (long long)_lastPageNumber;
- (long long)_sheetNumberForRawPageNumber:(long long)arg1;
- (long long)_sheetAlignedPageNumberForRawPageNumber:(long long)arg1;
- (void)_updatePageNumberView;
- (void)_tileView;
- (void)loadView;
- (void)setMaxViewFrameSize:(struct CGSize)arg1;
- (void)start;
- (void)stop;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)userClickedPageNumberControl:(id)arg1;
- (void)printInfoDidChange:(id)arg1;

@end

@interface NSPredicateEditor : NSRuleEditor
{
    id _allTemplates;
    NSArray *_rootTrees;
    NSArray *_rootHeaderTrees;
    id _predicateTarget;
    SEL _predicateAction;
    struct {
        unsigned int suppressAction:4;
        unsigned int reserved:28;
    } _peFlags;
    id _predicateEditorReserved[3];
}

- (BOOL)_forceUseDelegate;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)_wantsMinimalArchival;
- (id)initWithCoder:(id)arg1;
- (void)_setDefaultTargetAndActionOnView:(id)arg1;
- (id)_rowFromTemplate:(id)arg1 originalTemplate:(id)arg2 withRowType:(unsigned long long)arg3;
- (id)_rowObjectFromPredicate:(id)arg1;
- (void)_reflectPredicate:(id)arg1;
- (id)_constructTreeForTemplate:(id)arg1;
- (id)_constructTreesForTemplates:(id)arg1;
- (id)_mergeTree:(id)arg1;
- (void)_updateItemsBySimpleTemplates;
- (void)_updateItemsByCompoundTemplates;
- (id)rowTemplates;
- (void)setRowTemplates:(id)arg1;
- (void)validateEditing;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)predicate;
- (id)_predicateFromRowItem:(id)arg1;
- (unsigned long long)_compoundPredicateTypeForRootRows;
- (void)_updatePredicateFromRows;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)_templateControlValueDidChange:(id)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (BOOL)_sendsActionOnIncompleteTextChanges;
- (void)reloadCriteria;
- (void)_initRuleEditorShared;
- (long long)_queryNumberOfChildrenOfItem:(id)arg1 withRowType:(unsigned long long)arg2;
- (id)_queryChild:(long long)arg1 ofItem:(id)arg2 withRowType:(long long)arg3;
- (id)_queryValueForItem:(id)arg1 inRow:(long long)arg2;
- (void)_sendRuleAction;
- (void)_changedItem:(id)arg1 toItem:(id)arg2 inRow:(long long)arg3;
- (void)_updatePredicate;

@end

@interface _NSPredicateEditorRowNode : NSObject
{
    _NSPredicateEditorTree *tree;
    NSMutableArray *templateViews;
    NSMutableArray *copiedTemplateContainer;
    NSArray *children;
}

+ (id)_rowNodeFromTree:(id)arg1 withTemplateTable:(id)arg2;
+ (id)rowNodeFromTree:(id)arg1;
- (void)copyTemplateIfNecessary;
- (id)templateForRow;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)title;
- (id)templateView;
- (id)displayValue;
- (void)dealloc;
- (BOOL)applyTemplate:(id)arg1 withViews:(id)arg2 forOriginalTemplate:(id)arg3;
@property(copy, nonatomic) NSArray *children; // @synthesize children;
@property(retain, nonatomic) NSMutableArray *templateViews; // @synthesize templateViews;
@property(retain, nonatomic) NSMutableArray *copiedTemplateContainer; // @synthesize copiedTemplateContainer;
@property(readonly) _NSPredicateEditorTree *tree; // @synthesize tree;

@end

@interface _NSPredicateEditorTree : NSObject
{
    NSPredicateEditorRowTemplate *template;
    NSString *title;
    NSArray *children;
    long long indexIntoTemplate;
    long long menuItemIndex;
}

- (void)dealloc;
- (id)description;
@property(nonatomic) long long menuItemIndex; // @synthesize menuItemIndex;
@property(nonatomic) long long indexIntoTemplate; // @synthesize indexIntoTemplate;
@property(copy, nonatomic) NSArray *children; // @synthesize children;
@property(copy, nonatomic) NSString *title; // @synthesize title;
@property(retain, nonatomic) NSPredicateEditorRowTemplate *template; // @synthesize template;

@end

@interface NSPredicateEditorRowTemplate : NSObject <NSCoding, NSCopying>
{
    long long _templateType;
    unsigned long long _predicateOptions;
    unsigned long long _predicateModifier;
    unsigned long long _leftAttributeType;
    unsigned long long _rightAttributeType;
    NSArray *_views;
    struct {
        unsigned int leftIsWildcard:1;
        unsigned int rightIsWildcard:1;
        unsigned int reserved:30;
    } _ptFlags;
    id _patternReserved;
}

+ (id)_attributeDescriptionForKeyPath:(id)arg1 inEntity:(id)arg2;
+ (id)_operatorsForAttributeType:(unsigned long long)arg1;
+ (id)templatesWithAttributeKeyPaths:(id)arg1 inEntityDescription:(id)arg2;
+ (id)_bestMatchForPredicate:(id)arg1 inTemplates:(id)arg2 quality:(double *)arg3;
- (long long)_templateType;
- (id)_displayValueForPredicateOperator:(id)arg1;
- (id)_displayValueForCompoundPredicateType:(unsigned long long)arg1;
- (id)_displayValueForConstantValue:(id)arg1;
- (id)_displayValueForKeyPath:(id)arg1;
- (id)_viewFromExpressions:(id)arg1;
- (id)_viewFromOperatorTypes:(id)arg1;
- (id)_viewFromAttributeType:(unsigned long long)arg1;
- (id)_viewFromCompoundTypes:(id)arg1;
- (id)initWithLeftExpressions:(id)arg1 rightExpressions:(id)arg2 modifier:(unsigned long long)arg3 operators:(id)arg4 options:(unsigned long long)arg5;
- (id)initWithLeftExpressions:(id)arg1 rightExpressionAttributeType:(unsigned long long)arg2 modifier:(unsigned long long)arg3 operators:(id)arg4 options:(unsigned long long)arg5;
- (id)initWithCompoundTypes:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)operators;
- (id)leftExpressions;
- (id)rightExpressions;
- (id)compoundTypes;
- (unsigned long long)options;
- (unsigned long long)modifier;
- (unsigned long long)rightExpressionAttributeType;
- (unsigned long long)_leftExpressionAttributeType;
- (id)_viewFromExpressionObject:(id)arg1;
- (void)_setLeftExpressionObject:(id)arg1;
- (void)_setRightExpressionObject:(id)arg1;
- (void)_setOptions:(unsigned long long)arg1;
- (void)_setModifier:(unsigned long long)arg1;
- (void)_setComparisonPredicate:(id)arg1;
- (void)_setCompoundPredicate:(id)arg1;
- (void)setPredicate:(id)arg1;
- (id)predicateWithSubpredicates:(id)arg1;
- (unsigned long long)_rowType;
- (BOOL)_predicateIsNoneAreTrue:(id)arg1;
- (id)displayableSubpredicatesOfPredicate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)matchForPredicate:(id)arg1;
- (void)dealloc;
- (id)templateViews;
- (id)description;

@end

@interface _NSFullScreenView : NSView
{
    NSColor *_color;
}

- (id)initWithColor:(id)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface _NSNonretainedFullScreenWindow : NSWindow
{
}

- (void)display;
- (void)displayIfNeeded;

@end

@interface _NSFullScreenWindow : NSWindow
{
}

- (BOOL)canBecomeKeyWindow;

@end

@interface _NSWindowBorderGradient : NSGradient
{
}

- (id)initFromGrayValue:(int)arg1 toGrayValue:(int)arg2 colorSpace:(id)arg3;

@end

@interface NSGradient : NSObject <NSCopying, NSCoding>
{
    NSArray *_colorArray;
    NSColorSpace *_colorSpace;
    void *_functionRef;
    void *_componentArray;
    void *_reserved1;
    void *_reserved2;
    void *_reserved3;
}

+ (void)initialize;
- (id)_colorSpaceForColorArray:(id)arg1;
- (struct CGFunction *)_interpolationFunctionRefWithCallbacks:(struct CGFunctionCallbacks *)arg1;
- (void)_commonInitWithColorArray:(id)arg1 colorSpace:(id)arg2 padStart:(BOOL)arg3 padEnd:(BOOL)arg4;
- (id)_initWithColorSpace:(id)arg1 callbacks:(struct CGFunctionCallbacks)arg2 data:(void *)arg3;
- (id)init;
- (id)initWithStartingColor:(id)arg1 endingColor:(id)arg2;
- (id)initWithColors:(id)arg1;
- (id)initWithColorsAndLocations:(id)arg1;
- (id)initWithColors:(id)arg1 atLocations:(const double *)arg2 colorSpace:(id)arg3;
- (void)dealloc;
- (void)drawFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 options:(unsigned long long)arg3;
- (void)drawInRect:(struct CGRect)arg1 angle:(double)arg2;
- (void)drawInBezierPath:(id)arg1 angle:(double)arg2;
- (void)drawFromCenter:(struct CGPoint)arg1 radius:(double)arg2 toCenter:(struct CGPoint)arg3 radius:(double)arg4 options:(unsigned long long)arg5;
- (void)drawInRect:(struct CGRect)arg1 relativeCenterPosition:(struct CGPoint)arg2;
- (void)drawInBezierPath:(id)arg1 relativeCenterPosition:(struct CGPoint)arg2;
- (id)colorSpace;
- (long long)numberOfColorStops;
- (void)getColor:(id *)arg1 location:(double *)arg2 atIndex:(long long)arg3;
- (id)interpolatedColorAtLocation:(double)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSAnimationManager : NSObject
{
    NSMapTable *inFlightAnimationsByObject;
    NSTimer *timer;
}

+ (id)currentAnimationManager;
- (id)init;
- (void)dealloc;
- (void)animationTimerFired:(id)arg1;
- (void)startClockwork;
- (void)recursiveSetImpliedPropertiesForAnimation:(id)arg1 object:(id)arg2 keyPath:(id)arg3 targetValue:(id)arg4;
- (void)startAnimation:(id)arg1 forObject:(id)arg2 keyPath:(id)arg3 targetValue:(id)arg4;
- (void)setTargetValue:(id)arg1 forObject:(id)arg2 keyPath:(id)arg3 duration:(double)arg4;

@end

@interface NSInFlightAnimation : NSObject
{
    int _state;
    id _object;
    NSString *_keyPath;
    id _targetValue;
    CAAnimation *_animation;
    double _effectiveDuration;
}

- (id)initWithObject:(id)arg1 animation:(id)arg2 keyPath:(id)arg3 targetValue:(id)arg4;
- (id)description;
- (void)dealloc;
- (id)object;
- (void)setObject:(id)arg1;
- (id)animation;
- (void)setAnimation:(id)arg1;
- (BOOL)advanceToTime:(double)arg1;

@end

@interface _NSWindowAnimator : _NSObjectAnimator
{
}

- (void)setAlphaValue:(double)arg1;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2;
- (void)setFrame:(struct CGRect)arg1 display:(BOOL)arg2 animate:(BOOL)arg3;
- (id)_borderView;
- (id)contentView;

@end

@interface HINSMenuItemProxy : NSObject <NSValidatedUserInterfaceItem>
{
    long long _tag;
    SEL _action;
}

- (id)initWithAction:(SEL)arg1;
- (SEL)action;
- (long long)tag;

@end

@interface HICocoaWindowAdapter : NSWindow
{
    struct OpaqueWindowPtr *_windowRef;
    unsigned int _focusSearching:1;
    unsigned int _drawingHIView:1;
    unsigned int _renderingByHIView:1;
    NSGraphicsContext *_drawContext;
    struct OpaqueEventHandlerRef *_myEventHandler;
}

+ (Class)frameViewClassForStyleMask:(unsigned long long)arg1;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)_managesWindowRef;
- (BOOL)_hasWindowRef;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2;
- (int)handleEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (void)deactivationFlushReset;
- (int)handleWindowEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)handleCocoaWindowEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)handleMouseEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)handleKeyboardEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)handleControlEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (int)handleHICocoaViewEvent:(struct OpaqueEventRef *)arg1 callRef:(struct OpaqueEventHandlerCallRef *)arg2;
- (id)_childKeyWindow;
- (BOOL)_drawingHIView;
- (void)_setDrawingHIView:(BOOL)arg1;
- (void)_setDrawingContext:(id)arg1;
- (id)_threadContext;
- (BOOL)_focusing;
- (void)_setFocusing:(BOOL)arg1;
- (BOOL)_carbonRendering;
- (void)_setCarbonRendering:(BOOL)arg1;
- (void)sendEvent:(id)arg1;
- (void)relinquishFocus;
- (void)selectKeyViewFollowingView:(id)arg1;
- (void)selectKeyViewPrecedingView:(id)arg1;
- (void)displayIfNeeded;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)canHide;
- (long long)level;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)selectNextKeyView:(id)arg1;
- (void)selectPreviousKeyView:(id)arg1;
- (BOOL)makeFirstResponderFromCarbonFocus:(id)arg1;
- (void)postFocusChangeEventToQueue:(BOOL)arg1;
- (void)makeKeyWindow;
- (void)disableScreenUpdatesUntilFlush;
- (void)_enableScreenUpdatesIfNeeded;
- (void)_requiresFlush;
- (void)sendSuperEvent:(id)arg1;
- (struct OpaqueWindowPtr *)windowRef;
- (BOOL)reconcileToCarbonWindowBounds;
- (void)_setEventMask:(long long)arg1;
- (BOOL)_allowsOrdering;
- (void)enableFlushWindow;
- (void)_enableFlushWindowWithoutPerformingFlush;

@end

@interface _NSObjectAnimator : NSProxy
{
    id <NSAnimatablePropertyContainer> _target;
}

+ (Class)_animatorClassForTargetClass:(Class)arg1;
+ (Class)_targetClass;
+ (BOOL)resolveInstanceMethod:(SEL)arg1;
- (id)initWithTarget:(id)arg1;
- (id)animator;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (Class)superclass;
- (Class)class;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)description;

@end

@interface _NSTypeSelectData : NSObject
{
    NSString *_currentSearch;
    long long _currentSearchRow;
    long long _currentSearchCol;
    long long _initialSearchRow;
    long long _totalRows;
    NSView *_view;
    id _cellValue;
    NSTypeSelectPanel *_typeSelectPanel;
    unsigned int _foundMatch:1;
    unsigned int _reserved:31;
}

+ (BOOL)ignoreTypos;
- (void)_resetCurrentSearchRow;
- (id)initWithInitialSearchRow:(long long)arg1 totalRows:(long long)arg2 forView:(id)arg3;
- (void)dealloc;
- (void)clearView;
- (id)currentSearch;
- (void)setCurrentSearch:(id)arg1;
- (void)_orderFrontTypeSelectPanel;
- (void)setCurrentSearchRect:(struct CGRect)arg1;
- (id)nextSearchStringForNewValue:(id)arg1;
- (long long)currentSearchRow;
- (void)setCurrentSearchRow:(long long)arg1;
- (long long)currentSearchCol;
- (void)setCurrentSearchCol:(long long)arg1;
- (long long)initialSearchRow;
- (void)scheduleEndOfSearch;
- (void)cancelScheduledEndOfSearch;
- (void)_typeSelectEndCurrentSearch;
- (void)setFoundMatch:(BOOL)arg1;
- (BOOL)foundMatch;

@end

@interface NSTextStorageElementArray : NSArray
{
    NSTextStorage *_container;
    NSString *_key;
    unsigned long long _count;
    NSMutableArray *_elements;
}

- (id)initWithContainer:(id)arg1 key:(id)arg2;
- (void)dealloc;
- (void)tokenizeToCount:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;

@end

@interface NSTextStorageCharacterArray : NSArray
{
    NSTextStorage *_container;
}

- (id)initWithContainer:(id)arg1;
- (void)dealloc;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;

@end

@interface NSScrollView : NSView
{
    NSScroller *_vScroller;
    NSScroller *_hScroller;
    NSClipView *_contentView;
    NSClipView *_headerClipView;
    NSView *_cornerView;
    id _ruler;
    struct __SFlags {
        unsigned int RESERVED:14;
        unsigned int autoforwardsScrollWheelEvents:1;
        unsigned int autohidesScrollers:1;
        unsigned int hasCustomLineBorderColor:1;
        unsigned int focusRingNeedsRedisplay:1;
        unsigned int skipRemoveSuperviewCheck:1;
        unsigned int doesNotDrawBackground:1;
        unsigned int needsTile:1;
        unsigned int hasVerticalRuler:1;
        unsigned int hasHorizontalRuler:1;
        unsigned int showRulers:1;
        unsigned int oldRulerInstalled:1;
        unsigned int borderType:2;
        unsigned int noDynamicScrolling:1;
        unsigned int hScrollerStatus:1;
        unsigned int vScrollerStatus:1;
        unsigned int hScrollerRequired:1;
        unsigned int vScrollerRequired:1;
    } _sFlags;
    void *_extraIvars;
    NSRulerView *_horizontalRuler;
    NSRulerView *_verticalRuler;
}

+ (void)initialize;
+ (struct CGSize)frameSizeForContentSize:(struct CGSize)arg1 hasHorizontalScroller:(BOOL)arg2 hasVerticalScroller:(BOOL)arg3 borderType:(unsigned long long)arg4;
+ (struct CGSize)contentSizeForFrameSize:(struct CGSize)arg1 hasHorizontalScroller:(BOOL)arg2 hasVerticalScroller:(BOOL)arg3 borderType:(unsigned long long)arg4;
- (BOOL)scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (double)_horizontalScrollerHeight;
- (double)_verticalScrollerWidth;
- (double)_horizontalScrollerHeightWithBorder;
- (double)_verticalScrollerWidthWithBorder;
- (id)_allocContentAreaLayout;
- (void)_applyContentAreaLayout:(id)arg1;
- (struct CGRect)_cornerViewFrame;
- (void *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)_ownsWindowGrowBox;
- (void)_fixGrowBox;
- (BOOL)_updateGrowBoxForWindowFrameChange;
- (BOOL)_fixHeaderAndCornerViews;
- (void)setDocumentView:(id)arg1;
- (id)documentView;
- (void)setContentView:(id)arg1;
- (id)contentView;
- (struct CGRect)documentVisibleRect;
- (void)setDocumentCursor:(id)arg1;
- (id)documentCursor;
- (struct CGSize)contentSize;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setCopiesOnScroll:(BOOL)arg1;
- (void)setScrollsDynamically:(BOOL)arg1;
- (BOOL)scrollsDynamically;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (BOOL)_drawRectIfEmpty;
- (void)drawRect:(struct CGRect)arg1;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (BOOL)_hasRectangularFocusRingAroundFrame;
- (unsigned long long)borderType;
- (void)setBorderType:(unsigned long long)arg1;
- (void)_setLineBorderColor:(id)arg1;
- (id)_lineBorderColor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setHasVerticalScroller:(BOOL)arg1;
- (BOOL)hasVerticalScroller;
- (void)setHasHorizontalScroller:(BOOL)arg1;
- (BOOL)hasHorizontalScroller;
- (id)verticalScroller;
- (id)horizontalScroller;
- (void)setVerticalScroller:(id)arg1;
- (void)setHorizontalScroller:(id)arg1;
- (BOOL)autohidesScrollers;
- (void)setAutohidesScrollers:(BOOL)arg1;
- (id)_newScroll:(BOOL)arg1;
- (void)_updateRulerlineForRuler:(id)arg1 oldPosition:(double)arg2 newPosition:(double)arg3 vertical:(BOOL)arg4;
- (id)_rulerline:(double)arg1:(double)arg2 last:(BOOL)arg3;
- (void)_setScrollerNeedsDisplay:(id)arg1;
- (id)_commonNewScroll:(id)arg1;
- (double)_repeatMultiplier:(double)arg1;
- (void)setHorizontalLineScroll:(double)arg1;
- (void)setVerticalLineScroll:(double)arg1;
- (void)setLineScroll:(double)arg1;
- (double)horizontalLineScroll;
- (double)verticalLineScroll;
- (double)lineScroll;
- (void)setHorizontalPageScroll:(double)arg1;
- (void)setVerticalPageScroll:(double)arg1;
- (void)setPageScroll:(double)arg1;
- (double)horizontalPageScroll;
- (double)verticalPageScroll;
- (double)pageScroll;
- (void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3;
- (BOOL)_pinnedInDirectionOfScroll:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_doScroller:(id)arg1;
- (void)_scrollPageInDirection:(int)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)arg1;
- (void)setInterfaceStyle:(unsigned long long)arg1;
- (void)_dynamicColorsChanged:(id)arg1;
- (id)_update;
- (BOOL)preservesContentDuringLiveResize;
- (void)_updateForLiveResizeWithOldSize:(struct CGSize)arg1;
- (id)_setWindow:(id)arg1;
- (BOOL)_cornerViewHidesWithVerticalScroller;
- (void)_setHorizontalScrollerHidden:(BOOL)arg1;
- (void)_setVerticalScrollerHidden:(BOOL)arg1;
- (void)_tileWithoutRecursing;
- (void)tile;
- (void)scrollClipView:(id)arg1 toPoint:(struct CGPoint)arg2;
- (id)_copySubviewsInOrderOfDisplay;
- (void)reflectScrolledClipView:(id)arg1;
- (void)_conditionallyReflectScrolledClipView;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_setAutoResizeDocView:(BOOL)arg1;
- (id)_contentView;
- (void)willRemoveSubview:(id)arg1;
- (double)_destinationFloatValueForScroller:(id)arg1;

@end

@interface _NSScrollViewContentAreaLayout : NSObject
{
    NSScrollView *scrollView;
    struct CGSize contentAreaSize;
    struct CGSize documentFrameSize;
    BOOL hScrollerShown;
    BOOL vScrollerShown;
    struct CGSize trimmedContentAreaSize;
}

- (id)_initWithScrollView:(id)arg1;
- (id)copy;
- (id)description;
- (struct CGSize)_documentFrameSize;
- (struct CGSize)_clipBoundsSize;
- (void)_resetLayoutWithContentAreaSize:(struct CGSize)arg1;
- (void)_addHorizontalScroller;
- (void)_addVerticalScroller;
- (void)_updateLayoutWithDocumentFrameSize:(struct CGSize)arg1;
- (BOOL)_hScrollerShown;
- (BOOL)_vScrollerShown;
- (struct CGSize)_trimmedContentAreaSize;

@end

@interface NSNavMediaNode : NSNavVirtualNode
{
    int _browserType;
}

- (BOOL)isEqual:(id)arg1;
- (int)browserType;
- (void)setBrowserType:(int)arg1;
- (BOOL)isMediaNode;

@end

@interface NSNavMediaBrowserDelegate : NSNavFileListDelegate
{
    ILMediaBrowserView *_mediaBrowserView;
    NSNavNode *_mediaBrowserNode;
    NSNavNode *_currentRootNode;
}

- (void)dealloc;
@property(retain) NSNavNode *mediaBrowserNode; // @dynamic mediaBrowserNode;
@property(retain) ILMediaBrowserView *mediaBrowserView; // @dynamic mediaBrowserView;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)arg1 selectedNodes:(id)arg2;
- (void)reloadChildrenForNode:(id)arg1;
- (void)reloadDisplayState;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (void)setCurrentDirectoryNode:(id)arg1;
- (void)setCurrentBrowsingNodePath:(id)arg1;
- (id)showNode:(id)arg1 inDirectory:(id)arg2 selectIfEnabled:(BOOL)arg3;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (id)_selectedNodesIncludingDirectory:(BOOL)arg1;
- (id)selectedNodes;
- (id)selectedNodesIncludingDirectories;
- (BOOL)_canShowFileAtURL:(id)arg1;
- (BOOL)mediaBrowserView:(id)arg1 shouldSelectMediaObject:(id)arg2;
- (id)mediaBrowserView:(id)arg1 attributedDisplayNameForMediaObject:(id)arg2;
- (void)mediaBrowserViewSelectionDidChange:(id)arg1;
- (BOOL)mediaBrowserView:(id)arg1 shouldPreviewDoubleClickedItem:(id)arg2;
- (id)view;

@end

@interface NSViewController : NSResponder <NSCoding>
{
    NSString *_nibName;
    NSBundle *_nibBundle;
    id _representedObject;
    NSString *_title;
    NSView *view;
    NSArray *_topLevelObjects;
    NSPointerArray *_editors;
    id _autounbinder;
    NSString *_designNibBundleIdentifier;
    id _reserved[2];
}

- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)release;
- (void)dealloc;
- (void)setRepresentedObject:(id)arg1;
- (id)representedObject;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)view;
- (void)_setTopLevelObjects:(id)arg1;
- (void)loadView;
- (id)nibName;
- (id)nibBundle;
- (void)setView:(id)arg1;
- (void)objectDidBeginEditing:(id)arg1;
- (void)objectDidEndEditing:(id)arg1;
- (id)_topEditor;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)_editor:(id)arg1 didCommit:(BOOL)arg2 withOriginalDelegateInvocation:(id)arg3;
- (BOOL)commitEditing;
- (void)discardEditing;
- (id)_autounbinder;

@end

@interface NSDockTile : NSObject
{
    id _owner;
    void *_dockContextRef;
    NSView *_contentView;
    NSView *_frameView;
    NSView *_backstopView;
    NSString *_badgeLabel;
    struct {
        unsigned int showsAppBadge:1;
        unsigned int reserved:31;
    } _dFlags;
    struct CGSize _dockTileSize;
    id reserved[5];
}

- (BOOL)_getDockContext:(struct CGContext **)arg1 andSize:(struct CGSize *)arg2;
- (id)initWithOwner:(id)arg1;
- (void)_releaseDockContext;
- (BOOL)_hasCustomContent;
- (BOOL)_releaseContextIfEmpty;
- (void)_createFrameViewIfNeeded;
- (void)finalize;
- (void)dealloc;
- (id)owner;
- (struct CGSize)size;
- (struct CGSize)_getSizeFromDock;
- (void)setContentView:(id)arg1;
- (id)contentView;
- (BOOL)_needsTigerDockContextBehavior;
- (void)display;
- (void)setShowsApplicationBadge:(BOOL)arg1;
- (BOOL)showsApplicationBadge;
- (void)setBadgeLabel:(id)arg1;
- (id)badgeLabel;
- (id)_tileImage;
- (id)_backstopView;
- (id)_badgeForString:(id)arg1;
- (void)_drawBadgeLabel;
- (void)reactToDockSizeChange;
- (void)scaleFactorChanged;
- (void)_updateDockWindowIDAndDisplayIfNeeded:(BOOL)arg1;
- (void)_dockIsAlive:(BOOL)arg1;

@end

@interface NSDockFrameView : NSView
{
}

- (id)initWithFrame:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _NSCollectionViewRubberband : NSView
{
    NSColor *_frameColor;
    NSColor *_fillColor;
}

- (id)initWithFrameColor:(id)arg1 fillColor:(id)arg2;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSCollectionView : NSView
{
    NSArray *_content;
    NSMutableIndexSet *_selectionIndexes;
    NSCollectionViewItem *_itemPrototype;
    struct CGSize _minItemSize;
    struct CGSize _maxItemSize;
    unsigned long long _maxGridRows;
    unsigned long long _maxGridColumns;
    NSArray *_backgroundColors;
    NSMutableArray *_displayedItems;
    double _animationDuration;
    struct {
        unsigned int isFirstResponder:1;
        unsigned int invalidateItemViews:1;
        unsigned int selectable:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int avoidsEmptySelection:1;
        unsigned int superviewIsClipView:1;
        unsigned int needsUpdateGrid:1;
        unsigned int needsUpdateBackground:1;
        unsigned int gridSettingsNeedUpdate:1;
        unsigned int guardSetFrameSize:1;
        unsigned int canDisplayItems:1;
        unsigned int animateForDrag:1;
        unsigned int unarchiving:1;
        unsigned int reserved:19;
    } _cvFlags;
    id _delegate;
    NSMutableArray *_backgroundLayers;
    struct CGSize _storedFrameSize;
    NSNib *_cachedNib;
    NSTimer *_animTimer;
    NSArray *_removedItems;
    NSTimer *_resizeTimer;
    NSIndexSet *_draggedIndexes;
    unsigned long long _draggingSourceOperationMaskForLocal;
    unsigned long long _draggingSourceOperationMaskForNonLocal;
    long long _currentDropIndex;
    long long _currentDropSpaceIndex;
    long long _shiftRow;
    unsigned long long _currentDragOperation;
    long long _currentDropOperation;
    NSTimer *_dragTimer;
    id _private;
    void *_reserved[16];
}

+ (unsigned long long)defaultFocusRingType;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setContent:(id)arg1;
- (id)content;
- (void)setItemPrototype:(id)arg1;
- (id)itemPrototype;
- (void)setMinItemSize:(struct CGSize)arg1;
- (struct CGSize)minItemSize;
- (void)setMaxItemSize:(struct CGSize)arg1;
- (struct CGSize)maxItemSize;
- (void)setMaxNumberOfRows:(unsigned long long)arg1;
- (unsigned long long)maxNumberOfRows;
- (void)setMaxNumberOfColumns:(unsigned long long)arg1;
- (unsigned long long)maxNumberOfColumns;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)isSelectable;
- (void)setAllowsMultipleSelection:(BOOL)arg1;
- (BOOL)allowsMultipleSelection;
- (void)setAvoidsEmptySelection:(BOOL)arg1;
- (BOOL)avoidsEmptySelection;
- (void)setSelectionIndexes:(id)arg1;
- (id)selectionIndexes;
- (void)setBackgroundColors:(id)arg1;
- (id)backgroundColors;
- (id)newItemForRepresentedObject:(id)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForItemAtIndex:(unsigned long long)arg1;
- (void)_setAnimationDuration:(double)arg1;
- (double)_animationDuration;
- (id)_cachedNibWithName:(id)arg1 bundle:(id)arg2;
- (void)instantiateWithObjectInstantiator:(id)arg1;
- (void)_finishedMakingConnections;
- (BOOL)_shouldCopyConnections;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_doSuperSetFrameSize:(struct CGSize)arg1;
- (BOOL)_drawsNothing;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (BOOL)needsPanelToBecomeKey;
- (void)_storeCurrentFrameSize;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_recursiveFindDefaultButtonCell;
- (void)_windowChangedKeyState;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)_updateFrame:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToSuperview;
- (BOOL)_shouldResizeSubviewsImmediately;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)isFirstResponder;
- (void)discardEditing;
- (void)_registerFirstResponderObservance;
- (void)_unregisterFirstResponderObservance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)insertTab:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (BOOL)_shouldDrawFocus;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_drawFocusRingAroundRect:(struct CGRect)arg1;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (void)_setFocusRingNeedsDisplayIfNecessary;
- (struct CGPoint)_pointWithinBounds:(struct CGPoint)arg1;
- (id)_indexesToSelectForEvent:(id)arg1 initialSelectionIndexes:(id)arg2 startingPoint:(struct CGPoint)arg3 commandKey:(BOOL)arg4 shiftKey:(BOOL)arg5 rubberband:(id)arg6;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)_canDragItemsAtIndexes:(id)arg1 withEvent:(id)arg2;
- (BOOL)_writeItemsAtIndexes:(id)arg1 toPasteboard:(id)arg2;
- (id)_draggingImageForItemsAtIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (void)_startDragWithItemsAtIndexes:(id)arg1 event:(id)arg2 pasteboard:(id)arg3;
- (BOOL)_performDragFromMouseDown:(id)arg1;
- (void)setDraggingSourceOperationMask:(unsigned long long)arg1 forLocal:(BOOL)arg2;
- (id)draggingImageForItemsAtIndexes:(id)arg1 withEvent:(id)arg2 offset:(struct CGPoint *)arg3;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)ignoreModifierKeysWhileDragging;
- (long long)_dropIndexForDraggingInfo:(id)arg1 proposedDropOperation:(long long *)arg2;
- (unsigned long long)_validateDragWithInfo:(id)arg1 dropIndex:(long long *)arg2 dropOperation:(long long *)arg3;
- (void)_doDelayedUpdateGrid;
- (long long)_computeRowToShiftWithDropSpaceIndex:(long long)arg1 draggingInfo:(id)arg2;
- (void)_updateDragAndDropStateWithDraggingInfo:(id)arg1 newDragOperation:(unsigned long long)arg2 newDropIndex:(long long)arg3 newDropOperation:(long long)arg4;
- (BOOL)_hoverAreaIsSameAsLast:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (CDStruct_22276b4c)_computeGridConfiguration;
- (CDStruct_22276b4c)_computeGridConfigurationWithSize:(struct CGSize)arg1;
- (BOOL)_filledViewShouldExtendVertically;
- (void)_updateGridSettingsWithPrototype;
- (unsigned long long)_itemIndexAtPoint:(struct CGPoint)arg1;
- (BOOL)_configurationIsColumnMajorOrder:(CDStruct_22276b4c)arg1;
- (void)_updateGridWithCurrentItems;
- (void)_updateGridWithCurrentItemsIfNecessary;
- (void)_registerNeedsUpdateGrid;
- (id)_getItemsToDisplay;
- (struct CGRect)_frameForItemAtIndex:(unsigned long long)arg1 withConfiguration:(CDStruct_22276b4c)arg2;
- (BOOL)_itemIsVisibleAtIndex:(unsigned long long)arg1;
- (BOOL)_animationFromStartRect:(struct CGRect)arg1 crossesVisibleRectToEndRect:(struct CGRect)arg2;
- (void)awakeFromNib;
- (void)viewWillDraw;
- (void)_displayItems:(id)arg1 withConfiguration:(CDStruct_22276b4c)arg2 animate:(BOOL)arg3;
- (void)_scheduleEndOfAnimationTimer:(double)arg1;
- (void)_endOfAnimation;
- (void)_resizeTimerFired:(id)arg1;
- (void)_drawBackgroundGridWithProperties:(id)arg1;
- (void)_createBackgroundLayerWithProperties:(id)arg1;
- (long long)_createGridBackgroundWithSelector:(SEL)arg1;
- (void)_removeBackgroundLayers;
- (void)_updateBackgroundLayers;
- (BOOL)_needsLayerBackgrounds;
- (void)_doDelayedUpdateBackgroundLayers;
- (void)_setBackgroundNeedsDisplay;
- (void)_createLayerAndInitialize;
- (void)setLayer:(id)arg1;
- (void)_setBackgroundNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_applySelectionIndexes:(id)arg1 toItems:(id)arg2;
- (void)_selectionStateChanged:(id)arg1;
- (void)_selectObjectsAtIndexes:(id)arg1 avoidsEmptySelection:(BOOL)arg2;
- (void)_selectIndex:(unsigned long long)arg1 scrollToVisible:(BOOL)arg2;
- (void)_selectFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 scrollIndexToVisible:(unsigned long long)arg3;
- (void)selectAll:(id)arg1;
- (unsigned long long)_indexForDecrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForIncrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForMoveRight;
- (unsigned long long)_indexForMoveLeft;
- (unsigned long long)_indexForMoveUp;
- (unsigned long long)_indexForMoveDown;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)_scrollToVisibleItemAtIndex:(unsigned long long)arg1;
- (void)_scrollSelectionToVisible;

@end

@interface NSCollectionViewItem : NSViewController <NSCopying>
{
    NSCollectionView *_collectionView;
    struct {
        unsigned int isSelected:1;
        unsigned int suppressSelectionChangedNotification:1;
        unsigned int connectionsCopied:1;
        unsigned int reserved:29;
    } _cviFlags;
    NSData *_cachedArchive;
    void *_reserved2;
}

- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_copyConnectionsOfObject:(id)arg1 prototypeItem:(id)arg2 toObject:(id)arg3 item:(id)arg4;
- (void)_copyConnectionsToItem:(id)arg1;
- (void)setSelected:(BOOL)arg1;
- (BOOL)isSelected;
- (id)collectionView;
- (void)_setCollectionView:(id)arg1;
- (id)_declaredKeys;
- (BOOL)_needsToCopyConnections;
- (void)_setSelectedWithoutNotification:(BOOL)arg1;
- (BOOL)_shouldLoadFromNib;
- (BOOL)_isLoaded;
- (id)representedObject;
- (id)_nibWithName:(id)arg1 bundle:(id)arg2;
- (id)description;

@end

@interface NSToolbarItemGroup : NSToolbarItem
{
    id _groupItems;
    struct {
        unsigned int dirtiedLayout:1;
        unsigned int reserved:31;
    } _giFlags;
    id _giReserved;
}

- (id)_allocDefaultView;
- (double)_interviewPadding;
- (double)_interlabelPadding;
- (BOOL)_isCustomItemType;
- (id)initWithItemIdentifier:(id)arg1;
- (id)_defaultGroupViewIfUsed;
- (id)view;
- (void)dealloc;
- (BOOL)_mouseDownInSurroundingRegionShouldMoveWindow;
- (void)_sizeFromSubitemsMinSize:(struct CGSize *)arg1 maxSize:(struct CGSize *)arg2;
- (void)_autorecalculateMinSize:(struct CGSize *)arg1 maxSize:(struct CGSize *)arg2;
- (void)setSubitems:(id)arg1;
- (void)_forceSetView:(id)arg1;
- (id)subitems;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)_evenlySpacedRectForItemAtIndex:(long long)arg1 inBounds:(struct CGRect)arg2;
- (struct CGRect)_segmentedControlRectForItemAtIndex:(long long)arg1 inBounds:(struct CGRect)arg2;
- (struct CGRect)_labelOnlyModeRectForItemAtIndex:(long long)arg1 inBounds:(struct CGRect)arg2;
- (struct CGRect)rectForItem:(id)arg1 inBounds:(struct CGRect)arg2;
- (id)_viewsArray;
- (BOOL)_applicableLabelIsEnabledAtIndex:(long long)arg1 forDisplayMode:(unsigned long long)arg2 isInPalette:(BOOL)arg3;
- (id)_applicableLabelsArrayForDisplayMode:(unsigned long long)arg1 isInPalette:(BOOL)arg2;
- (id)_itemAtLabelIndex:(long long)arg1;
- (id)_itemAtViewIndex:(long long)arg1;
- (BOOL)_viewIsEnabledAtIndex:(long long)arg1;
- (void)_collectItemRectsForLabels:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (void)_collectItemRectsForViews:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (void)_setItemViewer:(id)arg1;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (void)_itemLayoutChanged;
- (void)invalidateLayout;
- (id)_buttonAtIndex:(unsigned long long)arg1;
- (BOOL)_isEnabledAndHasEnabledSubitem;
- (id)_initialViewToSelectFromDirection:(long long)arg1;
- (id)_selectableToolbarViews;
- (id)menuFormRepresentation;
- (id)_menuFormRepresentationForOverflowMenu;

@end

@interface NSToolbarGroupView : NSView
{
    NSToolbarItemGroup *_groupItem;
    struct {
        unsigned int needsSublayout:1;
        unsigned int reserved:31;
    } _gvFlags;
}

- (id)initWithItem:(id)arg1;
- (void)setNeedsSublayout:(BOOL)arg1;
- (void)performSublayout;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)_moveInDirection:(long long)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)sendAction;

@end

@interface NSPrintCopyingGraphicsContext : NSCGSContext <NSPrintGraphicsContextAdvancing>
{
    NSDictionary *_attributes;
    NSFocusStack *_focusStack;
    BOOL _isCopyingToPDF;
}

- (id)initWithContextAttributes:(id)arg1;
- (void)dealloc;
- (id)attributes;
- (BOOL)isDrawingToScreen;
- (void)setFocusStack:(id)arg1;
- (id)focusStack;
- (void)beginDocumentWithTitle:(id)arg1;
- (void)beginPageWithBounds:(struct CGRect)arg1;
- (void)endPage;
- (void)endDocument;

@end

@interface NSPrintSpoolingGraphicsContext : NSCGSContext <NSPrintGraphicsContextAdvancing>
{
    NSPrintInfo *_printInfo;
    NSFocusStack *_focusStack;
    BOOL _needsToEndDocument;
    struct CGContext *_blackHoleContext;
}

- (id)initWithPrintInfo:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)attributes;
- (BOOL)isDrawingToScreen;
- (void)setFocusStack:(id)arg1;
- (id)focusStack;
- (void *)graphicsPort;
- (void)beginDocumentWithTitle:(id)arg1;
- (void)beginPageWithBounds:(struct CGRect)arg1;
- (void)endPage;
- (void)endDocument;

@end

@interface _NSViewDrawOperation : NSOperation
{
    NSView *_view;
    struct CGRect _rect;
    NSRectSet *_rectSet;
    NSRegion *_windowRegion;
    unsigned long long _options;
    _NSDisplayOperation *_owningDisplayOperation;
}

- (id)initWithView:(id)arg1 rect:(struct CGRect)arg2 rectSet:(id)arg3 windowRegion:(id)arg4 options:(unsigned long long)arg5 owningDisplayOperation:(id)arg6;
- (void)dealloc;
- (id)view;
- (void)main;

@end

@interface _NSDisplayOperationStack : NSObject
{
    NSMutableArray *_stack;
    BOOL _threadIsViewDrawOperationThread;
}

+ (void)initialize;
+ (id)currentThreadDisplayOperationStack;
+ (BOOL)anyThreadHasActiveDisplayOperationForWindow:(id)arg1;
+ (id)description;
- (id)init;
- (void)dealloc;
- (void)enterDisplayOperationForWindow:(id)arg1 windowRegion:(id)arg2;
- (void)exitDisplayOperationForWindow:(id)arg1;
- (void)enterViewWillDrawOperationForWindow:(id)arg1 windowRegion:(id)arg2 clipRootView:(id)arg3 suppressViewWillDrawRecursion:(BOOL)arg4;
- (void)exitViewWillDrawOperationForWindow:(id)arg1;
- (BOOL)viewWillDrawRecursionSuppressed;
- (BOOL)viewWillDrawOperationIsActive;
- (id)clipRootView;
- (id)windowRegionBeingDrawn;
- (void)setRectSetBeingDrawn:(id)arg1 forView:(id)arg2;
- (id)rectSetBeingDrawnForView:(id)arg1;
- (unsigned long long)count;
- (id)totalWindowRegionBeingDrawnByEnclosingDisplayOperations;
- (id)description;
- (BOOL)attemptingConcurrentViewDrawing;
- (void)setAttemptingConcurrentViewDrawing:(BOOL)arg1;
- (void)queueDrawOperationForView:(id)arg1 rect:(struct CGRect)arg2 rectSet:(id)arg3 windowRegion:(id)arg4 options:(unsigned long long)arg5;
- (void)blockOnAllRemainingDrawOperations;
- (void)blockOnDrawOperationsForAncestorsOfView:(id)arg1;
- (BOOL)threadIsViewDrawOperationThread;
- (void)setThreadIsViewDrawOperationThread:(BOOL)arg1;

@end

@interface _NSDisplayOperation : NSObject
{
    NSWindow *_window;
    NSRegion *_windowRegion;
    NSMapTable *_viewToRectSetMapTable;
    BOOL _isViewWillDrawOperation;
    BOOL _viewWillDrawRecursionSuppressed;
    NSView *_clipRootView;
    NSOperationQueue *_viewDrawOperationQueue;
    NSMapTable *_viewToDrawOperationMapTable;
    BOOL _attemptingConcurrentViewDrawing;
}

- (id)initWithWindow:(id)arg1 windowRegion:(id)arg2;
- (void)dealloc;
- (id)description;
- (id)window;
- (id)windowRegion;
- (void)setRectSetBeingDrawn:(id)arg1 forView:(id)arg2;
- (id)rectSetBeingDrawnForView:(id)arg1;
- (BOOL)isViewWillDrawOperation;
- (void)setViewWillDrawOperation:(BOOL)arg1 suppressRecursion:(BOOL)arg2;
- (BOOL)viewWillDrawRecursionSuppressed;
- (id)clipRootView;
- (void)setClipRootView:(id)arg1;
- (BOOL)attemptingConcurrentViewDrawing;
- (void)setAttemptingConcurrentViewDrawing:(BOOL)arg1;
- (void)queueDrawOperationForView:(id)arg1 rect:(struct CGRect)arg2 rectSet:(id)arg3 windowRegion:(id)arg4 options:(unsigned long long)arg5;
- (void)blockOnAllRemainingDrawOperations;
- (void)blockOnDrawOperationsForAncestorsOfView:(id)arg1;
- (id)viewDrawOperationQueue;
- (void)queueViewDrawOperation:(id)arg1;
- (void)dequeueViewDrawOperation:(id)arg1;
- (id)drawOperationForView:(id)arg1;

@end

@interface _NSOpenGLLayer : CAOpenGLLayer
{
}

- (void)_appkitViewBackingLayerUniqueMethod;
- (id)init;
- (id)description;
- (void)drawInCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
- (struct _CGLPixelFormatObject *)copyCGLPixelFormatForDisplayMask:(unsigned int)arg1;
- (void)releaseCGLPixelFormat:(struct _CGLPixelFormatObject *)arg1;
- (struct _CGLContextObject *)copyCGLContextForPixelFormat:(struct _CGLPixelFormatObject *)arg1;
- (void)releaseCGLContext:(struct _CGLContextObject *)arg1;

@end

@interface NSOpenGLLayer : CAOpenGLLayer
{
    NSOpenGLPixelFormat *_openGLPixelFormat;
    NSOpenGLContext *_openGLContext;
    void *_reserved[5];
}

- (void)_appkitViewBackingLayerUniqueMethod;
- (id)init;
- (void)dealloc;
@property NSView *view;
- (id)openGLPixelFormatForDisplayMask:(unsigned int)arg1;
- (id)openGLContextForPixelFormat:(id)arg1;
- (BOOL)canDrawInOpenGLContext:(id)arg1 pixelFormat:(id)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
- (void)drawInOpenGLContext:(id)arg1 pixelFormat:(id)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
- (struct _CGLPixelFormatObject *)copyCGLPixelFormatForDisplayMask:(unsigned int)arg1;
- (void)releaseCGLPixelFormat:(struct _CGLPixelFormatObject *)arg1;
- (struct _CGLContextObject *)copyCGLContextForPixelFormat:(struct _CGLPixelFormatObject *)arg1;
- (void)releaseCGLContext:(struct _CGLContextObject *)arg1;
- (BOOL)canDrawInCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
- (void)drawInCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
@property(retain) NSOpenGLContext *openGLContext; // @synthesize openGLContext=_openGLContext;
@property(retain) NSOpenGLPixelFormat *openGLPixelFormat; // @synthesize openGLPixelFormat=_openGLPixelFormat;

@end

@interface NSNavSidebarController : NSObject <NSOutlineViewDelegate, NSOutlineViewDataSource>
{
    NSOutlineView *_sidebarOutlineView;
    NSMutableArray *_sidebarNodes;
    NSMutableIndexSet *_hiddenSidebarNodes;
    NSMutableArray *_sidebarNodeTitles;
    NSNavVirtualNode *_appSmartFoldersNode;
    NSNavNode *_mediaBrowserNode;
    NSNavNode *_draggedNode;
    NSMutableSet *_delayReloadedNodes;
    NSMutableDictionary *_nodeChildren;
    NSNavDataSource *_navDataSource;
    NSMutableArray *_collapsedItemIdentifiers;
    NSString *_savedLayoutKey;
    unsigned int _changingRootNode:1;
    unsigned int _hideSharedNode:1;
    unsigned int _selectionDidChangeHappened:1;
    unsigned int _observingNodes:1;
    unsigned int _reserved:28;
}

- (id)init;
- (void)finalize;
- (void)dealloc;
- (void)_stopObservingChildren;
- (void)windowOrderedOut;
- (void)windowOrderedIn;
- (id)_keyForNode:(id)arg1;
- (void)_restoreExpandedState;
- (void)loadSavedLayoutWithKey:(id)arg1;
- (void)_saveLayout;
- (void)_loadAppSmartFolders;
- (void)addAppSmartFolderForNode:(id)arg1;
- (id)appSmartFoldersNode;
- (id)mediaBrowsrNode;
- (void)setMediaBrowserNode:(id)arg1;
- (void)_reloadData;
- (void)_reloadDataForNode:(id)arg1;
- (void)setSidebarOutlineView:(id)arg1;
- (BOOL)_allowGroupRowsToBeSelected;
- (id)outlineView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (void)setNavDataSource:(id)arg1;
- (BOOL)_shouldShowParentNode:(id)arg1;
- (id)_savedSearcheNodeTitle;
- (id)_mediaNodeTitle;
- (BOOL)hidesSharedSection;
- (void)setHidesSharedSection:(BOOL)arg1;
- (void)load;
- (id)volumesNode;
- (id)sharedNode;
- (id)favoritesNode;
- (id)savedSearchesNode;
- (BOOL)_isDragging;
- (void)_addDelayReloadChildrenForNode:(id)arg1;
- (void)_reloadChildrenForDelayedNodes;
- (void)_releaseDraggingNode;
- (void)_reloadChildrenForNode:(id)arg1;
- (void)_handleChildrenChangedForNode:(id)arg1;
- (void)_handleChildrenChanged:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_handleNodePropertyChanged:(id)arg1;
- (void)_selectRootNode;
- (void)_handleRootNodeChanged:(id)arg1;
- (void)handleFileListModeChanged;
- (void)_removeAppSmartFolderNode:(id)arg1;
- (void)_reorderAppSmartFolderNode:(id)arg1 toIndex:(long long)arg2;
- (long long)_convertRootIndex:(long long)arg1;
- (id)_childrenForNode:(id)arg1;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (id)_iToolsMemberName;
- (BOOL)_openPrefPane:(id)arg1;
- (void)_alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_promptToOpenDotMacPrefPane;
- (BOOL)_promptToSetupIDisk;
- (void)_updateRootNodeFromSelectedRowUsingCurrentDirectoryNode:(BOOL)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewAction:(id)arg1;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)_ejectButtonClicked:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (BOOL)_canDragNode:(id)arg1;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)_draggingUpdatedForReorder:(id)arg1 proposedItem:(id)arg2 proposedChildIndex:(long long)arg3;
- (struct OpaqueNodeRef *)_nodeRefFromNode:(id)arg1;
- (BOOL)outlineViewShouldSlideBackAfterDragFailed:(id)arg1;
- (void)outlineView:(id)arg1 draggingEndedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (id)_getResolvedNavNodeForFilename:(id)arg1;
- (id)_draggedFilenameFromPasteboard:(id)arg1;
- (unsigned long long)_draggingUpdatedForFilenameDrop:(id)arg1 inProposedItem:(id)arg2 proposedChildIndex:(long long)arg3;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(id)arg1 draggedImage:(id)arg2 movedTo:(struct CGPoint)arg3;
- (BOOL)_performDragOperationForReorder:(id)arg1 parentItem:(id)arg2 toIndex:(long long)arg3;
- (BOOL)_performDragOperationForFilenameDrop:(id)arg1 asChildOfNode:(id)arg2 atIndex:(long long)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;

@end

@interface NSImageTextFieldCell : NSTextFieldCell
{
    NSImage *_image;
    unsigned int _reserved:32;
}

+ (id)_sourceListFont;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)setImage:(id)arg1;
- (id)image;
- (double)imageSize;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface NSNavBox : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSNavCell : NSImageTextFieldCell
{
    NSButtonCell *_ejectButtonCell;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_imageForEjectType:(int)arg1;
- (struct CGRect)ejectButtonFrameForCellFrame:(struct CGRect)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setShowEjectButton:(BOOL)arg1;
- (id)ejectButtonCell;
- (void)addTrackingAreasForView:(id)arg1 inFrame:(struct CGRect)arg2 withUserInfo:(id)arg3 mouseLocation:(struct CGPoint)arg4;
- (void)_invalidateEjectButtonCellWithEvent:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)setControlView:(id)arg1;

@end

@interface NSTrackableOutlineView : NSOutlineView
{
}

- (BOOL)_wantsUserCancelledOperation;
- (BOOL)_supportsTrackingAreasForCells;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface NSPrintInfoDictionaryProxy : NSMutableDictionary
{
    NSPrintInfo *_printInfo;
    int _purpose;
}

+ (id)_keysForPMKeys:(id)arg1;
+ (id)_pmKeyForKey:(id)arg1;
- (id)initWithPrintInfo:(id)arg1 purpose:(int)arg2;
- (id)retain;
- (void)release;
- (void)superRelease;
- (unsigned long long)count;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;

@end

@interface HICocoaWindowContentView : NSView
{
    BOOL _didReceiveEvent;
}

- (BOOL)isOpaque;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)invalidateHICocoaViewSubViewsOf:(struct OpaqueControlRef *)arg1 withInvalidRect:(struct CGRect)arg2 ofView:(struct OpaqueControlRef *)arg3;
- (struct OpaqueControlRef *)getContentHIView;
- (void)scrollWheel:(id)arg1;
- (void)_resetEventReceivedFlag;
- (BOOL)_receivedEvent;

@end

@interface _NSToolbarSplitViewPartitionAdapter : NSObject
{
    NSSplitView *_splitView;
    NSToolbarItem *_toolbarItem;
    long long _dividerIndex;
    struct CGRect _dividerFrame;
}

@property(nonatomic) NSSplitView *splitView;
- (struct CGRect)_splitViewDividerFrame;
@property(nonatomic) long long splitViewDividerIndex;
- (void)_splitViewDidResize:(id)arg1;
- (BOOL)getRectToExclude:(struct CGRect *)arg1 inWindowCoordinatesForWindow:(id)arg2;
- (void)dealloc;
@property(nonatomic) NSToolbarItem *toolbarItem; // @synthesize toolbarItem=_toolbarItem;

@end

@interface NSToolbarItemConfigWrapper : NSToolbarItem
{
    NSToolbarItem *_wrappedItem;
    NSImage *_activeImage;
    NSImage *_inactiveImage;
}

- (BOOL)_wantsCopyForInsertionIntoToolbar:(id)arg1 isPalette:(BOOL)arg2;
- (BOOL)_wantsImageWrapperForInsertionIntoPaletteToolbar:(id)arg1;
- (id)_createNewWrapperImage;
- (void)_updateWrapperImage;
- (id)initWithWrappedItem:(id)arg1;
- (BOOL)_participatesInDefiningMinimumGridWidthForCustomizationPalette;
- (void)dealloc;
- (id)_applicableLabelsArrayForDisplayMode:(unsigned long long)arg1 isInPalette:(BOOL)arg2;
- (BOOL)_applicableLabelIsEnabledAtIndex:(long long)arg1 forDisplayMode:(unsigned long long)arg2 isInPalette:(BOOL)arg3;
- (BOOL)_viewIsEnabledAtIndex:(long long)arg1;
- (BOOL)_isEnabledAndHasEnabledSubitem;
- (id)_itemAtLabelIndex:(long long)arg1;
- (id)_itemAtViewIndex:(long long)arg1;
- (void)_collectItemRectsForLabels:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (void)_collectItemRectsForViews:(struct CGRect *)arg1 count:(unsigned long long)arg2 inBounds:(struct CGRect)arg3;
- (id)_buttonAtIndex:(unsigned long long)arg1;

@end

@interface _NSToolbarItemConfigWrapperImageView : NSImageView
{
    NSToolbarItemConfigWrapper *_wrapper;
}

- (void)viewWillDraw;
- (void)_windowChangedKeyState;
@property(nonatomic) NSToolbarItemConfigWrapper *wrapper; // @synthesize wrapper=_wrapper;

@end

@interface NSNavViewController : NSObject
{
    NSOutlineView *_outlineView;
    BOOL _rootNodeIsQuery;
}

- (id)_outlineAutosaveFileName;
@property BOOL rootNodeIsQuery; // @synthesize rootNodeIsQuery=_rootNodeIsQuery;
- (void)menuItemAction:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;

@end

@interface NSNavFileSizeFormatter : NSNumberFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)numberFromString:(id)arg1;

@end

@interface NSNavSortingContext : NSObject
{
    long long *_sortOrder;
    char *_ascending;
    long long _count;
}

- (id)initWithSortDescriptors:(id)arg1 attributes:(id)arg2;
- (long long *)sortOrder;
- (long long)count;
- (char *)ascending;
- (void)dealloc;

@end

@interface NSNavFBEQueryChildNode : NSNavFBENode
{
}

- (BOOL)isVisible;
- (id)modDate;
- (id)creationDate;
- (id)shortVersion;
- (id)kind;
- (id)lastOpenedDate;
- (id)typeIdentifier;
- (id)URL;

@end

@interface NSNavFBEQueryNode : NSNavFBENode
{
    struct OpaqueNodeRef *_childrenParentNodeRef;
    NSString *_simpleQueryString;
    NSString *_advQueryString;
    NSString *_formattedSQLQueryString;
    NSString *_queryTitle;
    NSArray *_sortDescriptors;
    NSSet *_queryHitResultsFilterUTIs;
    struct OpaqueNodeRef *_mdQueryNodeRef;
    NSArray *_scopeLocations;
    void *_comparator;
    unsigned int _loadedQueryDictionariesFromSavedQuery:1;
    unsigned int _isModified:1;
    unsigned int _isEditable:1;
    unsigned int _isAppSidebarQuery:1;
    unsigned int _shouldSearchFilenamesOnly:1;
    unsigned int _padding:27;
    NSDictionary *_savedQueryData;
    NSNavNode *_currentDirectoryNode;
}

- (id)_initWithFBENode:(struct OpaqueNodeRef *)arg1;
- (id)initWithSavedQueryData:(id)arg1 title:(id)arg2 sortDescriptors:(id)arg3;
- (id)initWithQueryString:(id)arg1 searchScopes:(id)arg2 title:(id)arg3 sortDescriptors:(id)arg4;
- (id)initWithSimpleQueryString:(id)arg1 searchScopes:(id)arg2 sortDescriptors:(id)arg3;
- (void)_releaseQueryNodeRef;
- (void)_commonQueryNodeDealloc;
- (void)dealloc;
- (void)finalize;
- (id)_titleForSimpleQueryString:(id)arg1;
- (BOOL)isSavedQuery;
- (id)currentDirectoryNode;
- (void)setCurrentDirectoryNode:(id)arg1;
- (BOOL)isEditable;
- (BOOL)isModified;
- (void)setModified:(BOOL)arg1;
- (void)resetSavedQueryData;
- (BOOL)acceptsRootNode;
- (void)_setChildrenParentNodeRef:(struct OpaqueNodeRef *)arg1 withNotifications:(BOOL)arg2;
- (struct OpaqueNodeRef *)_childrenParentNodeRef;
- (id)_criteriaDictionary;
- (void)_loadFromQueryData;
- (void)_lazyLoadQueryDictionariesFromSavedQuery;
- (id)savedQueryData;
- (void)setSavedQueryData:(id)arg1;
- (void)_updateQueryNode:(BOOL)arg1;
- (void)_resetQueryForChangedAttributes:(BOOL)arg1 andSendChildrenChanged:(BOOL)arg2;
- (void)_createAndStartQueryIfRequired;
- (id)_childNodeWithFBENode:(struct OpaqueNodeRef *)arg1;
- (id)children;
- (id)getNodeAsContainerNodeForBrowsing:(BOOL)arg1;
- (void)noteQueryAttributesChanged;
- (void)_updateFormattedQueryString;
- (void)setQueryTitle:(id)arg1;
- (void)setSimpleQueryString:(id)arg1 withAdvancedQueryString:(id)arg2;
- (id)simpleQueryString;
- (id)advancedQueryString;
- (id)_searchCriteriaWithSlices:(id)arg1 anyAttribute:(id)arg2;
- (id)savedSearchDictionaryWithCriteriaSlices:(id)arg1 anyAttribute:(id)arg2 viewOptions:(id)arg3;
- (id)savedCriteriaSlices;
- (id)anyAttributeString;
- (id)scopeLocations;
- (void)setScopeLocations:(id)arg1;
- (int)searchScope;
- (BOOL)shouldSearchFilenamesOnly;
- (void)setShouldSearchFilenamesOnly:(BOOL)arg1;
- (BOOL)sortsChildrenEfficiently;
- (void)setQueryHitResultsFilterUTIs:(id)arg1;
- (id)queryHitResultsFilterUTIs;
- (void)resortWithSortDescriptors:(id)arg1;
- (id)sortDescriptors;
- (struct OpaqueIconRef *)copyIcon;
- (id)displayName;
- (id)name;
- (id)description;
- (BOOL)hasBeenStarted;
- (void)cancelQuery;
- (BOOL)isContainer;
- (BOOL)isQuery;
- (BOOL)isVisible;

@end

@interface NSMenuKEUniquer : NSObject
{
    struct __CFDictionary *keyTable;
    NSLock *lock;
}

+ (id)mainMenuUniquer;
- (id)init;
- (void)dealloc;
- (void)_printContents;
- (void)_coreAddItem:(id)arg1;
- (void)_coreRemoveItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)addItems:(id)arg1;
- (void)removeItem:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)removeAllItems;
- (id)items;

@end

@interface NSTextReplacementNode : NSObject
{
    NSString *curString;
    NSString *replacementString;
    unsigned long long replacementFlags;
    NSTextReplacementNode *children[28];
}

- (void)dealloc;

@end

@interface NSCellView : NSControl <NSCellProtocol>
{
    long long _row;
    long long _column;
    unsigned int _editing:1;
    unsigned int _reserved:31;
}

- (id)_enclosingTableView;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1;
- (id)description;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)mouseDown:(id)arg1;
- (BOOL)performMouseDown:(id)arg1;
- (id)_highlightColorForCell:(id)arg1;
- (void)_didSetFocusForCell:(id)arg1 withKeyboardFocusClipView:(id)arg2;
- (void)_setEditing:(BOOL)arg1;
- (void)editColumn:(long long)arg1 row:(long long)arg2 withEvent:(id)arg3 select:(BOOL)arg4;
- (BOOL)textShouldEndEditing:(id)arg1;
- (BOOL)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (BOOL)textShouldBeginEditing:(id)arg1;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textDidChange:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
@property long long column; // @synthesize column=_column;
@property long long row; // @synthesize row=_row;

@end

@interface NSTableRowData : NSObject
{
    NSTableView *_tableView;
    NSTableRowDataEntry **_rowEntries;
    long long _arrayLength;
    long long _lastValidRowOffset;
    struct _NSRange _visibleRows;
    long long _numberOfRows;
    long long _numberOfColumns;
    NSTableViewDropFeedbackData *_dropFeedbackData;
    _NSTableRowDataUpdateData *_updateData;
    unsigned int _valid:1;
    unsigned int _updatingVisibleRows:1;
    unsigned int _needsLayout:1;
    unsigned int _ignoreGapRowInHitTesting:1;
    unsigned int _reserved:28;
}

- (id)initWithTableView:(id)arg1;
- (void)dealloc;
- (void)beginUpdates;
- (void)endUpdates;
- (void)_releaseUpdateData;
- (void)_freeRowEntries;
- (void)_invalidateAllRowEntries;
- (void)_ensureRowEntries;
- (void)reloadData;
- (void)_invalidateRowCacheFromRow:(long long)arg1;
- (BOOL)_isUpdating;
- (id)_dumpRowEntries;
- (id)description;
- (void)removeRowAtIndex:(long long)arg1 withRowKey:(id)arg2;
- (void)willInsertRowCount:(long long)arg1;
- (void)insertRowAtIndex:(long long)arg1;
- (id)rowDataEntryForRow:(long long)arg1;
- (id)viewForRow:(long long)arg1 column:(long long)arg2;
- (id)_cachedSelectionHighlightViewForRowEntry:(id)arg1;
- (id)extraViewForRow:(long long)arg1 withKey:(id)arg2;
- (void)setExtraView:(id)arg1 forRow:(long long)arg2 withKey:(id)arg3;
- (void)_addSelectionHighlightViewForRow:(long long)arg1 withEntry:(id)arg2;
- (void)_removeSelectionHighlightViewForRow:(long long)arg1 withEntry:(id)arg2;
- (id)_delegateViewForRow:(long long)arg1 column:(long long)arg2;
- (BOOL)_updateViewForRow:(long long)arg1 column:(long long)arg2 updateFrame:(BOOL)arg3 animated:(BOOL)arg4;
- (BOOL)_updateViewsForRow:(long long)arg1 visibleColumns:(id)arg2 selected:(BOOL)arg3 animated:(BOOL)arg4;
- (void)_updateVisibleRowEntries;
- (void)updateVisibleRows;
- (void)_updateVisibleViewFrames:(BOOL)arg1;
- (void)addSelectionHighlightForRow:(long long)arg1 onlyIfVisible:(BOOL)arg2;
- (void)removeSelectionHighlightForRow:(long long)arg1;
- (void)deselectRowIndexes:(id)arg1;
- (id)_cachedSelectionHighlightViewForRow:(long long)arg1;
- (void)highlightColorChanged;
- (void)updateViewFramesForColumnIndexes:(id)arg1;
- (void)_updateRowHeightsToRow:(long long)arg1;
- (void)_updateRowHeights;
- (long long)_computedRowAtPointX:(struct CGPoint)arg1;
- (long long)_computedRowAtPointViaTree:(struct CGPoint)arg1;
- (struct _NSRange)__rowsInRect:(struct CGRect)arg1;
- (struct CGRect)__rectOfRowAssumingRowExists:(long long)arg1;
- (long long)__rowAtPoint:(struct CGPoint)arg1;
- (BOOL)isGapRowAtPoint:(struct CGPoint)arg1;
- (void)__noteHeightOfRowsWithIndexesChanged:(id)arg1;
- (void)_addHeightToOffsets:(double)arg1 startingAtRow:(long long)arg2;
- (BOOL)_isVisibleRow:(long long)arg1;
- (void)draggingEnd;
- (void)draggingExited;
- (void)draggingAccepted;
- (double)_dropGapRowHeightForRow:(long long)arg1;
- (long long)gapRow;
- (double)gapHeight;
- (void)draggingBeginWithRowIndexes:(id)arg1 startRow:(long long)arg2;
- (void)_removeDropOnFeedbackViews;
- (void)_addDropOnFeedbackViews;
- (BOOL)_setGapRowTo:(long long)arg1;
- (void)draggingUpdateFeedbackForRow:(long long)arg1 operation:(unsigned long long)arg2 mask:(unsigned long long)arg3;
@property(readonly) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(readonly) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
@property(readonly) NSTableView *tableView; // @synthesize tableView=_tableView;

@end

@interface _NSTableRowDataUpdateData : NSObject
{
    long long _updateCount;
    NSMapTable *_cachedViews;
    BOOL _delayFreeSet;
}

- (void)dealloc;
- (void)addCachedRowEntry:(id)arg1 forKey:(id)arg2;
- (id)cachedRowEntryForKey:(id)arg1;
- (void)removeCachedRowEntryForKey:(id)arg1;
@property BOOL delayFreeSet; // @synthesize delayFreeSet=_delayFreeSet;
@property long long updateCount; // @synthesize updateCount=_updateCount;

@end

@interface NSTableRowDataEntry : NSObject
{
    NSMutableDictionary *_extraViews;
    NSView **_columnViews;
    long long _columnCount;
    double _rowBottom;
    unsigned int _spansAllColumns:1;
    unsigned int _backgroundViewRequested:1;
    unsigned int _hasSelectionHighlightView:1;
    unsigned int _reserved:29;
}

- (id)initWithColumnCount:(long long)arg1 spansAllColumns:(BOOL)arg2;
- (void)dealloc;
- (id)description;
@property(nonatomic) BOOL hasSelectionHighlightView; // @dynamic hasSelectionHighlightView;
@property(readonly, nonatomic) long long columnCount; // @dynamic columnCount;
- (void)_ensureColumnViews;
@property(readonly, nonatomic) BOOL spansAllColumns; // @dynamic spansAllColumns;
- (id)viewForColumn:(long long)arg1;
- (void)setView:(id)arg1 forColumn:(long long)arg2;
- (void)invalidate;
@property(readonly, nonatomic) BOOL hasCachedViews; // @dynamic hasCachedViews;
- (void)removeViewsFromSuperview;
- (id)extraViewForKey:(id)arg1;
- (void)setExtraView:(id)arg1 forKey:(id)arg2;
- (id)viewForRow:(long long)arg1 column:(long long)arg2 inTableView:(id)arg3;
@property(nonatomic) double rowBottom; // @synthesize rowBottom=_rowBottom;

@end

@interface NSTableSelectionHighlightView : NSView
{
    NSTableView *_tableView;
    long long _row;
}

- (id)init;
- (void)drawRect:(struct CGRect)arg1;
@property long long row; // @synthesize row=_row;
@property NSTableView *tableView; // @synthesize tableView=_tableView;

@end

@interface _NSWorkspaceVolumeStatusTracker : NSObject
{
    NSURL *_url;
    NSString *_name;
}

- (void)dealloc;

@end

@interface NSWorkspaceNotificationCenter : NSNotificationCenter
{
    NSWorkspace *_workspace;
    NSLock *_workspaceLock;
    struct __CFDictionary *_volumeRefNumToVolumeTracker;
    struct NSWorkspaceNotificationCenterSubsystemContext_t _subsystemContexts[15];
    NSHashTable *_notificationObservers[20];
}

- (id)initWithWorkspace:(id)arg1;
- (void)dealloc;
- (void)_createSubsystemIfNecessary:(int)arg1;
- (BOOL)_destroySubsystemIfUnobserved:(int)arg1;
- (void)_destroyAllUnobservedSubsystems;
- (void)_addOrRemoveObserverForAllNotifications:(id)arg1 isAdding:(BOOL)arg2;
- (void)_addOrRemoveObserver:(id)arg1 forName:(id)arg2 isAdding:(BOOL)arg3;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (BOOL)_checkForObserversOfSubsystem:(int)arg1;
- (void)_workspaceDidResignOrBecomeActive:(id)arg1;
- (void)_workspaceDidBecomeActive:(id)arg1;
- (void)_workspaceDidResignActive:(id)arg1;

@end

@interface NSCGImageSnapshotRep : NSImageRep
{
    struct CGImage *_cgImage;
    NSSnapshotContextSignature *_signature;
}

+ (id)classFallbacksForKeyedArchiver;
+ (BOOL)_deprecated_hasReversedFlippednessInFlippedImages;
+ (void)_lockFocusForCreatingSnapshot:(BOOL)arg1 withRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4 flipped:(BOOL)arg5;
+ (void)lockFocusForCreatingCGImageWithRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
+ (void)lockFocusForCreatingSnapshotWithRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3 flipped:(BOOL)arg4;
+ (struct CGImage *)_unlockFocusAndPerformBlockUsingCGImageAndCapturingContext:(id)arg1;
+ (struct CGImage *)unlockFocusCreatingCGImageAndDrawingRect:(struct CGRect *)arg1;
+ (id)unlockFocusCreatingCGImageSnapshotRep;
- (BOOL)_snapshotRep_commonSetupWithWithCGImage:(struct CGImage *)arg1 snapshotContextSignature:(id)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1 snapshotContextSignature:(id)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1 drawingRect:(struct CGRect)arg2 applicableForRect:(struct CGRect)arg3 context:(id)arg4 hints:(id)arg5;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (id)fullDescription;
- (BOOL)isApplicableForRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3;
- (struct CGImage *)_snapshotRep_CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (BOOL)draw;
- (Class)classForArchiver;
- (Class)classForKeyedArchiver;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)colorSpace;
- (long long)bitsPerSample;
- (long long)pixelsWide;
- (long long)pixelsHigh;
- (BOOL)hasAlpha;
- (BOOL)_isValid;
- (BOOL)_withHints:(id)arg1 performBlockUsingBitmapForTIFFRepresentation:(id)arg2;

@end

@interface NSSnapshotBitmapGraphicsContext : NSBitmapGraphicsContext
{
    NSSnapshotContextSignature *signature;
    NSMutableData *backingData;
}

- (void)dealloc;
@property(retain, nonatomic) NSMutableData *backingData; // @synthesize backingData;
@property(retain, nonatomic) NSSnapshotContextSignature *signature; // @synthesize signature;

@end

@interface NSSnapshotContextSignature : NSObject
{
    struct CGRect _modelPixelLogicalRect;
    struct CGRect _modelPixelDrawingRect;
    struct CGColorSpace *_colorSpace;
    unsigned long long _imageInterpolation;
}

- (id)initWithDrawingRect:(struct CGRect)arg1 applicableForRect:(struct CGRect)arg2 context:(id)arg3 hints:(id)arg4;
- (void)dealloc;
- (id)description;
- (BOOL)isApplicableForRect:(struct CGRect)arg1 context:(id)arg2 hints:(id)arg3;

@end

@interface NSNavBrowser : NSBrowser
{
    unsigned int _delegate_labelColorForRow:1;
    unsigned int _delegate_isEnabledRow:1;
    unsigned int _delegate_didClickDisabledRow:1;
    unsigned int _reserved:29;
}

+ (Class)browserTableViewClass;
- (BOOL)_useSnowLeopardBehavior;
- (void)setDelegate:(id)arg1;
- (long long)labelColorIndexForRow:(long long)arg1 column:(long long)arg2;
- (BOOL)isEnabledRow:(long long)arg1 column:(long long)arg2;
- (void)didClickOnDisabledRow:(long long)arg1 column:(long long)arg2;

@end

@interface NSRunningApplication : NSObject
{
    id _superReserved;
    void *_asn;
    void **_helpers;
    void *_obsInfo;
    NSLock *_lock;
    NSString *_bundleID;
    NSString *_localizedName;
    NSURL *_bundleURL;
    NSURL *_executableURL;
    NSDate *_launchDate;
    NSImage *_icon;
    int _pid;
    unsigned int _lastSeed;
    unsigned int _activeSeed;
    unsigned int _staleSeed;
    unsigned long long _obsMask;
    struct {
        unsigned int fetchedDynamic:1;
        unsigned int deadToUs:1;
        unsigned int terminated:1;
        unsigned int finishedLaunching:1;
        unsigned int hidden:1;
        unsigned int active:1;
        unsigned int arch:3;
        unsigned int activationPolicy:3;
        unsigned int reserved1:20;
    } _aflags;
    id _appReserved;
}

+ (void)_dumpRunningApplicationObservationInfo;
+ (void)initialize;
+ (id)_slowTransformASNArrayToAppArrayWithRelease:(struct __CFArray *)arg1 count:(unsigned long long)arg2;
+ (id)_transformASNArrayToAppArrayWithRelease:(struct __CFArray *)arg1;
+ (id)_allRunningApplications;
+ (id)runningApplicationsWithBundleIdentifier:(id)arg1;
+ (id)runningApplicationWithProcessIdentifier:(int)arg1;
+ (id)currentApplication;
+ (BOOL)_deactivateCurrentAppAndCheckIfFrontReservationIsAvailable;
- (void)_postWillOrDidChangeNotificationsForKeyIndex:(int)arg1 isWill:(BOOL)arg2;
- (void)_observeChangeInKey:(int)arg1 withDataRef:(void *)arg2;
- (void)_changeObservingNotificationMask:(unsigned long long)arg1 to:(BOOL)arg2;
- (void)_updateObservationMask;
- (void)_checkForUnecessaryLSNotifications;
- (BOOL)_isAppPropertyUpdatedByLSNotifications:(int)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (struct __LSASN *)applicationSerialNumber;
- (BOOL)_getProcessSerialNumber:(struct ProcessSerialNumber *)arg1;
- (id)_fetchValueForKey:(void *)arg1;
- (void)_applyPropertyChanges:(unsigned long long)arg1 fromDictionary:(struct __CFDictionary *)arg2;
- (void)_updateIsActiveProperty;
- (BOOL)applyPendingPropertyChanges;
- (void)_fetchDynamicProperties;
- (void)_fetchDynamicPropertiesIfNecessary;
- (void)_fetchDynamicPropertiesIfNecessaryOrAppSeedIsOutOfDate;
- (BOOL)_preservingStaleProperties;
- (void)_preserveStaleDynamicPropertiesForRemainderOfRunLoop;
- (void)_updateOrStaleProperty:(int)arg1;
@property(readonly, getter=isTerminated) BOOL terminated;
@property(readonly, getter=isFinishedLaunching) BOOL finishedLaunching;
@property(readonly, getter=isHidden) BOOL hidden;
@property(readonly, getter=isActive) BOOL active;
@property(readonly) long long activationPolicy;
@property(readonly) NSString *localizedName;
- (void)_applyInformationFromLSDictionary:(id)arg1 includeDynamicProperties:(BOOL)arg2;
- (void)_fetchStaticInformationWithAtLeastKey:(struct __CFString *)arg1;
@property(readonly) NSString *bundleIdentifier;
@property(readonly) NSURL *bundleURL;
@property(readonly) NSURL *executableURL;
@property(readonly) NSImage *icon;
@property(readonly) int processIdentifier;
@property(readonly) NSDate *launchDate;
@property(readonly) long long executableArchitecture;
- (id)initWithApplicationSerialNumber:(struct __LSASN *)arg1;
- (id)_initDeadWithLSDictionary:(struct __CFDictionary *)arg1 forASN:(struct __LSASN *)arg2;
- (void)dealloc;
- (BOOL)_hasASN:(struct __LSASN *)arg1;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (BOOL)_performWithPSN:(id)arg1;
- (BOOL)hide;
- (BOOL)unhide;
- (BOOL)activateWithOptions:(unsigned long long)arg1;
- (BOOL)forceTerminate;
- (BOOL)terminate;

@end

@interface NSLSNotificationHelperCountedSet : NSLSNotificationHelper
{
    struct __CFDictionary *_dictionary;
}

- (BOOL)addEntryAndReturnIfWasEmpty:(id)arg1;
- (BOOL)removeEntryAndReturnIfEmpty:(id)arg1;
- (BOOL)isNonEmpty;
- (void)dealloc;

@end

@interface NSLSNotificationHelperWeakArray : NSLSNotificationHelper
{
    NSPointerArray *_observers;
}

- (void)dealloc;
- (BOOL)addEntryAndReturnIfWasEmpty:(id)arg1;
- (BOOL)removeEntryAndReturnIfEmpty:(id)arg1;
- (BOOL)isNonEmpty;

@end

@interface NSLSNotificationHelper : NSObject
{
}

- (id)init;
- (BOOL)addEntryAndReturnIfWasEmpty:(id)arg1;
- (BOOL)removeEntryAndReturnIfEmpty:(id)arg1;
- (BOOL)isNonEmpty;

@end

@interface NSNavPreviewController : NSViewController <QLPreviewViewDelegate>
{
    unsigned int _inLayout:1;
    unsigned int _isPreviewExpanded:1;
    unsigned int _anotherLayoutNeeded:1;
    unsigned int _reserved2:29;
    NSButton *_moreInfoButton;
    QLPreviewView *_previewImageView;
    NSButton *_disclosureButton;
    NSView *_attributeContainerView;
    NSNavLayoutView *_layoutView;
    NSTextField *_displayNameLabelTextField;
    NSTextField *_kindTextLabelField;
    NSTextField *_physicalSizeLabelTextField;
    NSTextField *_creationDateLabelTextField;
    NSTextField *_modDateTextLabelField;
    NSTextField *_lastOpenedDateLabelTextField;
    NSTextField *_shortVersionLabelTextField;
    NSTextField *_displayNameTextField;
    NSTextField *_kindTextField;
    NSTextField *_physicalSizeTextField;
    NSTextField *_creationDateTextField;
    NSTextField *_modDateTextField;
    NSTextField *_lastOpenedDateTextField;
    NSTextField *_shortVersionTextField;
    NSMutableArray *_attributeLabelTextFields;
    NSMutableArray *_attributeValueTextFields;
    NSArray *_standardLabelTextFields;
    NSArray *_standardValueTextFields;
    NSTimer *_animationTimer;
    id <QLPreviewItem> _previewItem;
    NSDictionary *_previewAttributes;
    NSDateFormatter *_dateFormatter;
    NSButton *_disclosureTextButton;
    NSDate *_modDate;
    NSDate *_creationDate;
    id _reservedPC;
}

+ (BOOL)previewViewExpandedDefault;
+ (void)setPreviewViewExpandedDefault:(BOOL)arg1;
+ (void)_delayedProcessGetInfoButtonClick:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (void)close;
@property(readonly, retain) QLPreviewView *previewView; // @dynamic previewView;
@property(readonly, getter=isPreviewViewExpanded) BOOL previewViewExpanded; // @dynamic previewViewExpanded;
@property(copy) NSString *displayName; // @dynamic displayName;
@property(copy) NSString *shortVersion; // @dynamic shortVersion;
@property(copy) NSString *kind; // @dynamic kind;
@property long long physicalSize; // @dynamic physicalSize;
- (void)_setStandardDate:(id)arg1 labelTextField:(id)arg2 valueTextField:(id)arg3;
@property(retain) NSDate *creationDate; // @dynamic creationDate;
- (id)_fetchingString;
- (void)_formatLastOpenedDate;
@property(retain) NSDate *modDate; // @dynamic modDate;
@property(retain) NSDictionary *previewAttributes; // @synthesize previewAttributes=_previewAttributes;
- (void)_updatePreviewImageView;
@property(retain, nonatomic) NSURL *previewURL;
@property(retain, nonatomic) id <QLPreviewItem> previewItem; // @synthesize previewItem=_previewItem;
- (void)_loadStandardTextFields;
- (void)loadView;
- (BOOL)_isPreviewResizable;
- (struct CGSize)_previewSizeForWidth:(double)arg1;
- (double)_widestLabelInArray:(id)arg1;
- (double)_widestLabelWidth;
- (id)_createTextFieldCopying:(id)arg1;
- (void)_addSpotlightLabelViewForText:(id)arg1;
- (void)_addSpotlightValueViewForText:(id)arg1;
- (void)_addSpotlightAttributeNamed:(id)arg1 value:(id)arg2;
- (id)_attributeNames;
- (void)_addSpotlightAttributeViews;
- (BOOL)_updateDateAttributes;
- (BOOL)_isRTL;
- (void)_layoutLabelTextFields:(id)arg1 valueTextFields:(id)arg2 yOffset:(double *)arg3 xWidth:(double *)arg4 maxWidth:(double)arg5 labelRightX:(double)arg6;
- (struct CGRect)_layoutAttributesForYOffset:(double)arg1 width:(double)arg2 animated:(BOOL)arg3;
- (void)_layoutSubviewsAnimated:(BOOL)arg1;
- (void)_layoutSubviewsAnimated:(BOOL)arg1 fromPreviewItemChange:(BOOL)arg2;
- (void)_timerCalled:(id)arg1;
- (void)previewDisclosureButtonClicked:(id)arg1;
- (void)_mainFrameChanged:(id)arg1;
- (void)navLayoutViewLayout:(id)arg1;
- (void)_clockPreferencesChanged:(id)arg1;
- (void)navLayoutViewFrameChanged:(id)arg1;
- (void)moreInfoButtonClicked:(id)arg1;
- (void)previewView:(id)arg1 willShowPreviewItem:(id)arg2;
- (void)setPreviewText:(id)arg1;

@end

@interface NSNavFlippedView : NSView
{
}

- (void)awakeFromNib;
- (BOOL)isFlipped;

@end

@interface NSNavBrowserTableView : NSBrowserTableView
{
    long long _fauxHighlightedCellRow;
    long long _fauxHighlightedCellCol;
    NSCell *_fauxHighlightedCell;
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)sendMouseUpActionForDisabledCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)setFauxHighlightedCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)_isEnabledRow:(long long)arg1;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (void)mouseDown:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (struct CGRect)labelRectOfRow:(long long)arg1;
- (BOOL)_supportsTrackingAreasForCells;

@end

@interface NSNavSharedServerController : NSViewController
{
    NSString *_statusText;
    NSString *_serverName;
    NSImage *_serverIcon;
    NSString *_userName;
    int _connectionState;
    NSButton *_connectAsButton;
    NSButton *_shareScreenButton;
    NSTextField *_serverNameTextField;
    NSTextField *_connectingTextField;
    BOOL _isBannerView;
    BOOL _isRemoteDisc;
    BOOL _isUsingDisc;
    BOOL _isWaitingForDisc;
    unsigned int _watchingFrameChanges:1;
    unsigned int _reserved2:31;
}

- (id)initAsSharedServerView;
- (id)initAsSharedServerBannerView;
- (void)dealloc;
@property(readonly) NSButton *connectAsButton; // @dynamic connectAsButton;
@property(readonly) NSButton *shareScreenButton; // @dynamic shareScreenButton;
- (void)_frameChangedOnText:(id)arg1;
- (void)sizeToFit;
- (void)updateStatus;
- (void)updateStatusTextForConnectionState:(int)arg1 userName:(id)arg2;
- (void)updateConnectAsButtonForConnectionState:(int)arg1;
@property(copy) NSString *userName; // @synthesize userName=_userName;
@property int connectionState; // @synthesize connectionState=_connectionState;
@property(getter=isWaitingForDisc) BOOL waitingForDisc; // @synthesize waitingForDisc=_isWaitingForDisc;
@property(getter=isUsingDisc) BOOL usingDisc; // @synthesize usingDisc=_isUsingDisc;
@property(getter=isRemoteDisc) BOOL remoteDisc; // @synthesize remoteDisc=_isRemoteDisc;
@property BOOL isBannerView; // @synthesize isBannerView=_isBannerView;
@property(retain) NSImage *serverIcon; // @synthesize serverIcon=_serverIcon;
@property(copy) NSString *serverName; // @synthesize serverName=_serverName;
@property(copy) NSString *statusText; // @synthesize statusText=_statusText;

@end

@interface NSNavNodeSharedServerController : NSNavSharedServerController
{
    BOOL _waitingToEject;
    BOOL _addedObserver;
}

+ (BOOL)shouldShowScreenSharingIfPossible;
- (void)_startObservingNode:(id)arg1;
- (void)_stopObservingNode:(id)arg1;
- (void)dealloc;
- (void)_updateLayout;
- (void)setRepresentedObject:(id)arg1;
- (void)_updateConnectionStateAsSharedServer;
- (void)_updateConnectionStateAsRemoteDisc;
- (void)_connectionStateChanged;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_connectToSharedServerAs;
- (void)_askToUseODSClicked:(id)arg1;
- (void)_connectAsButtonClicked:(id)arg1;
- (void)_screenShareClicked:(id)arg1;

@end

@interface NSNavBannerView : NSView
{
    int _bannerType;
}

@property int bannerType; // @synthesize bannerType=_bannerType;
- (void)_drawBannerBackgroundInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_windowChangedKeyState;

@end

@interface NSNavNodePreviewController : NSNavPreviewController
{
}

- (void)dealloc;
- (void)_stopObservingRepObject;
- (void)_startObservingRepObject;
- (void)setRepresentedObject:(id)arg1;

@end

@interface NSInputContext : NSTextInputContext
{
}

@end

@interface NSTextInputContext : NSObject
{
    id _client;
    NSArray *_inputLocales;
    void *_documentID;
    id _keyBindings;
    id _keyBindingManager;
    NSString *_commandCharacters;
    id _reserved[3];
    id _auxiliary;
    struct {
        unsigned int _acceptsGlyphInfo:1;
        unsigned int _attributedString:1;
        unsigned int _fractionOfDistance:1;
        unsigned int _baselineDelta:1;
        unsigned int _windowLevel:1;
        unsigned int _drawsVertically:1;
        unsigned int _compatibilityMode:1;
        unsigned int _hasTS:1;
        unsigned int _hasLM:1;
        unsigned int _inputLocaleGeneration:16;
        unsigned int _blockTSM:1;
        unsigned int _keyProcess:1;
        unsigned int _preflight:1;
        unsigned int _bindingFound:1;
        unsigned int _reserved:3;
    } _ticFlags;
}

+ (void)_applicationDeactivated:(id)arg1;
+ (void)_destroyDocument:(id)arg1;
+ (id)inputContextWithClient:(id)arg1;
+ (void)updateInputContexts;
+ (BOOL)processInputKeyBindings:(id)arg1;
+ (id)inputSourcesFromInputSourceLocales:(id)arg1;
+ (void)initialize;
+ (id)currentInputContext;
+ (id)localizedNameForInputSource:(id)arg1;
- (void)_invalidate;
- (BOOL)_forceAttributedString;
- (void)_updateAllowedInputSources;
- (id)keyBindingState;
- (void)_handleText:(id)arg1;
- (void)_handleCommand:(SEL)arg1;
- (id)keyBindingManager;
- (void)setKeyBindingManager:(id)arg1;
- (int)handleTSMEvent:(void *)arg1;
- (id)initWithClient:(id)arg1;
- (void)dealloc;
- (void)finalize;
@property BOOL acceptsGlyphInfo; // @dynamic acceptsGlyphInfo;
@property(copy) NSArray *allowedInputSourceLocales; // @dynamic allowedInputSourceLocales;
- (void)activate;
- (void)deactivate;
- (BOOL)handleEvent:(id)arg1;
- (void)discardMarkedText;
- (void)invalidateCharacterCoordinates;
@property(readonly) NSArray *keyboardInputSources; // @dynamic keyboardInputSources;
@property(copy) NSString *selectedKeyboardInputSource; // @dynamic selectedKeyboardInputSource;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)unmarkText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)validAttributesForMarkedText;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)attributedString;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1;
- (long long)windowLevel;
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1;
@property(readonly) id <NSTextInputClient> client; // @synthesize client=_client;

@end

@interface NSTypeSelectPanel : NSPanel
{
    NSTextField *_currentSeachTextField;
}

- (id)init;
- (void)dealloc;
- (void)_ensureCurrentSearchTextField;
@property(copy) NSString *currentSearch; // @dynamic currentSearch;
- (void)setCurrentSearchScreenRect:(struct CGRect)arg1;

@end

@interface NSWindowScaleAnimation : NSAnimation
{
    NSWindow *_window;
    double _startScale;
    double _endScale;
    long long _tag;
}

- (void)dealloc;
- (void)startAnimation;
- (void)setCurrentProgress:(float)arg1;
@property long long tag; // @synthesize tag=_tag;
@property double endScale; // @synthesize endScale=_endScale;
@property double startScale; // @synthesize startScale=_startScale;
@property(retain) NSWindow *window; // @synthesize window=_window;

@end

@interface NSTypeSelectBackgroundView : NSView
{
    NSColor *_strokeColor;
    NSColor *_backgroundColor;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain) NSColor *strokeColor; // @synthesize strokeColor=_strokeColor;

@end

@interface _NSMenuServicesView : NSView
{
    NSString *_bundlePath;
    NSString *_categoryName;
    double _minimumWidths[3];
    double _actualWidths[3];
    double _categoryNameWidth;
    NSImage *_image;
    NSMenuItem *_explicitMenuItem;
    struct {
        unsigned int _shouldDrawCategoryArea:1;
        unsigned int _shouldDrawCategoryName:1;
        unsigned int _imageLoadHasBegun:1;
        unsigned int _imageIsLoaded:1;
        unsigned int _inDrawRect:1;
        unsigned int _isSpacer:1;
        unsigned int _isEditServicesItem:1;
        unsigned int _isNoServiceApplyItem:1;
        unsigned int _iconIsDefaultBrowser:1;
        unsigned int reserved:23;
    } _flags;
}

+ (void)initialize;
@property(nonatomic) BOOL shouldDrawCategoryName;
@property(nonatomic) BOOL isSpacer;
@property(nonatomic) BOOL isEditServicesItem;
@property(nonatomic) BOOL isNoServicesApplyItem;
@property(nonatomic) BOOL shouldDrawCategoryArea;
@property(nonatomic) BOOL iconIsDefaultBrowser;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)flipHorizontallyIfNecessary:(struct CGRect)arg1;
- (id)title;
- (BOOL)isFlipped;
- (id)representingMenuItem;
@property(copy, nonatomic) NSString *categoryName;
- (id)getKeyEquivalentCellForItem:(id)arg1;
- (id)categoryHighlightColor;
- (id)categoryColor;
- (id)highlightedCategoryAttributes;
- (id)categoryAttributes;
- (double)roundUpForTextMeasurement:(double)arg1;
- (void)computeMinimumMetrics:(struct NSMenuServicesViewMetrics *)arg1;
- (void)getMetrics:(struct NSMenuServicesViewMetrics *)arg1 forWidths:(const double *)arg2;
- (void)computeMinimumWidthsIfNecessary;
- (void)getMinimumWidths:(double *)arg1;
- (void)setActualWidths:(const double *)arg1;
- (void)loadedImage:(id)arg1;
- (void)drawImageInRect:(struct CGRect)arg1 backgroundStyle:(long long)arg2 clipRect:(struct CGRect)arg3;
- (void)drawCategoryNameInRect:(struct CGRect)arg1 highlighted:(BOOL)arg2 backgroundStyle:(long long)arg3 clipRect:(struct CGRect)arg4;
- (void)drawTitle:(id)arg1 inRect:(struct CGRect)arg2 highlighted:(BOOL)arg3 enabled:(BOOL)arg4 backgroundStyle:(long long)arg5 clipRect:(struct CGRect)arg6;
- (void)drawKeyEquivalentForItem:(id)arg1 inRect:(struct CGRect)arg2 highlighted:(BOOL)arg3 backgroundStyle:(long long)arg4 clipRect:(struct CGRect)arg5;
- (void)drawRect:(struct CGRect)arg1;
- (void)sizeToFit;
- (void)dealloc;
@property(retain, nonatomic) NSMenuItem *explicitMenuItem; // @synthesize explicitMenuItem=_explicitMenuItem;
@property(copy, nonatomic) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;

@end

@interface _NSMenuServicesViewOperation : NSOperation
{
    NSString *path;
    NSMutableArray *objectsToNotify;
    NSMutableArray *completionBlocksToInvoke;
    NSImage *resultImage;
    BOOL imageIsLoaded;
}

- (void)addCompletionBlock:(id)arg1;
- (void)finishedLoading:(id)arg1;
- (void)main;
- (void)dealloc;
@property(copy) NSString *path; // @synthesize path;

@end

@interface NSTableViewDropFeedbackData : NSObject
{
    long long _gapRow;
    long long _dropOnRow;
    long long _startRow;
    double _gapHeight;
    NSMutableIndexSet *_draggingIndexes;
    unsigned long long _dragOperation;
    unsigned long long _dropOperation;
    BOOL _draggingAccepted;
    NSView *_dropFeedbackViewBelow;
    NSView *_dropFeedbackViewAbove;
}

- (id)init;
- (void)insertRowAtIndex:(long long)arg1;
- (void)removeRowAtIndex:(long long)arg1;
@property(copy) NSIndexSet *draggingIndexes; // @synthesize draggingIndexes=_draggingIndexes;
- (void)dealloc;
@property BOOL draggingAccepted; // @synthesize draggingAccepted=_draggingAccepted;
@property long long startRow; // @synthesize startRow=_startRow;
@property long long dropOnRow; // @synthesize dropOnRow=_dropOnRow;
@property(retain) NSView *dropFeedbackViewAbove; // @synthesize dropFeedbackViewAbove=_dropFeedbackViewAbove;
@property(retain) NSView *dropFeedbackViewBelow; // @synthesize dropFeedbackViewBelow=_dropFeedbackViewBelow;
@property unsigned long long dropOperation; // @synthesize dropOperation=_dropOperation;
@property unsigned long long dragOperation; // @synthesize dragOperation=_dragOperation;
@property long long gapRow; // @synthesize gapRow=_gapRow;
@property double gapHeight; // @synthesize gapHeight=_gapHeight;

@end

@interface NSDropFeedbackView : NSView
{
    long long _dropFeedbackOrder;
    NSColor *_dropFeedbackColor;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
@property(retain) NSColor *dropFeedbackColor; // @synthesize dropFeedbackColor=_dropFeedbackColor;
@property long long dropFeedbackOrder; // @synthesize dropFeedbackOrder=_dropFeedbackOrder;

@end

@interface NSIBUserDefinedRuntimeAttributesConnector : NSObject
{
    NSArray *keyPaths;
    NSArray *values;
    id object;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)keyPaths;
- (void)setKeyPaths:(id)arg1;
- (id)values;
- (void)setValues:(id)arg1;
- (id)object;
- (void)setObject:(id)arg1;
- (id)source;
- (void)setSource:(id)arg1;
- (id)destination;
- (void)setDestination:(id)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)arg1;

@end

@interface _NSMenuContext : NSObject
{
    id _requestor;
    NSArray *_sendTypes;
    NSMutableArray *_requestorInfos;
    NSArray *_fileURLsToCheck;
    NSSet *_preloadedUTIsOfFileURLsToCheck;
    NSError *_errorLoadingUTIs;
    NSString *_stringToCheck;
    struct _NSRange _rangeOfStringToCheck;
    NSArray *_carbonCopyUTIs;
    NSArray *_carbonPasteUTIs;
    unsigned long long _duplicateServicesMask;
    unsigned long long _source;
    struct {
        unsigned int isForContextMenu:1;
        unsigned int checkedForString:1;
        unsigned int checkedForURLs:1;
        unsigned int checkedForWhitespace:1;
        unsigned int isAllWhitespace:1;
        unsigned int reserved:27;
    } _flags;
}

- (id)initForServicesMenuWithRequestorChain:(id)arg1;
- (id)initForCarbonServicesMenuWithCopyUTIs:(id)arg1 pasteUTIs:(id)arg2;
@property(nonatomic) BOOL isForContextMenu;
- (id)requestorProvidingType:(id)arg1;
- (BOOL)serviceEntryIsActiveInThisContext:(id)arg1;
- (id)getObjectsOfClass:(Class)arg1 fromRequestorProvidingType:(id)arg2;
- (BOOL)determineSelectedStringForApplyingFiltersDirectlyFromRequestorSupplyingType:(id)arg1;
- (BOOL)determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:(id)arg1;
- (id)_selectedStringAndRangeForApplyingFilters:(struct _NSRange *)arg1;
- (id)_selectedURLsForApplyingFilters;
- (BOOL)_sendTypesContainsTextTypeAppropriateForFiltering;
- (BOOL)_selectionExistsAndIsAllWhitespace;
- (BOOL)_stringContainsFilePath:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)filterEntriesByBundleID:(id)arg1;
- (void)filterEntriesByMenuLocation:(id)arg1;
- (void)filterEntriesByFileType:(id)arg1;
- (void)filterEntriesByCharacterLimit:(id)arg1;
- (void)filterEntriesByWordLimit:(id)arg1;
- (void)filterEntriesByFilePath:(id)arg1;
- (void)filterEntriesByRadar:(id)arg1;
- (void)filterEntriesByLanguage:(id)arg1;
- (void)filterEntriesByScript:(id)arg1;
- (void)filterEntriesByDataDetectors:(id)arg1;
- (void)filterEntriesByAvailableInputSources:(id)arg1;
- (void)reportNoTextForTrackingFiltersThatRequireText:(id)arg1;
- (void)moveQualifiedEntries:(id)arg1 approvedEntries:(id)arg2 havingRunFilters:(unsigned long long)arg3;
- (void)filterEntriesByTheirFilters:(id)arg1;
- (void)filterEntriesByDuplicates:(id)arg1;
- (void)filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:(id)arg1;
- (void)filterEntriesByRemovingItemsThatDoNotUseSelection:(id)arg1;
- (void)filterEntriesByRemovingItemsWithNoSendOrReceiveTypes:(id)arg1;
- (id)infoForRequestor:(id)arg1;
- (void)filterEntriesWithRequestorBySupportedSendAndReceiveTypes:(id)arg1 returningSendTypesIntoArray:(id)arg2 returningEntriesNeedingURLTypecheckingIntoSet:(id)arg3;
- (void)filterEntriesByUnmatchedFileTypes:(id)arg1 entriesNeedingURLTypechecking:(id)arg2;
- (BOOL)serviceEntryTypesConformToCarbonPasteboardTypes:(id)arg1;
- (void)filterEntriesWithCarbonPasteboardTypesBySupportedSendAndReceiveTypes:(id)arg1 returningSendTypesIntoArray:(id)arg2;
- (id)utisForURLs:(id)arg1 error:(id *)arg2;
- (void)_preconcurrentPortionOfQualifyEntries:(id)arg1 returningEntriesNeedingURLTypecheckingIntoSet:(id)arg2;
- (BOOL)_concurrentPortionOfQualifyEntriesWithEntriesNeedingURLTypechecking:(id)arg1 withCompletionHandler:(id)arg2;
- (BOOL)qualifyEntries:(id)arg1 withCompletionHandler:(id)arg2;
- (void)dealloc;
@property(nonatomic) unsigned long long duplicateServicesMask; // @synthesize duplicateServicesMask=_duplicateServicesMask;

@end

@interface _NSServiceEntry : NSObject <_NSServiceAction>
{
    NSString *menuItemTitle;
    NSString *bundleIdentifier;
    NSString *bundlePath;
    NSString *executablePath;
    NSString *originalTitle;
    NSString *defaultTitle;
    NSString *localizedTitle;
    NSKeyboardShortcut *defaultKeyboardShortcut;
    NSKeyboardShortcut *keyboardShortcut;
    NSString *message;
    NSString *filter;
    NSString *portName;
    NSArray *sendPasteboardTypes;
    NSArray *sendFileTypes;
    NSArray *returnTypes;
    NSString *userData;
    NSArray *languages;
    NSArray *_serviceFilters;
    NSString *localizedServiceDescription;
    float timeout;
    struct {
        unsigned int track:1;
        unsigned int hadServiceFilterInPlist:1;
        unsigned int isSpellChecker:1;
        unsigned int filterRequireFilePath:1;
        unsigned int isWorkflow:1;
        unsigned int showApplicationNameWithMenuItemTitle:1;
        unsigned int activeInServicesMenu:1;
        unsigned int activeInContextMenu:1;
        unsigned int serviceCategory:5;
        unsigned int checkedServiceDescription:1;
        unsigned int reserved:18;
    } _flags;
}

- (id)combinedSendTypes;
- (unsigned long long)combinedSendTypeCount;
@property(readonly, nonatomic) BOOL isWorkflow;
@property(readonly, nonatomic) BOOL isSpellChecker;
@property(nonatomic) BOOL isAvailableInContextMenu;
@property(nonatomic) BOOL isAvailableInServicesMenu;
- (unsigned long long)_inferServiceCategory;
- (unsigned long long)typeCategory;
@property(readonly, nonatomic) NSString *localizedServiceDescription;
@property(readonly, nonatomic) NSString *categoryTitle;
@property(readonly, nonatomic) NSString *localizedCategoryTitle;
- (BOOL)hasSendTypes;
- (BOOL)hasReturnTypes;
- (BOOL)hasSendOrReturnTypes;
- (BOOL)hasKeyboardShortcut;
@property(copy, nonatomic) NSString *keyEquivalent;
- (void)dealloc;
- (id)description;
- (id)serviceIdentifier;
- (id)servicePreferences;
- (void)applyServicesPreferences:(id)arg1;
- (void)resetToDefaultAvailability;
- (void)resetToDefaultKeyboardShortcut;
- (void)flushCachedMenuItemTitle;
- (id)menuItemTitle;
- (id)titleForTracking;
- (long long)compareServiceEntryByLocalizedTitle:(id)arg1;
- (unsigned int)enableStatus;
@property(copy, nonatomic) NSKeyboardShortcut *keyboardShortcut; // @synthesize keyboardShortcut;
@property(readonly, nonatomic) NSKeyboardShortcut *defaultKeyboardShortcut; // @synthesize defaultKeyboardShortcut;
@property(readonly, nonatomic) NSString *bundlePath; // @synthesize bundlePath;
@property(readonly, nonatomic) NSString *localizedTitle; // @synthesize localizedTitle;
@property(readonly, nonatomic) NSString *title; // @synthesize title=defaultTitle;

@end

@interface _NSServiceFilter : NSObject
{
    unsigned long long desiredFilterMask;
    unsigned int wordLimit;
    unsigned int characterLimit;
    _NSServiceEntry *entry;
    id bundleIdentifier;
    id fileType;
    id textScript;
    id textLanguage;
    NSArray *nonstandardContentTypes;
    struct {
        unsigned int contentTypeWebURL:1;
        unsigned int contentTypeAnyURL:1;
        unsigned int contentTypeDate:1;
        unsigned int contentTypeAddress:1;
        unsigned int contentTypeFilePath:1;
        unsigned int contentTypeRadar:1;
        unsigned int contentTypeEmail:1;
        unsigned int requiresChineseInputSource:1;
        unsigned int hasMenuLocation:1;
        unsigned int menuLocationServices:1;
        unsigned int menuLocationContext:1;
        unsigned int disqualified:1;
        unsigned int sense:1;
        unsigned int reserved:19;
    } flags;
}

- (id)init;
- (id)_descriptionInnards;
- (id)descriptionForTracking;
- (id)description;
- (BOOL)hasDataDetectorTypes;
- (unsigned long long)desiredFilterMask;
- (BOOL)isRequiredContext;
- (id)dataDetectorTypes;
- (unsigned long long)serviceCategory;
- (void)dealloc;

@end

@interface _NSServiceRequestorInfo : NSObject
{
    id requestor;
    NSMutableSet *sendTypes;
    NSMutableArray *serviceEntries;
}

- (id)initWithRequestor:(id)arg1;
- (void)dealloc;

@end

@interface NSNavLayoutView : NSNavFlippedView
{
    BOOL _needsLayout;
    id _delegate;
}

- (void)viewWillDraw;
- (void)setFrameSize:(struct CGSize)arg1;
@property id delegate; // @synthesize delegate=_delegate;
@property BOOL needsLayout; // @synthesize needsLayout=_needsLayout;

@end

@interface NSNavProgressWindow : NSPanel
{
}

- (BOOL)worksWhenModal;

@end

@interface NSNavProgressWindowController : NSWindowController
{
    NSViewController *_viewController;
}

- (void)dealloc;
- (void)addViewController:(id)arg1;
- (void)replaceViewController:(id)arg1 withViewController:(id)arg2;
- (void)windowDidLoad;
- (void)showWindow:(id)arg1;

@end

@interface NSNavProgressStatusViewController : NSViewController
{
    NSProgressIndicator *_progress;
    NSTextField *_titleText;
    NSTextField *_messageText;
    NSButton *_cancelButton;
    NSImageView *_imageView;
    NSImageView *_badgeView;
    NSTrackingArea *_cancelButtonTrackingArea;
    NSString *_titleString;
    NSString *_messageString;
    NSString *_cancelMessageString;
    NSImage *_image;
    NSImage *_badgeImage;
    BOOL _indeterminate;
    BOOL _hasCancel;
    long long _percentComplete;
}

- (id)init;
- (void)dealloc;
- (void)_updateTrackingAreas:(id)arg1;
- (void)loadView;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)cancel:(id)arg1;
@property long long percentComplete; // @synthesize percentComplete=_percentComplete;
@property BOOL hasCancel; // @synthesize hasCancel=_hasCancel;
@property BOOL indeterminate; // @synthesize indeterminate=_indeterminate;
@property(retain) NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(copy) NSString *cancelMessageString; // @synthesize cancelMessageString=_cancelMessageString;
@property(copy) NSString *messageString; // @synthesize messageString=_messageString;
@property(copy) NSString *titleString; // @synthesize titleString=_titleString;
@property(readonly, retain) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;

@end

@interface NSNavODSAskToUseTask : NSNavNodeTask
{
    int _state;
    NSNavProgressStatusViewController *_progressViewController;
    NSNavProgressErrorViewController *_taskDeniedViewController;
}

+ (id)addTaskForNode:(id)arg1;
+ (id)findTaskForNode:(id)arg1;
+ (void)finishedTaskForNode:(id)arg1;
+ (void)cancelTaskForNode:(id)arg1;
+ (void)deniedTaskForNode:(id)arg1;
+ (void)waitingForDiscForNode:(id)arg1;
- (id)initWithNode:(id)arg1;
- (void)dealloc;
- (id)_nodeDriveType;
- (void)_updateProgress;
- (id)_taskDeniedErrorString;
- (void)_userCancelled:(id)arg1;
- (void)_addProgressViewController;
- (void)_addTaskDeniedViewController;
- (void)_removeTask;
@property int state; // @synthesize state=_state;
- (void)_delayedShowUI;
- (void)cancel;

@end

@interface NSNavNodeTask : NSObject
{
    NSNavNode *_node;
    NSNavProgressWindowController *_progressWindowController;
}

+ (id)allTasksForNode:(id)arg1;
+ (void)addTask:(id)arg1 forNode:(id)arg2;
+ (void)removeTask:(id)arg1 forNode:(id)arg2;
+ (void)removeAllTasksForNode:(id)arg1;
- (id)initWithNode:(id)arg1;
- (BOOL)worksWhenModal;
- (void)dealloc;
- (void)cancel;
@property(readonly, retain) NSNavProgressWindowController *progressWindowController; // @dynamic progressWindowController;
- (id)_imageForOSType:(unsigned int)arg1;
@property(retain) NSNavNode *node; // @synthesize node=_node;

@end

@interface NSNavProgressErrorViewController : NSViewController
{
    NSButton *_rightButton;
    NSString *_messageString;
    NSImage *_image;
    NSImage *_badgeImage;
}

- (id)init;
- (void)dealloc;
@property(readonly, retain) NSButton *rightButton; // @dynamic rightButton;
@property(retain) NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(copy) NSString *messageString; // @synthesize messageString=_messageString;

@end

@interface NSNavButton : NSButton
{
}

- (void)dealloc;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_keyChanged:(id)arg1;

@end

@interface NSCompositeImageRep : NSImageRep
{
    NSImage *_baseImage;
    NSImage *_overlayImage;
    struct CGRect _baseFrame;
    struct CGRect _overlayFrame;
    struct CGPoint _translation;
}

- (id)initWithBaseImage:(id)arg1 overlayImage:(id)arg2 overlayFrame:(struct CGRect)arg3;
- (void)dealloc;
- (BOOL)draw;
@property(readonly) struct CGRect overlayFrame; // @synthesize overlayFrame=_overlayFrame;
@property(readonly) NSImage *overlayImage; // @synthesize overlayImage=_overlayImage;
@property(readonly) NSImage *baseImage; // @synthesize baseImage=_baseImage;

@end

@interface NSPasteboardItem : NSObject <NSPasteboardWriting, NSPasteboardReading>
{
    NSPasteboard *_pasteboard;
    unsigned long long _index;
    long long _gen;
    id _auxObject;
    void *_reserved;
}

+ (id)readableTypesForPasteboard:(id)arg1;
- (id)init;
- (void)_setPasteboard:(id)arg1 index:(unsigned long long)arg2 generation:(long long)arg3;
- (id)_auxObject;
- (id)types;
- (id)availableTypeFromArray:(id)arg1;
- (unsigned long long)_index;
- (id)_pasteboard;
- (id)_dataProviderForType:(id)arg1;
- (BOOL)setDataProvider:(id)arg1 forTypes:(id)arg2;
- (BOOL)setData:(id)arg1 forType:(id)arg2;
- (BOOL)setString:(id)arg1 forType:(id)arg2;
- (BOOL)setPropertyList:(id)arg1 forType:(id)arg2;
- (id)dataForType:(id)arg1;
- (id)stringForType:(id)arg1;
- (id)propertyListForType:(id)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;

@end

@interface _NSPasteboardItemAuxObject : NSObject
{
    NSMutableArray *_orderedTypes;
    NSMutableDictionary *_dataByType;
    NSMutableDictionary *_providersByType;
}

- (id)orderedTypes;
- (id)dataByType;
- (id)providersByType;
- (void)dealloc;

@end

@interface NSPasteboardFilter : NSObject
{
    NSString *_intype;
    NSString *_outtype;
    NSDictionary *_spec;
}

+ (void)initialize;
+ (id)_typesFilterableFromType:(id)arg1;
+ (id)_typesFilterableToType:(id)arg1;
+ (id)_conversionChainFrom:(id)arg1 to:(id)arg2;
+ (id)filterWithFilterSpec:(id)arg1 intype:(id)arg2 outtype:(id)arg3;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)intype;
- (id)outtype;
- (id)_computeDataFromData:(id)arg1;
- (id)description;

@end

@interface NSServicesPasteboard2 : NSPasteboard
{
    NSData *_data;
    NSString *_type;
    NSPasteboard *_pb;
}

+ (id)filterPasteboardWithData:(id)arg1 ofType:(id)arg2;
+ (id)filterPasteboardWithPasteboard:(id)arg1;
- (void)dealloc;
- (long long)declareTypes:(id)arg1 owner:(id)arg2;
- (long long)addTypes:(id)arg1 owner:(id)arg2;
- (BOOL)setData:(id)arg1 forType:(id)arg2;
- (id)pasteboardItems;
- (unsigned long long)indexOfPasteboardItem:(id)arg1;
- (BOOL)canReadObjectForClasses:(id)arg1 options:(id)arg2;
- (BOOL)canReadItemWithDataConformingToTypes:(id)arg1;
- (id)readObjectsForClasses:(id)arg1 options:(id)arg2;
- (BOOL)writeObjects:(id)arg1;
- (long long)clearContents;
- (void)_clearOutstandingPromises;
- (id)types;
- (id)dataForType:(id)arg1;
- (long long)changeCount;

@end

@interface NSIconRefImageRep : NSImageRep
{
    struct OpaqueIconRef *_iconRef;
    unsigned int _sizeIdentifier;
    NSBitmapImageRep *_fallbackBitmap;
}

- (id)initWithIconRef:(struct OpaqueIconRef *)arg1 sizeIdentifier:(unsigned int)arg2;
- (void)dealloc;
- (void)finalize;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct OpaqueIconRef *)iconRef;
- (unsigned int)sizeIdentifier;
- (id)description;
- (struct CGImage *)_copyCGImage;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
- (BOOL)draw;
- (Class)classForArchiver;
- (Class)classForKeyedArchiver;
- (void)encodeWithCoder:(id)arg1;
- (long long)pixelsWide;
- (long long)pixelsHigh;
- (BOOL)hasAlpha;
- (BOOL)_isValid;
- (id)_fallbackBitmap;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface NSTouch : NSObject <NSCopying>
{
    long long _index;
    id _identity;
    unsigned long long _phase;
    struct CGPoint _normalizedPosition;
    long long _privateFlags;
    NSView *_view;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
    id _device;
    struct CGSize _deviceSize;
    id _reserved5;
    id _reserved6;
    id _reserved7;
    id _reserved8;
}

- (void)dealloc;
- (id)_initWithIdentity:(id)arg1 index:(long long)arg2 phase:(unsigned long long)arg3 position:(struct CGPoint)arg4 isResting:(BOOL)arg5 view:(id)arg6 device:(id)arg7 deviceSize:(struct CGSize)arg8;
- (id)_initWithIndex:(long long)arg1 phase:(unsigned long long)arg2 position:(struct CGPoint)arg3 isResting:(BOOL)arg4 view:(id)arg5 device:(id)arg6 deviceSize:(struct CGSize)arg7;
- (id)_initWithPreviousTouch:(id)arg1 newPhase:(unsigned long long)arg2 position:(struct CGPoint)arg3 isResting:(BOOL)arg4;
- (long long)_index;
@property(readonly) BOOL isResting;
- (id)_view;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly) struct CGSize deviceSize; // @synthesize deviceSize=_deviceSize;
@property(readonly, retain) id device; // @synthesize device=_device;
@property(readonly) struct CGPoint normalizedPosition; // @synthesize normalizedPosition=_normalizedPosition;
@property(readonly) unsigned long long phase; // @synthesize phase=_phase;
@property(readonly, retain) id <NSObject><NSCopying> identity; // @synthesize identity=_identity;

@end

@interface NSIconRefBitmapImageRep : NSBitmapImageRep
{
    struct OpaqueIconRef *_iconRef;
    unsigned int _bitmapDataAvailable:1;
}

- (id)initWithIconRef:(struct OpaqueIconRef *)arg1 sizeIdentifier:(unsigned int)arg2;
- (id)initWithIconRef:(struct OpaqueIconRef *)arg1 size:(struct CGSize)arg2;
- (struct OpaqueIconRef *)iconRef;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;
- (id)initWithCoder:(id)arg1;
- (void)_ensureBitmapDataAvailable;
- (BOOL)drawAtPoint:(struct CGPoint)arg1;
- (BOOL)drawInRect:(struct CGRect)arg1;
- (BOOL)draw;
- (long long)_uncachedSize;
- (struct CGImage *)CGImage;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(unsigned long long)arg1 factor:(float)arg2;
- (char *)bitmapData;
- (void)getBitmapDataPlanes:(char **)arg1;
- (void)setColor:(id)arg1 atX:(long long)arg2 y:(long long)arg3;
- (id)colorAtX:(long long)arg1 y:(long long)arg2;
- (void)getPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (void)setPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (BOOL)_isValid;

@end

@interface NSPageableTableView : NSTableView <NSTableViewDelegate>
{
    long long _displayedRowCount;
    long long _pageNumber;
    double _lastVisibleHeight;
    BOOL _isTiling;
    BOOL _isPaged;
    id _proxyDelegate;
}

- (void)_commonPageTableInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)_updateLastVisibleHeightIfNeeded;
- (void)scrollToPage;
@property long long displayedRowCount; // @dynamic displayedRowCount;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tile;
- (BOOL)preservesContentDuringLiveResize;
@property long long page; // @dynamic page;
@property(readonly) long long pageCount; // @dynamic pageCount;
- (void)setDelegate:(id)arg1;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)keyDown:(id)arg1;
- (id)dragImageForRowsWithIndexes:(id)arg1 tableColumns:(id)arg2 event:(id)arg3 offset:(struct CGPoint *)arg4;
@property(getter=isPaged) BOOL paged; // @synthesize paged=_isPaged;

@end

@interface NSMultiProxyDelegate : NSObject
{
    NSMutableArray *_proxies;
}

- (void)dealloc;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface NSColorSwatchCell : NSTextFieldCell
{
    NSColor *_swatchColor;
    struct CGSize _swatchSize;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_swatchRectForCellFrame:(struct CGRect)arg1;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
@property(retain) NSColor *swatchColor; // @synthesize swatchColor=_swatchColor;
@property struct CGSize swatchSize; // @synthesize swatchSize=_swatchSize;

@end

@interface _NSAccessibilityLabelViewLabel : NSAccessibilityIndexedMockUIElement
{
}

+ (id)labelWithIndex:(long long)arg1 parent:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface NSAccessibilityPathComponent : NSAccessibilityIndexedMockUIElement
{
    NSPathComponentCell *_pathComponentCell;
}

+ (id)pathComponentWithPathComponentCell:(id)arg1 index:(long long)arg2 parent:(id)arg3;
- (id)initWithPathComponentCell:(id)arg1 index:(long long)arg2 parent:(id)arg3;
- (void)dealloc;
- (id)pathComponentCell;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;

@end

@interface _NSGrowBoxView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)_setWindow:(id)arg1;

@end

@interface NSNavBannerButtonCell : NSButtonCell
{
    BOOL _disabledWhenInactive;
}

- (void)_setupAttributes;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEnabled;
- (long long)interiorBackgroundStyle;
- (BOOL)_acceptsFirstMouseForEvent:(id)arg1 inView:(id)arg2;
- (id)_textAttributes;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@property BOOL disabledWhenInactive; // @synthesize disabledWhenInactive=_disabledWhenInactive;

@end

@interface NSObject (NSObjectAccessibilityAttributeAccessAdditions)
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1 forParameter:(id)arg2;
@end

@interface NSObject (NSAccessibilityOverriddenAttributesArchiving)
- (void)accessibilityEncodeOverriddenAttributes:(id)arg1;
- (void)accessibilityDecodeOverriddenAttributes:(id)arg1;
@end

@interface NSObject (NSAccessibilityOverridingAttributes)
- (BOOL)accessibilitySetOverrideValue:(id)arg1 forAttribute:(id)arg2;
@end

@interface NSObject (NSAccessibilityOverriddenAttributes)
- (id)accessibilityOverriddenAttributes;
- (BOOL)accessibilitySupportsOverriddenAttributes;
@end

@interface NSObject (NSAccessibilityUIElementSpecifier)
- (id)_accessibilityUIElementPathForChild:(id)arg1;
- (id)_accessibilityUIElementPath;
- (BOOL)accessibilityShouldUseUniqueId;
@end

@interface NSAffineTransform (NSAppKitAdditons)
- (id)transformBezierPath:(id)arg1;
- (void)set;
- (void)concat;
@end

@interface NSAnimation (NSInternal)
- (void)_createTimer:(BOOL)arg1;
- (void)_runBlocking;
- (void)_startRunningNonBlocking;
- (void)_runInNewThread;
- (void)_advanceTimeWithTimer:(id)arg1;
- (void)_animationThread;
- (void)_startAnimation;
- (void)_stopAnimation:(int)arg1;
- (void)_stopAnimation:(int)arg1 withTimer:(id)arg2;
- (void)_addTargetAnimation:(id)arg1 start:(BOOL)arg2 atProgress:(float)arg3;
- (void)_removeTargetAnimation:(id)arg1 start:(BOOL)arg2;
- (double)_progressForAnimation:(id)arg1 start:(BOOL)arg2;
- (void)_clearAllTargetAnimations;
@end

@interface NSAnimationHelper (NSPrivate)
- (void)_doAnimationStep;
- (void)_createTimer;
- (void)_doRunLoop;
- (void)_destroyTimer;
@end

@interface NSScriptCoercionHandler (NSAppKitCoercions)
+ (id)coerceString:(id)arg1 toColor:(Class)arg2;
+ (id)coerceColor:(id)arg1 toString:(Class)arg2;
+ (id)coerceArray:(id)arg1 toColor:(Class)arg2;
+ (id)coerceColor:(id)arg1 toArray:(Class)arg2;
+ (id)coerceData:(id)arg1 toColor:(Class)arg2;
+ (id)coerceColor:(id)arg1 toData:(Class)arg2;
+ (id)coerceString:(id)arg1 toTextStorage:(Class)arg2;
+ (id)coerceTextStorage:(id)arg1 toString:(Class)arg2;
+ (id)coerceData:(id)arg1 toTextStorage:(Class)arg2;
+ (id)coerceTextStorage:(id)arg1 toData:(Class)arg2;
- (void)_setUpAppKitCoercions;
@end

@interface NSAEDescriptorTranslator (NSAppKitTranslations)
+ (id)_colorByTranslatingRGBColorDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingColor:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingTextStorage:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
- (void)_setUpAppKitTranslations;
@end

@interface NSAppleScript (NSExtensions)
+ (id)_attributedStringFromDescriptor:(id)arg1;
- (id)richTextSource;
@end

@interface NSApplication (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
@end

@interface NSApplication (NSErrorPresentation)
- (void)_errorAlert:(id)arg1 wasPresentedWithResult:(long long)arg2 inContext:(CDStruct_c851af33 *)arg3;
- (id)_validateError:(id)arg1 forPresentationMethod:(SEL)arg2;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)presentError:(id)arg1;
- (id)willPresentError:(id)arg1;
@end

@interface NSNotificationCenter (NSNotificationCenterAppKitExtensions)
- (void)_addObserver:(id)arg1 notificationNamesAndSelectorNames:(id)arg2 object:(id)arg3 onlyIfSelectorIsImplemented:(BOOL)arg4;
- (void)_removeObserver:(id)arg1 notificationNamesAndSelectorNames:(id)arg2 object:(id)arg3;
@end

@interface NSApplication (NSApplicationAccessibilityPrivate)
- (id)_accessibilityCompatibilityHitTest:(struct CGPoint)arg1;
@end

@interface NSApplication (NSApplicationAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityMenuBarAttribute;
- (BOOL)accessibilityIsMenuBarAttributeSettable;
- (id)accessibilityWindowsAttribute;
- (BOOL)accessibilityIsWindowsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityFrontmostAttribute;
- (BOOL)accessibilityIsFrontmostAttributeSettable;
- (void)accessibilitySetFrontmostAttribute:(id)arg1;
- (id)accessibilityHiddenAttribute;
- (BOOL)accessibilityIsHiddenAttributeSettable;
- (void)accessibilitySetHiddenAttribute:(id)arg1;
- (id)accessibilityMainWindowAttribute;
- (BOOL)accessibilityIsMainWindowAttributeSettable;
- (id)accessibilityFocusedWindowAttribute;
- (BOOL)accessibilityIsFocusedWindowAttributeSettable;
- (id)accessibilityFocusedUIElementAttribute;
- (BOOL)accessibilityIsFocusedUIElementAttributeSettable;
- (id)accessibilityEnhancedUserInterfaceAttribute;
- (BOOL)accessibilityIsEnhancedUserInterfaceAttributeSettable;
- (void)accessibilitySetEnhancedUserInterfaceAttribute:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHitTest;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
@end

@interface NSApplication (NSScripting)
+ (id)_urlsWithWithPathOrPaths:(id)arg1 itWasPaths:(char *)arg2;
- (id)orderedDocuments;
- (id)_orderedWindowsWithPanels:(BOOL)arg1;
- (id)orderedWindows;
- (id)valueInOrderedWindowsWithUniqueID:(long long)arg1;
- (BOOL)_delegate:(id)arg1 handlesKey:(id)arg2;
- (id)copyScriptingValue:(id)arg1 forKey:(id)arg2 withProperties:(id)arg3;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2;
- (id)valueWithName:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)valueWithUniqueID:(id)arg1 inPropertyWithKey:(id)arg2;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2 inPropertyWithKey:(id)arg3;
- (void)insertValue:(id)arg1 inPropertyWithKey:(id)arg2;
- (void)removeValueAtIndex:(unsigned long long)arg1 fromPropertyWithKey:(id)arg2;
- (void)replaceValueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2 withValue:(id)arg3;
- (long long)_supportsGetValueWithNameForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
- (long long)_supportsGetValueWithUniqueIDForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
- (unsigned long long)_scriptingCount;
- (id)handleOpenScriptCommand:(id)arg1;
- (void)handlePrintScriptCommand:(id)arg1;
- (void)handleQuitScriptCommand:(id)arg1;
@end

@interface NSApplication (NSAppleEventHandling)
+ (id)_urlsWithDescriptor:(id)arg1;
- (void)_handleAEOpen:(id)arg1;
- (void)_handleAEReopen;
- (short)_handleAEOpenDocumentsForURLs:(id)arg1;
- (void)_replyToAEOpenDocumentsForURLs:(id)arg1;
- (void)_resumeAppleEventWithSuspensionIDValue:(id)arg1;
- (void)_documentController:(id)arg1 didPrint:(BOOL)arg2 appleEventSuspensionID:(struct __NSAppleEventManagerSuspension *)arg3;
- (short)_handleAEPrintDocumentsForURLs:(id)arg1 withSettings:(id)arg2 showPrintPanels:(BOOL)arg3;
- (short)_handleAEOpenContentsEvent:(const struct AEDesc *)arg1 replyEvent:(struct AEDesc *)arg2;
- (short)_handleAEQuit;
- (int)_handleSelfTestEvent:(id)arg1;
- (void)_handleTestEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)_handleCoreEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)_registerRequiredAEHandlers;
@end

@interface NSApplication (NSCarbonWindowHandling)
- (void)_realDoModalLoopForCarbonWindow:(struct _NSModalSession *)arg1 peek:(BOOL)arg2;
- (long long)runModalForCarbonWindow:(id)arg1;
@end

@interface NSArrayController (NSManagedController)
- (void)setManagedObjectContext:(id)arg1;
- (id)defaultFetchRequest;
- (BOOL)_performFetchWithRequest:(id)arg1 merge:(BOOL)arg2 error:(id *)arg3;
- (void)addRangeOfInterest:(struct _NSRange)arg1;
- (void)_reactToMatchingInsertions:(id)arg1 deletions:(id)arg2 refreshed:(id)arg3;
@end

@interface NSAttributedString (NSAttributedStringKitAdditions) <NSPasteboardReading, NSPasteboardWriting>
+ (id)_documentTypeForFileType:(id)arg1;
+ (id)textUnfilteredTypes;
+ (id)textUnfilteredFileTypes;
+ (id)textUnfilteredPasteboardTypes;
+ (id)textTypes;
+ (id)textFileTypes;
+ (id)textPasteboardTypes;
+ (id)writableTextFileTypesForDocumentTypes;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (BOOL)_isStringDrawingTextStorage;
- (id)defaultLanguage;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1 inRange:(struct _NSRange)arg2;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)lineBreakByHyphenatingBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(BOOL)arg2;
- (BOOL)containsAttachments;
- (id)URLAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)stringByStrippingAttachmentCharactersAndConvertingWritingDirectionToBidiControlCharactersFromRange:(struct _NSRange)arg1;
- (id)dataFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2 error:(id *)arg3;
- (id)fileWrapperFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2 error:(id *)arg3;
- (id)_RTFWithSelector:(SEL)arg1 range:(struct _NSRange)arg2 documentAttributes:(id)arg3;
- (id)RTFFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)RTFDFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)RTFDFileWrapperFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)docFormatFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (void)_readDocumentFragment:(id)arg1 fromRange:(struct _NSRange)arg2 documentAttributes:(id)arg3 subresources:(id *)arg4;
- (id)_documentFromRange:(struct _NSRange)arg1 document:(id)arg2 documentAttributes:(id)arg3 subresources:(id *)arg4;
- (id)initWithData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (id)_initWithRTFSelector:(SEL)arg1 argument:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithRTF:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithRTFD:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithRTFDFileWrapper:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithDocFormat:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (id)_initWithURLFunnel:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithURL:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithPath:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithHTML:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithHTML:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithHTML:(id)arg1 baseURL:(id)arg2 documentAttributes:(id *)arg3;
- (id)_initWithDOMRange:(id)arg1;
- (id)fontAttributesInRange:(struct _NSRange)arg1;
- (id)rulerAttributesInRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfTextBlock:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_atStartOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_atEndOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)_rangeOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2 completeRow:(char *)arg3;
- (struct _NSRange)_rangeOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_atStartOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (BOOL)_atEndOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeOfTextList:(id)arg1 atIndex:(unsigned long long)arg2;
- (long long)itemNumberInTextList:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
@end

@interface NSBezierPath (NSBezierPathDeprecated)
- (BOOL)cachesBezierPath;
- (void)setCachesBezierPath:(BOOL)arg1;
@end

@interface NSBezierPath (NSBezierPathCompatibility)
+ (void)setMiterLimit:(double)arg1;
+ (double)miterLimit;
+ (void)setFlatness:(double)arg1;
+ (double)flatness;
+ (void)setWindingRule:(unsigned long long)arg1;
+ (unsigned long long)windingRule;
+ (void)setLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)lineCapStyle;
+ (void)setLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)lineJoinStyle;
+ (void)setLineWidth:(double)arg1;
+ (double)lineWidth;
- (id)description;
@end

@interface NSBezierPath (NSBezierPathDevicePrimitives)
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;
- (void)_deviceLineToPoint:(struct CGPoint)arg1;
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)_deviceClosePath;
@end

@interface NSNib (NSNibBindingsPrivate)
+ (BOOL)getNibName:(id *)arg1 objectID:(id *)arg2 forUserInterfaceItem:(id)arg3;
+ (id)_NSNibBindingDeprecationStringForUIItem:(id)arg1;
+ (id)_NSNibBindingHelpStringForUIItem:(id)arg1 binding:(id)arg2;
@end

@interface NSBitmapImageRep (NSCruft)
- (struct CGImage *)_acquireRetainedCGImageRef;
- (struct CGImage *)_CGImageRef;
- (struct CGImage *)_getCGImageRefCreateIfNecessary;
- (void)_setCGImageRef:(struct CGImage *)arg1;
@end

@interface NSBitmapImageRep (NSBitmapImageFileTypeExtensions)
+ (id)representationOfImageRepsInArray:(id)arg1 usingType:(unsigned long long)arg2 properties:(id)arg3;
- (id)representationUsingType:(unsigned long long)arg1 properties:(id)arg2;
- (void)setProperty:(id)arg1 withValue:(id)arg2;
- (id)valueForProperty:(id)arg1;
- (long long)_imageNumber;
- (void)_setImageNumber:(long long)arg1;
- (id)description;
@end

@interface NSBox (NSCustomBoxTypeProperties)
- (double)borderWidth;
- (void)setBorderWidth:(double)arg1;
- (double)cornerRadius;
- (void)setCornerRadius:(double)arg1;
- (id)borderColor;
- (void)setBorderColor:(id)arg1;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
@end

@interface NSBox (NSBoxAuxiliary)
- (id)_auxiliaryStorage;
- (void)_setupAuxiliaryStorage;
@end

@interface NSBox (NSBoxAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSIndexPath (NSBrowserIndexPath)
- (id)_safeIndexPathByRemovingLastIndex;
@end

@interface _NSBrowserColumnView (NSBrowserAccessibility)
- (id)accessibilityChildrenAttribute;
@end

@interface NSBrowser (NSBrowserAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityVisibleColumnsAttribute;
- (BOOL)accessibilityIsVisibleColumnsAttributeSettable;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (id)accessibilityColumnTitlesAttribute;
- (BOOL)accessibilityIsColumnTitlesAttributeSettable;
- (id)accessibilityColumnsAttribute;
- (BOOL)accessibilityIsColumnsAttributeSettable;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
@end

@interface _NSBrowserTitlesContainerView (NSBrowserAccessibility)
- (id)_accessibilityTitleForColumn:(long long)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSButton (NSButtonBorder)
- (void)setShowsBorderOnlyWhileMouseInside:(BOOL)arg1;
- (BOOL)showsBorderOnlyWhileMouseInside;
- (void)_setMouseTrackingForCell:(id)arg1;
- (void)_clearMouseTrackingForCell:(id)arg1;
@end

@interface NSButton (NSButtonMixedState)
- (void)setAllowsMixedState:(BOOL)arg1;
- (BOOL)allowsMixedState;
- (void)setNextState;
@end

@interface NSButton (NSButtonBezelStyles)
- (void)setBezelStyle:(unsigned long long)arg1;
- (unsigned long long)bezelStyle;
@end

@interface NSButtonCell (NSDefaultButtonIndicatorPrivate)
+ (void)_setDefaultButtonCycleTime:(float)arg1;
+ (double)_defaultButtonCycleTime;
+ (double)_defaultButtonCycleValue;
+ (void)_resetDefaultButtonCycleValue;
+ (BOOL)_requireMainThreadDefaultBezelCaching;
+ (void)_startHitTracking:(id)arg1;
+ (void)_finishHitTracking:(id)arg1;
- (BOOL)_hasDefaultButtonIndicator;
- (void)setEnabled:(BOOL)arg1;
- (BOOL)_wantsHeartBeat;
- (BOOL)_isAnimatingDefaultCell;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;
- (void)_setDefaultButtonIndicatorNeedsDisplay;
- (struct CGRect)_focusRingBoundsWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@end

@interface NSButtonCell (NSButtonImageSourcePrivate)
- (void)_setButtonImageSource:(id)arg1;
- (id)_buttonImageSource;
@end

@interface NSButtonCell (NSButtonCellPrivate)
+ (struct CGSize)_keyEquivalentSizeWithFont:(id)arg1;
- (void)_setBackgroundColor:(id)arg1;
- (id)_backgroundColor;
- (unsigned long long)_buttonType;
- (void)_setButtonType:(unsigned long long)arg1 adjustingImage:(BOOL)arg2;
- (id)_textHighlightColor;
- (id)_textDimColor;
- (BOOL)_hasImage;
- (BOOL)_hasTitle;
- (BOOL)_alwaysShowBezelForCurrentBezelStyleAndState;
- (BOOL)_shouldDrawBezel;
- (BOOL)_shouldDrawTextWithDisabledAppearance;
- (double)_leading;
- (BOOL)_canBecomeDefaultButtonCell;
- (BOOL)_shouldDrawDragged;
- (struct CGRect)_insetRect:(struct CGRect)arg1;
- (struct CGSize)_unconstrainedImageSize;
- (struct CGSize)_titleSizeWithSize:(struct CGSize)arg1;
- (struct CGRect)_imageRectWithRect:(struct CGRect *)arg1;
- (struct CGRect)_alignedTitleRectWithRect:(struct CGRect)arg1;
- (struct CGRect)_centerTitle:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_fillBackground:(struct CGRect)arg1 withAlternateColor:(BOOL)arg2;
- (struct _NSRange)_characterRangeForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
@end

@interface NSButtonCell (NSButtonCellAccessibility)
- (id)_buttonCellAccessibilityRoleAttribute;
- (BOOL)_accessibilityIncludeDescriptionAttribute;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGRect)accessibilityFocusRingBoundsForBounds:(struct CGRect)arg1;
@end

@interface NSButtonImageSource (NSButtonImageSource_Private)
- (void)_scanImages;
- (id)_initWithName:(id)arg1 propertyList:(id)arg2;
- (id)_initWithWidget:(struct __CFString *)arg1;
- (BOOL)_archiveToFile:(id)arg1;
- (id)_findButtonImageForState:(struct NSButtonState)arg1;
@end

@interface NSCGSContext (NSQuartzCoreAdditions)
- (id)CIContext;
@end

@interface NSCGSContext (NSCGSContext_RenderingOptions)
- (void)setShouldAntialias:(BOOL)arg1;
- (BOOL)shouldAntialias;
- (void)setImageInterpolation:(unsigned long long)arg1;
- (unsigned long long)imageInterpolation;
- (void)setPatternPhase:(struct CGPoint)arg1;
- (struct CGPoint)patternPhase;
- (void)setCompositingOperation:(unsigned long long)arg1;
- (unsigned long long)compositingOperation;
- (long long)colorRenderingIntent;
- (void)setColorRenderingIntent:(long long)arg1;
- (unsigned int)contextID;
- (void)_setShouldEnforcePixelAlignment:(BOOL)arg1;
- (BOOL)_shouldEnforcePixelAlignment;
- (struct CGRect)_alignRect:(struct CGRect)arg1 force:(BOOL)arg2;
- (struct CGPoint)_alignPoint:(struct CGPoint)arg1 force:(BOOL)arg2;
- (struct CGSize)_alignSize:(struct CGSize)arg1 force:(BOOL)arg2;
@end

@interface CIImage (NSAppKitAdditions)
- (id)initWithBitmapImageRep:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
- (void)drawAtPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;
@end

@interface NSCell (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSCell (NSCellBackgroundStyle)
- (long long)backgroundStyle;
- (void)setBackgroundStyle:(long long)arg1;
- (long long)interiorBackgroundStyle;
@end

@interface NSCell (NSCellBackgroundStyleCompatibility)
- (long long)_initialBackgroundStyleCompatibilityGuess;
@end

@interface NSCell (NSCellHitTesting)
- (unsigned long long)_textHitTest:(struct CGPoint)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
@end

@interface NSCell (NSCell_Placeholder)
- (void)_setPlaceholderString:(id)arg1;
- (id)_placeholderString;
- (void)_setPlaceholderAttributedString:(id)arg1;
- (id)_placeholderAttributedString;
@end

@interface NSCell (NSCellControlTint)
- (unsigned long long)_realControlTint;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;
- (BOOL)_isAnimatingDefaultCell;
@end

@interface NSCell (NSPrivate_CellMouseTracking)
- (void)_setMouseTrackingInRect:(struct CGRect)arg1 ofView:(id)arg2;
- (void)_clearMouseTracking;
- (void)_focusDidChange:(id)arg1;
- (void)updateTrackingAreaWithFrame:(struct CGRect)arg1 inView:(id)arg2;
@end

@interface NSCell (NSCellMixedState)
- (void)setAllowsMixedState:(BOOL)arg1;
- (BOOL)allowsMixedState;
- (long long)nextState;
- (void)setNextState;
@end

@interface NSCell (NSCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGPoint)_accessibilityWindowPointForShowMenuWithProxy:(id)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (void)_accessibilityShowMenu:(id)arg1 withProxy:(id)arg2;
- (void)_accessibilityShowMenu:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (void)accessibilityPostNotification:(id)arg1;
- (id)accessibilityElementWithParent:(id)arg1;
@end

@interface NSAccessibilityReparentingCellProxy (NSAccessibilityReparentingCellProxyTextAttributesAccessibility)
- (BOOL)hasEditor;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)arg1;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
@end

@interface NSCell (NSCellTextAttributesAccessibility)
- (id)accessibilityCurrentEditor;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (void)accessibilitySetSelectedTextAttribute:(id)arg1;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)arg1;
- (id)accessibilityNumberOfCharactersAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)arg1;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)arg1;
@end

@interface CIColor (NSAppKitAdditions)
- (id)initWithColor:(id)arg1;
@end

@interface NSColor (NSQuartzCoreAdditions)
+ (id)colorWithCIColor:(id)arg1;
@end

@interface NSCoder (NSAppKitColorExtensions)
- (id)decodeNXColor;
@end

@interface NSColor (NSColorAccessibility)
- (id)_accessibilityValue;
@end

@interface NSColorList (NSPagedColorListSupport)
- (id)_initWithName:(id)arg1 fromCMProfileRef:(struct OpaqueCMProfileRef *)arg2;
- (unsigned long long)_count;
- (id)_colorAtIndex:(unsigned long long)arg1;
- (id)_nameAtIndex:(unsigned long long)arg1;
- (BOOL)_isPaged;
- (BOOL)_isProfileBased;
- (unsigned long long)_pageCount;
- (CDStruct_14f26992)_infoForPage:(unsigned long long)arg1;
- (unsigned long long)_pageForIndex:(unsigned long long)arg1;
@end

@interface NSApplication (NSColorPanel)
- (void)orderFrontColorPanel:(id)arg1;
@end

@interface NSColorPickerCrayonView (NSKeyboardUI)
- (void)keyDown:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveUp:(id)arg1;
@end

@interface NSColorPickerCrayonView (NSInternal)
+ (id)_crayonMaskImage;
- (id)_colorList;
- (id)_crayons;
- (struct CGSize)_requiredMinSize;
- (id)_crayonRowAboveRow:(id)arg1;
- (id)_crayonRowBelowRow:(id)arg1;
- (id)_crayonWithColor:(id)arg1;
- (id)_nearestCrayonUnderViewPoint:(struct CGPoint)arg1 inRow:(id)arg2;
- (id)_nearestCrayonUnderViewPoint:(struct CGPoint)arg1;
- (void)_selectCrayon:(id)arg1 updateSelection:(BOOL)arg2;
- (id)_selectedCrayon;
- (id)_focusedCrayon;
- (void)_setColorList:(id)arg1;
- (BOOL)_hasFocusRing;
- (BOOL)_shouldShowFocusRing;
- (void)_updateCrayonsFromColorList;
- (void)_updateFocusRing;
- (void)_forceUpdateFocusRing;
@end

@interface NSCrayon (NSCrayonAccessibility)
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSColorPickerCrayonView (NSColorPickerCrayonViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
@end

@interface NSColorWell (NSColorWellAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityRoleAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSComboBox (NSComboBoxCellNotifications)
- (void)comboBoxCellSelectionDidChange:(id)arg1;
- (void)comboBoxCellSelectionIsChanging:(id)arg1;
- (void)comboBoxCellWillPopUp:(id)arg1;
- (void)comboBoxCellWillDismiss:(id)arg1;
@end

@interface NSComboBox (NSComboBoxCellDataSource)
- (long long)numberOfItemsInComboBoxCell:(id)arg1;
- (id)comboBoxCell:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (unsigned long long)comboBoxCell:(id)arg1 indexOfItemWithStringValue:(id)arg2;
- (id)comboBoxCell:(id)arg1 completedString:(id)arg2;
@end

@interface NSComboBoxCell (NSWorkarounds)
- (BOOL)_suppressNonTitleDrawing;
@end

@interface NSMutableArray (NSComboBoxCellDataSource)
- (long long)numberOfItemsInComboBoxCell:(id)arg1;
- (id)comboBoxCell:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (unsigned long long)comboBoxCell:(id)arg1 indexOfItemWithStringValue:(id)arg2;
@end

@interface NSComboBoxCell (NSTableViewNotifications)
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
@end

@interface NSComboBoxCell (NSTableDataSource)
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
@end

@interface NSComboTableView (NSComboTableViewAccessibility)
- (BOOL)_accessibilityWantsToBeList;
@end

@interface NSComboBoxWindow (NSComboBoxWindowAccessibility)
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsChildOfApp;
- (id)accessibilityParentAttribute;
@end

@interface NSComboBoxButtonCell (NSComboBoxButtonCellAccessibility)
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSComboBoxCell (NSComboBoxCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityExpandedAttribute;
- (BOOL)accessibilityIsExpandedAttributeSettable;
- (void)accessibilitySetExpandedAttribute:(id)arg1;
- (id)_accessibilityButtonUIElement;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (struct CGRect)_accessibilityButtonRect;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSRuleEditor (NSRuleEditorAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityRoleAttribute;
@end

@interface NSControl (NSControlAccessibilityAdditions)
+ (BOOL)accessibilityIsSingleCelled;
- (void)accessibilityPostNotification:(id)arg1 context:(id)arg2;
@end

@interface NSControl (NSObjectAccessibilityChildHelpers)
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSControl (NSControlAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityPopUpMenuParent:(id)arg1;
@end

@interface NSGlyphInfo (NSPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSColor (NSPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSFont (NSPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDatePicker (NSPrivate)
- (id)_disabledTextColor;
- (void)_setDisabledTextColor:(id)arg1;
- (BOOL)_forcesLeadingZeroes;
- (void)_setForcesLeadingZeroes:(BOOL)arg1;
- (BOOL)_wrapsDateComponentArithmetic;
- (void)_setWrapsDateComponentArithmetic:(BOOL)arg1;
@end

@interface NSDatePickerCell (NSAnalogClockDatePickerInternal)
- (void)_drawAnalogClockWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_analogClockTrackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
@end

@interface NSDatePickerCell (NSClockAndCalendarDatePickerInternal)
+ (id)_calendarHeaderFont;
- (BOOL)_calendarDateRangeValueContainsAnyPartOfEra:(long long)arg1 year:(long long)arg2 month:(long long)arg3 day:(long long)arg4;
- (id)_calendarFirstDayOfDisplayedMonthDateComponents;
- (long long)_calendarFirstWeekday;
- (struct _NSRange)_calendarRangeOfAllDaysForDisplayedMonth;
- (struct _NSRange)_calendarRangeOfSelectedDaysForDisplayedMonth;
- (id)_calendarDayNamesStringForFirstWeekday:(long long)arg1;
- (id)_calendarContentAttributedStringWithSelectedDays:(struct _NSRange)arg1;
- (void)_clockAndCalendarFillDayCell:(long long)arg1 withColor:(id)arg2 inFrame:(struct CGRect)arg3 inView:(id)arg4;
- (unsigned long long)_hitTestClockAndCalendar:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_drawClockAndCalendarWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)_clockAndCalendarCellSize;
- (void)_clockAndCalendarGetClockFrame:(struct CGRect *)arg1 calendarFrame:(struct CGRect *)arg2 retreatMonthButtonCellFrame:(struct CGRect *)arg3 advanceMonthButtonCellFrame:(struct CGRect *)arg4 returnToHomeMonthButtonCellFrame:(struct CGRect *)arg5 forDatePickerCellFrame:(struct CGRect)arg6;
- (BOOL)_clockAndCalendarTrackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (id)_calendarDateComponentsForPoint:(struct CGPoint)arg1 inCalendarRect:(struct CGRect)arg2;
- (BOOL)_clockAndCalendarStartTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (BOOL)_clockAndCalendarContinueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (void)_clockAndCalendarStopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (void)_autoAdvanceCalendar:(id)arg1;
- (BOOL)_clockAndCalendarKeyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (id)_clockAndCalendarRetreatMonthButtonCell;
- (id)_clockAndCalendarAdvanceMonthButtonCell;
- (id)_clockAndCalendarReturnToHomeMonthButtonCell;
- (void)_clockAndCalendarRetreatMonth:(id)arg1;
- (void)_clockAndCalendarAdvanceMonth:(id)arg1;
- (void)_clockAndCalendarReturnToHomeMonth:(id)arg1;
- (void)_clockAndCalendarTakeDisplayedMonthFromDateValue;
- (void)_clockAndCalendarTakeDisplayedMonthFromTodaysDate;
@end

@interface NSDatePickerCell (NSTextFieldWithStepperDatePickerInternal)
- (unsigned long long)_hitTestTextFieldWithStepper:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_drawTextFieldWithStepperWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)_hasFocusRingInView:(id)arg1;
- (BOOL)_shouldShowFocusRingInView:(id)arg1;
- (void)_adjustLayoutForTextAreaFrame:(struct CGRect)arg1;
- (struct CGSize)_desiredTextAreaSize;
- (double)_stepperCellTopAndBottomTrim;
- (void)_getTextAreaFrame:(struct CGRect *)arg1 stepperCellFrame:(struct CGRect *)arg2 forDatePickerCellFrame:(struct CGRect)arg3;
- (long long)_indexOfSubfieldAtPoint:(struct CGPoint)arg1 inFrame:(struct CGRect)arg2;
- (struct CGSize)_textFieldWithStepperCellSize;
- (struct CGSize)_textFieldCellSize;
- (void)_createSubfields;
- (void)_addEditableSubfieldForElement:(int)arg1 dateFormat:(id)arg2;
- (void)_addStaticSubfieldWithString:(id)arg1;
- (void)_addSubfieldForElement:(int)arg1 withDateFormat:(id)arg2 stringValue:(id)arg3 alternateStringValue:(id)arg4;
- (id)_subfieldDefsForICUDateFormatString:(id)arg1;
- (id)_stringForDatePickerElement:(int)arg1 usingDateFormat:(id)arg2;
- (void)_updateSubfieldStringsForDateChange;
- (BOOL)_textFieldWithStepperTrackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)_textFieldWithStepperKeyDown:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)_decrementSelectedSubfield;
- (void)_incrementSelectedSubfield;
- (void)_userEditExpired:(id)arg1;
- (void)_resetUserEditTimer;
- (void)_cancelUserEditTimer;
- (void)_deleteDigit;
- (void)_commitSubfieldFieldChanges;
- (void)_cancelSubfieldFieldChanges;
- (void)_insertDigit:(long long)arg1;
- (void)_setPM:(BOOL)arg1;
- (void)_notifyDelegateIndexOfSelectedSubfieldDidChange;
- (void)_selectNextSubfield;
- (void)_selectPreviousSubfield;
- (void)_selectFirstSubfield;
- (void)_selectLastSubfield;
- (id)_stepperCell;
- (void)_stepperCellValueChanged:(id)arg1;
@end

@interface NSDatePickerCell (NSInternal)
- (BOOL)_allocateDatePickerCellExtraIvars;
- (BOOL)_fixUpDatePickerElementFlags;
- (id)_textColorBasedOnEnabledState;
- (id)_dateFormatter;
- (void)_invalidateDateFormatter;
- (id)_numberFormatter;
- (id)_adjustDate:(id)arg1 byEras:(long long)arg2 years:(long long)arg3 months:(long long)arg4 days:(long long)arg5 hours:(long long)arg6 minutes:(long long)arg7 seconds:(long long)arg8;
- (void)_clampDayToValidRangeInDateComponents:(id)arg1;
- (id)_componentsOfInterestToDatePickerFromDate:(id)arg1;
- (id)_dateFromComponents:(id)arg1;
- (BOOL)_dateIsAM:(id)arg1;
- (long long)_dayOfWeekForDate:(id)arg1;
- (id)_effectiveCalendar;
- (struct _NSRange)_rangeOfDaysForMonth:(long long)arg1 year:(long long)arg2;
- (long long)_digitForLocalizedDigitCharacter:(unsigned short)arg1;
- (void)_adjustDatePickerElement:(int)arg1 by:(long long)arg2 returnCalendarToHomeMonth:(BOOL)arg3;
- (void)_toggleAMPM;
- (BOOL)_constrainAndSetDateValue:(id)arg1 timeInterval:(double)arg2 sendActionIfChanged:(BOOL)arg3 beepIfNoChange:(BOOL)arg4 returnCalendarToHomeMonth:(BOOL)arg5 preserveFractionalSeconds:(BOOL)arg6;
- (void)_finishPendingEdit;
- (id)_constrainDateValue:(id)arg1 timeInterval:(double *)arg2;
@end

@interface NSDatePickerCell (NSPrivate)
- (id)_disabledTextColor;
- (void)_setDisabledTextColor:(id)arg1;
- (BOOL)_forcesLeadingZeroes;
- (void)_setForcesLeadingZeroes:(BOOL)arg1;
- (BOOL)_wrapsDateComponentArithmetic;
- (void)_setWrapsDateComponentArithmetic:(BOOL)arg1;
@end

@interface NSDatePickerCell (NSDatePickerCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityDateTimeComponentsAttribute;
- (BOOL)accessibilityIsDateTimeComponentsAttributeSettable;
@end

@interface NSDocument (NSJavaInternal)
+ (BOOL)_isJavaSubclass;
+ (BOOL)_hasJavaOverrideForInitializerSelector:(SEL)arg1;
- (id)_invokeJavaOverrideForSelector:(SEL)arg1 withErrorAndOtherArguments:(id *)arg2;
- (void)_setJavaLastError:(id)arg1;
- (id)_javaLastError;
@end

@interface NSDocument (NSDeprecatedLongAgo)
- (BOOL)canCloseDocument;
- (long long)runModalSavePanel:(id)arg1 withAccessoryView:(id)arg2;
- (id)fileNameFromRunningSavePanelForSaveOperation:(unsigned long long)arg1;
- (BOOL)shouldCloseWindowController:(id)arg1;
@end

@interface NSDocument (NSDeprecated)
- (id)dataRepresentationOfType:(id)arg1;
- (id)fileAttributesToWriteToFile:(id)arg1 ofType:(id)arg2 saveOperation:(unsigned long long)arg3;
- (id)fileName;
- (id)fileWrapperRepresentationOfType:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 ofType:(id)arg2;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2;
- (BOOL)loadDataRepresentation:(id)arg1 ofType:(id)arg2;
- (BOOL)loadFileWrapperRepresentation:(id)arg1 ofType:(id)arg2;
- (void)printShowingPrintPanel:(BOOL)arg1;
- (BOOL)readFromFile:(id)arg1 ofType:(id)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2;
- (BOOL)revertToSavedFromFile:(id)arg1 ofType:(id)arg2;
- (BOOL)revertToSavedFromURL:(id)arg1 ofType:(id)arg2;
- (long long)runModalPageLayoutWithPrintInfo:(id)arg1;
- (void)saveToFile:(id)arg1 saveOperation:(unsigned long long)arg2 delegate:(id)arg3 didSaveSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)setFileName:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)writeToFile:(id)arg1 ofType:(id)arg2;
- (BOOL)writeToFile:(id)arg1 ofType:(id)arg2 originalFile:(id)arg3 saveOperation:(unsigned long long)arg4;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2;
- (BOOL)writeWithBackupToFile:(id)arg1 ofType:(id)arg2 saveOperation:(unsigned long long)arg3;
@end

@interface NSDocument (NSEditorRegistration)
- (BOOL)_isBeingEdited;
- (id)_topEditor;
- (void)_editor:(id)arg1 didCommit:(BOOL)arg2 withContext:(CDStruct_a70f6672 *)arg3;
- (void)_commitEditingWithSuccessInvocation:(id)arg1 failureInvocation:(id)arg2;
- (void)_discardEditing;
- (id)_regularCommitEditingFailureInvocationWithDelegate:(id)arg1 didWhateverSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)__ifReallyChangedSaveOrAutosave:(BOOL)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)_ifReallyChangedSaveOrAutosave:(BOOL)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)objectDidBeginEditing:(id)arg1;
- (void)objectDidEndEditing:(id)arg1;
@end

@interface NSDocumentController (NSJavaInternal)
+ (BOOL)_isJavaSubclass;
- (id)initJava1;
- (id)initJava2;
- (id)_invokeJavaOverrideForSelector:(SEL)arg1 withErrorAndOtherArguments:(id *)arg2;
- (void)_setJavaLastError:(id)arg1;
- (id)_javaLastError;
@end

@interface NSDocumentController (NSDeprecatedLongAgo)
- (BOOL)closeAllDocuments;
- (BOOL)reviewUnsavedDocumentsWithAlertTitle:(id)arg1 cancellable:(BOOL)arg2;
@end

@interface NSDocumentController (NSDeprecated)
- (id)documentForFileName:(id)arg1;
- (id)fileExtensionsFromType:(id)arg1;
- (id)_openableFileExtensions;
- (id)fileNamesFromRunningOpenPanel;
- (id)makeDocumentWithContentsOfFile:(id)arg1 ofType:(id)arg2;
- (id)makeDocumentWithContentsOfURL:(id)arg1 ofType:(id)arg2;
- (id)makeUntitledDocumentOfType:(id)arg1;
- (id)_openDocumentFileAt:(id)arg1 display:(BOOL)arg2;
- (id)openDocumentWithContentsOfFile:(id)arg1 display:(BOOL)arg2;
- (id)openDocumentWithContentsOfURL:(id)arg1 display:(BOOL)arg2;
- (id)openUntitledDocumentOfType:(id)arg1 display:(BOOL)arg2;
- (void)setShouldCreateUI:(BOOL)arg1;
- (BOOL)shouldCreateUI;
- (id)typeFromFileExtension:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
@end

@interface NSDocumentController (NSCompatibility)
- (id)_resolveTypeAlias:(id)arg1;
- (id)_typesForDocumentClass:(Class)arg1 includeEditors:(BOOL)arg2 includeViewers:(BOOL)arg3 includeExportable:(BOOL)arg4;
- (id)_types;
- (void)_invalidateTypeDescriptionCache;
@end

@interface NSDocumentController (NSInternal)
+ (id)_recentMenuItemTitlesFromLocationComponentChains:(id)arg1 includingIcons:(BOOL)arg2;
+ (id)_sharedDocumentControllerNoCreate;
+ (BOOL)_resolveAutoreopenRecord:(id)arg1 intoDocumentURL:(id *)arg2 contentsURL:(id *)arg3 tryAgainLater:(char *)arg4;
- (void)_depopulateOpenRecentMenu:(id)arg1;
- (void)_populateOpenRecentMenu:(id)arg1 includingIcons:(BOOL)arg2;
- (void)_depopulateOpenRecentMenus;
- (void)_observeMainMenuDidEndTracking:(id)arg1;
- (void)_installOpenRecentMenus;
- (void)_notePendingRecentDocumentURLsIfNecessary;
- (BOOL)_appBreaksWithAutosaving;
- (BOOL)_asksAboutUnsavedChangesAtLogout;
- (BOOL)_asksAboutUnsavedChangesAtQuit;
- (BOOL)_willReopenAllDocumentsAtLaunch;
- (id)_autosaveRecordPathCreateIfNecessary:(BOOL)arg1;
- (id)_willPresentReopeningError:(id)arg1 forURL:(id)arg2 contentsURL:(id)arg3;
- (void)_setHasAutosavedDocuments:(BOOL)arg1;
- (void)_autoreopenDocuments;
- (BOOL)_openUntitled;
- (BOOL)_openFile:(id)arg1;
- (void)_finishPrintingDocumentsInContext:(id)arg1 success:(BOOL)arg2;
- (id)_willPresentOpenForPrintingError:(id)arg1 forURL:(id)arg2;
- (void)_document:(id)arg1 didPrint:(BOOL)arg2 inContext:(id)arg3;
- (void)_printDocumentsWithContentsOfURLs:(id)arg1 settings:(id)arg2 showPrintPanels:(BOOL)arg3 delegate:(id)arg4 didPrintSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (id)_createAutoreopenRecordForDocument:(id)arg1;
- (void)_writeAutoreopenRecords:(id)arg1;
- (void)_writeAutoreopenRecordsForOpenDocuments;
- (void)_continueTerminationHavingClosedAllDocuments:(BOOL)arg1 context:(id)arg2;
- (void)_afterSavingOrAutosavingDocument:(id)arg1 closeAndContinue:(BOOL)arg2 context:(id)arg3;
- (void)_documentController:(id)arg1 shouldTerminate:(BOOL)arg2 context:(id)arg3;
- (BOOL)_hasNotRequiredDisablingSuddenTerminationForUnsavedChanges;
- (void)_shouldTerminateWithDelegate:(id)arg1 shouldTerminateSelector:(SEL)arg2;
- (BOOL)_unsavedChangesRequireDisablingSuddenTermination;
- (void)_noteAutosavedContentsOfDocument:(id)arg1;
- (void)_getReadableNotWritable:(BOOL)arg1 types:(id)arg2 forDocumentClass:(Class)arg3;
- (BOOL)_isNativeType:(id)arg1 forDocumentClass:(Class)arg2;
- (long long)_untitledNumberForDocument:(id)arg1;
- (id)_autosaveDirectoryURLCreateIfNecessary:(BOOL)arg1;
- (id)_fixedFailureReasonFromError:(id)arg1;
- (id)_customizationOfError:(id)arg1 withDescription:(id)arg2 recoverySuggestion:(id)arg3;
- (int)_utiUsage;
- (id)_typeDescriptionForName:(id)arg1;
- (id)_typeDescriptions;
- (unsigned long long)_countOfOpeningDocuments;
- (unsigned long long)_indexOfOpeningDocument:(id)arg1;
- (id)_windowAboveWindowOfOpeningDocumentAtIndex:(unsigned long long)arg1 orMakeKey:(char *)arg2;
@end

@interface NSDocumentController (NSPrivate)
- (id)_recentDocumentRecordsKeyForMenuTag:(long long)arg1;
- (void)__noteNewRecentDocumentURL:(id)arg1 forKey:(id)arg2;
- (void)_noteNewRecentDocumentURL:(id)arg1 forKey:(id)arg2;
- (id)_recentDocumentURLsForKey:(id)arg1;
- (void)_openRecentDocument:(id)arg1;
@end

@interface NSDocument (NSScripting)
- (id)lastComponentOfFileName;
- (void)setLastComponentOfFileName:(id)arg1;
- (void)_document:(id)arg1 didSave:(BOOL)arg2 forScriptCommand:(id)arg3;
- (id)_writableTypeForType:(id)arg1 saveOperation:(unsigned long long)arg2;
- (id)_writableTypeForFileNameExtension:(id)arg1 saveOperation:(unsigned long long)arg2;
- (void)_saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 didSaveSelector:(SEL)arg4 scriptCommand:(id)arg5;
- (id)handleSaveScriptCommand:(id)arg1;
- (void)_document:(id)arg1 shouldClose:(BOOL)arg2 forScriptCommand:(id)arg3;
- (id)handleCloseScriptCommand:(id)arg1;
- (void)_document:(id)arg1 didPrint:(BOOL)arg2 forScriptCommand:(id)arg3;
- (id)handlePrintScriptCommand:(id)arg1;
- (id)objectSpecifier;
@end

@interface NSBitmapImageRep (NSDragManagerFix)
+ (void)_setEnableFlippedImageFix:(BOOL)arg1;
@end

@interface NSWindow (DrawerSupportPrivate)
- (void)_hideAllDrawers;
- (void)_unhideAllDrawers;
- (void)_moveAllDrawersByOffset:(struct CGSize)arg1;
- (void)_destroyRealWindowForAllDrawers;
- (void)_displayAllDrawersIfNeeded;
- (void)_positionAllDrawers;
- (void)_sizeAllDrawers;
- (void)_sizeAllDrawersWithRect:(struct CGRect)arg1;
- (void)_changeAllDrawersKeyState;
- (void)_changeAllDrawersMainState;
- (void)_changeAllDrawersFirstResponder;
- (struct CGRect)_standardFrameForDrawersInRect:(struct CGRect)arg1;
- (struct CGSize)_minContentSizeForDrawers;
- (struct CGSize)_minSizeForDrawers;
- (void)_removeAllDrawersImmediately:(BOOL)arg1;
- (void)_registerAllDrawersForDraggedTypesIfNeeded;
- (void)_resetAllDrawersDisableCounts;
- (void)_resetAllDrawersPostingCounts;
- (void)_startLiveResizeForAllDrawers;
- (void)_endLiveResizeForAllDrawers;
- (void)_setLevelForAllDrawers;
- (void)_cycleDrawersReversed:(BOOL)arg1;
- (id)_openDrawers;
- (id)_orderedDrawerAndWindowKeyLoopGroupingViews;
@end

@interface NSWindow (TemporaryMailviewerSupport)
- (void)addDrawerWithView:(id)arg1;
- (void)_addDrawerWithView:(id)arg1;
- (void)openFirstDrawer:(id)arg1;
- (void)_openDrawer;
- (void)_openDrawerOnEdge:(unsigned long long)arg1;
- (void)shutAllDrawers:(id)arg1;
- (void)_shutDrawer;
- (BOOL)_drawerIsOpen;
- (void)removeAllDrawersImmediately;
@end

@interface NSDrawer (NSResponder)
- (BOOL)tryToPerform:(SEL)arg1 with:(id)arg2;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)interpretKeyEvents:(id)arg1;
- (void)flushBufferedKeyEvents;
- (void)setMenu:(id)arg1;
- (id)menu;
- (void)helpRequested:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (id)undoManager;
@end

@interface NSDrawer (DrawerInternals)
- (void)_doAttachDrawerIgnoreHidden:(BOOL)arg1;
- (void)_doAttachDrawer;
- (void)_doDetachDrawer;
- (void)_doStartDrawer;
- (void)_doStopDrawer;
- (void)_doPositionDrawer;
- (void)_doPositionDrawerAndSize:(struct CGSize)arg1 parentFrame:(struct CGRect)arg2;
- (void)_doPositionDrawerAndSize:(struct CGSize)arg1 parentFrame:(struct CGRect)arg2 stashSize:(BOOL)arg3;
- (void)_doSlideDrawerWithDelta:(struct CGPoint)arg1;
- (void)_doResizeDrawerWithDelta:(struct CGPoint)arg1 fromFrame:(struct CGRect)arg2;
- (void)_doOpenDrawer;
- (void)_doCloseDrawer;
- (void)_doRemoveDrawer;
- (void)_doSetParentWindow:(id)arg1;
- (void)_doAutoselectEdge;
- (id)_drawerWindow;
@end

@interface NSDrawer (DrawerPrivate)
+ (void)_setDrawerVelocity:(double)arg1;
+ (double)_drawerVelocity;
+ (void)_setDrawerTransform:(unsigned long long)arg1;
+ (unsigned long long)_drawerTransform;
- (unsigned long long)_edge;
- (void)_setDrawerEdge:(unsigned long long)arg1;
- (void)_hide;
- (void)_unhide;
- (void)_destroyRealWindow;
- (void)_displayIfNeeded;
- (void)_position;
- (void)_size;
- (void)_sizeWithRect:(struct CGRect)arg1;
- (void)_changeKeyState;
- (void)_changeMainState;
- (void)_changeFirstResponder;
- (void)_takeFocus;
- (struct CGSize)_minParentWindowContentSize;
- (void)_slideWithDelta:(struct CGPoint)arg1 beginOperation:(BOOL)arg2 endOperation:(BOOL)arg3;
- (void)_resizeWithDelta:(struct CGPoint)arg1 fromFrame:(struct CGRect)arg2 beginOperation:(BOOL)arg3 endOperation:(BOOL)arg4;
- (id)_registerDragTypesIfNeeded;
- (id)_resetDisableCounts;
- (id)_resetPostingCounts;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (void)_setLevel;
@end

@interface NSWindow (Drawers)
- (id)drawers;
- (id)openDrawers;
@end

@interface NSDrawerWindow (NSDrawerWindowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParentAttribute;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)arg1;
@end

@interface NSDrawer (NSDrawerAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
@end

@interface NSBinder (_NSEditableBinderHandshaking)
- (void)_noticeEditablePeerBinder:(id)arg1;
@end

@interface NSFileWrapper (NSTemporaryCompatibility)
+ (id)_temporaryDirectoryPathForWritingToPath:(id)arg1 forResaving:(BOOL)arg2 error:(id *)arg3;
@end

@interface NSFileWrapper (NSDeprecated)
- (id)initWithPath:(id)arg1;
- (id)initSymbolicLinkWithDestination:(id)arg1;
- (BOOL)needsToBeUpdatedFromPath:(id)arg1;
- (BOOL)updateFromPath:(id)arg1;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 updateFilenames:(BOOL)arg3;
- (id)addFileWithPath:(id)arg1;
- (id)addSymbolicLinkWithDestination:(id)arg1 preferredFilename:(id)arg2;
- (id)symbolicLinkDestination;
@end

@interface NSFileWrapper (NSInternal)
+ (id)_temporaryDirectoryURLForWritingToURL:(id)arg1 error:(id *)arg2;
+ (void)_writeAttributes:(id)arg1 toURL:(id)arg2;
+ (BOOL)_finishWritingToURL:(id)arg1 byMovingItemAtURL:(id)arg2 addingAttributes:(id)arg3 error:(id *)arg4;
+ (BOOL)_finishWritingToURL:(id)arg1 byTakingContentsFromItemAtURL:(id)arg2 addingAttributes:(id)arg3 usingTemporaryDirectoryAtURL:(id)arg4 keepingBackupFile:(BOOL)arg5 error:(id *)arg6;
+ (void)_removeTemporaryDirectoryAtURL:(id)arg1;
- (id)_initWithImpl:(id)arg1 preferredFileName:(id)arg2 uniqueFileName:(id)arg3 docInfo:(id)arg4 iconData:(id)arg5;
- (id)_fileType;
- (id)_fullDescription:(BOOL)arg1;
@end

@interface NSTextStorage (NSFindAndReplace)
- (struct _NSRange)findString:(id)arg1 selectedRange:(struct _NSRange)arg2 options:(unsigned long long)arg3;
- (long long)replaceString:(id)arg1 withString:(id)arg2 ranges:(id)arg3 options:(unsigned long long)arg4 inView:(id)arg5 replacementRange:(struct _NSRange *)arg6;
- (long long)replaceString:(id)arg1 withString:(id)arg2 range:(struct _NSRange)arg3 options:(unsigned long long)arg4 inView:(id)arg5 replacementRange:(struct _NSRange *)arg6;
@end

@interface NSApplication (NSFontPanel)
- (void)orderFrontFontPanel:(id)arg1;
@end

@interface NSForm (NSFormAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityFocusedUIElement;
@end

@interface NSFormCell (NSFormCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityPlaceholderValueAttribute;
- (BOOL)accessibilityIsPlaceholderValueAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGRect)_accessibilityTitleRect;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSColor (NSTitledFrameColors)
+ (void)updateFrameColors:(id)arg1;
+ (id)notActiveWindowFrameColor;
+ (id)mainWindowFrameColor;
+ (id)keyWindowFrameShadowColor;
+ (id)mainWindowFrameShadowColor;
+ (id)notActiveWindowFrameShadowColor;
+ (id)tearOffTitlebarShadowColor;
+ (id)keyWindowFrameHighlightColor;
+ (id)mainWindowFrameHighlightColor;
+ (id)notActiveWindowFrameHighlightColor;
+ (id)notActiveWindowTitlebarTextColor;
+ (id)tearOffTitlebarHighlightColor;
+ (id)windowFrameOutlineColor;
- (id)shadeColorWithDistance:(double)arg1 towardsColor:(id)arg2;
@end

@interface NSGraphicsContext (NSGraphicsContextFocusStack)
- (id)focusStack;
- (void)setFocusStack:(id)arg1;
@end

@interface NSApplication (NSApplicationHelpExtension)
- (void)activateContextHelpMode:(id)arg1;
- (void)showHelp:(id)arg1;
@end

@interface NSBundle (NSBundleHelpExtension)
- (id)contextHelpForKey:(id)arg1;
@end

@interface NSHelpManager (NSPrivateClickHelp)
+ (BOOL)_isCtrlAltForHelpDesired;
+ (void)_setCtrlAltForHelpDesired:(BOOL)arg1;
+ (BOOL)_keyboardIsOldNeXT;
+ (BOOL)_activateHelpModeBasedOnEvent:(id)arg1;
- (void)_orderFrontHelpWindow;
- (BOOL)_orderOutHelpWindow;
- (BOOL)_orderOutHelpWindowAfterEventMask:(unsigned long long)arg1;
- (id)_helpWindow;
@end

@interface NSHelpManager (NSHelpManagerPrivate)
- (void)_setHelpKey:(id)arg1 forObject:(id)arg2;
- (void)_removeHelpKeyForObject:(id)arg1;
- (id)_helpBundleForObject:(id)arg1;
- (id)_helpKeyForObject:(id)arg1;
- (id)_resolveHelpKeyForObject:(id)arg1;
- (void)_setBundleForHelpSearch:(id)arg1;
- (struct CGRect)_screenRectContainingPoint:(struct CGPoint)arg1;
- (void)_placeHelpWindowNear:(struct CGPoint)arg1;
- (void)_prepareHelpWindow:(id)arg1 locationHint:(struct CGPoint)arg2;
- (void)_cleanupHelpForQuit;
- (void)showHelpFile:(id)arg1 context:(long long)arg2;
- (BOOL)registerHelpBook;
@end

@interface NSIBObjectData (NSCompatibility)
- (void)_encodeObjectValuedMapTable:(id)arg1 withCoder:(id)arg2;
- (void)_encodeIntValuedMapTable:(id)arg1 withCoder:(id)arg2;
- (void)_encodeMapTable:(id)arg1 forTypes:(const char *)arg2 withCoder:(id)arg3;
- (void)_readVersion0:(id)arg1;
- (void)_assignObjectIds;
@end

@interface NSNibAXRelationshipConnector (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSNibAXAttributeConnector (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSObject (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSBundle (NSBundleImageExtension)
- (id)URLForImageResource:(id)arg1;
- (id)pathForImageResource:(id)arg1;
@end

@interface NSImageCell (NSPrivateAnimationSupport)
- (BOOL)_animates;
- (void)_setAnimates:(BOOL)arg1;
- (void)_startAnimation;
- (void)_stopAnimation;
- (void)_animationTimerCallback:(id)arg1;
@end

@interface NSImageCell (NSImageCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
@end

@interface NSImageView (NSPrivateFinderSupport)
- (BOOL)_rejectsMultiFileDrops;
- (void)_setRejectsMultiFileDrops:(BOOL)arg1;
@end

@interface NSImageView (NSImageViewPrivate)
- (void)registerForDrags;
- (void)_updateOverridesDrawing;
- (void)_updateCompatibleScalingAndAlignment;
@end

@interface NSInputServer (NSInputServerDOOptimization)
- (void)_inputClientChangedStatus:(id)arg1 inputClient:(id)arg2;
@end

@interface NSInputServer (NSInputServerCompatibility)
- (void)setActivated:(BOOL)arg1 sender:(id)arg2;
- (void)senderDidBecomeActive:(id)arg1;
- (void)senderDidResignActive:(id)arg1;
- (void)cancelInput:(id)arg1 conversation:(long long)arg2;
@end

@interface NSView (NSInterfaceStyle)
- (unsigned long long)interfaceStyle;
- (void)setInterfaceStyle:(unsigned long long)arg1;
@end

@interface NSWindow (NSInterfaceStyle)
- (unsigned long long)interfaceStyle;
- (void)setInterfaceStyle:(unsigned long long)arg1;
@end

@interface NSResponder (NSInterfaceStyle)
- (unsigned long long)interfaceStyle;
- (void)setInterfaceStyle:(unsigned long long)arg1;
@end

@interface NSKeyBindingManager (NSKeyBindingManager_MultiClients)
+ (id)keyBindingManagerForClient:(id)arg1;
+ (id)inputKeyBindingManager;
+ (id)draggingKeyBindingManager;
- (BOOL)interpretEventAsCommand:(id)arg1 forClient:(id)arg2;
- (void)interpretEventAsText:(id)arg1 forClient:(id)arg2;
- (void)flushTextForClient:(id)arg1;
- (void)interpretKeyEvents:(id)arg1 forClient:(id)arg2;
@end

@interface NSObject (NSPlaceholders)
+ (void)_registerObjectClass:(Class)arg1 placeholder:(id)arg2 binding:(id)arg3;
+ (void)_registerDefaultPlaceholders;
+ (id)_stateMarkerForValue:(id)arg1;
+ (void)setDefaultPlaceholder:(id)arg1 forMarker:(id)arg2 withBinding:(id)arg3;
+ (id)defaultPlaceholderForMarker:(id)arg1 withBinding:(id)arg2;
@end

@interface NSObject (_NSBindingCreationSupport)
- (void)_cleanupBindingsWithExistingNibConnectors:(id)arg1 exception:(id)arg2;
- (void)_addOptionValue:(id)arg1 toArray:(id)arg2 withKey:(id)arg3 type:(unsigned long long)arg4;
- (void)_addPlaceholderOptionValue:(id)arg1 isDefault:(BOOL)arg2 toArray:(id)arg3 withKey:(id)arg4 binder:(id)arg5 binding:(id)arg6;
- (id)_suggestedControllerKeyForController:(id)arg1 binding:(id)arg2;
- (void)_placeSuggestionsInDictionary:(id)arg1 acceptableControllers:(id)arg2 boundBinders:(id)arg3 binder:(id)arg4 binding:(id)arg5;
- (id)_bindingInformationWithExistingNibConnectors:(id)arg1 availableControllerChoices:(id)arg2;
- (void)_bind:(id)arg1 toController:(id)arg2 withKeyPath:(id)arg3 valueTransformerName:(id)arg4 options:(id)arg5 existingNibConnectors:(id)arg6 connectorsToRemove:(id)arg7 connectorsToAdd:(id)arg8;
- (void)_unbind:(id)arg1 existingNibConnectors:(id)arg2 connectorsToRemove:(id)arg3 connectorsToAdd:(id)arg4;
@end

@interface NSObject (NSKeyValueBindingCreation)
+ (id)_guaranteeStorageInDictionary:(id)arg1 addBinding:(id)arg2;
+ (void)_concealBinding:(id)arg1;
+ (void)_exposeBinding:(id)arg1 valueClass:(Class)arg2;
+ (void)exposeBinding:(id)arg1;
+ (id)_exposedBindings;
- (id)exposedBindings;
- (id)_binderForBinding:(id)arg1 withBinders:(id)arg2 createAutoreleasedInstanceIfNotFound:(BOOL)arg3;
- (Class)_binderClassForBinding:(id)arg1 withBinders:(id)arg2;
- (id)_binderWithClass:(Class)arg1 withBinders:(id)arg2 createAutoreleasedInstanceIfNotFound:(BOOL)arg3;
- (Class)valueClassForBinding:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)unbind:(id)arg1;
- (id)infoForBinding:(id)arg1;
- (id)optionDescriptionsForBinding:(id)arg1;
- (id)_optionDescriptionsForBinding:(id)arg1;
@end

@interface NSObject (_NSBindingCreationDelegateRegistration)
+ (void)_setBindingCreationDelegate:(id)arg1;
+ (id)_bindingCreationDelegate;
@end

@interface NSLayoutManager (NSPrivate)
+ (BOOL)_inBackgroundLayout;
+ (void)_doSomeBackgroundLayout;
- (void)_mergeGlyphHoles;
- (void)_mergeLayoutHoles;
- (struct _NSRange)_blockRangeForCharRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRangeForGlyphRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRowRangeForCharRange:(struct _NSRange)arg1 completeRows:(char *)arg2;
- (struct _NSRange)_blockRowRangeForCharRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRowRangeForGlyphRange:(struct _NSRange)arg1 completeRows:(char *)arg2;
- (struct _NSRange)_blockRowRangeForGlyphRange:(struct _NSRange)arg1;
- (id)_rowArrayCache;
- (void)_setRowArrayCache:(id)arg1;
- (struct _NSRange)_extendedCharRangeForInvalidation:(struct _NSRange)arg1 editedCharRange:(struct _NSRange)arg2;
- (void)_adjustCharacterIndicesForRawGlyphRange:(struct _NSRange)arg1 byDelta:(long long)arg2;
- (BOOL)_canDoLayout;
- (void)_fillGlyphHoleAtIndex:(unsigned long long)arg1 desiredNumberOfCharacters:(unsigned long long)arg2;
- (void)_fillGlyphHoleForCharacterRange:(struct _NSRange)arg1 startGlyphIndex:(unsigned long long)arg2 desiredNumberOfCharacters:(unsigned long long)arg3;
- (BOOL)_doOptimizedLayoutStartingAtGlyphIndex:(unsigned long long)arg1 forCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 lineLimit:(unsigned long long)arg4 nextGlyphIndex:(unsigned long long *)arg5;
- (void)_doLayoutWithFullContainerStartingAtGlyphIndex:(unsigned long long)arg1 nextGlyphIndex:(unsigned long long *)arg2;
- (void)_noteFirstTextViewVisibleCharacterRangeIfAfterIndex:(unsigned long long)arg1;
- (void)_fillLayoutHoleForCharacterRange:(struct _NSRange)arg1 desiredNumberOfLines:(unsigned long long)arg2 isSoft:(BOOL)arg3;
- (void)_fillLayoutHoleAtIndex:(unsigned long long)arg1 desiredNumberOfLines:(unsigned long long)arg2;
- (unsigned long long)_smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(BOOL)arg2 okToFillHoles:(BOOL)arg3 considerNulls:(BOOL)arg4;
- (unsigned long long)_smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(BOOL)arg2 okToFillHoles:(BOOL)arg3;
- (unsigned long long)_glyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(BOOL)arg2 okToFillHoles:(BOOL)arg3;
- (unsigned long long)_glyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(BOOL)arg2 okToFillHoles:(BOOL)arg3 considerNulls:(BOOL)arg4;
- (struct _NSRange)_glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2 okToFillHoles:(BOOL)arg3;
- (struct _NSRange)_primitiveCharacterRangeForGlyphRange:(struct _NSRange)arg1;
- (struct _NSRange)_primitiveGlyphRangeForCharacterRange:(struct _NSRange)arg1;
- (void)_markSelfAsDirtyForBackgroundLayout:(id)arg1;
- (id)_containerDescription;
- (id)_lineFragmentDescriptionForGlyphRange:(struct _NSRange)arg1 includeGlyphLocations:(BOOL)arg2;
- (id)_lineFragmentDescription:(BOOL)arg1;
- (id)_lineFragmentDescription;
- (id)_glyphLocationDescription;
- (id)_glyphDescriptionForGlyphRange:(struct _NSRange)arg1;
- (id)_glyphDescription;
- (id)_glyphHoleDescription;
- (id)_layoutHoleDescription;
- (id)_glyphTreeDescription;
- (id)_layoutTreeDescription;
- (id)_blockDescription;
- (void)_updateUsageForTextContainer:(id)arg1 addingUsedRect:(struct CGRect)arg2;
- (void)_invalidateUsageForTextContainersInRange:(struct _NSRange)arg1;
- (void)_recalculateUsageForTextContainerAtIndex:(unsigned long long)arg1;
- (struct _NSStoredContainerUsage *)_validatedStoredUsageForTextContainerAtIndex:(unsigned long long)arg1;
- (void)_invalidateInsertionPoint;
- (void)_invalidateDisplayIfNeeded;
- (void)_resizeTextViewForTextContainer:(id)arg1;
- (id)_selectedRanges;
- (void)_fixSelectionAfterChangeInCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_growCachedRectArrayToSize:(unsigned long long)arg1;
- (struct CGRect *)_rectArrayForRange:(struct _NSRange)arg1 withinSelectionRange:(struct _NSRange)arg2 rangeIsCharRange:(BOOL)arg3 singleRectOnly:(BOOL)arg4 fullLineRectsOnly:(BOOL)arg5 inTextContainer:(id)arg6 rectCount:(unsigned long long *)arg7 rangeWithinContainer:(struct _NSRange *)arg8 glyphsDrawOutsideLines:(char *)arg9;
- (struct CGRect)_boundingRectForGlyphRange:(struct _NSRange)arg1 inTextContainer:(id)arg2 fast:(BOOL)arg3 fullLineRectsOnly:(BOOL)arg4;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 hintGlyphRange:(struct _NSRange)arg3 okToFillHoles:(BOOL)arg4;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 okToFillHoles:(BOOL)arg3;
- (struct _NSRange)_glyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 fast:(BOOL)arg3 okToFillHoles:(BOOL)arg4;
- (unsigned long long)_indexOfFirstGlyphInTextContainer:(id)arg1 okToFillHoles:(BOOL)arg2;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 includeBlocks:(BOOL)arg3;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_invalidateLayoutForExtendedCharacterRange:(struct _NSRange)arg1 isSoft:(BOOL)arg2 invalidateUsage:(BOOL)arg3;
- (void)_invalidateLayoutForExtendedCharacterRange:(struct _NSRange)arg1 isSoft:(BOOL)arg2;
- (void)_firstTextViewChanged;
- (void)_drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2 parameters:(struct _NSDrawingParameters *)arg3;
- (id)selectedTextAttributesForCharacterAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (char *)_packedGlyphs:(unsigned long long)arg1 range:(struct _NSRange)arg2 length:(unsigned long long *)arg3;
- (void)_drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2 parameters:(struct _NSDrawingParameters *)arg3;
- (void)_rulerAccViewUpdateStyles:(id)arg1;
- (void)_rulerAccViewSetUpLists;
- (id)_rulerAccView;
- (void)_doUserParagraphStyleLineHeight:(double)arg1 fixed:(BOOL)arg2;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)_rulerAccViewIncrementLineHeightAction:(id)arg1;
- (void)_rulerAccViewFixedLineHeightAction:(id)arg1;
- (void)_rulerAccViewUpdatePullDown:(id)arg1;
- (void)_rulerAccViewPullDownAction:(id)arg1;
- (void)_doUserParagraphStyleLineHeightMultiple:(double)arg1 min:(double)arg2 max:(double)arg3 lineSpacing:(double)arg4 paragraphSpacingBefore:(double)arg5 after:(double)arg6 isFinal:(BOOL)arg7;
- (void)_doUserSetAttributes:(id)arg1 removeAttributes:(id)arg2;
- (void)_doUserSetAttributes:(id)arg1;
- (void)_doUserRemoveMarkerFormatInRange:(struct _NSRange)arg1;
- (void)_doUserSetListMarkerFormat:(id)arg1 options:(unsigned long long)arg2 startingItemNumber:(long long)arg3 inRange:(struct _NSRange)arg4 level:(unsigned long long)arg5;
- (unsigned long long)_markerLevelForRange:(struct _NSRange)arg1;
- (void)_doUserSetListMarkerFormat:(id)arg1 options:(unsigned long long)arg2 startingItemNumber:(long long)arg3 forceStartingItemNumber:(BOOL)arg4;
- (void)_doUserSetListMarkerFormat:(id)arg1 options:(unsigned long long)arg2 startingItemNumber:(long long)arg3;
- (void)_doUserSetListMarkerFormat:(id)arg1 options:(unsigned long long)arg2;
- (void)_rulerAccViewAlignmentAction:(id)arg1;
- (void)_rulerAccViewListsAction:(id)arg1;
- (void)_rulerAccViewSpacingAction:(id)arg1;
- (void)_rulerAccViewStylesAction:(id)arg1;
- (void)_setRotation:(double)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (double)_rotationForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned int)_glyphAtIndex:(unsigned long long)arg1 characterIndex:(unsigned long long *)arg2 glyphInscription:(unsigned long long *)arg3 isValidIndex:(char *)arg4;
- (BOOL)_needToFlushGlyph;
- (void)_setNeedToFlushGlyph:(BOOL)arg1;
- (void)_simpleInsertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3 elastic:(BOOL)arg4;
- (void)_simpleDeleteGlyphsInRange:(struct _NSRange)arg1;
- (void)_insertGlyphs:(unsigned int *)arg1 elasticAttributes:(char *)arg2 count:(unsigned long long)arg3 atGlyphIndex:(unsigned long long)arg4 characterIndex:(unsigned long long)arg5;
- (void)_promoteGlyphStoreToFormat:(unsigned long long)arg1;
- (id)_attachmentSizesRun;
- (struct CGRect)_currentAttachmentRect;
- (unsigned long long)_currentAttachmentIndex;
- (void)_setCurrentAttachmentRect:(struct CGRect)arg1 index:(unsigned long long)arg2;
- (void)_clearCurrentAttachmentSettings;
- (void)_clearTemporaryAttributes;
- (void)_clearTemporaryAttributesForCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_setIsInUILayoutMode:(BOOL)arg1;
- (BOOL)_isInUILayoutMode;
- (void)_setHasSeenRightToLeft:(BOOL)arg1;
- (BOOL)_hasSeenRightToLeft;
- (BOOL)flipsIfNeeded;
- (void)setFlipsIfNeeded:(BOOL)arg1;
- (BOOL)ignoresViewTransformations;
- (void)setIgnoresViewTransformations:(BOOL)arg1;
- (BOOL)ignoresAntialiasThreshold;
- (void)setIgnoresAntialiasThreshold:(BOOL)arg1;
- (BOOL)_alwaysDrawsActive;
- (void)_setAlwaysDrawsActive:(BOOL)arg1;
- (id)_insertionPointHelperForGlyphAtIndex:(unsigned long long)arg1;
- (long long)getLineFragmentInsertionPointArraysForCharacterAtIndex:(unsigned long long)arg1 inDisplayOrder:(BOOL)arg2 positions:(double **)arg3 characterIndexes:(unsigned long long **)arg4 count:(unsigned long long *)arg5 alternatePositions:(double **)arg6 characterIndexes:(unsigned long long **)arg7 count:(unsigned long long *)arg8;
- (id)_selectionRangesForInsertionPointRange:(struct _NSRange)arg1;
@end

@interface NSLayoutManager (NSTextViewSupport)
- (id)rulerMarkersForTextView:(id)arg1 paragraphStyle:(id)arg2 ruler:(id)arg3;
- (id)_rulerAccViewLeftTabWell;
- (id)_rulerAccViewRightTabWell;
- (id)_rulerAccViewCenterTabWell;
- (id)_rulerAccViewDecimalTabWell;
- (id)rulerAccessoryViewForTextView:(id)arg1 paragraphStyle:(id)arg2 ruler:(id)arg3 enabled:(BOOL)arg4;
- (BOOL)layoutManagerOwnsFirstResponderInWindow:(id)arg1;
- (id)firstTextView;
- (id)textViewForBeginningOfSelection;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)fillBackgroundRectArray:(struct CGRect *)arg1 count:(unsigned long long)arg2 forCharacterRange:(struct _NSRange)arg3 color:(id)arg4;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)showPackedGlyphs:(char *)arg1 length:(unsigned long long)arg2 glyphRange:(struct _NSRange)arg3 atPoint:(struct CGPoint)arg4 font:(id)arg5 color:(id)arg6 printingAdjustment:(struct CGSize)arg7;
- (void)showAttachmentCell:(id)arg1 inRect:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (void)drawSpellingUnderlineForGlyphRange:(struct _NSRange)arg1 spellingState:(long long)arg2 inGlyphRange:(struct _NSRange)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 inContext:(struct CGContext *)arg2 from:(double)arg3 to:(double)arg4 at:(double)arg5 thickness:(double)arg6 lineOrigin:(struct CGPoint)arg7 breakForDescenders:(BOOL)arg8 flipped:(BOOL)arg9;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 inContext:(struct CGContext *)arg2 from:(double)arg3 to:(double)arg4 at:(double)arg5 thickness:(double)arg6 lineOrigin:(struct CGPoint)arg7 breakForDescenders:(BOOL)arg8;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 type:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6 isStrikethrough:(BOOL)arg7;
- (void)drawUnderlineForGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)drawStrikethroughForGlyphRange:(struct _NSRange)arg1 strikethroughType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)_lineGlyphRange:(struct _NSRange)arg1 type:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5 isStrikethrough:(BOOL)arg6;
- (void)strikethroughGlyphRange:(struct _NSRange)arg1 strikethroughType:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5;
- (void)underlineGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5;
- (void)spellCheckerDidLearnWord:(id)arg1;
- (void)spellCheckerDidUnlearnWord:(id)arg1;
- (void)spellCheckerDidChangeLanguage:(id)arg1;
@end

@interface NSLevelIndicatorCell (NSPrivate)
- (void)_drawRelevancyWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawContinuousCapacityWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawDiscreteCapacityWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawRatingWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawTickMarksWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)_rankIndicatorSize;
- (void)_updateTrackingValueForPoint:(struct CGPoint)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (struct CGRect)_rectOfDiscreteBrickAtIndex:(long long)arg1 withDrawingRect:(struct CGRect)arg2;
@end

@interface NSLevelIndicatorCell (NSLevelIndicatorCellAccessibility)
- (id)accessibilityRoleAttribute;
- (id)accessibilitySubroleAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityWarningValueAttribute;
- (BOOL)accessibilityIsWarningValueAttributeSettable;
- (id)accessibilityCriticalValueAttribute;
- (BOOL)accessibilityIsCriticalValueAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenValueAttributeSettable;
- (id)accessibilityAllowedValuesAttribute;
- (BOOL)accessibilityIsAllowedValuesAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSMatrix (NSMatrixObsolete)
- (SEL)errorAction;
- (void)setErrorAction:(SEL)arg1;
@end

@interface NSMatrix (NSMatrixAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityCurrentEditorForCell:(id)arg1;
- (BOOL)_accessibilityIsRadioGroup;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)_accessibilityCorrectlyParentedCells:(id)arg1;
- (void)_accessibilityLoadBrowserCellsAtRow:(long long)arg1 count:(long long)arg2;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessiblityChildCells;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (void)accessibilitySetSelectedChildrenAttribute:(id)arg1;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSMenu (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSView (NSViewEnclosingMenuItem)
- (id)_enclosingMenuItem;
- (id)enclosingMenuItem;
- (BOOL)_isContainedInMenu;
@end

@interface NSMenuItem (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSMenuItem (NSCompatibilityCoding)
- (id)_cellInitWithCoder:(id)arg1;
- (id)_actionCellInitWithCoder:(id)arg1;
- (id)_buttonCellInitWithCoder:(id)arg1;
- (id)_menuCellInitWithCoder:(id)arg1;
- (void)setControlView:(id)arg1;
- (id)controlView;
@end

@interface NSMenu (NSCompatibilityCoding)
- (id)_responderInitWithCoder:(id)arg1;
- (id)_windowInitWithCoder:(id)arg1;
- (id)_panelInitWithCoder:(id)arg1;
- (id)_menuPanelInitWithCoder:(id)arg1;
@end

@interface NSMenu (NSKeyEquivalents)
+ (void)_registerMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_registerOneMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterOneMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_registerMenuItemForKeyEquivalentUniquing:(id)arg1;
+ (void)_unregisterMenuItemForKeyEquivalentUniquing:(id)arg1;
+ (void)_recursivelyRegisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_recursivelyUnregisterMenuForKeyEquivalentUniquing:(id)arg1;
+ (void)_recursivelyRegisterMenuItem:(id)arg1 forKeyEquivalentUniquingInMenu:(id)arg2;
+ (void)_recursivelyUnregisterMenuItem:(id)arg1 forKeyEquivalentUniquingInMenu:(id)arg2;
+ (BOOL)_canUseKeyEquivalentForMenuItem:(id)arg1;
+ (BOOL)_validateCaptureKeyEquivalentsFromEvent:(id)arg1 withOptions:(unsigned long long)arg2;
+ (id)_captureKeyEquivalentsFromEvent:(id)arg1 withOptions:(unsigned long long)arg2;
+ (id)_captureKeyEquivalentsWithOptions:(unsigned long long)arg1 inMode:(id)arg2 finalEvent:(id *)arg3 status:(long long *)arg4 additionalEventProcessing:(id)arg5;
- (id)_getKeyEquivalentUniquerCreatingIfNecessary:(BOOL)arg1;
- (void)_recursivelyUpdateKeyEquivalents;
@end

@interface NSMutableAttributedString (NSMutableAttributedStringKitAdditions)
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (void)fixFontAttributeInRange:(struct _NSRange)arg1;
- (void)fixParagraphStyleAttributeInRange:(struct _NSRange)arg1;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)arg1;
- (void)_fixGlyphInfo:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)fixGlyphInfoAttributeInRange:(struct _NSRange)arg1;
- (void)applyFontTraits:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)setAlignment:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)setBaseWritingDirection:(long long)arg1 range:(struct _NSRange)arg2;
- (void)_changeIntAttribute:(id)arg1 by:(long long)arg2 range:(struct _NSRange)arg3;
- (void)superscriptRange:(struct _NSRange)arg1;
- (void)subscriptRange:(struct _NSRange)arg1;
- (void)unscriptRange:(struct _NSRange)arg1;
- (BOOL)readFromURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (BOOL)readFromData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (BOOL)readFromURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (BOOL)readFromData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (struct _NSRange)convertBidiControlCharactersToWritingDirectionForParagraphAtIndex:(unsigned long long)arg1;
- (void)convertBidiControlCharactersToWritingDirection;
- (struct _NSRange)convertWritingDirectionToBidiControlCharactersForParagraphAtIndex:(unsigned long long)arg1;
- (void)convertWritingDirectionToBidiControlCharacters;
@end

@interface NSBrowserCell (NSNavPrivate)
- (struct CGSize)labelSizeForBounds:(struct CGRect)arg1;
@end

@interface NSNavFileListDelegate (NSNavFileListDelegateOptionalOverrides)
- (BOOL)lightweightHandleChildChanged:(id)arg1 parent:(id)arg2 property:(id)arg3;
- (BOOL)supportsSortingByFileProperties;
- (void)prepareForReloadChildrenForNode:(id)arg1;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)configureForDisplayedFileProperties:(id)arg1;
- (void)configureForSortedByFileProperty:(id)arg1 ascending:(BOOL)arg2 caseSensitive:(BOOL)arg3;
- (void)configureForShowsPreviews:(BOOL)arg1;
- (void)configureForCanChooseDirectories:(BOOL)arg1;
- (void)configureForCanChooseFiles:(BOOL)arg1;
- (void)configureForCanClickDisabledFiles:(BOOL)arg1;
- (void)configureForAllowsMultipleSelection:(BOOL)arg1;
- (void)configureForTreatsFilePackagesAsDirectories:(BOOL)arg1;
- (void)configureForTreatsDirectoryAliasesAsDirectories:(BOOL)arg1;
- (void)configureForCalculatesAllSizes:(BOOL)arg1;
- (void)configureForAllowsExpandingMultipleDirectories:(BOOL)arg1;
@end

@interface NSString (NSNavFilePropertyComparisonAdditions)
- (long long)_NSNavFilePropertyCompare:(id)arg1;
- (long long)_NSNavFilePropertyCompareCaseInsenstive:(id)arg1;
- (long long)_NSNavDisplayNameCompare:(id)arg1 caseSensitive:(BOOL)arg2;
- (long long)_NSNavShortVersionCompare:(id)arg1;
@end

@interface NSObject (NSSetVersionHacks)
+ (void)_kitNewObjectSetVersion:(long long)arg1;
@end

@interface NSNib (NSUserInterfaceItemIdentifierUtilitiesPrivate)
+ (id)_NSNibRegisterNIBPath:(id)arg1;
+ (id)_NSNibPathForNibID:(id)arg1;
+ (id)_NSNibPathForUIItemIdentifier:(id)arg1;
+ (id)_NSNibShortcutNameForUIItemIdentifier:(id)arg1;
+ (id)_NSNibObjectIDForUIItemIdentifier:(id)arg1;
@end

@interface NSBundle (NSNibLoadingInternal)
+ (void)pushNibPath:(id)arg1;
+ (void)popNibPath;
+ (id)currentNibPath;
+ (void)pushNibLoadingBundle:(id)arg1;
+ (void)popNibLoadingBundle;
+ (id)currentNibLoadingBundle;
@end

@interface NSBundle (NSNibLoading)
+ (BOOL)loadNibNamed:(id)arg1 owner:(id)arg2;
+ (BOOL)_loadNibFile:(id)arg1 nameTable:(id)arg2 withZone:(struct _NSZone *)arg3 ownerBundle:(id)arg4;
+ (BOOL)loadNibFile:(id)arg1 externalNameTable:(id)arg2 withZone:(struct _NSZone *)arg3;
- (BOOL)loadNibFile:(id)arg1 externalNameTable:(id)arg2 withZone:(struct _NSZone *)arg3;
@end

@interface NSObject (NSNibAwaking)
- (void)awakeFromNib;
@end

@interface NSObjectController (NSManagedController)
- (BOOL)_isManagedController;
- (void)_setUsingManagedProxy:(BOOL)arg1;
- (BOOL)_isUsingManagedProxy;
- (id)_managedProxy;
- (BOOL)_canModifyManagedContent;
- (BOOL)usesLazyFetching;
- (void)setUsesLazyFetching:(BOOL)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (id)managedObjectContext;
- (void)_notifyManagedContextEditorStateChanged:(BOOL)arg1;
- (void)setEntityName:(id)arg1;
- (id)entityName;
- (void)setFetchPredicate:(id)arg1;
- (id)fetchPredicate;
- (id)defaultFetchRequest;
- (id)_fetchRequestForPerformingFetch;
- (id)_objectIDsFromManagedObjects:(id)arg1;
- (BOOL)_performFetchWithRequest:(id)arg1 merge:(BOOL)arg2 error:(id *)arg3;
- (id)_relationshipKeyPathsForPrefetching;
- (id)_lazyFetchResultProxyForObjects:(id)arg1;
- (BOOL)fetchWithRequest:(id)arg1 merge:(BOOL)arg2 error:(id *)arg3;
- (void)_executeFetch:(id)arg1 didCommitSuccessfully:(BOOL)arg2 actionSender:(id)arg3;
- (void)fetch:(id)arg1;
- (BOOL)_needsLiveUpdates;
- (void)_reactToMatchingInsertions:(id)arg1 deletions:(id)arg2 refreshed:(id)arg3;
@end

@interface NSView (NSOpenGLContextAssociation)
- (id)_layerBackedOpenGLContext;
- (void)_setLayerBackedOpenGLContext:(id)arg1;
- (id)_surfaceBackedOpenGLContext;
- (void)_setSurfaceBackedOpenGLContext:(id)arg1;
- (id)_openGLContextForCurrentLayerBackingState;
@end

@interface NSOpenGLContext (NSOpenGL_Private)
- (id)_initWithCGLContextObj:(struct _CGLContextObject *)arg1;
- (struct _CGLContextObject *)_contextAuxiliary;
@end

@interface NSOpenGLPixelBuffer (NSOpenGL_Private)
- (struct _CGLPBufferObject *)_pixelBufferAuxiliary;
@end

@interface NSOpenGLPixelFormat (NSOpenGL_Private)
- (id)_initWithCGLPixelFormatObj:(struct _CGLPixelFormatObject *)arg1;
- (struct _CGLPixelFormatObject *)_pixelFormatAuxiliary;
@end

@interface NSOutlineView (NSOutlineViewAccessibility)
- (id)accessibilityRoleAttribute;
- (id)_accessibilityTableRow:(long long)arg1;
- (void)accessibilityPostNotification:(id)arg1 context:(id)arg2;
@end

@interface NSBinder (NSOutlineViewColumnBinder)
- (void)updateOutlineColumnDataCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
- (void)updateOutlineColumnOutlineCell:(id)arg1 forDisplayAtIndexPath:(id)arg2;
@end

@interface NSApplication (NSPageLayoutPanel)
- (void)runPageLayout:(id)arg1;
@end

@interface NSPageLayout (NSDeprecatedLongAgo)
- (void)convertOldFactor:(float *)arg1 newFactor:(float *)arg2;
- (void)pickedButton:(id)arg1;
- (void)pickedOrientation:(id)arg1;
- (void)pickedPaperSize:(id)arg1;
- (void)pickedUnits:(id)arg1;
@end

@interface NSPageLayout (NSDeprecated)
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)readPrintInfo;
- (void)writePrintInfo;
@end

@interface NSPasteboard (NSTypeConversion)
+ (id)_oldStyleTypeNameForIdentifier:(struct __CFString *)arg1;
+ (struct __CFString *)_typeIdentifierForName:(id)arg1;
+ (struct __CFString *)_typeIdentifierFromCarbonCode:(unsigned int)arg1;
+ (id)_typesIncludingConversionsFromTypes:(id)arg1;
+ (id)_typeIdentifiersIncludingConversionsFromTypesIdentifiers:(id)arg1;
+ (id)_typesIncludingConversionsFromTypes:(id)arg1 usesPboardTypes:(BOOL)arg2;
+ (void)_setConversionFromData:(id)arg1 type:(id)arg2 inPasteboard:(struct __CFPasteboard *)arg3 generation:(long long)arg4 item:(void *)arg5;
- (id)_conformingTypes;
- (id)_dataWithConversionForType:(id)arg1;
- (id)_dataWithConversionForTypeIdentifier:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_addConversionsFromTypes:(id)arg1;
- (void)_addConversionsFromTypes:(id)arg1 atIndex:(unsigned long long)arg2 usesPboardTypes:(BOOL)arg3;
@end

@interface NSPersistentDocument (NSPersistentDocumentDeprecated)
- (BOOL)configurePersistentStoreCoordinatorForURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
@end

@interface NSPopUpButtonCell (NSPopUpButtonCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)_accessibilityPressAction:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSPrintInfo (NSDeprecated)
+ (void)setDefaultPrinter:(id)arg1;
+ (struct CGSize)sizeForPaperName:(id)arg1;
@end

@interface NSPrintInfo (NSInternal)
- (void)_createDefaultOrUnflattenPageFormatIfNecessary;
- (void)_createDefaultOrUnflattenPrintSettingsIfNecessary;
- (struct OpaquePMPrintSession *)_printSessionForGetting;
- (struct OpaquePMPageFormat *)_pageFormatForGetting;
- (struct OpaquePMPrintSettings *)_printSettingsForGetting;
- (struct OpaquePMPrintSession *)_printSessionForSetting;
- (struct OpaquePMPageFormat *)_pageFormatForSetting;
- (struct OpaquePMPrintSettings *)_printSettingsForSetting;
- (void)_pageFormatWasEdited;
- (void)_printSettingsWasEdited;
- (void)_setPrintInfo:(id)arg1;
@end

@interface NSPrintInfo (NSPrivate)
- (struct OpaquePMPrintSession *)_printSession;
- (struct OpaquePMPageFormat *)_pageFormat;
- (struct OpaquePMPrintSettings *)_printSettings;
- (void)_setPageFormat:(struct OpaquePMPageFormat *)arg1;
- (void)_setPrintSettings:(struct OpaquePMPrintSettings *)arg1;
@end

@interface NSPrintInfo (NSManagedAttributes)
+ (void)_setPrinter:(id)arg1 inPrintSession:(struct OpaquePMPrintSession *)arg2;
+ (id)_printerInPrintSession:(struct OpaquePMPrintSession *)arg1;
+ (void)_setPaperSize:(struct CGSize)arg1 inPrintSession:(struct OpaquePMPrintSession *)arg2 pageFormat:(struct OpaquePMPageFormat *)arg3;
+ (void)_setPaperName:(id)arg1 inPrintSession:(struct OpaquePMPrintSession *)arg2 pageFormat:(struct OpaquePMPageFormat *)arg3;
+ (void)_setOrientation:(unsigned long long)arg1 inPageFormat:(struct OpaquePMPageFormat *)arg2;
+ (struct CGSize)_paperSizeInPageFormat:(struct OpaquePMPageFormat *)arg1;
+ (id)_paperNameInPageFormat:(struct OpaquePMPageFormat *)arg1;
+ (unsigned long long)_orientationInPageFormat:(struct OpaquePMPageFormat *)arg1;
+ (void)_setJobDisposition:(id)arg1 saveURL:(id)arg2 inPrintSession:(struct OpaquePMPrintSession *)arg3 printSettings:(struct OpaquePMPrintSettings *)arg4;
+ (void)_setJobDisposition:(id)arg1 savePath:(id)arg2 inPrintSession:(struct OpaquePMPrintSession *)arg3 printSettings:(struct OpaquePMPrintSettings *)arg4;
+ (id)_jobDispositionInPrintSession:(struct OpaquePMPrintSession *)arg1 printSettings:(struct OpaquePMPrintSettings *)arg2;
+ (id)_jobSavingURLInPrintSession:(struct OpaquePMPrintSession *)arg1 printSettings:(struct OpaquePMPrintSettings *)arg2;
+ (id)_printSessionAttributeKeys;
+ (id)_pageFormatAttributeKeys;
+ (id)_printSettingsAttributeKeys;
+ (id)_managedAttributeKeys;
- (void)_reconcilePrintSessionAttributes;
- (void)_reconcilePageFormatAttributes;
- (void)_reconcilePrintSettingsAttributes;
- (id)_allAttributeKeys;
- (id)_objectForAttributeKey:(id)arg1;
- (void)_setObject:(id)arg1 forAttributeKey:(id)arg2;
- (void)_removeObjectForAttributeKey:(id)arg1;
@end

@interface NSConcretePrintOperation (NSDeprecated)
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)setJobStyleHint:(id)arg1;
- (id)jobStyleHint;
- (void)setShowPanels:(BOOL)arg1;
- (BOOL)showPanels;
@end

@interface NSConcretePrintOperation (NSInternal)
- (void)_validatePagination;
- (void)_forceKnowsPageRangeMessage;
- (void)_invalidatePagination;
- (long long)_firstPageNumber;
- (long long)_lastPageNumber;
- (long long)_viewKnowsPages;
- (BOOL)_tryToSetCurrentPageNumber:(long long)arg1;
- (long long)_pageSet;
- (long long)_nUpPages;
- (void)_validateJobPageNumbers;
- (long long)_firstJobPageNumber;
- (long long)_lastJobPageNumber;
- (long long)_firstRenderPageNumber;
- (long long)_lastRenderPageNumber;
- (id)_effectiveJobTitle;
- (struct CGRect)_currentPageBounds;
- (double)_pageScaling;
- (void)_setRenderingBorder:(BOOL)arg1;
- (BOOL)_isCancelledAfterHandlingUserEvents;
- (struct _PrivatePrintOperationInfo *)_operationInfo;
- (void)_setLockingFocus:(BOOL)arg1;
- (BOOL)_isLockingFocus;
- (BOOL)_isRenderingBorder;
- (struct CGRect)_renderingBounds;
- (void)setBaseAffineTransform:(id)arg1;
- (id)baseAffineTransform;
- (BOOL)isEPSOperation;
@end

@interface NSConcretePrintOperation (NSPrivate)
- (void)_setThumbnailView:(id)arg1;
- (id)_thumbnailView;
- (void)_setShowPrintPanel:(BOOL)arg1;
- (void)_setShowProgressPanel:(BOOL)arg1;
@end

@interface NSPrintOperation (NSDeprecated)
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)setJobStyleHint:(id)arg1;
- (id)jobStyleHint;
- (void)setShowPanels:(BOOL)arg1;
- (BOOL)showPanels;
@end

@interface NSPrintOperation (NSInternal)
+ (void)_setPrintEventRetrofitInfo:(id)arg1;
- (void)_forceKnowsPageRangeMessage;
- (void)_invalidatePagination;
- (BOOL)_tryToSetCurrentPageNumber:(long long)arg1;
- (long long)_firstJobPageNumber;
- (long long)_lastJobPageNumber;
- (long long)_firstRenderPageNumber;
- (long long)_lastRenderPageNumber;
- (id)_effectiveJobTitle;
- (struct CGRect)_currentPageBounds;
- (double)_pageScaling;
- (void)_setRenderingBorder:(BOOL)arg1;
- (BOOL)_isCancelledAfterHandlingUserEvents;
- (struct _PrivatePrintOperationInfo *)_operationInfo;
- (void)_setLockingFocus:(BOOL)arg1;
- (BOOL)_isLockingFocus;
- (BOOL)_isRenderingBorder;
- (struct CGRect)_renderingBounds;
- (void)setBaseAffineTransform:(id)arg1;
- (id)baseAffineTransform;
- (BOOL)isEPSOperation;
- (long long)_pageSet;
@end

@interface NSPrintPanel (NSDeprecatedLongAgo)
- (void)pickedAllPages:(id)arg1;
- (void)pickedButton:(id)arg1;
- (void)pickedLayoutList:(id)arg1;
@end

@interface NSPrintPanel (NSDeprecated)
- (void)setAccessoryView:(id)arg1;
- (id)accessoryView;
- (void)updateFromPrintInfo;
- (void)finalWritePrintInfo;
@end

@interface NSPrintPanel (NSInternal)
- (void)_setPreviewController:(id)arg1;
@end

@interface NSPrintPanel (NSPrivate)
- (long long)_runModalWithPrintInfo:(id)arg1;
- (void)_setThumbnailView:(id)arg1;
- (id)_thumbnailView;
@end

@interface NSPrinter (NSDeprecated)
+ (id)printerWithName:(id)arg1 domain:(id)arg2 includeUnavailable:(BOOL)arg3;
- (struct CGRect)imageRectForPaper:(id)arg1;
- (BOOL)acceptsBinary;
- (BOOL)isColor;
- (BOOL)isFontAvailable:(id)arg1;
- (BOOL)isOutputStackInReverseOrder;
- (id)domain;
- (id)host;
- (id)note;
@end

@interface NSPrinter (NSPrivate)
+ (id)_printerForPrinter:(struct OpaquePMPrinter *)arg1;
+ (void)_flushCachedCarbonPrintersByName;
- (struct OpaquePMPrinter *)_printer;
@end

@interface NSPrinter (NSPPDs)
- (CDStruct_d48118a8 *)_newNode:(long long)arg1;
- (id)_makeRootNode;
- (id)_freeNode:(CDStruct_d48118a8 *)arg1;
- (char *)_allocString:(const char *)arg1;
- (CDStruct_d48118a8 *)_makeTable:(const char *)arg1 inNode:(CDStruct_d48118a8 *)arg2;
- (id)_freeNodes;
- (void)_allocatePPDStuffAndParse;
- (CDStruct_d48118a8 *)_getNodeForKey:(id)arg1 inTable:(id)arg2;
- (id)_keyListForKeyNode:(CDStruct_d48118a8 *)arg1;
- (id)_appendStringInKeyNode:(CDStruct_d48118a8 *)arg1 key:(const char *)arg2 value:(const char *)arg3;
- (CDStruct_d48118a8 *)_makeKeyNode:(const char *)arg1 inKeyNode:(CDStruct_d48118a8 *)arg2;
- (id)_appendKey:(const char *)arg1 option:(const char *)arg2 value:(const char *)arg3 inKeyNode:(CDStruct_d48118a8 *)arg4;
- (id)_setOrderDependency:(char *)arg1;
- (id)_setUIConstraints:(char *)arg1;
- (id)processKeyword:(char *)arg1 option:(char *)arg2 keyTran:(char *)arg3 arg:(char *)arg4 argTran:(char *)arg5;
- (void)_deallocatePPDStuff;
@end

@interface NSProgressIndicator (NSProgressIndicatorDeprecated)
- (double)animationDelay;
- (void)setAnimationDelay:(double)arg1;
- (void)animate:(id)arg1;
@end

@interface NSProgressIndicator (NSProgressIndicatorAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSRTFD (NSNewTextSupport)
- (BOOL)_isLink:(id)arg1;
@end

@interface NSRTFD (NSSerializationSupport)
- (id)serialize:(void **)arg1 length:(unsigned long long *)arg2;
- (id)freeSerialized:(void *)arg1 length:(unsigned long long)arg2;
- (id)initFromSerialized:(id)arg1;
- (id)pasteboardDataRepresentation;
- (id)initWithPasteboardDataRepresentation:(id)arg1;
@end

@interface NSString (NSUniquePart)
- (struct _NSRange)significantText;
@end

@interface NSRTFD (NSInternalUseOnly)
- (id)getDirInfo:(BOOL)arg1;
- (unsigned long long)addFileNamed:(id)arg1 fileAttributes:(id)arg2;
- (unsigned long long)insertItem:(id)arg1 path:(id)arg2 dirInfo:(id)arg3 zone:(struct _NSZone *)arg4 plist:(id)arg5;
- (unsigned long long)realAddDirNamed:(id)arg1;
- (unsigned long long)addDirNamed:(id)arg1 lazy:(BOOL)arg2;
@end

@interface NSRTFD (NSTextDocumentPboard)
- (id)initFromElement:(id)arg1 ofDocument:(id)arg2;
@end

@interface NSPageData (NSInternal)
- (unsigned long long)writeFd:(long long)arg1;
- (unsigned long long)writeFile:(id)arg1;
@end

@interface NSRulerMarker (NSTextExtensions)
+ (id)leftMarginMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)rightMarginMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)firstIndentMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)leftIndentMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)rightIndentMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)leftTabMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)rightTabMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)centerTabMarkerWithRulerView:(id)arg1 location:(double)arg2;
+ (id)decimalTabMarkerWithRulerView:(id)arg1 location:(double)arg2;
@end

@interface NSRulerView (NSRulerViewAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityUnitsAttribute;
- (BOOL)accessibilityIsUnitsAttributeSettable;
- (id)accessibilityUnitDescriptionAttribute;
- (BOOL)accessibilityIsUnitDescriptionAttributeSettable;
- (id)accessibilityMarkerUIElementsAttribute;
- (BOOL)accessibilityIsMarkerUIElementsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityRoleAttribute;
- (id)testPart:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (double)_locationFromUnitsValue:(double)arg1;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)_cancelAddMarker:(id)arg1;
- (void)_addMarker:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSRulerView (NSPrivate)
+ (id)labelColor;
+ (id)backgroundColor;
+ (id)separatorColor;
+ (id)rulerLineColor;
+ (id)_labelCell;
+ (void)_registerUnitWithName:(id)arg1 abbreviation:(id)arg2 unitToPointsConversionFactor:(double)arg3 stepUpCycle:(id)arg4 stepDownCycle:(id)arg5;
+ (id)_registrationDictionaryForUnitNamed:(id)arg1;
- (struct CGRect)_ruleAreaRect;
- (struct CGRect)_maxRuleAreaRect;
- (struct CGRect)_ruleAreaMarginRect;
- (struct CGRect)_markerAreaRect;
- (struct CGRect)_rulerAccessoryViewAreaRect;
- (struct CGPoint)_rulerOrigin;
- (id)_hashMarkDictionary;
- (id)_hashMarkDictionaryForDocumentView:(id)arg1 measurementUnitName:(id)arg2;
- (id)_hashMarkDictionaryForDocView:(id)arg1 measurementUnitToBoundsConversionFactor:(double)arg2 stepUpCycle:(id)arg3 stepDownCycle:(id)arg4 minimumHashSpacing:(double)arg5 minimumLabelSpacing:(double)arg6;
- (id)_markerHitTest:(struct CGPoint)arg1;
- (BOOL)displaysTooltips;
- (void)setDisplaysTooltips:(BOOL)arg1;
- (void)_scrollToMatchContentView;
- (void)_bitBlitSourceRect:(struct CGRect)arg1 toDestinationRect:(struct CGRect)arg2;
- (id)_draggingMarkerView;
- (void)_setDraggingMarker:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (double)_unitsForClientLocation:(double)arg1;
- (double)_unitsForRulerLocation:(double)arg1;
- (long long)userInterfaceLayoutDirection;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
@end

@interface NSRunStorage (NSPrivate)
+ (void)_setConsistencyCheckingEnabled:(BOOL)arg1 superCheckEnabled:(BOOL)arg2;
- (void)_ensureCapacity:(unsigned long long)arg1;
- (void)_moveGapToBlockIndex:(unsigned long long)arg1;
- (void)_moveGapAndMergeWithBlockRange:(struct _NSRange)arg1;
- (void)_consistencyCheck:(long long)arg1;
- (void)_consistencyError:(long long)arg1 startAtZeroError:(BOOL)arg2 cacheError:(BOOL)arg3 inconsistentBlockError:(BOOL)arg4;
@end

@interface NSMoveHelper (NSSavePanel)
- (void)_moveParent:(id)arg1 andExpandPanel:(id)arg2 toFrame:(struct CGRect)arg3;
- (void)_collapsePanel:(id)arg1 andMoveParent:(id)arg2 toFrame:(struct CGRect)arg3;
@end

@interface NSSavePanel (NSSavePanelLayout)
+ (struct CGSize)_minContentRectSize;
- (void)_adjustMinContentSizeForMinFrameSize:(struct CGSize)arg1;
- (double)_computeMinWidthForSimpleSavePanel:(BOOL)arg1;
- (double)_computeMinHeightForSimpleSavePanel:(BOOL)arg1;
- (struct CGSize)_minExpandedFrameSize;
- (struct CGSize)_minNonExpandedFrameSize;
- (void)saveFrameUsingName:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)_initContentView;
- (void)_configureMessageView;
- (void)_configureSavePane;
- (void)_configureAccessoryView;
- (void)_configureDirectoryPopup;
- (id)lazyGetChildrenForNodeWithIdentifier:(id)arg1;
- (void)_configureBottomControls;
- (void)_fixupKeyboardLoop;
- (void)_adjustPanelForMinWidth;
- (void)accessoryViewContainerContentFrameDidChange:(id)arg1;
- (void)_layoutViewsVerticallyAndResize;
- (void)_centerOnScreen;
- (void)_resizeKeepingPanelOnScreen:(struct CGRect)arg1 expand:(BOOL)arg2;
@end

@interface NSSavePanel (NSSavePanelObsoleteMethods)
- (void)_setIncludeNewFolderButton:(BOOL)arg1;
- (long long)runModalForDirectory:(id)arg1 file:(id)arg2 types:(id)arg3 relativeToWindow:(id)arg4;
- (long long)runModalForDirectory:(id)arg1 file:(id)arg2 relativeToWindow:(id)arg3;
@end

@interface NSWorkspace (NSSavePanelRuntime)
- (void)_sendFileSystemChangedNotificationForSavePanelInfo:(id)arg1;
@end

@interface NSScriptExecutionContext (NSAppKitScripting)
- (void)_setUpDefaultTopLevelObject;
@end

@interface NSScrollView (NSScrollViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (id)accessibilityVerticalScrollBarAttribute;
- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)_accessibilityAdditionalChildren;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSScroller (NSScroller_Performance)
- (void)_automateLiveScroll;
@end

@interface NSScroller (NSScrollerPrivate)
- (void)_decrementLine:(id)arg1;
- (void)_incrementLine:(id)arg1;
- (void)_decrementPage:(id)arg1;
- (void)_incrementPage:(id)arg1;
- (void)_scrollByDelta:(double)arg1;
- (double)_thumbingDoubleValue;
- (void)_setThumbingDoubleValue:(double)arg1;
- (double)_thumbingKnobProportion;
- (void)_setThumbingKnobProportion:(double)arg1;
@end

@interface NSScroller (NSScrollerAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (unsigned long long *)_accessibilitySupportedPartCodes;
- (BOOL)_accessibilityIsSupportedPartCode:(unsigned long long)arg1;
- (id)_accessibilityUIElementForPartCode:(unsigned long long)arg1;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSSearchFieldCell (NSSearchFieldCell_Local)
+ (double)_keyboardDelayForPartialSearchString:(id)arg1;
- (long long)_realMaximumRecents;
- (void)_searchFieldSearch:(id)arg1;
- (BOOL)_controlView:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)_searchFieldCancel:(id)arg1;
- (void)_searchFieldDoRecent:(id)arg1;
- (void)_searchFieldClearRecents:(id)arg1;
- (void)_sendPartialString;
- (id)_searchMenuTemplate;
- (void)_updateSearchMenu;
- (void)_registerForAutosaveNotification;
- (void)_deregisterForAutosaveNotification;
- (void)_updateAutosavedRecents:(id)arg1;
- (void)_adjustSearchButtonCellImages:(BOOL)arg1:(BOOL)arg2;
- (void)_adjustCancelButtonCellImages:(BOOL)arg1:(BOOL)arg2;
- (void)_addStringToRecentSearches:(id)arg1;
- (BOOL)_trimRecentSearchList;
- (void)_trackButton:(id)arg1 forEvent:(id)arg2 inRect:(struct CGRect)arg3 ofView:(id)arg4;
- (void)_textDidEndEditing:(id)arg1;
- (void)_autosaveRecentSearchList;
- (void)_loadRecentSearchList;
@end

@interface NSSearchFieldCell (NSSearchFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilitySearchButtonAttribute;
- (BOOL)accessibilityIsSearchButtonAttributeSettable;
- (id)accessibilityClearButtonAttribute;
- (BOOL)accessibilityIsClearButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (struct CGRect)_accessibilitySearchFieldCellBounds;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSSearchFieldCell (NSSearchButtonCellProxy)
- (id)_searchMenuForProxy;
- (BOOL)_searchMenuTracking;
@end

@interface NSSecureTextFieldCell (NSSecureTextFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityValueAttribute;
- (id)accessibilityValueDescriptionAttribute;
- (BOOL)accessibilityIsValueDescriptionAttributeSettable;
@end

@interface NSWindow (_NSSegmentedCellToolbarAdditions)
- (BOOL)_shouldUseTexturedAppearanceForSegmentedCellInView:(id)arg1;
- (BOOL)_shouldSuppressRolloversForSegmentedCellInView:(id)arg1;
@end

@interface NSSegmentedCell (NSSegmentedCellAccessibility)
- (id)_accessibilitySegmentAtIndex:(long long)arg1;
- (struct CGRect)_accessibilityScreenRectForSegment:(long long)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityValueAttribute;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (struct CGRect)accessibilityFocusRingBounds;
- (id)accessibilityHelpStringForChild:(id)arg1;
@end

@interface NSApplication (NSServicesHandling)
- (id)servicesProvider;
- (void)setServicesProvider:(id)arg1;
- (void)registerServiceProvider:(id)arg1 withName:(id)arg2;
- (void)unregisterServiceProviderNamed:(id)arg1;
@end

@interface NSWindow (NSSheets)
- (BOOL)_runningDocModal;
- (BOOL)_isDocModal;
- (void)_setDocModal:(BOOL)arg1;
- (void)_setSheet:(BOOL)arg1;
- (BOOL)_isSheet;
- (void)_moveSheetByItself:(id)arg1 delta:(struct CGPoint)arg2;
- (void)_attachSheetWindow:(id)arg1;
- (void)_detachSheetWindow;
- (id)_attachedSheet;
- (id)_documentWindow;
- (void)_setDocumentWindow:(id)arg1;
- (void)_positionSheetRect:(struct CGRect)arg1 onRect:(struct CGRect)arg2 andDisplay:(BOOL)arg3;
- (void *)_sheetEffect;
- (double)_sheetEffectInset;
- (void)_adjustEffectForSheet:(id)arg1;
- (void)_adjustSheetEffect;
- (struct CGRect)startRectForSheet:(id)arg1;
- (void)_positionSheetsConstrained:(BOOL)arg1 andDisplay:(BOOL)arg2;
- (struct CGRect)_positionSheet:(id)arg1 constrained:(BOOL)arg2 andDisplay:(BOOL)arg3;
- (struct CGRect)_positionSheetConstrained:(BOOL)arg1 andDisplay:(BOOL)arg2;
- (void)_orderFrontRelativeToWindow:(id)arg1;
- (void)_orderOutRelativeToWindow:(id)arg1;
- (void)_stashOrigin:(struct CGPoint)arg1;
- (struct CGPoint)_stashedOrigin;
- (void)_stashCollapsedOrigin:(struct CGPoint)arg1;
- (struct CGPoint)_collapsedOrigin;
- (void)_hideSheet:(BOOL)arg1;
- (void)_unhideSheet;
- (BOOL)_isSheetOnModalWindow;
- (BOOL)_isSheetOnWindowWithWindowNumber:(long long)arg1;
- (BOOL)_topmostDocWrapsCarbonWindow;
@end

@interface NSMoveHelper (NSSheets)
- (void)_startMove;
- (struct CGSize)_parentFrameDeltaForCurrentProgress;
- (void)_positionWindow;
- (BOOL)_hasSheetFactor:(float *)arg1;
- (void)_startSheet;
- (void)_animatePanel;
- (void)_animateSheet;
- (void)_moveParent:(id)arg1 andOpenSheet:(id)arg2;
- (void)_closeSheet:(id)arg1 andMoveParent:(id)arg2;
- (void)_moveParent:(id)arg1 andResizeSheet:(id)arg2 toFrame:(struct CGRect)arg3;
- (void)_updateSheetEffectParent:(id)arg1;
@end

@interface NSSliderCell (NSSliderCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityValueIndicatorAttribute;
- (BOOL)accessibilityIsValueIndicatorAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityAllowedValuesAttribute;
- (BOOL)accessibilityIsAllowedValuesAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGRect)_accessibilityIndicatorRect;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSSound (NSSoundPrivate)
+ (BOOL)_areUISoundEffectsEnabled;
+ (void)_setAlertType:(unsigned long long)arg1;
+ (unsigned long long)_alertType;
@end

@interface NSBundle (NSBundleSoundExtensions)
- (id)pathForSoundResource:(id)arg1;
@end

@interface NSSpellChecker (NSUnusedNibActions)
- (void)_newDictionary:(id)arg1;
- (void)_changeDictionaries:(id)arg1;
- (void)_openDictionaries:(id)arg1;
- (void)_deleteDictionaries:(id)arg1;
@end

@interface NSSplitView (NSSplitViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySplittersAttribute;
- (BOOL)accessibilityIsSplittersAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)_accessibilitySplitterRects;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSSplitViewSplitter (NSSplitViewSplitterAccessibility)
- (id)accessibilityAttributeNames;
- (double)_accessibilitySplitterMinCoordinate;
- (double)_accessibilityPreviousSplitterMaxCoordinate;
- (double)_accessibilityNextSplitterMinCoordinate;
- (double)_accessibilityMinValueWithoutCollapsing;
- (double)_accessibilityMinValue;
- (double)_accessibilityMaxValue;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityPreviousContentsAttribute;
- (BOOL)accessibilityIsPreviousContentsAttributeSettable;
- (id)accessibilityNextContentsAttribute;
- (BOOL)accessibilityIsNextContentsAttributeSettable;
@end

@interface NSStatusBar (NSStatusBar_Appearance)
- (id)_createStatusItemWindow;
- (id)_createStatusItemControlInWindow:(id)arg1;
- (long long)_placement;
- (long long)_direction;
- (struct CGSize)_initialOffset;
- (double)_lengthForSize:(struct CGSize)arg1;
- (void)drawBackgroundInRect:(struct CGRect *)arg1 inView:(id)arg2 highlight:(BOOL)arg3;
- (long long)backgroundStyleForHighlight:(BOOL)arg1;
@end

@interface NSStatusBar (NSStatusBarCGS)
- (void)_CGSinsertWindow:(id)arg1 withPriority:(long long)arg2;
- (void)_CGSremoveWindow:(id)arg1;
- (struct CGRect)_CGSgetWindowFrame:(id)arg1;
- (void)_CGSadjustWindows;
@end

@interface NSWindow (NSStatusBarAdditions)
- (BOOL)_drawsWithinMenuBar;
@end

@interface NSStepperCell (NSStepperCellPrivate)
- (void)_doSingleStep:(BOOL)arg1 inView:(id)arg2;
@end

@interface NSStepperCell (NSStepperCellLocal)
- (void)_stepInUpDirection:(BOOL)arg1;
@end

@interface NSStepperCell (NSStepperCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityIncrementButtonAttribute;
- (BOOL)accessibilityIsIncrementButtonAttributeSettable;
- (id)accessibilityDecrementButtonAttribute;
- (BOOL)accessibilityIsDecrementButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGRect)_accessibilityArrowScreenRect:(BOOL)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSAttributedString (NSExtendedStringDrawing)
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2;
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2;
@end

@interface NSString (NSExtendedStringDrawing)
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2 attributes:(id)arg3;
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2 attributes:(id)arg3;
@end

@interface NSAttributedString (NSStringDrawingExtension)
- (struct CGSize)_sizeWithSize:(struct CGSize)arg1;
- (struct CGRect)_drawCenteredVerticallyInRect:(struct CGRect)arg1;
- (struct CGRect)_drawCenteredVerticallyInRect:(struct CGRect)arg1 scrollable:(BOOL)arg2;
@end

@interface NSAttributedString (NSStringDrawing)
- (void)drawAtPoint:(struct CGPoint)arg1;
- (void)drawInRect:(struct CGRect)arg1;
- (struct CGSize)size;
@end

@interface NSString (NSStringDrawingExtension)
- (struct CGSize)_sizeWithSize:(struct CGSize)arg1 attributes:(id)arg2;
@end

@interface NSString (NSStringDrawing)
+ (BOOL)usesFontLeading;
+ (void)setUsesFontLeading:(BOOL)arg1;
+ (BOOL)usesScreenFonts;
+ (void)setUsesScreenFonts:(BOOL)arg1;
+ (void)setShowsInvisibleCharacters:(BOOL)arg1;
+ (BOOL)showsInvisibleCharacters;
+ (void)setShowsControlCharacters:(BOOL)arg1;
+ (BOOL)showsControlCharacters;
+ (void)setHyphenationFactor:(float)arg1;
+ (float)hyphenationFactor;
+ (void)setDefaultAttachmentScaling:(unsigned long long)arg1;
+ (unsigned long long)defaultAttachmentScaling;
+ (long long)typesetterBehavior;
+ (void)setTypesetterBehavior:(long long)arg1;
+ (double)defaultLineHeightForFont:(id)arg1;
+ (double)defaultBaselineOffsetForFont:(id)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 withAttributes:(id)arg2;
- (void)drawInRect:(struct CGRect)arg1 withAttributes:(id)arg2;
- (struct CGSize)sizeWithAttributes:(id)arg1;
@end

@interface NSCoder (NSAppKitCoderExtensions)
- (void)_encodeByte:(unsigned char)arg1;
- (unsigned char)_decodeByte;
- (void)_encodeDepth:(int)arg1;
- (int)_decodeDepth;
@end

@interface NSString (NSStringKitExtensions)
- (id)stringWithoutAmpersand;
@end

@interface NSString (NSStringTextExtras)
- (unsigned long long)_endOfParagraphAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfGraphicalSegmentAtIndex:(unsigned long long)arg1;
@end

@interface NSTextStorage (NSPrivateScripting)
- (id)_subtextStorageFromRange:(struct _NSRange)arg1;
@end

@interface NSApplication (NSStandardAboutPanel)
- (void)orderFrontStandardAboutPanel:(id)arg1;
- (void)orderFrontStandardAboutPanelWithOptions:(id)arg1;
@end

@interface NSTabView (NSTabViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityTabsAttribute;
- (BOOL)accessibilityIsTabsAttributeSettable;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
@end

@interface NSTabViewItem (NSTabViewItemAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
@end

@interface NSTabWell (NSTabWellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityMarkerTypeAttribute;
- (BOOL)accessibilityIsMarkerTypeAttributeSettable;
- (id)accessibilityMarkerTypeDescriptionAttribute;
- (BOOL)accessibilityIsMarkerTypeDescriptionAttributeSettable;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRoleAttribute;
@end

@interface NSBinder (NSTableColumnBinder)
- (void)updateTableColumnDataCell:(id)arg1 forDisplayAtIndex:(unsigned long long)arg2;
- (BOOL)supportsTableEditing;
@end

@interface NSTableColumn (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSTableColumn (NSTableColumnAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)_accessibilityRowsInRange:(struct _NSRange)arg1;
- (id)accessibilityRowsAttribute;
- (BOOL)accessibilityIsRowsAttributeSettable;
- (id)accessibilityVisibleRowsAttribute;
- (BOOL)accessibilityIsVisibleRowsAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)arg1;
- (id)accessibilitySelectedAttribute;
- (BOOL)_canDeselect:(long long)arg1;
- (BOOL)accessibilityIsSelectedAttributeSettable;
- (void)accessibilitySetSelectedAttribute:(id)arg1;
- (id)accessibilityHeaderAttribute;
- (BOOL)accessibilityIsHeaderAttributeSettable;
- (id)accessibilityIndexAttribute;
- (BOOL)accessibilityIsIndexAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
@end

@interface NSTableHeaderCell (NSTableHeaderCellAccessibility)
- (BOOL)accessibilityIsSortButton;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilitySortDirectionAttribute;
- (BOOL)accessibilityIsSortDirectionAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityElementWithParent:(id)arg1;
@end

@interface NSTableHeaderView (NSTableHeaderViewAccessibility)
- (id)accessibilityChildForColumn:(id)arg1;
- (unsigned long long)accessibilityColumnForChild:(id)arg1;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParentAttribute;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSTableRow (NSTableRowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilitySelectedAttribute;
- (BOOL)_canDeselect;
- (BOOL)accessibilityIsSelectedAttributeSettable;
- (void)accessibilitySetSelectedAttribute:(id)arg1;
- (id)accessibilityIndexAttribute;
- (BOOL)accessibilityIsIndexAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
@end

@interface NSTableView (NSTableViewViewBased)
- (BOOL)_delegateRepondsTo_BackgroundViewForRow;
- (id)_delegateBackgroundViewForRow:(long long)arg1;
- (id)_delegateViewForRow:(long long)arg1 column:(long long)arg2;
- (id)createSelectionHighlightViewForRow:(long long)arg1;
- (id)selectionHighlightViewForRow:(long long)arg1;
- (id)viewForRow:(long long)arg1 column:(long long)arg2;
- (id)createViewForDropHighlightOnRow:(long long)arg1 positioned:(long long)arg2;
@property(getter=isViewBased) BOOL viewBased; // @dynamic viewBased;
- (id)identifierForRow:(long long)arg1;
- (void)updateExtraViewsForRow:(long long)arg1 animated:(BOOL)arg2;
@end

@interface NSStepperCell (_NSTableViewPrivate)
- (BOOL)_shouldHighlightCellWhenSelected;
@end

@interface NSButtonCell (_NSTableViewPrivate)
- (BOOL)_shouldHighlightCellWhenSelected;
@end

@interface NSCell (_NSTableViewPrivate)
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (BOOL)_shouldHighlightCellWhenSelected;
@end

@interface NSBezierPath (NSBezierPathExtras)
- (void)_appendBezierPathWithTopRoundRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (void)_appendBezierPathWithBottomRoundRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (void)_appendBezierPathWithRoundRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
@end

@interface NSTableView (NSTableViewRowHeaderSupport)
- (void)_setRowHeaderTableColumn:(id)arg1 repositionTableColumnIfNecessary:(BOOL)arg2;
- (void)_setRowHeaderTableColumn:(id)arg1;
- (id)_rowHeaderTableColumn;
- (BOOL)_hasRowHeaderColumn;
- (BOOL)_isDrawingMultiClippedContentColumn:(long long)arg1;
- (long long)_rowHeaderColumn;
- (BOOL)_isRowHeaderColumn:(long long)arg1;
- (void)_getRowHeaderFixedContentRect:(struct CGRect *)arg1 rowHeaderScrollableContentVisibleRect:(struct CGRect *)arg2;
- (struct CGRect)_rowHeaderFixedContentRect;
- (struct CGRect)_rowHeaderScrollableContentVisibleRect;
- (struct CGRect)_unobstructedVisibleRectOfColumn:(long long)arg1;
- (BOOL)_drawView:(id)arg1;
- (void)_beginDrawView:(id)arg1;
- (void)_endDrawView:(id)arg1;
- (BOOL)_cachingView;
- (void)willRemoveSubview:(id)arg1;
- (id)_rectsForMultiClippedContentDrawing;
- (void)_clipViewBoundsChanged:(id)arg1;
- (void)_registerForClipBoundsDidChangeNotificationIfNecessaryForSuperview:(id)arg1;
- (void)_unregisterForClipBoundsDidChangeNotificationIfNecessaryForSuperview:(id)arg1 force:(BOOL)arg2;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_sizeRowHeaderToFitIfNecessary;
- (BOOL)_rowHeaderShadowSurfaceIsShowing;
- (id)_rowHeaderShadowSurface;
- (struct CGRect)_rowHeaderShadowSurfaceBounds;
- (struct CGRect)_surfaceBounds;
- (void)_viewWillStartLiveResize_handleRowHeaderSurfaces;
- (void)_viewDidEndLiveResize_handleRowHeaderSurfaces;
- (BOOL)_drawRowHeaderSeparatorAsSurface;
- (void)_drawRowHeaderBackgroundInRect:(struct CGRect)arg1;
- (id)_rowHeaderSeparatorLineColor;
- (void)_drawRowHeaderSeparatorInClipRect:(struct CGRect)arg1;
- (BOOL)_shouldHeaderShowSeparatorForColumn:(long long)arg1;
@end

@interface NSBrowserTableView (NSBrowserTableViewAccessibility)
- (BOOL)_accessibilityWantsToBeList;
- (void)accessibilitySetSelectedChildrenAttribute:(id)arg1;
@end

@interface NSTableView (NSTableViewAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (BOOL)_accessibilityWantsToBeList;
- (BOOL)_accessibilityIsList;
- (id)accessibilityCurrentEditorForCell:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)_accessibilityRowsInRange:(struct _NSRange)arg1;
- (id)accessibilityRowsAttribute;
- (BOOL)accessibilityIsRowsAttributeSettable;
- (id)accessibilityVisibleRowsAttribute;
- (BOOL)accessibilityIsVisibleRowsAttributeSettable;
- (id)accessibilitySelectedRowsAttribute;
- (BOOL)accessibilityIsSelectedRowsAttributeSettable;
- (void)accessibilitySetSelectedRowsAttribute:(id)arg1;
- (id)_accessibilityUnhiddenTableColumns;
- (id)accessibilityColumnsAttribute;
- (BOOL)accessibilityIsColumnsAttributeSettable;
- (id)accessibilityVisibleColumnsAttribute;
- (BOOL)accessibilityIsVisibleColumnsAttributeSettable;
- (id)accessibilitySelectedColumnsAttribute;
- (BOOL)accessibilityIsSelectedColumnsAttributeSettable;
- (void)accessibilitySetSelectedColumnsAttribute:(id)arg1;
- (id)accessibilityHeaderAttribute;
- (BOOL)accessibilityIsHeaderAttributeSettable;
- (unsigned long long)_accessibilityNumberOfChildren;
- (id)_accessibilityListChildrenInRange:(struct _NSRange)arg1;
- (id)_accessibilityChildrenInRange:(struct _NSRange)arg1;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (void)accessibilitySetSelectedChildrenAttribute:(id)arg1;
- (unsigned long long)accessibilityArrayAttributeCount:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)_accessibilityTableRow:(long long)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSText (NSTextAccessibilityPrivate)
- (void)accessibilityPostNotification:(id)arg1 withNotificationElement:(id)arg2;
- (void)accessibilityPostNotification:(id)arg1;
- (id)accessibilitySelectedText;
- (BOOL)accessibilityIsSelectedTextSettable;
- (void)accessibilitySetSelectedText:(id)arg1;
- (struct _NSRange)accessibilitySelectedRange;
- (BOOL)accessibilityIsSelectedRangeSettable;
- (void)accessibilitySetSelectedRange:(struct _NSRange)arg1;
- (id)accessibilityTextView;
- (struct _NSRange)accessibilityVisibleCharacterRange;
- (BOOL)accessibilityIsVisibleCharacterRangeSettable;
- (void)accessibilitySetVisibleCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)accessibilityInsertionPointLineNumber;
- (unsigned long long)accessibilityLineNumberForCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)accessibilityCharacterRangeForLineNumber:(unsigned long long)arg1;
- (struct _NSRange)accessibilityCharacterRangeForPosition:(struct CGPoint)arg1;
- (struct CGRect)accessibilityBoundsForCharacterRange:(struct _NSRange)arg1;
- (id)accessibilityRTFForCharacterRange:(struct _NSRange)arg1;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange)arg1 parent:(id)arg2;
- (struct _NSRange)accessibilityStyleRangeForCharacterIndex:(unsigned long long)arg1;
- (id)accessibilitySharedTextViews;
- (struct _NSRange)accessibilitySharedCharacterRange;
- (id)accessibilityAttachments;
- (unsigned long long)accessibilityIndexForAttachment:(id)arg1;
- (id)accessibilityAttachmentAtIndex:(unsigned long long)arg1;
- (id)accessibilityTextLinks;
- (id)accessibilityTextLinkAtIndex:(unsigned long long)arg1;
@end

@interface NSSecureTextView (NSTextAccessibilityPrivate)
- (void)accessibilityPostNotification:(id)arg1;
@end

@interface NSMutableAttributedString (NSMutableAttributedStringAttachmentConveniences)
- (void)updateAttachmentsFromPath:(id)arg1;
@end

@interface NSAttributedString (NSAttributedStringAttachmentConveniences)
+ (id)attributedStringWithAttachment:(id)arg1;
- (id)_attachmentFileWrapperDescription:(BOOL)arg1;
@end

@interface NSTextAttachmentCell (NSTextAttachmentCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
@end

@interface NSBinder (_NSTextColorBinderHandshaking)
- (void)_noticeTextColorPeerBinder:(id)arg1;
@end

@interface NSTextContainer (NSPrivate)
- (void)_setContainerObservesTextViewFrameChanges:(BOOL)arg1;
- (BOOL)_containerObservesTextViewFrameChanges;
- (void)_resizeAccordingToTextView:(id)arg1;
- (void)_containerTextViewFrameChanged:(id)arg1;
@end

@interface NSTextField (NSTextFieldObsolete)
- (SEL)errorAction;
- (void)setErrorAction:(SEL)arg1;
@end

@interface NSTokenFieldCell (NSTokenFieldCellTextAttributesAccessibility)
- (id)accessibilityValueAttribute;
@end

@interface NSTextFieldCell (NSTextFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityElementForAttachment:(id)arg1;
- (id)accessibilityAttachmentAtIndex:(unsigned long long)arg1;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (struct CGRect)_accessibilityBoundsOfChild:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityPlaceholderValueAttribute;
- (BOOL)accessibilityIsPlaceholderValueAttributeSettable;
@end

@interface NSTextStorage (NSUndo)
- (void)_undoRedoTextOperation:(id)arg1;
- (id)_undoRedoAttributedSubstringFromRange:(struct _NSRange)arg1;
@end

@interface NSTextView (NSTextViewAccessibility)
- (id)accessibilityElementForAttachment:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (void)accessibilitySetSelectedTextAttribute:(id)arg1;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)arg1;
- (id)accessibilitySelectedTextRangesAttribute;
- (BOOL)accessibilityIsSelectedTextRangesAttributeSettable;
- (void)accessibilitySetSelectedTextRangesAttribute:(id)arg1;
- (id)accessibilityNumberOfCharactersAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)arg1;
- (id)accessibilitySharedTextUIElementsAttribute;
- (BOOL)accessibilityIsSharedTextUIElementsAttributeSettable;
- (id)accessibilitySharedCharacterRangeAttribute;
- (BOOL)accessibilityIsSharedCharacterRangeAttributeSettable;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (struct CGRect)_accessibilityBoundsOfChild:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityTextInputMarkedRangeAttribute;
@end

@interface NSTextView (NSDragging)
- (unsigned long long)_insertionCharacterIndexForDrag:(id)arg1;
- (unsigned long long)_insertionGlyphIndexForDrag:(id)arg1;
- (void)_updateDragInsertionIndicatorWith:(struct CGRect)arg1;
- (struct CGPoint)_pointForTopOfBeginningOfCharRange:(struct _NSRange)arg1;
- (id)acceptableDragTypes;
- (void)cleanUpAfterDragOperation;
- (void)_forceRedrawDragInsertionIndicator;
- (void)_setDragAndDropCharRange:(struct _NSRange)arg1;
- (void)_setDragAndDropCharRanges:(id)arg1;
- (void)_fixDragAndDropCharRangesForChangeInRanges:(id)arg1 replacementStrings:(id)arg2;
- (unsigned long long)dragOperationForDraggingInfo:(id)arg1 type:(id)arg2;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)dragImageForSelectionWithEvent:(id)arg1 origin:(struct CGPoint *)arg2;
- (BOOL)dragSelectionWithEvent:(id)arg1 offset:(struct CGSize)arg2 slideBack:(BOOL)arg3;
@end

@interface NSTextView (NSTextViewAccessibilityPrivate)
- (id)_accessibilityTextViewCompletionWindow;
@end

@interface NSTextView (NSKeyBindingCommands)
+ (BOOL)_allowKillRing;
- (double)_verticalDistanceForPageScroll;
- (double)_verticalDistanceForLineScroll;
- (struct _NSRange)_rangeForMoveUpFromRange:(struct _NSRange)arg1 verticalDistance:(double)arg2 desiredDistanceIntoContainer:(double *)arg3 selectionAffinity:(unsigned long long *)arg4;
- (struct _NSRange)_rangeForMoveDownFromRange:(struct _NSRange)arg1 verticalDistance:(double)arg2 desiredDistanceIntoContainer:(double *)arg3 selectionAffinity:(unsigned long long *)arg4;
- (void)_scrollUp:(double)arg1;
- (void)_scrollDown:(double)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (unsigned long long)_characterIndexForMoveForwardFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveBackwardFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveRightFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveLeftFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveWordRightFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveWordLeftFromCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)_characterIndexForMoveForwardFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveBackwardFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveRightFromSelectedRanges:(id)arg1;
- (unsigned long long)_characterIndexForMoveLeftFromSelectedRanges:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)_moveUp:(double)arg1;
- (void)_moveDown:(double)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)transpose:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)_checkInList:(char *)arg1 listStart:(char *)arg2 markerRange:(struct _NSRange *)arg3 emptyItem:(char *)arg4 atEnd:(char *)arg5 inBlock:(char *)arg6 blockStart:(char *)arg7 forCharacterRange:(struct _NSRange)arg8;
- (void)_checkInList:(char *)arg1 listStart:(char *)arg2 markerRange:(struct _NSRange *)arg3 emptyItem:(char *)arg4 atEnd:(char *)arg5 inBlock:(char *)arg6 blockStart:(char *)arg7;
- (void)_reformListAtIndex:(unsigned long long)arg1;
- (void)_nestListAtIndex:(unsigned long long)arg1;
- (void)_unnestListAtIndex:(unsigned long long)arg1 markerRange:(struct _NSRange)arg2;
- (void)_moveToNextBlock;
- (void)_moveToPreviousBlock;
- (void)insertTab:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertLineSeparator:(id)arg1;
- (void)insertPageBreak:(id)arg1;
- (void)insertContainerBreak:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertSingleQuoteIgnoringSubstitution:(id)arg1;
- (void)insertDoubleQuoteIgnoringSubstitution:(id)arg1;
- (void)insertRightToLeftSlash:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (struct _NSRange)rangeForUserCompletion;
- (id)_completionsFromDocumentForPartialWordRange:(struct _NSRange)arg1 language:(id)arg2;
- (id)_completionsFromDocumentForPartialWordRange:(struct _NSRange)arg1;
- (id)completionsForPartialWordRange:(struct _NSRange)arg1 indexOfSelectedItem:(long long *)arg2;
- (void)insertCompletion:(id)arg1 forPartialWordRange:(struct _NSRange)arg2 movement:(long long)arg3 isFinal:(BOOL)arg4;
- (void)complete:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)spotlight:(id)arg1;
- (void)setMark:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (id)_characterRangesBetweenIndex:(unsigned long long)arg1 andIndex:(unsigned long long)arg2;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)_moveUpAndModifySelection:(double)arg1;
- (void)_moveDownAndModifySelection:(double)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)makeBaseWritingDirectionNatural:(id)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)insertTable:(id)arg1;
@end

@interface NSTextView (NSPasteboard)
+ (id)_readablePasteboardTypesForRichText:(BOOL)arg1 importsGraphics:(BOOL)arg2 usesFontPanel:(BOOL)arg3 usesRuler:(BOOL)arg4 allowsFiltering:(BOOL)arg5;
+ (void)registerForServices;
- (id)_attachmentCellForSelection;
- (id)writablePasteboardTypes;
- (BOOL)_writeStringInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeStringInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (id)_attributedSubstringForCopyingFromRange:(struct _NSRange)arg1;
- (BOOL)_writeRTFInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFDInRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRTFDInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeFontInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeRulerInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLStringInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLNameInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeURLStringsWithNamesInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeLinkStringInRange:(struct _NSRange)arg1 toPasteboard:(id)arg2;
- (BOOL)_writeMultipleTextSelectionRanges:(id)arg1 toPasteboard:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)readablePasteboardTypes;
- (id)preferredPasteboardTypeFromArray:(id)arg1 restrictedToTypesFromArray:(id)arg2;
- (id)_readMultipleTextSelectionRangesForString:(id)arg1 fromPasteboard:(id)arg2;
- (id)_rangesForMultipleTextSelectionPasteAtIndex:(unsigned long long)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readStringIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readStringIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readStringWithLinksIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_replaceCharactersInRange:(struct _NSRange)arg1 withPastedAttributedString:(id)arg2;
- (BOOL)_readRTFIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRTFIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRTFDIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRTFDIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readHTMLIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readColorIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readColorIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFilenameStringsIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFilenamesIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFontIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readFontIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRulerIntoRanges:(id)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readRulerIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLStringIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readURLStringsWithNamesIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readImageIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)_readMovieIntoRange:(struct _NSRange)arg1 fromPasteboard:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1 type:(id)arg2;
- (BOOL)_wantsPastedFile:(id)arg1;
- (BOOL)_wantsPastedFiles:(id)arg1;
- (BOOL)_wantsPastedURL:(id)arg1 allowFileURLs:(BOOL)arg2;
- (BOOL)_readSelectionFromPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)copyRuler:(id)arg1;
- (void)copyLink:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteRuler:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
@end

@interface NSArray (NSSelectionArray)
- (struct _NSRange)firstRange;
- (struct _NSRange)lastRange;
- (struct _NSRange)maximumRange;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfFirstRangeContainingOrFollowing:(unsigned long long)arg1;
- (BOOL)rangesContainLocation:(unsigned long long)arg1;
@end

@interface NSTextView (NSPrivate)
+ (void)_setInsertionPointDisabled:(BOOL)arg1;
+ (BOOL)_insertionPointDisabled;
+ (id)_URLForString:(id)arg1;
+ (id)_URLStringForString:(id)arg1;
- (void)_commonInitIvarBlock;
- (void)_commonInitState;
- (BOOL)_textViewOwnsTextStorage;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (id)replacementObjectForArchiver:(id)arg1;
- (void)_drawViewBackgroundInRect:(struct CGRect)arg1;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_getGlyphIndex:(unsigned long long *)arg1 characterIndex:(unsigned long long *)arg2 forWindowPoint:(struct CGPoint)arg3 pinnedPoint:(struct CGPoint)arg4 anchorPoint:(struct CGPoint)arg5 useAnchorPoint:(BOOL)arg6 preferredTextView:(id)arg7 partialFraction:(double *)arg8;
- (id)_getGlyphIndex:(unsigned long long *)arg1 forWindowPoint:(struct CGPoint)arg2 pinnedPoint:(struct CGPoint)arg3 anchorPoint:(struct CGPoint)arg4 useAnchorPoint:(BOOL)arg5 preferredTextView:(id)arg6 partialFraction:(double *)arg7;
- (id)_getGlyphIndex:(unsigned long long *)arg1 characterIndex:(unsigned long long *)arg2 forWindowPoint:(struct CGPoint)arg3 pinnedPoint:(struct CGPoint)arg4 preferredTextView:(id)arg5 partialFraction:(double *)arg6;
- (id)_getGlyphIndex:(unsigned long long *)arg1 forWindowPoint:(struct CGPoint)arg2 pinnedPoint:(struct CGPoint)arg3 preferredTextView:(id)arg4 partialFraction:(double *)arg5;
- (BOOL)_trackAttachmentClick:(id)arg1 characterIndex:(unsigned long long)arg2 glyphIndex:(unsigned long long)arg3 attachmentCell:(id)arg4;
- (unsigned long long)_clickedCharIndex;
- (BOOL)_range:(struct _NSRange)arg1 containsPoint:(struct CGPoint)arg2;
- (void)_sizeDownIfPossible;
- (id)_setSuperview:(id)arg1;
- (void)_superviewClipViewFrameChanged:(id)arg1;
- (BOOL)_charRangeIsHighlightOptimizable:(struct _NSRange)arg1 fromOldCharRange:(struct _NSRange)arg2;
- (void)_optimizeHighlightForCharRange:(struct _NSRange)arg1 charRange:(struct _NSRange)arg2 fullSelectionCharRange:(struct _NSRange)arg3 oldSelectionFullCharRange:(struct _NSRange)arg4;
- (void)_fastHighlightGlyphRange:(struct _NSRange)arg1 withinSelectedGlyphRange:(struct _NSRange)arg2;
- (void)_ensureMinAndMaxSizesConsistentWithBounds;
- (id)_stripAttachmentCharactersFromString:(id)arg1;
- (id)_stripAttachmentCharactersFromAttributedString:(id)arg1;
- (id)_stripAttachmentCharactersAndParagraphStylesFromAttributedString:(id)arg1;
- (void)_setAttributes:(id *)arg1 newValues:(id)arg2 range:(struct _NSRange)arg3;
- (BOOL)_canAcceptRichText;
- (BOOL)_canImportGraphics;
- (void)_addToTypingAttributes:(id)arg1 value:(id)arg2;
- (void)_addMultipleToTypingAttributes:(id)arg1;
- (void)_remove:(id *)arg1 andAddMultipleToTypingAttributes:(id)arg2;
- (BOOL)_underlineIsOn;
- (BOOL)_outlineIsOn;
- (void)_giveUpFirstResponder:(long long)arg1;
- (void)_fixSharedData;
- (void)_installRulerAccViewForParagraphStyle:(id)arg1 ruler:(id)arg2 enabled:(BOOL)arg3;
- (BOOL)_canChangeRulerMarkers;
- (void)_applyMarkerSettingsFromParagraphStyle:(id)arg1;
- (void)_viewDidDrawInLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_blinkCaret:(id)arg1;
- (void)_invalidateBlinkTimer:(id)arg1;
- (BOOL)_shouldHaveBlinkTimer;
- (BOOL)_couldHaveBlinkTimer;
- (double)_distanceForVerticalArrowKeyMovement;
- (void)_setDistanceForVerticalArrowKeyMovement:(double)arg1;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)arg1;
- (BOOL)_ensureLayoutCompleteForVisibleRectWithExtensionFactor:(double)arg1 minimumExtensionDistance:(double)arg2 repetitions:(unsigned long long)arg3;
- (BOOL)_ensureLayoutCompleteForVisibleRectWithExtension:(BOOL)arg1;
- (void)_setFrameSize:(struct CGSize)arg1 forceScroll:(BOOL)arg2;
- (void)_adjustedCenteredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)_centeredScrollRectToVisible:(struct CGRect)arg1 forceCenter:(BOOL)arg2;
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 forceCenter:(BOOL)arg2;
- (void)_calculatePageRectsWithOperation:(id)arg1 pageSize:(struct CGSize)arg2 layoutAssuredComplete:(BOOL)arg3;
- (void)_calculateTotalScaleForPrintingWithOperation:(id)arg1;
- (double)_provideTotalScaleFactorForPrintOperation:(id)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (BOOL)knowsPagesFirst:(long long *)arg1 last:(long long *)arg2;
- (struct CGRect)rectForPage:(long long)arg1;
- (struct CGRect)_blockRowRectForCharRange:(struct _NSRange)arg1 rect:(struct CGRect)arg2;
- (void)adjustPageHeightNew:(double *)arg1 top:(double)arg2 bottom:(double)arg3 limit:(double)arg4;
- (id)_setWindow:(id)arg1;
- (id)_sharedData;
- (id)_ivars;
- (void)_userReplaceRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)_userDeleteRange:(struct _NSRange)arg1;
- (void)setUndoActionName:(id)arg1;
- (void)_setUndoRedoInProgress:(BOOL)arg1;
- (BOOL)_undoRedoInProgress;
- (void)_clearUndoRegistrations;
- (id)_setFieldEditorUndoManager:(id)arg1;
- (id)_fieldEditorUndoManager;
- (id)attributedSubstringForMarkedRange;
- (void)setWantsNotificationForMarkedText:(BOOL)arg1;
- (BOOL)wantsNotificationForMarkedText;
- (BOOL)_isUnmarking;
- (BOOL)_isInsertingText;
- (void)_clearFindIndicator;
- (id)_findIndicatorPathsForGlyphRange:(struct _NSRange)arg1;
- (BOOL)_prepareFindIndicatorForRange:(struct _NSRange)arg1;
- (void)_generateFindIndicator;
- (void)_pulseFindIndicator:(double)arg1;
- (void)_fadeFindIndicator:(double)arg1;
- (void)_fireFindIndicatorTimer:(id)arg1;
- (void)_showFindIndicator;
- (BOOL)isDrawingFindIndicator;
- (BOOL)_isScrollingToEnd;
- (void)_setScrollingToEnd:(BOOL)arg1;
- (void)_scrollToEnd:(id)arg1;
- (void)_finishedAnimatingScroll;
- (void)_clearMarkedRange;
- (void)_changeTextWritingDirection:(long long)arg1;
- (void)_changeBaseWritingDirection:(long long)arg1;
- (id)tokenizingCharacterSet;
@end

@interface NSTextView (NSSharing)
- (void)_invalidateDisplayForChangeOfSelectionFromRange:(struct _NSRange)arg1 toRange:(struct _NSRange)arg2;
- (struct _NSRange)_fixedSelectionRangeForRange:(struct _NSRange)arg1 affinity:(unsigned long long)arg2;
- (id)_fixedSelectionRangesForRanges:(id)arg1 affinity:(unsigned long long)arg2;
- (id)_selectedRanges;
- (id)selectedRanges;
- (void)setSelectedRange:(struct _NSRange)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (void)setSelectedRanges:(id)arg1 affinity:(unsigned long long)arg2 stillSelecting:(BOOL)arg3;
- (unsigned long long)selectionAffinity;
- (unsigned long long)selectionGranularity;
- (void)setSelectionGranularity:(unsigned long long)arg1;
- (void)setSelectedTextAttributes:(id)arg1;
- (id)selectedTextAttributes;
- (void)setLinkTextAttributes:(id)arg1;
- (id)linkTextAttributes;
- (void)setDisplaysLinkToolTips:(BOOL)arg1;
- (BOOL)displaysLinkToolTips;
- (void)setCentersOnScroll:(BOOL)arg1;
- (BOOL)centersOnScroll;
- (void)setInsertionPointColor:(id)arg1;
- (id)insertionPointColor;
- (BOOL)_usesSplitCursor;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)arg1;
- (void)setMarkedTextAttributes:(id)arg1;
- (id)markedTextAttributes;
- (BOOL)acceptsGlyphInfo;
- (void)setAcceptsGlyphInfo:(BOOL)arg1;
- (void)setRulerVisible:(BOOL)arg1;
- (BOOL)_allowsMultipleTextSelectionByMouse;
- (BOOL)_continuousCheckingAllowed;
- (BOOL)isContinuousSpellCheckingEnabled;
- (void)_preflightSpellChecker:(id)arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (BOOL)isGrammarCheckingEnabled;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)setSpellingState:(long long)arg1 range:(struct _NSRange)arg2;
- (BOOL)usesRuler;
- (void)setUsesRuler:(BOOL)arg1;
- (long long)spellCheckerDocumentTag;
- (id)typingAttributes;
- (void)setTypingAttributes:(id)arg1;
- (void)setDefaultParagraphStyle:(id)arg1;
- (id)defaultParagraphStyle;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (BOOL)shouldChangeTextInRanges:(id)arg1 replacementStrings:(id)arg2;
- (void)didChangeText;
- (id)_blockSafeRangesForRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeForUserTextChange;
- (id)rangesForUserTextChange;
- (struct _NSRange)rangeForUserCharacterAttributeChange;
- (id)rangesForUserCharacterAttributeChange;
- (struct _NSRange)_rangeForUserBaseWritingDirectionChange;
- (id)_rangesForUserBaseWritingDirectionChange;
- (struct _NSRange)_rangeForUserTextWritingDirectionChange;
- (id)_rangesForUserTextWritingDirectionChange;
- (struct _NSRange)rangeForUserParagraphAttributeChange;
- (id)rangesForUserParagraphAttributeChange;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)arg1;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)arg1;
- (void)breakUndoCoalescing;
- (BOOL)isCoalescingUndo;
- (BOOL)allowsImageEditing;
- (void)setAllowsImageEditing:(BOOL)arg1;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)arg1;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)isFieldEditor;
- (void)setFieldEditor:(BOOL)arg1;
- (BOOL)usesFontPanel;
- (void)setUsesFontPanel:(BOOL)arg1;
- (BOOL)usesFindPanel;
- (void)setUsesFindPanel:(BOOL)arg1;
- (BOOL)isRulerVisible;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setSelectedRange:(struct _NSRange)arg1;
- (void)setSelectedRanges:(id)arg1;
- (BOOL)allowsDocumentBackgroundColorChange;
- (void)setAllowsDocumentBackgroundColorChange:(BOOL)arg1;
- (void)showFindIndicatorForRange:(struct _NSRange)arg1;
- (void)cancelFindIndicator;
- (void)_invalidateDisplayForMarkedOrSelectedRange;
- (BOOL)_validateAndCommitTokens;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (void)resignKeyWindow;
- (void)removeFromSuperview;
- (BOOL)smartInsertDeleteEnabled;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (struct _NSRange)smartDeleteRangeForProposedRange:(struct _NSRange)arg1;
- (id)smartInsertBeforeStringForString:(id)arg1 replacingRange:(struct _NSRange)arg2;
- (id)smartInsertAfterStringForString:(id)arg1 replacingRange:(struct _NSRange)arg2;
- (void)smartInsertForString:(id)arg1 replacingRange:(struct _NSRange)arg2 beforeString:(id *)arg3 afterString:(id *)arg4;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)setAutomaticLanguageIdentificationEnabled:(BOOL)arg1;
- (BOOL)isAutomaticLanguageIdentificationEnabled;
- (void)toggleAutomaticLanguageIdentification:(id)arg1;
- (void)setAutomaticDataDetectionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticDataDetectionEnabled;
- (void)toggleAutomaticDataDetection:(id)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (BOOL)isAutomaticTextReplacementEnabled;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (unsigned long long)enabledTextCheckingTypes;
- (void)setEnabledTextCheckingTypes:(unsigned long long)arg1;
- (id)allowedInputSourceLocales;
- (void)setAllowedInputSourceLocales:(id)arg1;
@end

@interface NSView (NSStandardWindowButtons)
- (id)_buttonOfClass:(Class)arg1 action:(SEL)arg2;
@end

@interface NSView (NSThemeFrame_Private)
- (void)_addCornerDirtyRectForRect:(struct CGRect)arg1 list:(struct CGRect *)arg2 count:(int *)arg3;
@end

@interface NSThemeDocumentButtonCell (NSThemeDocumentButtonCellAccessibility)
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface _NSThemeCloseWidgetCell (_NSThemeCloseWidgetCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityEditedAttribute;
- (BOOL)accessibilityIsEditedAttributeSettable;
@end

@interface _NSThemeWidgetCell (_NSThemeWidgetCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilityPerformAction:(id)arg1;
@end

@interface NSToolTipManager (NSToolTipManagerDynamicToolTipSupport)
- (void)_displayTemporaryToolTipForView:(id)arg1 withString:(id)arg2;
- (void)_displayTemporaryToolTipForView:(id)arg1 withDisplayDelegate:(id)arg2 displayInfo:(id)arg3;
- (void)_getDisplayDelay:(double *)arg1 inQuickMode:(char *)arg2 forView:(id)arg3;
- (void)_orderOutAllToolTipsImmediately:(BOOL)arg1;
@end

@interface _NSToolbarButtonCell (_NSToolbarButtonCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
@end

@interface _NSToolbarClippedItemsIndicatorCell (_NSToolbarClippedItemsIndicatorCellAccessibility)
- (id)accessibilityChildrenAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
@end

@interface NSToolbarItem (NSInternal_CommonAndCustomTypeMethods)
+ (id)newSeparatorItem;
+ (id)separatorItemIdentifier;
+ (id)spaceItemIdentifier;
- (void)_beginDrawForDragging;
- (void)_endDrawForDragging;
- (BOOL)_isDrawingForDragImage;
- (BOOL)isSeparatorItem;
- (int)_itemType;
- (id)_view;
- (id)_menuFormRepresentation;
- (void)_setIsUserRemovable:(BOOL)arg1;
- (BOOL)_isUserRemovable;
- (void)_setToolbar:(id)arg1;
- (id)_toolbar;
- (BOOL)_handleSendControlSize:(unsigned long long)arg1 toView:(id)arg2;
- (BOOL)_handleSendControlSize:(unsigned long long)arg1 toCellOfView:(id)arg2;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (BOOL)usesMenuFormRepresentationInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInPalette;
- (BOOL)_allowToolbarToStealEvent:(id)arg1;
- (unsigned long long)_labelAlignment;
- (id)_itemViewer;
- (void)_setItemViewer:(id)arg1;
- (id)_button;
- (id)_buttonAtIndex:(unsigned long long)arg1;
- (id)_initialViewToSelectFromDirection:(long long)arg1;
- (BOOL)_participatesInDefiningMinimumGridWidthForCustomizationPalette;
@end

@interface NSToolbarItem (NSToolbarItemCustomType)
@end

@interface NSToolbarItem (NSToolbarItemCommonType)
- (struct CGSize)_buttonFrameSizeForSizeMode:(unsigned long long)arg1;
@end

@interface NSWindow (_NSEvilHacks)
- (void)_evilHackToClearlastLeftHitInWindow;
@end

@interface NSToolbarItemViewer (NSToolbarItemViewerAccessibility)
- (BOOL)_accessibilityTreatSegmentedControlAsToolbarButtons:(id)arg1;
- (BOOL)_accessibilityTreatButtonAsToolbarButton:(id)arg1;
- (BOOL)_accessibilityIsSpaceOrSeparatorItem;
- (BOOL)_accessibilityIsCommonToolbarButtonItem;
- (BOOL)_accessibilityIsInCustomizationSheet;
- (id)_accessibilityParentAdjustedHitTestElement:(id)arg1 atLocation:(id)arg2;
- (id)_accessibilityParentAdjustedFocusedUIElement:(id)arg1;
- (id)_accessibilityTitleElement;
- (id)_accessibilityLabelElements;
- (long long)_accessibilityToolbarItemViewerConfiguration;
- (Class)_accessibilityToolbarItemViewerHelperClass;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)_accessibilityShowMenu:(id)arg1;
@end

@interface NSToolbarItemViewer (NSToolbarItemViewerLabelAccessibility)
- (id)_accessibilityToolbarItemLabel;
- (id)_accessibilityToolbarItemLabelAtIndex:(unsigned long long)arg1;
- (BOOL)element:(id)arg1 hasOverriddenAttribute:(id)arg2;
- (void)_accessibilityConfigureViewItemToolbarItem;
- (void)_accessibilityConfigureToolbarItem;
@end

@interface _NSToolbarItemViewerLabelCellPopUpCell (_NSToolbarItemViewerLabelCellPopUpCellAccessibility)
- (id)accessibilityAttributeNames;
- (BOOL)_accessibilityMenuFormRepresentationHasSubmenu;
- (BOOL)_accessibilityMenuFormRepresentationHasOwnTargetAction;
- (BOOL)_accessibilityMenuFormRepresentationHasSubmenuAndOwnTargetAction;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityHelpAttribute;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionNames;
@end

@interface _NSToolbarItemViewerLabelView (_NSToolbarItemViewerLabelViewAccessibility)
- (id)accessibilityHitTest:(struct CGPoint)arg1;
@end

@interface NSToolbarSeparatorItem (NSToolbarItemCustomType)
- (struct CGSize)minSize;
- (struct CGSize)maxSize;
- (void)configureForDisplayMode:(unsigned long long)arg1 andSizeMode:(unsigned long long)arg2;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned long long)arg1;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned long long)arg1;
@end

@interface NSToolbarView (_NSPrivate_Internal)
- (void)_toolbarContentsChanged:(id)arg1;
- (void)_toolbarAttributesChanged:(id)arg1;
- (void)_toolbarContentsAttributesChanged:(id)arg1;
- (void)_registerForToolbarNotifications:(id)arg1;
- (void)_unregisterForToolbarNotifications:(id)arg1;
@end

@interface NSToolbarView (_ItemDragAndDropSupport)
- (id)_findItemViewerAtPoint:(struct CGPoint)arg1;
- (id)_computeDragImageFromItemViewer:(id)arg1;
- (id)_dragDataItemViewer;
- (struct CGRect)_rectOfItemAtIndex:(long long)arg1;
- (id)_createInsertionGapItemForItemViewer:(id)arg1 forDraggingSource:(id)arg2;
- (id)_dragDataInsertionGapItemViewer;
- (long long)_layoutOrderInsertionIndexForPoint:(struct CGPoint)arg1 previousIndex:(long long)arg2;
- (void)removeItemViewerAtIndex:(long long)arg1;
- (void)insertItemViewer:(id)arg1 atIndex:(long long)arg2;
- (void)_startInsertionOptimizationWithDragSource:(id)arg1;
- (void)_endInsertionOptimizationWithDragSource:(id)arg1 force:(BOOL)arg2;
- (void)_dragEndedNotification:(id)arg1;
- (void)_updateDragInsertion:(id)arg1;
- (void)stopUpdateInsertionAnimation;
- (double)_computeTravelTimeForInsertionOfItemViewer:(id)arg1;
- (void)beginUpdateInsertionAnimationAtIndex:(long long)arg1 throwAwayCacheWhenDone:(BOOL)arg2;
- (unsigned long long)_findIndexOfFirstDuplicateItemWithItemIdentifier:(id)arg1;
- (BOOL)_isAcceptableDragSource:(id)arg1 pasteboard:(id)arg2 dragInfo:(id)arg3;
- (id)_itemForDraggingInfo:(id)arg1 draggingSource:(id)arg2;
- (unsigned long long)dstDraggingEnteredAtPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (unsigned long long)dstDraggingMovedToPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (void)_dstDraggingExitedAtPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2 stillInViewBounds:(BOOL)arg3;
- (void)dstDraggingExitedAtPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (BOOL)dstDraggingDepositedAtPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (BOOL)_canMoveItemAsSource:(id)arg1;
- (BOOL)_wantsUserCancelledOperation;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)_draggingModeForInfo:(id)arg1;
- (double)_computeEarliestDateForDragAnimationForInfo:(id)arg1;
- (BOOL)_beginSrcDragItemViewerWithEvent:(id)arg1;
- (BOOL)_isItemViewerMoveable:(id)arg1;
- (BOOL)_beginSrcDragItemWithEvent:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)_setImageOnDragSession:(id)arg1 withOffset:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
@end

@interface NSToolbarView (NSToolbarViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityOverflowButtonAttribute;
- (BOOL)accessibilityIsOverflowButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSTreeController (NSManagedController)
- (void)setUsesLazyFetching:(BOOL)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (id)_relationshipKeyPathsForPrefetching;
- (id)defaultFetchRequest;
- (BOOL)_performFetchWithRequest:(id)arg1 merge:(BOOL)arg2 error:(id *)arg3;
- (void)_reactToMatchingInsertions:(id)arg1 deletions:(id)arg2 refreshed:(id)arg3;
@end

@interface NSWindow (MotionCompatibility)
- (void)_pauseUIHeartBeatingInView:(id)arg1;
- (void)_resumeUIHeartBeatingInView:(id)arg1;
@end

@interface NSView (NSDefinition)
- (void)showDefinitionForAttributedString:(id)arg1 range:(struct _NSRange)arg2 options:(id)arg3 baselineOriginProvider:(id)arg4;
- (void)showDefinitionForAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2;
@end

@interface NSView (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSView (NSOldNIBLoadingSupport)
- (void)_setUsesSpecialArchiving:(BOOL)arg1;
@end

@interface NSView (NSPrivateSurfaceColorSpaceSupport)
- (id)_surfaceColorSpace;
- (void)_setSurfaceColorSpace:(id)arg1;
@end

@interface NSView (NSPrivateHLTBSupport)
- (BOOL)_boundToHIView;
- (BOOL)_drawingByHIView;
- (void)_setHIViewIsDrawing:(BOOL)arg1;
@end

@interface NSView (NSPrivateJavaSupport)
- (void)_clipViewAncestorWillScroll:(id)arg1;
- (void)_clipViewAncestorDidScroll:(id)arg1;
@end

@interface NSView (NSPrivateFocusRingSupport)
- (id)_focusRingBleedRegion;
- (id)_focusRingClipAncestor;
@end

@interface NSView (NSPrivateIBSupport)
+ (void)_setHiddenViewsTint:(id)arg1;
+ (id)_hiddenViewsTint;
- (BOOL)_drawsWithTintWhenHidden;
- (void)_setDrawsWithTintWhenHidden:(BOOL)arg1;
@end

@interface NSView (NSInternal)
- (BOOL)_viewDying;
- (BOOL)_canDrawWindowGrowBox;
- (BOOL)_attemptConcurrentViewDrawingForSelfAndDescendants;
- (id)_copySubviewsInOrderOfDisplay;
- (void)_gainedDescendantThatCanDrawConcurrently;
- (void)_recursiveClearTimeStats;
- (void)_allocAuxiliary:(BOOL)arg1;
- (id)_layerTreeDescription;
- (id)_briefDescription;
- (id)_subtreeDescriptionWithDepth:(long long)arg1;
- (id)_subtreeDescription;
- (void)_setWindowNeedsDisplayInViewsDrawableRect;
- (void)_autoInvalidateBeforeFrameSizeChange;
- (void)_autoInvalidateAfterFrameSizeChange;
- (void)_startLiveAnimation;
- (void)_endLiveAnimation;
- (BOOL)_drawsNothing;
- (void)_updateDrawsNothing;
- (BOOL)_dontSuppressLayerAnimation;
- (void)_allowAnimated_addSubview:(id)arg1;
- (void)_allowAnimated_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)_allowAnimated_removeFromSuperview;
- (void)_allowAnimated_removeFromSuperviewWithoutNeedingDisplay;
- (void)_allowAnimated_replaceSubview:(id)arg1 with:(id)arg2;
- (void)_allowAnimated_setAlphaValue:(double)arg1;
- (void)_allowAnimated_setBackgroundFilters:(id)arg1;
- (void)_allowAnimated_setBoundsOrigin:(struct CGPoint)arg1;
- (void)_allowAnimated_setBoundsSize:(struct CGSize)arg1;
- (void)_allowAnimated_setCompositingFilter:(id)arg1;
- (void)_allowAnimated_setContentFilters:(id)arg1;
- (void)_allowAnimated_setFrameCenterRotation:(double)arg1;
- (void)_allowAnimated_setFrameOrigin:(struct CGPoint)arg1;
- (void)_allowAnimated_setFrameRotation:(double)arg1;
- (void)_allowAnimated_setFrameSize:(struct CGSize)arg1;
- (void)_allowAnimated_setHidden:(BOOL)arg1;
- (void)_allowAnimated_setShadow:(id)arg1;
- (void)_clearDirtyRectsForTreeInRect:(struct CGRect)arg1;
- (void)_mergeRegionInvalidatedDuringDisplayIntoDirtyRegion;
- (void)_trimRegionInvalidatedDuringDisplayToRectsJustDrawn;
- (id)_subviewsExcludingHiddenViews;
- (void)_recursiveDisableTrackingRectsForHiddenViews;
- (void)_recursiveEnableTrackingRectsForNonHiddenViews;
- (void)_recursiveOrderOutSurfacesForHiddenViews;
- (void)_recursiveOrderFrontSurfacesForNonHiddenViews;
- (void)_addTrackingTag:(long long)arg1;
- (void)_addTrackingRects:(struct CGRect *)arg1 owner:(id)arg2 userDataList:(void **)arg3 assumeInsideList:(char *)arg4 trackingNums:(long long *)arg5 count:(long long)arg6;
- (BOOL)_uncachedShouldUseTrackingAreasForToolTips;
- (BOOL)_shouldUseTrackingAreasForToolTips;
- (void)_enableOrDisableTrackingArea:(id)arg1;
- (void)_enableOrDisableTrackingAreas;
- (long long)_addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(long long)arg5;
- (int)_trackingAreasDirty;
- (void)_recursiveSetTrackingAreasDirty:(id)arg1;
- (void)_setTrackingAreasDirty:(int)arg1;
- (void)_invalidateCursorRects;
- (void)_disableTrackingArea:(id)arg1;
- (void)_enableTrackingArea:(id)arg1;
- (void)_installTrackingArea:(id)arg1;
- (void)_installTrackingAreas:(id)arg1;
- (void)_uninstallTrackingArea:(id)arg1;
- (void)_uninstallTrackingAreas;
- (void)_uninstallRemovedTrackingAreas;
- (void)_updateTrackingLocation:(id)arg1;
- (void)_updateTrackingAreas;
- (BOOL)_reallyNeedsDisplayForBounds;
- (void)_clearDirtyRectsForLockedTree;
- (void)_clearDirtyRectsForTree;
- (void)_getDirtyRects:(struct CGRect **)arg1 clippedToRect:(struct CGRect)arg2 count:(unsigned long long *)arg3 boundingBox:(struct CGRect *)arg4;
- (unsigned long long)_effectiveFocusRingType;
- (BOOL)_needsRedisplayOnFrameChange;
- (id)_dirtyRegion;
- (void)_setImpactsWindowMoving:(BOOL)arg1;
- (BOOL)_impactsWindowMoving;
- (struct CGRect)_opaqueRect;
- (void)_compositeHiddenViewHighlight;
- (void)_handleBoundsChangeForSubview:(id)arg1;
- (void)_handleFrameChangeForSubview:(id)arg1;
- (BOOL)_layerTreeRendererPaused;
- (void)_pauseLayerTreeRenderer;
- (void)_resumeLayerTreeRenderer;
- (void)_pauseLayerTreeRenderingForUserSwitchOut:(id)arg1;
- (void)_resumeLayerTreeRenderingForUserSwitchIn:(id)arg1;
- (void)_pauseLayerTreeRenderingForWindowOrderOut:(id)arg1;
- (void)_resumeLayerTreeRenderingForWindowOrderIn:(id)arg1;
- (void)_registerForWindowOrderNotifications:(BOOL)arg1;
- (struct _CAView *)_layerTreeRenderer;
- (void)_setLayerTreeRenderer:(struct _CAView *)arg1;
- (struct _CAView *)_createLayerTreeRenderer;
- (void)_forceUpdateLayerTreeRenderer;
- (void)_updateLayerTreeRenderer;
- (void)_handleRootLayerBoundsChange;
- (void)_createLayerAndInitialize;
- (BOOL)_canUseTiledBackingLayer;
- (void)_transplantReplacementBackingLayer:(id)arg1;
- (BOOL)_appkitManagesLayer;
- (void)_recursiveDisplayViewsIntoLayersIfNeeded;
- (void)_updateAllLayerPropertiesFromView;
- (BOOL)_needsRedrawForMovement;
- (void)_setHidden:(BOOL)arg1 setNeedsDisplay:(BOOL)arg2;
- (BOOL)_needsDisplayInRect:(struct CGRect)arg1;
- (void)_removeTrackingRects:(long long *)arg1 count:(long long)arg2;
- (id)_screenAtPoint:(struct CGPoint)arg1;
- (struct CGPoint)_autoscrollAmountForEvent:(id)arg1;
- (struct CGPoint)_autoscrollAmountForWindowPoint:(struct CGPoint)arg1;
- (BOOL)_shouldAutoscrollForEvent:(id)arg1;
- (double)_autoscrollScreenEdgeFactorFromPoint:(struct CGPoint)arg1;
- (void)_recursive:(BOOL)arg1 displayRectIgnoringOpacity:(struct CGRect)arg2 inContext:(id)arg3 topView:(BOOL)arg4;
- (BOOL)_isLayerBacked;
- (BOOL)_canAnimateResizeUsingCachedContents;
- (id)_rootmostLayerTreeHostAncestor;
- (BOOL)_layerTreeRendererSurfaceGone;
- (void)_setLayerTreeRendererSurfaceGone:(BOOL)arg1;
- (void)_setLayerNeedsDisplayInViewRect:(struct CGRect)arg1;
- (void)_setHasLayerBackedOpenGLContext:(BOOL)arg1;
- (void)_setHasSurfaceBackedOpenGLContext:(BOOL)arg1;
- (BOOL)_autoscalesBoundsToPixelUnits;
- (void)_setAutoscalesBoundsToPixelUnits:(BOOL)arg1;
- (BOOL)_hasTiledBackingLayer;
- (BOOL)_NSView_isWebClipView;
- (BOOL)_updateGrowBoxForWindowFrameChange;
- (BOOL)_hasRectangularFocusRingAroundFrame;
@end

@interface NSView (NSSurface)
- (void)_viewSurfaceWillGoAway:(id)arg1;
- (void)_viewSurfaceDidComeBack:(id)arg1;
- (void)_setSurface:(id)arg1;
- (id)_surface;
- (struct CGRect)_surfaceBounds;
- (void)_surfaceMoved:(id)arg1;
- (void)_surfaceResized:(id)arg1;
- (void)_setEffectiveSurfaceColorSpace:(id)arg1;
- (void)_updateInheritedSurfaceColorSpace;
- (void)_syncSurfaceIfPostponed;
- (void)_clearPostponedSurfaceSync;
@end

@interface NSView (NSImageCacheViewCompatibility)
- (BOOL)lockFocusIfCanDrawInFrame:(struct CGRect)arg1 flipped:(BOOL)arg2 clip:(BOOL)arg3;
@end

@interface NSView (NSPrivateLayerSupport)
+ (BOOL)_canDrawOnBackgroundThread;
- (id)_createLayer;
- (unsigned int)_CAViewFlags;
- (BOOL)_CAViewDrawIntoWindow;
- (void)_recursiveFreezeLayersBeforeTransplant;
- (void)_recursiveThawLayersAfterTransplant;
@end

@interface NSView (NSViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)_accessibilityParentForSubview:(id)arg1;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (void)_accessibilityShowMenu:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityPopUpMenuParent:(id)arg1;
- (void)accessibilityPopUpMenuCreated:(id)arg1;
@end

@interface NSViewAnimation (NSInternal)
- (void)_setupAnimationInfo;
- (void)_clearAnimationInfo;
@end

@interface NSWindow (NSUserInterfaceItemIdentificationSupport) <NSUserInterfaceItemIdentification>
- (id)userInterfaceItemIdentifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
@end

@interface NSWindow (NSTimeMachineSupport)
- (void)setTimeMachineDelegate:(id)arg1;
- (id)timeMachineDelegate;
@end

@interface NSWindow (NSWindow_Scale)
+ (double)_scaleFactorForStyleMask:(unsigned long long)arg1;
+ (void)_initializeCoreUI;
+ (struct OpaqueCUIRendererRef *)coreUIRenderer;
- (void)_setScaleFactor:(double)arg1;
- (double)_scaleFactor;
- (struct CGAffineTransform)_baseTransform;
- (void)_addMouseMovedListener:(id)arg1;
- (void)_removeMouseMovedListener:(id)arg1;
- (void)_updateMouseMovedState;
@end

@interface NSWindow (NSWindow_Performance)
- (void)_automateLiveResize;
@end

@interface NSWindow (NSWindow_Carbon)
- (unsigned int)_carbonWindowClass;
- (struct OpaqueWindowPtr *)_windowRef;
- (BOOL)_hasWindowRef;
- (BOOL)_managesWindowRef;
- (struct OpaqueWindowPtr *)_windowRefCreatedForCarbonApp;
- (struct OpaqueWindowPtr *)_windowRefCreatedForCarbonControl;
- (BOOL)_hasWindowRefCreatedForCarbonControl;
- (void)_removeWindowRef;
- (BOOL)_wrapsCarbonWindow;
@end

@interface NSWindow (NSWindow_Theme)
+ (BOOL)_sendDockMenuCommand:(unsigned int)arg1 withTag:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3;
- (void)setShadowStyle:(unsigned long long)arg1;
- (unsigned long long)shadowStyle;
- (void)_setHasShadow:(BOOL)arg1;
- (BOOL)_hasShadow;
- (void)_setContentHasShadow:(BOOL)arg1;
- (BOOL)_contentHasShadow;
- (BOOL)_hasActiveAppearance;
- (BOOL)_hasActiveAppearanceIgnoringKeyFocus;
- (BOOL)_hasKeyAppearance;
- (BOOL)_hasMainAppearance;
- (void)_setHasActiveAppearance:(BOOL)arg1;
- (BOOL)_hasActiveAppearanceForStandardWindowButton:(unsigned long long)arg1;
- (id)_customImageForStandardWindowButton:(unsigned long long)arg1 state:(unsigned long long)arg2 dirty:(BOOL)arg3 controlTint:(unsigned long long)arg4;
- (BOOL)_containedMenusAreEligibleForKeyEquivalents;
- (struct CGRect)_growBoxRect;
- (id)_growBoxView;
- (void)_setGrowBoxView:(id)arg1;
- (void)_setShowOpaqueGrowBoxForOwner:(id)arg1;
- (void)_setShowOpaqueGrowBox:(BOOL)arg1;
- (id)_growBoxOwner;
- (BOOL)_showOpaqueGrowBox;
- (void)_setForceActiveControls:(BOOL)arg1;
- (BOOL)_controlAppearanceChangesOnKeyStateChange;
- (BOOL)_hasActiveControls;
- (double)_transparency;
- (BOOL)_needsToResetDragMargins;
- (void)_setNeedsToResetDragMargins:(BOOL)arg1;
- (BOOL)_needsToRemoveFieldEditor;
- (void)_setNeedsToRemoveFieldEditor:(BOOL)arg1;
- (BOOL)_registerWithDockIfNeeded;
- (void *)_dockItem;
- (BOOL)_prepareToMinimize;
- (void)_minimizeSucceeded:(BOOL)arg1;
- (BOOL)_minimizeToDock;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDStruct_d41e72e8 *)arg1;
- (void)_addHeartBeatClientView:(id)arg1;
- (void)_removeHeartBeartClientView:(id)arg1;
- (void)guessDockTitle:(id)arg1;
- (BOOL)dockTitleIsGuess;
- (void)cacheMiniwindowTitle:(id)arg1 guess:(BOOL)arg2;
- (unsigned long long)_autoResizeState;
- (void)stashSize;
- (id)restoreWindowOnDockDeath;
- (id)restoreWindowOnDockReincarnation;
- (id)showDeminiaturizedWindow;
- (id)_updateFrameWidgets;
- (id)_updateButtonsForModeChanged;
- (void)updateInDock;
- (void)_selectWindow:(id)arg1;
- (struct __CFDictionary *)_createWindowsMenuEntryWithTitle:(id)arg1 enabled:(BOOL)arg2;
- (void)_setDefaultButtonPaused:(BOOL)arg1;
- (BOOL)_defaultButtonPaused;
- (void)_setIsMinimized:(BOOL)arg1;
@end

@interface NSWindow (NSCarbonExtensions)
- (void)_setWindowRef:(struct OpaqueWindowPtr *)arg1;
- (id)initWithWindowRef:(void *)arg1;
- (void *)windowRef;
- (void)_hiliteWindow:(struct OpaqueWindowPtr *)arg1 fromWindow:(id)arg2;
- (void)_setCursorRect:(struct CGRect)arg1 index:(long long)arg2;
- (void)_discardCursorRect:(long long)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)_setCursorForMouseLocation:(struct CGPoint)arg1;
- (id)_findCursorForView:(id)arg1;
@end

@interface NSWindow (NSInputManager)
- (void)_notifyIM:(SEL)arg1 withObject:(id)arg2;
@end

@interface HICocoaWindowAdapter (HICocoaWindowAdapterAccessibility)
- (id)accessibilityFocusedUIElement;
@end

@interface HICocoaWindowContentView (HICocoaWindowContentViewAccessibility)
- (id)_accessibilityParentForSubview:(id)arg1;
@end

@interface NSStatusBarWindow (NSStatusBarWindowAccessibility)
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityChildrenAttribute;
@end

@interface NSToolTipPanel (NSToolTipPanelAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (void)accessibilityPostNotification:(id)arg1;
@end

@interface NSSavePanel (NSSavePanelAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
@end

@interface NSPanel (NSPanelAccessibility)
- (id)accessibilitySubroleAttribute;
@end

@interface NSWindow (NSWindowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (BOOL)_accessibilityIsModal;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (struct CGRect)_accessibilityTitleRect;
- (id)_accessibilityTitleCell;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)_accessibilitySheetParent;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (void)accessibilitySetPositionAttribute:(id)arg1;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)arg1;
- (id)accessibilityMainAttribute;
- (BOOL)accessibilityIsMainAttributeSettable;
- (void)accessibilitySetMainAttribute:(id)arg1;
- (id)accessibilityMinimizedAttribute;
- (BOOL)accessibilityIsMinimizedAttributeSettable;
- (void)accessibilitySetMinimizedAttribute:(id)arg1;
- (id)accessibilityCloseButtonAttribute;
- (BOOL)accessibilityIsCloseButtonAttributeSettable;
- (id)accessibilityZoomButtonAttribute;
- (BOOL)accessibilityIsZoomButtonAttributeSettable;
- (id)accessibilityMinimizeButtonAttribute;
- (BOOL)accessibilityIsMinimizeButtonAttributeSettable;
- (id)accessibilityToolbarButtonAttribute;
- (BOOL)accessibilityIsToolbarButtonAttributeSettable;
- (id)accessibilityProxyAttribute;
- (BOOL)accessibilityIsProxyAttributeSettable;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (struct CGRect)_accessibilityGrowBoxRect;
- (id)accessibilityGrowAreaAttribute;
- (BOOL)accessibilityIsGrowAreaAttributeSettable;
- (id)accessibilityDefaultButtonAttribute;
- (BOOL)accessibilityIsDefaultButtonAttributeSettable;
- (id)accessibilityCancelButtonAttribute;
- (BOOL)accessibilityIsCancelButtonAttributeSettable;
- (id)accessibilityDocumentAttribute;
- (BOOL)accessibilityIsDocumentAttributeSettable;
- (id)accessibilityModalAttribute;
- (BOOL)accessibilityIsModalAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (struct CGRect)accessibilityFocusRingBounds;
- (id)_accessibilityViewCorrectedForFieldEditor:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (long long)accessibilityWindowNumber;
- (BOOL)accessibilityIsChildOfApp;
- (id)accessibilityWindowAttributeValueHelper;
- (id)accessibilityTopLevelUIElementAttributeValueHelper;
- (void)accessibilityPostNotification:(id)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
@end

@interface NSWindow (NSScripting)
- (BOOL)hasCloseBox;
- (BOOL)hasTitleBar;
- (BOOL)isFloatingPanel;
- (BOOL)isMiniaturizable;
- (BOOL)isModalPanel;
- (BOOL)isResizable;
- (BOOL)isZoomable;
- (long long)orderedIndex;
- (void)setIsMiniaturized:(BOOL)arg1;
- (void)setIsVisible:(BOOL)arg1;
- (void)setIsZoomed:(BOOL)arg1;
- (void)setOrderedIndex:(long long)arg1;
- (id)boundsAsQDRect;
- (id)document;
- (long long)uniqueID;
- (void)setBoundsAsQDRect:(id)arg1;
- (id)objectSpecifier;
- (id)handleCloseScriptCommand:(id)arg1;
- (id)handlePrintScriptCommand:(id)arg1;
- (id)handleSaveScriptCommand:(id)arg1;
@end

@interface NSApplication (NSResponsibleDelegate)
- (id)_responsibleDelegateForSelector:(SEL)arg1;
@end

@interface NSArray (_NSBinderKeyValueCodingAdditions)
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3 ofObjectAtIndex:(unsigned long long)arg4;
@end

@interface NSObject (_NSBinderKeyValueCodingAdditions)
- (void)_invokeSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
@end

@interface NSObject (_NSBindingAdaptorAccess)
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (void)_releaseBindingAdaptor;
@end

@interface NSPanel (NSErrorPresentation)
- (id)presentationWindowForError:(id)arg1 originatedInWindow:(id)arg2;
@end

@interface NSResponder (NSErrorPresentationAdditions)
- (id)presentationWindowForError:(id)arg1 originatedInWindow:(id)arg2;
@end

@interface NSApplication (NSAppleMenu)
- (void)setAppleMenu:(id)arg1;
@end

@interface NSApplication (NSWindowCache)
- (BOOL)_lockOrUnlockWindowCycleList:(BOOL)arg1;
- (id)_getLockedWindowListForCycle;
- (void)_unlockWindowListForCycle;
- (void)_invalidateWindowListForCycle;
- (CDStruct_03e0cfc4 *)_getWindowCache:(id)arg1 add:(BOOL)arg2;
- (id)_findWindowUsingCache:(long long)arg1;
- (id)_findWindowUsingRealWindowNumber:(long long)arg1;
- (void)_updateWindowsUsingCache;
- (void)_setCacheWindowNum:(long long)arg1 forWindow:(id)arg2;
- (BOOL)_appHasVisibleWindowOrPanel;
- (BOOL)_appHasOpenNSWindow;
- (BOOL)_appHasNonMiniaturizedWindow;
- (void)_checkForTerminateAfterLastWindowClosed:(id)arg1;
- (void)_setVisibleInCache:(BOOL)arg1 forWindow:(id)arg2;
- (void)_removeWindowFromCache:(id)arg1;
- (BOOL)_isVisibleUsingCache:(id)arg1;
- (void)_setHidesOnDeactivateInCache:(BOOL)arg1 forWindow:(id)arg2;
- (void)_makeHODWindowsPerform:(SEL)arg1;
- (void)_setModalInCache:(BOOL)arg1 forWindow:(id)arg2;
- (void)_makeModalWindowsPerform:(SEL)arg1;
- (void)_restoreMiniaturizedWindow;
@end

@interface NSApplication (NSServicesMenuPrivate)
- (id)servicesMenu;
- (void)setServicesMenu:(id)arg1;
- (BOOL)_servicesMenuHasBeenBuilt;
- (void)registerServicesMenuSendTypes:(id)arg1 returnTypes:(id)arg2;
- (void)_rebuildOrUpdateServicesMenu:(BOOL)arg1;
- (BOOL)_launchSpellChecker:(long long)arg1 error:(id *)arg2;
- (BOOL)_launchSpellChecker:(long long)arg1;
- (BOOL)_fillSpellCheckerPopupButton:(id)arg1;
@end

@interface NSWindow (NSDrag)
- (void)registerForDraggedTypes:(id)arg1;
- (void)_registerDragTypesLater;
- (void)_registerDragTypes:(id)arg1;
- (id)_registerDragTypesIfNeeded;
- (void)_unregisterDragTypes;
- (void)unregisterDraggedTypes;
- (id)_findDragTargetFrom:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
@end

@interface NSView (NSDrag)
- (void)registerForDraggedTypes:(id)arg1;
- (void)unregisterDraggedTypes;
- (id)registeredDraggedTypes;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (BOOL)_treeHasDragTypes;
- (void)_addDragTypesTo:(id)arg1;
- (BOOL)dragFile:(id)arg1 fromRect:(struct CGRect)arg2 slideBack:(BOOL)arg3 event:(id)arg4;
- (BOOL)dragPromisedFilesOfTypes:(id)arg1 fromRect:(struct CGRect)arg2 source:(id)arg3 slideBack:(BOOL)arg4 event:(id)arg5;
@end

@interface NSView (NSDragInternal)
- (void)_registerForDraggedTypes:(id)arg1 later:(BOOL)arg2;
@end

@interface NSApplication (NSWindowsMenu_Private)
- (void)_addWindowsMenu:(struct __CFArray *)arg1 enabled:(BOOL)arg2;
@end

@interface NSApplication (NSWindowsMenu)
- (id)windowsMenu;
- (void)setWindowsMenu:(id)arg1;
- (void)miniaturizeAll:(id)arg1;
- (void)closeAll:(id)arg1;
- (void)zoomAll:(id)arg1;
- (void)arrangeInFront:(id)arg1;
- (void)alternateArrangeInFront:(id)arg1;
- (void)changeWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)updateWindowsItem:(id)arg1;
- (void)addWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)removeWindowsItem:(id)arg1;
@end

@interface NSColor (cgGraphicsOps_Private)
+ (id)controlFillColor;
@end

@interface NSWindow (NSWindow_CarbonEventHandlers)
- (void)_installCarbonAppDockHandlers;
- (void)_setWindowDepth;
- (void)_installRootMetricsHandler;
- (void)_installCarbonWindowEventHandlers;
- (void)_installCocoaWindowEventHandlers;
- (void)_installCocoaWindowEventHandlersForCocoaSheetsAttachedToCarbonModalParent;
- (void)_removeCocoaWindowEventHandlersForCocoaSheetsAttachedToCarbonModalParent;
- (void)_syncFrameMetrics;
- (void)_removeEventHandlers;
@end

@interface NSThemeDocumentButton (NSThemeFramePathExtensions)
- (Class)menuClass;
- (struct CGPoint)menuLocation;
- (void)showPopup;
- (void)pathCellClicked:(id)arg1;
@end

@interface NSView (NSPrinting2)
- (id)printJobTitle;
- (BOOL)knowsPagesFirst:(long long *)arg1 last:(long long *)arg2;
- (BOOL)_knowsPagesFirst:(long long *)arg1 last:(long long *)arg2;
- (double)_provideTotalScaleFactorForPrintOperation:(id)arg1;
- (double)_calcMarginSize:(struct CGSize *)arg1 operation:(id)arg2;
- (void)_calcWidthsWithMargin:(const struct CGSize *)arg1 operation:(id)arg2;
- (void)_calcHeightsWithMargin:(const struct CGSize *)arg1 operation:(id)arg2;
- (void)adjustPageWidthNew:(double *)arg1 left:(double)arg2 right:(double)arg3 limit:(double)arg4;
- (void)adjustPageHeightNew:(double *)arg1 top:(double)arg2 bottom:(double)arg3 limit:(double)arg4;
- (struct CGPoint)locationOfPrintRect:(struct CGRect)arg1;
- (void)drawSheetBorderWithSize:(struct CGSize)arg1;
- (void)_getPageHeaderRect:(struct CGRect *)arg1 pageFooterRect:(struct CGRect *)arg2 forBorderSize:(struct CGSize)arg3;
- (void)drawPageBorderWithSize:(struct CGSize)arg1;
- (id)_pageHeaderAndFooterTextAttributes;
- (id)pageHeader;
- (id)pageFooter;
@end

@interface NSIconViewCell (NSNavBrowserCellRevealovers)
- (BOOL)_needsRevealoverWithFrame:(struct CGRect *)arg1 trackingRect:(struct CGRect *)arg2 inView:(id)arg3;
- (void)_drawRevealoverWithFrame:(struct CGRect)arg1 inView:(id)arg2 forView:(id)arg3;
@end

@interface NSMenuItemViewer (NSAccessibility)
- (id)accessibilityWindowAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityParentAttribute;
@end

@interface NSObject (NSNavRuleEditorChildItems)
- (void)nextSlicePiece:(id)arg1;
@end

@interface NSDictionaryController (NSManagedController)
- (id)_managedProxy;
- (void)setManagedObjectContext:(id)arg1;
- (void)setEntityName:(id)arg1;
- (void)setFetchPredicate:(id)arg1;
@end

@interface NSIndexPath (NSIndexPathPrivateUtilities)
+ (id)parentIndexPathForIndexPaths:(id)arg1;
- (BOOL)descendsFrom:(id)arg1;
@end

@interface NSAnimationContext (NSInternal)
+ (void)_scheduleAnimationContextStackFlush;
+ (unsigned long long)_groupingDepth;
+ (void)_unwindToGroupingDepth:(unsigned long long)arg1;
- (void)_enqueueAnimation:(id)arg1 forObject:(id)arg2 keyPath:(id)arg3 targetValue:(id)arg4;
- (void)_flushAnimations;
@end

@interface NSView (NSLayerKitGlue)
- (struct CGRect)_desiredLayerBounds;
- (BOOL)_desiredLayerSizeMeritsTiledBackingLayer:(struct CGSize)arg1;
- (void)_removeLayerIfOwnedByAppKit;
- (void)_centerLayerInParentLayer;
- (void)_updateLayerAnchorPointForFlippedSuperview;
- (void)_updateLayerAnchorPointForUnflippedSuperview;
- (void)_updateSublayerPositionsForFlippedSuperview;
- (void)_updateLayerGeometryFromView;
- (void)_updateLayerShadowFromView;
- (void)_updateLayerHiddenStateFromView;
- (void)_updateLayerFiltersFromView;
- (void)_updateLayerBackgroundFiltersFromView;
- (void)_updateLayerCompositingFilterFromView;
- (void)_updateLayerOpacityFromView;
- (id)_setUpLayerTreeSurface;
- (BOOL)_setUpLayerTreeRendererAndSurface;
- (void)_viewDidDrawInLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_drawRectAsLayerTree:(struct CGRect)arg1;
@end

@interface CALayer (NSViewAssociation)
- (id)_view;
- (void)_setView:(id)arg1;
@end

@interface NSView (NSPrintingDeprecatedLongAgo)
- (void)beginPrologueBBox:(struct CGRect)arg1 creationDate:(id)arg2 createdBy:(id)arg3 fonts:(id)arg4 forWhom:(id)arg5 pages:(long long)arg6 title:(id)arg7;
- (void)endHeaderComments;
- (void)endPrologue;
- (void)beginSetup;
- (void)endSetup;
- (void)beginPage:(long long)arg1 label:(id)arg2 bBox:(struct CGRect)arg3 fonts:(id)arg4;
- (void)beginPageSetupRect:(struct CGRect)arg1 placement:(struct CGPoint)arg2;
- (void)addToPageSetup;
- (void)endPageSetup;
- (void)beginTrailer;
- (void)endTrailer;
@end

@interface NSView (NSPrintingInternal)
- (void)_renderCurrentPageForPrintOperation:(id)arg1;
- (void)_previewCurrentPageForPrintOperation:(id)arg1;
- (BOOL)_copyForCurrentOperation;
- (BOOL)_printForCurrentOperation;
@end

@interface NSView (NSPrinting1)
- (void)writePDFInsideRect:(struct CGRect)arg1 toPasteboard:(id)arg2;
- (id)dataWithPDFInsideRect:(struct CGRect)arg1;
- (void)writeEPSInsideRect:(struct CGRect)arg1 toPasteboard:(id)arg2;
- (id)dataWithEPSInsideRect:(struct CGRect)arg1;
- (void)print:(id)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (struct CGRect)rectForPage:(long long)arg1;
- (double)heightAdjustLimit;
- (double)widthAdjustLimit;
- (void)beginDocument;
- (void)beginPageInRect:(struct CGRect)arg1 atPlacement:(struct CGPoint)arg2;
- (void)endPage;
- (void)endDocument;
@end

@interface NSView (NSFullScreenMode)
- (BOOL)enterFullScreenMode:(id)arg1 withOptions:(id)arg2;
- (void)exitFullScreenModeWithOptions:(id)arg1;
- (BOOL)isInFullScreenMode;
@end

@interface NSScreen (_NSFullScreenSupport)
+ (BOOL)_captureAllScreens:(id *)arg1;
+ (BOOL)_releaseAllCapturedScreens:(id *)arg1;
+ (int)_shieldingWindowLevel;
- (unsigned int)_displayID;
- (BOOL)_capture:(id *)arg1;
- (BOOL)_isCaptured;
- (BOOL)_releaseCapture:(id *)arg1;
- (id)_currentSetting;
- (id)_availableSettings;
- (id)_bestSettingWithBitsPerPixel:(int)arg1 width:(int)arg2 height:(int)arg3 exactMatch:(char *)arg4;
- (id)_bestSettingWithBitsPerPixel:(int)arg1 width:(int)arg2 height:(int)arg3 refreshRate:(double)arg4 exactMatch:(char *)arg5;
- (id)_bestSettingSimilarToSetting:(id)arg1 exactMatch:(char *)arg2;
- (BOOL)_switchToSetting:(id)arg1 error:(id *)arg2;
@end

@interface NSGradient (NSWindowBorderGradient)
+ (id)_windowBorderGradientFromGrayValue:(int)arg1 toGrayValue:(int)arg2 colorSpace:(id)arg3;
@end

@interface NSColor (CAAnimatableValue)
- (id)CA_addValue:(id)arg1 multipliedBy:(int)arg2;
- (id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2;
- (double)CA_distanceToValue:(id)arg1;
@end

@interface NSObject (NSAnimationPropagationPrivate)
+ (BOOL)animatorShouldPerformSelector:(SEL)arg1;
@end

@interface NSMenuItem (NSMenuItemProtocolCompliance) <NSMenuItem>
@end

@interface NSTextStorage (NSScripting)
- (id)words;
- (id)scriptingTextDescriptor;
- (id)attributeRuns;
- (void)setAttributeRuns:(id)arg1;
- (id)paragraphs;
- (void)setParagraphs:(id)arg1;
- (void)setWords:(id)arg1;
- (id)characters;
- (void)setCharacters:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (id)fontName;
- (void)setFontName:(id)arg1;
- (double)fontSize;
- (void)setFontSize:(double)arg1;
- (id)foregroundColor;
- (void)setForegroundColor:(id)arg1;
- (void)insertInAttachments:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2 withValue:(id)arg3;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2 inPropertyWithKey:(id)arg3;
- (void)removeValueAtIndex:(unsigned long long)arg1 fromPropertyWithKey:(id)arg2;
- (id)coerceValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSColor (NSScriptingCompatibility)
+ (id)scriptingColorWithDescriptor:(id)arg1;
- (id)scriptingColorDescriptor;
@end

@interface NSScrollView (NSPrivate)
+ (Class)_horizontalScrollerClass;
+ (Class)_verticalScrollerClass;
- (BOOL)autoforwardsScrollWheelEvents;
- (void)setAutoforwardsScrollWheelEvents:(BOOL)arg1;
- (struct CGRect)_boundsInsetForBorder;
@end

@interface NSScrollView (NSRulerSupport)
+ (void)setRulerViewClass:(Class)arg1;
+ (Class)rulerViewClass;
- (void)setRulersVisible:(BOOL)arg1;
- (BOOL)rulersVisible;
- (void)setHasHorizontalRuler:(BOOL)arg1;
- (BOOL)hasHorizontalRuler;
- (void)setHasVerticalRuler:(BOOL)arg1;
- (BOOL)hasVerticalRuler;
- (void)setHorizontalRulerView:(id)arg1;
- (id)horizontalRulerView;
- (void)setVerticalRulerView:(id)arg1;
- (id)verticalRulerView;
- (void)_reflectDocumentViewBoundsChange;
- (void)_handleBoundsChangeForSubview:(id)arg1;
- (id)rulerStateDescription;
@end

@interface NSViewController (NSInternal)
- (id)_nibWithName:(id)arg1 bundle:(id)arg2;
- (id)_view;
- (id)_representedObject;
@end

@interface NSViewController (NSPrivate)
- (void)_setNibBundleIdentifier:(id)arg1;
- (id)_nibBundleIdentifier;
- (void)_setNibName:(id)arg1;
@end

@interface NSToolbarItem (NSPrivateVars)
- (BOOL)_sizeHasBeenSet;
- (void)_setSizeHasBeenSet:(BOOL)arg1;
@end

@interface NSTableView (NSDeprecatedInternal)
- (void)_selectColumn:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (void)_selectRow:(long long)arg1 byExtendingSelection:(BOOL)arg2;
- (BOOL)_deprecatedCanFocusCell:(id)arg1 atTableColumn:(id)arg2 row:(long long)arg3;
@end

@interface NSMenuItem (NSMenuItemOverriddenAttributesAccessibility)
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (BOOL)accessibilitySetOverrideValue:(id)arg1 forAttribute:(id)arg2;
@end

@interface NSMenu (NSMenuOverriddenAttributesAccessibility)
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (BOOL)accessibilitySetOverrideValue:(id)arg1 forAttribute:(id)arg2;
@end

@interface NSSpellChecker (NSDDScannerBackgroundLoading)
+ (void)_startLoadOfScanner:(id)arg1;
@end

@interface NSTableView (NSNavTableView)
- (struct CGRect)labelRectOfRow:(long long)arg1;
- (void)drawLabelForRow:(long long)arg1 withLabelColorIndex:(long long)arg2 clipRect:(struct CGRect)arg3 enabled:(BOOL)arg4;
- (void)setFauxHighlightedCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (void)sendMouseUpActionForDisabledCell:(id)arg1 atRow:(long long)arg2 column:(long long)arg3;
- (BOOL)tryNavMouseDown:(id)arg1;
- (BOOL)navNeedsPanelToBecomeKey;
- (struct CGRect)navBrowserLabelRectForRow:(long long)arg1;
@end

@interface NSTextInputContext (NSInputManagerAPI)
+ (void)cycleToNextInputScript:(id)arg1;
+ (void)cycleToNextInputKeyboardLayout:(id)arg1;
- (void)cycleToNextInputScript:(id)arg1;
- (void)cycleToNextInputKeyboardLayout:(id)arg1;
- (id)localizedInputManagerName;
- (void)markedTextAbandoned:(id)arg1;
- (void)markedTextSelectionChanged:(struct _NSRange)arg1 client:(id)arg2;
- (BOOL)wantsToInterpretAllKeystrokes;
- (id)language;
- (id)image;
- (id)server;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)handleMouseEvent:(id)arg1;
- (BOOL)wantsToDelayTextChangeNotifications;
@end

@interface NSApplication (NSUserInterfaceItemSearching)
- (void)registerUserInterfaceItemSearchHandler:(id)arg1;
- (void)unregisterUserInterfaceItemSearchHandler:(id)arg1;
- (BOOL)searchString:(id)arg1 inUserInterfaceItemString:(id)arg2 searchRange:(struct _NSRange)arg3 foundRange:(struct _NSRange *)arg4;
- (BOOL)isDefaultHelpBookSearchEnabled;
- (void)setDefaultHelpBookSearchEnabled:(BOOL)arg1;
@end

@interface NSPersistentDocument (NSDeprecatedInternal)
+ (BOOL)_hasOverrideForSelector:(SEL)arg1 fromBaseClass:(Class)arg2;
- (BOOL)_configurePersistentStoreCoordinatorForURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
@end

@interface NSString (NSPasteboardSupport) <NSPasteboardWriting, NSPasteboardReading>
+ (id)readableTypesForPasteboard:(id)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (id)writableTypesForPasteboard:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
@end

@interface NSURL (NSPasteboardSupport) <NSPasteboardWriting, NSPasteboardReading>
+ (id)URLFromPasteboard:(id)arg1;
+ (id)readableTypesForPasteboard:(id)arg1;
+ (unsigned long long)readingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (void)writeToPasteboard:(id)arg1;
- (id)initWithPasteboardPropertyList:(id)arg1 ofType:(id)arg2;
- (BOOL)__isAbsolute;
- (id)writableTypesForPasteboard:(id)arg1;
- (unsigned long long)writingOptionsForType:(id)arg1 pasteboard:(id)arg2;
- (id)pasteboardPropertyListForType:(id)arg1;
@end

@interface NSPasteboard (NSFileContents)
- (BOOL)writeFileContents:(id)arg1;
- (BOOL)writeFileWrapper:(id)arg1;
- (BOOL)attemptOverwrite:(id)arg1;
- (id)readFileContentsType:(id)arg1 toFile:(id)arg2;
- (id)readFileWrapper;
@end

@interface NSPasteboard (FilterServices)
+ (id)typesFilterableTo:(id)arg1;
+ (id)pasteboardByFilteringFile:(id)arg1;
+ (id)pasteboardByFilteringData:(id)arg1 ofType:(id)arg2;
+ (id)pasteboardByFilteringTypesInPasteboard:(id)arg1;
@end

@interface NSLabelViewCell (NSLabelViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityDescriptionOfChild:(id)arg1;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (struct CGRect)_rectForPart:(long long)arg1;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (void)accessibilityPerformAction:(id)arg1 forChild:(id)arg2;
@end

@interface NSPathCell (NSPathCellAccessibility)
- (struct CGRect)_accessibilityScreenRectForPathComponent:(id)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (void)accessibilityPerformAction:(id)arg1 forChild:(id)arg2;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (BOOL)accessibilityIsChildFocusable:(id)arg1;
- (void)accessibilitySetFocus:(id)arg1 forChild:(id)arg2;
- (id)accessibilityPositionOfChild:(id)arg1;
- (id)accessibilitySizeOfChild:(id)arg1;
- (id)accessibilityHelpStringForChild:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
@end

