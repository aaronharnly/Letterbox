/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct AliasRecord;

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGColor;

struct CGColorSpace;

struct CGContext;

struct CGFont;

struct CGGState;

struct CGImage;

struct CGPDFDocument;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CMNamedColorPageInfoEntryType {
    unsigned short pageNum;
    unsigned short pageLen;
    unsigned short pageRep;
    unsigned short reserved[3];
};

struct CMNamedColorPageInfoType {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    struct CMNamedColorPageInfoEntryType _field4[1];
};

struct CPSProcessSerNum {
    unsigned int _field1;
    unsigned int _field2;
};

struct FSCatalogInfo {
    unsigned short nodeFlags;
    short volume;
    unsigned int parentDirID;
    unsigned int nodeID;
    unsigned char sharingFlags;
    unsigned char userPrivileges;
    unsigned char reserved1;
    unsigned char reserved2;
    struct UTCDateTime createDate;
    struct UTCDateTime contentModDate;
    struct UTCDateTime attributeModDate;
    struct UTCDateTime accessDate;
    struct UTCDateTime backupDate;
    unsigned int permissions[4];
    unsigned char finderInfo[16];
    unsigned char extFinderInfo[16];
    unsigned long long dataLogicalSize;
    unsigned long long dataPhysicalSize;
    unsigned long long rsrcLogicalSize;
    unsigned long long rsrcPhysicalSize;
    unsigned int valence;
    unsigned int textEncodingHint;
};

struct FSRef {
    unsigned char hidden[80];
};

struct FSSpec {
    short _field1;
    long _field2;
    unsigned char _field3[64];
};

struct GDevice;

struct HFSUniStr255 {
    unsigned short length;
    unsigned short unicode[255];
};

struct MovieStateRecord;

struct NSButtonState {
    int _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct NSNavSimpleButtonState {
    int _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct NSScreenAuxiliary {
    struct _NSRect _field1;
};

struct NSThreadPrivate {
    void *_field1;
    struct __CFMessagePort *_field2;
    struct __CFMessagePort *_field3;
    struct __CFRunLoopObserver *_field4;
    struct __CFRunLoop *_field5;
};

struct OpaqueAEDataStorageType;

struct OpaqueATSUStyle;

struct OpaqueCMProfileRef;

struct OpaqueCoreDrag;

struct OpaqueCoreDragHandler;

struct OpaqueEventHandlerRef;

struct OpaqueEventQueue;

struct OpaqueEventRef;

struct OpaqueGrafPtr;

struct OpaqueIconRef;

struct OpaqueMenuRef;

struct OpaqueNodeRef;

struct OpaquePMPageFormat;

struct OpaquePMPrintSession;

struct OpaquePMPrintSettings;

struct OpaquePMPrinter;

struct OpaqueRgnHandle;

struct OpaqueSRSpeechObject;

struct OpaqueTSMDocumentID;

struct OpaqueWindowPtr;

struct PATHSEGMENT {
    int _field1;
    struct _NSPoint _field2;
};

struct Point {
    short _field1;
    short _field2;
};

struct ProcessSerialNumber {
    unsigned int _field1;
    unsigned int _field2;
};

struct RTFColor;

struct RTFFont;

struct RTFStyle;

struct Rect {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
};

struct SpeechChannelRecord {
    long _field1[1];
};

struct UTCDateTime {
    unsigned short highSeconds;
    unsigned int lowSeconds;
    unsigned short fraction;
};

struct _CGEventProcess {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    void *_field4;
    int _field5;
};

struct _CGLContextObject;

struct _CGLPBufferObject;

struct _CGLPixelFormatObject;

struct _CGSEvent {
    unsigned int _field1;
    struct CGPoint _field2;
    unsigned int _field3;
    unsigned int _field4;
    void *_field5;
    union {
        struct {
            short _field1;
            short _field2;
            int _field3;
            unsigned char _field4;
            char _field5;
            short _field6;
        } _field1;
        struct {
            short _field1;
            short _field2;
            unsigned short _field3;
            unsigned short _field4;
            unsigned short _field5;
            short _field6;
        } _field2;
        struct {
            short _field1;
            short _field2;
            int _field3;
            int _field4;
        } _field3;
        struct {
            unsigned short _field1;
            unsigned short _field2;
            unsigned long _field3;
            unsigned long _field4;
        } _field4;
        struct {
            short _field1;
            short _field2;
            short _field3;
            short _field4;
            long _field5;
        } _field5;
        struct {
            short _field1;
            short _field2;
            union {
                float _field1[2];
                long _field2[2];
                short _field3[4];
                char _field4[8];
            } _field3;
        } _field6;
    } _field6;
    void *_field7;
};

struct _CGSEventRecord {
    unsigned short _field1;
    unsigned short _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    unsigned long long _field7;
    unsigned int _field8;
    void *_field9;
    void *_field10;
    struct __CGEventSourceData _field11;
    struct _CGEventProcess _field12;
    union {
        struct {
            unsigned char _field1;
            unsigned char _field2;
            short _field3;
            int _field4;
            unsigned char _field5;
            char _field6;
            unsigned char _field7;
            unsigned char _field8;
            short _field9;
            short _field10;
            union {
                struct _CGSTabletPointData _field1;
                struct _CGSTabletProximityData _field2;
            } _field11;
            unsigned int :1;
            unsigned int :31;
            void *_field12;
            void *_field13;
            int _field14[1];
        } _field1;
        struct {
            unsigned char _field1;
            unsigned char _field2;
            short _field3;
            int _field4;
            unsigned char _field5;
            char _field6;
            unsigned char _field7;
            unsigned char _field8;
            short _field9;
            short _field10;
            union {
                struct _CGSTabletPointData _field1;
                struct _CGSTabletProximityData _field2;
            } _field11;
            unsigned int :1;
            unsigned int :31;
            void *_field12;
            void *_field13;
            int _field14[1];
        } _field2;
        struct {
            unsigned short _field1;
            short _field2;
            unsigned short _field3;
            unsigned short _field4;
            unsigned short _field5;
            short _field6;
            short _field7;
            unsigned char _field8;
            unsigned char _field9;
            unsigned int _field10;
            unsigned int _field11;
            unsigned short _field12[20];
        } _field3;
        struct {
            short _field1;
            short _field2;
            int _field3;
            int _field4;
            unsigned int _field5;
            int _field6[12];
        } _field4;
        struct {
            unsigned short _field1;
            unsigned short _field2;
            unsigned int _field3;
            unsigned int _field4;
            int _field5;
            int _field6;
            int _field7;
            int _field8;
            int _field9;
            int _field10;
            int _field11;
            int _field12;
            int _field13[5];
        } _field5;
        struct {
            short _field1;
            short _field2;
            short _field3;
            short _field4;
            int _field5;
            int _field6;
            int _field7;
            int _field8;
            int _field9;
            int _field10;
            int _field11[4];
            unsigned int :1;
            unsigned int :31;
            void *_field12;
            void *_field13;
            int _field14[1];
        } _field6;
        struct _CGSTabletPointData _field7;
        struct _CGSTabletProximityData _field8;
        struct {
            short _field1;
            short _field2;
            union {
                float _field1[15];
                int _field2[15];
                short _field3[30];
                char _field4[60];
            } _field3;
        } _field9;
    } _field13;
};

struct _CGSTabletPointData {
    int _field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct {
        short _field1;
        short _field2;
    } _field6;
    unsigned short _field7;
    short _field8;
    unsigned short _field9;
    short _field10;
    short _field11;
    short _field12;
};

struct _CGSTabletProximityData {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned char _field10;
    unsigned char _field11;
    short _field12;
};

struct _CacheRect {
    float x;
    float y;
    float w;
    float h;
};

struct _NSAttributeDictionaryElement {
    unsigned int hash;
    id key;
    id value;
};

struct _NSAttributeInfo {
    unsigned int toUniCharEncoding;
    unsigned int codePageEncoding;
    NSFont *font;
    float fontSize;
    float kern;
    NSMutableParagraphStyle *paraStyle;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int fontIsValid:1;
    unsigned int paraStyleIsValid:1;
    unsigned int kernIsValid:1;
    unsigned int attributesSameAsBefore:1;
    unsigned int multiByteEncoding:1;
    unsigned int unicodeAlternativeLength:3;
    unsigned int tabStopType:4;
    unsigned int curAttributesNeedsCopying:1;
    unsigned int paraStyleNeedsCopying:1;
    unsigned int :16;
};

struct _NSBrowserColumnResizeInfo {
    char _field1;
    char _field2;
    char _field3;
    id _field4;
    int _field5;
    float _field6;
    struct _NSSize _field7;
};

struct _NSDrawingParameters {
    id _field1;
    id _field2;
};

struct _NSGlyphGenContext {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    id _field12;
    int _field13[32];
    int _field14[32];
    int _field15[32];
    int _field16[64];
    struct _NSRange _field17;
    struct _NSRange _field18;
    int _field19;
    int _field20;
    struct _NSGlyphInsertBuffer *_field21;
};

struct _NSGlyphInsertBuffer;

struct _NSImageCellAnimationState {
    NSTimer *_field1;
    double _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct _NSMapTable;

struct _NSModalSession {
    id _field1;
    id _field2;
    struct _NSModalSession *_field3;
    int _field4;
    char _field5;
    int _field6;
    unsigned int _field7;
    void *_field8;
    int _field9;
    id _field10;
    id _field11;
    SEL _field12;
    void *_field13;
    int _field14;
    id _field15;
};

struct _NSNibFlags {
    unsigned int _isKeyed:1;
    unsigned int _reserved:31;
};

struct _NSPoint {
    float x;
    float y;
};

struct _NSRAStringBuffer {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned short _field8[100];
};

struct _NSRTFPriv {
    void *reader;
    char *rtfInput;
    unsigned int rtfInputLength;
    unsigned int rtfInputLocation;
    int pushedChar;
    int pushedClass;
    int pushedMajor;
    int pushedMinor;
    int pushedParam;
    char *pushedTextBuf;
    int prevChar;
    int bumpLine;
    struct RTFFont *fontList;
    struct RTFColor *colorList;
    struct RTFStyle *styleList;
    char *inputName;
    char *outputName;
    void *ccb[5];
    void *readHook;
    void *msgProc;
    void *panicProc;
    char *textBuf;
    int textLen;
    int class;
    int major;
    int minor;
    int param;
    long lineNum;
    int linePos;
    int groupState;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRangeKeyRec {
    int _field1;
    int _field2;
    int _field3;
};

struct _NSRect {
    struct _NSPoint origin;
    struct _NSSize size;
};

struct _NSRepresentationInfo {
    Class _field1;
    id _field2;
    struct _CacheRect _field3;
    id _field4;
    struct _RepresentationInfoFlags _field5;
    id _field6;
    id _field7;
    void *_field8;
    int _field9;
    id _field10;
};

struct _NSRulebookHeader {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
};

struct _NSRulebookSetHeader {
    int _field1;
    unsigned long _field2[4];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7[1];
};

struct _NSRulebookTestStruct {
    int _field1;
    int _field2;
    int _field3;
    int _field4[12];
};

struct _NSSize {
    float width;
    float height;
};

struct _NSSortState {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    id _field6[4];
};

struct _NSStoredContainerUsage {
    struct _NSRect _field1;
    struct _NSRect _field2;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :30;
    } _field3;
    struct _NSRect _field4;
    struct _NSRange _field5;
};

struct _NSTextDragInfo {
    struct _NSRect _field1;
    char _field2;
    NSViewRectCache *_field3;
    char _field4;
};

struct _NSTypesetterGlyphInfo {
    struct _NSPoint _field1;
    float _field2;
    float _field3;
    float _field4;
    unsigned int _field5;
    id _field6;
    struct _NSSize _field7;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field8;
};

struct _NSViewTrackingRect {
    int _field1;
    struct _NSViewTrackingRect *_field2;
};

struct _NSZone;

struct _NS_cgsResv {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    void *_field5;
};

struct _NXStream {
    unsigned int _field1;
    char *_field2;
    char *_field3;
    int _field4;
    int _field5;
    long _field6;
    int _field7;
    int _field8;
    struct stream_functions *_field9;
    void *_field10;
};

struct _PartStruct {
    int _field1;
    float _field2;
};

struct _PrivatePrintOperationInfo {
    struct _NSRect _field1;
    struct _NSRect _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    id _field18;
    id _field19;
    struct _NSRect _field20;
    char _field21;
    char _field22;
    char _field23;
    int _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    int _field29;
    int _field30;
    struct _NSPoint _field31;
    unsigned int _field32;
    struct _NSModalSession *_field33;
    int _field34;
    int _field35;
    char _field36;
    int _field37;
    int _field38;
    int _field39;
    id _field40;
    char _field41;
    id _field42;
    int _field43;
    char _field44;
    id _field45;
    id _field46;
    int _field47;
    id _field48;
};

struct _RepresentationInfoFlags {
    unsigned int rendered:1;
    unsigned int drawError:1;
    unsigned int checked:1;
    unsigned int from:4;
    unsigned int cachingAsync:1;
    unsigned int :24;
};

struct _SelectionAnchor {
    int _field1;
    int _field2;
    int _field3;
};

struct _TvFlags3 {
    unsigned int reserved:31;
    unsigned int hasRowHeaderView:1;
};

struct __BCFlags {
    unsigned int alternateMnemonicLocation:8;
    unsigned int useButtonImageSource:1;
    unsigned int gradientType:3;
    unsigned int doesNotDimImage:1;
    unsigned int inset:2;
    unsigned int transparent:1;
    unsigned int lastState:1;
    unsigned int hasKeyEquivalentInsteadOfImage:1;
    unsigned int imageSizeDiff:1;
    unsigned int imageAndText:1;
    unsigned int bottomOrLeft:1;
    unsigned int horizontal:1;
    unsigned int imageOverlaps:1;
    unsigned int bordered:1;
    unsigned int drawing:1;
    unsigned int lightByGray:1;
    unsigned int lightByBackground:1;
    unsigned int lightByContents:1;
    unsigned int changeGray:1;
    unsigned int changeBackground:1;
    unsigned int changeContents:1;
    unsigned int pushIn:1;
};

struct __BCFlags2 {
    unsigned int bezelStyle:3;
    unsigned int showsBorderOnlyWhileMouseInside:1;
    unsigned int mouseInside:1;
    unsigned int bezelStyle2:1;
    unsigned int reserved:2;
    unsigned int keyEquivalentModifierMask:24;
};

struct __BrFlags2 {
    unsigned int delegateShouldSizeColumnToWidth:1;
    unsigned int delegateSizeToFitWidtOfColumn:1;
    unsigned int shouldAnimateColumnScrolling:1;
    unsigned int tilingDisabled:1;
    unsigned int setPathOptimizationOn:1;
    unsigned int readingSavedColumns:1;
    unsigned int recomputeExistingColumnPositions:1;
    unsigned int waitingToSendDoubleActionAtEndOfScroll:1;
    unsigned int waitingToSendSingleActionAtEndOfScroll:1;
    unsigned int waitingToSendConfigChangeNotificationAtEndOfScroll:1;
    unsigned int compatContinuousScrollingCapable:1;
    unsigned int compatContinuousScrollingCapableSet:1;
    unsigned int forceSynchronizedScrollingAnimation:1;
    unsigned int useCustomBorderType:1;
    unsigned int customBorderType:3;
    unsigned int animateColumnScrollingForAnyEvent:1;
    unsigned int addingNewColumn:1;
    unsigned int userColumnResizingAutoresizesWindow:1;
    unsigned int reserved:12;
};

struct __BrccvFlags {
    unsigned int ignoreScrolling:1;
    unsigned int reserved:31;
};

struct __BrcshFlags {
    unsigned int done:1;
    unsigned int animate:1;
    unsigned int shouldPostScrollNotifications:1;
    unsigned int needsEndColumnAnimationOptimization:1;
    unsigned int reserved:28;
};

struct __BrcvFlags {
    unsigned int isEmptyColumn:1;
    unsigned int hasMarkedWidth:1;
    unsigned int tileDisabled:1;
    unsigned int reserved:29;
};

struct __Brflags {
    unsigned int firstVisibleCalculationDisabled:1;
    unsigned int prefersAllColumnUserResizing:1;
    unsigned int usesSmallScrollers:1;
    unsigned int usesSmallSizeTitleFont:1;
    unsigned int actionNeedsToBeSent:1;
    unsigned int acceptsFirstMouse:1;
    unsigned int refusesFirstResponder:1;
    unsigned int disableCompositing:6;
    unsigned int delegateSelectsCellsByRow:1;
    unsigned int allowsIncrementalSearching:1;
    unsigned int time:1;
    unsigned int hasHorizontalScroller:1;
    unsigned int prohibitEmptySel:1;
    unsigned int sendActionOnArrowKeys:1;
    unsigned int dontDrawTitles:1;
    unsigned int acceptArrowKeys:1;
    unsigned int delegateValidatesColumns:1;
    unsigned int delegateDoesNotCreateRowsInMatrix:1;
    unsigned int delegateSelectsCellsByString:1;
    unsigned int delegateSetsTitles:1;
    unsigned int delegateImplementsWillDisplayCell:1;
    unsigned int separateColumns:1;
    unsigned int titleFromPrevious:1;
    unsigned int isTitled:1;
    unsigned int reuseColumns:1;
    unsigned int allowsBranchSelection:1;
    unsigned int allowsMultipleSelection:1;
};

struct __CFArray;

struct __CFBoolean;

struct __CFCharacterSet;

struct __CFDictionary;

struct __CFMessagePort;

struct __CFPasteboard;

struct __CFRunLoop;

struct __CFRunLoopObserver;

struct __CFRunLoopTimer;

struct __CFSet;

struct __CFString;

struct __CFURL;

struct __CFlags {
    unsigned int state:1;
    unsigned int highlighted:1;
    unsigned int disabled:1;
    unsigned int editable:1;
    unsigned int type:2;
    unsigned int vCentered:1;
    unsigned int hCentered:1;
    unsigned int bordered:1;
    unsigned int bezeled:1;
    unsigned int selectable:1;
    unsigned int scrollable:1;
    unsigned int continuous:1;
    unsigned int actOnMouseDown:1;
    unsigned int isLeaf:1;
    unsigned int invalidObjectValue:1;
    unsigned int invalidFont:1;
    unsigned int lineBreakMode:3;
    unsigned int reserved1:3;
    unsigned int actOnMouseDragged:1;
    unsigned int isLoaded:1;
    unsigned int reserved2:1;
    unsigned int dontActOnMouseUp:1;
    unsigned int isWhite:1;
    unsigned int useUserKeyEquivalent:1;
    unsigned int showsFirstResponder:1;
    unsigned int focusRingType:2;
    unsigned int wasSelectable:1;
    unsigned int hasInvalidObject:1;
    unsigned int allowsEditingTextAttributes:1;
    unsigned int importsGraphics:1;
    unsigned int alignment:3;
    unsigned int retainCountOverMax:1;
    unsigned int retainCount:7;
    unsigned int refusesFirstResponder:1;
    unsigned int needsHighlightedText:1;
    unsigned int dontAllowsUndo:1;
    unsigned int currentlyEditing:1;
    unsigned int allowsMixedState:1;
    unsigned int inMixedState:1;
    unsigned int sendsActionOnEndEditing:1;
    unsigned int inSendAction:1;
    unsigned int menuWasSet:1;
    unsigned int controlTint:3;
    unsigned int controlSize:2;
    unsigned int branchImageDisabled:1;
    unsigned int drawingInRevealover:1;
    unsigned int needsHighlightedTextHint:1;
};

struct __CGEventSourceData {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    unsigned long long _field5;
    unsigned int _field6;
    unsigned short _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned long long _field10;
};

struct __CTFont;

struct __CTFontDescriptor;

struct __CTGlyphStorage;

struct __CTLine;

struct __CTRun;

struct __CTTypesetter;

struct __ICFlags {
    unsigned int _unused:22;
    unsigned int _animates:1;
    unsigned int _align:4;
    unsigned int _scale:2;
    unsigned int _style:3;
};

struct __IVFlags {
    unsigned int _unused:30;
    unsigned int _allowsCutCopyPaste:1;
    unsigned int _editable:1;
};

struct __MFlags {
    unsigned int reservedMatrix:6;
    unsigned int browserOptimizationsEnabled:1;
    unsigned int needsRedrawBeforeFirstLiveResizeCache:1;
    unsigned int tmpAllowNonVisibleCellsToBecomeFirstResponder:1;
    unsigned int subclassIsSafeForLiveResize:1;
    unsigned int hasCachedSubclassIsSafeForLiveResize:1;
    unsigned int liveResizeImageCacheingEnabled:1;
    unsigned int checkForSimpleTrackingMode:1;
    unsigned int useSimpleTrackingMode:1;
    unsigned int refusesFirstResponder:1;
    unsigned int dontScroll:1;
    unsigned int changingSelectionWithKeyboard:1;
    unsigned int onlySetKeyCell:1;
    unsigned int currentlySelectingCell:1;
    unsigned int allowsIncrementalSearching:1;
    unsigned int tabKeyTraversesCellsExplicitlySet:1;
    unsigned int tabKeyTraversesCells:1;
    unsigned int drawingAncestor:1;
    unsigned int autosizeCells:1;
    unsigned int drawsBackground:1;
    unsigned int drawsCellBackground:1;
    unsigned int selectionByRect:1;
    unsigned int autoscroll:1;
    unsigned int allowEmptySel:1;
    unsigned int listMode:1;
    unsigned int radioMode:1;
    unsigned int highlightMode:1;
};

struct __MFlags2 {
    unsigned int RESERVED:32;
};

struct __MVFlags {
    unsigned int editable:1;
    unsigned int loopMode:3;
    unsigned int playsEveryFrame:1;
    unsigned int playsSelectionOnly:1;
    unsigned int controllerVisible:1;
    unsigned int reserved:25;
};

struct __NBCFlags {
    unsigned int _reserved:21;
    unsigned int delayedUpdateScheduled:1;
    unsigned int needsTextSizeCalc:1;
    unsigned int showsGetInfoButton:1;
    unsigned int showsLogonButton:1;
    unsigned int enableTextHighlightIfNecessary:1;
    unsigned int enableSelectionHighlightIfNecessary:1;
    unsigned int allowsPreview:1;
    unsigned int isTrackingMouse:1;
    unsigned int isFauxDisabled:1;
    unsigned int isDirectory:1;
    unsigned int isPreview:1;
};

struct __NSAppleEventManagerSuspension;

struct __NSArrayControllerTreeNodeFlags {
    unsigned int isLeaf:1;
    unsigned int ignoreObserving:1;
    unsigned int reserved:30;
};

struct __NSKeyValueCodingControllerModeType {
    int _field1;
    unsigned int _field2;
    id _field3;
};

struct __NSMouseTrackerDelegateRespondTo {
    unsigned int startTracking:1;
    unsigned int continueTracking:1;
    unsigned int stopTracking:1;
    unsigned int constrainPoint:1;
    unsigned int handlePeriodicEvents:1;
    unsigned int reserved:27;
};

struct __NSNavSidebarAppearance {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct __NSOVRowEntry {
    struct __NSOVRowEntryChildrenInfo *_field1;
    struct __NSOVRowEntry *_field2;
    int _field3;
    id _field4;
    short _field5;
    struct __REFlags _field6;
};

struct __NSOVRowEntryChildrenInfo;

struct __NSRowHeightBucket {
    float _field1;
    int _field2;
    struct _flags _field3;
};

struct __NSRowHeightBucketLocation {
    float _field1;
    int _field2;
    int _field3;
};

struct __NSSVFlags {
    unsigned int reserved:32;
};

struct __NSTabViewDelegateRespondTo {
    unsigned int shouldSelectTabViewItem:1;
    unsigned int willSelectTabViewItem:1;
    unsigned int didSelectTabViewItem:1;
    unsigned int didChangeNumberOfTabViewItems:1;
    unsigned int reserved:28;
};

struct __NSTabViewFlags {
    unsigned int needsLayout:1;
    unsigned int controlTint:3;
    unsigned int controlSize:2;
    unsigned int wiringNibConnections:1;
    unsigned int wiringInteriorLastKeyView:1;
    unsigned int originalNextKeyViewChanged:1;
    unsigned int liveResizeSkippedResetToolTips:1;
    unsigned int reserved:22;
};

struct __NSToolbarItemExternalData {
    int _field1;
};

struct __NSToolbarItemLayoutMetrics {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
};

struct __NSToolbarLayoutMetrics {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct __NSToolbarMetrics {
    struct __NSToolbarLayoutMetrics _field1;
    struct __NSToolbarItemLayoutMetrics _field2;
};

struct __OvFlags {
    unsigned int _reserved:14;
    unsigned int numberOfRowsDataExpandEntered:1;
    unsigned int delayRowEntryFreeDisabled:1;
    unsigned int delegateHeightOfRowByItem:1;
    unsigned int compatCollapseForceClearsExpandState:1;
    unsigned int autoExpandFlashState:1;
    unsigned int selectionAdjustmentDisabled:1;
    unsigned int removeChildInProgress:1;
    unsigned int delegateWillDisplayOutlineCell:1;
    unsigned int enableExpandNotifications:1;
    unsigned int autoSaveExpandItems:1;
    unsigned int autoresizesOutlineColumn:1;
    unsigned int delegateShouldExpandItem:1;
    unsigned int delegateShouldCollapseItem:1;
    unsigned int delegateSelectionShouldChangeInOutlineView:1;
    unsigned int delegateShouldSelectTableColumn:1;
    unsigned int delegateShouldSelectItem:1;
    unsigned int delegateShouldEditTableColumn:1;
    unsigned int delegateWillDisplayCell:1;
};

struct __REFlags {
    unsigned int reserved:27;
    unsigned int initedIsExpandableData:1;
    unsigned int initedItemData:1;
    unsigned int inited:1;
    unsigned int expanded:1;
    unsigned int expandable:1;
};

struct __SFlags {
    unsigned int RESERVED:14;
    unsigned int autoforwardsScrollWheelEvents:1;
    unsigned int autohidesScrollers:1;
    unsigned int hasCustomLineBorderColor:1;
    unsigned int focusRingNeedsRedisplay:1;
    unsigned int skipRemoveSuperviewCheck:1;
    unsigned int doesNotDrawBackground:1;
    unsigned int needsTile:1;
    unsigned int hasVerticalRuler:1;
    unsigned int hasHorizontalRuler:1;
    unsigned int showRulers:1;
    unsigned int oldRulerInstalled:1;
    unsigned int borderType:2;
    unsigned int noDynamicScrolling:1;
    unsigned int hScrollerStatus:1;
    unsigned int vScrollerStatus:1;
    unsigned int hScrollerRequired:1;
    unsigned int vScrollerRequired:1;
};

struct __SPFlags {
    unsigned int saveMode:1;
    unsigned int isExpanded:1;
    unsigned int allowsOtherFileTypes:1;
    unsigned int canCreateDirectories:1;
    unsigned int canSelectedHiddenExtension:1;
    unsigned int reserved:27;
};

struct __TvFlags {
    unsigned int refusesFirstResponder:1;
    unsigned int movedPostingDisableCount:6;
    unsigned int selectionPostingDisableCount:7;
    unsigned int dataSourceSetObjectValue:1;
    unsigned int oldAutoresizesAllColumnsToFit:1;
    unsigned int delegateSelectionShouldChangeInTableView:1;
    unsigned int delegateShouldSelectTableColumn:1;
    unsigned int delegateShouldSelectRow:1;
    unsigned int delegateShouldEditTableColumn:1;
    unsigned int delegateWillDisplayCell:1;
    unsigned int compareWidthWithSuperview:2;
    unsigned int changingLayout:1;
    unsigned int selectionType:2;
    unsigned int allowsColumnSelection:1;
    unsigned int allowsMultipleSelection:1;
    unsigned int allowsEmptySelection:1;
    unsigned int oldDrawsGridFlag:1;
    unsigned int allowsColumnResizing:1;
    unsigned int allowsColumnReordering:1;
};

struct __TvFlags2 {
    unsigned int sizingToFitForColumnResize:1;
    unsigned int autoresizing:1;
    unsigned int columnAutoresizingStyle:3;
    unsigned int delegateRespondsTo_heightForRow:1;
    unsigned int dataSourceWriteDraggedRowsMethodVersion:2;
    unsigned int disablePersistTableColumns:1;
    unsigned int sendingTableViewTargetAction:1;
    unsigned int mouseDownShouldTrack:1;
    unsigned int dataSourceRespondsTo_objectValueForTableColumn:1;
    unsigned int dataSourceRespondsTo_numberOfRowsInTableView:1;
    unsigned int dataSourceMethodsWarningPrinted:1;
    unsigned int afterLiveResizeFieldEditorShouldDrawBackground:1;
    unsigned int sortDescriptorsContainsPlaceholders:1;
    unsigned int usesStandardAlternatingRowColors:1;
    unsigned int numberOfRowsCacheIsValid:1;
    unsigned int okToEnterTextDidEndEditing:1;
    unsigned int okToCompleteTextDidEndEditing:1;
    unsigned int autoSaveTableColumns:1;
    unsigned int verticalMotionCanBeginDrag:1;
    unsigned int lastDropHoverInCenter:1;
    unsigned int hasGrownFrameForDropGapInsertion:1;
    unsigned int subclassIsSafeForLiveResize:1;
    unsigned int hasCachedSubclassIsSafeForLiveResize:1;
    unsigned int deselectsWhenMouseLeaves:1;
    unsigned int delegateRespondsTo_didDragColumn:1;
    unsigned int delegateRespondsTo_didClickColumn:1;
    unsigned int delegateRespondsTo_mouseDownInHeader:1;
    unsigned int drawsGridVertical:1;
    unsigned int drawsGridHorizontal:1;
    id _hiliteColId;
    int clickedRow;
    int clickedColumn;
};

struct __VFlags {
    unsigned int aboutToResize:1;
    unsigned int retainCountOverMax:1;
    unsigned int retainCount:6;
    unsigned int interfaceStyle1:1;
    unsigned int specialArchiving:1;
    unsigned int needsDisplayForBounds:1;
    unsigned int interfaceStyle0:1;
    unsigned int removingWithoutInvalidation:1;
    unsigned int needsBoundsChangeNote:1;
    unsigned int boundsChangeNotesSuspended:1;
    unsigned int focusChangeNotesSuspended:1;
    unsigned int needsFrameChangeNote:1;
    unsigned int frameChangeNotesSuspended:1;
    unsigned int noVerticalAutosizing:1;
    unsigned int newGState:1;
    unsigned int validGState:1;
    unsigned int needsDisplay:1;
    unsigned int wantsGState:1;
    unsigned int autoresizeSubviews:1;
    unsigned int autosizing:6;
    unsigned int rotatedOrScaledFromBase:1;
    unsigned int rotatedFromBase:1;
};

struct __VFlags2 {
    unsigned int nextKeyViewRefCount:14;
    unsigned int previousKeyViewRefCount:14;
    unsigned int isVisibleRect:1;
    unsigned int hasToolTip:1;
    unsigned int needsRealLockFocus:1;
    unsigned int menuWasSet:1;
};

struct __WtFlags {
    unsigned int _PADDING:11;
    unsigned int autorecalculatesKeyViewLoop:1;
    unsigned int hideShadow:1;
    unsigned int allowsToolTipsWhenInactive:1;
    unsigned int autoSetMiniaturizableMask:1;
    unsigned int autoSetZoomableMask:1;
    unsigned int interfaceStyle:2;
    unsigned int savePosition:1;
    unsigned int autoPositionMask:6;
    unsigned int dynamicDepthLimit:1;
    unsigned int wantsToBeColor:1;
    unsigned int visible:1;
    unsigned int oneShot:1;
    unsigned int defer:1;
    unsigned int dontFreeWhenClosed:1;
    unsigned int hidesOnDeactivate:1;
};

struct ___browserBinderFlags {
    unsigned int _ignoreChanges:1;
    unsigned int _reservedOutlineViewBinder:31;
};

struct ___outlineViewBinderFlags {
    unsigned int _isAutoCreated:1;
    unsigned int _ignoreChanges:1;
    unsigned int _updateSelectionIndexes:1;
    unsigned int _reservedOutlineViewBinder:29;
};

struct __aFlags {
    unsigned int delegateAnimationShouldStart:1;
    unsigned int delegateAnimationDidStop:1;
    unsigned int delegateAnimationDidEnd:1;
    unsigned int delegateAnimationValueForProgress:1;
    unsigned int delegateAnimationDidReachProgressMark:1;
    unsigned int animating:1;
    unsigned int blocking:1;
    unsigned int reserved:25;
};

struct __aSettings {
    unsigned int animationCurve:8;
    unsigned int animationBlockingMode:2;
    unsigned int reserved:22;
};

struct __actionBinderFlags {
    unsigned int _allSeparateArrayArgumentsBoundToIdenticalController:1;
    unsigned int _reservedActionBinder:31;
};

struct __appFlags {
    unsigned int _hidden:1;
    unsigned int _RESERVED1:1;
    unsigned int _active:1;
    unsigned int _hasBeenRun:1;
    unsigned int _doingUnhide:1;
    unsigned int _delegateReturnsValidRequestor:1;
    unsigned int _deactPending:1;
    unsigned int _invalidState:1;
    unsigned int _invalidEvent:1;
    unsigned int _postedWindowsNeedUpdateNote:1;
    unsigned int _wantsToActivate:1;
    unsigned int _doingHide:1;
    unsigned int _dontSendShouldTerminate:1;
    unsigned int _skipWin32DelayedRestoreKeyWindowAfterHide:1;
    unsigned int _finishedLaunching:1;
    unsigned int _hasEventDelegate:1;
    unsigned int _appDying:1;
    unsigned int _didNSOpenOrPrint:1;
    unsigned int _inDealloc:1;
    unsigned int _pendingDidFinish:1;
    unsigned int _hasKeyFocus:1;
    unsigned int _panelsNonactivating:1;
    unsigned int _hiddenOnLaunch:1;
    unsigned int _openStatus:2;
    unsigned int _batchOrdering:1;
    unsigned int _reserved:6;
};

struct __arrayControllerFlags {
    unsigned int _avoidsEmptySelection:1;
    unsigned int _preservesSelection:1;
    unsigned int _selectsInsertedObjects:1;
    unsigned int _alwaysUsesMultipleValuesMarker:1;
    unsigned int _refreshesAllModelObjects:1;
    unsigned int _filterRestrictsInsertion:1;
    unsigned int _overridesArrangeObjects:1;
    unsigned int _explicitlyCannotInsert:1;
    unsigned int _generatedEmptyArray:1;
    unsigned int _isObservingKeyPathsThroughArrangedObjects:1;
    unsigned int _arrangedObjectsIsMutable:1;
    unsigned int _clearsFilterPredicateOnInsertion:1;
    unsigned int _skipSortingAfterFetch:1;
    unsigned int _reservedArrayController:19;
};

struct __arrayDetailBinderFlags {
    unsigned int _selectsAllWhenSettingContent:1;
    unsigned int _usedMultipleSelectionArray:1;
    unsigned int _reservedArrayDetailBinder:30;
};

struct __auxWFlags {
    unsigned int hasShadow:1;
    unsigned int forceActiveControls:1;
    unsigned int minimized:1;
    unsigned int drawingToHeartBeatWindow:1;
    unsigned int restoreLocation:1;
    unsigned int needsToUseHeartBeatWindow:1;
    unsigned int activeAppearanceDuringRestore:1;
    unsigned int miniWindowTitleIsAGuess:1;
    unsigned int needsToReactivateHeartBeating:1;
    unsigned int windowPositionIsStale:1;
    unsigned int miniWindowTitleNeedsUpdate:1;
    unsigned int blockHeartBeat:1;
    unsigned int resizeCornerShown:1;
    unsigned int locationIsTemporary:1;
    unsigned int canHide:1;
    unsigned int autofill:1;
    unsigned int isOpaque:1;
    unsigned int receivedDockDeathNotification:1;
    unsigned int minimizeCompleted:1;
    unsigned int minimizeFailed:1;
    unsigned int windowClosed:1;
    unsigned int omouseupPending:1;
    unsigned int borderViewHasDisplayName:1;
    unsigned int delegateReturnsFieldEditor:1;
    unsigned int needsConstraint:1;
    unsigned int selectAnyValidResponderOverride:1;
    unsigned int windowRefRequiredForCarbonControl:1;
    unsigned int windowRefRequiredForCarbonApp:1;
    unsigned int canCycle:1;
    unsigned int defaultButtonPaused:1;
    unsigned int movableByBackground:1;
    unsigned int preventsActivation:1;
    unsigned int ignoresMouseEvents:1;
    unsigned int keyWindowIgnoringFocus:1;
    unsigned int liveResizeImageCacheingEnabled:1;
    unsigned int currentDepth:4;
    unsigned int needsScaling:1;
    unsigned int allowsToolTipsWhenApplicationIsInactive:1;
    unsigned int needsToSetIgnoreTag:1;
    unsigned int needsToResetDragMargins:1;
    unsigned int preserveTag:1;
    unsigned int needsToRemoveFieldEditor:1;
    unsigned int wantsHideOnDeactivate:1;
    unsigned int aspectRatioForContent:1;
    unsigned int resizeIncrementsForContent:1;
    unsigned int minSizeForContent:1;
    unsigned int maxSizeForContent:1;
    unsigned int modalIsActive:1;
    unsigned int excludedFromVisibleWindowList:1;
    unsigned int preservesContentDuringLiveResize:1;
    unsigned int autorecalculatesKeyViewLoop:1;
    unsigned int keyViewLoopNeedsRecalc:1;
    unsigned int keyViewGroupBoundaryNeedRecalc:1;
    unsigned int keyViewRedirectionDisabled:1;
    unsigned int displaysWhenScreenProfileChanges:1;
    unsigned int hidesToolbarButton:1;
    unsigned int contentHasShadow:1;
    unsigned int noDefaultButton:1;
    unsigned int screenUpdatesDisabledUntilFlush:1;
    unsigned int allowsCursorRectsWhenInactive:1;
    unsigned int sharesParentKeyState:1;
};

struct __bFlags {
    unsigned int borderType:2;
    unsigned int titlePosition:3;
    unsigned int transparent:1;
    unsigned int boxType:2;
    unsigned int needsTile:1;
    unsigned int _RESERVED:23;
};

struct __binderFlags {
    unsigned int _isConnected:1;
    unsigned int _hasPerformedObservationRegistration:1;
    unsigned int _isObserving:1;
    unsigned int _reservedBinder:29;
};

struct __binderPluginFlags {
    unsigned int _isTableColumnPlugin:1;
    unsigned int _isOutlineColumnPlugin:1;
    unsigned int _isCellPlugin:1;
    unsigned int _reservedBinderPlugin:29;
};

struct __bindingFlags {
    unsigned int _requiresDirectKeyValueCodingCall:1;
    unsigned int _raisesForNotApplicableKeys:1;
    unsigned int _validatesImmediately:1;
    unsigned int _alwaysPresentsApplicationModalAlerts:1;
    unsigned int _archiveNullPlaceholder:1;
    unsigned int _archiveNoSelectionPlaceholder:1;
    unsigned int _archiveMultipleValuesSelectionPlaceholder:1;
    unsigned int _archiveNotApplicablePlaceholder:1;
    unsigned int _binderSpecificFlags:8;
    unsigned int _retainController:1;
    unsigned int _reservedBinding:15;
};

struct __bindingsControllerFlags {
    unsigned int _alwaysPresentsApplicationModalAlerts:1;
    unsigned int _refreshesAllModelKeys:1;
    unsigned int _multipleObservedModelObjects:1;
    unsigned int _isEditing:1;
    unsigned int _reservedController:28;
};

struct __bitmapRepFlags {
    unsigned int bitsPerPixel:8;
    unsigned int isPlanar:1;
    unsigned int explicitPlanes:1;
    unsigned int isUnpacked:1;
    unsigned int dataLoaded:1;
    unsigned int numColors:4;
    unsigned int memory:2;
    unsigned int compressionFactor:14;
    unsigned int imageNumber:8;
    unsigned int bitmapFormat:3;
    unsigned int reserved:1;
    unsigned int compression:20;
};

struct __cbcFlags {
    unsigned int usesDataSource:1;
    unsigned int completes:1;
    unsigned int buttonBordered:1;
    unsigned int popUpIsUp:1;
    unsigned int filteringEvents:1;
    unsigned int drawing:1;
    unsigned int synchronizingSelection:1;
    unsigned int reserved:9;
    unsigned int visibleItems:16;
};

struct __checkBoxPluginFlags {
    unsigned int _allowsMixedState:1;
    unsigned int _testedMixedState:1;
    unsigned int _reservedCheckBoxPlugin:30;
};

struct __colFlags {
    unsigned int oldIsResizable:1;
    unsigned int isEditable:1;
    unsigned int resizedPostingDisableCount:8;
    unsigned int canUseReorderResizeImageCache:1;
    unsigned int userResizingAllowed:1;
    unsigned int autoResizingAllowed:1;
    unsigned int RESERVED:19;
};

struct __conFlags {
    unsigned int enabled:1;
    unsigned int ignoreMultiClick:1;
    unsigned int calcSize:1;
    unsigned int drawingAncestor:1;
    unsigned int ibReserved:1;
    unsigned int updateCellFocus:1;
    unsigned int deallocating:1;
    unsigned int reserved:25;
};

struct __controllerConfigurationBinderFlags {
    unsigned int _ignoreChanges:1;
    unsigned int _reservedControllerConfigurationBinder:31;
};

struct __cvFlags {
    unsigned int isFlipped:1;
    unsigned int onlyUncovered:1;
    unsigned int reflectScroll:1;
    unsigned int usedByCell:1;
    unsigned int scrollClipTo:1;
    unsigned int noCopyOnScroll:1;
    unsigned int drawsBackground:1;
    unsigned int scrollInProgress:1;
    unsigned int skipRemoveSuperviewCheck:1;
    unsigned int animateCurrentScroll:1;
    unsigned int canAnimateScrolls:1;
    unsigned int nextScrollRelativeToCurrentPosition:1;
    unsigned int viewBoundsChangedOverridden:1;
    unsigned int viewFrameChangedOverridden:1;
    unsigned int RESERVED:18;
};

struct __cwFlags {
    unsigned int isActive:1;
    unsigned int isBordered:1;
    unsigned int cantDraw:1;
    unsigned int isNotContinuous:1;
    unsigned int reservedColorWell:28;
};

struct __dateCellFlags {
    unsigned int elements:16;
    unsigned int controlStyle:3;
    unsigned int controlMode:2;
    unsigned int trackingHand:2;
    unsigned int displayedMonth:4;
    unsigned int drawsBackground:1;
    unsigned int digitsEntered:2;
    unsigned int reserved:2;
};

struct __ddbFlags {
    unsigned int waitForDrag:1;
    unsigned int currentlyDragging:1;
    unsigned int shouldDrag:1;
    unsigned int RESERVED:29;
};

struct __displayFontBinderPluginFlags {
    unsigned int _isFontInvalidationCapable:1;
    unsigned int _reservedDisplayFontBinderPlugin:31;
};

struct __docFlags {
    unsigned int inClose:1;
    unsigned int hasUndoManager:1;
    unsigned int isShowingPageLayout:1;
    unsigned int isRunningPrintOperation:1;
    unsigned int savePanelNameExtensionHidden:1;
    unsigned int reconciledToFileName:1;
    unsigned int checkingDisplayName:1;
    unsigned int readOtherContents:1;
    unsigned int RESERVED:24;
};

struct __drawerBinderFlags {
    unsigned int _visibleStateHasBeenSet:1;
    unsigned int _expectedVisibleState:1;
    unsigned int _reservedDrawerBinder:30;
};

struct __editableBinderFlags {
    unsigned int _objectSupportsEditable:1;
    unsigned int _referenceBinderRequestedEditableState:1;
    unsigned int _referenceBinderDidRequestEditableState:1;
    unsigned int _numberOfEditableBindings:4;
    unsigned int _objectSupportsEnabled:1;
    unsigned int _referenceBinderRequestedEnabledState:1;
    unsigned int _referenceBinderDidRequestEnabledState:1;
    unsigned int _numberOfEnabledBindings:4;
    unsigned int _objectSupportsHidden:1;
    unsigned int _referenceBinderRequestedHiddenState:1;
    unsigned int _referenceBinderDidRequestHiddenState:1;
    unsigned int _numberOfHiddenBindings:4;
    unsigned int _reservedEditableBinder:11;
};

struct __editorBinderFlags {
    unsigned int _conditionallySetsEditable:1;
    unsigned int _objectSupportsEditable:1;
    unsigned int _explicitlyRequestEditable:1;
    unsigned int _explicitEditableState:1;
    unsigned int _conditionallySetsEnabled:1;
    unsigned int _objectSupportsEnabled:1;
    unsigned int _explicitlyRequestEnabled:1;
    unsigned int _explicitEnabledState:1;
    unsigned int _conditionallySetsHidden:1;
    unsigned int _objectSupportsHidden:1;
    unsigned int _explicitlyRequestHidden:1;
    unsigned int _explicitHiddenState:1;
    unsigned int _reservedEditorBinder:20;
};

struct __fFlags {
    unsigned int _isScreenFont:1;
    unsigned int _systemFontType:8;
    unsigned int _reserved1:4;
    unsigned int _matrixIsIdentity:1;
    unsigned int _renderingMode:3;
    unsigned int _reserved2:15;
};

struct __fbephFlags {
    unsigned int lookedupPreviewThumbnailImage:1;
    unsigned int computingThumbnailInDetatchedThread:1;
    unsigned int reserved:30;
};

struct __feblags {
    unsigned int showUnderline:1;
    unsigned int showStrikethrough:1;
    unsigned int showTextColor:1;
    unsigned int showDocumentColor:1;
    unsigned int showShadowEffects:1;
    unsigned int reserved:27;
};

struct __fpFlags {
    unsigned int multipleFont:1;
    unsigned int dirty:1;
    unsigned int amPreviewing:1;
    unsigned int alwaysPreview:1;
    unsigned int dontPreview:1;
    unsigned int setFontChange:1;
    unsigned int setFontAttributeChange:1;
    unsigned int sizeValueCacheIsValid:1;
    unsigned int sizeFieldIsRelative:1;
    unsigned int inittedCollPane:1;
    unsigned int inittedFavePane:1;
    unsigned int didInitialPaneSetup:1;
    unsigned int _inNewCol:1;
    unsigned int _delRespFamily:1;
    unsigned int _delRespFace:1;
    unsigned int _delRespSize:1;
    unsigned int _delRespColl:1;
    unsigned int _collectionDisabled;
    unsigned int _sizeDisabled;
    unsigned int _faceDisabled;
    unsigned int _lastFaceSelection;
    unsigned int showEffects:1;
    unsigned int RESERVED2:11;
};

struct __imageFlags {
    unsigned int scalable:1;
    unsigned int dataRetained:1;
    unsigned int uniqueWindow:1;
    unsigned int sizeWasExplicitlySet:1;
    unsigned int builtIn:1;
    unsigned int needsToExpand:1;
    unsigned int useEPSOnResolutionMismatch:1;
    unsigned int colorMatchPreferred:1;
    unsigned int multipleResolutionMatching:1;
    unsigned int subImage:1;
    unsigned int archiveByName:1;
    unsigned int unboundedCacheDepth:1;
    unsigned int flipped:1;
    unsigned int aliased:1;
    unsigned int dirtied:1;
    unsigned int cacheMode:2;
    unsigned int focusedWhilePrinting:1;
    unsigned int reserved1:14;
};

struct __lmFlags {
    unsigned int containersAreFull:1;
    unsigned int glyphsMightDrawOutsideLines:1;
    unsigned int backgroundLayoutEnabled:1;
    unsigned int resizingInProgress:1;
    unsigned int allowScreenFonts:1;
    unsigned int cachedRectArrayInUse:1;
    unsigned int displayInvalidationInProgress:1;
    unsigned int insertionPointNeedsUpdate:1;
    unsigned int layoutManagerInDirtyList:1;
    unsigned int usingGlyphCache:1;
    unsigned int showInvisibleCharacters:1;
    unsigned int showControlCharacters:1;
    unsigned int delegateRespondsToDidInvalidate:1;
    unsigned int delegateRespondsToDidComplete:1;
    unsigned int glyphFormat:2;
    unsigned int textStorageRespondsToIsEditing:1;
    unsigned int notifyEditedInProgress:1;
    unsigned int containersChanged:1;
    unsigned int isGeneratingGlyphs:1;
    unsigned int hasNonGeneratedGlyphData:1;
    unsigned int loggedBGLayoutException:1;
    unsigned int isLayoutRequestedFromSubthread:1;
    unsigned int defaultAttachmentScaling:2;
    unsigned int isInUILayoutMode:1;
    unsigned int seenRightToLeft:1;
    unsigned int ignoresViewTransformations:1;
    unsigned int needToFlushGlyph:1;
    unsigned int flipsIfNeeded:1;
    unsigned int _pad:2;
};

struct __mFlags {
    unsigned int noAutoenable:1;
    unsigned int menuChangedMessagesDisabled:1;
    unsigned int needsMenuChangedMessage:1;
    unsigned int suppressAutoenable:1;
    unsigned int disabled:1;
    unsigned int ownedByPopUp:1;
    unsigned int delegateNeedsUpdate:1;
    unsigned int delegateUpdateItem:1;
    unsigned int delegateHasKeyEquiv:1;
    unsigned int delegateHasAltKeyEquiv:1;
    unsigned int RESERVED:22;
};

struct __matrixPluginFlags {
    unsigned int _allowsEmptySelection:1;
    unsigned int _testedAllowsEmptySelection:1;
    unsigned int _invertedAllowsEmptySelection:1;
    unsigned int _reservedMatrixPlugin:29;
};

struct __miFlags {
    unsigned int disabled:1;
    unsigned int isSeparator:1;
    unsigned int hidden:1;
    unsigned int alternate:1;
    unsigned int indent:4;
    unsigned int changed:10;
    unsigned int RESERVED:14;
};

struct __micFlags {
    unsigned int needsSizing:1;
    unsigned int highlighted:1;
    unsigned int needsDisplay:1;
    unsigned int keyEquivGlyphWidth:16;
    unsigned int RESERVED:13;
};

struct __modelObservingTrackerFlags {
    unsigned int _multipleObservedModelObjects:1;
    unsigned int _reservedModelObservingTrackerFlags:31;
};

struct __msvFlags {
    unsigned int isDrawing:1;
    unsigned int needsRemoveUpArrow:1;
    unsigned int needsRemoveDownArrow:1;
    unsigned int RESERVED:29;
};

struct __multipleSelectionMatrixPluginFlags {
    unsigned int _testedMode:1;
    unsigned int _reservedMultipleSelectionMatrixPlugin:31;
};

struct __mvFlags {
    unsigned int needsSizing:1;
    unsigned int releasingWindow:1;
    unsigned int isHorizontal:1;
    unsigned int disableSizing:1;
    unsigned int attachedSubmenuWhileMouseWasUp:1;
    unsigned int needsToCreateCells:1;
    unsigned int allowsTearOffs:1;
    unsigned int isTearOff:1;
    unsigned int keyEquivGlyphWidth:16;
    unsigned int disableResize:1;
    unsigned int savedHODState:1;
    unsigned int drawCenter:1;
    unsigned int RESERVED:5;
};

struct __nFlags {
    unsigned int cacheRetainCount:20;
    unsigned int registeredForPropertyChangedNotifications:1;
    unsigned int registeredForChildNotifications:1;
    unsigned int reserved:10;
};

struct __nibBindingConnectorFlags {
    unsigned int _hasEstablishedConnection:1;
    unsigned int _reservedNibBindingConnector:31;
};

struct __objectControllerFlags {
    unsigned int _editable:1;
    unsigned int _automaticallyPreparesContent:1;
    unsigned int _hasLoadedData:1;
    unsigned int _explicitlyCannotAdd:1;
    unsigned int _explicitlyCannotRemove:1;
    unsigned int _isUsingManagedProxy:1;
    unsigned int _hasFetched:1;
    unsigned int _reservedObjectController:25;
};

struct __objectDetailBinderFlags {
    unsigned int _handlesContentAsCompoundValue:1;
    unsigned int _deletesObjectsOnRemove:1;
    unsigned int _reservedObjectDetailBinder:30;
};

struct __objectParameterBinderFlags {
    unsigned int _needsToRefreshOriginalValues:1;
    unsigned int _reservedObjectParameterBinder:31;
};

struct __pbFlags {
    unsigned int needsPullsDownFromTemplate:1;
    unsigned int RESERVED:31;
};

struct __pbcFlags {
    unsigned int pullsDown:1;
    unsigned int preferredEdge:3;
    unsigned int menuIsAttached:1;
    unsigned int usesItemFromMenu:1;
    unsigned int altersStateOfSelectedItem:1;
    unsigned int decoding:1;
    unsigned int arrowPosition:2;
    unsigned int ignoreMenuLayout:1;
    unsigned int drawing:1;
    unsigned int RESERVED:20;
};

struct __progressIndicatorFlags {
    unsigned int isSpinning:1;
    unsigned int isVector:1;
    unsigned int isLocked:1;
    unsigned int controlTint:3;
    unsigned int controlSize:2;
    unsigned int style:1;
    unsigned int _delayedStartup:1;
    unsigned int _orderOutForResize:1;
    unsigned int _lastImageIndex:4;
    unsigned int hideWhenStopped:1;
    unsigned int RESERVED:16;
};

struct __rFlags {
    unsigned int movable:1;
    unsigned int removable:1;
    unsigned int dragging:1;
    unsigned int pinned:1;
    unsigned int _reserved:28;
};

struct __rcFlags {
    unsigned int isCacheValid:1;
    unsigned int isHeightBucketArrayValid:1;
    unsigned int reserved:30;
};

struct __repFlags {
    unsigned int hasAlpha:1;
    unsigned int isOpaque:1;
    unsigned int cacheParamsComputed:1;
    unsigned int cacheAlphaComputed:1;
    unsigned int loadState:2;
    unsigned int keepCacheWindow:1;
    unsigned int reserved:1;
    unsigned int bitsPerSample:8;
    unsigned int gsaved:16;
};

struct __sFlags2 {
    unsigned int hitPart:4;
    unsigned int controlSize:2;
    unsigned int inMaxEnd:1;
    unsigned int reserved:25;
};

struct __scFlags {
    unsigned int autoShowGuesses:1;
    unsigned int needDelayedGuess:1;
    unsigned int unignoreInProgress:1;
    unsigned int wordFieldEdited:1;
    unsigned int _reserved:28;
};

struct __sdFlags {
    unsigned int selectable:1;
    unsigned int editable:1;
    unsigned int richText:1;
    unsigned int importsGraphics:1;
    unsigned int fieldEditor:1;
    unsigned int usesFontPanel:1;
    unsigned int rulerVisible:1;
    unsigned int usesRuler:1;
    unsigned int postingTextDidEnd:1;
    unsigned int beganEditing:1;
    unsigned int continuousSpellCheckingEnabled:1;
    unsigned int drawsBackground:1;
    unsigned int hasSpellCheckerDocumentTag:1;
    unsigned int selectionAffinity:2;
    unsigned int selectionGranularity:2;
    unsigned int blinkCaretDrawn:1;
    unsigned int resigningFirstResponder:1;
    unsigned int becomingFirstResponder:1;
    unsigned int selectionExtensionAnchor:2;
    unsigned int rulerUpdateDisabled:1;
    unsigned int delegateHandlesKeyBindings:1;
    unsigned int insertionPointDisabled:1;
    unsigned int smartnessEnabled:1;
    unsigned int rulerDisabled:1;
    unsigned int continueKillRing:1;
    unsigned int trackingAttachmentCell:1;
    unsigned int bufferingAltKeypadDigits:1;
    unsigned int allowsUndo:1;
    unsigned int delegateProvidesUndoManager:1;
};

struct __sdFlags2 {
    unsigned int _acceptsGlyphInfo:1;
    unsigned int _wantsNotificationForMarkedText:1;
    unsigned int _usesFindPanel:1;
    unsigned int _allowsDocumentBackgroundColorChange:1;
    unsigned int _delegateControlsInsertionPointDrawing:1;
    unsigned int _delegateHandlesEvents:1;
    unsigned int _delegateHearsAboutEvents:1;
    unsigned int _undoRedoInProgress:1;
    unsigned int _colorToChange:3;
    unsigned int _continuousGrammarCheckingEnabled:1;
    unsigned int _useCellFieldEditorUndo:1;
    unsigned int _wasInUpDownMovement:1;
    unsigned int _inUpDownMovement:1;
    unsigned int _splitInsertionPoint:1;
    unsigned int _undoManagerUsed:1;
    unsigned int _insertingText:1;
    unsigned int _markingText:1;
    unsigned int _pad:13;
};

struct __searchFieldBinderFlags {
    unsigned int _numberOfPredicateBindings:7;
    unsigned int _ignoreUpdates:1;
    unsigned int _bindingCountDidChange:1;
    unsigned int _reservedSearchFieldBinder:23;
};

struct __selectionBinderFlags {
    unsigned int _insertsNullPlaceholder:1;
    unsigned int _contentValuesBindingIsInSync:1;
    unsigned int _contentObjectsBindingIsInSync:1;
    unsigned int _needsToSetUpObserving:1;
    unsigned int _reservedSelectionBinder:28;
};

struct __sfFlags {
    unsigned int sendsWholeSearchString:1;
    unsigned int maximumRecents:8;
    unsigned int cancelVisible:1;
    unsigned int drawSize:2;
    unsigned int disableText:1;
    unsigned int menuTracking:1;
    unsigned int deferredUpdate:1;
    unsigned int sendsImmediately:1;
    unsigned int reserved:16;
};

struct __sliderCellFlags {
    unsigned int weAreVertical:1;
    unsigned int weAreVerticalSet:1;
    unsigned int reserved1:1;
    unsigned int isPressed:1;
    unsigned int allowsTickMarkValuesOnly:1;
    unsigned int tickMarkPosition:1;
    unsigned int sliderType:2;
    unsigned int drawing:1;
    unsigned int reserved2:23;
};

struct __tableBinderFlags {
    unsigned int _isAutoCreated:1;
    unsigned int _ignoreChanges:1;
    unsigned int _reservedTableBinder:30;
};

struct __tbFlags {
    unsigned int allowsUserCustomization:1;
    unsigned int autosavesUsingIdentifier:1;
    unsigned int initialConfigurationDone:1;
    unsigned int shouldHideAfterCustomization:1;
    unsigned int delegateDefaultItemIdentifiers:1;
    unsigned int delegateAllowedItemIdentifiers:1;
    unsigned int delegateItemWithItemIdentifier:1;
    unsigned int delegateNotificationsEnabled:1;
    unsigned int prefersToBeShown:1;
    unsigned int loadItemsImmediately:1;
    unsigned int currentItemsContainsPlaceholder:1;
    unsigned int customizationPanelIsRunning:1;
    unsigned int usesCustomSheetWidth:1;
    unsigned int clickAndDragPerformsCustomization:1;
    unsigned int showsNoContextMenu:1;
    unsigned int firstMoveableItemIndex:6;
    unsigned int keyboardLoopNeedsUpdating:1;
    unsigned int showHideDuringConfigurationChangeDisabled:1;
    unsigned int displayMode:2;
    unsigned int sizeMode:2;
    unsigned int doNotShowBaselineSeparator:1;
    unsigned int hideWithoutResizingWindowHint:1;
    unsigned int autovalidatesItemsDisabled:1;
    unsigned int inAutovalidation:1;
    unsigned int loadedMetrics:1;
};

struct __tbiFlags {
    unsigned int viewRespondsToIsEnabled:1;
    unsigned int viewRespondsToSetEnabled:1;
    unsigned int viewRespondsToTag:1;
    unsigned int viewRespondsToSetTag:1;
    unsigned int viewRespondsToAction:1;
    unsigned int viewRespondsToSetAction:1;
    unsigned int viewRespondsToTarget:1;
    unsigned int viewRespondsToSetTarget:1;
    unsigned int viewRespondsToImage:1;
    unsigned int viewRespondsToSetImage:1;
    unsigned int isEnabled:1;
    unsigned int isUserRemovable:1;
    unsigned int menuHasBeenSet:1;
    unsigned int menuRepIsDefault:1;
    unsigned int viewHasBeenLoaded:1;
    unsigned int drawingForDragImage:1;
    unsigned int isCustomItemType:1;
    unsigned int hasValidatedAutoModeConfiguration:1;
    unsigned int useAutoModeConfiguration:1;
    unsigned int hasNonDefaultPrioritySetting:1;
    unsigned int autovalidationDisabled:1;
    unsigned int RESERVED:11;
};

struct __tbvFlags {
    unsigned int _layoutInProgress:1;
    unsigned int _sizingToFit:1;
    unsigned int _isEditing:1;
    unsigned int _inCustomizationMode:1;
    unsigned int _sourceDragMoves:1;
    unsigned int _enabledAsDragSrc:1;
    unsigned int _enabledAsDragDest:1;
    unsigned int _actingAsPalette:1;
    unsigned int _usePaletteLabels:1;
    unsigned int _validatesItems:1;
    unsigned int _forceItemsToBeMinSize:1;
    unsigned int _forceAllClicksToBeDrags:1;
    unsigned int _wrapsItems:1;
    unsigned int _useGridAlignment:1;
    unsigned int _autosizesToFitHorizontally:1;
    unsigned int transparentBackground:1;
    unsigned int _horizontalBaselineDrawingDisabled:1;
    unsigned int shouldOverrideHalftonePhase:1;
    unsigned int weStartedDrag:1;
    unsigned int dragOptimizationOn:1;
    unsigned int dragIsInsideView:1;
    unsigned int insertionOptimizationShouldEndAfterUpdates:1;
    unsigned int wantsKeyboardLoop:1;
    unsigned int clipIndicatorWasFirstResponder:1;
    unsigned int scheduledDelayedValidateVisibleItems:1;
    unsigned int skippedLayoutWhileDisabled:1;
    unsigned int shouldHideAfterKeyboardHotKeyEvent:1;
    unsigned int RESERVED:5;
};

struct __tcFlags {
    unsigned int widthTracksTextView:1;
    unsigned int heightTracksTextView:1;
    unsigned int observingFrameChanges:1;
    unsigned int _reserved:13;
};

struct __textBinderFlags {
    unsigned int _objectSupportsTextColor:1;
    unsigned int _hasRequestedTextColor:1;
    unsigned int _reservedTextBinder:30;
};

struct __textColorBinderFlags {
    unsigned int _referenceBinderDidRequestColor:1;
    unsigned int _reservedTextColorBinder:31;
};

struct __textColorBinderPluginFlags {
    unsigned int _isTextColorInvalidationCapable:1;
    unsigned int _reservedTextColorBinderPlugin:31;
};

struct __tfFlags {
    unsigned int drawsBackground:1;
    unsigned int bezelStyle:3;
    unsigned int thcSortDirection:2;
    unsigned int thcSortPriority:4;
    unsigned int mini:1;
    unsigned int textColorIgnoresNormalDisableFlag:1;
    unsigned int textColorDisableFlag:1;
    unsigned int thcForceHighlightForSort:1;
    unsigned int invalidTextColor:1;
    unsigned int reservedTextFieldCell:17;
};

struct __treeControllerFlags {
    unsigned int _avoidsEmptySelection:1;
    unsigned int _preservesSelection:1;
    unsigned int _selectsInsertedObjects:1;
    unsigned int _explicitlyCannotInsert:1;
    unsigned int _explicitlyCannotInsertChild:1;
    unsigned int _explicitlyCannotAddChild:1;
    unsigned int _alwaysUsesMultipleValuesMarker:1;
    unsigned int _reservedTreeController:25;
};

struct __treeDetailBinderFlags {
    unsigned int _reservedTreeDetailBinder:32;
};

struct __ttFlags {
    unsigned int drawsBackground:1;
    unsigned int selectable:1;
    unsigned int editable:1;
    unsigned int richText:1;
    unsigned int importsGraphics:1;
    unsigned int horizontallyResizable:1;
    unsigned int verticallyResizable:1;
    unsigned int fieldEditor:1;
    unsigned int usesFontPanel:1;
    unsigned int rulerVisible:1;
    unsigned int allowsUndo:1;
    unsigned int _pad:21;
};

struct __tviFlags {
    unsigned int hasCustomColor:1;
    unsigned int labelSizeIsValid:1;
    unsigned int autoGeneratedIFR:1;
    unsigned int isTabDisabled:1;
    unsigned int RESERVED:28;
};

struct __tvtFlags {
    unsigned int drawsBackground:1;
    unsigned int selectable:1;
    unsigned int editable:1;
    unsigned int richText:1;
    unsigned int importsGraphics:1;
    unsigned int horizontallyResizable:1;
    unsigned int verticallyResizable:1;
    unsigned int fieldEditor:1;
    unsigned int usesFontPanel:1;
    unsigned int rulerVisible:1;
    unsigned int containerTracksWidth:1;
    unsigned int containerTracksHeight:1;
    unsigned int usesRuler:1;
    unsigned int allowsUndo:1;
    unsigned int _pad:18;
};

struct __userDefaultsControllerFlags {
    unsigned int _sharedInstance:1;
    unsigned int _appliesImmediately:1;
    unsigned int _reservedUserDefaultsController:30;
};

struct __vaFlags {
    unsigned int caching:1;
    unsigned int reserved:31;
};

struct __valueBinderFlags {
    unsigned int _allowsEditingMultipleValuesSelection:1;
    unsigned int _continuouslyUpdatesValue:1;
    unsigned int _createsSortDescriptor:1;
    unsigned int _isEditing:1;
    unsigned int _useFormattedValue:1;
    unsigned int _ignoreShowValue:1;
    unsigned int _hasUncommittedChanges:1;
    unsigned int _revertBackToOriginalValue:1;
    unsigned int _reservedValueBinder:24;
};

struct __valueBinderPluginFlags {
    unsigned int _isActionCellPlugin:1;
    unsigned int _isFormatterPlugin:1;
    unsigned int _isObjectValueInvalidationCapable:1;
    unsigned int _reservedValueBinderPlugin:29;
};

struct __viewStateBinderFlags {
    unsigned int _ignoreUpdates:1;
    unsigned int _reservedViewStateBinder:31;
};

struct __wFlags {
    unsigned int backing:2;
    unsigned int visible:1;
    unsigned int isMainWindow:1;
    unsigned int isKeyWindow:1;
    unsigned int hidesOnDeactivate:1;
    unsigned int dontFreeWhenClosed:1;
    unsigned int oneShot:1;
    unsigned int deferred:1;
    unsigned int cursorRectsDisabled:1;
    unsigned int haveFreeCursorRects:1;
    unsigned int validCursorRects:1;
    unsigned int docEdited:1;
    unsigned int dynamicDepthLimit:1;
    unsigned int worksWhenModal:1;
    unsigned int limitedBecomeKey:1;
    unsigned int needsFlush:1;
    unsigned int viewsNeedDisplay:1;
    unsigned int ignoredFirstMouse:1;
    unsigned int repostedFirstMouse:1;
    unsigned int windowDying:1;
    unsigned int tempHidden:1;
    unsigned int floatingPanel:1;
    unsigned int wantsToBeOnMainScreen:1;
    unsigned int optimizedDrawingOk:1;
    unsigned int optimizeDrawing:1;
    unsigned int titleIsRepresentedFilename:1;
    unsigned int excludedFromWindowsMenu:1;
    unsigned int depthLimit:4;
    unsigned int delegateReturnsValidRequestor:1;
    unsigned int lmouseupPending:1;
    unsigned int rmouseupPending:1;
    unsigned int wantsToDestroyRealWindow:1;
    unsigned int wantsToRegDragTypes:1;
    unsigned int sentInvalidateCursorRectsMsg:1;
    unsigned int avoidsActivation:1;
    unsigned int frameSavedUsingTitle:1;
    unsigned int didRegDragTypes:1;
    unsigned int delayedOneShot:1;
    unsigned int postedNeedsDisplayNote:1;
    unsigned int postedInvalidCursorRectsNote:1;
    unsigned int initialFirstResponderTempSet:1;
    unsigned int autodisplay:1;
    unsigned int tossedFirstEvent:1;
    unsigned int isImageCache:1;
    unsigned int interfaceStyle:3;
    unsigned int keyViewSelectionDirection:2;
    unsigned int defaultButtonCellKETemporarilyDisabled:1;
    unsigned int defaultButtonCellKEDisabled:1;
    unsigned int menuHasBeenSet:1;
    unsigned int wantsToBeModal:1;
    unsigned int showingModalFrame:1;
    unsigned int isTerminating:1;
    unsigned int win32MouseActivationInProgress:1;
    unsigned int makingFirstResponderForMouseDown:1;
    unsigned int needsZoom:1;
    unsigned int sentWindowNeedsDisplayMsg:1;
    unsigned int liveResizeActive:1;
};

struct __wcFlags {
    unsigned int shouldCloseDocument:1;
    unsigned int shouldCascade:1;
    unsigned int nibIsLoaded:1;
    unsigned int nibNameIsPath:1;
    unsigned int RESERVED:28;
};

struct _colorListFlags {
    unsigned int colorsLoaded:1;
    unsigned int editable:1;
    unsigned int hasDeviceSpecificLists:1;
    unsigned int dirty:1;
    unsigned int hasFrozen:1;
    unsigned int notificationsDisabled:1;
    unsigned int hasAttemptedLoadingBundleForDirectory:1;
    unsigned int isProfileBased:1;
    unsigned int :24;
};

struct _cursorFlags {
    unsigned int onMouseExited:1;
    unsigned int onMouseEntered:1;
    unsigned int cursorType:8;
    unsigned int :22;
};

struct _flags {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :12;
};

struct _fmFlags {
    unsigned int multipleFont:1;
    unsigned int disabled:1;
    unsigned int makePanelKey:1;
    unsigned int _RESERVED:13;
};

struct _frFlags {
    unsigned int defeatTitleWrap:1;
    unsigned int resizeByIncrement:1;
    unsigned int RESERVED:30;
};

struct _mFlags {
    unsigned int identity:1;
    unsigned int rotated:1;
    unsigned int rotationOnly:1;
    unsigned int _RESERVED:13;
};

struct _sFlags {
    unsigned int isHoriz:1;
    unsigned int arrowsLoc:2;
    unsigned int partsUsable:2;
    unsigned int fine:1;
    unsigned int needsEnableFlush:1;
    unsigned int thumbing:1;
    unsigned int slotDrawn:1;
    unsigned int knobDrawn:1;
    unsigned int lit:1;
    unsigned int knobLit:1;
    unsigned int reserved:1;
    unsigned int controlTint:3;
    unsigned int repeatCount:16;
};

struct _tvFlags {
    unsigned int horizontallyResizable:1;
    unsigned int verticallyResizable:1;
    unsigned int viewOwnsTextStorage:1;
    unsigned int displayWithoutLayout:1;
    unsigned int settingMarkedRange:1;
    unsigned int containerOriginInvalid:1;
    unsigned int registeredForDragging:1;
    unsigned int superviewIsClipView:1;
    unsigned int forceRulerUpdate:1;
    unsigned int typingText:1;
    unsigned int wasPostingFrameNotifications:1;
    unsigned int wasRotatedOrScaledFromBase:1;
    unsigned int settingNeedsDisplay:1;
    unsigned int setAcceptsMouseMoved:1;
    unsigned int wasAcceptingMouseMoved:1;
    unsigned int _pad:17;
};

struct _xmlAttr;

struct _xmlDoc;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct jpeg_color_deconverter;

struct jpeg_color_quantizer;

struct jpeg_d_coef_controller;

struct jpeg_d_main_controller;

struct jpeg_d_post_controller;

struct jpeg_decomp_master;

struct jpeg_decompress_struct {
    struct jpeg_error_mgr *_field1;
    struct jpeg_memory_mgr *_field2;
    struct jpeg_progress_mgr *_field3;
    void *_field4;
    int _field5;
    int _field6;
    struct jpeg_source_mgr *_field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    int _field11;
    int _field12;
    unsigned int _field13;
    unsigned int _field14;
    double _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    unsigned int _field28;
    unsigned int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    char **_field34;
    unsigned int _field35;
    int _field36;
    unsigned int _field37;
    int _field38;
    unsigned int _field39;
    int (*_field40)[64];
    CDAnonymousStruct22 *_field41[4];
    CDAnonymousStruct22 *_field42[4];
    CDAnonymousStruct22 *_field43[4];
    int _field44;
    CDAnonymousStruct22 *_field45;
    int _field46;
    int _field47;
    unsigned char _field48[16];
    unsigned char _field49[16];
    unsigned char _field50[16];
    unsigned int _field51;
    int _field52;
    unsigned char _field53;
    unsigned char _field54;
    unsigned char _field55;
    unsigned short _field56;
    unsigned short _field57;
    int _field58;
    unsigned char _field59;
    int _field60;
    struct jpeg_marker_struct *_field61;
    int _field62;
    int _field63;
    int _field64;
    unsigned int _field65;
    char *_field66;
    int _field67;
    CDAnonymousStruct22 *_field68[4];
    unsigned int _field69;
    unsigned int _field70;
    int _field71;
    int _field72[10];
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    int _field77;
    struct jpeg_decomp_master *_field78;
    struct jpeg_d_main_controller *_field79;
    struct jpeg_d_coef_controller *_field80;
    struct jpeg_d_post_controller *_field81;
    struct jpeg_input_controller *_field82;
    struct jpeg_marker_reader *_field83;
    struct jpeg_entropy_decoder *_field84;
    struct jpeg_inverse_dct *_field85;
    struct jpeg_upsampler *_field86;
    struct jpeg_color_deconverter *_field87;
    struct jpeg_color_quantizer *_field88;
};

struct jpeg_entropy_decoder;

struct jpeg_error_mgr;

struct jpeg_input_controller;

struct jpeg_inverse_dct;

struct jpeg_marker_reader;

struct jpeg_marker_struct;

struct jpeg_memory_mgr;

struct jpeg_progress_mgr;

struct jpeg_source_mgr;

struct jpeg_upsampler;

struct stat {
    int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    long long _field11;
    long long _field12;
    int _field13;
    unsigned int _field14;
    unsigned int _field15;
    int _field16;
    long long _field17[2];
};

struct stream_functions;

struct tiff {
    char *_field1;
    struct _NXStream *_field2;
    short _field3;
    char _field4;
    char _field5;
    short _field6;
    long _field7;
    long _field8;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        unsigned short _field7;
        unsigned short _field8;
        unsigned short _field9;
        unsigned short _field10;
        unsigned short _field11;
        unsigned short _field12;
        unsigned short _field13;
        unsigned short _field14;
        unsigned short _field15;
        unsigned short _field16;
        unsigned int _field17;
        unsigned int _field18;
        unsigned int _field19;
        float _field20;
        float _field21;
        unsigned short _field22;
        unsigned short _field23;
        float _field24;
        float _field25;
        unsigned int _field26;
        unsigned int _field27;
        unsigned short _field28[2];
        unsigned int _field29;
        unsigned short _field30;
        unsigned short _field31;
        unsigned short _field32;
        unsigned short _field33;
        unsigned int _field34;
        unsigned short *_field35;
        unsigned short *_field36;
        unsigned short *_field37;
        unsigned short *_field38;
        unsigned short *_field39[3];
        char *_field40;
        char *_field41;
        char *_field42;
        char *_field43;
        char *_field44;
        char *_field45;
        char *_field46;
        char *_field47;
        char *_field48;
        unsigned int _field49[2];
        unsigned int _field50;
        unsigned int _field51;
        unsigned int *_field52;
        unsigned int *_field53;
        unsigned short _field54[2];
        float *_field55;
        unsigned short _field56[2];
        unsigned short _field57;
        float *_field58;
        float *_field59;
        float *_field60;
        unsigned short *_field61[4];
        unsigned short _field62;
        unsigned short _field63[2];
        char *_field64;
        char *_field65;
        unsigned int _field66;
        void *_field67;
    } _field9;
    struct {
        unsigned short _field1;
        unsigned short _field2;
        unsigned long _field3;
    } _field10;
    int *_field11;
    int *_field12;
    int _field13[10];
    long _field14;
    int _field15;
    int _field16;
    long _field17;
    long _field18;
    int _field19;
    long _field20;
    void *_field21;
    void *_field22;
    void *_field23;
    void *_field24;
    void *_field25;
    void *_field26;
    void *_field27;
    void *_field28;
    void *_field29;
    void *_field30;
    void *_field31;
    void *_field32;
    char *_field33;
    int _field34;
    int _field35;
    char *_field36;
    long _field37;
    char *_field38;
    long _field39;
    long _field40;
    int _field41;
    int _field42;
};

struct timespec {
    int _field1;
    long _field2;
};

typedef struct {
    double _currentDate;
    double _birthDate;
    double _lastDate;
} CDAnonymousStruct11;

typedef struct {
    int _field1;
    id _field2;
    id _field3;
    struct _NSRect _field4;
    char _field5;
    char _field6;
} CDAnonymousStruct12;

typedef struct {
    char _field1;
    id _field2;
    char _field3;
    id _field4;
} CDAnonymousStruct18;

typedef struct {
    NSDictionary *_field1;
    NSFont *_field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    struct _NSRect _field9;
    struct {
        unsigned int _isAttachmentRun:1;
        unsigned int _hasPositionalStake:1;
        unsigned int _isDefaultFace:1;
        unsigned int _hasCombiningMarks:1;
        unsigned int _isScreenFont:1;
        unsigned int _reserved:27;
    } _field10;
} CDAnonymousStruct10;

typedef struct {
    int location;
    int length;
} CDAnonymousStruct7;

typedef struct {
} CDAnonymousStruct22;

typedef struct {
    id _field1;
    SEL _field2;
    SEL _field3;
    SEL _field4;
} CDAnonymousStruct3;

typedef struct {
    id _field1;
    id _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    struct _NSRect _field9;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :27;
    } _field10;
} CDAnonymousStruct25;

typedef struct {
    struct _NSRect *_field1;
    struct _NSRect _field2;
    unsigned int _field3;
    char _field4;
} CDAnonymousStruct24;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
} CDAnonymousStruct20;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    int _field4;
} CDAnonymousStruct8;

typedef struct {
    id _field1;
    int _field2;
    int _field3;
    struct _flags _field4;
} CDAnonymousStruct17;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    id _field4;
} CDAnonymousStruct1;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
    char _field4;
} CDAnonymousStruct4;

typedef struct {
    unsigned int :4;
    unsigned int :1;
    unsigned int :24;
    union {
        char *_field1;
        CDAnonymousStruct22 *_field2;
        struct __CFDictionary *_field3;
    } _field1;
} CDAnonymousStruct6;

typedef struct {
    id _field1;
    id _field2;
} CDAnonymousStruct9;

typedef struct {
    unsigned int _currentLevel:4;
    unsigned int _usesFontLeading:1;
    unsigned int _performBidi:1;
    unsigned int _forceOrigFontBaseline:1;
    unsigned int _textAlignment:4;
    unsigned int _lineBreakMode:4;
    unsigned int _hasStrongRight:1;
    unsigned int _hasComplexScript:1;
    unsigned int _isGlyphIndexIdentity:1;
    unsigned int _writingDirection:2;
    unsigned int _reserved:12;
} CDAnonymousStruct21;

typedef struct {
    void *stream;
    char closeOnEnd;
    char memoryStream;
    char *buffer;
    char *currentPtr;
    char *endPtr;
} CDAnonymousStruct23;

typedef struct {
    char *data;
    int len;
} CDAnonymousStruct15;

typedef struct {
    id _field1;
    SEL _field2;
    id _field3;
} CDAnonymousStruct5;

typedef struct {
    CDAnonymousStruct22 *_field1;
    struct _NSRange _field2;
    struct _NSRange _field3;
    float _field4;
    float _field5;
    void *_field6;
    void *_field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    struct _NSRect _field14;
    struct _NSRect _field15;
    struct _NSRange _field16;
    id _field17;
    float _field18;
    int _field19;
    CDAnonymousStruct21 _field20;
    void *_field21[0];
} CDAnonymousStruct16;

typedef struct {
    id _field1;
    SEL _field2;
    void *_field3;
} CDAnonymousStruct2;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    short _field3;
    int _field4;
    unsigned char _field5;
    char _field6;
    unsigned char _field7;
    unsigned char _field8;
    short _field9;
    short _field10;
    union {
        struct _CGSTabletPointData _field1;
        struct _CGSTabletProximityData _field2;
    } _field11;
    unsigned int :1;
    unsigned int :31;
    void *_field12;
    void *_field13;
    int _field14[1];
} CDAnonymousStruct13;

typedef struct {
    struct _NSModalSession *_field1;
    char _field2;
    id _field3;
} CDAnonymousStruct14;

typedef struct {
    id _field1;
    SEL _field2;
} CDAnonymousStruct19;

typedef union {
    struct {
        float _lineSpacing;
        float _paraSpacingBefore;
        float _paraSpacingAfter;
        int _startingGlyphIndex;
    } _field1;
    struct {
        struct _NSRect _lineFragmentUsedRect;
    } _field2;
} CDAnonymousUnion1;

/*
 * File: AppKit
 * Arch: Intel 80x86 (i386)
 *       Current version: 824.42.0, Compatibility version: 45.0.0
 */

@protocol NSChangeSpelling
- (void)changeSpelling:(id)fp8;
@end

@protocol NSCoding
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
@end

@protocol NSColorPickingCustom
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (id)provideNewView:(BOOL)fp8;
- (void)setColor:(id)fp8;
@end

@protocol NSColorPickingDefault
- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (id)provideNewButtonImage;
- (void)insertNewButtonImage:(id)fp8 in:(id)fp12;
- (void)viewSizeChanged:(id)fp8;
- (void)alphaControlAddedOrRemoved:(id)fp8;
- (void)attachColorList:(id)fp8;
- (void)detachColorList:(id)fp8;
- (void)setMode:(int)fp8;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSDeserializerStream
- (int)readInt;
- (unsigned int)readAlignedDataSize;
- (void)readData:(void *)fp8 length:(unsigned int)fp12;
- (id)initFromMemoryNoCopy:(const void *)fp8 length:(unsigned int)fp12 freeWhenDone:(BOOL)fp16;
@end

@protocol NSDraggingInfo
- (id)draggingDestinationWindow;
- (unsigned int)draggingSourceOperationMask;
- (struct _NSPoint)draggingLocation;
- (struct _NSPoint)draggedImageLocation;
- (id)draggedImage;
- (id)draggingPasteboard;
- (id)draggingSource;
- (int)draggingSequenceNumber;
- (void)slideDraggedImageTo:(struct _NSPoint)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
@end

@protocol NSDraggingInfoPrivate
- (unsigned int)_lastDragDestinationOperation;
@end

@protocol NSGlyphStorage
- (void)insertGlyphs:(const unsigned int *)fp8 length:(unsigned int)fp12 forStartingGlyphAtIndex:(unsigned int)fp16 characterIndex:(unsigned int)fp20;
- (void)setIntAttribute:(int)fp8 value:(int)fp12 forGlyphAtIndex:(unsigned int)fp16;
- (id)attributedString;
- (unsigned int)layoutOptions;
@end

@protocol NSIgnoreMisspelledWords
- (void)ignoreSpelling:(id)fp8;
@end

@protocol NSInputServerMouseTracker
- (BOOL)mouseDownOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;
- (BOOL)mouseDraggedOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;
- (void)mouseUpOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;
@end

@protocol NSInputServiceProvider
- (void)insertText:(id)fp8 client:(id)fp12;
- (void)doCommandBySelector:(SEL)fp8 client:(id)fp12;
- (void)markedTextAbandoned:(id)fp8;
- (void)markedTextSelectionChanged:(struct _NSRange)fp8 client:(id)fp16;
- (void)terminate:(id)fp8;
- (BOOL)canBeDisabled;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)wantsToDelayTextChangeNotifications;
- (void)inputClientBecomeActive:(id)fp8;
- (void)inputClientResignActive:(id)fp8;
- (void)inputClientEnabled:(id)fp8;
- (void)inputClientDisabled:(id)fp8;
- (void)activeConversationWillChange:(id)fp8 fromOldConversation:(long)fp12;
- (void)activeConversationChanged:(id)fp8 toNewConversation:(long)fp12;
@end

@protocol NSLocking
- (void)lock;
- (void)unlock;
@end

@protocol NSMenuItem <NSObject, NSCopying, NSCoding, NSValidatedUserInterfaceItem>
+ (void)setUsesUserKeyEquivalents:(BOOL)fp8;
+ (BOOL)usesUserKeyEquivalents;
+ (id)separatorItem;
- (id)initWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16;
- (void)setMenu:(id)fp8;
- (id)menu;
- (BOOL)hasSubmenu;
- (void)setSubmenu:(id)fp8;
- (id)submenu;
- (void)setTitle:(id)fp8;
- (id)title;
- (void)setAttributedTitle:(id)fp8;
- (id)attributedTitle;
- (BOOL)isSeparatorItem;
- (void)setKeyEquivalent:(id)fp8;
- (id)keyEquivalent;
- (void)setKeyEquivalentModifierMask:(unsigned int)fp8;
- (unsigned int)keyEquivalentModifierMask;
- (id)userKeyEquivalent;
- (unsigned int)userKeyEquivalentModifierMask;
- (void)setMnemonicLocation:(unsigned int)fp8;
- (unsigned int)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setState:(int)fp8;
- (int)state;
- (void)setOnStateImage:(id)fp8;
- (id)onStateImage;
- (void)setOffStateImage:(id)fp8;
- (id)offStateImage;
- (void)setMixedStateImage:(id)fp8;
- (id)mixedStateImage;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isEnabled;
- (void)setAlternate:(BOOL)fp8;
- (BOOL)isAlternate;
- (void)setIndentationLevel:(int)fp8;
- (int)indentationLevel;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setTag:(int)fp8;
- (int)tag;
- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;
- (void)setToolTip:(id)fp8;
- (id)toolTip;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSObject
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@protocol NSPredicateVisitor
- (void)visitPredicate:(id)fp8;
- (void)visitPredicateExpression:(id)fp8;
- (void)visitPredicateOperator:(id)fp8;
@end

@protocol NSPreferencesModule
- (id)viewForPreferenceNamed:(id)fp8;
- (id)imageForPreferenceNamed:(id)fp8;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (void)didChange;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
@end

@protocol NSSerializerStream
- (unsigned int)writeInt:(int)fp8;
- (unsigned int)writeAlignedDataSize:(unsigned int)fp8;
- (unsigned int)writeData:(const void *)fp8 length:(unsigned int)fp12;
- (unsigned int)writeRoomForInt:(int *)fp8;
- (void)writeDelayedInt:(int)fp8 for:(int)fp12;
- (void)copySerializationInto:(void *)fp8;
@end

@protocol NSServiceListenerProto
- (id)_doInvokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 error:(id *)fp24 unhide:(BOOL)fp28;
- (oneway void)asyncInvokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 menu:(id)fp24 remoteServices:(id)fp28 unhide:(BOOL)fp32;
- (BOOL)invokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 error:(id *)fp24;
- (BOOL)invokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 menu:(id)fp24 remoteServices:(id)fp28;
- (oneway void)serviceError:(id)fp8 error:(id)fp12;
@end

@protocol NSServiceMasterProto
- (id)objectForServicePath:(id)fp8;
@end

@protocol NSSliderViewRequiredMethods
+ (id)genericColorSpace;
- (id)provideNewSubview:(id)fp8;
- (void)viewSizeChanged:(id)fp8;
- (void)setColor:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;
- (void)adjustControls:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
@end

@protocol NSSpellServerPrivateNewDO
- (struct _NSRange)_findMisspelledWordInString:(in id)fp8 language:(in bycopy id)fp12 learnedDictionaries:(in bycopy id)fp16 wordCount:(out int *)fp20 countOnly:(in char)fp24;
- (struct _NSRange)_checkGrammarInString:(in id)fp8 language:(in bycopy id)fp12 details:(out bycopy id *)fp16;
- (bycopy id)_suggestGuessesForWord:(in bycopy id)fp8 inLanguage:(in bycopy id)fp12;
- (bycopy id)_suggestCompletionsForPartialWordRange:(struct _NSRange)fp8 inString:(in bycopy id)fp16 language:(in bycopy id)fp20;
- (BOOL)_learnWord:(in bycopy id)fp8 inDictionary:(in bycopy id)fp12;
- (BOOL)_forgetWord:(in bycopy id)fp8 inDictionary:(in bycopy id)fp12;
- (bycopy id)_wordsInDictionary:(in bycopy id)fp8;
- (oneway void)_setWords:(in bycopy id)fp8 inDictionary:(in bycopy id)fp12;
- (oneway void)_invalidateDictionary:(in bycopy id)fp8 newTime:(in int)fp12;
@end

@protocol NSTextAttachmentCell <NSObject>
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)wantsToTrackMouse;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (struct _NSSize)cellSize;
- (struct _NSPoint)cellBaselineOffset;
- (void)setAttachment:(id)fp8;
- (id)attachment;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
@end

@protocol NSTextInput
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)validAttributesForMarkedText;
@end

@protocol NSURLHandleClient
- (void)URLHandle:(id)fp8 resourceDataDidBecomeAvailable:(id)fp12;
- (void)URLHandleResourceDidBeginLoading:(id)fp8;
- (void)URLHandleResourceDidFinishLoading:(id)fp8;
- (void)URLHandleResourceDidCancelLoading:(id)fp8;
- (void)URLHandle:(id)fp8 resourceDidFailLoadingWithReason:(id)fp12;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id)fp8;
@end

@protocol NSValidatedUserInterfaceItem
- (SEL)action;
- (int)tag;
@end

@protocol RulebookServer <NSObject>
- (id)getRulebookData:(bycopy id)fp8 makeSharable:(BOOL)fp12 littleEndian:(BOOL)fp16;
- (int)dataStampForTriplet:(bycopy id)fp8 littleEndian:(BOOL)fp12;
- (bycopy id)sampleTextForTriplet:(bycopy id)fp8;
- (void)flushDataForTriplet:(bycopy id)fp8 littleEndian:(BOOL)fp12;
- (bycopy id)coveredCharacterCacheData;
@end

@protocol _NSActionBinderPlugin <_NSEditorBinderPlugin>
- (BOOL)targetAndArgumentsAcceptableForPerformAction;
- (BOOL)invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16 object:(id)fp20;
@end

@protocol _NSBinderPlugin <NSObject>
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (BOOL)handleObservingRefresh:(id)fp8;
- (BOOL)observeKeyPathForBindingInfo:(id)fp8 registerOrUnregister:(BOOL)fp12 object:(id)fp16;
- (void)connectionWasEstablished:(id)fp8;
- (void)connectionWasBroken:(id)fp8;
- (Class)defaultPlaceholderLookupClassForBinding:(id)fp8 object:(id)fp12;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (BOOL)shouldUseInvalidationForObject:(id)fp8;
@end

@protocol _NSBindingTree
- (id)_valueForKeyPath:(id)fp8 ofObjectAtIndexPath:(id)fp12;
- (void)_setValue:(id)fp8 forKeyPath:(id)fp12 ofObjectAtIndexPath:(id)fp16;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 ofObjectAtIndexPath:(id)fp20;
- (BOOL)_validateValue:(id *)fp8 forKeyPath:(id)fp12 ofObjectAtIndexPath:(id)fp16 error:(id *)fp20;
- (id)objectAtIndexPath:(id)fp8;
- (id)nodeAtIndexPath:(id)fp8;
- (unsigned int)countForIndexPath:(id)fp8;
- (BOOL)isExpandableAtArrangedObjectIndexPath:(id)fp8;
@end

@protocol _NSDisplayFontBinderPlugin <_NSBinderPlugin>
- (id)fontInvalidationCapableObjectForObject:(id)fp8;
@end

@protocol _NSEditorBinderPlugin <_NSBinderPlugin>
- (BOOL)prefersEnabledOverEditable:(id)fp8;
- (BOOL)conditionalBehaviorOffByDefault:(id)fp8;
@end

@protocol _NSMultipleSelectionBinderPlugin <_NSSelectionBinderPlugin>
@end

@protocol _NSSelectionBinderPlugin <NSObject, _NSValueBinderPlugin>
- (unsigned long long)allowedContentBindingMask;
- (BOOL)canPopulateWithPlaceholders;
- (void)populateObject:(id)fp8 withContent:(id)fp12 valueKey:(id)fp16 objectKey:(id)fp20 insertsNullPlaceholder:(BOOL)fp24;
- (BOOL)canIgnorePopulatingObject:(id)fp8;
@end

@protocol _NSTextColorBinderPlugin <_NSBinderPlugin>
- (id)textColorInvalidationCapableObjectForObject:(id)fp8;
@end

@protocol _NSValueBinderPlugin <_NSEditorBinderPlugin>
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)fp8;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (BOOL)isBooleanValueBindingForObject:(id)fp8;
- (Class)valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (BOOL)needsDelegate;
- (struct __NSKeyValueCodingControllerModeType)editedMode:(id)fp8 forEditingOrAction:(BOOL)fp12;
- (void)editingHasBegun:(id)fp8;
- (void)editingHasEnded:(id)fp8;
- (void)editingWasAborted:(id)fp8;
- (void)_actionHasBegun:(id)fp8 atIndex:(unsigned int)fp12;
- (void)_actionHasBegun:(id)fp8 atIndexPath:(id)fp12;
- (void)actionHasBegun:(id)fp8 sender:(id)fp12;
- (void)actionHasEnded:(id)fp8 sender:(id)fp12;
- (id)editingBinderForControl:(id)fp8;
- (BOOL)shouldIgnoreAction:(id)fp8;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)formattedValueInObject:(id)fp8 errorEncountered:(char *)fp12 error:(id *)fp16;
- (id)shownValueInObject:(id)fp8;
- (id)formatterOfObject:(id)fp8;
- (BOOL)isObjectTableColumnDataCell:(id)fp8;
- (BOOL)shouldProvideSortDescriptor:(id)fp8 optionsAdvertisingOnly:(BOOL)fp12;
- (id)objectValueInvalidationCapableObjectForObject:(id)fp8;
- (void)invalidateObjectValueInObject:(id)fp8;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)applyObjectValue:(id *)fp8 forBinding:(id)fp12 operation:(int *)fp16 needToRunAlert:(char *)fp20 error:(id *)fp24;
@end

@interface _NSSparseArray : NSObject <NSCopying>
{
    NSMutableArray *_theArray;
}

- (id)init;
- (id)_initWithArray:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (int)count;
- (int)firstIndex;
- (int)lastIndex;
- (BOOL)containsIndex:(int)fp8;
- (int)indexFollowing:(int)fp8;
- (int)indexPreceding:(int)fp8;
- (void)addIndexRange:(struct _NSRange)fp8;
- (void)removeIndexRange:(struct _NSRange)fp8;
- (void)addIndex:(int)fp8;
- (void)removeIndex:(int)fp8;
- (void)removeAllIndices;
- (void)insertSpace:(int)fp8 atIndex:(int)fp12;
- (void)removeSpace:(int)fp8 atIndex:(int)fp12;
- (id)_ranges;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)indexEnumerator;
- (BOOL)isEqual:(id)fp8;

@end

@interface _NSSparseArrayEnumeration : NSEnumerator
{
    _NSSparseArray *_sparseArray;
    int _currentIndex;
}

- (id)initWithSparseArray:(id)fp8;
- (id)nextObject;
- (void)dealloc;
- (void)finalize;

@end

@interface NSAppleMenuController : NSObject
{
    NSMutableArray *appleMenus;
    NSMutableArray *appleMenuRepresentedObjects;
}

- (id)init;
- (void)dealloc;
- (void)_controlMenuKnownAbsent:(id)fp8;
- (void)controlMenu:(id)fp8;
- (id)parentItemRepresentedObjectForMenu:(id)fp8;
- (void)_updateKnownNotVisibleAppleMenu:(id)fp8;
- (void)updateAppleMenu:(id)fp8;

@end

@interface NSAppleMenuItemRepresentedObject : NSObject
{
    NSString *_title;
    NSImage *_image;
    NSString *_domainName;
    NSString *_key;
    NSArray *_submenuRepresentedObjects;
    NSDictionary *_dictionary;
}

- (id)path;
- (id)openWithApplication;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)_imageFromNewResourceLocation:(id)fp8;
- (id)image;
- (void)openAppleMenuItem:(id)fp8;
- (id)secondaryInvocation;
- (void)setSubmenuRepresentedObjectsAreStale;
- (BOOL)submenuRepresentedObjectsAreStale;
- (id)_menuItemDictionaries;
- (id)submenuRepresentedObjects;
- (BOOL)hasSubmenu;
- (BOOL)isSeparatorItem;
- (void)initializeItem:(id)fp8;
- (void)_updateSubmenuKnownStale:(id)fp8;
- (void)updateSubmenu:(id)fp8;
- (id)initWithDomainName:(id)fp8 key:(id)fp12 title:(id)fp16 image:(id)fp20;
- (id)initWithDynamicMenuItemDictionary:(id)fp8;
- (id)initWithDictionary:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSApplication (NSAppleMenuPrivate)
- (void)_updateAppleMenu:(id)fp8;
@end

@interface NSApplication (NSAppleMenu)
- (void)setAppleMenu:(id)fp8;
@end

@interface NSApplication (NSWindowCache)
- (CDAnonymousStruct17 *)_getWindowCache:(id)fp8 add:(BOOL)fp12;
- (id)_findWindowUsingCache:(int)fp8;
- (id)_findWindowUsingRealWindowNumber:(int)fp8;
- (void)_updateWindowsUsingCache;
- (void)_setCacheWindowNum:(int)fp8 forWindow:(id)fp12;
- (BOOL)_appHasVisibleWindowOrPanel;
- (BOOL)_appHasOpenNSWindow;
- (BOOL)_appHasNonMiniaturizedWindow;
- (void)_checkForTerminateAfterLastWindowClosed:(id)fp8;
- (void)_setVisibleInCache:(BOOL)fp8 forWindow:(id)fp12;
- (void)_removeWindowFromCache:(id)fp8;
- (BOOL)_isVisibleUsingCache:(id)fp8;
- (void)_setHidesOnDeactivateInCache:(BOOL)fp8 forWindow:(id)fp12;
- (void)_makeHODWindowsPerform:(SEL)fp8;
- (void)_setModalInCache:(BOOL)fp8 forWindow:(id)fp12;
- (void)_makeModalWindowsPerform:(SEL)fp8;
- (void)_restoreMiniaturizedWindow;
@end

@interface NSServicesPasteboard : NSPasteboard
{
    char *_sendType;
    NSData *_data;
    NSPasteboard *_source;
    char *firstIndirectType;
    BOOL preventRecursion;
}

+ (id)newType:(char *)fp8 data:(id)fp12 firstIndirectType:(char *)fp16;
+ (id)new:(id)fp8 firstIndirectType:(char *)fp12;
- (void)dealloc;
- (void)finalize;
- (BOOL)convertType:(char *)fp8 data:(id)fp12 to:(char *)fp16 inPasteboard:(id)fp20 usingFilter:(int)fp24;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;

@end

@interface NSServicesMenuHandler : NSObject
{
}

+ (BOOL)validateMenuItem:(id)fp8;
+ (id)_processRequest:(id)fp8;

@end

@interface NXTypesPair : NSObject
{
    char **sendTypes;
    char **returnTypes;
}

@end

@interface NSApplication (NSServicesMenuPrivate)
+ (id)_loadServicesMenuData;
- (id)servicesMenu;
- (BOOL)_launchSpellChecker:(int)fp8;
- (BOOL)_processRequest:(int)fp8 named:(id)fp12 usingPasteboard:(id)fp16;
- (BOOL)_parseMenuString:(id)fp8 menuName:(id *)fp12 itemName:(id *)fp16;
- (void)_registerServicesMenu:(id)fp8 withSendTypes:(const char **)fp12 andReturnTypes:(const char **)fp16 addToList:(BOOL)fp20;
- (void)registerServicesMenuSendTypes:(id)fp8 returnTypes:(id)fp12;
- (id)_initServicesMenu:(id)fp8;
- (id)_freeServicesMenu:(BOOL)fp8;
- (BOOL)_servicesMenuIsVisible;
- (void)setServicesMenu:(id)fp8;
- (void)_rebuildOrUpdateServicesMenu:(BOOL)fp8;
- (id)_doUpdateServicesMenu:(id)fp8;
- (BOOL)_servicesMenuHasBeenBuilt;
- (BOOL)_fillSpellCheckerPopupButton:(id)fp8;
- (id)_typeOfPrintFilter:(int)fp8;
- (void)_addPrintFiltersToPopUpButton:(id)fp8;
- (BOOL)_isPrintFilterDeviceDependent:(int)fp8;
- (id)_launchPrintFilter:(int)fp8 file:(id)fp12 deviceDependent:(char *)fp16;
- (void)_finishPrintFilter:(int)fp8 filter:(id)fp12;
@end

@interface NSApplication (NSSavePanelPrivate)
- (id)_fileExtensions;
@end

@interface NSFilePromiseDragSource : NSObject
{
    id _dragSource;
    NSArray *_filenames;
    struct __CFURL *_dropDestination;
    BOOL _dragEnded;
    int _typeCount;
}

- (id)initWithSource:(id)fp8;
- (void)dealloc;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 beganAt:(struct _NSPoint)fp12;
- (void)draggedImage:(id)fp8 movedTo:(struct _NSPoint)fp12;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (id)fileSpecForName:(id)fp8 atDestination:(struct __CFURL *)fp12;
- (struct __CFURL *)copyDropDirectory;
- (void)getFilenamesAndDropLocation;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12 itemIdentifier:(long)fp16;
- (void)setTypes:(id)fp8 onPasteboard:(id)fp12;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;

@end

@interface NSFileDragSource : NSObject
{
}

+ (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;

@end

@interface NSImage (NSTempHack)
- (id)getGlobalWindowNum:(int *)fp8 frame:(struct _NSRect *)fp12;
@end

@interface NSWindow (NSDrag)
- (void)registerForDraggedTypes:(id)fp8;
- (void)_registerDragTypesLater;
- (void)_registerDragTypes:(id)fp8;
- (id)_registerDragTypesIfNeeded;
- (void)_unregisterDragTypes;
- (void)unregisterDraggedTypes;
- (id)_findDragTargetFrom:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)dragImage:(id)fp8 at:(struct _NSPoint)fp12 offset:(struct _NSSize)fp20 event:(id)fp28 pasteboard:(id)fp32 source:(id)fp36 slideBack:(BOOL)fp40;
@end

@interface NSView (NSDrag)
- (void)registerForDraggedTypes:(id)fp8;
- (void)unregisterDraggedTypes;
- (id)registeredDraggedTypes;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)dragImage:(id)fp8 at:(struct _NSPoint)fp12 offset:(struct _NSSize)fp20 event:(id)fp28 pasteboard:(id)fp32 source:(id)fp36 slideBack:(BOOL)fp40;
- (id)_hitTest:(struct _NSPoint *)fp8 dragTypes:(id)fp12;
- (BOOL)_treeHasDragTypes;
- (void)_addDragTypesTo:(id)fp8;
- (BOOL)dragFile:(id)fp8 fromRect:(struct _NSRect)fp12 slideBack:(BOOL)fp28 event:(id)fp32;
- (BOOL)dragPromisedFilesOfTypes:(id)fp8 fromRect:(struct _NSRect)fp12 source:(id)fp28 slideBack:(BOOL)fp32 event:(id)fp36;
@end

@interface NSView (NSDragInternal)
- (void)_registerForDraggedTypes:(id)fp8 later:(BOOL)fp12;
@end

@interface _NSWindowMenuUpdater : NSObject
{
}

- (void)menuNeedsUpdate:(id)fp8;

@end

@interface NSApplication (NSWindowsMenu_Private)
- (void)_addWindowsMenu:(struct __CFArray *)fp8 enabled:(BOOL)fp12;
@end

@interface NSApplication (NSWindowsMenu)
- (id)windowsMenu;
- (void)setWindowsMenu:(id)fp8;
- (void)miniaturizeAll:(id)fp8;
- (void)arrangeInFront:(id)fp8;
- (void)alternateArrangeInFront:(id)fp8;
- (void)changeWindowsItem:(id)fp8 title:(id)fp12 filename:(BOOL)fp16;
- (void)updateWindowsItem:(id)fp8;
- (void)addWindowsItem:(id)fp8 title:(id)fp12 filename:(BOOL)fp16;
- (void)removeWindowsItem:(id)fp8;
@end

@interface _NSExistingCGSContext : NSCGSContext
{
}

- (id)initWithCGSContext:(struct CGContext *)fp8;
- (BOOL)isDrawingToScreen;
- (void *)focusStack;
- (void)dealloc;
- (void)finalize;
- (void)_invalidate;
- (id)focusedView;
- (id)window;
- (void)removeFreedView:(id)fp8;
- (void)removeFreedWindow:(id)fp8;
- (void)invalidateFocus:(id)fp8;
- (struct _NSRect)bounds;
- (BOOL)isFlipped;
- (BOOL)shouldDrawColor;

@end

@interface NSColor (cgGraphicsOps_Private)
+ (id)controlFillColor;
@end

@interface NSGraphicsContext (NSCGSContextBackwardCompatibility)
- (void)flush;
- (void)wait;
@end

@interface NSWindow (NSWindow_CarbonEventHandlers)
- (void)_installCarbonAppDockHandlers;
- (void)_installWindowDepthHandler;
- (void)_installCarbonWindowEventHandlers;
- (void)_installWindowRegionHandler;
@end

@interface NSObject (NSObjectAccessibilityAttributeAccessAdditions)
- (unsigned int)accessibilityIndexOfChild:(id)fp8;
- (unsigned int)accessibilityArrayAttributeCount:(id)fp8;
- (id)accessibilityArrayAttributeValues:(id)fp8 index:(unsigned int)fp12 maxCount:(unsigned int)fp16;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8 forParameter:(id)fp12;
@end

@interface NSAccessibilityNotifier : NSObject
{
}

+ (void)handleAppTermination:(id)fp8;

@end

@interface NSAccessibilityMockUIElement : NSObject
{
    NSString *_role;
    NSString *_subrole;
    id _parent;
}

+ (id)elementWithRole:(id)fp8 subrole:(id)fp12 parent:(id)fp16;
+ (id)elementWithRole:(id)fp8 parent:(id)fp12;
- (id)accessibilityAttributeNames;
- (id)initWithRole:(id)fp8 subrole:(id)fp12 parent:(id)fp16;
- (id)initWithRole:(id)fp8 parent:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;

@end

@interface NSAccessibilityReparentingProxy : NSAccessibilityProxy
{
    id _realElement;
    id _fauxParent;
}

+ (id)proxyFor:(id)fp8 fauxParent:(id)fp12;
- (id)initWithElement:(id)fp8 fauxParent:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (id)realElement;
- (id)accessibilityParentAttribute;

@end

@interface NSAccessibilityProxy : NSObject
{
}

- (id)realElement;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityOverriddenAttributes;
- (id)accessibilityFocusedAttribute;
- (id)_proxyParentedChild:(id)fp8;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8 forParameter:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (struct _NSRect)accessibilityFocusRingBoundsForBounds:(struct _NSRect)fp8;
- (id)_proxyForUIElement:(id)fp8;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;

@end

@interface NSObject (NSAccessibilityUIElementSpecifier)
- (id)_accessibilityUIElementPathForChild:(id)fp8;
- (id)_accessibilityUIElementPath;
- (BOOL)accessibilityShouldUseUniqueId;
@end

@interface NSActionCell : NSCell
{
    int _tag;
    id _target;
    SEL _action;
    id _controlView;
}

+ (void)initialize;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (int)tag;
- (void)setTag:(int)fp8;
- (void)setControlView:(id)fp8;
- (id)controlView;
- (void)dealloc;
- (void)finalize;
- (void)setBordered:(BOOL)fp8;
- (void)setBezeled:(BOOL)fp8;
- (void)setImage:(id)fp8;
- (void)setFont:(id)fp8;
- (void)setAlignment:(int)fp8;
- (void)setBaseWritingDirection:(int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (void)setFloatingPointFormat:(BOOL)fp8 left:(unsigned int)fp12 right:(unsigned int)fp16;
- (id)objectValue;
- (id)stringValue;
- (id)attributedStringValue;
- (int)intValue;
- (float)floatValue;
- (double)doubleValue;
- (void)_setEditingTextView:(id)fp8;
- (void)_clearEditingTextView:(id)fp8;
- (BOOL)_isEditingTextView:(id)fp8;
- (id)_selectOrEdit:(const struct _NSRect *)fp8 inView:(id)fp12 target:(id)fp16 editor:(id)fp20 event:(id)fp24 start:(int)fp28 end:(int)fp32;
- (void)endEditing:(id)fp8;
- (void)_restartEditingWithTextView:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (void)textDidChange:(id)fp8;
- (BOOL)_delegateValidation:(id)fp8 object:(id)fp12 uiHandled:(char *)fp16;
- (BOOL)_validateEntryString:(id)fp8 uiHandled:(char *)fp12;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSAffineTransform (NSAppKitAdditons)
- (id)transformBezierPath:(id)fp8;
- (void)set;
- (void)concat;
@end

@interface NSAlert : NSObject
{
    NSTextField *_informationField;
    id _first;
    id _second;
    id _third;
    NSArray *_buttons;
    NSPanel *_panel;
    id _messageField;
    id _imageView;
    struct _NSSize _minButtonSize;
    float _buttonSpacing;
    float _buttonPadding;
    float _messagePadding;
    float _buttonSpacingMaxX;
    float _buttonSpacingY;
    id _modalDelegate;
    NSWindow *_docWindow;
    SEL _didEndSelector;
    SEL _didDismissSelector;
    NSImage *_unbadgedImage;
    struct _NSSize _defaultPanelSize;
    id _helpButton;
    id _delegate;
    int _alertStyle;
    id _helpAnchor;
    BOOL _useNSLayout;
    BOOL _showsHelp;
    char reserved[2];
    id reserved1;
    id reserved2;
}

+ (id)alertWithMessageText:(id)fp8 defaultButton:(id)fp12 alternateButton:(id)fp16 otherButton:(id)fp20 informativeTextWithFormat:(id)fp24;
+ (id)alertWithError:(id)fp8;
+ (void)stopAllTimersForSpeaking;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setMessageText:(id)fp8;
- (id)messageText;
- (void)setInformativeText:(id)fp8;
- (id)informativeText;
- (void)setIcon:(id)fp8;
- (id)icon;
- (id)addButtonWithTitle:(id)fp8;
- (id)buttons;
- (void)setShowsHelp:(BOOL)fp8;
- (BOOL)showsHelp;
- (BOOL)_showsDontWarnAgain;
- (void)_setDontWarnMessage:(id)fp8;
- (BOOL)_dontWarnAgain;
- (void)setHelpAnchor:(id)fp8;
- (id)helpAnchor;
- (void)setAlertStyle:(int)fp8;
- (int)alertStyle;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)prepare;
- (int)runModal;
- (void)beginSheetModalForWindow:(id)fp8 modalDelegate:(id)fp12 didEndSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)didEndAlert:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)window;
- (id)buttonPressed:(id)fp8;
- (void)placeButtons:(int)fp8 firstWidth:(float)fp12 secondWidth:(float)fp16 thirdWidth:(float)fp20;
- (float)messageWidthForMessage:(id)fp8;
- (id)setTitle:(id)fp8 andMessage:(id)fp12;
- (id)setMessage:(id)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (void)stopTimerForSpeaking;
- (void)startTimerForSpeaking;
- (void)startSpeaking:(id)fp8;
- (id)buildAlertStyle:(int)fp8 title:(id)fp12 formattedMsg:(id)fp16 first:(id)fp20 second:(id)fp24 third:(id)fp28 oldStyle:(BOOL)fp32;
- (id)buildAlertStyle:(int)fp8 title:(id)fp12 message:(id)fp16 first:(id)fp20 second:(id)fp24 third:(id)fp28 oldStyle:(BOOL)fp32 args:(char *)fp36;
- (void)didEndSheet:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;

@end

@interface NSScriptCoercionHandler (NSAppKitCoercions)
+ (id)coerceString:(id)fp8 toColor:(Class)fp12;
+ (id)coerceColor:(id)fp8 toString:(Class)fp12;
+ (id)coerceArray:(id)fp8 toColor:(Class)fp12;
+ (id)coerceColor:(id)fp8 toArray:(Class)fp12;
+ (id)coerceData:(id)fp8 toColor:(Class)fp12;
+ (id)coerceColor:(id)fp8 toData:(Class)fp12;
+ (id)coerceString:(id)fp8 toTextStorage:(Class)fp12;
+ (id)coerceTextStorage:(id)fp8 toString:(Class)fp12;
+ (id)coerceData:(id)fp8 toTextStorage:(Class)fp12;
+ (id)coerceTextStorage:(id)fp8 toData:(Class)fp12;
- (void)_setUpAppKitCoercions;
@end

@interface NSAEDescriptorTranslator (NSAppKitTranslations)
+ (id)_colorByTranslatingRGBColorDescriptor:(id)fp8 toType:(id)fp12 inSuite:(id)fp16;
+ (id)_descriptorByTranslatingColor:(id)fp8 ofType:(id)fp12 inSuite:(id)fp16;
+ (id)_descriptorByTranslatingTextStorage:(id)fp8 ofType:(id)fp12 inSuite:(id)fp16;
- (void)_setUpAppKitTranslations;
@end

@interface NSAppleScript (NSExtensions)
+ (id)_attributedStringFromDescriptor:(id)fp8;
- (id)richTextSource;
@end

@interface NSApplication : NSResponder
{
    NSEvent *_currentEvent;
    void *_windowList;
    id _keyWindow;
    id _mainWindow;
    id _delegate;
    id *_hiddenList;
    int _hiddenCount;
    void *_context;
    void *_appleEventSuspensionID;
    id obsolete2;
    short _unusedApp;
    short _running;
    struct __appFlags _appFlags;
    id _mainMenu;
    id _appIcon;
    id _nameTable;
    id _eventDelegate;
    struct NSThreadPrivate *_threadingSupport;
}

+ (void)_initializeArchiverMappings;
+ (void)_initializeRegisteredDefaults;
+ (void)_taskNowMultiThreaded:(id)fp8;
+ (void)load;
+ (void)initialize;
+ (void)_userLoggedOut;
+ (id)sharedApplication;
+ (void)_initializeSharedApplicationForCarbonAppIfNecessary;
+ (void)detachDrawingThread:(SEL)fp8 toTarget:(id)fp12 withObject:(id)fp16;
+ (void)_startDrawingThread:(id)fp8;
- (void)_cleanUpForCarbonAppTermination;
- (void)_installAutoreleasePoolsOnCurrentThreadIfNecessary;
- (void)_registerWithDock;
- (void)_removeSystemUIModeHandler;
- (void)_dockRestarted;
- (id)init;
- (void)_aquaColorVariantChanged;
- (void)_setMinimizeOnDoubleClick;
- (void)_minimizeOnDoubleClickChanged;
- (void)_displayProfileChanged:(id)fp8;
- (void)_deallocHardCore:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_setEventDelegate:(id)fp8;
- (id)_eventDelegate;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void *)contextID;
- (id)context;
- (void)_addHiddenWindow:(id)fp8;
- (id)_removeHiddenWindow:(id)fp8;
- (id)_hiddenWindows;
- (void)_doHide;
- (BOOL)_startBatchWindowAccumulation:(int)fp8;
- (void)_scheduleWindow:(int)fp8 forBatchOrdering:(int)fp12 relativeTo:(int)fp16;
- (void)_performBatchWindowOrdering:(BOOL)fp8;
- (void)hide:(id)fp8;
- (void)unhide:(id)fp8;
- (BOOL)_batchOrdering;
- (void)_doUnhideWithoutActivation;
- (void)unhideWithoutActivation;
- (void)hideOtherApplications:(id)fp8;
- (void)unhideAllApplications:(id)fp8;
- (void)_windowNumber:(int)fp8 changedTo:(int)fp12;
- (id)_windowWithRealWindowNumber:(int)fp8;
- (id)windowWithWindowNumber:(int)fp8;
- (id)mainWindow;
- (id)_mainWindow;
- (id)_setMainWindow:(id)fp8;
- (id)keyWindow;
- (id)_keyWindow;
- (id)_keyWindowForHeartBeat;
- (id)_setKeyWindow:(id)fp8;
- (id)_setMouseActivationInProgress:(BOOL)fp8;
- (BOOL)_mouseActivationInProgress;
- (BOOL)_isDeactPending;
- (int)unhide;
- (BOOL)_isDoingOpenFile;
- (int)openFile:(id)fp8 ok:(int *)fp12;
- (int)openTempFile:(id)fp8 ok:(int *)fp12;
- (BOOL)_openFileWithoutUI:(id)fp8;
- (void)replyToOpenOrPrint:(int)fp8;
- (void)_doOpenFile:(id)fp8 ok:(int *)fp12 tryTemp:(BOOL)fp16;
- (void)_doOpenFiles:(id)fp8;
- (BOOL)_doOpenUntitled;
- (void)_documentController:(id)fp8 didPrint:(BOOL)fp12 appleEventSuspensionID:(struct __NSAppleEventManagerSuspension *)fp16;
- (void)_doPrintFiles:(id)fp8 withSettings:(id)fp12 showPrintPanels:(BOOL)fp16;
- (void)setIsActive:(BOOL)fp8;
- (BOOL)isActive;
- (void)_setWantsToActivate:(BOOL)fp8;
- (BOOL)_wantsToActivate;
- (BOOL)isHidden;
- (BOOL)_hiddenOnLaunch;
- (BOOL)_isDoingUnhide;
- (BOOL)_isDoingHide;
- (BOOL)_isRunningAppModal;
- (BOOL)_isRunningDocModal;
- (BOOL)_isRunningModal;
- (BOOL)isRunning;
- (void)deactivate;
- (void)activateIgnoringOtherApps:(BOOL)fp8;
- (void)_deactivateWindows;
- (void)_activateWindows;
- (void)_postDidFinishNotification;
- (void)_sendFinishLaunchingNotification;
- (BOOL)_replyToLaunch;
- (id)_replyToOpen:(int)fp8;
- (void)finishLaunching;
- (BOOL)_didNSOpenOrPrint;
- (void)_startRunMethod;
- (void)_endRunMethod;
- (void)_preEventHandling;
- (void)_postEventHandling;
- (void)run;
- (void)_modalSession:(struct _NSModalSession *)fp8 sendEvent:(id)fp12;
- (void)_realDoModalLoop:(struct _NSModalSession *)fp8 peek:(BOOL)fp12;
- (void)_doModalLoop:(struct _NSModalSession *)fp8 peek:(BOOL)fp12;
- (void)_doPostedModalLoopMsg:(CDAnonymousStruct14 *)fp8;
- (int)runModalForWindow:(id)fp8;
- (BOOL)_needsModalCompatibilityMode;
- (BOOL)_wantsDeviceDependentEventModifierFlags;
- (int)runModalForWindow:(id)fp8 relativeToWindow:(id)fp12;
- (void)beginSheet:(id)fp8 modalForWindow:(id)fp12 modalDelegate:(id)fp16 didEndSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)stop:(id)fp8;
- (void)stopModal;
- (void)endSheet:(id)fp8;
- (void)stopModalWithCode:(int)fp8;
- (void)endSheet:(id)fp8 returnCode:(int)fp12;
- (void)abortModal;
- (id)_orderFrontModalWindow:(id)fp8 relativeToWindow:(id)fp12;
- (struct _NSModalSession *)_commonBeginModalSessionForWindow:(id)fp8 relativeToWindow:(id)fp12 modalDelegate:(id)fp16 didEndSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (struct _NSModalSession *)beginModalSessionForWindow:(id)fp8 relativeToWindow:(id)fp12;
- (struct _NSModalSession *)beginModalSessionForWindow:(id)fp8;
- (int)runModalSession:(struct _NSModalSession *)fp8;
- (void)endModalSession:(struct _NSModalSession *)fp8;
- (id)modalWindow;
- (BOOL)_hasActiveRequest;
- (int)requestUserAttention:(int)fp8;
- (void)cancelUserAttentionRequest:(int)fp8;
- (void)_cancelRequest:(id)fp8;
- (void)_cancelAllUserAttentionRequests;
- (BOOL)_shouldTerminate;
- (void)_docController:(id)fp8 shouldTerminate:(BOOL)fp12;
- (void)replyToApplicationShouldTerminate:(BOOL)fp8;
- (void)_terminateSendShould:(BOOL)fp8;
- (BOOL)_isDying;
- (void)terminate:(id)fp8;
- (void)_createWakeupPort;
- (void)_destroyWakeupPort;
- (void)_sendPortMessageWithComponent:(id)fp8 msgID:(int)fp12 timeout:(double)fp16;
- (id)delayWindowOrdering;
- (void)preventWindowOrdering;
- (id)nextEventMatchingMask:(unsigned int)fp8 untilDate:(id)fp12 inMode:(id)fp16 dequeue:(BOOL)fp20;
- (void)_setCurrentEvent:(id)fp8;
- (id)currentEvent;
- (void)discardEventsMatchingMask:(unsigned int)fp8 beforeEvent:(id)fp12;
- (void)postEvent:(id)fp8 atStart:(BOOL)fp12;
- (unsigned long long)_lastEventRecordTime;
- (void)rightMouseDown:(id)fp8;
- (BOOL)_handleKeyEquivalent:(id)fp8;
- (void)_reactToDisplayChanged;
- (void)sendEvent:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)_resignKeyFocus;
- (void)_obtainKeyFocus;
- (BOOL)_hasKeyFocus;
- (void)_setHasKeyFocus:(BOOL)fp8;
- (void)_setAllPanelsNonactivating:(BOOL)fp8;
- (BOOL)_areAllPanelsNonactivating;
- (id)frontWindow;
- (id)makeWindowsPerform:(SEL)fp8 inOrder:(BOOL)fp12;
- (void)_makeWindowsPerform:(SEL)fp8 forEvent:(id)fp12 inWindow:(id)fp16 standardWindowButton:(int)fp20;
- (void)_cycleWindowsReversed:(BOOL)fp8;
- (void)_cycleUtilityWindowsReversed:(BOOL)fp8;
- (void)_dockDied;
- (void)_setApplicationIconImage:(id)fp8 setDockImage:(BOOL)fp12;
- (void)setApplicationIconImage:(id)fp8;
- (id)applicationIconImage;
- (id)_appIcon;
- (id)windows;
- (void)_setWindowsNeedUpdateForSecondaryThread:(id)fp8;
- (void)setWindowsNeedUpdate:(BOOL)fp8;
- (void)updateWindows;
- (BOOL)tryToPerform:(SEL)fp8 with:(id)fp12;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
- (id)targetForAction:(SEL)fp8;
- (id)targetForAction:(SEL)fp8 to:(id)fp12 from:(id)fp16;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12 from:(id)fp16;
- (void)_setMainMenu:(id)fp8;
- (void)setMainMenu:(id)fp8;
- (id)mainMenu;
- (void)setMenu:(id)fp8;
- (id)menu;
- (void)setDockMenu:(id)fp8;
- (struct __CFDictionary *)_flattenMenuItem:(id)fp8;
- (struct __CFArray *)_flattenMenu:(id)fp8;
- (struct __CFArray *)_createDockMenu:(BOOL)fp8;
- (id)_removeWindow:(id)fp8;
- (id)_addWindow:(id)fp8;
- (void)_handleCursorUpdate:(id)fp8;
- (id)_cursorRectCursor;
- (id)_restoreCursor;
- (int)_currentActivation;
- (id)_setCurrentActivation:(int)fp8;
- (int)_pendingActCount;
- (void)reportException:(id)fp8;
- (void)_freeSpeechItems;
- (void)speakString:(id)fp8;
- (BOOL)isSpeaking;
- (void)stopSpeaking:(id)fp8;
- (BOOL)_isNSDocumentBased;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (id)_kitBundle;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)orderFrontCharacterPalette:(id)fp8;
- (BOOL)_processSwitchesEnabled;

@end

@interface __NSAppKitThreadSpecificData : NSObject
{
    struct {
        unsigned int isHeartBeatThread:1;
        unsigned int reserved:31;
    } _akFlags;
    NSThread *NSFoundationThread;
    id NSCurrentGraphicsContext;
    id NSLastOnScreenGraphicsContext;
    id NSCGSContextThreadStateStack;
    id NSCGSContextThreadStateMap;
    id NSThreadFocusState;
    id NSThreadFocusStack;
    id NSRuleBookProxy;
    id NSGlyphGeneratorCache;
    id NSActionCellReplacementString;
    struct _NSRange NSActionCellSelectionRange;
    id NSAlertCache;
    id NSButtonCellSharedAlteredImage;
    struct __CFDictionary *textBreakerTable;
    id NSFontManagerCache;
    void *fontManagerGeneration;
    void *reserved3;
    id NSColorPickerWheelImageCache;
    id NSPeriodicEventSource;
    id NSPBServerDict;
    id NSPBServerLookupCache;
    int NSLockCount;
    id NSCurrentPrintOperation;
    id NSPrintInfoStorage;
    unsigned int NSCachedTitleCellMask;
    id NSCachedTitleCellTitle;
    struct _NSSize NSCachedTitleCellSize;
    id NSSecureTextFieldEditorStorage;
    id NSSavePanelCache;
    struct __CFRunLoopObserver *NSCarbonAppRunLoopEnterObserverRef;
    struct __CFRunLoopObserver *NSCarbonAppRunLoopExitObserverRef;
    void *NSStringDrawingTextStorageSettings;
    void *reserved2;
    void *reserved1;
    void *reserved0;
}

@end

@interface _NSDrawingThreadData : NSObject
{
    SEL selector;
    id target;
    id argument;
}

@end

@interface NSApplication (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)fp8;
@end

@interface NSApplication (NSErrorPresentation)
- (void)_errorAlert:(id)fp8 wasPresentedWithResult:(int)fp12 inContext:(CDAnonymousStruct1 *)fp16;
- (id)_validateError:(id)fp8 forPresentationMethod:(SEL)fp12;
- (void)presentError:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didPresentSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)presentError:(id)fp8;
- (id)willPresentError:(id)fp8;
@end

@interface NSNotificationCenter (NSNotificationCenterAppKitExtensions)
- (void)_addObserver:(id)fp8 notificationNamesAndSelectorNames:(id)fp12 object:(id)fp16 onlyIfSelectorIsImplemented:(BOOL)fp20;
- (void)_removeObserver:(id)fp8 notificationNamesAndSelectorNames:(id)fp12 object:(id)fp16;
@end

@interface NSApplication (NSCarbonWindowHandling)
- (void)_realDoModalLoopForCarbonWindow:(struct _NSModalSession *)fp8 peek:(BOOL)fp12;
- (int)runModalForCarbonWindow:(id)fp8;
@end

@interface NSApplication (NSApplicationAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityMenuBarAttribute;
- (BOOL)accessibilityIsMenuBarAttributeSettable;
- (id)accessibilityWindowsAttribute;
- (BOOL)accessibilityIsWindowsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityFrontmostAttribute;
- (BOOL)accessibilityIsFrontmostAttributeSettable;
- (void)accessibilitySetFrontmostAttribute:(id)fp8;
- (id)accessibilityHiddenAttribute;
- (BOOL)accessibilityIsHiddenAttributeSettable;
- (void)accessibilitySetHiddenAttribute:(id)fp8;
- (id)accessibilityMainWindowAttribute;
- (BOOL)accessibilityIsMainWindowAttributeSettable;
- (id)accessibilityFocusedWindowAttribute;
- (BOOL)accessibilityIsFocusedWindowAttributeSettable;
- (id)accessibilityFocusedUIElementAttribute;
- (BOOL)accessibilityIsFocusedUIElementAttributeSettable;
- (id)accessibilityEnhancedUserInterfaceAttribute;
- (BOOL)accessibilityIsEnhancedUserInterfaceAttributeSettable;
- (void)accessibilitySetEnhancedUserInterfaceAttribute:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHitTest;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
@end

@interface NSApplication (NSScripting)
- (id)orderedDocuments;
- (id)_orderedWindowsWithPanels:(BOOL)fp8;
- (id)orderedWindows;
- (id)valueInOrderedWindowsWithUniqueID:(int)fp8;
- (BOOL)_delegate:(id)fp8 handlesKey:(id)fp12;
- (id)valueForKey:(id)fp8;
- (void)takeValue:(id)fp8 forKey:(id)fp12;
- (id)valueAtIndex:(unsigned int)fp8 inPropertyWithKey:(id)fp12;
- (id)valueWithName:(id)fp8 inPropertyWithKey:(id)fp12;
- (id)valueWithUniqueID:(id)fp8 inPropertyWithKey:(id)fp12;
- (void)insertValue:(id)fp8 atIndex:(unsigned int)fp12 inPropertyWithKey:(id)fp16;
- (void)insertValue:(id)fp8 inPropertyWithKey:(id)fp12;
- (void)removeValueAtIndex:(unsigned int)fp8 fromPropertyWithKey:(id)fp12;
- (void)replaceValueAtIndex:(unsigned int)fp8 inPropertyWithKey:(id)fp12 withValue:(id)fp16;
- (int)_supportsGetValueWithNameForKey:(id)fp8 perhapsByOverridingClass:(Class)fp12;
- (int)_supportsGetValueWithUniqueIDForKey:(id)fp8 perhapsByOverridingClass:(Class)fp12;
- (void)handleOpenScriptCommand:(id)fp8;
- (void)handlePrintScriptCommand:(id)fp8;
- (void)handleQuitScriptCommand:(id)fp8;
@end

@interface NSAttachmentTextStorage : NSTextStorage
{
    NSTextStorage *_realTS;
}

- (id)init;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (id)filename;
- (void)setFilename:(id)fp8;
- (id)url;
- (void)setUrl:(id)fp8;

@end

@interface NSAttributeDictionaryEnumerator : NSEnumerator
{
    NSAttributeDictionary *dictionary;
    unsigned int nextElement;
}

- (id)initWithAttributeDictionary:(id)fp8;
- (id)nextObject;
- (void)dealloc;

@end

@interface NSAttributeDictionary : NSDictionary
{
    unsigned int numElements;
    unsigned int refCount;
    struct _NSAttributeDictionaryElement elements[1];
}

+ (void)initialize;
+ (id)emptyAttributeDictionary;
+ (id)newWithDictionary:(id)fp8;
- (id)newWithKey:(id)fp8 object:(id)fp12;
- (unsigned int)count;
- (id)objectForKey:(id)fp8;
- (id)keyEnumerator;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (void)dealloc;
- (void)finalize;
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isEqualToDictionary:(id)fp8;

@end

@interface NSTempAttributeDictionary : NSAttributeDictionary
{
}

@end

@interface NSAttributedString (NSAttributedStringKitAdditions)
+ (id)textUnfilteredFileTypes;
+ (id)textUnfilteredPasteboardTypes;
+ (id)textFileTypes;
+ (id)textPasteboardTypes;
- (BOOL)_isStringDrawingTextStorage;
- (BOOL)_usesProgrammingLanguageBreaks;
- (id)defaultLanguage;
- (struct _NSRange)doubleClickAtIndex:(unsigned int)fp8;
- (struct _NSRange)doubleClickAtIndex:(unsigned int)fp8 inRange:(struct _NSRange)fp12;
- (unsigned int)lineBreakBeforeIndex:(unsigned int)fp8 withinRange:(struct _NSRange)fp12;
- (unsigned int)lineBreakByHyphenatingBeforeIndex:(unsigned int)fp8 withinRange:(struct _NSRange)fp12;
- (unsigned int)nextWordFromIndex:(unsigned int)fp8 forward:(BOOL)fp12;
- (BOOL)containsAttachments;
- (id)dataFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16 error:(id *)fp20;
- (id)fileWrapperFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16 error:(id *)fp20;
- (id)_RTFWithSelector:(SEL)fp8 range:(struct _NSRange)fp12 documentAttributes:(id)fp20;
- (id)RTFFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16;
- (id)RTFDFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16;
- (id)RTFDFileWrapperFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16;
- (id)docFormatFromRange:(struct _NSRange)fp8 documentAttributes:(id)fp16;
- (void)_readDocumentFragment:(id)fp8 fromRange:(struct _NSRange)fp12 documentAttributes:(id)fp20 subresources:(id *)fp24;
- (id)_documentFromRange:(struct _NSRange)fp8 document:(id)fp16 documentAttributes:(id)fp20 subresources:(id *)fp24;
- (id)initWithData:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16 error:(id *)fp20;
- (id)_initWithRTFSelector:(SEL)fp8 argument:(id)fp12 documentAttributes:(id *)fp16;
- (id)initWithRTF:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithRTFD:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithRTFDFileWrapper:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithDocFormat:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithURL:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16 error:(id *)fp20;
- (id)_initWithURLFunnel:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16;
- (id)initWithURL:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithPath:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithHTML:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16;
- (id)initWithHTML:(id)fp8 documentAttributes:(id *)fp12;
- (id)initWithHTML:(id)fp8 baseURL:(id)fp12 documentAttributes:(id *)fp16;
- (id)_initWithDOMRange:(id)fp8;
- (id)fontAttributesInRange:(struct _NSRange)fp8;
- (id)rulerAttributesInRange:(struct _NSRange)fp8;
- (struct _NSRange)rangeOfTextBlock:(id)fp8 atIndex:(unsigned int)fp12;
- (struct _NSRange)rangeOfTextTable:(id)fp8 atIndex:(unsigned int)fp12;
- (struct _NSRange)_rangeOfTextTableRow:(id)fp8 atIndex:(unsigned int)fp12;
- (struct _NSRange)rangeOfTextList:(id)fp8 atIndex:(unsigned int)fp12;
- (int)itemNumberInTextList:(id)fp8 atIndex:(unsigned int)fp12;
@end

@interface _NSAttributeRun : NSObject <NSCopying>
{
    struct _NSRange _range;
    NSTextStorage *_textStorage;
    NSMutableArray *_attributesArray;
}

- (id)initWithTextStorage:(id)fp8 range:(struct _NSRange)fp12;
- (void)dealloc;
- (void)finalize;
- (void)restoreAttributesOfTextStorage:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (struct _NSRange)range;

@end

@interface _NSAttributes : NSObject
{
    NSDictionary *_attributes;
    struct _NSRange _range;
}

- (id)initWithAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (void)dealloc;
- (void)finalize;
- (void)setAttributesInTextStorage:(id)fp8;

@end

@interface NSSingleLineTypesetter : NSATSTypesetter <NSGlyphStorage>
{
    float _lineWidth;
    struct _NSRange _currentBufferRange;
    unsigned int *_glyphBuffer;
    int *_inscriptionBuffer;
    char *_elasticBuffer;
    struct {
        unsigned int _usesScreenFonts:1;
        unsigned int _reserved:31;
    } _slFlags;
}

+ (id)singleLineTypesetter;
+ (void)initialize;
+ (_Bool)_validateAttributes:(id)fp8;
- (void)done;
- (BOOL)_usesScreenFonts;
- (id)init;
- (id)createRenderingContextForCharacterRange:(struct _NSRange)fp8 typesetterBehavior:(int)fp16 usesScreenFonts:(BOOL)fp20 hasStrongRight:(BOOL)fp24 maximumWidth:(float)fp28;
- (void)insertGlyphs:(const unsigned int *)fp8 length:(unsigned int)fp12 forStartingGlyphAtIndex:(unsigned int)fp16 characterIndex:(unsigned int)fp20;
- (void)setIntAttribute:(int)fp8 value:(int)fp12 forGlyphAtIndex:(unsigned int)fp16;
- (unsigned int)layoutOptions;
- (id)attributedString;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)fp8 actualGlyphRange:(struct _NSRange *)fp16;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)fp8 actualCharacterRange:(struct _NSRange *)fp16;
- (unsigned int)getGlyphsInRange:(struct _NSRange)fp8 glyphs:(unsigned int *)fp16 characterIndexes:(unsigned int *)fp20 glyphInscriptions:(int *)fp24 elasticBits:(char *)fp28 bidiLevels:(char *)fp32;
- (void)getLineFragmentRect:(struct _NSRect *)fp8 usedRect:(struct _NSRect *)fp12 remainingRect:(struct _NSRect *)fp16 forStartingGlyphAtIndex:(unsigned int)fp20 proposedRect:(struct _NSRect)fp24 lineSpacing:(float)fp40 paragraphSpacingBefore:(float)fp44 paragraphSpacingAfter:(float)fp48;
- (id)substituteFontForFont:(id)fp8;
- (void)setLineFragmentRect:(struct _NSRect)fp8 forGlyphRange:(struct _NSRange)fp24 usedRect:(struct _NSRect)fp32 baselineOffset:(float)fp48;
- (void)substituteGlyphsInRange:(struct _NSRange)fp8 withGlyphs:(unsigned int *)fp16;
- (void)insertGlyph:(unsigned int)fp8 atGlyphIndex:(unsigned int)fp12 characterIndex:(unsigned int)fp16;
- (void)deleteGlyphsInRange:(struct _NSRange)fp8;
- (void)setNotShownAttribute:(BOOL)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)setDrawsOutsideLineFragment:(BOOL)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)setLocation:(struct _NSPoint)fp8 withAdvancements:(const float *)fp16 forStartOfGlyphRange:(struct _NSRange)fp20;
- (void)setAttachmentSize:(struct _NSSize)fp8 forGlyphRange:(struct _NSRange)fp16;
- (void)setBidiLevels:(const char *)fp8 forGlyphRange:(struct _NSRange)fp12;

@end

@interface NSLineFragmentRenderingContext : NSObject
{
    void *_runs;
    int _numRuns;
    unsigned short *_glyphs;
    struct CGSize *_advancements;
    float _leftSideDelta;
    float _lineWidth;
    float _leftControlWidth;
    float _rightControlWidth;
    float _elasticWidth;
    struct _NSRect _imageBounds;
    struct {
        unsigned int _usesScreenFonts:1;
        unsigned int _isRTL:1;
        unsigned int _reserved:30;
    } _flags;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)release;
- (id)initWithRuns:(struct __CFArray *)fp8 glyphOrigin:(float)fp12 lineFragmentWidth:(float)fp16 elasticWidth:(float)fp20 usesScreenFonts:(BOOL)fp24 isRTL:(BOOL)fp28;
- (void)dealloc;
- (void)finalize;
- (void)drawAtPoint:(struct _NSPoint)fp8 inContext:(id)fp16;
- (struct _NSSize)sizeWithBehavior:(int)fp8 usesFontLeading:(BOOL)fp12 baselineDelta:(float *)fp16;
- (void)getMaximumAscender:(float *)fp8 minimumDescender:(float *)fp12;
- (float)lineFragmentWidth;
- (float)elasticWidth;
- (BOOL)isRTL;
- (struct _NSRect)imageBounds;

@end

@interface NSATSLineFragment : NSObject
{
    void *_line;
    NSATSTypesetter *_typesetter;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    float _minPosition;
    float _maxPosition;
    int _elasticCharIndex;
    float _elasticRangeWidth;
    unsigned int _hyphenGlyph;
    float _hyphenGlyphWidth;
    struct {
        unsigned int _directionState:2;
        unsigned int _drawsOutside:1;
        unsigned int _isLineArray:1;
        unsigned int _reserved:28;
    } _flags;
}

- (void)_flushCachedObjects;
- (void)_invalidate;
- (id)_copyRenderingContextWithGlyphOrigin:(float)fp8;
- (long)_charIndexToBreakLineByWordWrappingAtIndex:(long)fp8 lineFragmentWidth:(float)fp12 hyphenate:(char *)fp16;
- (void)dealloc;
- (void)finalize;
- (id)initWithTypesetter:(id)fp8;
- (void)layoutForStartingGlyphAtIndex:(unsigned int)fp8 characterIndex:(unsigned int)fp12 minPosition:(float)fp16 maxPosition:(float)fp20 lineFragmentRect:(struct _NSRect)fp24;
- (struct _NSRange)glyphRange;
- (struct _NSRange)characterRange;
- (float)lineWidthForType:(int)fp8;
- (void)getTypographicLineHeight:(float *)fp8 baselineOffset:(float *)fp12 leading:(float *)fp16;
- (void)saveMorphedGlyphs:(struct _NSRange *)fp8;
- (void)saveWithGlyphOrigin:(float)fp8;
- (void)justifyWithFactor:(float)fp8;
- (BOOL)hasElasticRange;

@end

@interface NSATSGlyphStorage : CTGlyphStorageInterface
{
    struct __CTGlyphStorage *_glyphStorage;
    struct __CFArray *_masterRuns;
    NSATSTypesetter *_typesetter;
    CDAnonymousStruct10 *_runs;
    int _numRuns;
    int _runBufferSize;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    int _bufferSize;
    NSATSGlyphStorage *_parent;
    struct __CFSet *_children;
    int _paraEndElasticCharIndex;
    float _paraEndElasticCharWidth;
    __NSATSStringSegment *_textString;
    struct {
        int;
        struct {
            unsigned short glyph;
            struct CGSize advance;
            unsigned int prop;
            int stringIndex;
            int absorbedCount;
        } [0];
    } *_stack;
    CDAnonymousStruct10 *_lastElasticRun;
    int _lastElasticRunLocation;
    struct {
        unsigned int _hasNonNominalGlyph:1;
        unsigned int _hasPositionalStake:1;
        unsigned int _hasBidiRun:1;
        unsigned int _isEllipsisStorage:1;
        unsigned int _hasNonNominalStringIndexes:1;
        unsigned int _reserved:27;
    } _gFlags;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)release;
- (void)_flushCachedObjects;
- (void)_invalidate;
- (id)initWithTypesetter:(id)fp8;
- (id)typesetter;
- (void)setGlyphRange:(struct _NSRange)fp8 characterRange:(struct _NSRange)fp16;
- (struct __CTTypesetter *)createCTTypesetter;
- (id)childGlyphStorageWithCharacterRange:(struct _NSRange)fp8;
- (struct __CTRun *)_createEllipsisRunWithStringRange:(CDAnonymousStruct7)fp8 attributes:(struct __CFDictionary *)fp16;
- (_Bool)_resolvePositionalStakeGlyphsForLineFragment:(struct __CTLine *)fp8 lineFragmentRect:(struct _NSRect)fp12 minPosition:(float)fp28 maxPosition:(float)fp32 maxLineFragmentWidth:(float)fp36 breakHint:(int *)fp40;
- (struct _NSRange)_collectElasticRangeSurroundingCharacterAtIndex:(long)fp8 minimumCharacterIndex:(long)fp12;
- (float)_widthForStringRange:(struct _NSRange)fp8;
- (const CDAnonymousStruct25 *)_attributeRunForCharacterAtIndex:(long)fp8;
- (void)dealloc;
- (void)finalize;
- (struct __CTGlyphStorage *)createCopy:(CDAnonymousStruct7)fp8;
- (void)getCustomAdvance:(struct CGSize *)fp8 forIndex:(long)fp12;
- (void)setGlyphID:(unsigned short)fp8 forIndex:(long)fp12;
- (void)setAdvance:(struct CGSize)fp8 forIndex:(long)fp16;
- (void)setProps:(unsigned int)fp8 forIndex:(long)fp12;
- (void)setAbsorbedCount:(long)fp8 forIndex:(long)fp12;
- (void)setStringIndex:(long)fp8 forIndex:(long)fp12;
- (void)swapGlyph:(long)fp8 withIndex:(long)fp12;
- (void)moveGlyphsTo:(long)fp8 from:(CDAnonymousStruct7)fp12;
- (void)insertGlyphs:(CDAnonymousStruct7)fp8;
- (void)initGlyphStack:(long)fp8;
- (void)pushGlyph:(long)fp8;
- (void)popGlyph:(long)fp8;
- (void)disposeGlyphStack;

@end

@interface CTGlyphStorageInterface : NSObject
{
    int _glyphCount;
    unsigned short *_glyphs;
    struct CGSize *_advances;
    unsigned int *_props;
    int *_stringIndexes;
    int *_absorbedCounts;
}

- (struct __CTGlyphStorage *)createCopy:(CDAnonymousStruct7)fp8;
- (void)getCustomAdvance:(struct CGSize *)fp8 forIndex:(long)fp12;
- (void)setGlyphID:(unsigned short)fp8 forIndex:(long)fp12;
- (void)setAdvance:(struct CGSize)fp8 forIndex:(long)fp16;
- (void)setProps:(unsigned int)fp8 forIndex:(long)fp12;
- (void)setAbsorbedCount:(long)fp8 forIndex:(long)fp12;
- (void)setStringIndex:(long)fp8 forIndex:(long)fp12;
- (void)swapGlyph:(long)fp8 withIndex:(long)fp12;
- (void)moveGlyphsTo:(long)fp8 from:(CDAnonymousStruct7)fp12;
- (void)insertGlyphs:(CDAnonymousStruct7)fp8;
- (void)initGlyphStack:(long)fp8;
- (void)pushGlyph:(long)fp8;
- (void)popGlyph:(long)fp8;
- (void)disposeGlyphStack;

@end

@interface __NSATSStringSegment : NSString
{
    struct __CFString *_originalString;
    int _originalStringLength;
    CDAnonymousStruct7 _range;
    unsigned short *_characters;
    unsigned short _buffer[128];
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)release;
- (void)_setOriginalString:(id)fp8 range:(struct _NSRange)fp12;
- (id)initWithOriginalString:(id)fp8 range:(struct _NSRange)fp12;
- (void)dealloc;
- (unsigned int)length;
- (unsigned short)characterAtIndex:(unsigned int)fp8;
- (void)getCharacters:(unsigned short *)fp8 range:(struct _NSRange)fp12;
- (const unsigned short *)_fastCharacterContents;

@end

@interface NSATSTypesetter : NSTypesetter
{
    NSAttributedString *attributedString;
    struct _NSRange paragraphGlyphRange;
    struct _NSRange paragraphSeparatorGlyphRange;
    float lineFragmentPadding;
    NSLayoutManager *layoutManager;
    NSArray *textContainers;
    NSTextContainer *currentTextContainer;
    unsigned int currentTextContainerIndex;
    struct _NSSize currentTextContainerSize;
    NSParagraphStyle *currentParagraphStyle;
    void *_atsReserved[8];
    id _private;
}

+ (void)initialize;
+ (id)sharedInstance;
+ (id)sharedTypesetter;
+ (BOOL)_allowsScreenFontKerning;
- (void)release;
- (void)dealloc;
- (void)_doBidiProcessing;
- (int)_baseWritingDirection;
- (const char *)_bidiLevels;
- (struct __CTTypesetter *)_ctTypesetter;
- (const id)_getATSTypesetterGuts;
- (BOOL)_baselineRenderingMode;
- (void)_setBaselineRenderingMode:(BOOL)fp8;
- (BOOL)_layoutLineFragmentStartingWithGlyphAtIndex:(unsigned int *)fp8 characterIndex:(unsigned int *)fp12 atPoint:(struct _NSPoint *)fp16 renderingContext:(id *)fp20;
- (void)_flushCachedObjects;
- (BOOL)_usesScreenFonts;
- (int)_sweepDirectionForGlyphAtIndex:(long)fp8;
- (void)beginParagraph;
- (void)endParagraph;
- (void)beginLineWithGlyphAtIndex:(unsigned int)fp8;
- (void)endLineWithGlyphRange:(struct _NSRange)fp8;
- (unsigned int)layoutParagraphAtPoint:(struct _NSPoint *)fp8;
- (float)hyphenationFactorForGlyphAtIndex:(unsigned int)fp8;
- (unsigned long)hyphenCharacterForGlyphAtIndex:(unsigned int)fp8;
- (void)layoutGlyphsInLayoutManager:(id)fp8 startingAtGlyphIndex:(unsigned int)fp12 maxNumberOfLineFragments:(unsigned int)fp16 nextGlyphIndex:(unsigned int *)fp20;
- (float)baselineOffsetInLayoutManager:(id)fp8 glyphIndex:(unsigned int)fp12;
- (CDAnonymousStruct16 *)_allocateAuxData;
- (CDAnonymousUnion1 *)_lineFragmentRectForProposedRectArgs;
- (struct _NSRect)lineFragmentRectForProposedRect:(struct _NSRect)fp8 remainingRect:(struct _NSRect *)fp24;

@end

@interface _NSATSTypesetterGuts : NSObject
{
    NSATSLineFragment *_lineFragment;
    NSATSGlyphStorage *_glyphStorage;
    unsigned int _lastGlyphIndex;
    unsigned int _lastContainerIndex;
    struct {
        CDAnonymousStruct22 *;
        struct _NSRange;
        struct _NSRange;
        float;
        float;
        void *;
        void *;
        float;
        float;
        float;
        float;
        float;
        float;
        struct _NSRect;
        struct _NSRect;
        struct _NSRange;
        NSTextBlock *;
        float;
        int;
        CDAnonymousStruct21;
        void *[0];
    } *_typesetterAuxiliary;
    CDAnonymousUnion1 *_lineFragmentRectArgs;
    char *_bidiLevels;
    struct {
        unsigned int _isiChatTypesetter:1;
        unsigned int _resToWillSetLineFragmentRect:1;
        unsigned int _resToShouldBreakLineByWordWithCharacterAtIndex:1;
        unsigned int _resToShouldBreakLineByHyphenatingWithCharacterAtIndex:1;
        unsigned int _resToBBoxForControlGlyph:1;
        unsigned int _isBusy:1;
        unsigned int _baselineRendering:1;
        unsigned int _reserved:25;
    } _flags;
    struct {
        unsigned int _resolvedWritingDirection:2;
        unsigned int _reserved:30;
    } _paragraphState;
    struct __CTTypesetter *_ctTypesetter;
}

- (id)initWithTypesetter:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSBezierPath : NSObject <NSCopying, NSCoding>
{
    int _state;
    int _segmentCount;
    int _segmentMax;
    struct PATHSEGMENT *_head;
    int _lastSubpathIndex;
    int _elementCount;
    float _lineWidth;
    struct _NSRect _bounds;
    struct _NSRect _controlPointBounds;
    unsigned char _flags;
    float _miterLimit;
    float _flatness;
    float *_dashedLinePattern;
    unsigned int _dashedLineCount;
    float _dashedLinePhase;
}

+ (void)initialize;
+ (id)bezierPath;
+ (id)bezierPathWithRect:(struct _NSRect)fp8;
+ (id)bezierPathWithOvalInRect:(struct _NSRect)fp8;
+ (void)fillRect:(struct _NSRect)fp8;
+ (void)strokeRect:(struct _NSRect)fp8;
+ (void)clipRect:(struct _NSRect)fp8;
+ (void)strokeLineFromPoint:(struct _NSPoint)fp8 toPoint:(struct _NSPoint)fp16;
+ (void)drawPackedGlyphs:(const char *)fp8 atPoint:(struct _NSPoint)fp12;
+ (void)setDefaultMiterLimit:(float)fp8;
+ (float)defaultMiterLimit;
+ (void)setDefaultFlatness:(float)fp8;
+ (float)defaultFlatness;
+ (void)setDefaultWindingRule:(int)fp8;
+ (int)defaultWindingRule;
+ (void)setDefaultLineCapStyle:(int)fp8;
+ (int)defaultLineCapStyle;
+ (void)setDefaultLineJoinStyle:(int)fp8;
+ (int)defaultLineJoinStyle;
+ (void)setDefaultLineWidth:(float)fp8;
+ (float)defaultLineWidth;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)moveToPoint:(struct _NSPoint)fp8;
- (void)lineToPoint:(struct _NSPoint)fp8;
- (void)curveToPoint:(struct _NSPoint)fp8 controlPoint1:(struct _NSPoint)fp16 controlPoint2:(struct _NSPoint)fp24;
- (void)closePath;
- (void)removeAllPoints;
- (void)relativeMoveToPoint:(struct _NSPoint)fp8;
- (void)relativeLineToPoint:(struct _NSPoint)fp8;
- (void)relativeCurveToPoint:(struct _NSPoint)fp8 controlPoint1:(struct _NSPoint)fp16 controlPoint2:(struct _NSPoint)fp24;
- (float)lineWidth;
- (void)setLineWidth:(float)fp8;
- (int)lineCapStyle;
- (void)setLineCapStyle:(int)fp8;
- (int)lineJoinStyle;
- (void)setLineJoinStyle:(int)fp8;
- (int)windingRule;
- (void)setWindingRule:(int)fp8;
- (float)miterLimit;
- (void)setMiterLimit:(float)fp8;
- (float)flatness;
- (void)setFlatness:(float)fp8;
- (void)setLineDash:(const float *)fp8 count:(int)fp12 phase:(float)fp16;
- (void)getLineDash:(float *)fp8 count:(int *)fp12 phase:(float *)fp16;
- (void)stroke;
- (void)fill;
- (void)addClip;
- (void)setClip;
- (void)subdivideBezierWithFlatness:(float)fp8 startPoint:(struct _NSPoint)fp12 controlPoint1:(struct _NSPoint)fp20 controlPoint2:(struct _NSPoint)fp28 endPoint:(struct _NSPoint)fp36;
- (void)flattenIntoPath:(id)fp8;
- (id)bezierPathByFlatteningPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByReversingPath;
- (void)transformUsingAffineTransform:(id)fp8;
- (BOOL)isEmpty;
- (struct _NSPoint)currentPoint;
- (struct _NSRect)controlPointBounds;
- (struct _NSRect)bounds;
- (int)elementCount;
- (int)elementAtIndex:(int)fp8;
- (int)_segmentIndexForElementIndex:(int)fp8;
- (int)elementAtIndex:(int)fp8 associatedPoints:(struct _NSPoint *)fp12;
- (void)setAssociatedPoints:(struct _NSPoint *)fp8 atIndex:(int)fp12;
- (void)appendBezierPath:(id)fp8;
- (void)appendBezierPathWithRect:(struct _NSRect)fp8;
- (void)appendBezierPathWithPoints:(struct _NSPoint *)fp8 count:(int)fp12;
- (void)appendBezierPathWithOvalInRect:(struct _NSRect)fp8;
- (void)_appendArcSegmentWithCenter:(struct _NSPoint)fp8 radius:(double)fp16 angle1:(double)fp24 angle2:(double)fp32;
- (void)appendBezierPathWithArcWithCenter:(struct _NSPoint)fp8 radius:(float)fp16 startAngle:(float)fp20 endAngle:(float)fp24 clockwise:(BOOL)fp28;
- (void)appendBezierPathWithArcWithCenter:(struct _NSPoint)fp8 radius:(float)fp16 startAngle:(float)fp20 endAngle:(float)fp24;
- (void)appendBezierPathWithArcFromPoint:(struct _NSPoint)fp8 toPoint:(struct _NSPoint)fp16 radius:(float)fp24;
- (void)appendBezierPathWithGlyph:(unsigned int)fp8 inFont:(id)fp12;
- (void)appendBezierPathWithGlyphs:(unsigned int *)fp8 count:(int)fp12 inFont:(id)fp16;
- (void)appendBezierPathWithPackedGlyphs:(const char *)fp8;
- (int)_locationOfPoint:(struct _NSPoint)fp8;
- (BOOL)containsPoint:(struct _NSPoint)fp8;
- (BOOL)isHitByPoint:(struct _NSPoint)fp8;
- (BOOL)isHitByRect:(struct _NSRect)fp8;
- (BOOL)isHitByPath:(id)fp8;
- (BOOL)isStrokeHitByPoint:(struct _NSPoint)fp8;
- (BOOL)isStrokeHitByRect:(struct _NSRect)fp8;
- (BOOL)isStrokeHitByPath:(id)fp8;
- (BOOL)cachesBezierPath;
- (void)setCachesBezierPath:(BOOL)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSBezierPath (NSBezierPathCompatibility)
+ (void)setMiterLimit:(float)fp8;
+ (float)miterLimit;
+ (void)setFlatness:(float)fp8;
+ (float)flatness;
+ (void)setWindingRule:(int)fp8;
+ (int)windingRule;
+ (void)setLineCapStyle:(int)fp8;
+ (int)lineCapStyle;
+ (void)setLineJoinStyle:(int)fp8;
+ (int)lineJoinStyle;
+ (void)setLineWidth:(float)fp8;
+ (float)lineWidth;
- (id)description;
@end

@interface NSBezierPath (NSBezierPathDevicePrimitives)
- (void)_addPathSegment:(int)fp8 point:(struct _NSPoint)fp12;
- (void)_deviceMoveToPoint:(struct _NSPoint)fp8;
- (void)_deviceLineToPoint:(struct _NSPoint)fp8;
- (void)_deviceCurveToPoint:(struct _NSPoint)fp8 controlPoint1:(struct _NSPoint)fp16 controlPoint2:(struct _NSPoint)fp24;
- (void)_deviceClosePath;
- (void)_doUserPathWithOp:(unsigned char)fp8 inContext:(struct CGContext *)fp12;
@end

@interface NSBitmapImageRep : NSImageRep
{
    struct __bitmapRepFlags _moreRepFlags;
    unsigned int _bytesPerRow;
    char *_data;
    NSData *_tiffData;
    id _properties;
}

+ (void)initialize;
+ (void)getTIFFCompressionTypes:(const int **)fp8 count:(int *)fp12;
+ (id)localizedNameForTIFFCompressionType:(int)fp8;
+ (id)TIFFRepresentationOfImageRepsInArray:(id)fp8;
+ (id)TIFFRepresentationOfImageRepsInArray:(id)fp8 usingCompression:(int)fp12 factor:(float)fp16;
+ (id)_imagesWithData:(id)fp8 hfsFileType:(id)fp12 extension:(id)fp16 zone:(struct _NSZone *)fp20;
+ (id)_imagesFromIcon:(id)fp8 inApp:(id)fp12 zone:(struct _NSZone *)fp16;
+ (id)_imagesFromURL:(id)fp8 forImage:(id)fp12 fileType:(id)fp16 extension:(id)fp20;
+ (id)imageRepsWithData:(id)fp8;
+ (id)imageRepWithData:(id)fp8;
+ (id)_imageRepsWithData:(id)fp8 hfsFileType:(id)fp12 extension:(id)fp16;
+ (id)_imageRepWithData:(id)fp8 hfsFileType:(id)fp12 extension:(id)fp16;
+ (BOOL)canInitWithData:(id)fp8;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (void)colorizeByMappingGray:(float)fp8 toColor:(id)fp12 blackMapping:(id)fp16 whiteMapping:(id)fp20;
- (BOOL)canBeCompressedUsing:(int)fp8;
- (id)initWithBitmapDataPlanes:(char **)fp8 pixelsWide:(int)fp12 pixelsHigh:(int)fp16 bitsPerSample:(int)fp20 samplesPerPixel:(int)fp24 hasAlpha:(BOOL)fp28 isPlanar:(BOOL)fp32 colorSpaceName:(id)fp36 bytesPerRow:(int)fp40 bitsPerPixel:(int)fp44;
- (id)initWithBitmapDataPlanes:(char **)fp8 pixelsWide:(int)fp12 pixelsHigh:(int)fp16 bitsPerSample:(int)fp20 samplesPerPixel:(int)fp24 hasAlpha:(BOOL)fp28 isPlanar:(BOOL)fp32 colorSpaceName:(id)fp36 bitmapFormat:(int)fp40 bytesPerRow:(int)fp44 bitsPerPixel:(int)fp48;
- (id)initWithFocusedViewRect:(struct _NSRect)fp8;
- (id)_initWithSharedBitmap:(void *)fp8 rect:(struct _NSRect)fp12;
- (void)getCompression:(int *)fp8 factor:(float *)fp12;
- (void)setCompression:(int)fp8 factor:(float)fp12;
- (void)_writeTIFF:(struct _NXStream *)fp8 usingCompression:(int)fp12 factor:(float)fp16;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(int)fp8 factor:(float)fp12;
- (id)_initWithImageReader:(id)fp8;
- (id)initForIncrementalLoad;
- (int)incrementalLoadFromData:(id)fp8 complete:(BOOL)fp12;
- (BOOL)_readImageInfoWithImageSource:(void *)fp8 imageNumber:(int)fp12 properties:(struct __CFDictionary *)fp16;
- (id)_initWithImageSource:(void *)fp8 imageNumber:(int)fp12 properties:(struct __CFDictionary *)fp16;
- (BOOL)_loadImageFromTIFF:(struct tiff *)fp8 imageNumber:(int)fp12;
- (BOOL)_loadData;
- (id)_initWithIncrementalImageReader:(id)fp8 forImage:(id)fp12;
- (BOOL)_reallyInitWithIncrementalImageReader:(id)fp8;
- (void)_loadImageInfoFromTIFF:(struct tiff *)fp8;
- (id)_initWithData:(id)fp8 tiff:(struct tiff *)fp12 imageNumber:(short)fp16;
- (id)initWithData:(id)fp8;
- (void)_freeImage;
- (id)imageWithoutAlpha;
- (BOOL)_getEightBitRGBMeshedBitmap:(char *)fp8 rowBytes:(int)fp12 extraSample:(BOOL)fp16 reverseScanLines:(BOOL)fp20 removeAlpha:(BOOL)fp24;
- (void *)_getCGCustomColorSpace;
- (void)prepareGState;
- (BOOL)draw;
- (struct CGImage *)_getCGImageRefCreateIfNecessary;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (int)_uncachedSize;
- (void)_setCGImageRef:(struct CGImage *)fp8;
- (struct CGImage *)_CGImageRef;
- (BOOL)_isValid;
- (void *)_createPatternFromRect:(struct _NSRect)fp8;
- (void)getBitmapDataPlanes:(char **)fp8;
- (char *)bitmapData;
- (BOOL)isPlanar;
- (int)samplesPerPixel;
- (int)bytesPerRow;
- (int)bitsPerPixel;
- (int)bytesPerPlane;
- (int)numberOfPlanes;
- (int)bitmapFormat;
- (int)_bitmapFormat;
- (BOOL)_canDrawOutsideOfItsBounds;
- (void)setSize:(struct _NSSize)fp8;
- (void)setColor:(id)fp8 atX:(int)fp12 y:(int)fp16;
- (id)colorAtX:(int)fp8 y:(int)fp12;
- (void)setPixel:(unsigned int *)fp8 atX:(int)fp12 y:(int)fp16;
- (void)getPixel:(unsigned int *)fp8 atX:(int)fp12 y:(int)fp16;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)_setSharedIdentifier:(int)fp8;

@end

@interface NSBitmapImageRep (NSObsolete)
- (id)_initWithDIB:(id)fp8;
- (id)_BMPRepresentation:(BOOL)fp8;
- (id)BMPRepresentation;
- (id)_DIBRepresentation;
- (BOOL)canConvertToBMPRepresentation;
@end

@interface NSBitmapImageRep (NSBitmapImageFileTypeExtensions)
+ (id)representationOfImageRepsInArray:(id)fp8 usingType:(int)fp12 properties:(id)fp16;
- (id)representationUsingType:(int)fp8 properties:(id)fp12;
- (void)setProperty:(id)fp8 withValue:(id)fp12;
- (id)valueForProperty:(id)fp8;
- (void)_reverseScanLines;
- (int)_imageNumber;
- (void)_setImageNumber:(int)fp8;
- (id)description;
@end

@interface NSBMPImageReader : NSImageReader
{
    BOOL error;
    BOOL isFromOS2;
    BOOL dibFormat;
    int numberOfPaletteEntries;
    int numberOfSamplesPerPaletteEntry;
    unsigned short *palette;
    unsigned int imageLocation;
    unsigned int actualImageSize;
    unsigned int colorTableLocation;
    unsigned int actualBitsPerPixel;
}

- (unsigned char)getByte;
- (unsigned short)getLEWord;
- (unsigned long)getLELong;
- (id)initWithData:(id)fp8 DIBFormat:(BOOL)fp12;
- (void)dealloc;
- (void)finalize;
- (unsigned int)numberOfPaletteEntries;
- (unsigned int)numberOfSamplesPerPaletteEntry;
- (const unsigned short *)palette;
- (BOOL)loadImageHeader;
- (BOOL)loadBitmapFileHeader;
- (BOOL)loadBitmapInfoHeader;
- (BOOL)loadImage:(char **)fp8;

@end

@interface NSBMPImageWriter : NSImageWriter
{
    int numberOfPaletteEntries;
    int numberOfSamplesPerPaletteEntry;
    unsigned short *palette;
    NSMutableData *outputData;
    char *outputBytes;
    unsigned int curLocation;
}

- (void)putByte:(unsigned char)fp8;
- (void)putLEWord:(unsigned short)fp8;
- (void)putLELong:(unsigned long)fp8;
- (id)initWithBitmapDataPlanes:(char **)fp8 pixelsWide:(int)fp12 pixelsHigh:(int)fp16 bitsPerSample:(int)fp20 samplesPerPixel:(int)fp24 hasAlpha:(BOOL)fp28 isPlanar:(BOOL)fp32 colorSpaceName:(id)fp36 bytesPerRow:(int)fp40 bitsPerPixel:(int)fp44 size:(struct _NSSize)fp48;
- (void)dealloc;
- (void)finalize;
- (id)_BMPRepresentation:(BOOL)fp8;
- (id)BMPRepresentation;
- (id)DIBRepresentation;

@end

@interface NSBox : NSView
{
    id _titleCell;
    id _contentView;
    struct _NSSize _offsets;
    struct _NSRect _borderRect;
    struct _NSRect _titleRect;
    struct __bFlags _bFlags;
    id _unused;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (void)setInterfaceStyle:(int)fp8;
- (id)_tile:(BOOL)fp8;
- (void)dealloc;
- (int)borderType;
- (int)titlePosition;
- (void)setBorderType:(int)fp8;
- (void)setTitlePosition:(int)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)titleFont;
- (void)setTitleFont:(id)fp8;
- (struct _NSRect)borderRect;
- (struct _NSRect)titleRect;
- (id)titleCell;
- (struct _NSSize)contentViewMargins;
- (void)setContentViewMargins:(struct _NSSize)fp8;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)viewDidLiveResizeFromRect:(struct _NSRect)fp8;
- (void)sizeToFit;
- (void)setFrameFromContentFrame:(struct _NSRect)fp8;
- (id)contentView;
- (void)setContentView:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (void)addSubview:(id)fp8;
- (void)replaceSubview:(id)fp8 with:(id)fp12;
- (void)setTitleWithMnemonic:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (BOOL)_drawRectIfEmpty;
- (void)drawRect:(struct _NSRect)fp8;
- (id)_setBackgroundTransparent:(BOOL)fp8;
- (BOOL)_backgroundTransparent;
- (void)setBoxType:(int)fp8;
- (int)boxType;
- (void)_setLineColor:(id)fp8;
- (id)_lineColor;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSBox (NSBoxAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface _NSBrowserColumnView : NSScrollView
{
    NSImageView *_imageViewForAnimationOptimization;
    NSBrowser *_tmpStashedBrowserView;
    float _markedWidth;
    struct __BrcvFlags _brcvFlags;
}

+ (id)columnResizeButtonImage;
- (void)dealloc;
- (void)_enableMatrixLiveResizeImageCacheing;
- (id)_enclosingBrowserView;
- (void)_beginColumnAnimationOptimization;
- (void)_endColumnAnimationOptimization;
- (void)_doRemoveFromSuperviewWithOutNeedingDisplay:(BOOL)fp8;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (struct _NSRect)columnResizeButtonRect;
- (void)setIsEmptyColumn:(BOOL)fp8;
- (BOOL)shouldAllowUserColumnResizing;
- (void)viewDidMoveToSuperview;
- (void)tile;
- (void)drawRect:(struct _NSRect)fp8;
- (id)menuForEvent:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)scrollWheel:(id)fp8;
- (void)_setMarkedWidth:(float)fp8;
- (void)_markWidth;
- (void)_clearMarkedWidth;
- (BOOL)_markedWidthDiffersFromCurrentWidth;

@end

@interface _NSBrowserColumnsContainerView : NSView
{
    struct __BrccvFlags _brccvFlags;
}

- (id)_enclosingBrowserView;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)fp8;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (void)_setIgnoringScrolling:(BOOL)fp8;
- (BOOL)_ignoringScrolling;
- (void)scrollPoint:(struct _NSPoint)fp8;
- (BOOL)scrollRectToVisible:(struct _NSRect)fp8;
- (void)scrollRect:(struct _NSRect)fp8 by:(struct _NSSize)fp24;

@end

@interface _NSBrowserScrollView : NSScrollView
{
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (id)_enclosingBrowserView;
- (void)_handleBoundsChangeForSubview:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)tile;
- (void)_doScroller:(id)fp8 hitPart:(int)fp12 multiplier:(float)fp16;

@end

@interface _NSBrowserTitlesContainerView : NSView
{
}

- (id)_enclosingBrowserView;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface _NSBrowserColumnScrollHelper : NSObject
{
    _NSBrowserScrollView *_scrollView;
    _NSBrowserColumnView *_optimizableColumn;
    struct _NSPoint _initialOrigin;
    struct _NSRect _destinationRect;
    float _totalDistance;
    float _totalDuration;
    struct __BrcshFlags _brcshFlags;
    double _startTime;
    struct __CFRunLoopTimer *_timer;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopObserver *_displayWindowForBrowserObserver;
}

- (void)_setupRunLoopTimer;
- (void)_invalidateRunLoopTimer;
- (void)dealloc;
- (void)finalize;
- (void)_scrollToPosition:(int)fp8;
- (void)_scrollToFinalPosition;
- (void)_doAnimationStep;
- (void)_stopAnimation;
- (id)_enclosingBrowserView;
- (void)_doAnimation;
- (void)setOptimizableColumn:(id)fp8;
- (void)scrollRectToVisible:(struct _NSRect)fp8 inScrollView:(id)fp24 animate:(BOOL)fp28;
- (void)changeDestinationToRect:(struct _NSRect)fp8;

@end

@interface NSBrowser : NSControl
{
    id _target;
    SEL _action;
    id _delegate;
    SEL _doubleAction;
    Class _matrixClass;
    id _cellPrototype;
    struct _NSSize _columnSize;
    short _numberOfVisibleColumns;
    short _minColumnWidth;
    short _firstVisibleColumn;
    short _maxVisibleColumns;
    NSMutableArray *_titles;
    NSString *_pathSeparator;
    NSMutableArray *_columns;
    id _brAuxiliaryStorage;
    NSString *_firstColumnTitle;
    NSScroller *_scroller;
    struct __Brflags _brflags;
}

+ (void)initialize;
+ (Class)cellClass;
+ (void)removeSavedColumnsWithAutosaveName:(id)fp8;
- (BOOL)_compat_continuousScrollingCapable;
- (id)_browserIBMetrics;
- (float)_horizontalScrollerSeparationHeight;
- (int)numberOfVisibleColumns;
- (void)_setNumVisibleColumns:(int)fp8;
- (void)_setFirstColumnTitle:(id)fp8;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_doTiming;
- (void)updateScroller;
- (void)_setScroller:(id)fp8;
- (void)_scrollColumnToVisible:(int)fp8 requireCompletelyVisible:(BOOL)fp12;
- (BOOL)_scrollColumnsForScrollerIncrementOrDecrementUsingPart:(int)fp8;
- (void)scrollViaScroller:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)_resetIncrementalSearchBuffer;
- (void)dealloc;
- (void)finalize;
- (BOOL)isOpaque;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;
- (void)setMatrixClass:(Class)fp8;
- (Class)matrixClass;
- (id)cellPrototype;
- (void)setCellPrototype:(id)fp8;
- (void)setCellClass:(Class)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (void)setAllowsBranchSelection:(BOOL)fp8;
- (BOOL)allowsBranchSelection;
- (void)setAllowsEmptySelection:(BOOL)fp8;
- (BOOL)allowsEmptySelection;
- (void)setAllowsIncrementalSearching:(BOOL)fp8;
- (BOOL)allowsIncrementalSearching;
- (void)setReusesColumns:(BOOL)fp8;
- (BOOL)reusesColumns;
- (void)_setHasHorizontalScroller:(BOOL)fp8;
- (id)_horizontalScroller;
- (void)setHasHorizontalScroller:(BOOL)fp8;
- (BOOL)hasHorizontalScroller;
- (void)setSeparatesColumns:(BOOL)fp8;
- (BOOL)separatesColumns;
- (void)setAcceptsArrowKeys:(BOOL)fp8;
- (BOOL)acceptsArrowKeys;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)_setAcceptsFirstMouse:(BOOL)fp8;
- (void)setSendsActionOnArrowKeys:(BOOL)fp8;
- (BOOL)sendsActionOnArrowKeys;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)_sendDelegateSelectRow:(int)fp8 inColumn:(int)fp12;
- (void)_sendDelegateWillDisplayCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)_sendDelegateCreateRowsForColumn:(int)fp8 inMatrix:(id)fp12;
- (BOOL)_delegateRespondsToSelectCellsByRow;
- (BOOL)_delegateRespondsToWillDisplayCell;
- (BOOL)_delegateDoesNotCreateRowsInMatrix;
- (id)_loadedCellAtRow:(int)fp8 column:(int)fp12 inMatrix:(id)fp16;
- (id)loadedCellAtRow:(int)fp8 column:(int)fp12;
- (void)_updateNumberOfTitleCellsIfNecessary:(int)fp8;
- (void)_updateNumberOfTitleCellsIfNecessary;
- (BOOL)isTitled;
- (void)setTitled:(BOOL)fp8;
- (id)_titleCellOfColumn:(int)fp8;
- (id)titleOfColumn:(int)fp8;
- (void)_setTitle:(id)fp8 ofColumn:(int)fp12;
- (void)setTitle:(id)fp8 ofColumn:(int)fp12;
- (void)_setUsesSmallTitleFont:(BOOL)fp8;
- (BOOL)_shouldDrawFocus;
- (BOOL)_hasKeyboardFocus;
- (void)_setFocusRingNeedsDisplay;
- (void)setNeedsDisplay:(BOOL)fp8;
- (void)_matrixWillResignFirstResponder:(id)fp8;
- (void)_windowChangedKeyState;
- (void)loadColumnZero;
- (BOOL)_selectCell:(id)fp8 inColumn:(int)fp12;
- (void)_selectRowIndexes:(id)fp8 inColumn:(int)fp12;
- (void)selectRow:(int)fp8 inColumn:(int)fp12;
- (int)selectedRowInColumn:(int)fp8;
- (void)setPathSeparator:(id)fp8;
- (id)pathSeparator;
- (BOOL)setPath:(id)fp8;
- (id)pathToColumn:(int)fp8;
- (id)path;
- (void)setTakesTitleFromPreviousColumn:(BOOL)fp8;
- (BOOL)takesTitleFromPreviousColumn;
- (void)validateVisibleColumns;
- (void)_setNeedsDisplayInColumn:(int)fp8;
- (void)_drawColumn:(int)fp8;
- (void)displayColumn:(int)fp8;
- (void)displayAllColumns;
- (void)reloadColumn:(int)fp8;
- (id)_unhookColumnSubviews;
- (void)_reattachColumnSubviews:(id)fp8;
- (void)_fixKeyViewForView:(id)fp8;
- (int)_controlSizeForScrollers;
- (void)_syncScrollerSizeOfColumn:(id)fp8;
- (void)_setScrollerSize:(int)fp8;
- (id)_createColumn:(struct _NSRect)fp8 empty:(BOOL)fp24;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)setNextKeyView:(id)fp8;
- (void)_disableCompositing;
- (void)_enableCompositing;
- (BOOL)_canUseCompositing;
- (void)_scrollColumnsRightBy:(int)fp8;
- (void)scrollColumnsRightBy:(int)fp8;
- (void)scrollColumnsLeftBy:(int)fp8;
- (void)_scrollColumnToVisible:(int)fp8 private:(BOOL)fp12;
- (void)scrollColumnToVisible:(int)fp8;
- (void)setLastColumn:(int)fp8;
- (void)_kludgeScrollBarForColumn:(int)fp8;
- (void)_computeFirstVisibleColumnRequireCompletelyVisible:(BOOL)fp8;
- (void)_computeFirstCompletelyVisibleColumn;
- (void)_computeFirstMostlyVisibleColumn;
- (void)_alignFirstVisibleColumnToDocumentViewEdge:(BOOL)fp8;
- (void)didFinishColumnScrollWithHelper:(id)fp8;
- (void)_doPostColumnConfigurationDidChangeNotification:(id)fp8;
- (void)_postColumnConfigurationDidChangeNotification;
- (struct _NSRect)_visibleRectOfColumns;
- (void)_setVisibleRectOfColumns:(struct _NSRect)fp8;
- (void)_computeAndAlignFirstClosestVisibleColumn;
- (void)_scrollLastColumnMaxXEdgeToVisible;
- (void)_addAnimatedColumn;
- (void)_disableColumnAnimation;
- (void)_enableColumnAnimation;
- (void)_setAnimateColumnScrollingForAnyEvent:(BOOL)fp8;
- (BOOL)_shouldAnimateColumnScrolling;
- (BOOL)_userClickOrKeyInColumnShouldMaintainColumnPosition;
- (void)_addColumnWithoutChangingVisibleColumn;
- (void)_addColumnSubviewAndAnimateIfNecessary:(id)fp8;
- (void)_animateLastAddedColumnToVisible;
- (void)_setInitialColumnContentSizeOfColumn:(id)fp8;
- (void)addColumn;
- (void)_setWantsRevealovers:(BOOL)fp8;
- (void)setMinColumnWidth:(float)fp8;
- (float)minColumnWidth;
- (void)setMaxVisibleColumns:(int)fp8;
- (int)maxVisibleColumns;
- (int)firstVisibleColumn;
- (int)lastVisibleColumn;
- (int)lastColumn;
- (int)selectedColumn;
- (id)selectedCell;
- (id)_selectedCellsInColumn:(int)fp8;
- (id)selectedCellInColumn:(int)fp8;
- (id)selectedCells;
- (BOOL)isLoaded;
- (int)columnOfMatrix:(id)fp8;
- (id)matrixInColumn:(int)fp8;
- (id)_containerViewOfTitles;
- (id)_containerViewOfColumns;
- (struct _NSRect)frameOfColumn:(int)fp8;
- (struct _NSRect)frameOfInsideOfColumn:(int)fp8;
- (struct _NSRect)titleFrameOfColumn:(int)fp8;
- (struct _NSRect)_containerRelativeTitleFrameOfColumn:(int)fp8;
- (struct _NSRect)_containerRelativeFrameOfColumn:(int)fp8;
- (struct _NSRect)_containerRelativeFrameOfInsideOfColumn:(int)fp8;
- (void)drawTitleOfColumn:(int)fp8 inRect:(struct _NSRect)fp12;
- (float)titleHeight;
- (void)_calcNumVisibleColumnsAndColumnSize;
- (void)_sizeDocumentViewToColumnsAndAlignIfNecessary:(BOOL)fp8;
- (void)_postWillScrollNotification;
- (void)_postDidScrollNotification;
- (void)_synchronizeTitlesAndColumnsViewVisibleRect;
- (void)_synchronizeTitlesAndColumnsViewWidth;
- (void)_scrollViewForColumnsDocumentViewFrameDidChange:(id)fp8;
- (void)_scrollViewForColumnsDocumentViewVisibilityChange:(id)fp8;
- (void)_scrollViewForColumnsWillTrackHorizontalScroller:(id)fp8;
- (BOOL)_forceSynchronizedScrollingAnimation;
- (void)_scrollViewForColumnsDidTrackHorizontalScroller:(id)fp8;
- (void)_setLineBorderColor:(id)fp8;
- (void)_setBorderType:(int)fp8;
- (int)_borderType;
- (void)_tileContinuousScrollingBrowser;
- (void)_tileNonContinuousScrollingBrowser;
- (void)tile;
- (void)updateCell:(id)fp8;
- (void)updateCellInside:(id)fp8;
- (struct _NSRect)_focusRingRect;
- (BOOL)_drawRectIfEmptyWhenSubviewsCoverDirtyRect:(struct _NSRect)fp8;
- (void)_drawEmptyColumnsForView:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)_drawTitlesForView:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)fp8 visRect:(struct _NSRect)fp12;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)_getMatchingRow:(int *)fp8 forString:(id)fp12 inMatrix:(id)fp16 startingAtRow:(int)fp20 prefixMatch:(BOOL)fp24 caseSensitive:(BOOL)fp28;
- (BOOL)_selectItemBestMatching:(id)fp8;
- (void)_bumpSelectedItem:(id)fp8;
- (int)_firstSelectableRowInMatrix:(id)fp8 inColumn:(int)fp12;
- (int)_keyRowOrSelectedRowOfMatrix:(id)fp8 inColumn:(int)fp12;
- (void)performClick:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (BOOL)_actOnKeyDown:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)fp8;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_scrollColumnToLastVisible:(int)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)sizeToFit;
- (void)_selectAllForMatrix:(id)fp8 sender:(id)fp12;
- (void)selectAll:(id)fp8;
- (void)doClick:(id)fp8;
- (void)_sendQueuedAction;
- (void)_doClickAndQueueSendingOfAction:(id)fp8;
- (void)_doClickAndQueueSendingOfAction:(id)fp8 removeAndAddColumnsIfNecessary:(BOOL)fp12;
- (void)_willStartTrackingMouseInMatrix:(id)fp8 withEvent:(id)fp12;
- (void)doDoubleClick:(id)fp8;
- (BOOL)sendAction;
- (struct _NSRect)_frameOfColumns;
- (struct _NSSize)_calcVisibleColumnAreaAvailable;
- (id)_old_initWithCoder_NSBrowser:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_old_encodeWithCoder_NSBrowser:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_lastDraggedEventFollowing:(id)fp8;
- (id)_lastDraggedOrUpEventFollowing:(id)fp8;
- (void)setColumnResizingType:(int)fp8;
- (int)columnResizingType;
- (void)setPrefersAllColumnUserResizing:(BOOL)fp8;
- (BOOL)prefersAllColumnUserResizing;
- (float)columnContentWidthForColumnWidth:(float)fp8;
- (float)columnWidthForColumnContentWidth:(float)fp8;
- (float)_validateNewWidthOfColumn:(id)fp8 width:(float)fp12;
- (void)setWidth:(float)fp8 ofColumn:(int)fp12;
- (float)widthOfColumn:(int)fp8;
- (void)_sizeMatrixOfColumnToFit:(id)fp8;
- (void)_writePersistentBrowserColumns;
- (void)_readPersistentBrowserColumns;
- (void)_autosaveColumnsIfNecessary;
- (void)setColumnsAutosaveName:(id)fp8;
- (id)columnsAutosaveName;
- (void)_setNeedsDisplayBeginingAtColumn:(int)fp8;
- (void)_clearVisitedColumnContentWidths;
- (void)_setNewPreferedColumnWidth:(float)fp8;
- (float)_preferedColumnWidth;
- (void)_columnResizeChangeFrameOfColumn:(id)fp8 toFrame:(struct _NSRect)fp12 constrainWidth:(BOOL)fp28 resizeInfo:(struct _NSBrowserColumnResizeInfo *)fp32;
- (void)setUserColumnResizingAutoresizesWindow:(BOOL)fp8;
- (BOOL)userColumnResizingAutoresizesWindow;
- (BOOL)_shouldStretchWindowIfNecessaryForUserColumnResize;
- (BOOL)_stretchWindowIfNecessaryToFitResizedColumnWithInfo:(struct _NSBrowserColumnResizeInfo *)fp8 resizeColumnDelta:(float *)fp12;
- (void)_alignColumnForStretchedWindowWithInfo:(struct _NSBrowserColumnResizeInfo *)fp8;
- (void)_zeroPinnedResizeColumnsBySharingDelta:(float)fp8 lastSharingColumn:(id)fp12 resizeInfo:(struct _NSBrowserColumnResizeInfo *)fp16;
- (void)_equalyResizeColumnsByDelta:(float)fp8 resizeInfo:(struct _NSBrowserColumnResizeInfo *)fp12;
- (void)_resizeColumnByDelta:(float)fp8 resizeInfo:(struct _NSBrowserColumnResizeInfo *)fp12;
- (void)_disableAutosavingAndColumnResizingNotificationsAndMark:(BOOL)fp8;
- (void)_enableAutosavingAndColumnResizingNotifications;
- (void)_resizeColumn:(id)fp8 withEvent:(id)fp12;
- (int)_calculateSizeToFitWidthOfColumn:(int)fp8 testLoadedOnly:(BOOL)fp12;
- (void)_sizeToFitColumn:(id)fp8 withSizeToFitType:(int)fp12;
- (void)_sizeToFitColumn:(id)fp8 withEvent:(id)fp12;
- (void)_sizeToFitColumnMenuAction:(id)fp8;

@end

@interface _NSBrowserAuxiliary : NSObject
{
    _NSBrowserScrollView *_scrollViewForColumns;
    NSClipView *_clipViewForTitles;
    _NSBrowserColumnScrollHelper *_scrollToPointHelper;
    int _scrollNotificationDisableCount;
    int _columnAnimationDisabledCount;
    NSMatrix *_handlingMatrixSingleActionForMatrix;
    NSEvent *_eventBeforeHandlingSingleActionForMatrix;
    float _preferedColumnWidthToArchive;
    NSMutableArray *_visitedColumnContentWidths;
    int _columnResizingNotificationDisabledCount;
    int _columnResizingType;
    NSString *_columnsAutosaveName;
    struct __BrFlags2 _brflags2;
    NSMutableArray *_unusedColumns;
}

@end

@interface NSBrowser (NSBrowserAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityVisibleColumnsAttribute;
- (BOOL)accessibilityIsVisibleColumnsAttributeSettable;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (id)_accessibilityTitleForColumn:(int)fp8;
- (id)accessibilityColumnTitlesAttribute;
- (BOOL)accessibilityIsColumnTitlesAttributeSettable;
- (id)accessibilityColumnsAttribute;
- (BOOL)accessibilityIsColumnsAttributeSettable;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface _NSBrowserTitlesContainerView (NSBrowserAccessibility)
- (id)_accessibilityTitleForColumn:(int)fp8;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSBrowserCell : NSCell
{
}

+ (void)initialize;
+ (id)branchImage;
+ (id)highlightedBranchImage;
- (void)_setBranchImageEnabled:(BOOL)fp8;
- (BOOL)_branchImageEnabled;
- (id)_currentBranchImage;
- (id)initTextCell:(id)fp8;
- (id)init;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setAlternateImage:(id)fp8;
- (id)alternateImage;
- (BOOL)isLeaf;
- (void)setLeaf:(BOOL)fp8;
- (BOOL)isLoaded;
- (BOOL)_isLoaded;
- (void)setLoaded:(BOOL)fp8;
- (void)reset;
- (void)set;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (BOOL)_checkLoaded:(id)fp8 rect:(const struct _NSRect *)fp12 highlight:(int)fp16;
- (id)highlightColorInView:(id)fp8;
- (id)highlightColorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawLiveResizeHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)dealloc;
- (void)finalize;

@end

@interface NSButton : NSControl
{
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)alternateTitle;
- (void)setAlternateTitle:(id)fp8;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)fp8;
- (id)attributedAlternateTitle;
- (void)setAttributedAlternateTitle:(id)fp8;
- (id)image;
- (void)setImage:(id)fp8;
- (id)alternateImage;
- (void)setAlternateImage:(id)fp8;
- (int)imagePosition;
- (void)setImagePosition:(int)fp8;
- (void)setButtonType:(int)fp8;
- (int)state;
- (void)setState:(int)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (BOOL)isTransparent;
- (void)setTransparent:(BOOL)fp8;
- (void)setPeriodicDelay:(float)fp8 interval:(float)fp12;
- (void)getPeriodicDelay:(float *)fp8 interval:(float *)fp12;
- (id)keyEquivalent;
- (void)setKeyEquivalent:(id)fp8;
- (unsigned int)keyEquivalentModifierMask;
- (void)setKeyEquivalentModifierMask:(unsigned int)fp8;
- (void)highlight:(BOOL)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)_keyEquivalentModifierMaskMatchesModifierFlags:(unsigned int)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (id)_recursiveFindDefaultButtonCell;
- (id)_setWindow:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)shiftModifySelection:(id)fp8;
- (void)altModifySelection:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)_maybeSubstitutePopUpButton;
- (id)initWithCoder:(id)fp8;
- (void)setSound:(id)fp8;
- (id)sound;
- (void)_setSound:(id)fp8;
- (id)_sound;
- (void)startSpeaking:(id)fp8;
- (void)stopSpeaking:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;

@end

@interface NSButton (NSButtonBorder)
- (void)setShowsBorderOnlyWhileMouseInside:(BOOL)fp8;
- (BOOL)showsBorderOnlyWhileMouseInside;
- (void)_setMouseTrackingForCell:(id)fp8;
- (void)_clearMouseTrackingForCell:(id)fp8;
@end

@interface NSButton (NSButtonMixedState)
- (void)setAllowsMixedState:(BOOL)fp8;
- (BOOL)allowsMixedState;
- (void)setNextState;
@end

@interface NSButton (NSButtonBezelStyles)
- (void)setBezelStyle:(int)fp8;
- (int)bezelStyle;
@end

@interface NSButtonCell : NSActionCell
{
    NSString *_altContents;
    id _sound;
    NSString *_keyEquivalent;
    struct __BCFlags2 _bcFlags2;
    unsigned short _periodicDelay;
    unsigned short _periodicInterval;
    struct __BCFlags _bcFlags;
    NSImage *_normalImage;
    id _alternateImageOrKeyEquivalentFont;
}

+ (void)initialize;
- (void)_commonInit;
- (id)init;
- (id)initTextCell:(id)fp8;
- (id)initImageCell:(id)fp8;
- (void)_setAltContents:(id)fp8;
- (id)_altContents;
- (id)_convertToText:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)fp8;
- (id)alternateTitle;
- (void)setAlternateTitle:(id)fp8;
- (id)attributedAlternateTitle;
- (void)setAttributedAlternateTitle:(id)fp8;
- (BOOL)_highlightsWithHighlightRect;
- (id)keyEquivalent;
- (void)setKeyEquivalent:(id)fp8;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)setAlternateMnemonicLocation:(unsigned int)fp8;
- (unsigned int)alternateMnemonicLocation;
- (id)alternateMnemonic;
- (void)setAlternateTitleWithMnemonic:(id)fp8;
- (unsigned int)keyEquivalentModifierMask;
- (void)setKeyEquivalentModifierMask:(unsigned int)fp8;
- (id)keyEquivalentFont;
- (void)setKeyEquivalentFont:(id)fp8;
- (void)setKeyEquivalentFont:(id)fp8 size:(float)fp12;
- (id)image;
- (void)setImage:(id)fp8;
- (id)alternateImage;
- (void)setAlternateImage:(id)fp8;
- (int)imagePosition;
- (void)setImagePosition:(int)fp8;
- (id)sound;
- (void)setSound:(id)fp8;
- (id)_sound;
- (void)_setSound:(id)fp8;
- (int)gradientType;
- (void)setGradientType:(int)fp8;
- (int)highlightsBy;
- (void)setHighlightsBy:(int)fp8;
- (int)showsStateBy;
- (void)setShowsStateBy:(int)fp8;
- (void)setButtonType:(int)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)isOpaque;
- (id)_attributedStringForDrawing;
- (id)stringValue;
- (void)setStringValue:(id)fp8;
- (void)setAttributedStringValue:(id)fp8;
- (id)attributedStringValue;
- (int)compare:(id)fp8;
- (void)setState:(int)fp8;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)_setNeedsStateUpdate:(id)fp8;
- (int)intValue;
- (void)setIntValue:(int)fp8;
- (float)floatValue;
- (void)setFloatValue:(float)fp8;
- (double)doubleValue;
- (void)setDoubleValue:(double)fp8;
- (id)objectValue;
- (void)setObjectValue:(id)fp8;
- (int)nextState;
- (void)setFont:(id)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (BOOL)isTransparent;
- (void)setTransparent:(BOOL)fp8;
- (void)setPeriodicDelay:(float)fp8 interval:(float)fp12;
- (void)getPeriodicDelay:(float *)fp8 interval:(float *)fp12;
- (int)cellAttribute:(int)fp8;
- (void)setCellAttribute:(int)fp8 to:(int)fp12;
- (BOOL)_needsOutline;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)fp8;
- (id)_startSound;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)performClick:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawImage:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (struct _NSRect)drawTitle:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)drawBezelWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_needRedrawOnWindowChangedKeyState;

@end

@interface NSButtonCell (NSDefaultButtonIndicatorPrivate)
+ (void)_setDefaultButtonCycleTime:(float)fp8;
+ (float)_defaultButtonCycleTime;
+ (void)_startHitTracking:(id)fp8;
+ (void)_finishHitTracking:(id)fp8;
- (BOOL)_hasDefaultButtonIndicator;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;
- (BOOL)_isAnimatingDefaultCell;
- (void)_setDefaultButtonIndicatorNeedsDisplay;
@end

@interface NSButtonCell (NSButtonImageSourcePrivate)
- (void)_setButtonImageSource:(id)fp8;
- (id)_buttonImageSource;
@end

@interface NSButtonCell (NSButtonCellBezelStyles)
- (void)setBezelStyle:(int)fp8;
- (int)bezelStyle;
@end

@interface NSButtonCell (NSButtonCellPrivate)
+ (id *)_buttonBezelColors;
+ (void)_recacheButtonColors;
+ (struct _NSSize)_keyEquivalentSizeWithFont:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (void)_setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (id)_backgroundColor;
- (id)_textHighlightColor;
- (id)_textDimColor;
- (BOOL)_hasImage;
- (BOOL)_hasTitle;
- (float)_leading;
- (struct _NSRect)_insetRect:(struct _NSRect)fp8;
- (struct _NSSize)_imageSizeWithSize:(struct _NSSize)fp8;
- (struct _NSSize)_titleSizeWithSize:(struct _NSSize)fp8;
- (struct _NSRect)_imageRectWithRect:(struct _NSRect *)fp8;
- (struct _NSRect)_alignedTitleRectWithRect:(struct _NSRect)fp8;
- (struct _NSRect)_centerTitle:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)_fillBackground:(struct _NSRect)fp8 withAlternateColor:(BOOL)fp24;
- (void)setImageDimsWhenDisabled:(BOOL)fp8;
- (BOOL)imageDimsWhenDisabled;
- (void)setShowsBorderOnlyWhileMouseInside:(BOOL)fp8;
- (BOOL)showsBorderOnlyWhileMouseInside;
- (void)setControlView:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)_canBecomeDefaultButtonCell;
- (struct _NSRange)_characterRangeForPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
- (BOOL)_imagesHaveAlpha;
- (void)_setButtonType:(int)fp8 adjustingImage:(BOOL)fp12;
- (int)_buttonType;
@end

@interface NSButtonCell (NSButtonCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSRect)accessibilityFocusRingBoundsForBounds:(struct _NSRect)fp8;
@end

@interface NSButtonImageSource : NSObject <NSCoding, NSCopying>
{
    NSMutableDictionary *_buttonImages;
    struct _NSSize _imageSize;
    struct _NSSize _focusRingImageSize;
    struct {
        unsigned int hasAlpha:1;
        unsigned int fullEncoding:1;
        unsigned int reserved:30;
    } _bisFlags;
    int _reserved1;
    int _reserved2;
    int _reserved3;
}

+ (void)initialize;
+ (id)buttonImageSourceWithName:(id)fp8;
+ (BOOL)archiveButtonImageSourceWithName:(id)fp8 toDirectory:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)imageForState:(struct NSButtonState)fp8;
- (id)focusRingImageForState:(struct NSButtonState)fp8;
- (int)bezelStyleForState:(struct NSButtonState)fp8;
- (BOOL)isBorderedForState:(struct NSButtonState)fp8;
- (BOOL)isOpaqueForState:(struct NSButtonState)fp8;
- (BOOL)useDisabledEffectForState:(struct NSButtonState)fp8;
- (BOOL)useHighlightEffectForState:(struct NSButtonState)fp8;
- (struct _NSSize)imageSize;
- (struct _NSSize)focusRingImageSize;
- (BOOL)hasImageWithAlpha;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface _NSButtonImage : NSObject <NSCoding>
{
    NSImage *image;
    NSImage *focusRingImage;
    int bezelStyle;
    BOOL isBordered;
    BOOL isOpaque;
    BOOL useDisabledEffect;
    BOOL useHighlightEffect;
}

+ (void)initialize;
+ (id)image:(id)fp8 focus:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSButtonImageSource (NSButtonImageSource_Private)
- (void)_scanImages;
- (id)_initWithName:(id)fp8 propertyList:(id)fp12;
- (id)_initWithThemeType:(short)fp8;
- (BOOL)_archiveToFile:(id)fp8;
- (id)_findButtonImageForState:(struct NSButtonState)fp8;
@end

@interface NSCachedImageRep : NSImageRep
{
    struct _NSPoint _origin;
    NSWindow *_window;
    void *_cache;
}

+ (void)initialize;
- (id)init;
- (id)initWithWindow:(id)fp8 rect:(struct _NSRect)fp12;
- (id)_initWithSharedKitWindow:(int)fp8 rect:(struct _NSRect)fp12;
- (id)initWithSize:(struct _NSSize)fp8 depth:(int)fp16 separate:(BOOL)fp20 alpha:(BOOL)fp24;
- (id)_initWithSize:(struct _NSSize)fp8 depth:(int)fp16 separate:(BOOL)fp20 alpha:(BOOL)fp24 allowDeep:(BOOL)fp28;
- (void)dealloc;
- (void)finalize;
- (id)window;
- (struct _NSRect)rect;
- (BOOL)_canDrawOutsideOfItsBounds;
- (BOOL)draw;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (id)initWithCoder:(id)fp8;
- (void *)_cache;
- (BOOL)_transferCache:(id)fp8;
- (void)_resizeCache:(struct _NSSize)fp8 cachedSeparately:(BOOL)fp16 bps:(int)fp20 numColors:(int)fp24 hasAlpha:(BOOL)fp28;
- (BOOL)_isCachedSeparately;
- (void)_setKeepCacheWindow:(BOOL)fp8;
- (BOOL)_keepCacheWindow;
- (void)encodeWithCoder:(id)fp8;
- (void)_computeParams;
- (void)setAlpha:(BOOL)fp8;
- (BOOL)hasAlpha;
- (id)colorSpaceName;
- (int)bitsPerSample;
- (int)pixelsWide;
- (int)pixelsHigh;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSCarbonMenuImpl : NSObject
{
    NSMenu *_menu;
}

+ (void)initialize;
+ (void)prepareForCarbonMenuBar;
+ (void)setupForNoMenuBar;
- (void)dealloc;
- (void)finalize;
- (void)setMenu:(id)fp8;
- (id)menu;
- (void)_itemChanged:(int)fp8;
- (void)itemChanged:(id)fp8;
- (void)_itemAdded:(int)fp8;
- (void)itemAdded:(id)fp8;
- (void)_itemRemoved:(int)fp8;
- (void)itemRemoved:(id)fp8;
- (void)_mainStatusChanged;
- (void)menuDelegateChanged;
- (void)performActionWithHighlightingForItemAtIndex:(int)fp8;
- (void)performMenuAction:(SEL)fp8 withTarget:(id)fp12;
- (void)setupCarbonMenuBar;
- (void)setAsMainCarbonMenuBar;
- (void)clearAsMainCarbonMenuBar;
- (void)popUpMenu:(id)fp8 atLocation:(struct _NSPoint)fp12 width:(float)fp20 forView:(id)fp24 withSelectedItem:(int)fp28 withFont:(id)fp32;
- (void)_popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16 withFont:(id)fp20;
- (void)_popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16;
- (id)window;

@end

@interface NSCarbonWindow : NSWindow
{
    struct OpaqueWindowPtr *_windowRef;
    BOOL _windowRefIsOwned;
    void *_handleEventUPP;
    struct OpaqueEventHandlerRef *_eventHandler;
    BOOL _passingCarbonWindowActivationEvents;
    BOOL _forceNotKeyWindowForInputContext;
    BOOL _isPrintOrPageSetupWindow;
    BOOL _handlingCarbonWindowActivationEvents;
}

+ (Class)frameViewClassForStyleMask:(unsigned int)fp8;
+ (float)_scaleFactorForStyleMask:(unsigned int)fp8;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)fp8 takingOwnership:(BOOL)fp12 disableOrdering:(BOOL)fp16;
- (id)initWithCarbonWindowRef:(struct OpaqueWindowPtr *)fp8 takingOwnership:(BOOL)fp12;
- (void)dealloc;
- (void)finalize;
- (struct OpaqueWindowPtr *)windowRef;
- (BOOL)_hasWindowRef;
- (BOOL)_managesWindowRef;
- (void)_removeWindowRef;
- (unsigned long)_carbonWindowClass;
- (BOOL)reconcileToCarbonWindowBounds;
- (void)sendSuperEvent:(id)fp8;
- (void)_postCarbonWindowActivateEvent:(BOOL)fp8 makeKeyWindow:(BOOL)fp12;
- (void)_cancelKey:(id)fp8;
- (void)_commonAwake;
- (id)_destroyRealWindow:(BOOL)fp8;
- (void)_oldPlaceWindow:(struct _NSRect)fp8;
- (void)_reallyDoOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16 forCounter:(BOOL)fp20 force:(BOOL)fp24 isModal:(BOOL)fp28;
- (void)_termWindowIfOwner;
- (void)_windowMovedToRect:(struct _NSRect)fp8;
- (struct _NSRect)constrainFrameRect:(struct _NSRect)fp8 toScreen:(id)fp24;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)display;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (int)level;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)resignKeyWindow;
- (void)resignMainWindow;
- (void)sendEvent:(id)fp8;
- (void)setContentView:(id)fp8;
- (void)setHasShadow:(BOOL)fp8;
- (void)setHidesOnDeactivate:(BOOL)fp8;
- (BOOL)worksWhenModal;
- (void)_setModalWindowLevel;
- (id)_clearModalWindowLevel;
- (unsigned long)carbonHICommandIDFromActionSelector:(SEL)fp8;
- (void)sendCarbonProcessHICommandEvent:(unsigned long)fp8;
- (unsigned char)sendCarbonUpdateHICommandStatusEvent:(unsigned long)fp8 withMenuRef:(struct OpaqueMenuRef *)fp12 andMenuItemIndex:(unsigned short)fp16;
- (void)clear:(id)fp8;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (void)paste:(id)fp8;
- (void)redo:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)undo:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)handleCarbonBoundsChange;
- (long)handleMouseDownEvent:(struct OpaqueEventRef *)fp8 at:(struct Point)fp12 inPart:(short)fp16 withMods:(unsigned long)fp20;
- (void)_setForceNotKeyWindowForInputContext:(BOOL)fp8;
- (BOOL)_isKeyWindowIgnoringFocus;
- (BOOL)_isPrintOrPageSetupWindow;
- (void)_setPrintOrPageSetupWindow:(BOOL)fp8;

@end

@interface NSCarbonWindowContentView : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;

@end

@interface NSCarbonWindowFrame : NSView
{
    unsigned int _styleMask;
}

+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)dealloc;
- (void)_setFrameNeedsDisplay:(BOOL)fp8;
- (void)_setSheet:(BOOL)fp8;
- (void)_updateButtonState;
- (void)_windowChangedKeyState;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)fp8;
- (void)_hideToolbarWithAnimation:(BOOL)fp8;
- (float)_distanceFromToolbarBaseToTitlebar;
- (id)closeButton;
- (unsigned int)styleMask;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (id)minimizeButton;
- (void)setTitle:(id)fp8;
- (id)title;
- (void)_setNonactivatingPanel:(BOOL)fp8;
- (float)_sheetHeightAdjustment;

@end

@interface NSCellUndoManager : NSUndoManager
{
    NSUndoManager *_nextUndoManager;
}

- (void)dealloc;
- (void)setNextUndoManager:(id)fp8;
- (void)undo;
- (void)redo;
- (BOOL)canUndo;
- (BOOL)canRedo;
- (id)undoMenuItemTitle;
- (id)redoMenuItemTitle;

@end

@interface _NSKeyboardFocusClipView : NSClipView
{
    NSView *_representedView;
    struct _NSRect _adjustment;
    struct _NSRect _lastFocusRingRect;
    BOOL _drawFocus;
    BOOL _bezelStyle;
}

- (void)dealloc;
- (void)finalize;
- (void)removeFromSuperview;
- (BOOL)_drawRectIfEmpty;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_setKeyboardFocusRingNeedsDisplay;
- (void)_drawKeyboardFocusRingWithFrame:(struct _NSRect)fp8;
- (void)_drawKeyboardFocusRingWithFrame:(struct _NSRect)fp8 forCell:(id)fp24;
- (void)_setFocusForCell:(id)fp8 forView:(id)fp12 withFrame:(struct _NSRect)fp16 withFocusRingFrame:(struct _NSRect)fp32 withInset:(float)fp48;
- (void)_adjustFocusRingSize:(struct _NSSize)fp8;
- (void)_adjustFocusRingLocation:(struct _NSPoint)fp8;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)_clearFocusForView;
- (struct _NSRect)_getFocusRingFrame;

@end

@interface NSCell : NSObject <NSCopying, NSCoding>
{
    id _contents;
    struct __CFlags _cFlags;
    id _support;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
+ (int)defaultFocusRingType;
+ (BOOL)_compatibleListShouldUseAlternateSelectedControlColor;
+ (id)defaultMenu;
- (id)init;
- (id)_convertToText:(id)fp8;
- (BOOL)_allowsContextMenus;
- (void)_commonInit;
- (id)initTextCell:(id)fp8;
- (id)initImageCell:(id)fp8;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (void)dealloc;
- (void)finalize;
- (void)setControlView:(id)fp8;
- (void)_setControlView:(id)fp8;
- (BOOL)_prefersTrackingWhenDisabled;
- (BOOL)_highlightsWithHighlightRect;
- (id)_useUserKeyEquivalent;
- (BOOL)_usesUserKeyEquivalent;
- (id)controlView;
- (int)type;
- (void)setType:(int)fp8;
- (int)state;
- (void)setState:(int)fp8;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (int)tag;
- (void)setTag:(int)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (BOOL)isOpaque;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;
- (int)sendActionOn:(int)fp8;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)fp8;
- (BOOL)acceptsFirstResponder;
- (void)setRefusesFirstResponder:(BOOL)fp8;
- (BOOL)refusesFirstResponder;
- (void)_setAcceptsFirstResponder:(BOOL)fp8;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)fp8;
- (BOOL)isScrollable;
- (void)setScrollable:(BOOL)fp8;
- (BOOL)isHighlighted;
- (void)setHighlighted:(BOOL)fp8;
- (void)_setNeedsStateUpdate:(id)fp8;
- (int)alignment;
- (void)_setHorizontallyCentered:(BOOL)fp8;
- (void)_setVerticallyCentered:(BOOL)fp8;
- (void)setAlignment:(int)fp8;
- (BOOL)wraps;
- (void)setWraps:(BOOL)fp8;
- (int)entryType;
- (void)setEntryType:(int)fp8;
- (BOOL)isEntryAcceptable:(id)fp8;
- (void)setFloatingPointFormat:(BOOL)fp8 left:(unsigned int)fp12 right:(unsigned int)fp16;
- (id)keyEquivalent;
- (void)_invalidateObjectValue;
- (id)_updateInvalidatedObjectValue:(id)fp8;
- (id)_contents;
- (id)_formatObjectValue:(id)fp8 invalid:(BOOL)fp12;
- (void)_setContents:(id)fp8;
- (id)objectValue;
- (void)setObjectValue:(id)fp8;
- (BOOL)hasValidObjectValue;
- (id)stringValue;
- (id)_textAttributes;
- (int)_lineBreakMode;
- (void)_setLineBreakMode:(int)fp8;
- (void)_setTextAttributeParaStyleNeedsRecalc;
- (int)_typesetterBehavior;
- (void)setLineBreakMode:(int)fp8;
- (int)lineBreakMode;
- (void)setAllowsUndo:(BOOL)fp8;
- (BOOL)allowsUndo;
- (id)_attributedStringForEditing;
- (id)_stringForEditing;
- (id)_unformattedAttributedStringValue:(id)fp8;
- (id)_attributedStringValue:(id)fp8 invalid:(BOOL)fp12;
- (BOOL)_hasAttributedStringValue;
- (id)attributedStringValue;
- (BOOL)_objectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;
- (BOOL)_objectValue:(id *)fp8 forString:(id)fp12;
- (void)setStringValue:(id)fp8;
- (void)setAttributedStringValue:(id)fp8;
- (void)setMnemonicLocation:(unsigned int)fp8;
- (unsigned int)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)setShowsFirstResponder:(BOOL)fp8;
- (BOOL)showsFirstResponder;
- (void)setFocusRingType:(int)fp8;
- (int)focusRingType;
- (int)_effectiveFocusRingType;
- (BOOL)allowsEditingTextAttributes;
- (void)setAllowsEditingTextAttributes:(BOOL)fp8;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)fp8;
- (int)compare:(id)fp8;
- (int)intValue;
- (void)setIntValue:(int)fp8;
- (float)floatValue;
- (void)setFloatValue:(float)fp8;
- (double)doubleValue;
- (void)setDoubleValue:(double)fp8;
- (void)takeIntValueFrom:(id)fp8;
- (void)takeFloatValueFrom:(id)fp8;
- (void)takeDoubleValueFrom:(id)fp8;
- (void)takeStringValueFrom:(id)fp8;
- (void)takeObjectValueFrom:(id)fp8;
- (id)font;
- (void)setFont:(id)fp8;
- (void)_invalidateFont;
- (id)image;
- (void)setImage:(id)fp8;
- (void)setControlTint:(int)fp8;
- (int)controlTint;
- (void)setControlSize:(int)fp8;
- (int)controlSize;
- (void)setFormatter:(id)fp8;
- (id)formatter;
- (id)representedObject;
- (void)setRepresentedObject:(id)fp8;
- (int)cellAttribute:(int)fp8;
- (void)setCellAttribute:(int)fp8 to:(int)fp12;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (struct _NSSize)cellSize;
- (void)_setIsWhite:(BOOL)fp8;
- (BOOL)_isWhite;
- (BOOL)_needsRevealoverWithFrame:(struct _NSRect *)fp8 trackingRect:(struct _NSRect *)fp12 inView:(id)fp16;
- (void)_drawRevealoverWithFrame:(struct _NSRect)fp8 inView:(id)fp24 forView:(id)fp28;
- (BOOL)__needsRevealoverWithFrame:(struct _NSRect *)fp8 trackingRect:(struct _NSRect *)fp12 inView:(id)fp16;
- (void)__drawRevealoverWithFrame:(struct _NSRect)fp8 inView:(id)fp24 forView:(id)fp28;
- (void)_setDrawingInRevealover:(BOOL)fp8;
- (BOOL)_drawingInRevealover;
- (BOOL)_validateEntryString:(id)fp8 uiHandled:(char *)fp12;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)calcDrawInfo:(struct _NSRect)fp8;
- (id)setUpFieldEditorAttributes:(id)fp8;
- (struct _NSRange)_characterRangeForPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
- (void)_drawLiveResizeHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_setNeedsHighlightedTextHint:(BOOL)fp8;
- (BOOL)_needsHighlightedTextHint;
- (BOOL)_usingAlternateHighlightColorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)highlightColorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawFocusRingWithFrame:(struct _NSRect)fp8;
- (void)_setCurrentlyEditing:(BOOL)fp8;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)fp8;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (id)_setMouseDownFlags:(int)fp8;
- (int)mouseDownFlags;
- (void)getPeriodicDelay:(float *)fp8 interval:(float *)fp12;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)_sendActionFrom:(id)fp8;
- (void)_displaySomeWindowsIfNeeded:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)keyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (BOOL)keyUp:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (struct _NSRect)_focusRingFrameForFrame:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (struct _NSRect)_centerInnerBounds:(struct _NSRect)fp8;
- (id)_selectOrEdit:(const struct _NSRect *)fp8 inView:(id)fp12 target:(id)fp16 editor:(id)fp20 event:(id)fp24 start:(int)fp28 end:(int)fp32;
- (void)_synchronizeTextView:(id)fp8;
- (void)_restartEditingWithTextView:(id)fp8;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (void)_validateEditing:(id)fp8;
- (void)endEditing:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)resetCursorRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)performClick:(id)fp8;
- (void)setMenu:(id)fp8;
- (id)menu;
- (id)menuForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)setSendsActionOnEndEditing:(BOOL)fp8;
- (BOOL)sendsActionOnEndEditing;
- (BOOL)wantsNotificationForMarkedText;
- (int)baseWritingDirection;
- (void)setBaseWritingDirection:(int)fp8;

@end

@interface NSCell (NSFieldEditor)
+ (id)_undoManagerForFieldEditor:(id)fp8 defaultUndoManager:(id)fp12;
+ (void)_clearUndoManageForFieldEditor:(id)fp8;
@end

@interface NSCell (NSCell_Placeholder)
- (void)_setPlaceholderString:(id)fp8;
- (id)_placeholderString;
- (void)_setPlaceholderAttributedString:(id)fp8;
- (id)_placeholderAttributedString;
@end

@interface NSCell (NSCellControlTint)
- (int)_realControlTint;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;
- (BOOL)_isAnimatingDefaultCell;
@end

@interface NSCell (NSPrivate_CellMouseTracking)
- (void)_setMouseTrackingInRect:(struct _NSRect)fp8 ofView:(id)fp24;
- (void)_clearMouseTracking;
- (void)_focusDidChange:(id)fp8;
@end

@interface NSCell (NSCellMixedState)
- (void)setAllowsMixedState:(BOOL)fp8;
- (BOOL)allowsMixedState;
- (int)nextState;
- (void)setNextState;
@end

@interface NSAccessibilityReparentingCellProxy : NSAccessibilityReparentingProxy
{
}

- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityWindowAttribute;
- (id)accessibilityTopLevelUIElementAttribute;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;

@end

@interface NSCell (NSCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSPoint)accessibilityWindowPointForShowMenu;
- (void)_accessibilityShowMenu:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (void)accessibilityPostNotification:(id)fp8;
- (id)accessibilityElementWithParent:(id)fp8;
@end

@interface NSCGSContext : NSGraphicsContext
{
    struct CGContext *_cgsContext;
}

+ (id)graphicsContextWithAttributes:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)saveGraphicsState;
- (void)restoreGraphicsState;
- (void)flushGraphics;
- (void *)graphicsPort;
- (void *)windowID;
- (void)_invalidate;
- (void)_releaseCIContext;
- (BOOL)isFlipped;

@end

@interface NSCGSContext (NSQuartzCoreAdditions)
- (id)CIContext;
@end

@interface NSCGSContext (NSCGSContext_RenderingOptions)
- (void)setShouldAntialias:(BOOL)fp8;
- (BOOL)shouldAntialias;
- (void)setImageInterpolation:(int)fp8;
- (int)imageInterpolation;
- (void)setPatternPhase:(struct _NSPoint)fp8;
- (struct _NSPoint)patternPhase;
- (void)setCompositingOperation:(int)fp8;
- (int)compositingOperation;
- (int)colorRenderingIntent;
- (void)setColorRenderingIntent:(int)fp8;
- (void *)contextID;
@end

@interface NSCGSFont : NSFont
{
    NSFaceInfo *_faceInfo;
    id _otherFont;
    float *_matrix;
    struct _NS_cgsResv *_reservedCGS;
    float _constWidth;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;

@end

@interface NSCharacterProperty : NSObject
{
    NSRulebook *_propbook;
    NSMutableArray *_propset;
}

+ (BOOL)setSystemCharacterProperties:(id)fp8;
+ (id)systemCharacterProperties;
+ (int)directionalType:(unsigned short)fp8;
+ (int)nonspacingMarkPriority:(unsigned short)fp8;
+ (BOOL)isBidirectionalControlCharacter:(unsigned short)fp8;
- (id)initWithRulebookSet:(struct _NSRulebookSetHeader *)fp8;
- (id)initWithContentsOfFile:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (int)character:(unsigned short)fp8 hasNumericProperty:(int)fp12;
- (int)character:(unsigned short)fp8 hasProperty:(int)fp12;

@end

@interface NSRulebookSetObject : NSObject
{
    struct _NSRulebookSetHeader *aset;
}

- (id)initWithSetHeader:(struct _NSRulebookSetHeader *)fp8;
- (struct _NSRulebookSetHeader *)setHeader;

@end

@interface NSScrollAnimationHelper : NSAnimationHelper
{
    id _delegate;
    struct _NSPoint _startPoint;
    struct _NSPoint _endPoint;
    struct _NSPoint _totalDelta;
}

- (struct _NSPoint)_currentPoint;
- (void)_doAnimationStepWithProgress:(float)fp8;
- (void)_doFinalAnimationStep;
- (id)initWithDelegate:(id)fp8;
- (void)scrollToPoint:(struct _NSPoint)fp8;
- (void)changeDestinationToPoint:(struct _NSPoint)fp8;
- (struct _NSPoint)targetOrigin;

@end

@interface NSClipView : NSView
{
    NSColor *_backgroundColor;
    NSView *_docView;
    struct _NSRect _docRect;
    struct _NSRect _oldDocFrame;
    NSCursor *_cursor;
    id _scrollAnimationHelper;
    struct __cvFlags _cvFlags;
}

+ (void)_animatedScrollingPreferencesChanged:(id)fp8;
+ (void)initialize;
+ (void)_setAutoscrollResponseMultiplier:(float)fp8;
+ (float)_autoscrollResponseMultiplier;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (id)_setSuperview:(id)fp8;
- (void)_registerForDocViewFrameAndBoundsChangeNotifications;
- (void)_unregisterForDocViewFrameAndBoundsChangeNotifications;
- (void)setDocumentView:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (id)documentView;
- (void)_setDocViewFromRead:(id)fp8;
- (struct _NSRect)documentRect;
- (struct _NSRect)documentVisibleRect;
- (id)_markUsedByCell;
- (BOOL)_isUsedByCell;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_pinDocRect;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setFrameRotation:(float)fp8;
- (void)setBoundsOrigin:(struct _NSPoint)fp8;
- (void)setBoundsSize:(struct _NSSize)fp8;
- (void)setBoundsRotation:(float)fp8;
- (void)translateOriginToPoint:(struct _NSPoint)fp8;
- (void)scaleUnitSquareToSize:(struct _NSSize)fp8;
- (void)rotateByAngle:(float)fp8;
- (id)_computeBounds;
- (BOOL)preservesContentDuringLiveResize;
- (void)_selfBoundsChanged;
- (struct _NSRect)_dirtyRectUncoveredFromOldDocFrame:(struct _NSRect)fp8 byNewDocFrame:(struct _NSRect)fp24;
- (void)_reflectDocumentViewFrameChange;
- (void)viewFrameChanged:(id)fp8;
- (void)_handleFrameChangeForSubview:(id)fp8;
- (void)_reflectDocumentViewBoundsChange;
- (void)viewBoundsChanged:(id)fp8;
- (void)_handleBoundsChangeForSubview:(id)fp8;
- (BOOL)isFlipped;
- (void)_alignCoords;
- (void)_extendNextScrollRelativeToCurrentPosition;
- (BOOL)autoscroll:(id)fp8;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)fp8;
- (void)_autoscrollForDraggingInfo:(id)fp8 timeDelta:(double)fp12;
- (void)_scrollPoint:(const struct _NSPoint *)fp8 fromView:(id)fp12;
- (BOOL)_scrollRectToVisible:(const struct _NSRect *)fp8 fromView:(id)fp12;
- (BOOL)_scrollTo:(const struct _NSPoint *)fp8;
- (BOOL)_scrollTo:(const struct _NSPoint *)fp8 animate:(BOOL)fp12;
- (struct _NSPoint)constrainScrollPoint:(struct _NSPoint)fp8;
- (BOOL)_canAnimateScrolls;
- (void)_setCanAnimateScrolls:(BOOL)fp8;
- (void)setCopiesOnScroll:(BOOL)fp8;
- (BOOL)copiesOnScroll;
- (void)_animatedScrollToPoint:(struct _NSPoint)fp8;
- (void)_immediateScrollToPoint:(struct _NSPoint)fp8;
- (void)scrollToPoint:(struct _NSPoint)fp8;
- (BOOL)_scrollInProgress;
- (void)setUpGState;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)fp8;
- (void)setDocumentCursor:(id)fp8;
- (id)documentCursor;
- (void)resetCursorRects;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)_isAnimatingScroll;
- (struct _NSPoint)_animatingScrollTargetOrigin;

@end

@interface NSClassSwapper : NSObject <NSCoding>
{
    NSString *className;
    id template;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)template;
- (void)setTemplate:(id)fp8;
- (id)className;
- (void)setClassName:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSCompressedSimpleCollatorElement : NSCollatorElement
{
    NSData *table;
    short *data;
    int numElements;
    unsigned short minElement;
    unsigned short maxElement;
}

- (id)initWithName:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)entryState:(struct _NSSortState *)fp8;
- (int)stepKey:(id)fp8 elements:(unsigned short *)fp12 number:(int *)fp16 state:(struct _NSSortState *)fp20;

@end

@interface NSCompressedMultipassCollatorElement : NSMultipassCollatorElement
{
    char **passData;
    unsigned short *keyData;
    int numKeys;
}

- (id)initWithName:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (int)stepKey:(id)fp8 elements:(unsigned short *)fp12 number:(int *)fp16 state:(struct _NSSortState *)fp20;

@end

@interface NSMultipassCollatorElement : NSCollatorElement
{
    NSDictionary *dict;
    NSDictionary *table;
    unsigned short numPasses;
    unsigned short maxLen;
    BOOL _trace;
}

- (id)initWithName:(id)fp8;
- (void)dealloc;
- (id)dictionary;
- (void)entryState:(struct _NSSortState *)fp8;
- (int)stepKey:(id)fp8 elements:(unsigned short *)fp12 number:(int *)fp16 state:(struct _NSSortState *)fp20;

@end

@interface NSMultipassCollatorState : NSObject
{
    NSArray *passNameArray;
    NSMutableString *revBuffer;
    int bufIndex;
    int passCount;
    unsigned short passNumber;
    struct {
        unsigned int _buffering:1;
        unsigned int _emptyingBuffer:1;
        unsigned int _positivePass:1;
    } _flags;
}

- (void)release;
- (void)dealloc;
- (BOOL)positivePassDirection;
- (unsigned int)currentPassNumber;
- (BOOL)bufferIsEmpty;

@end

@interface NSBinaryCollatorElement : NSCollatorElement
{
}

+ (void)initialize;
+ (id)sharedInstance;
- (void)entryState:(struct _NSSortState *)fp8;
- (int)stepKey:(id)fp8 elements:(unsigned short *)fp12 number:(int *)fp16 state:(struct _NSSortState *)fp20;

@end

@interface NSCollatorElement : NSObject
{
    NSString *_name;
}

+ (void)initialize;
+ (id)availableCollatorElements;
+ (id)collatorElementWithName:(id)fp8;
- (id)name;
- (void)trace;
- (id)initWithName:(id)fp8;
- (void)entryState:(struct _NSSortState *)fp8;
- (int)stepKey:(id)fp8 elements:(unsigned short *)fp12 number:(int *)fp16 state:(struct _NSSortState *)fp20;

@end

@interface NSCollator : NSObject
{
    NSString *_name;
    NSArray *_elements;
}

+ (void)initialize;
+ (id)defaultCollator;
+ (id)binaryCollator;
+ (id)availableCollators;
+ (void)setDefaultCollator:(id)fp8;
+ (id)collatorWithName:(id)fp8;
- (void)trace;
- (id)_initWithName:(id)fp8;
- (id)initWithName:(id)fp8 element:(id)fp12;
- (id)initWithElementName:(id)fp8;
- (id)initWithName:(id)fp8 elementNames:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)sortKeyForString:(id)fp8 range:(struct _NSRange)fp12 flags:(int)fp20;
- (int)orderString:(id)fp8 string:(id)fp12;
- (int)orderString:(id)fp8 string:(id)fp12 flags:(int)fp16;
- (int)orderString:(id)fp8 range:(struct _NSRange)fp12 string:(id)fp20 range:(struct _NSRange)fp24 flags:(int)fp32;

@end

@interface NSMultipassCollatorElement (NSMultipassPrivate)
- (void)trace;
@end

@interface NSString (NSMutableSubstringPrivateMethods)
- (id)mutableSubstringFromRange:(struct _NSRange)fp8;
@end

@interface NSMutableString (NSCharacterInsertionPrivateMethods)
- (void)appendCharacter:(unsigned short)fp8;
- (void)deleteLastCharacter;
@end

@interface NSDynamicSystemColor : NSCatalogColor
{
}

+ (void)initialize;
+ (void)recacheAllColors:(id)fp8;
+ (id)controlShadowColor;
+ (id)controlDarkShadowColor;
+ (id)controlColor;
+ (id)controlBackgroundColor;
+ (id)controlHighlightColor;
+ (id)controlLightHighlightColor;
+ (id)textColor;
+ (id)textBackgroundColor;
+ (id)controlTextColor;
+ (id)selectedTextColor;
+ (id)selectedTextBackgroundColor;
+ (id)selectedControlTextColor;
+ (id)selectedControlColor;
+ (id)disabledControlTextColor;
+ (id)scrollBarColor;
+ (id)gridColor;
+ (id)toolTipTextColor;
+ (id)toolTipColor;
+ (id)knobColor;
+ (id)selectedKnobColor;
+ (id)highlightColor;
+ (id)shadowColor;
+ (id)windowFrameColor;
+ (id)windowFrameTextColor;
+ (id)selectedMenuItemTextColor;
+ (id)progressIndicatorColor;
+ (id)headerColor;
+ (id)headerTextColor;
+ (id)windowBackgroundColor;
+ (id)blueControlTintColor;
+ (id)graphiteControlTintColor;
+ (id)clearControlTintColor;
+ (id)toolbarBackgroundColor;
+ (id)secondarySelectedControlColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)controlAlternatingRowColor;
+ (id)alternateSelectedControlColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)alternateSelectedControlTextColor;
+ (id)selectedMenuItemColor;
- (id)initWithSelector:(SEL)fp8;
- (void)recacheColor;
- (void)encodeWithCoder:(id)fp8;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSMetalPatternColor : NSPatternColor
{
}

- (id)initForMetal:(struct _NSRect)fp8;
- (void)_resizeForMetal:(struct _NSRect)fp8;
- (id)patternImage;

@end

@interface NSGradientPatternColor : NSPatternColor
{
}

- (void)set;
- (void)setFill;
- (void)setStroke;

@end

@interface NSPatternColor : NSColor
{
    NSImage *_patternImage;
    void *_pattern;
}

+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithImage:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorSpaceName;
- (id)description;
- (id)patternImage;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSColorSpaceColor : NSColor
{
    NSColorSpace *colorSpace;
    struct CGColor *cachedColor;
    int numComponents;
    float components[0];
}

+ (id)newWithColorSpace:(id)fp8 components:(const float *)fp12 count:(int)fp16;
+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithColorSpace:(id)fp8 components:(const float *)fp12 count:(int)fp16;
- (void)dealloc;
- (void)finalize;
- (id)colorSpace;
- (int)numberOfComponents;
- (void)getComponents:(float *)fp8;
- (float)alphaComponent;
- (id)colorWithAlphaComponent:(float)fp8;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorUsingColorSpace:(id)fp8;
- (id)colorSpaceName;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCatalogColor : NSColor
{
    NSString *catalogNameComponent;
    NSString *colorNameComponent;
    NSColor *genericColor;
}

+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithCatalogName:(id)fp8 colorName:(id)fp12 genericColor:(id)fp16;
- (id)colorSpaceName;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)drawSwatchInRect:(struct _NSRect)fp8;
- (float)alphaComponent;
- (id)colorWithAlphaComponent:(float)fp8;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorUsingColorSpace:(id)fp8;
- (id)catalogNameComponent;
- (id)colorNameComponent;
- (id)localizedCatalogNameComponent;
- (id)localizedColorNameComponent;
- (id)description;
- (Class)classForCoder;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;

@end

@interface NSDeviceCMYKColor : NSColor
{
    float cyanComponent;
    float magentaComponent;
    float yellowComponent;
    float blackComponent;
    float alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithCyan:(float)fp8 magenta:(float)fp12 yellow:(float)fp16 black:(float)fp20 alpha:(float)fp24;
- (void)dealloc;
- (void)finalize;
- (float)cyanComponent;
- (float)magentaComponent;
- (float)yellowComponent;
- (float)blackComponent;
- (float)alphaComponent;
- (void)getCyan:(float *)fp8 magenta:(float *)fp12 yellow:(float *)fp16 black:(float *)fp20 alpha:(float *)fp24;
- (int)numberOfComponents;
- (void)getComponents:(float *)fp8;
- (id)colorWithAlphaComponent:(float)fp8;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)drawSwatchInRect:(struct _NSRect)fp8;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)fp8;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCachedDeviceWhiteColor : NSDeviceWhiteColor
{
}

- (void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (void)dealloc;
- (void)finalize;

@end

@interface NSCachedWhiteColor : NSCalibratedWhiteColor
{
}

- (void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (void)dealloc;
- (void)finalize;

@end

@interface NSDeviceWhiteColor : NSCalibratedWhiteColor
{
}

- (void)drawSwatchInRect:(struct _NSRect)fp8;
- (id)colorSpaceName;
- (id)colorSpace;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCalibratedWhiteColor : NSColor
{
    float whiteComponent;
    float alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithWhite:(float)fp8 alpha:(float)fp12;
- (void)dealloc;
- (void)finalize;
- (float)whiteComponent;
- (void)getWhite:(float *)fp8 alpha:(float *)fp12;
- (float)alphaComponent;
- (int)numberOfComponents;
- (void)getComponents:(float *)fp8;
- (id)colorWithAlphaComponent:(float)fp8;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)fp8;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8 colorSpaceCode:(BOOL)fp12;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCachedDeviceRGBColor : NSDeviceRGBColor
{
}

- (void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (void)dealloc;
- (void)finalize;

@end

@interface NSCachedRGBColor : NSCalibratedRGBColor
{
}

- (void)release;
- (id)retain;
- (unsigned int)retainCount;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (void)dealloc;
- (void)finalize;

@end

@interface NSDeviceRGBColor : NSCalibratedRGBColor
{
}

- (void)drawSwatchInRect:(struct _NSRect)fp8;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (id)colorSpaceName;
- (id)colorSpace;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCalibratedRGBColor : NSColor
{
    float redComponent;
    float greenComponent;
    float blueComponent;
    float alphaComponent;
    struct CGColor *cachedColor;
}

+ (id)newWithCoder:(id)fp8 zone:(struct _NSZone *)fp12;
- (id)initWithHue:(float)fp8 saturation:(float)fp12 brightness:(float)fp16 alpha:(float)fp20;
- (id)initWithRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
- (void)dealloc;
- (void)finalize;
- (float)redComponent;
- (float)greenComponent;
- (float)blueComponent;
- (void)getRed:(float *)fp8 green:(float *)fp12 blue:(float *)fp16 alpha:(float *)fp20;
- (float)hueComponent;
- (float)saturationComponent;
- (float)brightnessComponent;
- (void)getHue:(float *)fp8 saturation:(float *)fp12 brightness:(float *)fp16 alpha:(float *)fp20;
- (float)alphaComponent;
- (int)numberOfComponents;
- (void)getComponents:(float *)fp8;
- (id)colorWithAlphaComponent:(float)fp8;
- (struct CGColor *)_createCGColorWithAlpha:(float)fp8;
- (void)set;
- (void)setFill;
- (void)setStroke;
- (void)_setAsSystemColor;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorSpaceName;
- (id)colorUsingColorSpace:(id)fp8;
- (id)colorSpace;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8 colorSpaceCode:(BOOL)fp12;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSColor : NSObject <NSCopying, NSCoding>
{
}

+ (id)blackColor;
+ (id)darkGrayColor;
+ (id)lightGrayColor;
+ (id)whiteColor;
+ (id)grayColor;
+ (id)clearColor;
+ (id)blackDeviceColor;
+ (id)lightGrayDeviceColor;
+ (id)whiteDeviceColor;
+ (id)grayDeviceColor;
+ (id)_gray221Color;
+ (id)_gray204Color;
+ (id)_defaultSecondaryColor;
+ (id)_gray136Color;
+ (id)redColor;
+ (id)greenColor;
+ (id)blueColor;
+ (id)_darkBlueColor;
+ (id)_whiteRGBColor;
+ (id)_lightGrayRGBColor;
+ (id)_darkGrayRGBColor;
+ (id)_blackRGBColor;
+ (id)cyanColor;
+ (id)yellowColor;
+ (id)magentaColor;
+ (id)orangeColor;
+ (id)purpleColor;
+ (id)brownColor;
+ (id)_lightYellowColor;
+ (id)_defaultKnobColor;
+ (id)_defaultSelectedKnobColor;
+ (id)_lightBlueColor;
+ (id)_defaultSelectionColor;
+ (id)_defaultProgressIndicatorColor;
+ (id)_blueControlTintColor;
+ (id)_graphiteControlTintColor;
+ (id)_clearControlTintColor;
+ (id)_blueAlternatingRowColor;
+ (id)_graphiteAlternatingRowColor;
+ (id)_blueKeyboardFocusColor;
+ (id)_graphiteKeyboardFocusColor;
+ (id)_controlColor;
+ (id)_toolbarBackgroundColor;
+ (id)controlShadowColor;
+ (id)controlDarkShadowColor;
+ (id)controlColor;
+ (id)controlBackgroundColor;
+ (id)controlHighlightColor;
+ (id)controlLightHighlightColor;
+ (id)textColor;
+ (id)textBackgroundColor;
+ (id)controlTextColor;
+ (id)selectedTextColor;
+ (id)selectedTextBackgroundColor;
+ (id)selectedControlTextColor;
+ (id)selectedControlColor;
+ (id)disabledControlTextColor;
+ (id)scrollBarColor;
+ (id)gridColor;
+ (id)toolTipColor;
+ (id)toolTipTextColor;
+ (id)knobColor;
+ (id)selectedKnobColor;
+ (id)highlightColor;
+ (id)shadowColor;
+ (id)windowFrameColor;
+ (id)windowFrameTextColor;
+ (id)selectedMenuItemColor;
+ (id)selectedMenuItemTextColor;
+ (id)keyboardFocusIndicatorColor;
+ (id)progressIndicatorColor;
+ (id)headerColor;
+ (id)headerTextColor;
+ (id)windowBackgroundColor;
+ (id)blueControlTintColor;
+ (id)clearControlTintColor;
+ (id)graphiteControlTintColor;
+ (id)secondarySelectedControlColor;
+ (id)alternateSelectedControlColor;
+ (id)alternateSecondarySelectedControlColor;
+ (id)alternateSelectedControlTextColor;
+ (id)toolbarBackgroundColor;
+ (id)controlAlternatingRowColor;
+ (id)controlAlternatingRowBackgroundColors;
+ (id)highlightedMenuColor;
+ (id)highlightedMenuTextColor;
+ (id)selectedInactiveColor;
+ (id)colorWithCalibratedWhite:(float)fp8 alpha:(float)fp12;
+ (id)colorWithCalibratedHue:(float)fp8 saturation:(float)fp12 brightness:(float)fp16 alpha:(float)fp20;
+ (id)colorWithCalibratedRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
+ (id)colorWithDeviceWhite:(float)fp8 alpha:(float)fp12;
+ (id)colorWithDeviceHue:(float)fp8 saturation:(float)fp12 brightness:(float)fp16 alpha:(float)fp20;
+ (id)colorWithDeviceRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
+ (id)colorWithDeviceCyan:(float)fp8 magenta:(float)fp12 yellow:(float)fp16 black:(float)fp20 alpha:(float)fp24;
+ (id)colorWithCatalogName:(id)fp8 colorName:(id)fp12;
+ (id)_colorForMetal:(struct _NSRect)fp8;
+ (id)colorWithPatternImage:(id)fp8;
+ (id)_colorWithGradientImage:(id)fp8;
+ (id)colorWithColorSpace:(id)fp8 components:(const float *)fp12 count:(int)fp16;
+ (id)colorFromPasteboard:(id)fp8;
+ (id)oldSystemColorWithCoder:(id)fp8;
+ (void)setIgnoresAlpha:(BOOL)fp8;
+ (BOOL)ignoresAlpha;
+ (BOOL)_calibratedColorOK;
+ (id)colorForControlTint:(int)fp8;
+ (int)currentControlTint;
- (id)colorUsingColorSpaceName:(id)fp8 device:(id)fp12;
- (id)colorWithAlphaComponent:(float)fp8;
- (id)colorUsingColorSpaceName:(id)fp8;
- (float)alphaComponent;
- (id)blendedColorWithFraction:(float)fp8 ofColor:(id)fp12;
- (id)_addColor:(id)fp8;
- (id)_subtractColor:(id)fp8;
- (void)writeToPasteboard:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (unsigned int)hash;
- (id)colorUsingColorSpace:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)drawSwatchInRect:(struct _NSRect)fp8;
- (void)_setAsSystemColor;
- (void)set;
- (id)colorSpaceName;
- (id)catalogNameComponent;
- (id)colorNameComponent;
- (id)localizedCatalogNameComponent;
- (id)localizedColorNameComponent;
- (float)redComponent;
- (float)greenComponent;
- (float)blueComponent;
- (void)getRed:(float *)fp8 green:(float *)fp12 blue:(float *)fp16 alpha:(float *)fp20;
- (float)hueComponent;
- (float)saturationComponent;
- (float)brightnessComponent;
- (void)getHue:(float *)fp8 saturation:(float *)fp12 brightness:(float *)fp16 alpha:(float *)fp20;
- (float)whiteComponent;
- (void)getWhite:(float *)fp8 alpha:(float *)fp12;
- (float)cyanComponent;
- (float)magentaComponent;
- (float)yellowComponent;
- (float)blackComponent;
- (void)getCyan:(float *)fp8 magenta:(float *)fp12 yellow:(float *)fp16 black:(float *)fp20 alpha:(float *)fp24;
- (id)patternImage;
- (id)colorSpace;
- (int)numberOfComponents;
- (void)getComponents:(float *)fp8;
- (void)setFill;
- (void)setStroke;
- (id)highlightWithLevel:(float)fp8;
- (id)shadowWithLevel:(float)fp8;

@end

@interface CIColor (NSAppKitAdditions)
- (id)initWithColor:(id)fp8;
@end

@interface NSColor (NSQuartzCoreAdditions)
+ (id)colorWithCIColor:(id)fp8;
@end

@interface NSCoder (NSAppKitColorExtensions)
- (id)decodeNXColor;
@end

@interface NSColor (NSColorAccessibility)
- (id)_accessibilityValue;
@end

@interface NSColorList : NSObject <NSCoding>
{
    NSMutableArray *_keyArray;
    NSMutableArray *_colorArray;
    struct __CFDictionary *_keyToIndexTable;
    NSString *_name;
    NSString *_printerType;
    NSString *_fileName;
    struct _colorListFlags _flags;
    id _clAuxiliaryStorage;
}

+ (void)_loadSystemScreenColorList;
+ (void)initialize;
+ (id)_newWithName:(id)fp8 fromPath:(id)fp12 forDeviceType:(id)fp16;
+ (id)availableColorLists;
+ (id)_colorListNamed:(id)fp8 forDeviceType:(id)fp12;
+ (id)_findColorListNamed:(id)fp8 forDeviceType:(id)fp12;
+ (id)colorListNamed:(id)fp8;
- (id)description;
- (unsigned int)_indexOfKey:(id)fp8;
- (void)_invalidateKeyToIndexTable;
- (id)_initWithName:(id)fp8 fromPath:(id)fp12 forDeviceType:(id)fp16 lazy:(BOOL)fp20;
- (id)initWithName:(id)fp8;
- (id)initWithName:(id)fp8 fromFile:(id)fp12;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (void)removeFile;
- (BOOL)_parseReleaseTwoList:(id)fp8;
- (BOOL)_parseArchivedList:(id)fp8;
- (BOOL)_parsePantoneLikeList:(id)fp8 fileName:(id)fp12;
- (BOOL)_loadColors;
- (BOOL)_rename:(id)fp8 as:(id)fp12;
- (void)setColor:(id)fp8 forKey:(id)fp12;
- (void)insertColor:(id)fp8 key:(id)fp12 atIndex:(unsigned int)fp16;
- (void)_rawAddColor:(id)fp8 key:(id)fp12;
- (void)removeColorWithKey:(id)fp8;
- (id)colorWithKey:(id)fp8;
- (id)_localizedKeyFromBundleStringFileForKey:(id)fp8;
- (id)_localizedNameForColorWithName:(id)fp8;
- (id)_localizedColorListName;
- (id)_localizedColorListCopyrightString;
- (id)allKeys;
- (id)name;
- (BOOL)isEditable;
- (void)_setUpdated:(BOOL)fp8;
- (BOOL)_isUpdated;
- (void)_changed:(id)fp8;
- (BOOL)writeToFile:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;
- (void)_decodeWithoutNameWithCoder:(id)fp8 newStyle:(BOOL)fp12;
- (id)initWithCoder:(id)fp8;
- (void)_encodeWithoutNameWithCoder:(id)fp8 newStyle:(BOOL)fp12;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSColorListAuxiliary : NSObject
{
    NSString *_localizedCopyRightString;
    struct CMNamedColorPageInfoType *_cmPageInfoPtr;
    double _lastEditableCheck;
    NSBundle *_bundleForColorListDirectory;
}

- (id)init;
- (void)dealloc;

@end

@interface NSColorPanelTextController : NSObject
{
    NSColorPanel *_colorPanel;
    NSControl *_textControl;
    NSTimer *_textTimer;
    NSString *_lastEditedStringValue;
    id _delegate;
    BOOL _acceptLastEnteredText;
}

- (id)initWithTextControl:(id)fp8 colorPanel:(id)fp12 delegate:(id)fp16;
- (void)cancel:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)stopTextTimer;
- (void)startTextTimer;
- (void)dealloc;
- (void)finalize;
- (void)_forceSetLastEditedStringValue:(id)fp8;
- (void)setLastEditedStringValue:(id)fp8;
- (void)textTimerFired:(id)fp8;
- (void)fieldEditorTextDidChange:(id)fp8;
- (void)controlTextDidBeginEditing:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;
- (BOOL)control:(id)fp8 didFailToFormatString:(id)fp12 errorDescription:(id)fp16;
- (BOOL)control:(id)fp8 isValidObject:(id)fp12;
- (BOOL)acceptLastEnteredText;

@end

@interface _NSMagnifier : NSObject
{
}

+ (id)sharedMagnifier;
- (void)trackMagnifierForPanel:(id)fp8;

@end

@interface NSColorSwatch : NSView
{
    id colorPanel;
    int mousedColor;
    NSMutableArray *colors;
    int currentHighlight;
    int focusedColor;
    int numRowsToToggleVisible;
    int draggedColorIndex;
}

+ (void)initialize;
- (float)newLegalColorSwatchHeightFromHeight:(float)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (float)heightForNumberOfVisibleRows:(int)fp8;
- (int)numberOfVisibleRows;
- (int)numberOfVisibleCols;
- (void)setNumRowsToToggleVisible:(int)fp8;
- (void)markNumRowsToToggleVisible;
- (int)numRowsToToggleVisible;
- (void)_constrainColorIndexToVisibleBounds:(int *)fp8 dirtyIfNeeded:(BOOL)fp12;
- (id)_reallocColors:(int)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (struct _NSRect)rectOfSwatchInteriorAtIndex:(int)fp8;
- (struct _NSRect)focusedSwatchRect;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct _NSRect)fp8;
- (void)moveInDirection:(struct _NSPoint)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)performClick:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)drawColor:(int)fp8;
- (void)setFocusedColorChipIndex:(int)fp8;
- (id)highlightColor:(int)fp8;
- (float)swatchWidth;
- (void)saveNumVisibleRows;
- (BOOL)getSavedNumVisibleRows:(int *)fp8;
- (void)_old_writeColorsToGlobalPreferences;
- (void)_old_readColorsFromGlobalPreferences;
- (void)_writeColorsToLibrary;
- (BOOL)_readColorsFromLibrary;
- (void)writeColors;
- (void)readColors;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)postColorSwatchesChangedDistributedNotification;
- (BOOL)performDragOperation:(id)fp8;
- (void)_delayedWriteColors;
- (id)color;
- (void)mouseDown:(id)fp8;
- (id)storeColorPanel:(id)fp8;
- (id)_delayedUpdateSwatch:(id)fp8;
- (void)updateSwatch;
- (void)dealloc;

@end

@interface NSColorPanel : NSPanel
{
    id _colorSwatch;
    id _reserved1;
    id _colorWell;
    NSMutableArray *_pickersWithLoadedViews;
    id _magnifyButton;
    id _middleView;
    id _opacitySlider;
    id _opacityText;
    id _opacityView;
    id _modalButtons;
    id _pickerView;
    id _customViewsList;
    id _customPickerList;
    id _currViewObject;
    id _boxAboveSwatch;
    id _target;
    id _accessoryView;
    SEL _action;
    struct _NSSize _minColorPanelSize;
    struct _NSSize _maxColorPanelSize;
    struct _NSSize _reserved2;
    struct _NSSize _reserved3;
    id _resizeDimple;
    BOOL _reserved5;
    BOOL _reserved6;
    BOOL _handlingOpacityMoveAction;
    BOOL _ignoreConstraints;
    BOOL _continuous;
    BOOL _allowColorSetting;
    BOOL _stillInitializing;
    id _opacityTextController;
}

+ (id)sharedColorPanel;
+ (BOOL)sharedColorPanelExists;
+ (void)setPickerMask:(int)fp8;
+ (void)setPickerMode:(int)fp8;
+ (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
+ (BOOL)ignoreModifierKeysWhileDragging;
+ (BOOL)dragColor:(id)fp8 withEvent:(id)fp12 fromView:(id)fp16;
+ (BOOL)dragColor:(id)fp8 withEvent:(id)fp12 inView:(id)fp16;
+ (void)_setBundle:(id)fp8 forClassPresentInAppKit:(Class)fp12;
+ (id)_bundleForClassPresentInAppKit:(Class)fp8;
- (id)__target;
- (SEL)__action;
- (int)__numberOfVisibleRowsInColorSwatch;
- (int)__numberOfRowsToToggleVisibleInColorSwatch;
- (void)__setNumberOfRowsToToggleVisibleInColorSwatch:(int)fp8;
- (id)__swatchColors;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (void)setHidesOnDeactivate:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)worksWhenModal;
- (void)_setTitleFixedPointWindowFrame:(struct _NSSize)fp8 display:(BOOL)fp16 animate:(BOOL)fp20;
- (void)changeWindowFrameSizeByDelta:(struct _NSSize)fp8 display:(BOOL)fp16 animate:(BOOL)fp20;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (void)_selectFirstKeyView;
- (id)_keyViewPrecedingPickerViews;
- (id)_keyViewFollowingPickerViews;
- (id)_keyViewPrecedingAccesoryView;
- (id)_keyViewFollowingAccessoryView;
- (id)_keyViewFollowingOpacityViews;
- (id)_keyViewPrecedingModalButtons;
- (id)_keyViewFollowingModalButtons;
- (void)colorSwathesChangedInAnotherApplicationNotification:(id)fp8;
- (void)applicationDidBecomeActive:(id)fp8;
- (void)_forceUpdateDimpleLocation;
- (void)setViewOfPickerIsLoaded:(id)fp8;
- (BOOL)isViewOfPickerLoaded:(id)fp8;
- (void)setAction:(SEL)fp8;
- (void)setTarget:(id)fp8;
- (void)_validateOpacitySlider;
- (void)_storeNewColorInColorWell:(id)fp8;
- (int)colorMask;
- (id)setColorMask:(int)fp8;
- (id)accessoryView;
- (void)setAccessoryView:(id)fp8;
- (void)setContinuous:(BOOL)fp8;
- (BOOL)isContinuous;
- (void)setMode:(int)fp8;
- (int)mode;
- (id)_provideNewViewFor:(id)fp8 initialViewRequest:(BOOL)fp12;
- (void)_resetOpacity:(id)fp8 andForceSetColor:(BOOL)fp12;
- (id)_resetOpacity:(id)fp8;
- (void)_changeMinColorPanelSizeByDelta:(struct _NSSize)fp8 compareWithOldMinSize:(BOOL)fp16 oldMinSize:(struct _NSSize)fp20 setWindowFrame:(BOOL)fp28;
- (void)_changeMinColorPanelSizeByDelta:(struct _NSSize)fp8 setWindowFrame:(BOOL)fp16;
- (void)_setUseModalAppearance:(BOOL)fp8;
- (void)_setUtilityWindow:(BOOL)fp8;
- (struct _NSRect)_adjustedFrameFromDefaults:(struct _NSRect)fp8;
- (struct _NSRect)_adjustedFrameForSaving:(struct _NSRect)fp8;
- (void)_stopModal:(id)fp8;
- (void)_cancelKey:(id)fp8;
- (void)_setShowAlpha:(BOOL)fp8 andForce:(BOOL)fp12;
- (void)_timedAdjustTextControl:(id)fp8;
- (void)setShowsAlpha:(BOOL)fp8;
- (BOOL)showsAlpha;
- (id)_loadPickerBundlesIn:(id)fp8 expectLibraryLayout:(BOOL)fp12;
- (id)_initWithPickers:(int)fp8;
- (id)_colorPickers;
- (void)_appendColorPicker:(id)fp8;
- (void)_setupButtonImageAndToolTips;
- (int)_savedMode;
- (void)_endLiveResize;
- (id)_pinViews:(id)fp8 resizeFlagsToLeaveAlone:(int)fp12;
- (void)_unpinViews:(id)fp8 resizeMasks:(id)fp12;
- (id)_arrayForPartialPinningFromArray:(id)fp8;
- (void)_dimpleDragStarted:(id)fp8 event:(id)fp12;
- (void)_setNumVisibleSwatchRows:(int)fp8;
- (void)_syncSwatchSizeToSavedNumVisibleRows;
- (void)_dimpleDoubleClicked:(id)fp8 event:(id)fp12;
- (struct _NSSize)_newLegalSizeFromSize:(struct _NSSize)fp8 force:(BOOL)fp16 roundDirection:(int)fp20;
- (void)_saveMode;
- (void)_switchViewForToolbarItem:(id)fp8;
- (struct _NSSize)_panelSizeExcludingToolbar;
- (void)_setMinPickerContentSize:(struct _NSSize)fp8;
- (void)_sizeWindowForPicker:(id)fp8;
- (void)_switchToPicker:(id)fp8;
- (void)_magnify:(id)fp8;
- (id)color;
- (float)alpha;
- (void)attachColorList:(id)fp8;
- (void)detachColorList:(id)fp8;
- (void)_forceSendAction:(BOOL)fp8 notification:(BOOL)fp12 firstResponder:(BOOL)fp16;
- (void)_sendActionAndNotification;
- (void)setColor:(id)fp8;
- (void)_switchToAppropriateModeForColorIfNecessary:(id)fp8;
- (void)_forceSetColor:(id)fp8;
- (void)_set:(id)fp8;
- (void)_colorWellAcceptedColor:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8 display:(BOOL)fp24;
- (void)_reallyDoOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16 forCounter:(BOOL)fp20 force:(BOOL)fp24 isModal:(BOOL)fp28;
- (struct _NSSize)windowWillResize:(id)fp8 toSize:(struct _NSSize)fp12;
- (void)_middleViewFrameChanged:(id)fp8;

@end

@interface _NSColorPanelToolbar : NSToolbar
{
    NSColorPanel *colorPanel;
    BOOL _isMoving;
    BOOL _refusesToBeShown;
}

+ (void)attachToolbarToColorPanel:(id)fp8;
- (id)initWithIdentifier:(id)fp8 forColorPanel:(id)fp12;
- (void)dealloc;
- (void)setVisible:(BOOL)fp8;
- (void)setRefusesToBeShown:(BOOL)fp8;
- (BOOL)refusesToBeShown;
- (id)itemIdentifierForColorPicker:(id)fp8;
- (void)colorPanelDidSelectColorPicker:(id)fp8;
- (void)setDisplayMode:(int)fp8;
- (void)setSizeMode:(int)fp8;
- (int)sizeMode;
- (int)displayMode;
- (BOOL)_isMoving;
- (id)configurationDictionary;
- (id)_labelForColorPicker:(id)fp8;
- (id)_imageForColorPicker:(id)fp8;
- (id)_tooltipForColorPicker:(id)fp8;
- (id)_itemIdentifiersForColorPickers:(id)fp8;
- (id)_colorPickerWithIdentifier:(id)fp8;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (id)toolbarSelectableItemIdentifiers:(id)fp8;
- (void)syncWithRemoteToolbars;

@end

@interface _NSColorPanelToolbarItem : NSToolbarItem
{
    id representedObject;
}

- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSColorPanelColorWell : NSColorWell
{
    BOOL _disabledAsColorDestination;
    BOOL _actsLikeButton;
}

- (void)registerForDraggedTypes:(id)fp8;
- (void)setAcceptsColorDrops:(BOOL)fp8;
- (void)setActsLikeButton:(BOOL)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (void)performClick:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (struct _NSRect)_colorRect;
- (void)drawWellInside:(struct _NSRect)fp8;
- (void)_drawBorderInRect:(struct _NSRect)fp8;
- (void)setColor:(id)fp8;

@end

@interface NSColorPanelResizeDimple : NSView
{
    NSView *attachedToView;
}

- (void)mouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)resetCursorRects;
- (id)grabberImage;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (void)positionRelativeToAttachedView;
- (void)attachedViewFrameDidChange:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)awakeFromNib;
- (BOOL)acceptsFirstMouse:(id)fp8;

@end

@interface NSApplication (NSColorPanel)
- (void)orderFrontColorPanel:(id)fp8;
@end

@interface NSPanelController : NSObject
{
    id alertPanel;
    id iconView;
    id okButton;
    id form;
    id target;
    SEL action;
    BOOL gotString;
    NSString *textFieldStringValue;
}

- (void)_setTextFieldStringValue:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)showPanel:(id)fp8 andNotify:(id)fp12 with:(SEL)fp16;
- (BOOL)gotString;
- (id)stringValue;
- (void)cancel:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)ok:(id)fp8;
- (void)controlTextDidChange:(id)fp8;

@end

@interface NSColorPicker : NSObject <NSColorPickingDefault>
{
    id _imageObject;
    NSColorPanel *_colorPanel;
    NSString *_buttonToolTip;
}

- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (id)colorPanel;
- (void)dealloc;
- (id)provideNewButtonImage;
- (void)_setButtonToolTip:(id)fp8;
- (id)_buttonToolTip;
- (id)_buttonImageToolTip;
- (void)insertNewButtonImage:(id)fp8 in:(id)fp12;
- (struct _NSSize)minPickerContentSize;
- (void)viewSizeChanged:(id)fp8;
- (void)alphaControlAddedOrRemoved:(id)fp8;
- (float)_insertionOrder;
- (void)attachColorList:(id)fp8;
- (void)detachColorList:(id)fp8;
- (void)setMode:(int)fp8;
- (id)_getTiffImage:(id)fp8 ownedBy:(id)fp12;
- (id)_getTiffImage:(id)fp8 ownedBy:(id)fp12 asImageRep:(BOOL)fp16;

@end

@interface NSColorPickerCrayon : NSColorPicker <NSColorPickingCustom>
{
    id crayonView;
    id colorTextField;
}

- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (void)changeColor:(id)fp8;
- (void)changeDisplayedColorName:(id)fp8;
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (id)provideNewView:(BOOL)fp8;
- (struct _NSSize)minPickerContentSize;
- (id)_buttonImageToolTip;
- (void)setColor:(id)fp8;

@end

@interface NSColorPickerCrayonView : NSView
{
    NSColorList *_colorList;
    NSMutableArray *_crayonRows;
    NSCrayon *_selectedCrayon;
    NSColorPickerCrayon *_controllingPicker;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)finalize;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_windowChangedKeyState;
- (id)color;
- (id)localizedColorNameComponent;
- (void)setColor:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;

@end

@interface NSColorPickerCrayonView (NSKeyboardUI)
- (void)keyDown:(id)fp8;
- (void)insertTab:(id)fp8;
- (void)insertBacktab:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveUp:(id)fp8;
@end

@interface NSColorPickerCrayonView (NSInternal)
+ (id)_crayonMaskImage;
- (id)_colorList;
- (id)_crayons;
- (struct _NSSize)_requiredMinSize;
- (id)_crayonRowAboveRow:(id)fp8;
- (id)_crayonRowBelowRow:(id)fp8;
- (id)_crayonWithColor:(id)fp8;
- (id)_nearestCrayonUnderViewPoint:(struct _NSPoint)fp8 inRow:(id)fp16;
- (id)_nearestCrayonUnderViewPoint:(struct _NSPoint)fp8;
- (float)_opacityAtPoint:(struct _NSPoint)fp8 inBitmapImageRep:(id)fp16;
- (void)_selectCrayon:(id)fp8 updateSelection:(BOOL)fp12;
- (id)_selectedCrayon;
- (id)_focusedCrayon;
- (void)_setColorList:(id)fp8;
- (BOOL)_hasFocusRing;
- (BOOL)_shouldShowFocusRing;
- (void)_updateCrayonsFromColorList;
- (void)_updateFocusRing;
- (void)_forceUpdateFocusRing;
@end

@interface NSCrayon (NSCrayonAccessibility)
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSColorPickerCrayonView (NSColorPickerCrayonViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
@end

@interface NSColorPickerColorSpacePopUp : NSPopUpButton
{
}

- (void)_commonInitNSColorPickerColorSpacePopUp;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)willPopUpNotification:(id)fp8;
- (void)doneSendingPopUpAction:(id)fp8;
- (void)colorPanelColorDidChange:(id)fp8;
- (BOOL)_isShowingKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct _NSRect)fp8;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (id)selectedColorSpace;

@end

@interface NSHSBSliders : NSColorSpaceSliders
{
    id hueSlider;
    id saturationSlider;
    id brightnessSlider;
    id hueText;
    id saturationText;
    id brightnessText;
    id hsbView;
    NSColor *currColor;
    NSColor *backgroundColor;
    id sliderMatrix;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)fp8;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
- (struct _NSSize)requiredMinSize;
- (void)viewSizeChanged:(id)fp8;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;

@end

@interface NSCMYKSliders : NSColorSpaceSliders
{
    id cyanSlider;
    id yellowSlider;
    id magentaSlider;
    id blackSlider;
    id cyanText;
    id yellowText;
    id magentaText;
    id blackText;
    id cmykView;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)fp8;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
- (struct _NSSize)requiredMinSize;
- (void)viewSizeChanged:(id)fp8;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;

@end

@interface NSRGBSliders : NSColorSpaceSliders
{
    id redSlider;
    id greenSlider;
    id blueSlider;
    id rgbView;
    id redText;
    id greenText;
    id blueText;
    id rgbText;
}

+ (id)genericColorSpace;
- (id)provideNewSubview:(id)fp8;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
- (struct _NSSize)requiredMinSize;
- (void)viewSizeChanged:(id)fp8;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;

@end

@interface NSGreySliders : NSColorSpaceSliders
{
    id greySlider;
    id greyText;
    id greyView;
    id greyViewInside;
    id greyButtons[5];
    id opacityButtons;
    float opacityDistanceFromBottom;
    BOOL alphaButtonsAreHidden;
}

+ (id)genericColorSpace;
- (void)_configureGreyButton:(id)fp8 index:(int)fp12;
- (void)setGreyButton0:(id)fp8;
- (void)setGreyButton1:(id)fp8;
- (void)setGreyButton2:(id)fp8;
- (void)setGreyButton3:(id)fp8;
- (void)setGreyButton4:(id)fp8;
- (void)setGreyButton5:(id)fp8;
- (id)provideNewSubview:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)fieldEditableControl;
- (void)setMatchedColor:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
- (struct _NSSize)requiredMinSize;
- (void)viewSizeChanged:(id)fp8;
- (void)greySliderFrameChangedNotification:(id)fp8;
- (void)jumpSlider:(id)fp8;
- (BOOL)worksWhenModal;
- (void)adjustControls:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;
- (void)alphaControlAddedOrRemoved:(id)fp8;

@end

@interface NSColorSpaceSliders : NSObject <NSSliderViewRequiredMethods>
{
    id colorPanel;
    id controllingPicker;
    NSColorPanelTextController *textController;
    NSColorSpace *activeColorSpace;
}

+ (id)genericColorSpace;
- (id)fieldEditableControl;
- (id)provideNewSubview:(id)fp8;
- (void)setMatchedColor:(id)fp8;
- (id)regularColorIfPossible:(id)fp8;
- (void)setColor:(id)fp8;
- (void)viewSizeChanged:(id)fp8;
- (id)_adjustControls:(id)fp8 andSetColor:(BOOL)fp12;
- (void)adjustControls:(id)fp8;
- (void)finishProvideNewSubviewSetup;
- (void)setActiveColorSpace:(id)fp8;
- (id)activeColorSpace;
- (void)takeColorSpaceFrom:(id)fp8;
- (void)dealloc;
- (void)_timedAdjustTextControl:(id)fp8;
- (struct _NSSize)requiredMinSize;

@end

@interface NSColorPickerSliders : NSColorPicker <NSColorPickingCustom>
{
    id sliderModePopUp;
    id slidersView;
    id greySliders;
    id rgbSliders;
    id hsbSliders;
    id cmykSliders;
    id currViewObject;
    id sliderContainer;
    id colorProfileButton;
    int modeMask;
}

- (BOOL)worksWhenModal;
- (void)_selectPopUpWithTag:(int)fp8;
- (void)_removePopUpWithTag:(int)fp8;
- (void)showGreyScaleView:(id)fp8;
- (void)showRGBView:(id)fp8;
- (void)showCMYKView:(id)fp8;
- (void)showHSBView:(id)fp8;
- (void)takeColorSpaceFrom:(id)fp8;
- (struct _NSSize)requiredMinSizeFor:(id)fp8;
- (struct _NSSize)minPickerContentSize;
- (id)replaceSubviewWith:(id)fp8;
- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (void)_setupProfileUI;
- (id)_adjustToMode;
- (id)provideNewView:(BOOL)fp8;
- (float)_insertionOrder;
- (id)_buttonImageToolTip;
- (void)alphaControlAddedOrRemoved:(id)fp8;
- (void)forceSetMode:(int)fp8;
- (void)setMode:(int)fp8;
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (void)setColor:(id)fp8;
- (void)viewSizeChanged:(id)fp8;
- (id)_saveMode;
- (int)_savedMode;
- (id)_restoreMode;

@end

@interface NSColorPickerUser : NSColorPicker <NSColorPickingCustom>
{
    id userPickerView;
    id tiffView;
    id reserved1;
    id renamePanelController;
    NSPopUpButton *palettePopUpButton;
    id reserved2;
    id optionsPopUp;
    BOOL bScaleOrNot;
    NSMutableDictionary *imageDictionary;
    id paste;
    id renameField;
    id defaultTiffImage;
    id removeField;
    NSString *currImageName;
}

- (id)_imageFromItemTitle:(id)fp8;
- (void)_setCurrImageName:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)setPalettePopUp:(id)fp8;
- (id)setOptionsPopUp:(id)fp8;
- (id)_shortNameFor:(id)fp8;
- (BOOL)saveImageNamed:(id)fp8 andShowWarnings:(BOOL)fp12;
- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (id)provideNewView:(BOOL)fp8;
- (BOOL)pasteItemUpdate:(id)fp8;
- (float)_insertionOrder;
- (id)_buttonImageToolTip;
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (void)setColor:(id)fp8;
- (id)_saveMode;
- (id)_restoreMode;
- (BOOL)worksWhenModal;
- (id)_switchImage:(id)fp8 andUpdateColor:(BOOL)fp12;
- (id)switchImage:(id)fp8;
- (id)_newImageName:(id)fp8;
- (id)_addImage:(id)fp8 named:(id)fp12;
- (id)_open:(id)fp8 fromImage:(id)fp12 withName:(id)fp16;
- (id)_open:(id)fp8;
- (id)open:(id)fp8;
- (id)_popUpButton;
- (id)validateRename;
- (id)_rename:(id)fp8;
- (id)rename:(id)fp8;
- (void)copy:(id)fp8;
- (void)paste:(id)fp8;
- (BOOL)_removeOrRename:(id)fp8;
- (id)_remove:(id)fp8;
- (id)remove:(id)fp8;

@end

@interface NSColorPickerUserView : NSView
{
    id currImage;
    struct _NSPoint currentPt;
    id colorPanel;
    id controllingPicker;
    NSImage *_imageForLockFocusUse;
}

- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct _NSRect)fp8;
- (void)moveCurrentPointInDirection:(struct _NSPoint)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)storeColorPanel:(id)fp8;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)_createImageForLockFocusUseIfNecessary;
- (void)_clearImageForLockFocusUse;
- (id)_getColorFromImageAtPoint:(struct _NSPoint)fp8;
- (void)setImage:(id)fp8;
- (id)_resizeImage;
- (void)drawRect:(struct _NSRect)fp8;
- (id)colorFromPoint:(struct _NSPoint)fp8;
- (id)color;
- (BOOL)_pointInPicker:(struct _NSPoint *)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (void)registerForFilenameDragTypes;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)dealloc;

@end

@interface NSColorPickerWheel : NSColorPicker <NSColorPickingCustom>
{
    id wheelView;
    id boxWheelView;
    id brightnessSlider;
    BOOL previouslyTracking;
}

- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (id)provideNewView:(BOOL)fp8;
- (void)viewSizeChanged:(id)fp8;
- (float)_insertionOrder;
- (id)_buttonImageToolTip;
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (void)setColor:(id)fp8;
- (BOOL)worksWhenModal;
- (id)brightnessSlider:(id)fp8;

@end

@interface NSColorPickerWheelView : NSView
{
    id displayWheelImage;
    struct _NSPoint currentPt;
    BOOL tracking;
    id colorPanel;
    id controllingPicker;
    float brightness;
}

- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)_isShowingKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setKeyboardFocusRingNeedsDisplayIfNeededInRect:(struct _NSRect)fp8;
- (void)moveCurrentPointInDirection:(struct _NSPoint)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (id)storeColorPanel:(id)fp8;
- (void)setColor:(id)fp8;
- (id)color;
- (id)brightColor;
- (BOOL)isTracking;
- (id)setBrightness:(float)fp8;
- (id)_compositeImage;
- (BOOL)_pointInPicker:(struct _NSPoint *)fp8;
- (struct _NSPoint)_pointFromColor:(id)fp8;
- (void)viewSizeChanged:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (id)_resizeView;
- (void)drawRect:(struct _NSRect)fp8;
- (id)_brightColorFromPoint:(struct _NSPoint)fp8 fullBrightness:(BOOL)fp16;
- (id)_colorFromPoint:(struct _NSPoint)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;

@end

@interface NSColorScaleSliderCell : NSSliderCell
{
    int _scaleType;
    NSBitmapImageRep *_scaleBitmap;
    BOOL _scaleBitmapValid;
    NSColor *_scaleColor;
}

- (BOOL)_usesCustomTrackImage;
- (void)_computeColorScaleIfNecessaryWithSize:(struct _NSSize)fp8;
- (void)_drawCustomTrackWithTrackRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setDrawsTrackAsColorScaleType:(int)fp8;
- (void)setColor:(id)fp8;

@end

@interface NSColorScaleSlider : NSSlider
{
}

+ (void)initialize;
- (void)setDrawsTrackAsColorScaleType:(int)fp8;
- (void)setColor:(id)fp8;

@end

@interface NSColorWell : NSControl
{
    NSColor *_color;
    id _target;
    SEL _action;
    struct __cwFlags _cwFlags;
}

+ (void)initialize;
+ (void)colorPanelColorChanged:(id)fp8;
+ (void)_delayedDeactiveWindowlessWell:(id)fp8;
- (id)_takeColorFrom:(id)fp8 andSendAction:(BOOL)fp12;
- (id)_takeColorFromAndSendActionIfContinuous:(id)fp8;
- (id)_takeColorFromDoAction:(id)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (void)_colorWellCommonAwake;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)drawColor;
- (void)drawWellInside:(struct _NSRect)fp8;
- (BOOL)_hasKeyboardFocus;
- (void)_windowChangedKeyState;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)_drawBorderInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)deactivate;
- (void)takeColorFrom:(id)fp8;
- (BOOL)isActive;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)fp8;
- (void)activate:(BOOL)fp8;
- (BOOL)acceptsFirstResponder;
- (void)_performActivationClickWithShiftDown:(BOOL)fp8;
- (void)performClick:(id)fp8;
- (void)altModifySelection:(id)fp8;
- (void)shiftModifySelection:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)acceptColor:(id)fp8 atPoint:(struct _NSPoint)fp12;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (id)color;
- (void)setColor:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)mouseDown:(id)fp8;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSColorWell:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)isOpaque;

@end

@interface NSColorWell (NSColorWellAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityRoleAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSComboBox : NSTextField
{
    id _dataSource;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)hasVerticalScroller;
- (void)setHasVerticalScroller:(BOOL)fp8;
- (struct _NSSize)intercellSpacing;
- (void)setIntercellSpacing:(struct _NSSize)fp8;
- (float)itemHeight;
- (void)setItemHeight:(float)fp8;
- (int)numberOfVisibleItems;
- (void)setNumberOfVisibleItems:(int)fp8;
- (void)setButtonBordered:(BOOL)fp8;
- (BOOL)isButtonBordered;
- (BOOL)completes;
- (void)setCompletes:(BOOL)fp8;
- (id)dataSource;
- (void)setDataSource:(id)fp8;
- (void)setUsesDataSource:(BOOL)fp8;
- (BOOL)usesDataSource;
- (void)setDelegate:(id)fp8;
- (void)reloadData;
- (void)noteNumberOfItemsChanged;
- (void)scrollItemAtIndexToTop:(int)fp8;
- (void)scrollItemAtIndexToVisible:(int)fp8;
- (void)selectItemAtIndex:(int)fp8;
- (void)deselectItemAtIndex:(int)fp8;
- (int)indexOfSelectedItem;
- (int)numberOfItems;
- (void)addItemWithObjectValue:(id)fp8;
- (void)addItemsWithObjectValues:(id)fp8;
- (void)insertItemWithObjectValue:(id)fp8 atIndex:(int)fp12;
- (void)removeItemWithObjectValue:(id)fp8;
- (void)removeItemAtIndex:(int)fp8;
- (void)removeAllItems;
- (void)selectItemWithObjectValue:(id)fp8;
- (id)itemObjectValueAtIndex:(int)fp8;
- (id)objectValueOfSelectedItem;
- (int)indexOfItemWithObjectValue:(id)fp8;
- (id)objectValues;
- (void)mouseDown:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)mouseDownCanMoveWindow;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSComboBox (NSComboBoxCellNotifications)
- (void)comboBoxCellSelectionDidChange:(id)fp8;
- (void)comboBoxCellSelectionIsChanging:(id)fp8;
- (void)comboBoxCellWillPopUp:(id)fp8;
- (void)comboBoxCellWillDismiss:(id)fp8;
@end

@interface NSComboBox (NSComboBoxCellDataSource)
- (int)numberOfItemsInComboBoxCell:(id)fp8;
- (id)comboBoxCell:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (unsigned int)comboBoxCell:(id)fp8 indexOfItemWithStringValue:(id)fp12;
- (id)comboBoxCell:(id)fp8 completedString:(id)fp12;
@end

@interface NSComboBoxCell : NSTextFieldCell
{
    id _delegate;
    id _dataSource;
    struct __cbcFlags _cbcFlags;
    NSButtonCell *_buttonCell;
    NSTableView *_tableView;
    NSScrollView *_scrollView;
    NSWindow *_popUp;
    NSMutableArray *_popUpList;
    struct _NSRect *_cellFrame;
    void *_reserved;
}

+ (void)initialize;
- (void)tableViewAction:(id)fp8;
- (void)initPopUpWindow;
- (void)_initializeButtonCell;
- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_clearCellFrame;
- (void)_setCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)_cellFrame;
- (void)setControlSize:(int)fp8;
- (float)_buttonWidth;
- (float)_buttonHeight;
- (struct _NSRect)_focusRingFrameForFrame:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)setHasVerticalScroller:(BOOL)fp8;
- (BOOL)hasVerticalScroller;
- (void)setIntercellSpacing:(struct _NSSize)fp8;
- (struct _NSSize)intercellSpacing;
- (void)setItemHeight:(float)fp8;
- (void)setButtonBordered:(BOOL)fp8;
- (void)_setButtonBordered:(BOOL)fp8;
- (BOOL)isButtonBordered;
- (BOOL)_isButtonBordered;
- (float)itemHeight;
- (void)setNumberOfVisibleItems:(int)fp8;
- (int)numberOfVisibleItems;
- (BOOL)isOpaque;
- (void)setUsesDataSource:(BOOL)fp8;
- (BOOL)usesDataSource;
- (void)setDataSource:(id)fp8;
- (void)_setDataSource:(id)fp8;
- (id)dataSource;
- (void)reloadData;
- (void)selectItemAtIndex:(int)fp8;
- (void)deselectItemAtIndex:(int)fp8;
- (int)indexOfSelectedItem;
- (int)numberOfItems;
- (void)noteNumberOfItemsChanged;
- (void)addItemWithObjectValue:(id)fp8;
- (void)addItemsWithObjectValues:(id)fp8;
- (void)insertItemWithObjectValue:(id)fp8 atIndex:(int)fp12;
- (void)removeItemWithObjectValue:(id)fp8;
- (void)removeItemAtIndex:(int)fp8;
- (void)removeAllItems;
- (void)selectItemWithObjectValue:(id)fp8;
- (id)itemObjectValueAtIndex:(int)fp8;
- (id)objectValueOfSelectedItem;
- (int)indexOfItemWithObjectValue:(id)fp8;
- (id)objectValues;
- (void)setEnabled:(BOOL)fp8;
- (void)setFont:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (struct _NSRect)boundsForTextCell:(struct _NSRect)fp8;
- (struct _NSRect)boundsForButtonCell:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)_computeBezelRectWithTextCellFrame:(struct _NSRect)fp8 inView:(id)fp24 topLeft:(struct _NSRect *)fp28 bottomLeft:(struct _NSRect *)fp32 left:(struct _NSRect *)fp36 right:(struct _NSRect *)fp40 top:(struct _NSRect *)fp44 bottom:(struct _NSRect *)fp48;
- (void)_drawThemeComboBoxButtonWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setControlView:(id)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)shouldEdit:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)resetCursorRect:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)_shouldRegisterForEditingNotifications;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (void)_appWillTerminate:(id)fp8;
- (void)_windowWillOrderOut:(id)fp8;
- (void)filterEvents:(id)fp8;
- (void)dismissPopUp:(id)fp8;
- (void)orderOutPopUpWindow:(id)fp8;
- (void)popUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (BOOL)_controlView:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)scrollItemAtIndexToTop:(int)fp8;
- (void)scrollItemAtIndexToVisible:(int)fp8;
- (void)synchronizeTableViewSelectionWithStringValue:(id)fp8;
- (void)synchronizeTableViewSelectionWithText:(id)fp8;
- (void)comboBoxTextDidEndEditing:(id)fp8;
- (id)completedString:(id)fp8;
- (void)_updateLengthAndSelectedRange:(id)fp8;
- (void)_noteLengthAndSelectedRange:(id)fp8;
- (void)_registerForCompletion:(id)fp8;
- (void)_unregisterForCompletion:(id)fp8;
- (void)endEditing:(id)fp8;
- (void)_completeNoRecursion:(id)fp8;
- (void)_complete:(id)fp8;
- (BOOL)completes;
- (void)setCompletes:(BOOL)fp8;
- (void)_old_encodeWithCoder_NSComboBoxCell:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSComboBoxCell:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setFormatter:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)_needRedrawOnWindowChangedKeyState;

@end

@interface NSComboBoxWindow : NSWindow
{
    NSComboBoxCell *_comboBoxCell;
    NSWindow *_attachedToParent;
}

- (id)initWithContentRect:(struct _NSRect)fp8 comboBoxCell:(id)fp24;
- (void)dealloc;
- (void)finalize;
- (BOOL)worksWhenModal;
- (BOOL)isKeyWindow;
- (void)setShownAboveComboBox:(BOOL)fp8;
- (BOOL)hasShadow;
- (void)_commonAwake;
- (void)_attachToParentWindow;
- (void)_detachFromParentWindow;
- (void)orderFront:(id)fp8;
- (void)orderWindow:(int)fp8 relativeTo:(int)fp12;
- (void)makeKeyAndOrderFront:(id)fp8;
- (void)orderOut:(id)fp8;

@end

@interface NSComboTableView : NSTableView
{
}

- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;

@end

@interface NSComboBoxButtonCell : NSButtonCell
{
}

@end

@interface NSMutableArray (NSComboBoxCellDataSource)
- (int)numberOfItemsInComboBoxCell:(id)fp8;
- (id)comboBoxCell:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (unsigned int)comboBoxCell:(id)fp8 indexOfItemWithStringValue:(id)fp12;
@end

@interface NSComboBoxCell (NSTableViewNotifications)
- (void)tableViewSelectionIsChanging:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
@end

@interface NSComboBoxCell (NSTableDataSource)
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
@end

@interface NSComboBoxWindow (NSComboBoxWindowAccessibility)
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityIsChildOfApp;
- (id)accessibilityParentAttribute;
@end

@interface NSComboBoxButtonCell (NSComboBoxButtonCellAccessibility)
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSComboBoxCell (NSComboBoxCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityExpandedAttribute;
- (BOOL)accessibilityIsExpandedAttributeSettable;
- (void)accessibilitySetExpandedAttribute:(id)fp8;
- (id)_accessibilityButtonUIElement;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (struct _NSRect)_accessibilityButtonRect;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSATSGlyphGenerator : NSGlyphGenerator
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)sharedGlyphGenerator;

@end

@interface NSConcreteGlyphGenerator : NSGlyphGenerator
{
    char *bidiTypes;
    char *bidiLevels;
}

+ (id)sharedGlyphGenerator;
- (void)generateGlyphsForGlyphStorage:(id)fp8 desiredNumberOfCharacters:(unsigned int)fp12 glyphIndex:(unsigned int *)fp16 characterIndex:(unsigned int *)fp20;

@end

@interface NSControl : NSView
{
    int _tag;
    id _cell;
    struct __conFlags _conFlags;
}

+ (void)initialize;
+ (void)setCellClass:(Class)fp8;
+ (Class)cellClass;
+ (int)defaultFocusRingType;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)isOpaque;
- (BOOL)mouseDownCanMoveWindow;
- (void)sizeToFit;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)calcSize;
- (id)cell;
- (void)setCell:(id)fp8;
- (id)selectedCell;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (int)tag;
- (void)setTag:(int)fp8;
- (int)selectedTag;
- (void)setIgnoresMultiClick:(BOOL)fp8;
- (BOOL)ignoresMultiClick;
- (int)mouseDownFlags;
- (int)sendActionOn:(int)fp8;
- (BOOL)isContinuous;
- (void)setContinuous:(BOOL)fp8;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;
- (void)setFloatingPointFormat:(BOOL)fp8 left:(unsigned int)fp12 right:(unsigned int)fp16;
- (int)alignment;
- (void)setAlignment:(int)fp8;
- (id)font;
- (void)setFont:(id)fp8;
- (void)setFormatter:(id)fp8;
- (id)formatter;
- (void)setStringValue:(id)fp8;
- (void)setIntValue:(int)fp8;
- (void)setAttributedStringValue:(id)fp8;
- (void)setFloatValue:(float)fp8;
- (void)setDoubleValue:(double)fp8;
- (void)setObjectValue:(id)fp8;
- (id)stringValue;
- (id)attributedStringValue;
- (int)intValue;
- (float)floatValue;
- (double)doubleValue;
- (id)objectValue;
- (void)setNeedsDisplay;
- (void)updateCell:(id)fp8;
- (void)_updateCellImage:(id)fp8;
- (void)updateCellInside:(id)fp8;
- (void)drawCellInside:(id)fp8;
- (void)drawCell:(id)fp8;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)fp8;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)setFocusRingType:(int)fp8;
- (int)focusRingType;
- (BOOL)_hasEditableCell;
- (void)selectCell:(id)fp8;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;
- (BOOL)_resetIncrementalSearchOnFailure;
- (id)_stringSearchParametersForListingViews;
- (void)takeIntValueFrom:(id)fp8;
- (void)takeFloatValueFrom:(id)fp8;
- (void)takeDoubleValueFrom:(id)fp8;
- (void)takeStringValueFrom:(id)fp8;
- (void)takeObjectValueFrom:(id)fp8;
- (id)_findCurrentEditor;
- (BOOL)_shouldShowFirstResponderForCell:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)mouseDown:(id)fp8;
- (void)_postFocusChangedNotification;
- (void)_setMouseTrackingForCell:(id)fp8;
- (void)_clearMouseTrackingForCell:(id)fp8;
- (void)_removeAllCellMouseTracking;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (struct _NSRange)textView:(id)fp8 willChangeSelectionFromCharacterRange:(struct _NSRange)fp12 toCharacterRange:(struct _NSRange)fp20;
- (void)textViewDidChangeSelection:(id)fp8;
- (id)currentEditor;
- (BOOL)abortEditing;
- (void)_validateEditing:(id)fp8;
- (void)validateEditing;
- (id)_setWindow:(id)fp8;
- (void)resetCursorRects;
- (void)_setControlTextDelegateFromOld:(id)fp8 toNew:(id)fp12;
- (void)performClick:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)_rightMouseUpOrDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;
- (int)baseWritingDirection;
- (void)setBaseWritingDirection:(int)fp8;

@end

@interface NSControl (NSControlAccessibilityAdditions)
+ (BOOL)accessibilityIsSingleCelled;
@end

@interface NSControl (NSObjectAccessibilityChildHelpers)
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSControl (NSControlAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityPopUpMenuParent:(id)fp8;
@end

@interface NSCrayon : NSObject
{
    NSString *name;
    NSColor *color;
    NSImage *image;
    struct _NSPoint origin;
    NSCrayonRow *parentCrayonRow;
}

- (id)initWithName:(id)fp8 color:(id)fp12 image:(id)fp16;
- (void)dealloc;
- (id)description;
- (id)localizedColorNameComponent;
- (id)name;
- (id)color;
- (id)image;
- (struct _NSPoint)origin;
- (id)parentCrayonRow;
- (id)parentCrayonView;
- (void)setName:(id)fp8;
- (void)setColor:(id)fp8;
- (void)setImage:(id)fp8;
- (void)setOrigin:(struct _NSPoint)fp8;
- (void)setParentCrayonRow:(id)fp8;
- (struct _NSRect)rectIncludingShadow;
- (struct _NSRect)rectWithoutShadow;
- (void)drawFocusRingInView:(id)fp8;
- (void)drawCrayonLayer;
- (void)drawShadowLayer;
- (id)crayonToLeft;
- (id)crayonToRight;

@end

@interface NSCrayonRow : NSObject
{
    NSMutableArray *crayons;
    struct _NSPoint origin;
    NSImage *image;
    float yOffset;
    NSColorPickerCrayonView *parentCrayonView;
}

- (id)initWithCapacity:(unsigned int)fp8 origin:(struct _NSPoint)fp12 image:(id)fp20 yOffset:(float)fp24;
- (void)dealloc;
- (id)crayons;
- (void)addCrayon:(id)fp8;
- (unsigned int)count;
- (id)crayonAtIndex:(unsigned int)fp8;
- (id)lastCrayon;
- (unsigned int)indexOfCrayon:(id)fp8;
- (id)objectEnumerator;
- (id)crayonClosestToIndex:(unsigned int)fp8;
- (id)crayonToLeftOfCrayon:(id)fp8;
- (id)crayonToRightOfCrayon:(id)fp8;
- (id)parentCrayonView;
- (void)setParentCrayonView:(id)fp8;
- (struct _NSRect)rectIncludingShadow;
- (struct _NSRect)rectWithoutShadow;
- (void)drawCrayonLayer;
- (void)drawShadowLayer;

@end

@interface NSCursor : NSObject <NSCoding>
{
    struct _NSPoint _hotSpot;
    struct _cursorFlags _flags;
    id _image;
}

+ (void)initialize;
+ (id)_buildCursor:(id)fp8 cursorData:(struct _NSPoint)fp12;
+ (id)arrowCursor;
+ (id)IBeamCursor;
+ (id)pointingHandCursor;
+ (id)closedHandCursor;
+ (id)openHandCursor;
+ (id)resizeLeftCursor;
+ (id)resizeRightCursor;
+ (id)resizeLeftRightCursor;
+ (id)resizeUpCursor;
+ (id)resizeDownCursor;
+ (id)resizeUpDownCursor;
+ (id)crosshairCursor;
+ (id)disappearingItemCursor;
+ (id)operationNotAllowedCursor;
+ (id)busyButClickableCursor;
+ (void)hide;
+ (void)unhide;
+ (void)setHiddenUntilMouseMoves:(BOOL)fp8;
+ (id)currentCursor;
+ (void)pop;
+ (id)_makeCursors;
+ (id)_setHelpCursor:(BOOL)fp8;
+ (BOOL)helpCursorShown;
+ (id)_copyDragCursor;
+ (id)_linkDragCursor;
+ (id)_genericDragCursor;
+ (id)_handCursor;
+ (id)_closedHandCursor;
+ (id)_moveCursor;
+ (id)_waitCursor;
+ (id)_crosshairCursor;
+ (id)_horizontalResizeCursor;
+ (id)_verticalResizeCursor;
+ (id)_bottomLeftResizeCursor;
+ (id)_topLeftResizeCursor;
+ (id)_bottomRightResizeCursor;
+ (id)_topRightResizeCursor;
+ (id)_resizeLeftCursor;
+ (id)_resizeRightCursor;
+ (id)_resizeLeftRightCursor;
- (id)initWithImage:(id)fp8 hotSpot:(struct _NSPoint)fp12;
- (id)initWithImage:(id)fp8 foregroundColorHint:(id)fp12 backgroundColorHint:(id)fp16 hotSpot:(struct _NSPoint)fp20;
- (void)_setImage:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (int)_coreCursorType;
- (void)_getImageAndHotSpotFromCoreCursor;
- (id)image;
- (struct _NSPoint)hotSpot;
- (void)setOnMouseExited:(BOOL)fp8;
- (void)setOnMouseEntered:(BOOL)fp8;
- (BOOL)isSetOnMouseExited;
- (BOOL)isSetOnMouseEntered;
- (char *)_getCursorBitmapWidth:(unsigned int *)fp8 andHeight:(unsigned int *)fp12;
- (void)set;
- (id)forceSet;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;
- (void)push;
- (void)pop;

@end

@interface NSCustomImageRep : NSImageRep
{
    SEL _drawMethod;
    id _drawObject;
    unsigned int _reserved;
}

+ (void)initialize;
- (id)init;
- (id)initWithDrawSelector:(SEL)fp8 delegate:(id)fp12;
- (SEL)drawSelector;
- (id)delegate;
- (BOOL)draw;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSCustomObject : NSObject <NSCoding>
{
    NSString *className;
    id object;
    id extension;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSCustomResource : NSObject <NSCoding>
{
    NSString *className;
    NSString *resourceName;
}

+ (void)initialize;
+ (void)pushBundleForImageSearch:(id)fp8;
+ (void)popBundleForImageSearch;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)_loadImageWithName:(id)fp8;
- (id)loadImageWithName:(id)fp8;
- (id)loadSoundWithName:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;

@end

@interface NSCustomView : NSView
{
    NSString *className;
    NSView *view;
    id extension;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSColor (NSPortCoding)
- (id)replacementObjectForPortCoder:(id)fp8;
@end

@interface NSFont (NSPortCoding)
- (id)replacementObjectForPortCoder:(id)fp8;
@end

@interface NSXMLFormatWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableString *_documentStr;
}

- (id)initWithAttributedString:(id)fp8;
- (void)dealloc;
- (void)setDocumentAttributes:(id)fp8;
- (id)_escapedStringForString:(id)fp8 escapeQuotes:(BOOL)fp12;
- (id)_fontNameForFont:(id)fp8;
- (void)_writeCharacterAttributes:(id)fp8;
- (void)_writeParagraphStyle:(id)fp8;
- (void)_writeDocumentProperty:(id)fp8 value:(id)fp12;
- (void)_writeDocumentProperties;
- (void)_writeFonts;
- (void)_writeDocumentAttributes;
- (id)XMLFormatData;

@end

@interface NSXMLFormatReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_data;
    NSMutableDictionary *_styles;
    int _errorCode;
    int _parseState;
    int _indexingLimit;
    NSMutableParagraphStyle *_curParStyle;
    NSMutableDictionary *_curParAttributes;
    NSMutableDictionary *_curAttributes;
    NSMutableString *_curString;
    NSString *_curDocumentAttribute;
    NSString *_curStyleName;
    float _defaultTabInterval;
    BOOL seenSect;
}

- (id)_fontForName:(id)fp8 size:(float)fp12;
- (id)_dateForString:(id)fp8;
- (void)_parseParagraphAttributesFromElement:(id)fp8 namespaceURI:(id)fp12 qualifiedName:(id)fp16 attributes:(id)fp20;
- (void)_parseCharacterAttributesFromElement:(id)fp8 namespaceURI:(id)fp12 qualifiedName:(id)fp16 attributes:(id)fp20;
- (void)parser:(id)fp8 didStartElement:(id)fp12 namespaceURI:(id)fp16 qualifiedName:(id)fp20 attributes:(id)fp24;
- (void)parser:(id)fp8 foundCharacters:(id)fp12;
- (void)parser:(id)fp8 didEndElement:(id)fp12 namespaceURI:(id)fp16 qualifiedName:(id)fp20;
- (void)_parse;
- (void)dealloc;
- (id)initWithData:(id)fp8 options:(id)fp12;
- (id)initWithPath:(id)fp8 options:(id)fp12;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)fp8;

@end

@interface NSDocFormatWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableData *_primaryData;
    NSMutableData *_secondaryData;
    NSMutableData *_primaryIndex;
    NSMutableData *_secondaryIndex;
    NSMutableData *_tableOfContents;
    NSMutableData *_documentData;
    NSMutableData *_tableData;
    NSMutableData *_charData;
    NSMutableData *_parData;
    NSMutableData *_summaryInfoData;
    NSMutableData *_documentSummaryInfoData;
    NSMutableArray *_fontArray;
    NSRunStorage *_charFlags;
    BOOL _needsTrailingBreak;
}

- (unsigned int)_indexForRed:(unsigned int)fp8 green:(unsigned int)fp12 blue:(unsigned int)fp16;
- (unsigned int)_argumentForUnderlineStyle:(unsigned int)fp8;
- (id)_fontNameForFont:(id)fp8;
- (void)_writeCharacterData;
- (void)_writeParagraphData;
- (void)_writeDocumentData;
- (void)_writeInfoStringForKey:(id)fp8 number:(unsigned int)fp12 headerData:(id)fp16 contentsData:(id)fp20;
- (void)_writeSummaryData:(BOOL)fp8;
- (id)docFormatData;
- (id)initWithAttributedString:(id)fp8;
- (void)dealloc;
- (void)setDocumentAttributes:(id)fp8;

@end

@interface NSDocFormatReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_primaryData;
    NSMutableData *_secondaryData;
    NSMutableData *_primaryIndex;
    NSMutableData *_secondaryIndex;
    NSMutableData *_tableOfContents;
    NSMutableDictionary *_contentsDictionary;
    NSData *_documentData;
    NSData *_tableData;
    NSMutableArray *_fontNames;
    struct __CFArray *_predefinedOffsets;
    struct __CFDictionary *_predefinedAttributes;
    NSMutableRLEArray *_parAttributes;
    NSMutableRLEArray *_charAttributes;
    NSArray *_previousRowArray;
    unsigned int _magicNumber;
    unsigned int _versionNumber;
    unsigned int _versionCode;
    unsigned int _productNumber;
    unsigned int _globalFlags;
    unsigned int _charsetNumber;
    unsigned int _bytesPerCharacter;
    unsigned int _stringEncoding;
    unsigned int _lastModifier;
    unsigned int _predefinedHeaderLength;
    int _errorCode;
    int _indexingLimit;
    float _defaultTabInterval;
    int _firstEntryNumber;
    int _textStart;
    int _textLength;
    int _predefinedInfoStart;
    int _predefinedInfoEnd;
    int _charInfoStart;
    int _charInfoEnd;
    int _parInfoStart;
    int _parInfoEnd;
    int _fontInfoStart;
    int _fontInfoEnd;
    int _docInfoStart;
    int _docInfoEnd;
    int _metaInfoStart;
    int _metaInfoEnd;
    int _textInfoStart;
    int _textInfoEnd;
}

+ (id)defaultParagraphStyle;
- (id)_fontWithNumber:(int)fp8 size:(float)fp12 bold:(BOOL)fp16 italic:(BOOL)fp20;
- (BOOL)_colorComponentsForIndex:(unsigned int)fp8 redComponent:(unsigned int *)fp12 greenComponent:(unsigned int *)fp16 blueComponent:(unsigned int *)fp20;
- (unsigned int)_underlineStyleForArgument:(unsigned int)fp8;
- (void)_endTableRow:(id)fp8;
- (void)_appendSanitizedTextBytes:(const char *)fp8 length:(unsigned int)fp12 encoding:(unsigned long)fp16 isSymbol:(BOOL)fp20 attributes:(id)fp24;
- (void)_appendTextBytes:(const char *)fp8 length:(unsigned int)fp12 encoding:(unsigned long)fp16 attributes:(id)fp20;
- (id)paragraphAttributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 inRange:(struct _NSRange)fp16;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 inRange:(struct _NSRange)fp16;
- (id)_attributes1ForPageOffset:(int)fp8 entryOffset:(int)fp12 baseAttributes:(id)fp16;
- (id)_attributes2ForPageOffset:(int)fp8 entryOffset:(int)fp12 blockType:(int)fp16 baseAttributes:(id)fp20;
- (void)_parseText1Full;
- (void)_parseText1Fast;
- (void)_parseText1;
- (void)_parseText2;
- (void)_parseText;
- (void)_parseParagraphAttributes1;
- (void)_parseParagraphAttributes2;
- (void)_parseParagraphAttributes;
- (void)_parseCharacterAttributes1;
- (void)_parseCharacterAttributes2;
- (void)_parseCharacterAttributes;
- (void)_parsePredefinedAttributes1;
- (id)_predefinedAttributes2ForIndex:(unsigned int)fp8 depth:(int)fp12;
- (void)_parsePredefinedAttributes2;
- (id)predefinedAttributesForIndex:(unsigned int)fp8;
- (void)_parsePredefinedAttributes;
- (void)_parseFonts1;
- (void)_parseFonts2;
- (void)_parseFonts;
- (void)_parseSummaryInfo:(BOOL)fp8;
- (void)_parseDocumentAttributes1;
- (void)_parseDocumentAttributes2;
- (void)_parseDocumentAttributes;
- (void)_parseGlobals;
- (void)_addContentsToDictionary:(int)fp8 depth:(int)fp12;
- (void)_parseContentsDictionary;
- (void)_parse;
- (void)dealloc;
- (id)initWithData:(id)fp8 options:(id)fp12;
- (id)initWithPath:(id)fp8 options:(id)fp12;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)fp8;

@end

@interface NSDocument : NSObject
{
    NSWindow *_window;
    id _windowControllers;
    NSURL *_fileURL;
    NSString *_fileType;
    NSPrintInfo *_printInfo;
    long _changeCount;
    NSView *savePanelAccessory;
    id _displayName;
    void *_privateData;
    NSUndoManager *_undoManager;
    struct __docFlags _docFlags;
    NSString *_savePanelSaveType;
}

+ (void)initialize;
+ (id)_fileModificationDateForURL:(id)fp8;
+ (BOOL)_hasOverrideForSelector:(SEL)fp8;
+ (BOOL)_isFSObjectExchangingDesired;
+ (BOOL)_isFSObjectExchangingAllowed;
+ (BOOL)_isFSObjectExchangingAllowedOn:(short)fp8;
+ (BOOL)_createTemporaryFolderOnVolume:(short)fp8 orHiddenInFolder:(const struct FSRef *)fp12 andReturnRef:(struct FSRef *)fp16;
+ (id)_pathToFileNamed:(id)fp8 inFolder:(const struct FSRef *)fp12 error:(id *)fp16;
+ (BOOL)_copyOldAttributesFromFilePath:(id)fp8 andNewAttributes:(id)fp12 toFileAtPath:(id)fp16;
+ (BOOL)_trashContainsOrIs:(id)fp8;
+ (id)readableTypes;
+ (id)writableTypes;
+ (BOOL)isNativeType:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)_initWithType:(id)fp8 error:(id *)fp12;
- (id)initWithType:(id)fp8 error:(id *)fp12;
- (BOOL)_initWithContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (id)initWithContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)_initForURL:(id)fp8 withContentsOfURL:(id)fp12 ofType:(id)fp16 error:(id *)fp20;
- (id)initForURL:(id)fp8 withContentsOfURL:(id)fp12 ofType:(id)fp16 error:(id *)fp20;
- (BOOL)_setFileSpecifier:(id)fp8;
- (BOOL)_setDisplayName:(id)fp8;
- (BOOL)_reconcileDisplayNameAndTrackingInfoToFileName;
- (void)_synchronizeWindowTitles;
- (void)_setFileURL:(id)fp8;
- (void)setFileURL:(id)fp8;
- (id)fileURL;
- (void)setFileType:(id)fp8;
- (id)fileType;
- (void)setFileModificationDate:(id)fp8;
- (id)fileModificationDate;
- (void)_errorWasPresentedWithRecovery:(BOOL)fp8 inContext:(CDAnonymousStruct2 *)fp12;
- (void)_presentError:(id)fp8 delegate:(id)fp12 didRecoverSelector:(SEL)fp16 context:(void *)fp20;
- (id)_willPresentRevertingError:(id)fp8;
- (void)_revertAlertSheet:(id)fp8 wasPresentedWithResult:(int)fp12 inContext:(void *)fp16;
- (void)revertDocumentToSaved:(id)fp8;
- (BOOL)revertToContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)readFromFileWrapper:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)readFromData:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)writeToURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (id)fileWrapperOfType:(id)fp8 error:(id *)fp12;
- (id)dataOfType:(id)fp8 error:(id *)fp12;
- (id)_mdAttributesInLastRunSavePanel;
- (id)_mdAttributesToWriteToFile:(id)fp8 ofType:(id)fp12 saveOperation:(int)fp16;
- (void)_changeMDAttributes:(id)fp8 atPath:(id)fp12;
- (BOOL)_finishWritingFileNamed:(id)fp8 inFolder:(const struct FSRef *)fp12 byExchangingWithFileInFolder:(const struct FSRef *)fp16 error:(id *)fp20;
- (BOOL)_finishWritingFileAtPath:(id)fp8 byMovingFileAtPath:(id)fp12 error:(id *)fp16;
- (BOOL)_writeToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 inFolder:(const struct FSRef *)fp20 makingTemporaryCopyInFolder:(const struct FSRef *)fp24 error:(id *)fp28;
- (BOOL)_writeToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 error:(id *)fp20;
- (BOOL)_writeSafelyToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 error:(id *)fp20;
- (BOOL)writeSafelyToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 error:(id *)fp20;
- (BOOL)writeToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 originalContentsURL:(id)fp20 error:(id *)fp24;
- (id)_fileAttributesToWriteToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 originalContentsURL:(id)fp20 error:(id *)fp24;
- (id)fileAttributesToWriteToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 originalContentsURL:(id)fp20 error:(id *)fp24;
- (BOOL)keepBackupFile;
- (void)saveDocument:(id)fp8;
- (void)saveDocumentAs:(id)fp8;
- (void)saveDocumentTo:(id)fp8;
- (void)_changeAlertSheetWasPresented:(id)fp8 withResult:(int)fp12 inContext:(CDAnonymousStruct4 *)fp16;
- (void)_runAlertPanelForDocumentMoved:(BOOL)fp8 orDocumentRenamed:(BOOL)fp12 orDocumentInTrash:(BOOL)fp16 orDocumentUnavailable:(BOOL)fp20 thenSaveDocumentWithDelegate:(id)fp24 didSaveSelector:(SEL)fp28 contextInfo:(void *)fp32;
- (void)_saveDocumentWithDelegate:(id)fp8 didSaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)saveDocumentWithDelegate:(id)fp8 didSaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (id)_fileNameExtensionsForType:(id)fp8 forUseInSavePanel:(BOOL)fp12;
- (void)changeSaveType:(id)fp8;
- (id)_savePanelAccessoryViewForWritableTypes:(id)fp8 defaultType:(id)fp12;
- (void)_setFileNameExtensionWasHiddenInLastRunSavePanel:(BOOL)fp8;
- (void)_savePanelWasPresented:(id)fp8 withResult:(int)fp12 inContext:(CDAnonymousStruct8 *)fp16;
- (id)_defaultFromWritableTypeNames:(id)fp8;
- (id)_preparedSavePanelForOperation:(int)fp8;
- (void)_runModalSavePanelForSaveOperation:(int)fp8 delegate:(id)fp12 didSaveSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)runModalSavePanelForSaveOperation:(int)fp8 delegate:(id)fp12 didSaveSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (BOOL)shouldRunSavePanelWithAccessoryView;
- (BOOL)prepareSavePanel:(id)fp8;
- (BOOL)fileNameExtensionWasHiddenInLastRunSavePanel;
- (id)fileTypeFromLastRunSavePanel;
- (id)_willPresentSavingError:(id)fp8 forOperation:(int)fp12 url:(id)fp16;
- (void)_saveToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 delegate:(id)fp20 didSaveSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (void)_editorCommittingFailedForSaveToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 delegate:(id)fp20 didSaveSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (void)saveToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 delegate:(id)fp20 didSaveSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (void)_resetMoveAndRenameSensing;
- (BOOL)saveToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 error:(id *)fp20;
- (BOOL)hasUnautosavedChanges;
- (id)_autosaveContentsURL;
- (void)autosaveDocumentWithDelegate:(id)fp8 didAutosaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (id)autosavingFileType;
- (void)setAutosavedContentsFileURL:(id)fp8;
- (id)autosavedContentsFileURL;
- (void)_closeAlertSheet:(id)fp8 wasPresentedWithResult:(int)fp12 inContext:(CDAnonymousStruct2 *)fp16;
- (void)canCloseDocumentWithDelegate:(id)fp8 shouldCloseSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)close;
- (void)_document:(id)fp8 pageLayoutDidReturn:(BOOL)fp12 contextInfo:(void *)fp16;
- (void)runPageLayout:(id)fp8;
- (void)_pageLayout:(id)fp8 wasPresentedWithResult:(int)fp12 inContext:(CDAnonymousStruct2 *)fp16;
- (void)runModalPageLayoutWithPrintInfo:(id)fp8 delegate:(id)fp12 didRunSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (BOOL)preparePageLayout:(id)fp8;
- (BOOL)shouldChangePrintInfo:(id)fp8;
- (void)setPrintInfo:(id)fp8;
- (id)printInfo;
- (void)printDocument:(id)fp8;
- (id)_willPresentPrintingError:(id)fp8;
- (void)_printDocumentWithSettings:(id)fp8 showPrintPanel:(BOOL)fp12 delegate:(id)fp16 didPrintSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)_editorCommittingFailedForPrintDocumentWithSettings:(id)fp8 showPrintPanel:(BOOL)fp12 delegate:(id)fp16 didPrintSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)printDocumentWithSettings:(id)fp8 showPrintPanel:(BOOL)fp12 delegate:(id)fp16 didPrintSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (id)printOperationWithSettings:(id)fp8 error:(id *)fp12;
- (void)_printOperation:(id)fp8 wasRunWithSuccess:(BOOL)fp12 inContext:(CDAnonymousStruct2 *)fp16;
- (void)runModalPrintOperation:(id)fp8 delegate:(id)fp12 didRunSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)presentError:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didPresentSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)presentError:(id)fp8;
- (id)willPresentError:(id)fp8;
- (id)windowControllers;
- (void)addWindowController:(id)fp8;
- (void)removeWindowController:(id)fp8;
- (id)windowNibName;
- (void)makeWindowControllers;
- (void)showWindows;
- (void)shouldCloseWindowController:(id)fp8 delegate:(id)fp12 shouldCloseSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)setWindow:(id)fp8;
- (id)_transferWindowOwnership;
- (void)windowControllerWillLoadNib:(id)fp8;
- (void)windowControllerDidLoadNib:(id)fp8;
- (BOOL)isDocumentEdited;
- (void)_updateForDocumentEdited:(BOOL)fp8;
- (double)autosavingDelay;
- (void)_autosaveForTimer:(id)fp8;
- (void)updateChangeCount:(int)fp8;
- (id)windowForSheet;
- (void)_releaseUndoManager;
- (id)undoManager;
- (void)setUndoManager:(id)fp8;
- (BOOL)hasUndoManager;
- (void)setHasUndoManager:(BOOL)fp8;
- (void)_changeWasDone:(id)fp8;
- (void)_changeWasUndone:(id)fp8;
- (void)_changeWasRedone:(id)fp8;
- (id)displayName;
- (int)_untitledDocumentNumber;
- (void)_handleDocumentFileChanges:(id)fp8;
- (BOOL)_isLocatedByURL:(id)fp8 withCache:(CDAnonymousStruct18 *)fp12;
- (id)_fileLocator;
- (id)_currentFileModificationDate;
- (id)writableTypesForSaveOperation:(int)fp8;
- (BOOL)_canSave;
- (BOOL)validateUserInterfaceItem:(id)fp8;

@end

@interface _NSDocumentTrackingInfo : NSObject
{
    int untitledDocumentNumber;
    NSFileSpecifier *specifier;
    NSFileSpecifier *parentSpecifier;
    BOOL hasBeenMoved;
    BOOL hasBeenRenamed;
    NSFileSpecifier *parentSpecifierBeforeMove;
    NSString *nameBeforeRename;
    NSDate *fileModificationDate;
    NSURL *autosavedContentsFileURL;
    struct __CFArray *editors;
    int changeCountSinceLastAutosave;
    struct __CFSet *javaVariantMethodsBeingInvoked;
    NSError *javaLastError;
    NSTimer *autosavingTimer;
}

@end

@interface NSDocument (NSJavaInternal)
+ (BOOL)_isJavaSubclass;
+ (BOOL)_hasJavaOverrideForInitializerSelector:(SEL)fp8;
- (id)_invokeJavaOverrideForSelector:(SEL)fp8 withErrorAndOtherArguments:(id *)fp12;
- (void)_setJavaLastError:(id)fp8;
- (id)_javaLastError;
@end

@interface NSDocument (NSDeprecatedLongAgo)
- (BOOL)canCloseDocument;
- (int)runModalSavePanel:(id)fp8 withAccessoryView:(id)fp12;
- (id)fileNameFromRunningSavePanelForSaveOperation:(int)fp8;
- (BOOL)shouldCloseWindowController:(id)fp8;
@end

@interface NSDocument (NSDeprecated)
- (id)dataRepresentationOfType:(id)fp8;
- (id)fileAttributesToWriteToFile:(id)fp8 ofType:(id)fp12 saveOperation:(int)fp16;
- (id)fileName;
- (id)fileWrapperRepresentationOfType:(id)fp8;
- (id)initWithContentsOfFile:(id)fp8 ofType:(id)fp12;
- (id)initWithContentsOfURL:(id)fp8 ofType:(id)fp12;
- (BOOL)loadDataRepresentation:(id)fp8 ofType:(id)fp12;
- (BOOL)loadFileWrapperRepresentation:(id)fp8 ofType:(id)fp12;
- (void)printShowingPrintPanel:(BOOL)fp8;
- (BOOL)readFromFile:(id)fp8 ofType:(id)fp12;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12;
- (BOOL)revertToSavedFromFile:(id)fp8 ofType:(id)fp12;
- (BOOL)revertToSavedFromURL:(id)fp8 ofType:(id)fp12;
- (int)runModalPageLayoutWithPrintInfo:(id)fp8;
- (void)saveToFile:(id)fp8 saveOperation:(int)fp12 delegate:(id)fp16 didSaveSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)setFileName:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)writeToFile:(id)fp8 ofType:(id)fp12;
- (BOOL)writeToFile:(id)fp8 ofType:(id)fp12 originalFile:(id)fp16 saveOperation:(int)fp20;
- (BOOL)writeToURL:(id)fp8 ofType:(id)fp12;
- (BOOL)writeWithBackupToFile:(id)fp8 ofType:(id)fp12 saveOperation:(int)fp16;
@end

@interface NSDocument (NSEditorRegistration)
- (BOOL)_isBeingEdited;
- (id)_topEditor;
- (void)_editor:(id)fp8 didCommit:(BOOL)fp12 withContext:(CDAnonymousStruct9 *)fp16;
- (void)_commitEditingWithSuccessInvocation:(id)fp8 failureInvocation:(id)fp12;
- (void)_discardEditing;
- (id)_regularCommitEditingFailureInvocationWithDelegate:(id)fp8 didWhateverSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)__saveIfReallyEditedWithDelegate:(id)fp8 didSaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)_saveIfReallyEditedWithDelegate:(id)fp8 didSaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)objectDidBeginEditing:(id)fp8;
- (void)objectDidEndEditing:(id)fp8;
@end

@interface NSDocumentController : NSObject <NSCoding>
{
    id _documents;
    id _moreVars;
    NSArray *_types;
    NSMutableArray *_recents;
    int _recentsLimit;
}

+ (void)initialize;
+ (id)sharedDocumentController;
+ (void)_setSharedDocumentController:(id)fp8;
+ (BOOL)_hasOverrideForSelector:(SEL)fp8;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)documents;
- (id)currentDocument;
- (id)currentDirectory;
- (id)_documentForURL:(id)fp8;
- (id)documentForURL:(id)fp8;
- (id)documentForWindow:(id)fp8;
- (void)_handleDocumentFileChanges:(id)fp8;
- (void)_appDidBecomeActive:(id)fp8;
- (void)addDocument:(id)fp8;
- (void)removeDocument:(id)fp8;
- (id)_willPresentCreationError:(id)fp8;
- (void)newDocument:(id)fp8;
- (id)_defaultType:(BOOL)fp8;
- (id)openUntitledDocumentAndDisplay:(BOOL)fp8 error:(id *)fp12;
- (id)makeUntitledDocumentOfType:(id)fp8 error:(id *)fp12;
- (id)_presentableFileNameFromURL:(id)fp8;
- (id)_willPresentOpeningError:(id)fp8 forURL:(id)fp12;
- (void)openDocument:(id)fp8;
- (id)_setupOpenPanel;
- (id)_openableFileExtensions;
- (id)URLsFromRunningOpenPanel;
- (int)runModalOpenPanel:(id)fp8 forTypes:(id)fp12;
- (id)openDocumentWithContentsOfURL:(id)fp8 display:(BOOL)fp12 error:(id *)fp16;
- (id)makeDocumentWithContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)reopenDocumentForURL:(id)fp8 withContentsOfURL:(id)fp12 error:(id *)fp16;
- (id)makeDocumentForURL:(id)fp8 withContentsOfURL:(id)fp12 ofType:(id)fp16 error:(id *)fp20;
- (void)setAutosavingDelay:(double)fp8;
- (double)autosavingDelay;
- (void)_saveDocuments:(id)fp8;
- (void)_document:(id)fp8 didSave:(BOOL)fp12 contextInfo:(id)fp16;
- (void)saveAllDocuments:(id)fp8;
- (BOOL)hasEditedDocuments;
- (int)_editedDocumentCount;
- (void)reviewUnsavedDocumentsWithAlertTitle:(id)fp8 cancellable:(BOOL)fp12 delegate:(id)fp16 didReviewAllSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)_closeDocumentsStartingWith:(id)fp8 shouldClose:(BOOL)fp12 closeAllContext:(void *)fp16;
- (void)closeAllDocumentsWithDelegate:(id)fp8 didCloseAllSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)presentError:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didPresentSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)presentError:(id)fp8;
- (id)willPresentError:(id)fp8;
- (unsigned int)maximumRecentDocumentCount;
- (void)_writeRecentDocumentDefaults;
- (void)_readRecentDocumentDefaultsIfNecessary;
- (void)clearRecentDocuments:(id)fp8;
- (void)noteNewRecentDocument:(id)fp8;
- (void)_notePendingRecentDocumentURLs;
- (void)noteNewRecentDocumentURL:(id)fp8;
- (id)recentDocumentURLs;
- (id)defaultType;
- (id)typeForContentsOfURL:(id)fp8 error:(id *)fp12;
- (id)documentClassNames;
- (id)_extensionsFromTypeInfo:(id)fp8;
- (id)typeFromFileExtension:(id)fp8;
- (Class)documentClassForType:(id)fp8;
- (id)displayNameForType:(id)fp8;
- (id)fileExtensionsFromType:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;

@end

@interface NSDocumentControllerMoreIVars : NSObject
{
    BOOL shouldCreateUI;
    NSMutableArray *orderedPendingRecentDocumentURLs;
    double autosavingDelay;
    struct __CFSet *javaVariantMethodsBeingInvoked;
    NSError *javaLastError;
    BOOL isAutoreopening;
    BOOL hasAutoreopened;
}

@end

@interface NSDocumentControllerPrintContext : NSObject
{
    BOOL openedDocumentJustForPrinting;
    NSMutableArray *documentURLs;
    NSDictionary *printSettings;
    BOOL showPrintPanels;
    id didPrintDelegate;
    SEL didPrintSelector;
    void *didPrintContextInfo;
}

- (void)dealloc;

@end

@interface NSDocumentController (NSJavaInternal)
+ (BOOL)_isJavaSubclass;
- (id)initJava1;
- (id)initJava2;
- (id)_invokeJavaOverrideForSelector:(SEL)fp8 withErrorAndOtherArguments:(id *)fp12;
- (void)_setJavaLastError:(id)fp8;
- (id)_javaLastError;
@end

@interface NSDocumentController (NSDeprecatedLongAgo)
- (BOOL)closeAllDocuments;
- (BOOL)reviewUnsavedDocumentsWithAlertTitle:(id)fp8 cancellable:(BOOL)fp12;
@end

@interface NSDocumentController (NSDeprecated)
- (id)documentForFileName:(id)fp8;
- (id)fileNamesFromRunningOpenPanel;
- (id)makeDocumentWithContentsOfFile:(id)fp8 ofType:(id)fp12;
- (id)makeDocumentWithContentsOfURL:(id)fp8 ofType:(id)fp12;
- (id)makeUntitledDocumentOfType:(id)fp8;
- (id)_openDocumentFileAt:(id)fp8 display:(BOOL)fp12;
- (id)openDocumentWithContentsOfFile:(id)fp8 display:(BOOL)fp12;
- (id)openDocumentWithContentsOfURL:(id)fp8 display:(BOOL)fp12;
- (id)openUntitledDocumentOfType:(id)fp8 display:(BOOL)fp12;
- (void)setShouldCreateUI:(BOOL)fp8;
- (BOOL)shouldCreateUI;
- (BOOL)validateMenuItem:(id)fp8;
@end

@interface NSDocumentController (NSInternal)
+ (id)_recentMenuItemTitlesFromLocationComponentChains:(id)fp8;
+ (id)_sharedDocumentControllerNoCreate;
+ (id)_autosaveRecordPath;
- (void)_depopulateOpenRecentMenu:(id)fp8;
- (void)_populateOpenRecentMenu:(id)fp8;
- (void)_installOpenRecentMenuOpeningEventHandler:(struct OpaqueMenuRef *)fp8;
- (void)_installOpenRecentsMenu;
- (void)_notePendingRecentDocumentURLsIfNecessary;
- (id)_willPresentReopeningError:(id)fp8 forURL:(id)fp12 contentsURL:(id)fp16;
- (void)_autoreopenDocuments;
- (BOOL)_openUntitled;
- (BOOL)_openFile:(id)fp8;
- (void)_finishPrintingDocumentsInContext:(id)fp8 success:(BOOL)fp12;
- (id)_willPresentOpenForPrintingError:(id)fp8 forURL:(id)fp12;
- (void)_document:(id)fp8 didPrint:(BOOL)fp12 inContext:(id)fp16;
- (void)_printDocumentsWithContentsOfURLs:(id)fp8 settings:(id)fp12 showPrintPanels:(BOOL)fp16 delegate:(id)fp20 didPrintSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (int)_autosavingBehavior;
- (BOOL)_autosaveForRegularQuit;
- (void)_finishAutosavingWithSuccess:(BOOL)fp8 context:(CDAnonymousStruct5 *)fp12;
- (id)_createAutosaveRecordForDocument:(id)fp8;
- (void)_writeAutosaveRecords;
- (void)_afterAutosavingDocument:(id)fp8 closeAndContinue:(BOOL)fp12 context:(CDAnonymousStruct5 *)fp16;
- (void)_startingWithDocument:(id)fp8 continueSavingAndClosingAll:(BOOL)fp12 contextInfo:(void *)fp16;
- (void)_shouldTerminateWithDelegate:(id)fp8 shouldTerminateSelector:(SEL)fp12;
- (void)_noteAutosavedContentsOfDocument:(id)fp8;
- (int)_untitledNumberForDocument:(id)fp8;
- (id)_errorWithOSStatus:(long)fp8 path:(id)fp12 reading:(BOOL)fp16;
- (id)_errorWithOSStatus:(long)fp8 ref:(const struct FSRef *)fp12 reading:(BOOL)fp16;
- (id)_fixedFailureReasonFromError:(id)fp8;
- (id)_customizationOfError:(id)fp8 withDescription:(id)fp12;
@end

@interface NSDocumentController (NSPrivate)
- (void)_openRecentDocument:(id)fp8;
@end

@interface NSDocumentController (NSInternalTypes)
- (id)_resolveTypeAlias:(id)fp8;
- (id)_unresolveTypeAlias:(id)fp8;
- (id)_types;
- (id)_typeDictForType:(id)fp8;
- (id)_typesForDocumentClass:(Class)fp8 includeEditors:(BOOL)fp12 includeViewers:(BOOL)fp16 includeExportable:(BOOL)fp20;
@end

@interface NSDocument (NSScripting)
- (id)lastComponentOfFileName;
- (void)setLastComponentOfFileName:(id)fp8;
- (void)_document:(id)fp8 didSave:(BOOL)fp12 forScriptCommand:(id)fp16;
- (void)_saveToURL:(id)fp8 forSaveOperation:(int)fp12 didSaveSelector:(SEL)fp16 scriptCommand:(id)fp20;
- (id)handleSaveScriptCommand:(id)fp8;
- (void)_document:(id)fp8 shouldClose:(BOOL)fp12 forScriptCommand:(id)fp16;
- (id)handleCloseScriptCommand:(id)fp8;
- (void)_document:(id)fp8 didPrint:(BOOL)fp12 forScriptCommand:(id)fp16;
- (id)handlePrintScriptCommand:(id)fp8;
- (id)objectSpecifier;
@end

@interface NSDPSServerContext : NSDPSContext
{
}

@end

@interface NSDPSContext : NSObject
{
}

@end

@interface NSGraphicsContext (NSDPSServerContextCompatibilityCategory)
+ (void)setEventCoalescingEnabled:(BOOL)fp8;
+ (BOOL)isEventCoalescingEnabled;
+ (void)setDeadKeyProcessingEnabled:(BOOL)fp8;
+ (BOOL)isDeadKeyProcessingEnabled;
+ (void)setEventsTraced:(BOOL)fp8;
+ (BOOL)areEventsTraced;
- (id)initWithHostName:(id)fp8 serverName:(id)fp12 textProc:(const void *)fp16 errorProc:(const void *)fp20 timeout:(double)fp24 secure:(BOOL)fp32 encapsulated:(BOOL)fp36;
- (id)hostName;
- (id)serverName;
- (int)sendPort:(id)fp8 withAllRights:(BOOL)fp12;
- (int)sendTaggedMsg:(const void *)fp8;
- (void)sendEOF;
@end

@interface NSGraphicsContext (NSDPSContextCompatibilityCategory)
+ (void)setAllContextsSynchronized:(BOOL)fp8;
+ (BOOL)areAllContextsSynchronized;
+ (void)setAllContextsOutputTraced:(BOOL)fp8;
+ (BOOL)areAllContextsOutputTraced;
+ (id)stringForDPSError:(const void *)fp8;
+ (id)contextForSecondaryThread;
- (id)initWithMutableData:(id)fp8 forDebugging:(BOOL)fp12 languageEncoding:(const void *)fp16 nameEncoding:(const void *)fp20 textProc:(const void *)fp24 errorProc:(const void *)fp28;
- (id)mutableData;
- (const void *)DPSContext;
- (void)writeBinaryObjectSequence:(const void *)fp8 length:(unsigned int)fp12;
- (void)writeBOSArray:(const void *)fp8 count:(unsigned int)fp12 ofType:(const void *)fp16;
- (void)writeBOSString:(const void *)fp8 length:(unsigned int)fp12;
- (void)writeBOSNumString:(const void *)fp8 length:(unsigned int)fp12 ofType:(const void *)fp16 scale:(int)fp20;
- (void)awaitReturnValues;
- (void)updateNameMap;
- (void)writeData:(id)fp8;
- (void)writePostScriptWithLanguageEncodingConversion:(id)fp8;
- (void)printFormat:(id)fp8;
- (void)printFormat:(id)fp8 arguments:(char *)fp12;
- (void)resetCommunication;
- (void)interruptExecution;
- (void)notifyObjectWhenFinishedExecuting:(id)fp8;
- (void)setTextProc:(const void *)fp8;
- (const void *)textProc;
- (void)setErrorProc:(const void *)fp8;
- (const void *)errorProc;
- (void)chainChildContext:(id)fp8;
- (void)unchainContext;
- (id)childContext;
- (id)parentContext;
- (void)startWaitCursorTimer;
- (void)setWaitCursorEnabled:(BOOL)fp8;
- (BOOL)isWaitCursorEnabled;
- (void)setSynchronized:(BOOL)fp8;
- (BOOL)isSynchronized;
- (void)setOutputTraced:(BOOL)fp8;
- (BOOL)isOutputTraced;
@end

@interface _NSDragManager : NSObject
{
    NSDate *_autoscrollDate;
}

+ (void)initialize;
+ (double)_autoscrollDelay;
+ (id)sharedDragManager;
- (int)registerDragTypes:(id)fp8 forWindow:(id)fp12;
- (BOOL)unregisterDragTypesForWindow:(id)fp8;
- (void)slideImage:(id)fp8 from:(struct _NSPoint)fp12 to:(struct _NSPoint)fp20;
- (void)dragImage:(id)fp8 fromWindow:(id)fp12 at:(struct _NSPoint)fp16 offset:(struct _NSSize)fp24 event:(id)fp32 pasteboard:(id)fp36 source:(id)fp40 slideBack:(BOOL)fp44;
- (id)_dragLocalSource;
- (void)_setAutoscrollDate:(id)fp8;
- (id)_autoscrollDate;

@end

@interface NSCoreDragManager : _NSDragManager
{
    NSWindow *_dragWindow;
    struct _NSPoint _mouseLocation;
    struct _NSSize _offset;
    struct OpaqueCoreDrag *_drag;
    NSImage *_image;
    id _dragLocalSource;
    id _filePromiseDragSource;
}

+ (void)insertText:(id)fp8;
+ (void)doCommandBySelector:(SEL)fp8;
- (int)registerDragTypes:(id)fp8 forWindow:(id)fp12;
- (BOOL)unregisterDragTypesForWindow:(id)fp8;
- (void)slideImage:(id)fp8 from:(struct _NSPoint)fp12 to:(struct _NSPoint)fp20;
- (void)_dragUntilMouseUp:(id)fp8 accepted:(char *)fp12;
- (id)_dragLocalSource;
- (struct _NSSize)_offset;
- (id)_image;
- (id)_setImage:(struct CGPoint)fp8 fromWindow:(id)fp16;
- (void)dragImage:(id)fp8 fromWindow:(id)fp12 at:(struct _NSPoint)fp16 offset:(struct _NSSize)fp24 event:(id)fp32 pasteboard:(id)fp36 source:(id)fp40 slideBack:(BOOL)fp44;

@end

@interface NSDragDestination : NSObject <NSDraggingInfo, NSDraggingInfoPrivate>
{
    NSWindow *_window;
    struct OpaqueCoreDragHandler *trackingHandlerRef;
    struct OpaqueCoreDragHandler *receiveHandlerRef;
    NSString *_pasteboardName;
    BOOL _finalSlide;
    int _lastDragDestinationOperation;
    struct _NSPoint _finalSlideLocation;
    id _target;
    struct __CFRunLoopTimer *_updateTimer;
    struct OpaqueCoreDrag *_drag;
}

- (id)_initWithWindow:(id)fp8;
- (void)_setTrackingHandlerRef:(struct OpaqueCoreDragHandler *)fp8;
- (void)_setReceiveHandlerRef:(struct OpaqueCoreDragHandler *)fp8;
- (struct OpaqueCoreDragHandler *)_trackingHandlerRef;
- (struct OpaqueCoreDragHandler *)_receiveHandlerRef;
- (void)_setDragRef:(struct OpaqueCoreDrag *)fp8;
- (void)dealloc;
- (void)finalize;
- (id)draggingDestinationWindow;
- (unsigned int)draggingSourceOperationMask;
- (struct _NSPoint)draggingLocation;
- (struct _NSPoint)draggedImageLocation;
- (id)draggedImage;
- (id)draggingPasteboard;
- (id)draggingSource;
- (int)draggingSequenceNumber;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)_setFinalSlideLocation:(struct _NSPoint)fp8;
- (struct _NSPoint)_finalSlideLocation;
- (void)_setLastDragDestinationOperation:(unsigned int)fp8;
- (unsigned int)_lastDragDestinationOperation;
- (id)_target;
- (void)_setTarget:(id)fp8;
- (void)_unsetFinalSlide;
- (void)slideDraggedImageTo:(struct _NSPoint)fp8;
- (void)_startDraggingUpdates;
- (void)_stopDraggingUpdates;
- (void)_doAutoscroll:(id)fp8;

@end

@interface NSBitmapImageRep (NSDragManagerFix)
+ (void)_setEnableFlippedImageFix:(BOOL)fp8;
@end

@interface NSDrawerWindow : NSWindow
{
    NSDrawer *_drawer;
    NSWindow *_drawerParentWindow;
}

+ (Class)frameViewClassForStyleMask:(unsigned int)fp8;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32 drawer:(id)fp36;
- (void)_changeTexture;
- (void)_setParentWindow:(id)fp8;
- (id)_parentWindow;
- (struct _NSSize)_potentialMinSize;
- (struct _NSSize)_potentialMaxSize;
- (struct _NSSize)minSize;
- (struct _NSSize)maxSize;
- (BOOL)hasShadow;
- (void)_changeKeyAndMainLimitedOK:(BOOL)fp8;
- (BOOL)isKeyWindow;
- (BOOL)canBecomeKeyWindow;
- (void)becomeKeyWindow;
- (void)_drawerTakeFocus;
- (void)makeKeyWindow;
- (void)resignKeyWindow;
- (void)_changeDrawerKeyState;
- (void)_changeDrawerMainState;
- (void)_changeDrawerFirstResponder;
- (id)_generateScaledBackground;
- (id)_compositedBackground;
- (BOOL)_useMetalPattern;
- (void)_resetDrawerFirstResponder;
- (void)orderOut:(id)fp8;
- (BOOL)isMainWindow;
- (BOOL)canBecomeMainWindow;
- (void)becomeMainWindow;
- (void)makeMainWindow;
- (void)resignMainWindow;
- (BOOL)_hasActiveControls;
- (void)_setForceActiveControls:(BOOL)fp8;
- (BOOL)worksWhenModal;
- (id)_getUndoManager:(BOOL)fp8;
- (BOOL)isExcludedFromWindowsMenu;
- (id)fieldEditor:(BOOL)fp8 forObject:(id)fp12;
- (void)_resetFirstResponder;
- (BOOL)makeFirstResponder:(id)fp8;
- (id)_newFirstResponderAfterResigning;
- (id)_oldFirstResponderBeforeBecoming;
- (void)_selectFirstKeyView;
- (void)resizeWithDelta:(struct _NSPoint)fp8 fromFrame:(struct _NSRect)fp16 beginOperation:(BOOL)fp32 endOperation:(BOOL)fp36;
- (BOOL)_isVertical;
- (BOOL)validateMenuItem:(id)fp8;
- (void)showToolbar:(id)fp8;
- (void)hideToolbar:(id)fp8;
- (void)toggleToolbarShown:(id)fp8;
- (void)runToolbarCustomizationPalette:(id)fp8;
- (void)performClose:(id)fp8;
- (void)performZoom:(id)fp8;
- (void)performMiniaturize:(id)fp8;
- (void)_adjustWindowToScreen;
- (BOOL)isMovableByWindowBackground;
- (void)_cycleDrawersReversed:(BOOL)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;

@end

@interface NSDrawer : NSResponder
{
    int _drawerState;
    int _drawerNextState;
    int _drawerEdge;
    int _drawerNextEdge;
    int _drawerPreferredEdge;
    float _drawerPercent;
    float _drawerPercentSaved;
    float _drawerLeadingOffset;
    float _drawerTrailingOffset;
    NSLock *_drawerLock;
    NSWindow *_drawerWindow;
    NSWindow *_drawerParentWindow;
    NSWindow *_drawerNextParentWindow;
    NSString *_drawerSaveName;
    double _drawerStartTime;
    double _drawerTotalTime;
    struct __CFRunLoop *_drawerLoop;
    struct __CFRunLoopTimer *_drawerTimer;
    id _drawerDelegate;
    unsigned int _drawerFlags;
    struct __CFRunLoopObserver *_drawerObserver;
}

+ (void)initialize;
+ (BOOL)_usesCorrectContentSize;
- (id)_initWithContentSize:(struct _NSSize)fp8 preferredEdge:(int)fp16;
- (id)initWithContentSize:(struct _NSSize)fp8 preferredEdge:(int)fp16;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setParentWindow:(id)fp8;
- (id)parentWindow;
- (void)setContentView:(id)fp8;
- (id)contentView;
- (void)setPreferredEdge:(int)fp8;
- (int)preferredEdge;
- (void)open;
- (void)openOnEdge:(int)fp8;
- (void)close;
- (void)open:(id)fp8;
- (void)close:(id)fp8;
- (void)toggle:(id)fp8;
- (void)removeImmediately:(BOOL)fp8;
- (BOOL)isOpen;
- (int)state;
- (int)edge;
- (void)setContentSize:(struct _NSSize)fp8;
- (struct _NSSize)contentSize;
- (void)setMinContentSize:(struct _NSSize)fp8;
- (struct _NSSize)minContentSize;
- (void)setMaxContentSize:(struct _NSSize)fp8;
- (struct _NSSize)maxContentSize;
- (void)setLeadingOffset:(float)fp8;
- (float)leadingOffset;
- (void)setTrailingOffset:(float)fp8;
- (float)trailingOffset;
- (void)setAutosaveName:(id)fp8;
- (id)autosaveName;
- (void)setDelegate:(id)fp8;
- (id)delegate;

@end

@interface NSWindow (DrawerSupportPrivate)
- (void)_hideAllDrawers;
- (void)_unhideAllDrawers;
- (void)_destroyRealWindowForAllDrawers;
- (void)_displayAllDrawersIfNeeded;
- (void)_positionAllDrawers;
- (void)_sizeAllDrawers;
- (void)_sizeAllDrawersWithRect:(struct _NSRect)fp8;
- (void)_changeAllDrawersKeyState;
- (void)_changeAllDrawersMainState;
- (void)_changeAllDrawersFirstResponder;
- (struct _NSRect)_standardFrameForDrawersInRect:(struct _NSRect)fp8;
- (struct _NSSize)_minContentSizeForDrawers;
- (struct _NSSize)_minSizeForDrawers;
- (void)_removeAllDrawersImmediately:(BOOL)fp8;
- (void)_registerAllDrawersForDraggedTypesIfNeeded;
- (void)_resetAllDrawersDisableCounts;
- (void)_resetAllDrawersPostingCounts;
- (void)_startLiveResizeForAllDrawers;
- (void)_endLiveResizeForAllDrawers;
- (void)_setLevelForAllDrawers;
- (void)_cycleDrawersReversed:(BOOL)fp8;
- (id)_openDrawers;
- (id)_orderedDrawerAndWindowKeyLoopGroupingViews;
@end

@interface NSWindow (TemporaryMailviewerSupport)
- (void)addDrawerWithView:(id)fp8;
- (void)_addDrawerWithView:(id)fp8;
- (void)openFirstDrawer:(id)fp8;
- (void)_openDrawer;
- (void)_openDrawerOnEdge:(int)fp8;
- (void)shutAllDrawers:(id)fp8;
- (void)_shutDrawer;
- (BOOL)_drawerIsOpen;
- (void)removeAllDrawersImmediately;
@end

@interface NSDrawer (NSResponder)
- (BOOL)tryToPerform:(SEL)fp8 with:(id)fp12;
- (BOOL)performKeyEquivalent:(id)fp8;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
- (void)interpretKeyEvents:(id)fp8;
- (void)flushBufferedKeyEvents;
- (void)setMenu:(id)fp8;
- (id)menu;
- (void)helpRequested:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (id)undoManager;
@end

@interface NSDrawer (DrawerInternals)
- (void)_doAttachDrawerIgnoreHidden:(BOOL)fp8;
- (void)_doAttachDrawer;
- (void)_doDetachDrawer;
- (void)_doStartDrawer;
- (void)_doStopDrawer;
- (void)_doPositionDrawer;
- (void)_doPositionDrawerAndSize:(struct _NSSize)fp8 parentFrame:(struct _NSRect)fp16;
- (void)_doPositionDrawerAndSize:(struct _NSSize)fp8 parentFrame:(struct _NSRect)fp16 stashSize:(BOOL)fp32;
- (void)_doSlideDrawerWithDelta:(struct _NSPoint)fp8;
- (void)_doResizeDrawerWithDelta:(struct _NSPoint)fp8 fromFrame:(struct _NSRect)fp16;
- (void)_doOpenDrawer;
- (void)_doCloseDrawer;
- (void)_doRemoveDrawer;
- (void)_doSetParentWindow:(id)fp8;
- (void)_doAutoselectEdge;
- (id)_drawerWindow;
@end

@interface NSDrawer (DrawerPrivate)
+ (void)_setDrawerVelocity:(double)fp8;
+ (double)_drawerVelocity;
+ (void)_setDrawerTransform:(int)fp8;
+ (int)_drawerTransform;
- (int)_edge;
- (void)_setDrawerEdge:(int)fp8;
- (void)_hide;
- (void)_unhide;
- (void)_destroyRealWindow;
- (void)_displayIfNeeded;
- (void)_position;
- (void)_size;
- (void)_sizeWithRect:(struct _NSRect)fp8;
- (void)_changeKeyState;
- (void)_changeMainState;
- (void)_changeFirstResponder;
- (void)_takeFocus;
- (struct _NSSize)_minParentWindowContentSize;
- (void)_slideWithDelta:(struct _NSPoint)fp8 beginOperation:(BOOL)fp16 endOperation:(BOOL)fp20;
- (void)_resizeWithDelta:(struct _NSPoint)fp8 fromFrame:(struct _NSRect)fp16 beginOperation:(BOOL)fp32 endOperation:(BOOL)fp36;
- (id)_registerDragTypesIfNeeded;
- (id)_resetDisableCounts;
- (id)_resetPostingCounts;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (void)_setLevel;
@end

@interface NSWindow (Drawers)
- (id)drawers;
- (id)openDrawers;
@end

@interface NSDrawerWindow (NSDrawerWindowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParentAttribute;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)fp8;
@end

@interface NSDrawer (NSDrawerAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
@end

@interface NSDrawerFrame : NSFrameView
{
    NSColor *drawerBackground;
    int trackingTag;
    int drawerEdge;
    BOOL registeredForEdgeChanges;
}

+ (void)initialize;
+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (struct _NSSize)minContentSizeForMinFrameSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)registerForEdgeChanges:(id)fp8;
- (void)shapeWindow;
- (struct _NSSize)minFrameSize;
- (struct _NSRect)contentRect;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)drawBevel:(struct _NSRect)fp8;
- (void)_drawIndicatorInRect:(struct _NSRect)fp8;
- (struct _NSRect)resizeIndicatorRect;
- (void)drawResizeIndicator:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)drawFrame:(struct _NSRect)fp8;
- (void)_drawFrameRects:(struct _NSRect)fp8;
- (id)contentFill;
- (void)adjustHalftonePhase;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)_addTrackingRects;
- (void)_removeTrackingRects;
- (void)drawerDidOpen:(id)fp8;
- (void)drawerDidClose:(id)fp8;
- (void)resizeWithEvent:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow:(id)fp8;
- (void)_postFrameChangeNotification;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSEPSImageRep : NSImageRep
{
    struct _NSPoint _bBoxOrigin;
    NSData *_epsData;
    NSPDFImageRep *_pdfImageRep;
}

+ (void)initialize;
+ (id)imageRepWithData:(id)fp8;
+ (id)_imagesFromIcon:(id)fp8 inApp:(id)fp12 zone:(struct _NSZone *)fp16;
+ (BOOL)canInitWithData:(id)fp8;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (void)dealloc;
- (id)initWithData:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (struct _NSRect)boundingBox;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (void)prepareGState;
- (BOOL)draw;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)EPSRepresentation;

@end

@interface NSEPSImageRep (NSInternal)
- (void)_readBBox;
- (void)_createPDFImageRep;
@end

@interface NSTabletEvent : NSObject
{
    unsigned int _subtype;
    union {
        struct {
            int x;
            int y;
            int z;
            unsigned short buttons;
            float pressure;
            struct {
                float x;
                float y;
            } tilt;
            float rotation;
            float tangentialPressure;
            unsigned short deviceID;
            short vendor1;
            short vendor2;
            short vendor3;
            int pad[5];
        } tabletPointer;
        struct {
            unsigned short vendorID;
            unsigned short tabletID;
            unsigned short pointerID;
            unsigned short deviceID;
            unsigned short systemTabletID;
            unsigned short vendorPointerType;
            unsigned int pointerSerialNumber;
            unsigned long long uniqueID;
            unsigned int capabilityMask;
            unsigned char pointerType;
            unsigned char enterProximity;
            unsigned short reserved1;
        } tabletProximity;
    } _data;
}

- (id)_initWithCGSEvent:(struct _CGSEventRecord)fp8;
- (int)subtype;
- (unsigned short)deviceID;
- (int)locationX;
- (int)locationY;
- (int)locationZ;
- (unsigned short)buttons;
- (float)pressure;
- (float)tiltX;
- (float)tiltY;
- (float)rotation;
- (float)tangentialPressure;
- (short)vendor1;
- (short)vendor2;
- (short)vendor3;
- (unsigned short)vendorID;
- (unsigned short)tabletID;
- (unsigned short)pointerID;
- (unsigned short)systemTabletID;
- (unsigned short)vendorPointerType;
- (unsigned int)pointerSerialNumber;
- (unsigned long long)uniqueID;
- (unsigned int)capabilityMask;
- (unsigned char)pointerType;
- (unsigned short)enterProximity;
- (id)description;

@end

@interface NSEvent : NSObject <NSCopying, NSCoding>
{
    int _type;
    struct _NSPoint _location;
    unsigned int _modifierFlags;
    int _WSTimestamp;
    double _timestamp;
    int _windowNumber;
    NSWindow *_window;
    NSGraphicsContext *_context;
    union {
        struct {
            int eventNumber;
            int clickCount;
            float pressure;
        } mouse;
        struct {
            NSString *keys;
            NSString *unmodKeys;
            unsigned short keyCode;
            char isARepeat;
        } key;
        struct {
            int eventNumber;
            int trackingNumber;
            void *userData;
        } tracking;
        struct {
            float deltaX;
            float deltaY;
            float deltaZ;
        } scrollWheel;
        struct {
            int subtype;
            int data1;
            int data2;
        } misc;
    } _data;
    void *_eventRef;
}

+ (id)mouseEventWithType:(int)fp8 location:(struct _NSPoint)fp12 modifierFlags:(unsigned int)fp20 timestamp:(double)fp24 windowNumber:(int)fp32 context:(id)fp36 eventNumber:(int)fp40 clickCount:(int)fp44 pressure:(float)fp48;
+ (id)keyEventWithType:(int)fp8 location:(struct _NSPoint)fp12 modifierFlags:(unsigned int)fp20 timestamp:(double)fp24 windowNumber:(int)fp32 context:(id)fp36 characters:(id)fp40 charactersIgnoringModifiers:(id)fp44 isARepeat:(BOOL)fp48 keyCode:(unsigned short)fp52;
+ (id)enterExitEventWithType:(int)fp8 location:(struct _NSPoint)fp12 modifierFlags:(unsigned int)fp20 timestamp:(double)fp24 windowNumber:(int)fp32 context:(id)fp36 eventNumber:(int)fp40 trackingNumber:(int)fp44 userData:(void *)fp48;
+ (id)otherEventWithType:(int)fp8 location:(struct _NSPoint)fp12 modifierFlags:(unsigned int)fp20 timestamp:(double)fp24 windowNumber:(int)fp32 context:(id)fp36 subtype:(short)fp40 data1:(int)fp44 data2:(int)fp48;
+ (struct _NSPoint)mouseLocation;
+ (id)_eventWithCGSEvent:(struct _CGSEventRecord)fp8;
+ (void)_resetDiscardMask;
+ (void)_discardEventsFromSubthread:(id)fp8;
+ (void)_discardEventsWithMask:(unsigned int)fp8 eventTime:(unsigned long long)fp12;
+ (void)startPeriodicEventsAfterDelay:(double)fp8 withPeriod:(double)fp16;
+ (void)_stopPeriodicEventsForSource:(id)fp8;
+ (void)stopPeriodicEvents;
- (void)_fixCommandAlphaShifts;
- (id)_initWithCGSEvent:(struct _CGSEventRecord)fp8 eventRef:(void *)fp180;
- (struct _CGSEventRecord)_cgsEventRecord;
- (struct _CGSEvent)_cgsevent;
- (int)type;
- (struct _NSPoint)locationInWindow;
- (unsigned int)modifierFlags;
- (double)timestamp;
- (id)window;
- (int)windowNumber;
- (id)context;
- (int)eventNumber;
- (int)clickCount;
- (float)pressure;
- (int)buttonNumber;
- (float)_eventRecordDelta:(int)fp8;
- (float)deltaY;
- (float)deltaX;
- (float)deltaZ;
- (id)tabletEvent;
- (id)characters;
- (BOOL)_matchesKeyEquivalent:(id)fp8 modifierMask:(unsigned int)fp12;
- (id)charactersIgnoringModifiers;
- (BOOL)_isDeadkey;
- (void)_setEventRef:(void *)fp8;
- (void)_postFromSubthread:(struct __CFBoolean *)fp8;
- (void)_postAtStart:(BOOL)fp8;
- (BOOL)isARepeat;
- (unsigned short)keyCode;
- (int)trackingNumber;
- (void *)userData;
- (short)subtype;
- (int)data1;
- (int)data2;
- (void *)_eventRef;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (BOOL)isEqual:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (int)_nxeventTime;
- (unsigned long long)_cgsEventTime;
- (BOOL)_continuousScroll;
- (float)deviceDeltaX;
- (float)deviceDeltaY;
- (float)deviceDeltaZ;
- (id)_eventRelativeToWindow:(id)fp8;
- (unsigned int)deviceID;
- (int)absoluteX;
- (int)absoluteY;
- (int)absoluteZ;
- (unsigned int)buttonMask;
- (struct _NSPoint)tilt;
- (float)rotation;
- (float)tangentialPressure;
- (id)vendorDefined;
- (unsigned int)vendorID;
- (unsigned int)tabletID;
- (unsigned int)pointingDeviceID;
- (unsigned int)systemTabletID;
- (unsigned int)vendorPointingDeviceType;
- (unsigned int)pointingDeviceSerialNumber;
- (unsigned long long)uniqueID;
- (unsigned int)capabilityMask;
- (int)pointingDeviceType;
- (BOOL)isEnteringProximity;

@end

@interface __NSEventDiscardInfo : NSObject
{
    unsigned int mask;
    unsigned long long time;
}

@end

@interface _NSPeriodicEventSource : NSObject
{
    double delay;
    double period;
    struct __CFRunLoopTimer *timer;
    unsigned int errorData;
}

- (void)addTimerToModes;

@end

@interface NSFileLocator : NSObject <NSCopying>
{
    struct AliasRecord **_alias;
    NSString *_standardizedPath;
}

+ (BOOL)_shouldUseAliasToLocate:(const struct FSRef *)fp8;
+ (id)_stringByReplacingChar:(unsigned short)fp8 withChar:(unsigned short)fp12 inString:(id)fp16;
+ (id)bestLocationRepFromPath:(id)fp8;
+ (id)bestLocationRepFromURL:(id)fp8;
+ (BOOL)bestLocationRep:(id)fp8 matchesBestLocationRep:(id)fp12;
- (id)initWithBestLocationRep:(id)fp8;
- (id)initWithPath:(id)fp8;
- (id)initWithProperties:(id)fp8;
- (id)initWithSpecifier:(id)fp8;
- (id)initWithURL:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)bestLocationRep;
- (id)properties;
- (id)specifier;
- (id)standardizedPath;
- (id)url;

@end

@interface NSFileSpecifier : NSObject <NSCopying>
{
    struct FSRef _ref;
}

+ (id)specifierWithPath:(id)fp8 traverseLink:(BOOL)fp12;
+ (id)specifierWithURL:(id)fp8 traverseLink:(BOOL)fp12;
- (id)initWithPath:(id)fp8 traverseLink:(BOOL)fp12;
- (id)initWithRef:(const struct FSRef *)fp8;
- (id)initWithURL:(id)fp8 traverseLink:(BOOL)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (id)path;
- (id)parentSpecifier;
- (id)presentableName;
- (const struct FSRef *)asRef;

@end

@interface NSFileWrapper : NSObject <NSCoding>
{
    id _impl;
    NSString *_fileName;
    NSString *_preferredFileName;
    NSDictionary *_fileAttributes;
    NSImage *_image;
    id _subdocuments;
}

+ (void)initialize;
- (id)init;
- (id)initDirectoryWithFileWrappers:(id)fp8;
- (id)initRegularFileWithContents:(id)fp8;
- (id)initSymbolicLinkWithDestination:(id)fp8;
- (id)initWithPath:(id)fp8;
- (id)initWithSerializedRepresentation:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)attemptOverwrite:(id)fp8;
- (BOOL)writeToFile:(id)fp8 atomically:(BOOL)fp12 updateFilenames:(BOOL)fp16;
- (id)serializedRepresentation;
- (void)setFilename:(id)fp8;
- (id)filename;
- (void)setPreferredFilename:(id)fp8;
- (id)preferredFilename;
- (void)setFileAttributes:(id)fp8;
- (id)fileAttributes;
- (BOOL)isRegularFile;
- (BOOL)isDirectory;
- (BOOL)isSymbolicLink;
- (void)setIcon:(id)fp8;
- (id)icon;
- (BOOL)needsToBeUpdatedFromPath:(id)fp8;
- (BOOL)updateFromPath:(id)fp8;
- (id)addFileWrapper:(id)fp8;
- (void)removeFileWrapper:(id)fp8;
- (id)fileWrappers;
- (id)keyForFileWrapper:(id)fp8;
- (id)addFileWithPath:(id)fp8;
- (id)addRegularFileWithContents:(id)fp8 preferredFilename:(id)fp12;
- (id)addSymbolicLinkWithDestination:(id)fp8 preferredFilename:(id)fp12;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)regularFileContents;
- (id)symbolicLinkDestination;

@end

@interface NSFileWrapper (NSPrivate)
- (id)_initWithImpl:(id)fp8 uniquedFileName:(id)fp12 docInfo:(id)fp16 imageData:(id)fp20 parentWrapper:(id)fp24;
- (id)_impl;
- (id)_mappedFile;
- (id)_uniqueNameForNewSubdocument:(id)fp8;
- (void)_updateFileNamesForChildren;
- (BOOL)_updateFromPath:(id)fp8 checkOnly:(BOOL)fp12 exists:(char *)fp16;
- (id)_fullDescription:(BOOL)fp8;
@end

@interface NSFocusStack : NSObject
{
    struct __CFArray *_stack;
    int _topIndex;
}

- (id)init;
- (void)dealloc;
- (void)focusView:(id)fp8 inWindow:(id)fp12;
- (id)focusedView;
- (void)unfocusView:(id)fp8;
- (void)popTopView;
- (void)removeFreedView:(id)fp8;
- (void)removeFreedWindow:(id)fp8;
- (BOOL)isWindowInFocusStack:(id)fp8;
- (void)invalidateFocus:(id)fp8;
- (void)fixInvalidatedFocusForFocusView;

@end

@interface _NSFocusStackElement : NSObject
{
    NSView *_view;
    NSWindow *_originalWindow;
    unsigned int _errorData;
    BOOL _valid;
}

@end

@interface NSFocusState : NSPSMatrix
{
    struct _NSRect theClip;
    NSWindow *window;
    BOOL clipSet;
    BOOL clipEmpty;
    struct __CFArray *specialGStateViews;
    void *initialGState;
}

+ (id)sharedFocusState;
- (void)dealloc;
- (void)finalize;
- (id)clip:(const struct _NSRect *)fp8;
- (id)flush;
- (void)reset;
- (id)scaleTo:(float)fp8:(float)fp12;
- (void)setFrameRotation:(float)fp8;
- (void)setWindow:(id)fp8;
- (void)addSpecialGStateView:(id)fp8;
- (void)setInitialGState:(void *)fp8;

@end

@interface NSFont : NSObject <NSCopying, NSCoding>
{
    NSString *_name;
    float _size;
    void *_reservedFont1;
    struct __fFlags _fFlags;
    id _private;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (void)_updateAntialiasingThreshold;
+ (void)_reactToFontSetChange;
+ (BOOL)_characterCannotBeRendered:(unsigned long)fp8;
+ (BOOL)_allowsNonNativeGlyphPacking;
+ (void)initialize;
+ (id)fontWithName:(id)fp8 size:(float)fp12;
+ (id)fontWithName:(id)fp8 matrix:(const float *)fp12;
+ (id)fontWithDescriptor:(id)fp8 size:(float)fp12;
+ (id)fontWithDescriptor:(id)fp8 textTransform:(id)fp12;
+ (id)userFontOfSize:(float)fp8;
+ (id)userFixedPitchFontOfSize:(float)fp8;
+ (void)setUserFont:(id)fp8;
+ (void)setUserFixedPitchFont:(id)fp8;
+ (id)systemFontOfSize:(float)fp8;
+ (id)boldSystemFontOfSize:(float)fp8;
+ (id)messageFontOfSize:(float)fp8;
+ (id)labelFontOfSize:(float)fp8;
+ (id)titleBarFontOfSize:(float)fp8;
+ (id)menuFontOfSize:(float)fp8;
+ (id)menuBarFontOfSize:(float)fp8;
+ (id)paletteFontOfSize:(float)fp8;
+ (id)toolTipsFontOfSize:(float)fp8;
+ (id)controlContentFontOfSize:(float)fp8;
+ (float)systemFontSize;
+ (float)smallSystemFontSize;
+ (float)labelFontSize;
+ (float)systemFontSizeForControlSize:(int)fp8;
+ (id)coveredCharacterCache;
+ (id)toolbarLabelFontOfSize:(float)fp8;
+ (float)toolbarLabelFontSizeForToolbarSize:(int)fp8;
+ (void)setLocaleListForDefaultFontFallback:(id)fp8;
+ (id)findFontLike:(id)fp8 forCharacter:(unsigned long)fp12 inLanguage:(id)fp16;
+ (id)findFontLike:(id)fp8 forString:(id)fp12 withRange:(struct _NSRange)fp16 inLanguage:(id)fp24;
+ (id)findFontLike:(id)fp8 traits:(unsigned int)fp12 forCharacters:(const unsigned short *)fp16 length:(unsigned int)fp20 inLanguage:(id)fp24 checkCoveredCache:(BOOL)fp28;
+ (void)useFont:(id)fp8;
+ (id)preferredFontNames;
+ (void)setPreferredFontNames:(id)fp8;
+ (float)_toolbarLabelFontSize;
+ (float)_toolbarSmallLabelFontSize;
+ (id)_toolbarLabelFontOfSize:(float)fp8;
+ (void)_setExportSpecialFonts:(BOOL)fp8;
- (void)dealloc;
- (BOOL)__isSystemFont;
- (BOOL)_isDefaultFace;
- (BOOL)_isHiraginoFont;
- (float)_defaultLineHeightForUILayout;
- (float)_baseLineHeightForFont:(BOOL)fp8;
- (float)_ascenderDeltaForBehavior:(int)fp8;
- (float)_leading;
- (struct CGFont *)_backingCGSFont;
- (void *)_atsFontID;
- (short)_fondID;
- (const unsigned short *)_latin1MappingTable:(_Bool *)fp8;
- (id)initWithInstanceInfo:(id)fp8 renderingMode:(int)fp12;
- (float)_totalAdvancementForNativeGlyphs:(const unsigned short *)fp8 count:(long)fp12;
- (id)fontName;
- (float)pointSize;
- (const float *)matrix;
- (id)familyName;
- (id)displayName;
- (id)fontDescriptor;
- (id)textTransform;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)numberOfGlyphs;
- (unsigned int)mostCompatibleStringEncoding;
- (unsigned int)glyphWithName:(id)fp8;
- (id)coveredCharacterSet;
- (struct _NSRect)boundingRectForFont;
- (struct _NSSize)maximumAdvancement;
- (float)ascender;
- (float)descender;
- (float)leading;
- (float)underlinePosition;
- (float)underlineThickness;
- (float)italicAngle;
- (float)capHeight;
- (float)xHeight;
- (BOOL)isFixedPitch;
- (struct _NSRect)boundingRectForGlyph:(unsigned int)fp8;
- (struct _NSSize)advancementForGlyph:(unsigned int)fp8;
- (void)getBoundingRects:(struct _NSRect *)fp8 forGlyphs:(const unsigned int *)fp12 count:(unsigned int)fp16;
- (void)getAdvancements:(struct _NSSize *)fp8 forGlyphs:(const unsigned int *)fp12 count:(unsigned int)fp16;
- (void)getAdvancements:(struct _NSSize *)fp8 forPackedGlyphs:(const void *)fp12 length:(unsigned int)fp16;
- (void)set;
- (void)setInContext:(id)fp8;
- (id)printerFont;
- (id)screenFont;
- (id)screenFontWithRenderingMode:(int)fp8;
- (int)renderingMode;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (Class)classForCoder;
- (Class)classForKeyedArchiver;
- (id)initWithCoder:(id)fp8;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 forLongCharacter:(unsigned long)fp12 struckOverRect:(struct _NSRect)fp16;
- (const void *)ctFontRef;
- (id)lastResortFont;
- (unsigned int)hyphenGlyphForLocale:(id)fp8;
- (id)nameOfGlyph:(unsigned int)fp8;
- (id)bestMatchingFontForCharacters:(const unsigned short *)fp8 length:(unsigned int)fp12 attributes:(id)fp16 actualCoveredLength:(unsigned int *)fp20;
- (float)widthOfString:(id)fp8;
- (BOOL)isBaseFont;
- (id)afmDictionary;
- (BOOL)glyphIsEncoded:(unsigned int)fp8;
- (float)defaultLineHeightForFont;
- (float)_defaultLineHightForUILayout;
- (float)_baselineOffsetForUILayout;
- (id)encodingScheme;
- (int)glyphPacking;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 precededByGlyph:(unsigned int)fp12 isNominal:(char *)fp16;
- (int)positionsForCompositeSequence:(unsigned int *)fp8 numberOfGlyphs:(int)fp12 pointArray:(struct _NSPoint *)fp16;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 struckOverGlyph:(unsigned int)fp12 metricsExist:(char *)fp16;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 struckOverRect:(struct _NSRect)fp12 metricsExist:(char *)fp28;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 forCharacter:(unsigned short)fp12 struckOverRect:(struct _NSRect)fp16;
- (unsigned int)_defaultGlyphForChar:(unsigned short)fp8;
- (id)_coveredCharSet;
- (BOOL)_isFakeFixedPitch;
- (BOOL)_canDrawOutsideLineHeight;
- (BOOL)_glyphDrawsOutsideLineHeight:(unsigned int)fp8;
- (float)_widthOfPackedGlyphs:(const char *)fp8 count:(unsigned int)fp12;
- (BOOL)isScreenFont;
- (unsigned int)hyphenGlyphForLanguage:(id)fp8;
- (unsigned int)_numberOfGlyphs;
- (struct _NSPoint)positionOfGlyph:(unsigned int)fp8 withRelation:(int)fp12 toBaseGlyph:(unsigned int)fp16 totalAdvancement:(struct _NSSize *)fp20 metricsExist:(char *)fp24;
- (BOOL)coversAllCharactersInString:(id)fp8;
- (BOOL)coversCharacter:(unsigned short)fp8;
- (id)initWithFontRef:(unsigned long)fp8 size:(float)fp12;

@end

@interface __NSSharedFontInstanceInfo : NSObject
{
    __NSFontTypefaceInfo *_typeface;
    struct __CTFont *_platformFont;
    struct __CFString *_postscriptName;
    struct __CFString *_displayName;
    struct __CTFontDescriptor *_fontDescriptor;
    NSAffineTransform *_textTransform;
    struct __CFCharacterSet *_characterCoverage;
    struct CGAffineTransform _matrix;
    int _numberOfGlyphs;
    float _typographicLeading;
    float _defaultLineHeight;
    float _defaultLineHeightForUI;
    float _ascenderDelta;
    char *_glyphAdvancementCache;
    void *_key;
    NSFont *_variants[3];
    struct {
        unsigned int _drawsOutsideBBox:1;
        unsigned int _forceAscenderDelta:1;
        unsigned int _advanceCacheMode:2;
        unsigned int _isFixedPitch:1;
        unsigned int _reserved:27;
    } _iiFlags;
}

+ (void)initialize;
- (id)initWithTypefaceInfo:(id)fp8 key:(const void *)fp12;
- (id)fontInstanceForRenderingMode:(int)fp8;
- (struct __CTFont *)_platformFont;
- (id)_postscriptName;
- (const float *)_matrix;
- (id)_textTransform;
- (id)_displayName;
- (id)_fontDescriptor;
- (id)_characterCoverage;
- (BOOL)_hasNonNominalDescriptor;
- (BOOL)_drawsOutsideBBox;
- (float)_typographicLeading;
- (float)_defaultLineHeight:(BOOL)fp8;
- (float)_ascenderDeltaForBehavior:(int)fp8;
- (unsigned int)_numberOfGlyphs;
- (BOOL)_isFixedPitch;
- (char *)_glyphAdvancementCache:(long)fp8 renderingMode:(int)fp12;
- (void)dealloc;
- (void)finalize;

@end

@interface __NSFontTypefaceInfo : NSObject
{
    struct __CTFontDescriptor *_normalizedFontDescriptor;
    struct __CFDictionary *_liveInstances;
    struct __CFString *_postscriptName;
    struct __CFString *_familyName;
    struct __CFCharacterSet *_characterCoverage;
    struct __CFString *_fontFallbackType;
    float *_glyphAdvancementCache;
    unsigned short *_latin1MappingTable;
    struct {
        unsigned int _isDefaultFace:1;
        unsigned int _hasKernPair:1;
        unsigned int _checkedLatin1Table:1;
        unsigned int _isSymbol:1;
        unsigned int _isDingbats:1;
        unsigned int _isDefaultFixedPitch:1;
        unsigned int _needValidation:1;
        unsigned int _isLucidaGrande:1;
        unsigned int _isHiragino:1;
        unsigned int _reserved:23;
    } _tiFlags;
}

+ (void)initialize;
+ (id)typefaceInfoForFontDescriptor:(id)fp8;
+ (id)typefaceInfoForKnownFontDescriptor:(id)fp8;
+ (id)typefaceInfoForPostscriptName:(id)fp8;
- (BOOL)_validate;
- (void)_setNeedsValidation:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (id)initWithFontDescriptor:(id)fp8;
- (id)fontInstanceForFontDescriptor:(id)fp8 size:(float)fp12 affineTransform:(id)fp16 renderingMode:(int)fp20;
- (void)detachInstanceInfo:(id)fp8;
- (id)normalizedFontDescriptor;
- (id)_postscriptName;
- (id)_familyName;
- (id)_nominalCharacterCoverage;
- (BOOL)_isDefaultFace;
- (BOOL)_isLucidaGrande;
- (BOOL)_isHiragino;
- (BOOL)_isSymbol;
- (BOOL)_isDingbats;
- (BOOL)_isDefaultFixedPitch;
- (struct __CFString *)_fontFallbackType;
- (float *)_glyphAdvancementCache:(long)fp8;
- (const unsigned short *)_latin1MappingTableWithPlatformFont:(struct __CTFont *)fp8 hasKernPair:(_Bool *)fp12;

@end

@interface NSFontManager : NSObject
{
    id _panel;
    unsigned int _myNotification;
    SEL _action;
    int _whatToDo;
    unsigned int _traitToChange;
    NSFont *_selFont;
    struct _fmFlags _fmFlags;
    unsigned short _lastPos;
    id _delegate;
    id _collections;
    id _hiddenCollections;
    unsigned int _reservedFMint4;
}

+ (void)setFontPanelFactory:(Class)fp8;
+ (void)setFontManagerFactory:(Class)fp8;
+ (id)sharedFontManager;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_loadFontFiles;
- (int)_reloadFontInfoIfNecessary:(id)fp8;
- (id)_defaultFontSet;
- (id)_oldFontSetWithName:(id)fp8;
- (id)_oldFontSetNames;
- (void)_noteFontCollectionsChanged;
- (void)noteFontCollectionsChanged;
- (void)noteFontFavoritesChanged;
- (void)saveFontCollection:(id)fp8 withName:(id)fp12;
- (void)setFontMenu:(id)fp8;
- (BOOL)isMultiple;
- (id)selectedFont;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setSelectedFont:(id)fp8 isMultiple:(BOOL)fp12;
- (void)setSelectedAttributes:(id)fp8 isMultiple:(BOOL)fp12;
- (id)convertFont:(id)fp8;
- (id)convertAttributes:(id)fp8;
- (id)fontMenu:(BOOL)fp8;
- (id)_menu;
- (void)_setFontPanel:(id)fp8;
- (id)fontPanel:(BOOL)fp8;
- (id)fontNameWithFamily:(id)fp8 traits:(unsigned int)fp12 weight:(int)fp16;
- (id)fontWithFamily:(id)fp8 traits:(unsigned int)fp12 weight:(int)fp16 size:(float)fp20;
- (unsigned int)traitsOfFont:(id)fp8;
- (int)weightOfFont:(id)fp8;
- (id)availableFonts;
- (id)availableFontFamilies;
- (id)availableMembersOfFontFamily:(id)fp8;
- (id)convertFont:(id)fp8 toFace:(id)fp12;
- (id)convertFont:(id)fp8 toSize:(float)fp12;
- (id)convertFont:(id)fp8 toFamily:(id)fp12;
- (id)convertFont:(id)fp8 toHaveTrait:(unsigned int)fp12;
- (id)convertFont:(id)fp8 toNotHaveTrait:(unsigned int)fp12;
- (id)convertWeight:(BOOL)fp8 ofFont:(id)fp12;
- (void)addFontTrait:(id)fp8;
- (void)removeFontTrait:(id)fp8;
- (id)modifyFontTrait:(id)fp8;
- (void)modifyFont:(id)fp8;
- (void)orderFrontFontPanel:(id)fp8;
- (void)orderFrontStylesPanel:(id)fp8;
- (void)orderFrontFontOptionsPanel:(id)fp8;
- (void)modifyFontViaPanel:(id)fp8;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (BOOL)sendAction;
- (BOOL)worksWhenModal;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (BOOL)fontNamed:(id)fp8 hasTraits:(unsigned int)fp12;
- (id)availableFontNamesWithTraits:(unsigned int)fp8;
- (id)convertFont:(id)fp8 toApproximateTraits:(unsigned int)fp12;
- (id)localizedNameForFamily:(id)fp8 face:(id)fp12;
- (id)_descStringForFont:(id)fp8;
- (BOOL)_isInternalFontName:(id)fp8;
- (id)_displayName:(id)fp8;

@end

@interface NSFontPanel : NSPanel
{
    NSFontManager *_manager;
    id _familyList;
    id _faceList;
    id _sizeList;
    id _mainCollectionList;
    id _sizeField;
    id _sizeSlider;
    id _sizeSliderBox;
    id _preview;
    id _previewCaption;
    id _mainSplitView;
    id _mmCollectionList;
    id _mmFamilyList;
    id _mmFaceList;
    id _mmSizeList;
    id _extrasPopup;
    id _searchField;
    id _fixedListButton;
    id _sliderButton;
    id _accessoryView;
    struct __fpFlags _fpFlags;
    float _cachedSizeValue;
    id _separator;
    id _splitVue;
    id _regularModeBox;
    id _miniModeBox;
    id _modeBoxSuperview;
    id _collectionLabel;
    id _sizeLabel;
    id _faceLabel;
    id _familyLabel;
    id _sizeStyleButton;
    id _newSizeField;
    id _editSizeList;
    id _editSizeListBox;
    id _editSizeSliderBox;
    id _editSizeSliderMaxField;
    id _editSizeSliderMinField;
    id _sizeEditWindow;
    id _defaultCollection;
    id _defaultCollectionRep;
    id _currentCollectionRep;
    id _availableSizes;
    id _collections;
    int _lastPane;
    NSFontDescriptor *_prevSelectedFontDescriptor;
    id _searchTimer;
    id _unused0;
    void *_carbonNotification;
    id _collectionRenameButton;
    id _reserved3[2];
    id _addCollectionButton;
    id _removeCollectionButton;
    id _previewBox;
    int _genCount;
    id _collectionsPboard;
    float _fontPanelPreviewHeight;
    id _typographyPanel;
    id _actionButton;
    id _fontEffectsBox;
    int _seqNumber;
    int _sizeStyle;
    id _targetObject;
    id _unused13;
    id _unused14;
    id _unused15;
    id _unused16;
    int _unused17;
    id _unsed18;
    id _unused19;
    id _unused20;
    id _unused21;
    id _unused22;
    id _unused23;
    id _unused24;
    id _unused25;
    id _unused26;
    id _unused27;
    id _unused28;
    id _unused29;
    id _unused30;
    id _unused31;
    id _unused32;
    id _unused33;
    id _unused34;
    id _unused35;
    id _unused36;
    id _unused37;
    id _unused38;
    id _unused39;
    id _unused40;
    id _unused41;
    id _unused42;
    id _unused43;
    id _Reserved32[16];
    id _unused44;
    id _unused45;
    id _unused46;
    id _unused47;
}

+ (BOOL)sharedFontPanelExists;
+ (id)sharedFontPanel;
- (void)awakeFromNib;
- (void)_setup;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (oneway void)release;
- (void)dealloc;
- (void *)_carbonNotification;
- (void)setCarbonNotification:(id)fp8;
- (void)_sendCarbonNotification;
- (void)_startTimer:(id)fp8;
- (void)_stopSearchTimer;
- (void)_setCurrentCollectionRep:(id)fp8;
- (void)_searchRegularCollection;
- (void)_searchFavoriteStyleCollection;
- (void)_searchChanged:(id)fp8;
- (BOOL)_inPreview;
- (BOOL)_inMiniMode;
- (BOOL)_canShowEffects;
- (BOOL)_showEffects;
- (void)_checkMiniMode:(int)fp8;
- (void)_checkCollectionMoveOut:(int)fp8;
- (void)_checkFavoriteMode;
- (BOOL)_inHideCollectionsMode;
- (BOOL)_inHideFaceMode;
- (BOOL)_inFavMode;
- (void)_setPreviewFont:(id)fp8;
- (BOOL)_isCurrentCollectionFavorites;
- (id)_selectedFamilyName;
- (id)_selectedFaceName;
- (id)_selectedFontName;
- (id)_selectedFamilyArray;
- (id)_selectedSize;
- (id)_selectedCollectionName;
- (id)_selectedCollectionStyle;
- (id)_selectedCollectionDescriptors;
- (void)reloadDefaultFontFamilies;
- (id)accessoryView;
- (void)setAccessoryView:(id)fp8;
- (BOOL)_updateContentsIfNecessary;
- (void)setDelegate:(id)fp8;
- (void)_sortCollections;
- (id)_createFontPanelSizeRep;
- (BOOL)tableView:(id)fp8 shouldEditTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (void)tableViewSelectionIsChanging:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16 localized:(BOOL)fp20;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (int)numberOfRowsInTableView:(id)fp8;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;
- (void)splitViewDidResizeSubviews:(id)fp8;
- (void)savePreviewHeightInDefaults:(id)fp8;
- (float)splitView:(id)fp8 constrainSplitPosition:(float)fp12 ofSubviewAt:(int)fp16;
- (int)numberOfItemsInComboBox:(id)fp8;
- (id)comboBox:(id)fp8 objectValueForItemAtIndex:(int)fp12;
- (unsigned int)comboBox:(id)fp8 indexOfItemWithStringValue:(id)fp12;
- (void)_chooseCollection:(id)fp8;
- (void)_chooseFace:(id)fp8;
- (void)_chooseFamily:(id)fp8;
- (void)_setFont:(id)fp8;
- (void)_setRecents:(id)fp8;
- (void)loadFaces:(id)fp8;
- (void)_chooseBestMatchingFace;
- (void)setSize:(id)fp8;
- (void)setSizeTitle:(id)fp8;
- (void)setChooser:(id)fp8;
- (void)_chooseSizeFromList:(id)fp8;
- (BOOL)worksWhenModal;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (void)_chooseSizeFromField:(id)fp8;
- (void)_chooseSize:(id)fp8;
- (void)_chooseSizeFromSlider:(id)fp8;
- (void)_makeNewCollection:(id)fp8;
- (void)_removeCollection:(id)fp8;
- (void)_sheetDidDismiss:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_sheetDidEndShouldDelete:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_openActionButton:(id)fp8;
- (void)_openExtrasPopup:(id)fp8;
- (void)togglePreview:(BOOL)fp8;
- (void)_sizeEditDone:(id)fp8;
- (void)_addSizeToList:(id)fp8;
- (void)_removeSizeFromList:(id)fp8;
- (void)_resetSizeList:(id)fp8;
- (void)_setBox:(id)fp8 enabled:(BOOL)fp12;
- (void)_changeSizeStyle:(id)fp8;
- (void)_addFontDescriptorFromDrag:(id)fp8 toCollectionAtIndex:(int)fp12;
- (void)_removeFontDescriptorFromDrag:(id)fp8 point:(struct _NSPoint)fp12;
- (void)_populatePopup:(id)fp8 withTableView:(id)fp12;
- (void)_populateMiniMode;
- (void)windowDidUpdate:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)_endLiveResize;
- (BOOL)_showOpaqueGrowBox;
- (void)applicationDidBecomeActive:(id)fp8;
- (void)_validateSizes:(int)fp8;
- (void)_validateFaces:(int)fp8;
- (void)_validateCollections:(int)fp8;
- (struct _NSSize)windowWillResize:(id)fp8 toSize:(struct _NSSize)fp12;
- (void)_validateExtrasButton:(id)fp8;
- (void)_positionLabels;
- (void)_resizeContentsOfMainBox;
- (void)_resizeContentsOfMiniMode;
- (void)_resizeContentsOfPreviewBox;
- (void)_reflectFont;
- (void)_setRecents;
- (void)setPanelFont:(id)fp8 isMultiple:(BOOL)fp12;
- (id)panelConvertFont:(id)fp8;
- (void)_setAttributes:(id)fp8 isMultiple:(BOOL)fp12;
- (id)convertAttributes:(id)fp8;
- (void)_sizeListChanged:(id)fp8;
- (void)_collectionsChanged:(id)fp8;
- (void)_notifyTypographyPanel;
- (void)_toggleTypographyPanel;
- (id)_typographyPanel;
- (id)_currentFont;
- (void)_findFont:(id)fp8;

@end

@interface NSFontPanelImagePopUpButtonCell : NSPopUpButtonCell
{
    NSImage *image;
    NSImage *alternateImage;
}

- (void)dealloc;
- (float)_extraWidthForCellHeight:(float)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setAlternateImage:(id)fp8;
- (id)alternateImage;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSFontPanelSizeListCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSFontPanelCanDragTableView : NSFontPanelTableView
{
    NSString *fontDescriptorKey;
}

- (void)setFontDescriptorKey:(id)fp8;
- (void)mouseDown:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;

@end

@interface NSFontPanelCollectionsTableView : NSFontPanelTableView
{
    int lastSelectedItem;
}

- (int)lastSelectedItem;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)draggingExited:(id)fp8;

@end

@interface NSFontPanelTableView : NSTableView
{
}

- (void)setFontPanel:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (BOOL)needsPanelToBecomeKey;

@end

@interface NSFontPanelPreviewBackground : NSBox
{
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSFontPanelSplitView : NSSplitView
{
}

- (void)setPanel:(id)fp8;
- (float)dividerThickness;
- (void)drawDividerInRect:(struct _NSRect)fp8;

@end

@interface NSFontPanelFindFontButton : NSButton
{
}

- (BOOL)acceptsFirstResponder;

@end

@interface NSApplication (NSFontPanel)
- (void)orderFrontFontPanel:(id)fp8;
@end

@interface NSForm : NSMatrix
{
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (float)_maxWidth;
- (void)_resetTitleWidths;
- (void)calcSize;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)sizeToFit;
- (int)indexOfSelectedItem;
- (void)setEntryWidth:(float)fp8;
- (void)setInterlineSpacing:(float)fp8;
- (void)setBordered:(BOOL)fp8;
- (void)setBezeled:(BOOL)fp8;
- (void)setTitleAlignment:(int)fp8;
- (void)setTextAlignment:(int)fp8;
- (void)setFont:(id)fp8;
- (id)font;
- (void)setTitleFont:(id)fp8;
- (void)setTextFont:(id)fp8;
- (id)cellAtIndex:(int)fp8;
- (void)drawCellAtIndex:(int)fp8;
- (id)addEntry:(id)fp8;
- (id)insertEntry:(id)fp8 atIndex:(int)fp12;
- (void)removeEntryAtIndex:(int)fp8;
- (int)indexOfCellWithTag:(int)fp8;
- (void)selectTextAtIndex:(int)fp8;
- (void)setTitleBaseWritingDirection:(int)fp8;
- (void)setTextBaseWritingDirection:(int)fp8;

@end

@interface NSForm (NSFormAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityFocusedUIElement;
@end

@interface NSFormCell : NSActionCell
{
    float _titleWidth;
    id _titleCell;
    float _titleEndPoint;
}

+ (void)initialize;
- (id)init;
- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)acceptsFirstResponder;
- (float)titleWidth:(struct _NSSize)fp8;
- (float)titleWidth;
- (void)setTitleWidth:(float)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)setMnemonicLocation:(unsigned int)fp8;
- (unsigned int)mnemonicLocation;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)fp8;
- (id)titleFont;
- (void)setTitleFont:(id)fp8;
- (int)titleAlignment;
- (void)setTitleAlignment:(int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isOpaque;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (BOOL)_highlightsWithHighlightRect;
- (void)_drawLiveResizeHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)_titleRectForCellFrame:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)_selectOrEdit:(const struct _NSRect *)fp8 inView:(id)fp12 target:(id)fp16 editor:(id)fp20 event:(id)fp24 start:(int)fp28 end:(int)fp32;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)resetCursorRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSRange)_characterRangeForPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
- (void)setPlaceholderString:(id)fp8;
- (id)placeholderString;
- (void)setPlaceholderAttributedString:(id)fp8;
- (id)placeholderAttributedString;
- (int)titleBaseWritingDirection;
- (void)setTitleBaseWritingDirection:(int)fp8;

@end

@interface NSFormCell (NSFormCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSRect)_accessibilityTitleRect;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSFrameView : NSView
{
    unsigned int styleMask;
    NSString *_title;
    NSCell *titleCell;
    NSButton *closeButton;
    NSButton *zoomButton;
    NSButton *minimizeButton;
    BOOL resizeByIncrement;
    BOOL unused;
    unsigned char tabViewCount;
    struct _NSSize resizeParameter;
    int shadowState;
}

+ (void)initialize;
+ (void)initTitleCell:(id)fp8 styleMask:(unsigned int)fp12;
+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (struct _NSSize)minContentSizeForMinFrameSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (unsigned int)_validateStyleMask:(unsigned int)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (void)shapeWindow;
- (void)tileAndSetWindowShape:(BOOL)fp8;
- (void)tile;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_drawFrameRects:(struct _NSRect)fp8;
- (void)drawFrame:(struct _NSRect)fp8;
- (void)drawThemeContentFill:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWindowBackgroundRect:(struct _NSRect)fp8;
- (void)drawWindowBackgroundRegion:(void *)fp8;
- (float)contentAlpha;
- (void)_windowChangedKeyState;
- (void)_updateButtonState;
- (BOOL)_isSheet;
- (BOOL)_isUtility;
- (void)setShadowState:(int)fp8;
- (int)shadowState;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)fp8;
- (void)_hideToolbarWithAnimation:(BOOL)fp8;
- (float)_distanceFromToolbarBaseToTitlebar;
- (int)_shadowType;
- (unsigned int)_shadowFlags;
- (void)_setShadowParameters;
- (void)_drawFrameShadowAndFlushContext:(id)fp8;
- (void)setUpGState;
- (void)adjustHalftonePhase;
- (void)systemColorsDidChange:(id)fp8;
- (id)frameColor;
- (id)contentFill;
- (void)tabViewAdded;
- (void)tabViewRemoved;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)titleCell;
- (void)initTitleCell:(id)fp8;
- (void)setResizeIncrements:(struct _NSSize)fp8;
- (struct _NSSize)resizeIncrements;
- (void)setAspectRatio:(struct _NSSize)fp8;
- (struct _NSSize)aspectRatio;
- (unsigned int)styleMask;
- (id)representedFilename;
- (void)setRepresentedFilename:(id)fp8;
- (void)setDocumentEdited:(BOOL)fp8;
- (void)_setFrameNeedsDisplay:(BOOL)fp8;
- (BOOL)frameNeedsDisplay;
- (id)titleFont;
- (struct _NSRect)_maxTitlebarTitleRect;
- (struct _NSRect)titlebarRect;
- (void)_setUtilityWindow:(BOOL)fp8;
- (void)_setNonactivatingPanel:(BOOL)fp8;
- (void)setIsClosable:(BOOL)fp8;
- (void)setIsResizable:(BOOL)fp8;
- (id)closeButton;
- (id)minimizeButton;
- (id)zoomButton;
- (struct _NSSize)miniaturizedSize;
- (void)_clearDragMargins;
- (void)_resetDragMargins;
- (void)setTitle:(id)fp8 andDefeatWrap:(BOOL)fp12;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (struct _NSRect)contentRect;
- (struct _NSSize)minFrameSize;

@end

@interface NSColor (NSTitledFrameColors)
+ (void)updateFrameColors:(id)fp8;
+ (id)notActiveWindowFrameColor;
+ (id)mainWindowFrameColor;
+ (id)keyWindowFrameShadowColor;
+ (id)mainWindowFrameShadowColor;
+ (id)notActiveWindowFrameShadowColor;
+ (id)tearOffTitlebarShadowColor;
+ (id)keyWindowFrameHighlightColor;
+ (id)mainWindowFrameHighlightColor;
+ (id)notActiveWindowFrameHighlightColor;
+ (id)notActiveWindowTitlebarTextColor;
+ (id)tearOffTitlebarHighlightColor;
+ (id)windowFrameOutlineColor;
- (id)shadeColorWithDistance:(float)fp8 towardsColor:(id)fp12;
@end

@interface NSGIFImageReader : NSImageReader
{
    struct {
        NSData *sourceData;
        char *data;
        unsigned int remaining;
        struct {
            char valid;
            char userInput;
            char hasTransparency;
            int disposal;
            int transparencyIndex;
            float delay;
        } graphicControl;
        char loggedError;
        int disposalMethod;
        struct {
            short left;
            short top;
            short width;
            short height;
        } disposalRect;
        char *disposalData;
        int currentFrame;
        float frameDuration;
    } _decompressor;
    struct {
        int logicalScreenWidth;
        int logicalScreenHeight;
        int globalColorTableResolution;
        int globalBackgroundColorIndex;
        struct {
            char valid;
            char sorted;
            char color;
            int size;
            char *table;
        } globalColorTable;
        float pixelAspectRatio;
        int loopCount;
        unsigned int bufferingSize;
        NSMutableData *colorSyncData;
        int imageCount;
        int width;
        int height;
        char hasTransparency;
        char hasColor;
    } _imageInfo;
    int _currentFrame;
}

- (void)dealloc;
- (void)finalize;
- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;
- (int)frameCount;
- (int)currentFrame;
- (void)setCurrentFrame:(int)fp8;
- (float)currentFrameDuration;
- (id)colorTable;
- (int)loopCount;
- (unsigned int)bufferingSize;
- (id)colorSyncData;

@end

@interface NSGIFImageWriter : NSImageWriter
{
}

- (id)representationWithImageProperties:(id)fp8 withProperties:(id)fp12;

@end

@interface NSGlyphGenerator : NSObject
{
}

+ (BOOL)_compatibleWithRulebookVersion:(int)fp8;
+ (id)sharedGlyphGenerator;
+ (id)sharedGlyphGeneratorForTypesetterBehavior:(int)fp8;
- (void)generateGlyphsForLayoutManager:(id)fp8 range:(struct _NSRange)fp12 desiredNumberOfCharacters:(unsigned int)fp20 startingAtGlyphIndex:(unsigned int)fp24 completedRange:(struct _NSRange *)fp28 nextGlyphIndex:(unsigned int *)fp32;
- (void)generateGlyphsForGlyphStorage:(id)fp8 desiredNumberOfCharacters:(unsigned int)fp12 glyphIndex:(unsigned int *)fp16 characterIndex:(unsigned int *)fp20;

@end

@interface NSGlyphGenerator (NSGlyphGenPrivate)
+ (void)halt;
- (id)characterSetCoveredByFont:(id)fp8 language:(id)fp12;
- (void)singlestep:(int)fp8;
- (int)_runInitBook:(id)fp8;
- (void)_callImplementor:(int)fp8 context:(struct _NSGlyphGenContext *)fp12 chars:(id)fp16 glyphs:(id)fp20 stringBuffer:(struct _NSRAStringBuffer *)fp24 font:(id)fp28;
- (void)_recurWithContext:(struct _NSGlyphGenContext *)fp8 chars:(id)fp12 glyphs:(id)fp16 stringBuffer:(struct _NSRAStringBuffer *)fp20 font:(id)fp24;
- (unsigned int)lineBreakInString:(id)fp8 beforeIndex:(unsigned int)fp12 withinRange:(struct _NSRange)fp16 useBook:(id)fp24;
- (struct _NSRange)doubleClickInString:(id)fp8 atIndex:(int)fp12 useBook:(id)fp16;
- (unsigned int)nextWordInString:(id)fp8 fromIndex:(int)fp12 useBook:(id)fp16 forward:(BOOL)fp20;
- (unsigned int)hyphenGlyphForFont:(id)fp8 language:(id)fp12;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setOption:(id)fp8 value:(int)fp12;
- (int)optionSetting:(id)fp8;
@end

@interface NSGlyphHole : NSObject
{
    unsigned int glyphIndex;
    struct _NSRange characterRange;
    unsigned int refCount;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)retain;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)initWithGlyphIndex:(unsigned int)fp8 characterRange:(struct _NSRange)fp12;
- (id)init;
- (int)compare:(id)fp8;
- (id)description;

@end

@interface NSCIDGlyphInfo : NSGlyphInfo
{
    unsigned short _cid;
    int _collection;
}

+ (id)glyphInfoWithCharacterIdentifier:(unsigned int)fp8 collection:(int)fp12 baseString:(id)fp16;
- (id)initWithCharacterIdentifier:(unsigned int)fp8 collection:(int)fp12 baseString:(id)fp16;
- (unsigned int)_glyphForFont:(id)fp8 baseString:(id)fp12;
- (unsigned int)characterIdentifier;
- (int)characterCollection;
- (void)encodeWithCoder:(id)fp8;
- (id)description;

@end

@interface NSGlyphNameGlyphInfo : NSIdentityGlyphInfo
{
    NSString *_name;
}

- (id)initWithGlyphName:(id)fp8 glyph:(unsigned int)fp12 forFont:(id)fp16 baseString:(id)fp20;
- (void)dealloc;
- (id)glyphName;
- (void)encodeWithCoder:(id)fp8;
- (id)description;

@end

@interface NSIdentityGlyphInfo : NSGlyphInfo
{
    NSFont *_font;
    unsigned int _glyph;
}

+ (id)glyphInfoWithGlyph:(unsigned int)fp8 forFont:(id)fp12 baseString:(id)fp16;
- (id)initWithGlyph:(unsigned int)fp8 forFont:(id)fp12 baseString:(id)fp16;
- (void)dealloc;
- (unsigned int)_glyphForFont:(id)fp8 baseString:(id)fp12;
- (unsigned int)_glyph;
- (void)encodeWithCoder:(id)fp8;
- (id)description;

@end

@interface NSGlyphInfo : NSObject <NSCopying, NSCoding>
{
    NSString *_baseString;
}

+ (id)glyphInfoWithGlyphName:(id)fp8 forFont:(id)fp12 baseString:(id)fp16;
+ (id)glyphInfoWithGlyph:(unsigned int)fp8 forFont:(id)fp12 baseString:(id)fp16;
+ (id)glyphInfoWithCharacterIdentifier:(unsigned int)fp8 collection:(int)fp12 baseString:(id)fp16;
+ (void)initialize;
- (id)initWithBaseString:(id)fp8;
- (void)dealloc;
- (unsigned int)_glyphForFont:(id)fp8 baseString:(id)fp12;
- (id)_baseString;
- (id)glyphName;
- (unsigned int)characterIdentifier;
- (int)characterCollection;
- (void)encodeWithCoder:(id)fp8;
- (Class)classForKeyedArchiver;
- (id)initWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSGraphicCell : NSCell
{
}

+ (void)initialize;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (id)setImageNamed:(id)fp8 forView:(id)fp12;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSSize)cellSize;
- (id)richTextForView:(id)fp8;
- (void)readRichText:(id)fp8 forView:(id)fp12;

@end

@interface NSGraphicsContext : NSObject
{
}

+ (void)initialize;
+ (id)currentContext;
+ (id)_lastOnScreenContext;
+ (void)setCurrentContext:(id)fp8;
+ (BOOL)currentContextDrawingToScreen;
+ (id)graphicsContextWithAttributes:(id)fp8;
+ (id)graphicsContextWithWindow:(id)fp8;
+ (id)graphicsContextWithBitmapImageRep:(id)fp8;
+ (id)graphicsContextWithGraphicsPort:(void *)fp8 flipped:(BOOL)fp12;
+ (void)saveGraphicsState;
+ (void)restoreGraphicsState;
+ (void)setGraphicsState:(int)fp8;
- (id)attributes;
- (BOOL)isDrawingToScreen;
- (void)saveGraphicsState;
- (void)restoreGraphicsState;
- (void)flushGraphics;
- (void *)focusStack;
- (void)setFocusStack:(void *)fp8;
- (void *)graphicsPort;
- (BOOL)isFlipped;
- (void)_releaseCIContext;

@end

@interface NSGraphicsContext (NSQuartzCoreAdditions)
- (id)CIContext;
@end

@interface NSGraphicsContext (NSGraphicsContext_RenderingOptions)
- (void)setShouldAntialias:(BOOL)fp8;
- (BOOL)shouldAntialias;
- (void)setImageInterpolation:(int)fp8;
- (int)imageInterpolation;
- (void)setPatternPhase:(struct _NSPoint)fp8;
- (struct _NSPoint)patternPhase;
- (void)setCompositingOperation:(int)fp8;
- (int)compositingOperation;
- (int)colorRenderingIntent;
- (void)setColorRenderingIntent:(int)fp8;
@end

@interface NSGrayFrame : NSThemeFrame
{
    BOOL _bottomCornerRounded;
}

+ (void)initialize;
+ (void)drawBevel:(struct _NSRect)fp8 inFrame:(struct _NSRect)fp24 topCornerRounded:(BOOL)fp40 bottomCornerRounded:(BOOL)fp44;
+ (struct _NSSize)sizeOfTitlebarButtons:(unsigned int)fp8;
+ (float)_minXTitlebarWidgetInset:(unsigned int)fp8;
+ (float)_maxXTitlebarWidgetInset:(unsigned int)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)_setUtilityWindow:(BOOL)fp8;
- (void)setBottomCornerRounded:(BOOL)fp8;
- (BOOL)bottomCornerRounded;
- (struct _NSSize)_topCornerSize;
- (struct _NSSize)_bottomCornerSize;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_drawTitleBar:(struct _NSRect)fp8;
- (void)drawWindowBackgroundRect:(struct _NSRect)fp8 level:(int)fp24;
- (void)drawWindowBackgroundRect:(struct _NSRect)fp8;
- (void)drawWindowBackgroundRegion:(void *)fp8 level:(int)fp12;
- (void)drawWindowBackgroundRegion:(void *)fp8;
- (unsigned int)_shadowFlags;
- (id)contentFill;
- (float)_minYTitlebarButtonsOffset;
- (float)_minYTitlebarTitleOffset;
- (struct _NSRect)_maxXminYResizeRect;
- (struct _NSRect)_growBoxRect;
- (void)_drawGrowBoxWithClip:(struct _NSRect)fp8;
- (BOOL)_inactiveButtonsNeedMask;
- (float)_minXTitlebarWidgetInset;
- (float)_maxXTitlebarWidgetInset;
- (struct _NSPoint)_toolbarButtonOrigin;
- (float)_windowTitlebarButtonSpacingWidth;
- (struct _NSSize)sizeOfTitlebarToolbarButton;

@end

@interface NSHelpAttachment : NSTextAttachment
{
    NSString *markerName;
    NSString *fileName;
}

- (id)initWithFileName:(id)fp8 markerName:(id)fp12;
- (id)markerName;
- (id)fileName;
- (void)dealloc;

@end

@interface _NSContextHelpBorderView : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSHelpManager : NSObject
{
    struct _NSMapTable *_helpMapTable;
    struct _NSMapTable *_keyMapTable;
    struct _NSMapTable *_bundleMapTable;
    NSWindow *_helpWindow;
    NSWindow *_shadowWindow;
    NSWindow *_evtWindow;
    NSBundle *_helpBundle;
}

+ (id)sharedHelpManager;
+ (void)setContextHelpModeActive:(BOOL)fp8;
+ (BOOL)isContextHelpModeActive;
- (void)dealloc;
- (void)finalize;
- (void)setContextHelp:(id)fp8 forObject:(id)fp12;
- (void)removeContextHelpForObject:(id)fp8;
- (id)contextHelpForObject:(id)fp8;
- (BOOL)showContextHelpForObject:(id)fp8 locationHint:(struct _NSPoint)fp12;
- (void)openHelpAnchor:(id)fp8 inBook:(id)fp12;
- (void)findString:(id)fp8 inBook:(id)fp12;

@end

@interface NSApplication (NSApplicationHelpExtension)
- (void)activateContextHelpMode:(id)fp8;
- (void)showHelp:(id)fp8;
@end

@interface NSBundle (NSBundleHelpExtension)
- (id)contextHelpForKey:(id)fp8;
@end

@interface NSHelpManager (NSPrivateClickHelp)
+ (BOOL)_isCtrlAltForHelpDesired;
+ (void)_setCtrlAltForHelpDesired:(BOOL)fp8;
+ (BOOL)_keyboardIsOldNeXT;
+ (BOOL)_activateHelpModeBasedOnEvent:(id)fp8;
- (void)_captureInput;
- (void)_releaseInput;
- (void)_showDropShadow;
- (void)_hideDropShadow;
- (void)_orderFrontHelpWindow;
- (BOOL)_orderOutHelpWindow;
- (BOOL)_orderOutHelpWindowAfterEventMask:(unsigned int)fp8;
- (id)_helpWindow;
@end

@interface NSHelpManager (NSHelpManagerPrivate)
- (void)_setHelpKey:(id)fp8 forObject:(id)fp12;
- (void)_removeHelpKeyForObject:(id)fp8;
- (id)_helpBundleForObject:(id)fp8;
- (id)_helpKeyForObject:(id)fp8;
- (id)_resolveHelpKeyForObject:(id)fp8;
- (void)_setBundleForHelpSearch:(id)fp8;
- (struct _NSRect)_screenRectContainingPoint:(struct _NSPoint)fp8;
- (void)_placeHelpWindowNear:(struct _NSPoint)fp8;
- (void)_prepareHelpWindow:(id)fp8 locationHint:(struct _NSPoint)fp12;
- (void)_cleanupHelpForQuit;
- (void)showHelpFile:(id)fp8 context:(int)fp12;
- (BOOL)registerHelpBook;
@end

@interface NSHyphenator : NSObject
{
    struct _NSMapTable *exceptionsTable;
    struct _NSMapTable *patternTable;
    char *patternMemory;
    unsigned int maxPatternLength;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (unsigned int)getHyphenLocations:(unsigned int *)fp8 inString:(id)fp12;
- (unsigned int)getHyphenLocations:(unsigned int *)fp8 inString:(id)fp12 wordAtIndex:(unsigned int)fp16;

@end

@interface NSIBHelpConnector : NSObject <NSCoding>
{
    id _destination;
    NSString *_file;
    NSString *_marker;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)source;
- (void)setSource:(id)fp8;
- (id)destination;
- (void)setDestination:(id)fp8;
- (id)label;
- (void)setLabel:(id)fp8;
- (id)file;
- (void)setFile:(id)fp8;
- (id)marker;
- (void)setMarker:(id)fp8;
- (void)replaceObject:(id)fp8 withObject:(id)fp12;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSIBObjectData : NSObject <NSCoding>
{
    id rootObject;
    struct _NSMapTable *objectTable;
    struct _NSMapTable *nameTable;
    NSMutableSet *visibleWindows;
    NSMutableArray *connections;
    id firstResponder;
    id fontManager;
    struct _NSMapTable *oidTable;
    unsigned int nextOid;
    struct _NSMapTable *classTable;
    struct _NSMapTable *instantiatedObjectTable;
    NSString *targetFramework;
    id _document;
    id _reserved;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)instantiateObject:(id)fp8;
- (void)nibInstantiateWithOwner:(id)fp8;
- (void)nibInstantiateWithOwner:(id)fp8 topLevelObjects:(id)fp12;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSIBObjectData (NSCompatibility)
- (void)_encodeMapTable:(struct _NSMapTable *)fp8 forTypes:(const char *)fp12 withCoder:(id)fp16;
- (void)_readVersion0:(id)fp8;
- (void)_assignObjectIds;
@end

@interface NSNibAXRelationshipConnector (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSNibAXAttributeConnector (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSObject (NSIBObjectDataAXExtras)
- (BOOL)_isAXConnector;
@end

@interface NSICOImageReader : NSImageReader
{
    short resourceType;
    short iconInfoCount;
    short curIconInfoIndex;
    BOOL headerLoaded;
    struct {
        int;
        int;
        int;
        int;
        int;
        int;
        char *;
        char *;
        char *;
        char *;
        char;
    } *iconInfo;
}

- (unsigned int)numberOfImages;
- (void)setCurrentImageNumber:(unsigned int)fp8;
- (unsigned int)currentImageNumber;
- (unsigned char)getByte;
- (unsigned short)getLEWord;
- (unsigned long)getLELong;
- (void)dealloc;
- (void)finalize;
- (int)bitsPerPixel;
- (int)actualBitsPerPixel;
- (int)bytesPerRow;
- (int)bytesPerPlane;
- (int)numberOfPlanes;
- (struct _NSSize)size;
- (int)bitsPerSample;
- (int)pixelsWide;
- (int)pixelsHigh;
- (unsigned int)numberOfPaletteEntries;
- (const char *)palette;
- (const char *)bitmapData;
- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;

@end

@interface NSObsoleteBitmap : NSObject
{
    char *name;
    int isBuiltIn;
}

- (id)initWithCoder:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSImage : NSObject <NSCopying, NSCoding>
{
    NSString *_name;
    struct _NSSize _size;
    struct __imageFlags _flags;
    id _reps;
    NSColor *_color;
}

+ (void)initialize;
+ (BOOL)canInitWithPasteboard:(id)fp8;
+ (id)_imageNamed:(id)fp8;
+ (id)_findSystemImageNamed:(id)fp8;
+ (id)imageNamed:(id)fp8;
+ (id)_searchForImageNamed:(id)fp8;
+ (id)_searchForSystemImageNamed:(id)fp8;
+ (void)_invalidateImageTypeCaches;
+ (id)imageFileTypes;
+ (id)imagePasteboardTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (struct _NSRepresentationInfo *)_newRepresentation:(id)fp8;
- (struct _NSRepresentationInfo *)_newLazyRepresentation:(int)fp8:(id)fp12:(id)fp16;
- (struct _NSRepresentationInfo *)_newLazyIconRefRepresentation:(struct OpaqueIconRef *)fp8 ofSize:(int)fp12;
- (BOOL)_useIconNamed:(id)fp8 from:(id)fp12;
- (id)_useSharedKitWindow:(int)fp8 rect:(const struct _NSRect *)fp12;
- (id)initByReferencingFile:(id)fp8;
- (id)initWithContentsOfFile:(id)fp8;
- (id)initWithContentsOfURL:(id)fp8;
- (id)initByReferencingURL:(id)fp8;
- (id)initWithData:(id)fp8;
- (id)initWithSize:(struct _NSSize)fp8;
- (id)init;
- (id)initFromImage:(id)fp8 rect:(struct _NSRect)fp12;
- (void)getImage:(id *)fp8 rect:(struct _NSRect *)fp12;
- (id)initWithPasteboard:(id)fp8;
- (void)_expand;
- (void)recache;
- (BOOL)setName:(id)fp8;
- (id)name;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)_handleError:(int)fp8 delta:(float)fp12 fromRect:(const struct _NSRect *)fp16 toPoint:(const struct _NSPoint *)fp20;
- (id)_freeRepresentation:(struct _NSRepresentationInfo *)fp8;
- (void)dealloc;
- (void)finalize;
- (id)_resizeAllCaches;
- (id)_freeCache:(struct _NSRepresentationInfo *)fp8;
- (BOOL)_getCacheWindow:(id *)fp8 andRect:(struct _NSRect *)fp12 forRep:(struct _NSRepresentationInfo *)fp16;
- (void)setSize:(struct _NSSize)fp8;
- (struct _NSSize)size;
- (void)setFlipped:(BOOL)fp8;
- (BOOL)isFlipped;
- (void)setScalesWhenResized:(BOOL)fp8;
- (BOOL)scalesWhenResized;
- (void)setDataRetained:(BOOL)fp8;
- (BOOL)isDataRetained;
- (void)setCachedSeparately:(BOOL)fp8;
- (BOOL)isCachedSeparately;
- (void)setCacheDepthMatchesImageDepth:(BOOL)fp8;
- (BOOL)cacheDepthMatchesImageDepth;
- (void)setUsesEPSOnResolutionMismatch:(BOOL)fp8;
- (BOOL)usesEPSOnResolutionMismatch;
- (void)setPrefersColorMatch:(BOOL)fp8;
- (BOOL)prefersColorMatch;
- (void)setMatchesOnMultipleResolution:(BOOL)fp8;
- (BOOL)matchesOnMultipleResolution;
- (void)setCacheMode:(int)fp8;
- (int)cacheMode;
- (void)_setAntialiased:(BOOL)fp8;
- (BOOL)_antialiased;
- (BOOL)_asIconHasAlpha;
- (BOOL)hasAlpha;
- (id)representations;
- (void)_setRepresentationListCache:(id)fp8;
- (BOOL)_focusOnCache:(struct _NSRepresentationInfo *)fp8;
- (BOOL)_whenDrawn:(id)fp8 fills:(const struct _NSRect *)fp12;
- (BOOL)_requiresCacheWithAlpha:(struct _NSRepresentationInfo *)fp8;
- (void)drawAtPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 operation:(int)fp32 fraction:(float)fp36;
- (void)drawInRect:(struct _NSRect)fp8 fromRect:(struct _NSRect)fp24 operation:(int)fp40 fraction:(float)fp44;
- (BOOL)drawRepresentation:(id)fp8 inRect:(struct _NSRect)fp12;
- (BOOL)_drawRepresentation:(struct _NSRepresentationInfo *)fp8;
- (id)_drawDone:(struct _NSRepresentationInfo *)fp8 success:(BOOL)fp12;
- (BOOL)_cacheRepresentation:(struct _NSRepresentationInfo *)fp8;
- (BOOL)_cacheRepresentation:(struct _NSRepresentationInfo *)fp8 stayFocused:(BOOL)fp12;
- (id)_forgetData:(struct _NSRepresentationInfo *)fp8;
- (BOOL)_expandRep:(struct _NSRepresentationInfo *)fp8;
- (BOOL)_addRepsFrom:(id)fp8 toRep:(struct _NSRepresentationInfo *)fp12;
- (BOOL)_addOneRepFrom:(id)fp8 toRep:(struct _NSRepresentationInfo *)fp12;
- (void)_subImageFocus;
- (BOOL)isValid;
- (void)lockFocusOnRepresentation:(id)fp8;
- (void)lockFocus;
- (BOOL)_lockFocusOnRep:(struct _NSRepresentationInfo *)fp8;
- (void)unlockFocus;
- (void)addRepresentation:(id)fp8;
- (void)addRepresentations:(id)fp8;
- (void)removeRepresentation:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;
- (BOOL)_getGlobalWindowNumber:(unsigned int *)fp8 andRect:(struct _NSRect *)fp12 forRepresentation:(id)fp16;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(int)fp8 factor:(float)fp12;
- (struct _NSRepresentationInfo *)_bestRepresentation:(BOOL)fp8 device:(id)fp12 bestWidth:(float)fp16 checkFlag:(BOOL)fp20;
- (id)bestRepresentationForDevice:(id)fp8;
- (void)compositeToPoint:(struct _NSPoint)fp8 operation:(int)fp16;
- (void)dissolveToPoint:(struct _NSPoint)fp8 fraction:(float)fp16;
- (void)compositeToPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 operation:(int)fp32;
- (void)dissolveToPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 fraction:(float)fp32;
- (void)compositeToPoint:(struct _NSPoint)fp8 operation:(int)fp16 fraction:(float)fp20;
- (void)compositeToPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 operation:(int)fp32 fraction:(float)fp36;
- (void)_compositeToPoint:(struct _NSPoint)fp8 operation:(int)fp16 fraction:(float)fp20;
- (void)_compositeToPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 operation:(int)fp32 fraction:(float)fp36;
- (void)_compositeFlipped:(BOOL)fp8 inRect:(struct _NSRect)fp12 fromRect:(struct _NSRect)fp28 operation:(int)fp44 fraction:(float)fp48;
- (void)_compositeFlipped:(BOOL)fp8 atPoint:(struct _NSPoint)fp12 fromRect:(struct _NSRect)fp20 operation:(int)fp36 fraction:(float)fp40;
- (void *)_createPatternFromRect:(struct _NSRect)fp8;
- (void *)_createPattern;
- (BOOL)_composite:(int)fp8 delta:(float)fp12 fromRect:(const struct _NSRect *)fp16 toPoint:(const struct _NSPoint *)fp20;
- (id)description;
- (id)_initWithData:(id)fp8 fileType:(id)fp12 hfsType:(id)fp16;
- (id)_initWithIconRef:(void *)fp8 includeThumbnail:(BOOL)fp12;
- (void)cancelIncrementalLoad;

@end

@interface _NSRepresentationInfo : NSObject
{
    NSCachedImageRep *cacheImageRep;
    struct _CacheRect cacheRect;
    id image;
    struct _RepresentationInfoFlags flags;
    id fileName;
    NSString *appName;
    void *iconRef;
    int iconRefSize;
    _NSRepresentationInfo *next;
}

@end

@interface NSBundle (NSBundleImageExtension)
- (id)pathForImageResource:(id)fp8;
@end

@interface NSImageCell : NSCell <NSCopying, NSCoding>
{
    id _controlView;
    struct __ICFlags _icFlags;
    struct _NSImageCellAnimationState *_animationState;
    NSImage *_scaledImage;
}

+ (void)initialize;
- (id)init;
- (id)initImageCell:(id)fp8;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_setContents:(id)fp8;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)setEditable:(BOOL)fp8;
- (int)imageAlignment;
- (void)setImageAlignment:(int)fp8;
- (int)imageScaling;
- (void)setImageScaling:(int)fp8;
- (int)imageFrameStyle;
- (void)setImageFrameStyle:(int)fp8;
- (void)setObjectValue:(id)fp8;
- (id)image;
- (void)setImage:(id)fp8;
- (BOOL)_highlightsWithHighlightRect;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)isOpaque;
- (void)setFormatter:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setControlView:(id)fp8;
- (id)controlView;

@end

@interface NSImageCell (NSPrivateAnimationSupport)
- (BOOL)_animates;
- (void)_setAnimates:(BOOL)fp8;
- (void)_startAnimation;
- (void)_stopAnimation;
- (void)_animationTimerCallback:(id)fp8;
@end

@interface NSImageCell (NSImageCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
@end

@interface NSImage (NSImageAccessibility)
- (id)_accessibilityTitle;
@end

@interface NSImageReader : NSObject
{
    char *planes[4];
    int pixelsHigh;
    int pixelsWide;
    int bytesPerRow;
    int bytesPerPlane;
    NSString *colorSpaceName;
    NSData *colorSyncData;
    struct _NSSize size;
    unsigned int samplesPerPixel;
    unsigned int numberOfPlanes;
    unsigned int bitsPerPixel;
    unsigned int bitsPerSample;
    int bitmapFormat;
    BOOL isPlanar;
    BOOL hasAlpha;
    BOOL loadError;
    BOOL reserved1;
    int reserved2;
    NSData *data;
    char *bytes;
    unsigned int length;
    unsigned int location;
}

- (id)initWithData:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)data;
- (char **)bitmapDataPlanes;
- (BOOL)isPlanar;
- (int)samplesPerPixel;
- (int)bitsPerPixel;
- (int)bytesPerRow;
- (int)bytesPerPlane;
- (int)numberOfPlanes;
- (struct _NSSize)size;
- (BOOL)hasAlpha;
- (id)colorSpaceName;
- (id)colorSyncData;
- (int)bitsPerSample;
- (int)pixelsWide;
- (int)pixelsHigh;
- (int)bitmapFormat;
- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;
- (BOOL)loadImage:(char **)fp8 forImageRep:(id)fp12;

@end

@interface NSImageRep : NSObject <NSCopying, NSCoding>
{
    struct __repFlags _repFlags;
    NSString *_colorSpaceName;
    struct _NSSize _size;
    int _pixelsWide;
    int _pixelsHigh;
}

+ (void)initialize;
+ (BOOL)canInitWithData:(id)fp8;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
+ (id)imagePasteboardTypes;
+ (id)imageFileTypes;
+ (BOOL)canInitWithPasteboard:(id)fp8;
+ (id)imageRepsWithContentsOfFile:(id)fp8;
+ (id)imageRepWithContentsOfFile:(id)fp8;
+ (id)imageRepsWithPasteboard:(id)fp8;
+ (id)imageRepWithPasteboard:(id)fp8;
+ (id)imageRepsWithContentsOfURL:(id)fp8;
+ (id)imageRepWithContentsOfURL:(id)fp8;
+ (id)_imageRepsWithData:(id)fp8 fileType:(id)fp12 hfsType:(id)fp16;
+ (void)registerImageRepClass:(Class)fp8;
+ (void)unregisterImageRepClass:(Class)fp8;
+ (id)registeredImageRepClasses;
+ (Class)_imageRepClassForFileNameExtension:(id)fp8 andHFSFileType:(id)fp12;
+ (Class)imageRepClassForFileType:(id)fp8;
+ (Class)imageRepClassForPasteboardType:(id)fp8;
+ (Class)imageRepClassForData:(id)fp8;
+ (BOOL)_preferFilter;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setSize:(struct _NSSize)fp8;
- (struct _NSSize)size;
- (void)_gsave;
- (void)_grestore;
- (void)dealloc;
- (void)finalize;
- (BOOL)drawAtPoint:(struct _NSPoint)fp8;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (BOOL)draw;
- (void)_transformDstRect:(struct _NSRect *)fp8 clipRect:(struct CGRect *)fp12;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (int)_uncachedSize;
- (BOOL)_isValid;
- (void *)_createPatternFromRect:(struct _NSRect)fp8;
- (void)setColorSpaceName:(id)fp8;
- (id)colorSpaceName;
- (void)setAlpha:(BOOL)fp8;
- (BOOL)hasAlpha;
- (void)setOpaque:(BOOL)fp8;
- (BOOL)isOpaque;
- (void)setBitsPerSample:(int)fp8;
- (int)bitsPerSample;
- (void)setPixelsWide:(int)fp8;
- (int)pixelsWide;
- (void)setPixelsHigh:(int)fp8;
- (int)pixelsHigh;
- (BOOL)_canDrawOutsideOfItsBounds;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)description;
- (struct CGImage *)_CGImageRef;
- (void)_setCGImageRef:(struct CGImage *)fp8;

@end

@interface NSImageView : NSControl
{
    struct __IVFlags _ivFlags;
    id _target;
    SEL _action;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (int)imageFrameStyle;
- (void)setImageFrameStyle:(int)fp8;
- (int)imageAlignment;
- (void)setImageAlignment:(int)fp8;
- (int)imageScaling;
- (void)setImageScaling:(int)fp8;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isEditable;
- (id)image;
- (void)setImage:(id)fp8;
- (void)_setImageAndNotifyTarget:(id)fp8;
- (void)setTarget:(id)fp8;
- (void)setAction:(SEL)fp8;
- (id)target;
- (SEL)action;
- (BOOL)isOpaque;
- (BOOL)animates;
- (void)setAnimates:(BOOL)fp8;
- (void)rightMouseDown:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)allowsCutCopyPaste;
- (void)setAllowsCutCopyPaste:(BOOL)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (BOOL)_copyImageToPasteboard;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (void)paste:(id)fp8;
- (void)delete:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)keyDown:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;

@end

@interface NSImageView (NSImageViewPrivate)
- (void)registerForDrags;
@end

@interface NSImageWriter : NSObject
{
    char *planes[4];
    int pixelsHigh;
    int pixelsWide;
    int bytesPerRow;
    int bytesPerPlane;
    NSString *colorSpaceName;
    struct _NSSize size;
    struct {
        unsigned int samplesPerPixel:4;
        unsigned int numberOfPlanes:4;
        unsigned int bitsPerPixel:8;
        unsigned int bitsPerSample:8;
        unsigned int isPlanar:1;
        unsigned int hasAlpha:1;
        unsigned int error:1;
        unsigned int dibFormat:1;
        unsigned int bitmapFormat:3;
        unsigned int reserved:9;
    } flags;
}

- (id)initWithBitmapDataPlanes:(char **)fp8 pixelsWide:(int)fp12 pixelsHigh:(int)fp16 bitsPerSample:(int)fp20 samplesPerPixel:(int)fp24 hasAlpha:(BOOL)fp28 isPlanar:(BOOL)fp32 colorSpaceName:(id)fp36 bitmapFormat:(int)fp40 bytesPerRow:(int)fp44 bitsPerPixel:(int)fp48 size:(struct _NSSize)fp52;
- (id)representationWithImageProperties:(id)fp8 withProperties:(id)fp12;

@end

@interface NSIncrementalImageReader : NSImageReader <NSURLHandleClient>
{
    NSImage *_image;
    NSImageRep *_imageRep;
    NSURL *_url;
    id _urlHandle;
    int _mode;
    NSData *_availableData;
    BOOL _newDataAvailable;
    BOOL _loading;
    BOOL _loadFinished;
    BOOL _directLoading;
}

+ (void)cancelIncrementalLoadForImage:(id)fp8;
+ (id)incrementalImageReaderForRep:(id)fp8;
- (void)dealloc;
- (id)initWithURL:(id)fp8;
- (void)setImageRep:(id)fp8 forImage:(id)fp12;
- (id)initForDirectImageRep:(id)fp8;
- (BOOL)doProgressiveLoad;
- (BOOL)doProgressiveLoadHeader;
- (BOOL)startProgressiveLoad;
- (BOOL)doProgressiveLoadImage;
- (void)finishProgressiveLoad:(int)fp8;
- (int)validRows;
- (int)mode;
- (id)image;
- (id)rep;
- (void)beginDataLoad;
- (void)setNewAvailableData:(id)fp8;
- (void)clearNewAvailableData;
- (BOOL)newDataAvailable;
- (BOOL)loadFinished;
- (id)availableData;
- (void)finishDataLoad;
- (int)directDataAvailable:(id)fp8;
- (int)directDataComplete;
- (void)URLHandleResourceDidBeginLoading:(id)fp8;
- (void)URLHandleResourceDidFinishLoading:(id)fp8;
- (void)URLHandle:(id)fp8 resourceDataDidBecomeAvailable:(id)fp12;
- (void)URLHandleResourceDidCancelLoading:(id)fp8;
- (void)URLHandle:(id)fp8 resourceDidFailLoadingWithReason:(id)fp12;

@end

@interface NSTSMInputContext : NSInputContext
{
    struct OpaqueTSMDocumentID *_documentID;
    unsigned short _deadKeyChar;
    short _scriptID;
    struct {
        unsigned int _inPreProcess:1;
        unsigned int _acceptsGlyphInfo:1;
        unsigned int _respondsToString:1;
        unsigned int _respondsToTextStorage:1;
        unsigned int _hasLocking:1;
        unsigned int _unicodeInputEventReceived:1;
        unsigned int _lockCount:16;
        unsigned int _checkWindowLevel:1;
        unsigned int _respondsToLayoutManager:1;
        unsigned int _reserved:8;
    } _ticFlags;
}

+ (void)initialize;
+ (void)_destroyTSMDocument:(id)fp8;
+ (void)cycleToNextInputScript:(id)fp8;
+ (void)cycleToNextInputKeyboardLayout:(id)fp8;
- (id)initWithClient:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)_activate;
- (void)_deactivate;
- (BOOL)_inTSMPreProcess;
- (void)_setUnicodeInputEventReceived:(BOOL)fp8;
- (BOOL)_unicodeInputEventReceived;
- (void)setAcceptsGlyphInfo:(BOOL)fp8;
- (void)markedTextAbandoned:(id)fp8;
- (void)markedTextSelectionChanged:(struct _NSRange)fp8 client:(id)fp16;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)handleMouseEvent:(id)fp8;
- (BOOL)wantsToDelayTextChangeNotifications;
- (unsigned short)_currentDeadKeyChar;
- (void)interpretKeyEvents:(id)fp8;
- (void)cycleToNextInputScript:(id)fp8;
- (void)cycleToNextInputKeyboardLayout:(id)fp8;

@end

@interface NSInputContext : NSObject <NSTextInput>
{
    id _client;
    NSInputManager *_inputManager;
    NSKeyBindingManager *_keyBindingManager;
    id _keyBindingState;
    NSInputManager *_markingInputManager;
    struct {
        unsigned int _usingExtendedInputMethods:1;
        unsigned int _respondsToAcceptsMarkedText:1;
        unsigned int _disableEventProcessing:1;
        unsigned int _checkedClientKeyManager:1;
        unsigned int _reserved:28;
    } _icFlags;
}

+ (void)_applicationDidBecomeActive;
+ (void)_applicationDidResignActive;
+ (id)inputContextWithClient:(id)fp8;
+ (id)currentInputContext;
+ (void)updateInputContexts;
+ (void)_handleCommand:(SEL)fp8;
+ (id)keyBindingState;
+ (BOOL)processInputKeyBindings:(id)fp8;
- (void)_handleText:(id)fp8;
- (void)_handleCommand:(SEL)fp8;
- (void)setAcceptsGlyphInfo:(BOOL)fp8;
- (BOOL)_isEventProcessingDisabled;
- (void)_insertText:(id)fp8 forInputManager:(id)fp12;
- (void)_setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12 forInputManager:(id)fp20;
- (void)_doCommandBySelector:(SEL)fp8 forInputManager:(id)fp12;
- (id)initWithClient:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setCurrentInputManager:(id)fp8;
- (id)currentInputManager;
- (BOOL)_activate;
- (void)_deactivate;
- (void)_invalidate;
- (id)client;
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)validAttributesForMarkedText;
- (id)localizedInputManagerName;
- (void)markedTextAbandoned:(id)fp8;
- (void)markedTextSelectionChanged:(struct _NSRange)fp8 client:(id)fp16;
- (BOOL)wantsToInterpretAllKeystrokes;
- (id)language;
- (id)image;
- (id)server;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)handleMouseEvent:(id)fp8;
- (BOOL)wantsToDelayTextChangeNotifications;
- (void)interpretKeyEvents:(id)fp8;
- (id)keyBindingState;
- (void)cycleToNextInputScript:(id)fp8;
- (void)cycleToNextInputKeyboardLayout:(id)fp8;
- (void)togglePlatformInputSystem:(id)fp8;
- (void)setKeyBindingManager:(id)fp8;
- (id)keyBindingManager;

@end

@interface NSInputContext (NSInputContextConcreteClassSelector)
+ (id)_concreteInputContextClass;
@end

@interface NSView (NSKeyBindingManager_Support)
+ (id)keyBindingManager;
@end

@interface NSInputManager : NSObject <NSTextInput>
{
    id _currentClient;
    id _server;
    id _bundleObj;
    id _keybindings;
    NSString *_trueName;
    NSString *_connectionName;
    NSString *_hostName;
    NSString *_procToExec;
    NSString *_visibleName;
    NSString *_bundleName;
    NSString *_language;
    NSImage *_image;
    unsigned int _flags;
    NSString *_keyBindingsName;
    int _reservedInputManager2;
}

+ (void)_terminate:(id)fp8;
+ (void)_updateInputManagerState;
+ (void)_switchToPlatformInput:(id)fp8;
+ (id)_inputManagerInNextScript:(id)fp8;
+ (id)_nextInputManagerInScript:(id)fp8;
+ (void)initialize;
+ (void)installInputManagerMenu:(id)fp8;
+ (void)setCurrentInputManager:(id)fp8;
+ (id)currentInputManager;
+ (void)cycleToNextInputLanguage:(id)fp8;
+ (void)cycleToNextInputServerInLanguage:(id)fp8;
+ (BOOL)worksWhenModal;
- (BOOL)_setActivationState:(BOOL)fp8;
- (BOOL)_isActivated;
- (BOOL)worksWhenModal;
- (id)initWithName:(id)fp8 host:(id)fp12;
- (id)_initWithName:(id)fp8 host:(id)fp12 process:(id)fp16 bundle:(id)fp20 serverClass:(id)fp24 keyBindings:(id)fp28;
- (void)_activateServer;
- (BOOL)_validateBundleSecurity;
- (void)_loadBundle;
- (void)_loadKeyboardBindings;
- (id)_keyBindingManager;
- (void)_senderIsInvalid:(id)fp8;
- (id)_currentClient;
- (void)_setCurrentClient:(id)fp8;
- (void)activateInputManagerFromMenu:(id)fp8;
- (id)localizedInputManagerName;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)isEnabled;
- (BOOL)handleMouseEvent:(id)fp8;
- (void)insertText:(id)fp8 client:(id)fp12;
- (void)doCommandBySelector:(SEL)fp8 client:(id)fp12;
- (void)markedTextAbandoned:(id)fp8;
- (void)markedTextSelectionChanged:(struct _NSRange)fp8 client:(id)fp16;
- (id)server;
- (id)bundleObject;
- (BOOL)wantsToDelayTextChangeNotifications;
- (BOOL)wantsToHandleMouseEvents;
- (id)language;
- (id)image;
- (void)dealloc;
- (void)finalize;
- (void)_terminate;
- (id)description;
- (id)_trueName;
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)getMarkedText:(id *)fp8 selectedRange:(struct _NSRange *)fp12;
- (BOOL)hasMarkedText;
- (void)unmarkText;
- (id)validAttributesForMarkedText;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (long)conversationIdentifier;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;

@end

@interface NSDeadKeyInputServer : NSInputServer
{
    NSData *_dataObj;
    unsigned short *_data;
    short _numDeadKeys;
    unsigned short _bufferedChar;
}

- (void)_loadDeadKeyData;
- (id)initWithDelegate:(id)fp8 name:(id)fp12;
- (BOOL)canBeDisabled;
- (void)doCommandBySelector:(SEL)fp8 client:(id)fp12;
- (void)insertText:(id)fp8 client:(id)fp12;
- (void)inputClientEnabled:(id)fp8;
- (BOOL)validStartCharacter:(unsigned short)fp8;
- (id)findCombinationForLetter:(unsigned short)fp8 accent:(unsigned short)fp12;
- (void)markedTextAbandoned:(id)fp8;
- (void)activeConversationWillChange:(id)fp8 fromOldConversation:(long)fp12;

@end

@interface NSLocalInputServer : NSInputServer
{
    NSMutableDictionary *_dictionary;
}

- (id)initWithDelegate:(id)fp8 name:(id)fp12;
- (void)dealloc;
- (void)setMutableDictionary:(id)fp8;
- (id)mutableDictionary;

@end

@interface NSRemoteInputServer : NSInputServer
{
    NSConnection *_connection;
}

- (void)_invalidateConnectionsAsNecessary:(id)fp8;
- (id)initWithDelegate:(id)fp8 name:(id)fp12;
- (void)dealloc;
- (void)forwardInvocation:(id)fp8;
- (void)markedTextAbandoned:(id)fp8;
- (void)terminate:(id)fp8;

@end

@interface NSInputServer : NSObject <NSInputServiceProvider, NSInputServerMouseTracker>
{
    NSString *_name;
    id _delegate;
}

- (id)initWithDelegate:(id)fp8 name:(id)fp12;
- (void)dealloc;
- (id)description;
- (void)insertText:(id)fp8 client:(id)fp12;
- (void)doCommandBySelector:(SEL)fp8 client:(id)fp12;
- (void)markedTextAbandoned:(id)fp8;
- (void)markedTextSelectionChanged:(struct _NSRange)fp8 client:(id)fp16;
- (void)activeConversationWillChange:(id)fp8 fromOldConversation:(long)fp12;
- (void)activeConversationChanged:(id)fp8 toNewConversation:(long)fp12;
- (void)terminate:(id)fp8;
- (BOOL)wantsToInterpretAllKeystrokes;
- (BOOL)wantsToHandleMouseEvents;
- (BOOL)wantsToDelayTextChangeNotifications;
- (BOOL)canBeDisabled;
- (void)inputClientBecomeActive:(id)fp8;
- (void)inputClientResignActive:(id)fp8;
- (void)inputClientEnabled:(id)fp8;
- (void)inputClientDisabled:(id)fp8;
- (BOOL)mouseDownOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;
- (BOOL)mouseDraggedOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;
- (void)mouseUpOnCharacterIndex:(unsigned int)fp8 atCoordinate:(struct _NSPoint)fp12 withModifier:(unsigned int)fp20 client:(id)fp24;

@end

@interface NSInputClientWrapper : NSObject <NSTextInput>
{
    id _realClient;
    id _lastString;
    struct _NSRange _lastRange;
}

+ (void)invalidateConnectionsAsNecessary:(id)fp8;
+ (id)clientWrapperWithRealClient:(id)fp8;
+ (void)terminateForClient:(id)fp8;
- (void)resetState;
- (id)initWithRealClient:(id)fp8;
- (void)dealloc;
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)validAttributesForMarkedText;

@end

@interface NSInputServer (NSInputServerDOOptimization)
- (void)_inputClientChangedStatus:(id)fp8 inputClient:(id)fp12;
@end

@interface NSInputServer (NSInputServerCompatibility)
- (void)setActivated:(BOOL)fp8 sender:(id)fp12;
- (void)senderDidBecomeActive:(id)fp8;
- (void)senderDidResignActive:(id)fp8;
- (void)cancelInput:(id)fp8 conversation:(long)fp12;
@end

@interface NSView (NSInterfaceStyle)
- (int)interfaceStyle;
- (void)setInterfaceStyle:(int)fp8;
@end

@interface NSWindow (NSInterfaceStyle)
- (int)interfaceStyle;
- (void)setInterfaceStyle:(int)fp8;
@end

@interface NSResponder (NSInterfaceStyle)
- (int)interfaceStyle;
- (void)setInterfaceStyle:(int)fp8;
@end

@interface NSJPEGImageReader : NSIncrementalImageReader
{
    void *_decompressor;
    int _validRows;
}

- (void)dealloc;
- (void)finalize;
- (void)extractHeaderInfo:(struct jpeg_decompress_struct *)fp8;
- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;
- (BOOL)startProgressiveLoad;
- (BOOL)doProgressiveLoadHeader;
- (BOOL)doProgressiveLoadImage;
- (void)finishProgressiveLoad:(int)fp8;
- (int)validRows;
- (void)clearNewAvailableData;

@end

@interface NSJPEGImageWriter : NSImageWriter
{
}

- (id)representationWithImageProperties:(id)fp8 withProperties:(id)fp12;

@end

@interface NSKeyBindingAtom : NSObject
{
    unsigned short key;
    unsigned int mask;
    id _binding;
}

- (id)initWithKey:(unsigned short)fp8 mask:(unsigned int)fp12 binding:(id)fp16;
- (void)dealloc;
- (void)setBinding:(id)fp8;
- (id)binding;
- (int)compare:(id)fp8;
- (BOOL)isEqual:(id)fp8;
- (id)description;

@end

@interface NSKeyBindingManager : NSObject
{
    NSDictionary *_dict;
    NSSortedArray *_atomArray;
    NSKeyBindingAtom *_argBinding;
    NSKeyBindingAtom *_quoteBinding;
    NSKeyBindingManager *_nextManager;
    int _reservedKeyBindingMgr1;
}

+ (void)initialize;
+ (id)sharedKeyBindingManager;
+ (void)interpretKeyEvents:(id)fp8 sender:(id)fp12;
+ (void)cancel;
+ (int)repeatCount;
+ (void)setRepeatCountForNextCommand:(int)fp8;
+ (void)_setKeyBindingMonitor:(id)fp8;
+ (id)_keyBindingMonitor;
- (id)initWithDictionary:(id)fp8;
- (void)dealloc;
- (id)dictionary;
- (void)setDictionary:(id)fp8;
- (void)setArgumentBinding:(id)fp8;
- (void)setQuoteBinding:(id)fp8;
- (void)_setNextKeyBindingManager:(id)fp8;
- (void)_monitorKeyBinding:(unsigned short)fp8 flags:(unsigned int)fp12;

@end

@interface _NSKeyBindingStateActual : NSObject
{
    NSKeyBindingManager *_currentInstance;
    NSSortedArray *_currentAtomArray;
    NSMutableString *_toInsert;
    int _stateFlag;
    int _repeatCount;
    BOOL wantsToSwallowFunctionKeys;
    NSMutableArray *_atomList;
}

@end

@interface NSKeyBindingManager (NSKeyBindingManager_MultiClients)
+ (id)keyBindingManagerForClient:(id)fp8;
+ (id)inputKeyBindingManager;
+ (id)draggingKeyBindingManager;
- (BOOL)interpretEventAsCommand:(id)fp8 forClient:(id)fp12;
- (void)interpretEventAsText:(id)fp8 forClient:(id)fp12;
- (void)flushTextForClient:(id)fp8;
- (void)interpretKeyEvents:(id)fp8 forClient:(id)fp12;
@end

@interface NSUnavailableLanguagePlaceholder : NSLanguage
{
}

+ (id)languageWithName:(id)fp8;
- (id)_initWithName:(id)fp8;
- (id)languageName;
- (id)formalName;
- (id)languageCode;

@end

@interface NSLanguage : NSObject
{
    NSString *_name;
    NSLanguageContext *_lang;
    int _flags;
    NSCollator *_collator0;
    NSCollator *_collator1;
    NSRulebook *_dblClick;
    NSRulebook *_lineBreak;
    NSRulebook *_wordMove;
}

+ (void)initialize;
+ (void)setDefaultLanguage:(id)fp8;
+ (void)setSystemLanguage:(id)fp8;
+ (id)defaultLanguage;
+ (id)systemLanguage;
+ (id)availableLanguageNames;
+ (id)languageWithName:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)_initWithName:(id)fp8;
- (void)_setLang:(id)fp8;
- (void)_setName:(id)fp8;
- (void)_setCaseConversionFlags;
- (unsigned int)caseConversionFlags;
- (id)collator:(BOOL)fp8;
- (id)doubleClickHandler;
- (id)lineBreakHandler;
- (id)wordMovementHandler;
- (id)languageName;
- (id)formalName;
- (id)languageCode;
- (id)dictionaryRepresentation;
- (id)languageContext;
- (id)longMonthNames;
- (id)shortMonthNames;
- (id)longWeekdayNames;
- (id)shortWeekdayNames;
- (id)decimalSeparator;
- (id)thousandsSeparator;
- (id)AMPMDesignation;

@end

@interface NSLayoutHole : NSObject
{
    struct _NSRange characterRange;
    BOOL isSoft;
    unsigned int refCount;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)retain;
- (oneway void)release;
- (unsigned int)retainCount;
- (id)initWithCharacterRange:(struct _NSRange)fp8 isSoft:(BOOL)fp16;
- (id)init;
- (int)compare:(id)fp8;
- (id)description;

@end

@interface NSLayoutManager : NSObject <NSCoding, NSGlyphStorage>
{
    NSTextStorage *_textStorage;
    NSGlyphGenerator *_glyphGenerator;
    NSTypesetter *_typesetter;
    NSMutableArray *_textContainers;
    NSStorage *_containerUsedRects;
    NSStorage *_glyphs;
    NSRunStorage *_containerRuns;
    NSRunStorage *_fragmentRuns;
    NSRunStorage *_glyphLocations;
    NSRunStorage *_glyphRotationRuns;
    struct _NSRect _extraLineFragmentRect;
    struct _NSRect _extraLineFragmentUsedRect;
    NSTextContainer *_extraLineFragmentContainer;
    NSSortedArray *_glyphHoles;
    NSSortedArray *_layoutHoles;
    struct __lmFlags _lmFlags;
    id _delegate;
    unsigned short _textViewResizeDisableStack;
    unsigned short _displayInvalidationDisableStack;
    struct _NSRange _deferredDisplayCharRange;
    NSTextView *_firstTextView;
    struct _NSRect *_cachedRectArray;
    unsigned int _cachedRectArrayCapacity;
    char *_glyphBuffer;
    unsigned int _glyphBufferSize;
    struct _NSRange _cachedLocationNominalGlyphRange;
    unsigned int _cachedLocationGlyphIndex;
    struct _NSPoint _cachedLocation;
    struct _NSRange _cachedFontCharRange;
    NSFont *_cachedFont;
    unsigned int _firstUnlaidGlyphIndex;
    unsigned int _firstUnlaidCharIndex;
    NSBox *_rulerAccView;
    id _rulerAccViewAlignmentButtons;
    id _rulerAccViewSpacing;
    NSTabWell *_rulerAccViewLeftTabWell;
    NSTabWell *_rulerAccViewRightTabWell;
    NSTabWell *_rulerAccViewCenterTabWell;
    NSTabWell *_rulerAccViewDecimalTabWell;
    id _rulerAccViewStyles;
    id _rulerAccViewLists;
    struct _NSRange _newlyFilledGlyphRange;
    id _extraData;
}

+ (void)initialize;
+ (BOOL)_usesScreenFonts;
+ (BOOL)_ignoresViewTransformations;
- (void)_commonInit;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)textStorage;
- (void)setTextStorage:(id)fp8;
- (void)replaceTextStorage:(id)fp8;
- (id)glyphGenerator;
- (void)setGlyphGenerator:(id)fp8;
- (id)typesetter;
- (void)setTypesetter:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)textContainers;
- (struct _NSRange)_characterRangeCurrentlyInAndAfterContainer:(id)fp8;
- (void)addTextContainer:(id)fp8;
- (void)insertTextContainer:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeTextContainerAtIndex:(unsigned int)fp8;
- (void)textContainerChangedGeometry:(id)fp8;
- (void)textContainerChangedTextView:(id)fp8;
- (void)_invalidateGlyphsForCharacterRange:(struct _NSRange)fp8 editedCharacterRange:(struct _NSRange)fp16 changeInLength:(int)fp24 actualCharacterRange:(struct _NSRange *)fp28;
- (void)invalidateGlyphsForCharacterRange:(struct _NSRange)fp8 changeInLength:(int)fp16 actualCharacterRange:(struct _NSRange *)fp20;
- (void)invalidateLayoutForCharacterRange:(struct _NSRange)fp8 isSoft:(BOOL)fp16 actualCharacterRange:(struct _NSRange *)fp20;
- (void)_primitiveInvalidateDisplayForGlyphRange:(struct _NSRange)fp8;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange)fp8;
- (void)invalidateDisplayForGlyphRange:(struct _NSRange)fp8;
- (void)_forceDisplayToBeCorrectForViewsWithUnlaidGlyphs;
- (void)textStorage:(id)fp8 edited:(unsigned int)fp12 range:(struct _NSRange)fp16 changeInLength:(int)fp24 invalidatedRange:(struct _NSRange)fp28;
- (void)setBackgroundLayoutEnabled:(BOOL)fp8;
- (BOOL)backgroundLayoutEnabled;
- (void)setShowsInvisibleCharacters:(BOOL)fp8;
- (BOOL)showsInvisibleCharacters;
- (void)setShowsControlCharacters:(BOOL)fp8;
- (BOOL)showsControlCharacters;
- (void)setHyphenationFactor:(float)fp8;
- (float)hyphenationFactor;
- (void)setDefaultAttachmentScaling:(int)fp8;
- (int)defaultAttachmentScaling;
- (void)insertGlyphs:(const unsigned int *)fp8 length:(unsigned int)fp12 forStartingGlyphAtIndex:(unsigned int)fp16 characterIndex:(unsigned int)fp20;
- (void)insertGlyph:(unsigned int)fp8 atGlyphIndex:(unsigned int)fp12 characterIndex:(unsigned int)fp16;
- (void)replaceGlyphAtIndex:(unsigned int)fp8 withGlyph:(unsigned int)fp12;
- (void)deleteGlyphsInRange:(struct _NSRange)fp8;
- (void)setCharacterIndex:(unsigned int)fp8 forGlyphAtIndex:(unsigned int)fp12;
- (unsigned int)numberOfGlyphs;
- (unsigned int)glyphAtIndex:(unsigned int)fp8;
- (unsigned int)glyphAtIndex:(unsigned int)fp8 isValidIndex:(char *)fp12;
- (BOOL)isValidGlyphIndex:(unsigned int)fp8;
- (unsigned int)getGlyphs:(unsigned int *)fp8 range:(struct _NSRange)fp12;
- (unsigned int)characterIndexForGlyphAtIndex:(unsigned int)fp8;
- (void)setIntAttribute:(int)fp8 value:(int)fp12 forGlyphAtIndex:(unsigned int)fp16;
- (int)intAttribute:(int)fp8 forGlyphAtIndex:(unsigned int)fp12;
- (void)setTextContainer:(id)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)setLineFragmentRect:(struct _NSRect)fp8 forGlyphRange:(struct _NSRange)fp24 usedRect:(struct _NSRect)fp32;
- (void)setExtraLineFragmentRect:(struct _NSRect)fp8 usedRect:(struct _NSRect)fp24 textContainer:(id)fp40;
- (void)setDrawsOutsideLineFragment:(BOOL)fp8 forGlyphAtIndex:(unsigned int)fp12;
- (void)setLocation:(struct _NSPoint)fp8 forStartOfGlyphRange:(struct _NSRange)fp16 coalesceRuns:(BOOL)fp24;
- (void)setLocation:(struct _NSPoint)fp8 forStartOfGlyphRange:(struct _NSRange)fp16;
- (void)setAttachmentSize:(struct _NSSize)fp8 forGlyphRange:(struct _NSRange)fp16;
- (struct _NSSize)attachmentSizeForGlyphAtIndex:(unsigned int)fp8;
- (void)setLayoutRect:(struct _NSRect)fp8 forTextBlock:(id)fp24 glyphRange:(struct _NSRange)fp28;
- (void)setBoundsRect:(struct _NSRect)fp8 forTextBlock:(id)fp24 glyphRange:(struct _NSRange)fp28;
- (struct _NSRect)layoutRectForTextBlock:(id)fp8 glyphRange:(struct _NSRange)fp12;
- (struct _NSRect)boundsRectForTextBlock:(id)fp8 glyphRange:(struct _NSRange)fp12;
- (struct _NSRect)layoutRectForTextBlock:(id)fp8 atIndex:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
- (struct _NSRect)boundsRectForTextBlock:(id)fp8 atIndex:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
- (id)_blockDescription;
- (void)setNotShownAttribute:(BOOL)fp8 forGlyphAtIndex:(unsigned int)fp12;
- (id)textContainerForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 withoutAdditionalLayout:(BOOL)fp16;
- (id)textContainerForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (struct _NSRect)usedRectForTextContainer:(id)fp8;
- (struct _NSRect)lineFragmentRectForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 withoutAdditionalLayout:(BOOL)fp16;
- (struct _NSRect)lineFragmentRectForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (struct _NSRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 withoutAdditionalLayout:(BOOL)fp16;
- (struct _NSRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12 allowLayout:(BOOL)fp16;
- (struct _NSRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (struct _NSRect)extraLineFragmentRect;
- (struct _NSRect)extraLineFragmentUsedRect;
- (id)extraLineFragmentTextContainer;
- (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(unsigned int)fp8;
- (struct _NSPoint)locationForGlyphAtIndex:(unsigned int)fp8;
- (BOOL)notShownAttributeForGlyphAtIndex:(unsigned int)fp8;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)fp8 actualCharacterRange:(struct _NSRange *)fp16;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)fp8 actualGlyphRange:(struct _NSRange *)fp16;
- (struct _NSRange)glyphRangeForTextContainer:(id)fp8;
- (struct _NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(unsigned int)fp8;
- (struct _NSRect *)rectArrayForCharacterRange:(struct _NSRange)fp8 withinSelectedCharacterRange:(struct _NSRange)fp16 inTextContainer:(id)fp24 rectCount:(unsigned int *)fp28;
- (struct _NSRect *)rectArrayForGlyphRange:(struct _NSRange)fp8 withinSelectedGlyphRange:(struct _NSRange)fp16 inTextContainer:(id)fp24 rectCount:(unsigned int *)fp28;
- (struct _NSRect)boundingRectForGlyphRange:(struct _NSRange)fp8 inTextContainer:(id)fp16;
- (struct _NSRange)glyphRangeForBoundingRect:(struct _NSRect)fp8 inTextContainer:(id)fp24;
- (struct _NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(struct _NSRect)fp8 inTextContainer:(id)fp24;
- (unsigned int)glyphIndexForPoint:(struct _NSPoint)fp8 inTextContainer:(id)fp16;
- (float)fractionOfDistanceThroughGlyphForPoint:(struct _NSPoint)fp8 inTextContainer:(id)fp16;
- (unsigned int)glyphIndexForPoint:(struct _NSPoint)fp8 inTextContainer:(id)fp16 fractionOfDistanceThroughGlyph:(float *)fp20;
- (unsigned int)firstUnlaidCharacterIndex;
- (unsigned int)firstUnlaidGlyphIndex;
- (void)getFirstUnlaidCharacterIndex:(unsigned int *)fp8 glyphIndex:(unsigned int *)fp12;
- (BOOL)usesScreenFonts;
- (void)setUsesScreenFonts:(BOOL)fp8;
- (id)substituteFontForFont:(id)fp8;
- (id)temporaryAttributesAtCharacterIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (void)setTemporaryAttributes:(id)fp8 forCharacterRange:(struct _NSRange)fp12;
- (void)addTemporaryAttributes:(id)fp8 forCharacterRange:(struct _NSRange)fp12;
- (void)removeTemporaryAttribute:(id)fp8 forCharacterRange:(struct _NSRange)fp12;
- (id)_temporaryAttribute:(id)fp8 atCharacterIndex:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
- (id)_temporaryAttribute:(id)fp8 atCharacterIndex:(unsigned int)fp12 longestEffectiveRange:(struct _NSRange *)fp16 inRange:(struct _NSRange)fp20;
- (id)_temporaryAttributesAtCharacterIndex:(unsigned int)fp8 longestEffectiveRange:(struct _NSRange *)fp12 inRange:(struct _NSRange)fp16;
- (unsigned int)getGlyphsInRange:(struct _NSRange)fp8 glyphs:(unsigned int *)fp16 characterIndexes:(unsigned int *)fp20 glyphInscriptions:(int *)fp24 elasticBits:(char *)fp28;
- (unsigned int)getGlyphsInRange:(struct _NSRange)fp8 glyphs:(unsigned int *)fp16 characterIndexes:(unsigned int *)fp20 glyphInscriptions:(int *)fp24 elasticBits:(char *)fp28 bidiLevels:(char *)fp32;
- (int)typesetterBehavior;
- (void)setTypesetterBehavior:(int)fp8;
- (float)defaultLineHeightForFont:(id)fp8;
- (float)defaultBaselineOffsetForFont:(id)fp8;
- (id)attributedString;
- (unsigned int)layoutOptions;
- (id)description;

@end

@interface NSLayoutManagerTextBlockHelper : NSObject
{
    NSTextBlock *_block;
    struct _NSRect _layoutRect;
    struct _NSRect _boundsRect;
}

- (id)initWithTextBlock:(id)fp8 layoutRect:(struct _NSRect)fp12 boundsRect:(struct _NSRect)fp28;
- (void)dealloc;

@end

@interface NSExtraLMData : NSObject
{
    NSRunStorage *_attachmentSizesRun;
    struct _NSRect _currentAttachmentRect;
    unsigned int _currentAttachmentIndex;
    id _fillHoleLock;
    NSRunStorage *_fragmentRunsExtras;
    NSMutableRLEArray *_temporaryAttributes;
    NSTextContainer *_firstTextContainer;
    struct __CFDictionary *_textContainerIndexes;
    struct __CFDictionary *_textContainerGlyphIndexes;
    int _typesetterBehavior;
    struct _NSRect _cachedFontBounds;
    float _cachedUnderlineThickness;
    float _cachedUnderlinePosition;
    struct _NSRange _cachedUnderlineRange;
    NSMutableArray *_blockRunsArray;
    float _hyphenationFactor;
}

@end

@interface NSLayoutManager (NSPrivate)
+ (void)_doSomeBackgroundLayout;
- (id)_glyphGenerator;
- (void)_setGlyphGenerator:(id)fp8;
- (void)_mergeGlyphHoles;
- (void)_mergeLayoutHoles;
- (struct _NSRange)_blockRangeForCharRange:(struct _NSRange)fp8;
- (struct _NSRange)_blockRangeForGlyphRange:(struct _NSRange)fp8;
- (struct _NSRange)_extendedCharRangeForInvalidation:(struct _NSRange)fp8 editedCharRange:(struct _NSRange)fp16;
- (void)_adjustCharacterIndicesForRawGlyphRange:(struct _NSRange)fp8 byDelta:(int)fp16;
- (void)_fillGlyphHoleAtIndex:(unsigned int)fp8 desiredNumberOfCharacters:(unsigned int)fp12;
- (BOOL)_doOptimizedLayoutStartingAtGlyphIndex:(unsigned int)fp8 forSoftLayoutHole:(id)fp12 inTextContainer:(id)fp16 lineLimit:(unsigned int)fp20 nextGlyphIndex:(unsigned int *)fp24;
- (void)_doLayoutWithFullContainerStartingAtGlyphIndex:(unsigned int)fp8 nextGlyphIndex:(unsigned int *)fp12;
- (void)_fillLayoutHoleAtIndex:(unsigned int)fp8 desiredNumberOfLines:(unsigned int)fp12;
- (unsigned int)_smallEncodingGlyphIndexForCharacterIndex:(unsigned int)fp8 startOfRange:(BOOL)fp12 okToFillHoles:(BOOL)fp16;
- (unsigned int)_glyphIndexForCharacterIndex:(unsigned int)fp8 startOfRange:(BOOL)fp12 okToFillHoles:(BOOL)fp16;
- (struct _NSRange)_glyphRangeForCharacterRange:(struct _NSRange)fp8 actualCharacterRange:(struct _NSRange *)fp16 okToFillHoles:(BOOL)fp20;
- (void)_markSelfAsDirtyForBackgroundLayout:(id)fp8;
- (id)_containerDescription;
- (id)_lineFragmentDescription:(BOOL)fp8;
- (id)_glyphDescription;
- (void)_updateUsageForTextContainer:(id)fp8 addingUsedRect:(struct _NSRect)fp12;
- (void)_invalidateUsageForTextContainersInRange:(struct _NSRange)fp8;
- (void)_recalculateUsageForTextContainerAtIndex:(unsigned int)fp8;
- (struct _NSStoredContainerUsage *)_validatedStoredUsageForTextContainerAtIndex:(unsigned int)fp8;
- (void)_invalidateInsertionPoint;
- (void)_invalidateDisplayIfNeeded;
- (void)_resizeTextViewForTextContainer:(id)fp8;
- (id)_selectedRanges;
- (void)_fixSelectionAfterChangeInCharacterRange:(struct _NSRange)fp8 changeInLength:(int)fp16;
- (void)_growCachedRectArrayToSize:(unsigned int)fp8;
- (struct _NSRect *)_rectArrayForRange:(struct _NSRange)fp8 withinSelectionRange:(struct _NSRange)fp16 rangeIsCharRange:(BOOL)fp24 singleRectOnly:(BOOL)fp28 fullLineRectsOnly:(BOOL)fp32 inTextContainer:(id)fp36 rectCount:(unsigned int *)fp40 rangeWithinContainer:(struct _NSRange *)fp44 glyphsDrawOutsideLines:(char *)fp48;
- (struct _NSRect)_boundingRectForGlyphRange:(struct _NSRange)fp8 inTextContainer:(id)fp16 fast:(BOOL)fp20 fullLineRectsOnly:(BOOL)fp24;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct _NSRect)fp8 inTextContainer:(id)fp24 hintGlyphRange:(struct _NSRange)fp28 okToFillHoles:(BOOL)fp36;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct _NSRect)fp8 inTextContainer:(id)fp24 okToFillHoles:(BOOL)fp28;
- (struct _NSRange)_glyphRangeForBoundingRect:(struct _NSRect)fp8 inTextContainer:(id)fp24 fast:(BOOL)fp28 okToFillHoles:(BOOL)fp32;
- (unsigned int)_indexOfFirstGlyphInTextContainer:(id)fp8 okToFillHoles:(BOOL)fp12;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)fp8 changeInLength:(int)fp16;
- (void)_invalidateLayoutForExtendedCharacterRange:(struct _NSRange)fp8 isSoft:(BOOL)fp16;
- (void)_firstTextViewChanged;
- (void)_drawBackgroundForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16 parameters:(struct _NSDrawingParameters *)fp24;
- (char *)_packedGlyphs:(int)fp8 range:(struct _NSRange)fp12 length:(unsigned int *)fp20;
- (void)_drawGlyphsForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16 parameters:(struct _NSDrawingParameters *)fp24;
- (void)_rulerAccViewUpdateStyles:(id)fp8;
- (void)_rulerAccViewSetUpLists;
- (id)_rulerAccView;
- (void)_doUserParagraphStyleLineHeight:(float)fp8 fixed:(BOOL)fp12;
- (void)controlTextDidEndEditing:(id)fp8;
- (void)_rulerAccViewIncrementLineHeightAction:(id)fp8;
- (void)_rulerAccViewFixedLineHeightAction:(id)fp8;
- (void)_rulerAccViewUpdatePullDown:(id)fp8;
- (void)_rulerAccViewPullDownAction:(id)fp8;
- (void)_doUserParagraphStyleLineHeightMultiple:(float)fp8 min:(float)fp12 max:(float)fp16 lineSpacing:(float)fp20 paragraphSpacingBefore:(float)fp24 after:(float)fp28 isFinal:(BOOL)fp32;
- (void)_doUserSetAttributes:(id)fp8 removeAttributes:(id)fp12;
- (void)_doUserSetAttributes:(id)fp8;
- (void)_doUserRemoveMarkerFormatInRange:(struct _NSRange)fp8;
- (void)_doUserSetListMarkerFormat:(id)fp8 options:(unsigned int)fp12 inRange:(struct _NSRange)fp16 level:(unsigned int)fp24;
- (unsigned int)_markerLevelForRange:(struct _NSRange)fp8;
- (void)_doUserSetListMarkerFormat:(id)fp8 options:(unsigned int)fp12;
- (void)_rulerAccViewAlignmentAction:(id)fp8;
- (void)_rulerAccViewListsAction:(id)fp8;
- (void)_rulerAccViewSpacingAction:(id)fp8;
- (void)_rulerAccViewStylesAction:(id)fp8;
- (void)_setRotation:(float)fp8 forGlyphAtIndex:(unsigned int)fp12;
- (float)_rotationForGlyphAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (unsigned int)_glyphAtIndex:(unsigned int)fp8 characterIndex:(unsigned int *)fp12 glyphInscription:(int *)fp16 isValidIndex:(char *)fp20;
- (BOOL)_needToFlushGlyph;
- (void)_setNeedToFlushGlyph:(BOOL)fp8;
- (void)_simpleInsertGlyph:(unsigned int)fp8 atGlyphIndex:(unsigned int)fp12 characterIndex:(unsigned int)fp16 elastic:(BOOL)fp20;
- (void)_simpleDeleteGlyphsInRange:(struct _NSRange)fp8;
- (void)_insertGlyphs:(unsigned int *)fp8 elasticAttributes:(char *)fp12 count:(unsigned int)fp16 atGlyphIndex:(unsigned int)fp20 characterIndex:(unsigned int)fp24;
- (void)_promoteGlyphStoreToFormat:(int)fp8;
- (id)_attachmentSizesRun;
- (struct _NSRect)_currentAttachmentRect;
- (unsigned int)_currentAttachmentIndex;
- (void)_setCurrentAttachmentRect:(struct _NSRect)fp8 index:(unsigned int)fp24;
- (void)_clearCurrentAttachmentSettings;
- (void)_clearTemporaryAttributes;
- (void)_clearTemporaryAttributesForCharacterRange:(struct _NSRange)fp8 changeInLength:(int)fp16;
- (void)_setIsInUILayoutMode:(BOOL)fp8;
- (BOOL)_isInUILayoutMode;
- (BOOL)usesFontLeading;
- (void)setUsesFontLeading:(BOOL)fp8;
- (void)_setHasSeenRightToLeft:(BOOL)fp8;
- (BOOL)_hasSeenRightToLeft;
- (BOOL)flipsIfNeeded;
- (void)setFlipsIfNeeded:(BOOL)fp8;
- (BOOL)ignoresViewTransformations;
- (void)setIgnoresViewTransformations:(BOOL)fp8;
- (BOOL)ignoresAntialiasThreshold;
- (void)setIgnoresAntialiasThreshold:(BOOL)fp8;
@end

@interface NSLayoutManager (NSTextViewSupport)
- (id)rulerMarkersForTextView:(id)fp8 paragraphStyle:(id)fp12 ruler:(id)fp16;
- (id)_rulerAccViewLeftTabWell;
- (id)_rulerAccViewRightTabWell;
- (id)_rulerAccViewCenterTabWell;
- (id)_rulerAccViewDecimalTabWell;
- (id)rulerAccessoryViewForTextView:(id)fp8 paragraphStyle:(id)fp12 ruler:(id)fp16 enabled:(BOOL)fp20;
- (BOOL)layoutManagerOwnsFirstResponderInWindow:(id)fp8;
- (id)firstTextView;
- (id)textViewForBeginningOfSelection;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (void)showPackedGlyphs:(char *)fp8 length:(unsigned int)fp12 glyphRange:(struct _NSRange)fp16 atPoint:(struct _NSPoint)fp24 font:(id)fp32 color:(id)fp36 printingAdjustment:(struct _NSSize)fp40;
- (void)showAttachmentCell:(id)fp8 atPoint:(struct _NSPoint)fp12;
- (void)showAttachmentCell:(id)fp8 inRect:(struct _NSRect)fp12 characterIndex:(unsigned int)fp28;
- (void)drawSpellingUnderlineForGlyphRange:(struct _NSRange)fp8 spellingState:(int)fp16 inGlyphRange:(struct _NSRange)fp20 lineFragmentRect:(struct _NSRect)fp28 lineFragmentGlyphRange:(struct _NSRange)fp44 containerOrigin:(struct _NSPoint)fp52;
- (void)_drawLineForGlyphRange:(struct _NSRange)fp8 inContext:(struct CGContext *)fp16 from:(float)fp20 to:(float)fp24 at:(float)fp28 thickness:(float)fp32 lineOrigin:(struct _NSPoint)fp36 breakForDescenders:(BOOL)fp44 flipped:(BOOL)fp48;
- (void)_drawLineForGlyphRange:(struct _NSRange)fp8 inContext:(struct CGContext *)fp16 from:(float)fp20 to:(float)fp24 at:(float)fp28 thickness:(float)fp32 lineOrigin:(struct _NSPoint)fp36 breakForDescenders:(BOOL)fp44;
- (void)_drawLineForGlyphRange:(struct _NSRange)fp8 type:(int)fp16 baselineOffset:(float)fp20 lineFragmentRect:(struct _NSRect)fp24 lineFragmentGlyphRange:(struct _NSRange)fp40 containerOrigin:(struct _NSPoint)fp48 isStrikethrough:(BOOL)fp56;
- (void)drawUnderlineForGlyphRange:(struct _NSRange)fp8 underlineType:(int)fp16 baselineOffset:(float)fp20 lineFragmentRect:(struct _NSRect)fp24 lineFragmentGlyphRange:(struct _NSRange)fp40 containerOrigin:(struct _NSPoint)fp48;
- (void)drawStrikethroughForGlyphRange:(struct _NSRange)fp8 strikethroughType:(int)fp16 baselineOffset:(float)fp20 lineFragmentRect:(struct _NSRect)fp24 lineFragmentGlyphRange:(struct _NSRange)fp40 containerOrigin:(struct _NSPoint)fp48;
- (void)_lineGlyphRange:(struct _NSRange)fp8 type:(int)fp16 lineFragmentRect:(struct _NSRect)fp20 lineFragmentGlyphRange:(struct _NSRange)fp36 containerOrigin:(struct _NSPoint)fp44 isStrikethrough:(BOOL)fp52;
- (void)strikethroughGlyphRange:(struct _NSRange)fp8 strikethroughType:(int)fp16 lineFragmentRect:(struct _NSRect)fp20 lineFragmentGlyphRange:(struct _NSRange)fp36 containerOrigin:(struct _NSPoint)fp44;
- (void)underlineGlyphRange:(struct _NSRange)fp8 underlineType:(int)fp16 lineFragmentRect:(struct _NSRect)fp20 lineFragmentGlyphRange:(struct _NSRange)fp36 containerOrigin:(struct _NSPoint)fp44;
@end

@interface NSLazyBrowserCell : NSBrowserCell
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)lazyBrowserCell;
- (id)init;
- (id)retain;
- (void)release;
- (id)autorelease;
- (void)dealloc;
- (void)_clearMouseTracking;
- (void)setLoaded:(BOOL)fp8;
- (BOOL)isLoaded;
- (BOOL)_isLoaded;
- (BOOL)_checkLoaded:(id)fp8 rect:(const struct _NSRect *)fp12 highlight:(int)fp16;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (BOOL)isHighlighted;

@end

@interface NSLazyBrowserList : NSMutableArray
{
    unsigned int count;
}

- (unsigned int)count;
- (id)objectAtIndex:(unsigned int)fp8;
- (void)addObject:(id)fp8;
- (void)replaceObjectAtIndex:(unsigned int)fp8 withObject:(id)fp12;
- (void)removeLastObject;
- (void)insertObject:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeObjectAtIndex:(unsigned int)fp8;
- (void)makeObjectsPerform:(SEL)fp8;
- (void)makeObjectsPerform:(SEL)fp8 withObject:(id)fp12;
- (void)getObjects:(id *)fp8 range:(struct _NSRange)fp12;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSLineHeightFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)fp8;
- (id)editingStringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;

@end

@interface NSMatrix : NSControl
{
    id _target;
    SEL _action;
    SEL _doubleAction;
    SEL _errorAction;
    id _delegate;
    id _selectedCell;
    int _selectedRow;
    int _selectedCol;
    int _numRows;
    int _numCols;
    struct _NSSize _cellSize;
    struct _NSSize _intercell;
    id _font;
    id _protoCell;
    id _cellClass;
    NSColor *_backgroundColor;
    id _private;
    NSMutableArray *_cells;
    struct __MFlags _mFlags;
}

+ (void)initialize;
- (void)_allocAndInitPrivateIvars;
- (void)_setFont:(id)fp8 forCell:(id)fp12;
- (void)_setSelectedCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)_setSelectedCell:(id)fp8;
- (void)_maintainCell;
- (id)_initialize:(int)fp8:(int)fp12:(int)fp16;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 mode:(int)fp24 prototype:(id)fp28 numberOfRows:(int)fp32 numberOfColumns:(int)fp36;
- (id)initWithFrame:(struct _NSRect)fp8 mode:(int)fp24 cellClass:(Class)fp28 numberOfRows:(int)fp32 numberOfColumns:(int)fp36;
- (void)dealloc;
- (void)finalize;
- (void)setCellClass:(Class)fp8;
- (Class)cellClass;
- (id)prototype;
- (void)setPrototype:(id)fp8;
- (BOOL)_containedInSingleColumnClipView;
- (id)makeCellAtRow:(int)fp8 column:(int)fp12;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)setMode:(int)fp8;
- (int)mode;
- (id)allowEmptySel:(BOOL)fp8;
- (void)setAllowsEmptySelection:(BOOL)fp8;
- (BOOL)allowsEmptySelection;
- (void)sendAction:(SEL)fp8 to:(id)fp12 forAllCells:(BOOL)fp16;
- (id)cells;
- (void)sortUsingFunction:(void *)fp8 context:(void *)fp12;
- (void)sortUsingSelector:(SEL)fp8;
- (id)selectedCell;
- (id)selectedCells;
- (int)selectedRow;
- (int)selectedColumn;
- (BOOL)_clearSelectedCell;
- (void)deselectSelectedCell;
- (void)deselectAllCells;
- (void)selectCellAtRow:(int)fp8 column:(int)fp12;
- (void)_selectAllNoRecurse:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)selectCell:(id)fp8;
- (BOOL)selectCellWithTag:(int)fp8;
- (void)setSelectionByRect:(BOOL)fp8;
- (BOOL)isSelectionByRect;
- (struct _NSSize)cellSize;
- (void)setCellSize:(struct _NSSize)fp8;
- (struct _NSSize)intercellSpacing;
- (void)setIntercellSpacing:(struct _NSSize)fp8;
- (void)setEnabled:(BOOL)fp8;
- (void)setScrollable:(BOOL)fp8;
- (id)font;
- (void)setFont:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (void)setCellBackgroundColor:(id)fp8;
- (id)cellBackgroundColor;
- (void)setDrawsCellBackground:(BOOL)fp8;
- (BOOL)drawsCellBackground;
- (void)setState:(int)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)getNumberOfRows:(int *)fp8 columns:(int *)fp12;
- (int)numberOfRows;
- (int)numberOfColumns;
- (id)cellAtRow:(int)fp8 column:(int)fp12;
- (struct _NSRect)cellFrameAtRow:(int)fp8 column:(int)fp12;
- (id)_getDrawingRow:(int *)fp8 andCol:(int *)fp12;
- (BOOL)_getRow:(int *)fp8 andCol:(int *)fp12 ofCell:(id)fp16 atRect:(const struct _NSRect *)fp20;
- (BOOL)getRow:(int *)fp8 column:(int *)fp12 ofCell:(id)fp16;
- (BOOL)getRow:(int *)fp8 column:(int *)fp12 forPoint:(struct _NSPoint)fp16;
- (void)_getRow:(int *)fp8 column:(int *)fp12 nearPoint:(struct _NSPoint)fp16;
- (void)renewRows:(int)fp8 columns:(int)fp12;
- (void)putCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)addRow;
- (void)addRowWithCells:(id)fp8;
- (void)insertRow:(int)fp8;
- (void)_needsDisplayfromRow:(int)fp8;
- (void)insertRow:(int)fp8 withCells:(id)fp12;
- (void)removeRow:(int)fp8;
- (void)addColumn;
- (void)addColumnWithCells:(id)fp8;
- (void)insertColumn:(int)fp8;
- (void)_needsDisplayfromColumn:(int)fp8;
- (void)insertColumn:(int)fp8 withCells:(id)fp12;
- (void)removeColumn:(int)fp8;
- (id)cellWithTag:(int)fp8;
- (void)setTag:(int)fp8 atRow:(int)fp12 column:(int)fp16;
- (id)target;
- (void)setTarget:(id)fp8;
- (void)setTarget:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;
- (void)setAction:(SEL)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)setTag:(int)fp8 target:(id)fp12 action:(SEL)fp16 atRow:(int)fp20 column:(int)fp24;
- (void)setAutosizesCells:(BOOL)fp8;
- (BOOL)autosizesCells;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (void)viewDidEndLiveResize;
- (void)_computeAllRevealovers;
- (void)_recursiveWindowDidEnableToolTipCreationAndDisplay;
- (void)resetCursorRects;
- (BOOL)_wantsRevealovers;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)sizeToCells;
- (void)sizeToFit;
- (void)setValidateSize:(BOOL)fp8;
- (void)calcSize;
- (void)drawCell:(id)fp8;
- (void)_setNeedsDisplayInRow:(int)fp8 column:(int)fp12;
- (void)_getVisibleRowRange:(struct _NSRange *)fp8 columnRange:(struct _NSRange *)fp12;
- (void)_setNeedsDisplayForSelectedCells;
- (void)updateCell:(id)fp8;
- (void)_updateCellImage:(id)fp8;
- (void)updateCellInside:(id)fp8;
- (void)drawCellInside:(id)fp8;
- (id)_drawCellAt:(int)fp8:(int)fp12 insideOnly:(BOOL)fp16;
- (void)drawCellAtRow:(int)fp8 column:(int)fp12;
- (id)_highlightCell:(BOOL)fp8 atRow:(int)fp12 column:(int)fp16 andDraw:(BOOL)fp20;
- (void)highlightCell:(BOOL)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)_setMouseTrackingForCell:(id)fp8;
- (void)_clearMouseTrackingForCell:(id)fp8;
- (void)_removeAllCellMouseTracking;
- (int)_firstSelectableRow;
- (BOOL)_selectFirstEnabledCell;
- (void)_setNeedsRedrawBeforeFirstLiveResizeCache:(BOOL)fp8;
- (BOOL)_needsRedrawBeforeFirstLiveResizeCache;
- (void)_setLiveResizeImageCacheingEnabled:(BOOL)fp8;
- (BOOL)_liveResizeImageCacheingEnabled;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct _NSRect)fp8;
- (void)_liveResizeHighlightSelectionInClipRect:(struct _NSRect)fp8;
- (void)_drawRect:(struct _NSRect)fp8 liveResizeFill:(struct _NSRect)fp24:(struct _NSRect)fp40:(struct _NSRect)fp56:(struct _NSRect)fp72 cacheCoveredArea:(struct _NSRect)fp88;
- (BOOL)_needsRedrawForMovement;
- (void)_propagateDownNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setAutoscroll:(BOOL)fp8;
- (BOOL)isAutoscroll;
- (id)_scrollRowToCenter:(int)fp8;
- (void)scrollCellToVisibleAtRow:(int)fp8 column:(int)fp12;
- (BOOL)_mouseHit:(struct _NSPoint)fp8 row:(int *)fp16 col:(int *)fp20;
- (BOOL)_loopHit:(struct _NSPoint)fp8 row:(int *)fp16 col:(int *)fp20;
- (BOOL)_radioHit:(struct _NSPoint)fp8 row:(int *)fp16 col:(int *)fp20;
- (id)_findFirstOne:(int *)fp8:(int *)fp12;
- (id)_deselectAllExcept:(int)fp8:(int)fp12 andDraw:(BOOL)fp16;
- (BOOL)_shouldShowFirstResponderAtRow:(int)fp8 column:(int)fp12 ignoringWindowKeyState:(BOOL)fp16;
- (BOOL)_shouldShowFirstResponderForCell:(id)fp8;
- (void)setNextText:(id)fp8;
- (void)setPreviousText:(id)fp8;
- (id)nextText;
- (id)previousText;
- (BOOL)needsPanelToBecomeKey;
- (void)setRefusesFirstResponder:(BOOL)fp8;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)tabKeyTraversesCells;
- (void)setTabKeyTraversesCells:(BOOL)fp8;
- (void)performClick:(id)fp8;
- (void)_setKeyCellNeedsDisplay;
- (void)_setKeyCellAtRow:(int)fp8 column:(int)fp12;
- (void)_clearKeyCell;
- (void)setKeyCell:(id)fp8;
- (int)__keyRow;
- (int)__keyCol;
- (id)keyCell;
- (void)_selectKeyCellAtRow:(int)fp8 column:(int)fp12;
- (BOOL)_selectNextCellKeyStartingAtRow:(int)fp8 column:(int)fp12;
- (BOOL)_makeNextCellKey;
- (void)_makeNextCellOrViewKey;
- (BOOL)_makePreviousCellKey;
- (void)_makePreviousCellOrViewKey;
- (void)_makeLeftCellKey;
- (void)_makeRightCellKey;
- (void)_makeUpCellKey;
- (void)_makeDownCellKey;
- (void)selectNextKeyView:(id)fp8;
- (void)selectPreviousKeyView:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (BOOL)_changingSelectionWithKeyboard;
- (void)_changeSelectionWithEvent:(id)fp8;
- (void)_moveDownWithEvent:(id)fp8;
- (void)_moveUpWithEvent:(id)fp8;
- (void)_moveRightWithEvent:(id)fp8;
- (void)_moveLeftWithEvent:(id)fp8;
- (void)_setKeyCellFromTop;
- (void)_setKeyCellFromBottom;
- (void)_getBrowser:(id *)fp8 browserColumn:(int *)fp12;
- (id)_cellForRow:(int)fp8 browser:(id)fp12 browserColumn:(int)fp16;
- (int)_acceptableRowAboveRow:(int)fp8 minRow:(int)fp12;
- (int)_acceptableRowBelowRow:(int)fp8 maxRow:(int)fp12;
- (int)_acceptableRowBelowKeyInVisibleRect:(struct _NSRect)fp8;
- (int)_acceptableRowAboveKeyInVisibleRect:(struct _NSRect)fp8;
- (int)_acceptableRowBelowRow:(int)fp8 tryAbovePoint:(struct _NSPoint)fp12;
- (int)_acceptableRowAboveRow:(int)fp8 tryBelowPoint:(struct _NSPoint)fp12;
- (void)_keyboardModifyRow:(int)fp8 column:(int)fp12 withEvent:(id)fp16;
- (void)_pageDownWithEvent:(id)fp8;
- (void)_pageUpWithEvent:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (void)_setBrowserOptimizationsEnabled:(BOOL)fp8;
- (BOOL)_browserOptimizationsEnabled;
- (void)_setAllowsNonVisibleCellsToBecomeFirstResponder:(BOOL)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)_hasEditableCell;
- (id)_makeEditable:(id)fp8:(int)fp12:(int)fp16:(id)fp20;
- (void)shiftModifySelection:(id)fp8;
- (void)altModifySelection:(id)fp8;
- (id)_mouseDownListmode:(id)fp8;
- (id)_mouseDownNonListmode:(id)fp8;
- (id)_mouseDownSimpleTrackingMode:(id)fp8;
- (void)setSelectionFrom:(int)fp8 to:(int)fp12 anchor:(int)fp16 highlight:(BOOL)fp20;
- (id)_setSelectionRange:(struct _SelectionAnchor *)fp8:(BOOL)fp12;
- (id)_selectRange:(struct _SelectionAnchor *)fp8:(struct _SelectionAnchor *)fp12:(BOOL)fp16:(BOOL)fp20;
- (id)_selectRectRange:(struct _SelectionAnchor *)fp8:(BOOL)fp12;
- (id)_selectRowRange:(struct _SelectionAnchor *)fp8:(BOOL)fp12;
- (id)_firstHighlightedCell;
- (int)_cellFurthestFrom:(int)fp8 andCol:(int)fp12;
- (id)_shiftDown:(id)fp8:(id)fp12:(int)fp16:(int)fp20;
- (id)_alternateDown:(id)fp8:(id)fp12:(int)fp16:(int)fp20;
- (id)_normalListmodeDown:(id)fp8:(id)fp12:(int)fp16:(int)fp20;
- (id)_mouseLoop:(id)fp8:(id)fp12:(int)fp16:(int)fp20:(struct _SelectionAnchor *)fp24:(BOOL)fp28;
- (int)mouseDownFlags;
- (void)mouseDown:(id)fp8;
- (BOOL)_keyEquivalentModifierMask:(unsigned int)fp8 matchesModifierFlags:(unsigned int)fp12;
- (BOOL)performKeyEquivalent:(id)fp8;
- (id)_recursiveFindDefaultButtonCell;
- (id)_setWindow:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;
- (BOOL)sendAction;
- (void)_sendDoubleActionToCellAt:(struct _NSPoint)fp8;
- (void)sendDoubleAction;
- (void)startSpeaking:(id)fp8;
- (void)stopSpeaking:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (BOOL)textShouldEndEditing:(id)fp8;
- (BOOL)textShouldBeginEditing:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (void)textDidBeginEditing:(id)fp8;
- (void)textDidChange:(id)fp8;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)textView:(id)fp8 completions:(id)fp12 forPartialWordRange:(struct _NSRange)fp16 indexOfSelectedItem:(int *)fp24;
- (id)_selectTextOfCell:(id)fp8;
- (void)selectText:(id)fp8;
- (id)selectTextAtRow:(int)fp8 column:(int)fp12;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)setToolTip:(id)fp8 forCell:(id)fp12;
- (id)toolTipForCell:(id)fp8;
- (BOOL)_useSimpleTrackingMode;
- (void)_setUseSimpleTrackingMode:(BOOL)fp8;
- (void)_checkForSimpleTrackingMode;
- (void)_selectCellIfRequired;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_doResetOfCursorRects:(BOOL)fp8 revealovers:(BOOL)fp12;
- (void)helpRequested:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)_rightMouseUpOrDown:(id)fp8;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;

@end

@interface _NSMatrixPrivateIvars : NSObject
{
    int _keyCol;
    NSColor *_cellBackgroundColor;
    int _drawingRow;
    int _drawingCol;
    int _matrixMDFlags;
    struct __MFlags2 _mFlags2;
    int _keyRow;
}

@end

@interface NSMatrix (NSMatrixObsolete)
- (SEL)errorAction;
- (void)setErrorAction:(SEL)fp8;
@end

@interface NSMatrix (NSMatrixAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityCurrentEditorForCell:(id)fp8;
- (BOOL)_accessibilityIsRadioGroup;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)_accessibilityCorrectlyParentedCells:(id)fp8;
- (void)_accessibilityLoadBrowserCellsAtRow:(int)fp8 count:(int)fp12;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (unsigned int)accessibilityIndexOfChild:(id)fp8;
- (unsigned int)accessibilityArrayAttributeCount:(id)fp8;
- (id)accessibilityArrayAttributeValues:(id)fp8 index:(unsigned int)fp12 maxCount:(unsigned int)fp16;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (void)accessibilitySetSelectedChildrenAttribute:(id)fp8;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSMenu : NSObject <NSCopying, NSCoding>
{
    NSMenu *_supermenu;
    NSString *_title;
    id _itemArray;
    id _menuImpl;
    struct __mFlags _mFlags;
    NSString *_name;
}

+ (void)initialize;
+ (void)setMenuZone:(struct _NSZone *)fp8;
+ (struct _NSZone *)menuZone;
+ (id)_menusWithName:(id)fp8;
+ (void)_setContextMenuEvent:(id)fp8;
+ (id)_contextMenuEvent;
+ (void)_setContextMenuTarget:(id)fp8;
+ (id)_contextMenuTarget;
+ (void)popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16;
+ (void)popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16 withFont:(id)fp20;
+ (void)_setAppleMenuEnabled:(BOOL)fp8;
+ (void)setMenuBarVisible:(BOOL)fp8;
+ (BOOL)menuBarVisible;
+ (void)_saveTornOffMenus;
+ (void)_restoreTornOffMenus;
- (id)initWithTitle:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_finishedMakingConnections;
- (void)setTitle:(id)fp8;
- (id)title;
- (void)_setMenuName:(id)fp8;
- (id)_menuName;
- (void)setSupermenu:(id)fp8;
- (id)supermenu;
- (void)insertItem:(id)fp8 atIndex:(int)fp12;
- (void)addItem:(id)fp8;
- (id)insertItemWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16 atIndex:(int)fp20;
- (id)addItemWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16;
- (void)removeItemAtIndex:(int)fp8;
- (void)removeItem:(id)fp8;
- (void)setSubmenu:(id)fp8 forItem:(id)fp12;
- (id)itemArray;
- (int)numberOfItems;
- (int)indexOfItem:(id)fp8;
- (int)indexOfItemWithTitle:(id)fp8;
- (int)indexOfItemWithTag:(int)fp8;
- (int)indexOfItemWithRepresentedObject:(id)fp8;
- (int)indexOfItemWithSubmenu:(id)fp8;
- (int)indexOfItemWithTarget:(id)fp8 andAction:(SEL)fp12;
- (int)_indexOfItemWithPartialTitle:(id)fp8;
- (id)itemAtIndex:(int)fp8;
- (id)itemWithTitle:(id)fp8;
- (id)itemWithTag:(int)fp8;
- (void)_setSuppressAutoenabling:(BOOL)fp8;
- (void)setAutoenablesItems:(BOOL)fp8;
- (BOOL)autoenablesItems;
- (BOOL)_performKeyEquivalentWithDelegate:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)_enableItems;
- (void)update;
- (void)setMenuChangedMessagesEnabled:(BOOL)fp8;
- (BOOL)menuChangedMessagesEnabled;
- (void)_menuChanged;
- (void)itemChanged:(id)fp8;
- (void)helpRequested:(id)fp8;
- (void)setMenuRepresentation:(id)fp8;
- (id)_menuImpl;
- (id)menuRepresentation;
- (void)setContextMenuRepresentation:(id)fp8;
- (id)_contextMenuImpl;
- (id)contextMenuRepresentation;
- (void)setTearOffMenuRepresentation:(id)fp8;
- (id)tearOffMenuRepresentation;
- (BOOL)isTornOff;
- (id)attachedMenu;
- (BOOL)isAttached;
- (void)sizeToFit;
- (struct _NSPoint)locationForSubmenu:(id)fp8;
- (void)performActionForItemAtIndex:(int)fp8;
- (id)_insertItemInSortedOrderWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16;
- (BOOL)_isMenuMnemonicString:(id)fp8;
- (void)_popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16;
- (void)_popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16 withFont:(id)fp20;
- (void)_setEnabled:(BOOL)fp8;
- (BOOL)_isEnabled;
- (void)_updateEnabled;
- (void)_popUpMenuWithEvent:(id)fp8 forView:(id)fp12;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (BOOL)_needsPopulate;
- (void)_populate:(BOOL)fp8;
- (BOOL)_ownedByPopUp;
- (void)_setOwnedByPopUp:(id)fp8;
- (id)_owningPopUp;
- (float)menuBarHeight;

@end

@interface NSMenu (NSCompatibilityCoding)
- (id)_responderInitWithCoder:(id)fp8;
- (id)_windowInitWithCoder:(id)fp8;
- (id)_panelInitWithCoder:(id)fp8;
- (id)_menuPanelInitWithCoder:(id)fp8;
@end

@interface NSMenu (NSKeyEquivalents)
+ (void)_addItem:(id)fp8 toTable:(struct _NSMapTable *)fp12;
+ (void)_recursivelyAddItemsInMenu:(id)fp8 toTable:(struct _NSMapTable *)fp12;
+ (void)_removeItem:(id)fp8 fromTable:(struct _NSMapTable *)fp12;
+ (void)_recursivelyRemoveItemsInMenu:(id)fp8 fromTable:(struct _NSMapTable *)fp12;
+ (void)_registerMenuForKeyEquivalentUniquing:(id)fp8;
+ (void)_unregisterMenuForKeyEquivalentUniquing:(id)fp8;
+ (void)_registerMenuItemForKeyEquivalentUniquing:(id)fp8;
+ (void)_unregisterMenuItemForKeyEquivalentUniquing:(id)fp8;
+ (BOOL)_canUseKeyEquivalentForMenuItem:(id)fp8;
@end

@interface NSMenuArrowView : NSView
{
    NSMenuView *_menuView;
    BOOL _isUp;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8 menuView:(id)fp24;
- (void)setIsUp:(BOOL)fp8;
- (BOOL)isFlipped;
- (BOOL)acceptsFirstResponder;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSMenuItem : NSObject <NSMenuItem>
{
    NSMenu *_menu;
    NSString *_title;
    NSString *_keyEquivalent;
    unsigned int _keyEquivalentModifierMask;
    unsigned int _mnemonicLocation;
    int _state;
    NSImage *_image;
    NSImage *_onStateImage;
    NSImage *_offStateImage;
    NSImage *_mixedStateImage;
    id _target;
    SEL _action;
    int _tag;
    id _extraData;
    struct __miFlags _miFlags;
}

+ (void)initialize;
+ (void)setUsesUserKeyEquivalents:(BOOL)fp8;
+ (BOOL)usesUserKeyEquivalents;
+ (id)separatorItem;
+ (id)_userKeyEquivalentForTitle:(id)fp8;
+ (unsigned int)_userKeyEquivalentModifierMaskForTitle:(id)fp8;
- (id)initWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setMenu:(id)fp8;
- (id)menu;
- (BOOL)hasSubmenu;
- (void)setSubmenu:(id)fp8;
- (void)_setSubmenu:(id)fp8;
- (id)submenu;
- (void)_setHidden:(BOOL)fp8;
- (void)_configureAsSeparatorItem;
- (BOOL)_isHidden;
- (void)setTitle:(id)fp8;
- (id)title;
- (void)setAttributedTitle:(id)fp8;
- (id)attributedTitle;
- (BOOL)isSeparatorItem;
- (void)setKeyEquivalent:(id)fp8;
- (id)keyEquivalent;
- (void)setKeyEquivalentModifierMask:(unsigned int)fp8;
- (unsigned int)keyEquivalentModifierMask;
- (BOOL)_shouldForceShiftModifierWithKeyEquivalent:(id)fp8;
- (void)_setKeyEquivalentVirtualKeyCode:(unsigned short)fp8;
- (unsigned short)_keyEquivalentVirtualKeyCode;
- (void)_cacheUserKeyEquivalentInfo;
- (id)userKeyEquivalent;
- (unsigned int)userKeyEquivalentModifierMask;
- (id)_rawKeyEquivalent;
- (unsigned int)_rawKeyEquivalentModifierMask;
- (id)_desiredKeyEquivalent;
- (unsigned int)_desiredKeyEquivalentModifierMask;
- (void)setMnemonicLocation:(unsigned int)fp8;
- (unsigned int)mnemonicLocation;
- (id)mnemonic;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)setImage:(id)fp8;
- (id)image;
- (struct OpaqueIconRef *)_iconRef;
- (void)_setIconRef:(struct OpaqueIconRef *)fp8;
- (void)setState:(int)fp8;
- (int)state;
- (void)setOnStateImage:(id)fp8;
- (id)onStateImage;
- (void)setOffStateImage:(id)fp8;
- (id)offStateImage;
- (void)setMixedStateImage:(id)fp8;
- (id)mixedStateImage;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isEnabled;
- (BOOL)_isEnabled;
- (void)setAlternate:(BOOL)fp8;
- (BOOL)isAlternate;
- (void)setIndentationLevel:(int)fp8;
- (int)indentationLevel;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setTag:(int)fp8;
- (int)tag;
- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;
- (void)setToolTip:(id)fp8;
- (id)toolTip;
- (void)_setChangedFlags:(int)fp8;
- (int)_changedFlags;
- (id)_win32TitleString;
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;
- (id)selectedCell;
- (int)selectedTag;
- (int)selectedRow;
- (id)methodSignatureForSelector:(SEL)fp8;

@end

@interface NSExtraMIData : NSObject
{
    NSString *userKE;
    unsigned int userKEMask;
    NSMenu *submenu;
    NSAttributedString *attributedTitle;
    NSString *tooltip;
    id representedObject;
    _NSBindingAdaptor *bindingAdaptor;
    unsigned short virtualKeyCode;
}

- (id)init;

@end

@interface NSMenuItem (NSCompatibilityCoding)
- (id)_cellInitWithCoder:(id)fp8;
- (id)_actionCellInitWithCoder:(id)fp8;
- (id)_buttonCellInitWithCoder:(id)fp8;
- (id)_menuCellInitWithCoder:(id)fp8;
- (void)setControlView:(id)fp8;
- (id)controlView;
@end

@interface NSMenuItemCell : NSButtonCell
{
    id _extraData;
    struct _NSSize _stateImageSize;
    struct _NSSize _imageSize;
    struct _NSSize _titleSize;
    struct _NSSize _keyEquivalentSize;
    struct _NSSize _size;
    struct __micFlags _micFlags;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
+ (id)_dimmedImage:(id)fp8;
+ (id)_colorizedImage:(id)fp8 color:(id)fp12;
+ (void)_systemColorsChanged:(id)fp8;
- (id)initTextCell:(id)fp8;
- (id)init;
- (id)initImageCell:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)_sharedTextCell;
- (void)setMenuView:(id)fp8;
- (id)menuView;
- (void)setMenuItem:(id)fp8;
- (id)menuItem;
- (id)_specialControlView;
- (void)setHighlighted:(BOOL)fp8;
- (BOOL)isHighlighted;
- (id)keyEquivalentAttributedString;
- (void)setNeedsSizing:(BOOL)fp8;
- (BOOL)needsSizing;
- (void)setNeedsDisplay:(BOOL)fp8;
- (BOOL)needsDisplay;
- (BOOL)_obeysHiddenBit;
- (struct _NSSize)_borderInset;
- (void)calcSize;
- (float)stateImageWidth;
- (float)imageWidth;
- (float)titleWidth;
- (float)keyEquivalentWidth;
- (short)_keyEquivalentGlyphWidth;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect *)_rectsForBounds:(struct _NSRect)fp8;
- (void)_resetMeasuredCell;
- (struct _NSRect)stateImageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)keyEquivalentRectForBounds:(struct _NSRect)fp8;
- (void)drawSeparatorItemWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawStateImageWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawImageWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRange)_characterRangeForPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
- (void)drawKeyEquivalentWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)isOpaque;
- (id)_highlightColor;
- (id)_highlightTextColor;
- (id)title;
- (unsigned int)mnemonicLocation;
- (int)tag;
- (id)representedObject;
- (id)image;
- (int)state;
- (void)setFont:(id)fp8;
- (void)setBordered:(BOOL)fp8;

@end

@interface NSExtraMICData : NSObject
{
    NSMenuItem *item;
    NSMenuView *menuView;
    NSAttributedString *keAttrStr;
}

@end

@interface NSMenuPanel : NSPanel
{
    NSMenuView *_menuView;
}

+ (void)initialize;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (id)menuView;
- (void)setMenuView:(id)fp8;
- (void)update;
- (BOOL)canBecomeKeyWindow;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)_shapeMenuPanel;
- (BOOL)hasShadow;
- (void)_commonAwake;
- (void)setFrame:(struct _NSRect)fp8 display:(BOOL)fp24;
- (BOOL)_setFrameFromString:(id)fp8 force:(BOOL)fp12;

@end

@interface NSMenuScrollView : NSView
{
    NSMenuView *_menuView;
    NSClipView *_clipView;
    NSMenuArrowView *_upArrow;
    NSMenuArrowView *_downArrow;
    struct __msvFlags _msvFlags;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setMenuView:(id)fp8;
- (id)menuView;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28 topView:(BOOL)fp32;
- (void)tile;
- (void)scrollDown;
- (void)scrollUp;
- (BOOL)isFlipped;

@end

@interface NSMenuTemplate : NSObject <NSCoding>
{
    NSString *title;
    struct _NSPoint location;
    id view;
    NSString *menuClassName;
    id supermenu;
    id realObject;
    id extension;
    BOOL isWindowsMenu;
    BOOL isRequestMenu;
    BOOL isFontMenu;
    BOOL interfaceStyle;
    char *cMenuClassName;
    BOOL disabled;
    id popupCell;
}

+ (void)initialize;
- (void)_setMenuClassName:(id)fp8;
- (id)menuClassName;
- (id)supermenu;
- (id)itemMatrix;
- (void)_setTitle:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setSupermenu:(id)fp8;
- (void)_setPullsDown:(BOOL)fp8;
- (BOOL)_pullsDown;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_setEnabled:(BOOL)fp8;
- (BOOL)_isEnabled;
- (void)_setOwnedByPopUp:(id)fp8;

@end

@interface NSMenuView : NSView
{
    NSMenu *_menu;
    NSMutableArray *_cells;
    float _stateImageWidth;
    float _imageAndTitleWidth;
    float _keyEquivalentWidth;
    float *_extents;
    unsigned int _extentsCapacity;
    int _highlightedItemIndex;
    void *_submenuPopupTimer;
    NSMenuView *_attachedMenuView;
    float _scrollArrowHeight;
    float _maxWinHeight;
    NSFont *_font;
    struct _NSSize _minSize;
    float _horizontalEdgePad;
    void *trackingState;
    id _scrollingView;
    struct __mvFlags _mvFlags;
}

+ (void)initialize;
+ (float)menuBarHeight;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initAsTearOff;
- (void)release;
- (void)dealloc;
- (void)finalize;
- (BOOL)isFlipped;
- (BOOL)acceptsFirstResponder;
- (BOOL)_allowsContextMenus;
- (void)_createScrollViewAndWindow;
- (void)_createCells;
- (void)setMenu:(id)fp8;
- (id)menu;
- (void)_attachToSupermenuView:(id)fp8;
- (id)_attachedSupermenuView;
- (void)setHorizontal:(BOOL)fp8;
- (BOOL)isHorizontal;
- (void)setFont:(id)fp8;
- (id)font;
- (void)_itemChanged:(int)fp8;
- (void)itemChanged:(id)fp8;
- (void)_itemAdded:(int)fp8;
- (void)itemAdded:(id)fp8;
- (void)_itemRemoved:(int)fp8;
- (void)itemRemoved:(id)fp8;
- (void)_mainStatusChanged:(id)fp8;
- (void)_mainStatusChanged;
- (void)update;
- (void)_menuChanged;
- (BOOL)isOpaque;
- (BOOL)_shouldDrawTwoBitGray;
- (float)_opacity;
- (void)drawRect:(struct _NSRect)fp8;
- (struct _NSRect)innerRect;
- (struct _NSRect)rectOfItemAtIndex:(int)fp8;
- (int)indexOfItemAtPoint:(struct _NSPoint)fp8;
- (struct _NSRect)_rectToDisplayForItemAtIndex:(int)fp8;
- (void)setNeedsDisplayForItemAtIndex:(int)fp8;
- (void)updateCell:(id)fp8;
- (void)updateCellInside:(id)fp8;
- (void)setHighlightedItemIndex:(int)fp8;
- (int)highlightedItemIndex;
- (void)detachSubmenu;
- (void)attachSubmenuForItemAtIndex:(int)fp8;
- (void)_resetAttachedMenuPositions;
- (void)performActionFlashForItemAtIndex:(int)fp8;
- (void)performActionWithHighlightingForItemAtIndex:(int)fp8;
- (void)_doAutoscrolling;
- (void)_updateTearOffPositionWithScreenPoint:(struct _NSPoint)fp8;
- (void)_startTearingOffWithScreenPoint:(struct _NSPoint)fp8;
- (void)_stopTearingOff;
- (void)_detectTrackingMenuChangeWithScreenPoint:(struct _NSPoint)fp8;
- (void)_updateAutoscrollingStateWithTrackingViewPoint:(struct _NSPoint)fp8 event:(id)fp16;
- (void)_updateSeekingSubmenuWithScreenPoint:(struct _NSPoint)fp8 viewPoint:(struct _NSPoint)fp16 event:(id)fp24;
- (void)_updateHighlightedItemWithTrackingViewPoint:(struct _NSPoint)fp8 event:(id)fp16;
- (void)_handleMouseUpWithEvent:(id)fp8;
- (void)_setMouseMovedEventsEnabled:(BOOL)fp8;
- (void)_invokeActionByKeyForCurrentlySelectedItem;
- (void)insertText:(id)fp8;
- (void)_selectNextItem;
- (void)_selectPreviousItem;
- (BOOL)_traverseToSupermenu;
- (BOOL)_traverseToSubmenu;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveBackward:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveForward:(id)fp8;
- (void)insertNewline:(id)fp8;
- (void)insertNewlineIgnoringFieldEditor:(id)fp8;
- (void)insertParagraphSeparator:(id)fp8;
- (void)cancel:(id)fp8;
- (BOOL)trackWithEvent:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)needsPanelToBecomeKey;
- (float)stateImageOffset;
- (float)stateImageWidth;
- (float)imageAndTitleOffset;
- (float)imageAndTitleWidth;
- (float)keyEquivalentOffset;
- (float)keyEquivalentWidth;
- (short)_keyEquivalentGlyphWidth;
- (void)_configureCell:(id)fp8 forItemAtIndex:(int)fp12;
- (void)setMenuItemCell:(id)fp8 forItemAtIndex:(int)fp12;
- (id)menuItemCellForItemAtIndex:(int)fp8;
- (id)cellForItemAtIndex:(int)fp8;
- (id)_makeCellForMenuItemAtIndex:(int)fp8;
- (void)setNeedsSizing:(BOOL)fp8;
- (BOOL)needsSizing;
- (struct _NSSize)_minSize;
- (void)_setMinSize:(struct _NSSize)fp8;
- (void)_calcScrollArrowHeight;
- (void)sizeToFit;
- (id)attachedMenu;
- (id)attachedMenuView;
- (BOOL)isAttached;
- (BOOL)isTornOff;
- (struct _NSPoint)locationForSubmenu:(id)fp8;
- (float)_scrollArrowHeight;
- (BOOL)_menuBarShouldSpanScreen;
- (void)_resizeWindowWithMaxHeight:(float)fp8;
- (BOOL)_setWindowFrameForPopUpAttachingToRect:(struct _NSRect)fp8 onScreen:(id)fp24 preferredEdge:(int)fp28 popUpSelectedItem:(int)fp32;
- (void)setWindowFrameForAttachingToRect:(struct _NSRect)fp8 onScreen:(id)fp24 preferredEdge:(int)fp28 popUpSelectedItem:(int)fp32;
- (void)_configureAsMainMenu;
- (float)horizontalEdgePadding;
- (void)setHorizontalEdgePadding:(float)fp8;
- (void)_popUpContextMenu:(id)fp8 withEvent:(id)fp12 forView:(id)fp16;
- (BOOL)_allowsTearOffs;
- (void)_setAllowsTearOffs:(BOOL)fp8;
- (id)_backgroundColor;
- (void)_setBackgroundColor:(id)fp8;

@end

@interface NSMenuView (NSWindowScrolling)
+ (int)_menuScrollAmount;
+ (BOOL)_scrollingMenusAreEnabled;
+ (int)_menuScrollingOffset;
+ (int)_finalScrollingOffsetFromEdge;
- (BOOL)_isScrolling;
- (id)_topMenuView;
- (void)_saveInitialMenuPosition;
- (void)_restoreInitialMenuPosition;
- (void)_beginScrolling;
- (void)_endScrolling;
- (int)_scrollingDirectionAndDeltas:(struct _NSPoint *)fp8;
- (void)_maybeScrollMenu;
@end

@interface NSMouseTracker : NSObject
{
    struct _NSPoint _initialPoint;
    struct _NSPoint _previousPoint;
    struct _NSPoint _currentPoint;
    NSEvent *_initialEvent;
    NSEvent *_previousEvent;
    NSEvent *_currentEvent;
    NSView *_view;
    id _delegate;
    double _delay;
    double _interval;
    int _eventMask;
    int _trackingConstraint;
    unsigned int _trackingConstraintKeyMask;
    struct __NSMouseTrackerDelegateRespondTo _delegateRespondTo;
    void *_NSMouseTrackerReserved1;
    void *_NSMouseTrackerReserved2;
    void *_NSMouseTrackerReserved3;
}

- (id)init;
- (struct _NSPoint)_getLocalPoint:(id)fp8;
- (struct _NSPoint)_constrainPoint:(struct _NSPoint)fp8 withEvent:(id)fp16;
- (double)interval;
- (double)delay;
- (void)setPeriodicDelay:(double)fp8 interval:(double)fp16;
- (void)_setDelegate:(id)fp8;
- (void)setEventMask:(int)fp8;
- (int)eventMask;
- (void)_releaseEvents;
- (id)nextEventForWindow:(id)fp8;
- (BOOL)trackWithEvent:(id)fp8 inView:(id)fp12 withDelegate:(id)fp16;
- (BOOL)startTrackingWithEvent:(id)fp8 inView:(id)fp12 withDelegate:(id)fp16;
- (BOOL)continueTrackingWithEvent:(id)fp8;
- (BOOL)stopTrackingWithEvent:(id)fp8;
- (void)setTrackingConstraint:(int)fp8;
- (int)trackingConstraint;
- (void)setTrackingConstraintKeyMask:(unsigned int)fp8;
- (unsigned int)trackingConstraintKeyMask;
- (id)view;
- (id)delegate;
- (struct _NSPoint)currentPoint;
- (struct _NSPoint)previousPoint;
- (struct _NSPoint)initialPoint;
- (id)initialEvent;
- (id)previousEvent;

@end

@interface NSMovie : NSObject <NSCopying, NSCoding>
{
    void *_movie;
    NSURL *_url;
    struct {
        unsigned int dispose:1;
        unsigned int reserved:31;
    } _movieFlags;
    long _reserved1;
    long _reserved2;
}

+ (void)initialize;
+ (id)movieUnfilteredFileTypes;
+ (id)movieUnfilteredPasteboardTypes;
+ (BOOL)canInitWithPasteboard:(id)fp8;
- (id)initWithMovie:(void *)fp8;
- (id)initWithURL:(id)fp8 byReference:(BOOL)fp12;
- (id)initWithPasteboard:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void *)QTMovie;
- (id)URL;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSMovieView : NSView
{
    NSMovie *_fMovie;
    float _fRate;
    float _fVolume;
    struct __MVFlags _fFlags;
    void *_fAuxData;
    unsigned long _fReserved1;
    unsigned long _fReserved2;
    unsigned long _fReserved3;
}

+ (void)initialize;
+ (void)_setupIdle;
+ (void)_idleMovies;
+ (id)defaultMenu;
- (void)_createAuxData;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)loadMovieFromURL:(id)fp8;
- (BOOL)loadMovieFromFile:(id)fp8;
- (void)_createMovieController;
- (void)_disposeMovieController;
- (void)setMovie:(id)fp8;
- (id)movie;
- (void *)movieController;
- (struct _NSRect)movieRect;
- (void)start:(id)fp8;
- (BOOL)isPlaying;
- (void)stop:(id)fp8;
- (void)gotoPosterFrame:(id)fp8;
- (void)gotoBeginning:(id)fp8;
- (void)gotoEnd:(id)fp8;
- (void)stepForward:(id)fp8;
- (void)stepBack:(id)fp8;
- (void)setRate:(float)fp8;
- (float)rate;
- (void)setVolume:(float)fp8;
- (float)volume;
- (void)setMuted:(BOOL)fp8;
- (BOOL)isMuted;
- (void)setLoopMode:(int)fp8;
- (int)loopMode;
- (void)setPlaysSelectionOnly:(BOOL)fp8;
- (BOOL)playsSelectionOnly;
- (void)setPlaysEveryFrame:(BOOL)fp8;
- (BOOL)playsEveryFrame;
- (void)showController:(BOOL)fp8 adjustingSize:(BOOL)fp12;
- (BOOL)isControllerVisible;
- (void)resizeWithMagnification:(float)fp8;
- (struct _NSSize)sizeForMagnification:(float)fp8;
- (void)_setAlwaysIdle:(BOOL)fp8;
- (void)_registerForMovieIdle;
- (void)_unregisterForMovieIdle;
- (void)_movieIdle;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isEditable;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)_isEmptyMovie;
- (void)_updateForEditedMovie:(BOOL)fp8;
- (void)cut:(id)fp8;
- (void)copy:(id)fp8;
- (void)paste:(id)fp8;
- (void)clear:(id)fp8;
- (void)delete:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)_invalidateGStatesForTree;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)removeFromSuperview;
- (void)_windowWillGoAway:(id)fp8;
- (void)_windowDidBecomeVisible:(id)fp8;
- (void)_windowChangedNumber:(id)fp8;
- (void)_windowChangedHilite:(id)fp8;
- (void)_adjustMovieToView;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (void)_doEditOperation:(int)fp8;
- (void)_restoreMovieEditState:(id)fp8;
- (void)_setDrawBackground:(BOOL)fp8;
- (void)_setDrawingBackground:(BOOL)fp8;
- (BOOL)_deferredAdjustMovie;
- (BOOL)_deferredWindowChanged;
- (BOOL)_isAutoPlay;

@end

@interface _NSMovieUndoOperation : NSObject
{
    id _target;
    SEL _selector;
    int _op;
    struct MovieStateRecord **_editState;
}

- (id)initWithMovieView:(id)fp8 selector:(SEL)fp12 operation:(int)fp16;
- (void)registerUndoOperation;
- (void)undoEdit;
- (void)dealloc;
- (void)finalize;

@end

@interface _NSQDCGSContext : NSCGSContext
{
    struct OpaqueGrafPtr *_qdPort;
    NSFocusStack *_focusStack;
}

- (id)initWithCurrentQDPort;
- (void)clipToQDRegion:(struct OpaqueRgnHandle *)fp8;
- (void)dealloc;
- (void)finalize;
- (void *)focusStack;
- (BOOL)isDrawingToScreen;

@end

@interface NSMovieView (NSMovieViewAccessibility)
- (BOOL)accessibilityIsIgnored;
@end

@interface NSMutableAttributedString (NSMutableAttributedStringKitAdditions)
- (void)fixAttributesInRange:(struct _NSRange)fp8;
- (void)fixFontAttributeInRange:(struct _NSRange)fp8;
- (void)fixParagraphStyleAttributeInRange:(struct _NSRange)fp8;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)fp8;
- (void)_fixGlyphInfo:(id)fp8 inRange:(struct _NSRange)fp12;
- (void)fixGlyphInfoAttributeInRange:(struct _NSRange)fp8;
- (void)applyFontTraits:(unsigned int)fp8 range:(struct _NSRange)fp12;
- (void)setAlignment:(int)fp8 range:(struct _NSRange)fp12;
- (void)setBaseWritingDirection:(int)fp8 range:(struct _NSRange)fp12;
- (void)_changeIntAttribute:(id)fp8 by:(int)fp12 range:(struct _NSRange)fp16;
- (void)superscriptRange:(struct _NSRange)fp8;
- (void)subscriptRange:(struct _NSRange)fp8;
- (void)unscriptRange:(struct _NSRange)fp8;
- (BOOL)readFromURL:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16 error:(id *)fp20;
- (BOOL)readFromData:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16 error:(id *)fp20;
- (BOOL)readFromURL:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16;
- (BOOL)readFromData:(id)fp8 options:(id)fp12 documentAttributes:(id *)fp16;
@end

@interface NSObject (NSSetVersionHacks)
+ (void)_kitNewObjectSetVersion:(int)fp8;
@end

@interface NSNextStepFrame : NSView
{
    NSTextFieldCell *titleCell;
    NSButton *closeButton;
    NSButton *minimizeButton;
    unsigned int styleMask;
    struct _frFlags fvFlags;
    struct _NSSize sizingParams;
}

+ (void)initialize;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (struct _NSSize)minContentSizeForMinFrameSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (unsigned int)_validateStyleMask:(unsigned int)fp8;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (void)_showToolbarWithAnimation:(BOOL)fp8;
- (void)_hideToolbarWithAnimation:(BOOL)fp8;
- (float)_distanceFromToolbarBaseToTitlebar;
- (void)setRepresentedFilename:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)shapeWindow;
- (BOOL)isOpaque;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (id)_newButtonOfClass:(Class)fp8 withNormalIconNamed:(id)fp12 alternateIconNamed:(id)fp16 action:(SEL)fp20;
- (void)_updateButtons;
- (id)closeButton;
- (id)minimizeButton;
- (id)zoomButton;
- (id)doIconify:(id)fp8;
- (void)dealloc;
- (void)_setTitleNeedsDisplay;
- (void)_setFrameNeedsDisplay:(BOOL)fp8;
- (void)setTitle:(id)fp8;
- (void)setTitle:(id)fp8 andDefeatWrap:(BOOL)fp12;
- (id)doClose:(id)fp8;
- (int)resizeFlags;
- (id)_resize:(id)fp8;
- (id)titleFont;
- (id)title;
- (id)setCloseTarget:(id)fp8;
- (id)setCloseAction:(SEL)fp8;
- (BOOL)_optimizedRectFill:(const struct _NSRect *)fp8 gray:(float)fp12;
- (BOOL)_drawOptimizedRectFills;
- (struct _NSRect)titleRect;
- (struct _NSRect)innerTitleRect;
- (id)contentFill;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28 topView:(BOOL)fp32;
- (void)_drawFrame:(struct _NSRect)fp8;
- (void)_drawMiniWindow:(struct _NSRect)fp8;
- (struct _NSRect)titlebarRect;
- (void)_drawMenuFrame:(struct _NSRect)fp8;
- (float)_titleWidth;
- (id)_calcTextRect:(struct _NSRect *)fp8;
- (void)_drawTitleStringIn:(struct _NSRect)fp8 withColor:(float)fp24;
- (void)_drawTitledFrame:(struct _NSRect)fp8;
- (int)_inResize:(const struct _NSPoint *)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)rightMouseUp:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)_clearDragMargins;
- (void)_resetDragMargins;
- (void)tile;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)_setCloseEnabled:(BOOL)fp8;
- (void)_setUtilityWindow:(BOOL)fp8;
- (void)_setNonactivatingPanel:(BOOL)fp8;
- (void)setDocumentEdited:(BOOL)fp8;
- (BOOL)worksWhenModal;
- (void)helpRequested:(id)fp8;
- (void)setResizeIncrements:(struct _NSSize)fp8;
- (struct _NSSize)resizeIncrements;
- (void)setAspectRatio:(struct _NSSize)fp8;
- (struct _NSSize)aspectRatio;
- (unsigned int)styleMask;
- (void)_clearPressedButtons;

@end

@interface NSDocumentDragButton : NSButton
{
    struct __ddbFlags _ddbFlags;
    NSString *filename;
    NSEvent *mouseDownEvent;
}

- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (void)setRepresentedFilename:(id)fp8;
- (id)representedFilename;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)_dragFile:(id)fp8 fromRect:(struct _NSRect)fp12 slideBack:(BOOL)fp28 event:(id)fp32 showAsModified:(BOOL)fp36;
- (void)_showDragError:(int)fp8 forFilename:(id)fp12;
- (void)mouseUp:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSNibConnector : NSObject <NSCoding>
{
    id _source;
    id _destination;
    NSString *_label;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)source;
- (void)setSource:(id)fp8;
- (id)destination;
- (void)setDestination:(id)fp8;
- (id)label;
- (void)setLabel:(id)fp8;
- (void)replaceObject:(id)fp8 withObject:(id)fp12;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSNibControlConnector : NSNibConnector
{
}

+ (void)initialize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)establishConnection;

@end

@interface NSBundle (NSNibLoading)
+ (BOOL)loadNibNamed:(id)fp8 owner:(id)fp12;
+ (BOOL)_loadNibFile:(id)fp8 nameTable:(id)fp12 withZone:(struct _NSZone *)fp16 ownerBundle:(id)fp20;
+ (BOOL)loadNibFile:(id)fp8 externalNameTable:(id)fp12 withZone:(struct _NSZone *)fp16;
- (BOOL)loadNibFile:(id)fp8 externalNameTable:(id)fp12 withZone:(struct _NSZone *)fp16;
@end

@interface NSNibOutletConnector : NSNibConnector
{
}

+ (void)initialize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)establishConnection;

@end

@interface Object (NSSetVersionHacks)
+ (void)_kitOldObjectSetVersion:(int)fp8;
@end

@interface NSOpenGLContext : NSObject
{
    NSView *_view;
    struct _CGLContextObject *_contextAuxiliary;
}

+ (id)currentContext;
+ (void)clearCurrentContext;
- (id)initWithFormat:(id)fp8 shareContext:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (void)makeCurrentContext;
- (void)copyAttributesFromContext:(id)fp8 withMask:(unsigned long)fp12;
- (void)flushBuffer;
- (void)clearDrawable;
- (void)update;
- (void)setView:(id)fp8;
- (void)_surfaceWillGoAway:(id)fp8;
- (void)_surfaceDidComeBack:(id)fp8;
- (void)setOffScreen:(void *)fp8 width:(long)fp12 height:(long)fp16 rowbytes:(long)fp20;
- (void)setFullScreen;
- (id)view;
- (void)setValues:(const int *)fp8 forParameter:(int)fp12;
- (void)getValues:(long *)fp8 forParameter:(int)fp12;
- (void)setCurrentVirtualScreen:(int)fp8;
- (int)currentVirtualScreen;
- (void)createTexture:(unsigned long)fp8 fromView:(id)fp12 internalFormat:(unsigned long)fp16;
- (void *)CGLContextObj;
- (void)setPixelBuffer:(id)fp8 cubeMapFace:(unsigned long)fp12 mipMapLevel:(long)fp16 currentVirtualScreen:(int)fp20;
- (id)pixelBuffer;
- (unsigned long)pixelBufferCubeMapFace;
- (long)pixelBufferMipMapLevel;
- (void)setTextureImageToPixelBuffer:(id)fp8 colorBuffer:(unsigned long)fp12;

@end

@interface NSOpenGLContext (NSOpenGL_Private)
- (struct _CGLContextObject *)_contextAuxiliary;
@end

@interface NSOpenGLPixelFormat : NSObject <NSCoding>
{
    struct _CGLPixelFormatObject *_pixelFormatAuxiliary;
    NSData *_pixelAttributes;
    unsigned long _reserved1;
    unsigned long _reserved2;
    unsigned long _reserved3;
}

+ (void)initialize;
- (id)initWithAttributes:(int *)fp8;
- (id)initWithData:(id)fp8;
- (id)attributes;
- (void)setAttributes:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)getValues:(long *)fp8 forAttribute:(int)fp12 forVirtualScreen:(int)fp16;
- (int)numberOfVirtualScreens;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void *)CGLPixelFormatObj;

@end

@interface NSOpenGLPixelFormat (NSOpenGL_Private)
- (struct _CGLPixelFormatObject *)_pixelFormatAuxiliary;
@end

@interface NSOpenGLView : NSView
{
    NSOpenGLContext *_openGLContext;
    NSOpenGLPixelFormat *_pixelFormat;
    unsigned long _reserved1;
    unsigned long _reserved2;
    unsigned long _reserved3;
}

+ (void)initialize;
+ (id)defaultPixelFormat;
- (id)initWithFrame:(struct _NSRect)fp8 pixelFormat:(id)fp24;
- (void)dealloc;
- (void)finalize;
- (void)setOpenGLContext:(id)fp8;
- (id)openGLContext;
- (void)clearGLContext;
- (BOOL)isOpaque;
- (void)setPixelFormat:(id)fp8;
- (id)pixelFormat;
- (void)lockFocus;
- (void)prepareOpenGL;
- (void)reshape;
- (void)update;
- (id)_invalidateGStatesForTree;
- (void)_surfaceNeedsUpdate:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSOutlineView : NSTableView
{
    int _numberOfRows;
    struct __NSOVRowEntry *_rowEntryTree;
    struct __CFDictionary *_itemToEntryMap;
    int _unused2;
    int _unused3;
    int _unused1;
    NSTableColumn *_outlineTableColumn;
    BOOL _initedRows;
    BOOL _indentationMarkerInCell;
    int _indentationPerLevel;
    NSButtonCell *_outlineCell;
    struct _NSRect _trackingOutlineFrame;
    NSMouseTracker *_tracker;
    id _unused4;
    struct __OvFlags _ovFlags;
    id _ovLock;
    long *_indentArray;
    long _originalWidth;
    id _expandSet;
    id _expandSetToExpandItemsInto;
    long _indentArraySize;
    NSButtonCell *_trackingOutlineCell;
    int _trackingRow;
    id _ovReserved;
}

+ (void)initialize;
+ (void)_delayedFreeRowEntryFreeList;
+ (void)_initializeRegisteredDefaults;
+ (BOOL)_shouldAllowAutoExpandItemsDuringDragsDefault;
+ (BOOL)_shouldAllowAutoCollapseItemsDuringDragsDefault;
+ (BOOL)_shouldRequireAutoCollapseOutlineAfterDropsDefault;
- (void)_commonInit;
- (void)_goneMultiThreaded;
- (void)_goneSingleThreaded;
- (id)init;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)_finishedTableViewInitWithCoder;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)isExpandable:(id)fp8;
- (BOOL)_shouldContinueExpandAtLevel:(int)fp8 beganAtLevel:(int)fp12;
- (void)_expandItemEntry:(struct __NSOVRowEntry *)fp8 expandChildren:(BOOL)fp12 startLevel:(int)fp16;
- (void)_expandItemEntry:(struct __NSOVRowEntry *)fp8 expandChildren:(BOOL)fp12;
- (void)_batchExpandItemsWithItemEntries:(struct __CFArray *)fp8 expandChildren:(BOOL)fp12;
- (void)expandItem:(id)fp8;
- (void)expandItem:(id)fp8 expandChildren:(BOOL)fp12;
- (void)_collapseItemEntry:(struct __NSOVRowEntry *)fp8 collapseChildren:(BOOL)fp12 clearExpandState:(BOOL)fp16 recursionLevel:(int)fp20;
- (void)_batchCollapseItemsWithItemEntries:(struct __CFArray *)fp8 collapseChildren:(BOOL)fp12 clearExpandState:(BOOL)fp16;
- (void)_batchCollapseItemsWithItemEntries:(struct __CFArray *)fp8 collapseChildren:(BOOL)fp12;
- (void)collapseItem:(id)fp8;
- (void)collapseItem:(id)fp8 collapseChildren:(BOOL)fp12;
- (void)_collapseItem:(id)fp8 collapseChildren:(BOOL)fp12 clearExpandState:(BOOL)fp16;
- (void)_endEditingIfEditedCellIsChildOfItemEntry:(struct __NSOVRowEntry *)fp8;
- (void)_adjustEditedCellLocation;
- (void)_scrollFieldEditorToVisible:(id)fp8;
- (BOOL)_supportsVariableHeightRows;
- (float)_sendDelegateHeightOfRow:(int)fp8;
- (void)_adjustSelectionForItemEntry:(struct __NSOVRowEntry *)fp8 numberOfRows:(int)fp12 adjustFieldEditorIfNecessary:(BOOL)fp16;
- (void)_calcOutlineColumnWidth;
- (void)_resizeOutlineColumn;
- (void)reloadData;
- (void)reloadItem:(id)fp8;
- (void)reloadItem:(id)fp8 reloadChildren:(BOOL)fp12;
- (void)setIndentationPerLevel:(float)fp8;
- (float)indentationPerLevel;
- (void)setIndentationMarkerFollowsCell:(BOOL)fp8;
- (BOOL)indentationMarkerFollowsCell;
- (void)setOutlineTableColumn:(id)fp8;
- (id)outlineTableColumn;
- (void)removeTableColumn:(id)fp8;
- (void)setAutoresizesOutlineColumn:(BOOL)fp8;
- (BOOL)autoresizesOutlineColumn;
- (void)_postItemWillExpandNotification:(id)fp8;
- (void)_postItemWillCollapseNotification:(id)fp8;
- (void)_postItemDidExpandNotification:(id)fp8;
- (void)_postItemDidCollapseNotification:(id)fp8;
- (void)setDataSource:(id)fp8;
- (void)setDelegate:(id)fp8;
- (int)numberOfRows;
- (void)_autoscrollForDraggingInfo:(id)fp8 timeDelta:(double)fp12;
- (void)mouseDown:(id)fp8;
- (void)_drawOutlineCell:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)_highlightOutlineCell:(id)fp8 highlight:(BOOL)fp12 withFrame:(struct _NSRect)fp16 inView:(id)fp32;
- (void)_doUserExpandOrCollapseOfItem:(id)fp8 isExpand:(BOOL)fp12 optionKeyWasDown:(BOOL)fp16;
- (struct __CFArray *)_createSelectedRowEntriesArrayIncludingExpandable:(BOOL)fp8 includingUnexpandable:(BOOL)fp12 withCurrentExpandState:(BOOL)fp16;
- (void)keyDown:(id)fp8;
- (BOOL)mouseTracker:(id)fp8 shouldStartTrackingWithEvent:(id)fp12;
- (BOOL)mouseTracker:(id)fp8 shouldContinueTrackingWithEvent:(id)fp12;
- (BOOL)mouseTracker:(id)fp8 didStopTrackingWithEvent:(id)fp12;
- (BOOL)_dataSourceIsItemExpandable:(id)fp8;
- (id)_dataSourceChild:(int)fp8 ofItem:(id)fp12;
- (int)_dataSourceNumberOfChildrenOfItem:(id)fp8;
- (id)_dataSourceValueForColumn:(id)fp8 row:(int)fp12;
- (void)_dataSourceSetValue:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (void)_delegateWillDisplayCell:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (void)_delegateWillDisplayOutlineCell:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (void)_sendDelegateWillDisplayOutlineCell:(id)fp8 inOutlineTableColumnAtRow:(int)fp12;
- (BOOL)_delegateRespondsToGetToolTip;
- (id)_sendDelegateToolTipForCell:(id)fp8 tableColumn:(id)fp12 rect:(struct _NSRect *)fp16 row:(int)fp20 mouseLocation:(struct _NSPoint)fp24;
- (void)_sendDelegateWillDisplayCell:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (id)_alternateAutoExpandImageForOutlineCell:(id)fp8 inRow:(int)fp12 withFrame:(struct _NSRect)fp16;
- (void)_debugDrawRowNumberInCell:(id)fp8 withFrame:(struct _NSRect)fp12 forRow:(int)fp28;
- (void)drawRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (void)_drawContentsAtRow:(int)fp8 column:(int)fp12 clipRect:(struct _NSRect)fp16;
- (struct _NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (struct _NSRect)_frameOfOutlineCellAtRow:(int)fp8;
- (void)_redisplayAndResizeFromRow:(int)fp8;
- (BOOL)_userCanChangeSelection;
- (BOOL)_sendDelegateCanSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)_sendDelegateCanSelectColumn:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (struct __NSOVRowEntry *)_rowEntryForItem:(id)fp8 requiredRowEntryLoadMask:(unsigned int)fp12;
- (struct __NSOVRowEntry *)_rowEntryForChild:(int)fp8 ofParent:(struct __NSOVRowEntry *)fp12 requiredRowEntryLoadMask:(unsigned int)fp16;
- (struct __NSOVRowEntry *)_rowEntryForRow:(int)fp8 requiredRowEntryLoadMask:(unsigned int)fp12;
- (id)itemAtRow:(int)fp8;
- (int)rowForItem:(id)fp8;
- (id)parentForItem:(id)fp8;
- (int)levelForItem:(id)fp8;
- (int)levelForRow:(int)fp8;
- (BOOL)isItemExpanded:(id)fp8;
- (BOOL)_userCanEditTableColumn:(id)fp8 row:(int)fp12;
- (BOOL)autosaveExpandedItems;
- (void)setAutosaveExpandedItems:(BOOL)fp8;
- (void)_readPersistentExpandItems;
- (id)_convertPersistentItem:(id)fp8;
- (void)_writePersistentExpandItems;
- (void)setAutosaveName:(id)fp8;
- (BOOL)_shouldAttemptDroppingAsChildOfLeafItems;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)fp8;
- (void)setDropItem:(id)fp8 dropChildIndex:(int)fp12;
- (BOOL)_hoverAreaIsSameAsLast:(id)fp8;
- (void)_tryDrop:(id)fp8 dropItem:(id)fp12 dropChildIndex:(int)fp16;
- (void)_determineDropCandidateForDragInfo:(id)fp8;
- (void)_setNeedsDisplayForDropCandidateItem:(id)fp8 childIndex:(int)fp12 mask:(unsigned int)fp16;
- (void)dragImage:(id)fp8 at:(struct _NSPoint)fp12 offset:(struct _NSSize)fp20 event:(id)fp28 pasteboard:(id)fp32 source:(id)fp36 slideBack:(BOOL)fp40;
- (struct _NSRange)_columnRangeForDragImage;
- (void)_drawDropHighlight;
- (BOOL)_canInitiateRowDragInColumn:(int)fp8;
- (void)_sendDelegateDidMouseDownInHeader:(int)fp8;
- (void)_sendDelegateDidClickColumn:(int)fp8;
- (void)_sendDelegateDidDragColumn:(int)fp8;
- (BOOL)_sendDataSourceWriteDragDataWithIndexes:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (void)_sendDataSourceSortDescriptorsDidChange:(id)fp8;
- (BOOL)_dataSourceRespondsToSortDescriptorsDidChange;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)_startAutoExpandingItemFlash;
- (void)_autoExpandFlashOnce;
- (void)_stopAutoExpandingItemFlash;
- (void)_scheduleAutoExpandTimerForItem:(id)fp8;
- (void)_autoExpandItem:(id)fp8;
- (void)_cancelAutoExpandTimer;
- (void)_collapseAllAutoExpandedItems;
- (void)_cancelAnyScheduledAutoCollapse;
- (void)_collapseAutoExpandedItems:(id)fp8;
- (id)_itemsFromRowsWithIndexes:(id)fp8;
- (float)_minXLocOfOutlineColumn;
- (int)_countDisplayedDescendantsOfItem:(id)fp8;
- (id)_findParentWithLevel:(int)fp8 beginingAtItem:(id)fp12 childEncountered:(int *)fp16;

@end

@interface _NSOutlineViewReserved : NSObject
{
    NSMutableArray *draggedItems;
    id dropCandidateItem;
    int dropCandidateChildIndex;
    NSMutableArray *autoExpandedItems;
    id autoExpandTimerItem;
    struct __CFArray *rowEntryArray;
}

@end

@interface NSOutlineRow : NSTableRow
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySubroleAttribute;
- (id)accessibilityDisclosingAttribute;
- (BOOL)accessibilityIsDisclosingAttributeSettable;
- (void)accessibilitySetDisclosingAttribute:(id)fp8;
- (id)accessibilityDisclosedRowsAttribute;
- (BOOL)accessibilityIsDisclosedRowsAttributeSettable;
- (id)accessibilityDisclosedByRowAttribute;
- (BOOL)accessibilityIsDisclosedByRowAttributeSettable;
- (id)accessibilityDisclosureLevelAttribute;
- (BOOL)accessibilityIsDisclosureLevelAttributeSettable;

@end

@interface NSOutlineView (NSOutlineViewAccessibility)
- (id)accessibilityRoleAttribute;
- (id)_accessibilityTableRow:(int)fp8;
@end

@interface NSPageLayout : NSObject
{
    unsigned char _184BytesOfPrivateData[184];
}

+ (id)pageLayout;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)beginSheetWithPrintInfo:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didEndSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (int)runModal;
- (int)runModalWithPrintInfo:(id)fp8;
- (id)accessoryView;
- (void)setAccessoryView:(id)fp8;
- (id)printInfo;
- (void)readPrintInfo;
- (void)writePrintInfo;
- (void)convertOldFactor:(float *)fp8 newFactor:(float *)fp12;
- (void)pickedButton:(id)fp8;
- (void)pickedOrientation:(id)fp8;
- (void)pickedPaperSize:(id)fp8;
- (void)pickedUnits:(id)fp8;
- (void)_dismissSheet:(unsigned char)fp8;
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;

@end

@interface _NSPageLayoutPrivateData : NSObject
{
    void *appModalPMDialogDoneUPP;
    void *docModalPMDialogDoneUPP;
    NSView *accessoryView;
    NSPrintInfo *printInfo;
    id delegate;
    SEL didEndSelector;
    void *contextInfo;
    struct OpaquePMPageFormat *pageFormat;
    BOOL mustUnregisterAccessoryViewPDE;
    NSCarbonWindow *carbonWindow;
}

@end

@interface NSApplication (NSPageLayoutPanel)
- (void)runPageLayout:(id)fp8;
@end

@interface NSKitPanelController : NSObject
{
    NSPanel *panel;
}

- (id)panel;

@end

@interface NSPanel : NSWindow
{
}

+ (unsigned int)_validateStyleMask:(unsigned int)fp8;
- (id)_initContent:(const struct _NSRect *)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20 contentView:(id)fp24;
- (id)_initContent:(const struct _NSRect *)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20 counterpart:(id)fp24;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (id)init;
- (BOOL)isFloatingPanel;
- (void)setFloatingPanel:(BOOL)fp8;
- (void)setBecomesKeyOnlyIfNeeded:(BOOL)fp8;
- (BOOL)becomesKeyOnlyIfNeeded;
- (void)resignKeyWindow;
- (BOOL)_toggleOrderedFrontMostWillOrderOut;
- (void)setWorksWhenModal:(BOOL)fp8;
- (BOOL)worksWhenModal;
- (void)cancel:(id)fp8;
- (BOOL)_showToolTip;
- (id)_setTempHidden:(BOOL)fp8;
- (id)_doSetAccessoryView:(id)fp8 topView:(id)fp12 bottomView:(id)fp16 previousKeyView:(id)fp20 oldView:(id *)fp24;
- (id)_doSetAccessoryView:(id)fp8 topView:(id)fp12 bottomView:(id)fp16 oldView:(id *)fp20;
- (id)_replaceAccessoryView:(id)fp8 with:(id)fp12 topView:(id)fp16 bottomView:(id)fp20 previousKeyView:(id)fp24;

@end

@interface NSMutableParagraphStyle : NSParagraphStyle
{
}

- (void)setParagraphStyle:(id)fp8;
- (void)setLineSpacing:(float)fp8;
- (void)setParagraphSpacing:(float)fp8;
- (void)setAlignment:(int)fp8;
- (void)setHeadIndent:(float)fp8;
- (void)setTailIndent:(float)fp8;
- (void)setFirstLineHeadIndent:(float)fp8;
- (void)setMinimumLineHeight:(float)fp8;
- (void)setMaximumLineHeight:(float)fp8;
- (void)setLineBreakMode:(int)fp8;
- (void)setLineHeightMultiple:(float)fp8;
- (void)setParagraphSpacingBefore:(float)fp8;
- (void)setDefaultTabInterval:(float)fp8;
- (void)setTextBlocks:(id)fp8;
- (void)setTextLists:(id)fp8;
- (void)_mutateTabStops;
- (void)addTabStop:(id)fp8;
- (void)removeTabStop:(id)fp8;
- (void)setTabStops:(id)fp8;
- (void)setBaseWritingDirection:(int)fp8;
- (void)setHyphenationFactor:(float)fp8;
- (void)setTighteningFactorForTruncation:(float)fp8;
- (void)setHeaderLevel:(int)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    float _lineSpacing;
    float _paragraphSpacing;
    float _headIndent;
    float _tailIndent;
    float _firstLineHeadIndent;
    float _minimumLineHeight;
    float _maximumLineHeight;
    NSArray *_tabStops;
    struct {
        unsigned int alignment:4;
        unsigned int lineBreakMode:4;
        unsigned int tabStopsIsMutable:1;
        unsigned int isNaturalDirection:1;
        unsigned int rightToLeftDirection:1;
        unsigned int fixedMultiple:2;
        unsigned int refCount:19;
    } _flags;
    float _defaultTabInterval;
    id _extraData;
}

+ (void)initialize;
+ (id)defaultParagraphStyle;
+ (int)_defaultWritingDirection;
+ (int)defaultWritingDirectionForLanguage:(id)fp8;
- (void)_allocExtraData;
- (void)_deallocExtraData;
- (id)_initWithParagraphStyle:(id)fp8;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
- (unsigned int)hash;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (void)dealloc;
- (void)finalize;
- (BOOL)isEqual:(id)fp8;
- (float)lineSpacing;
- (float)paragraphSpacing;
- (int)alignment;
- (float)headIndent;
- (float)tailIndent;
- (id)tabStops;
- (float)firstLineHeadIndent;
- (float)minimumLineHeight;
- (float)maximumLineHeight;
- (int)lineBreakMode;
- (int)baseWritingDirection;
- (float)lineHeightMultiple;
- (float)paragraphSpacingBefore;
- (float)defaultTabInterval;
- (id)textBlocks;
- (id)textLists;
- (float)hyphenationFactor;
- (float)tighteningFactorForTruncation;
- (int)headerLevel;
- (BOOL)_isSuitableForFastStringDrawingWithAlignment:(int *)fp8 lineBreakMode:(int *)fp12 tighteningFactorForTruncation:(float *)fp16;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)description;

@end

@interface NSParagraphStyleExtraData : NSObject
{
    float _lineHeightMultiple;
    float _paragraphSpacingBefore;
    float _hyphenationFactor;
    float _tighteningFactor;
    int _headerLevel;
    NSArray *_textBlocks;
    NSArray *_textLists;
}

@end

@interface NSTextTab : NSObject <NSCopying, NSCoding>
{
    struct {
        unsigned int alignment:4;
        unsigned int refCount:24;
        unsigned int unused:4;
    } _flags;
    float _location;
    id _reserved;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)initWithType:(int)fp8 location:(float)fp12;
- (id)initWithTextAlignment:(int)fp8 location:(float)fp12 options:(id)fp16;
- (int)alignment;
- (id)options;
- (void)dealloc;
- (void)finalize;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (float)location;
- (int)tabStopType;
- (id)accessibilityRulerMarkerType;
- (id)accessibilityRulerMarkerTypeDescription;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)isEqual:(id)fp8;
- (id)description;

@end

@interface NSPasteboard : NSObject
{
    id _pboard;
    int _gen;
    id _owners;
    int _cachedTypeNameChangeCount;
    NSArray *_cachedTypeNames;
    void *_reserved[6];
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)alloc;
+ (id)_tmpPasteboardWithCFPasteboard:(struct __CFPasteboard *)fp8;
+ (id)_pasteboardWithName:(id)fp8;
+ (id)generalPasteboard;
+ (id)pasteboardWithUniqueName;
+ (id)pasteboardWithName:(id)fp8;
+ (void)_provideAllPromisedData;
+ (id)_convertStringToData:(id)fp8;
+ (id)_convertDataToString:(id)fp8;
+ (id)typesFilterableTo:(id)fp8;
+ (id)pasteboardByFilteringFile:(id)fp8;
+ (id)pasteboardByFilteringData:(id)fp8 ofType:(id)fp12;
+ (id)pasteboardByFilteringTypesInPasteboard:(id)fp8;
- (void)dealloc;
- (void)releaseGlobally;
- (id)name;
- (int)declareTypes:(id)fp8 owner:(id)fp12;
- (int)addTypes:(id)fp8 owner:(id)fp12;
- (BOOL)setData:(id)fp8 forType:(id)fp12;
- (id)types;
- (id)availableTypeFromArray:(id)fp8;
- (id)_dataWithoutConversionForType:(id)fp8;
- (id)dataForType:(id)fp8;
- (int)changeCount;
- (BOOL)setPropertyList:(id)fp8 forType:(id)fp12;
- (id)propertyListForType:(id)fp8;
- (BOOL)setString:(id)fp8 forType:(id)fp12;
- (id)stringForType:(id)fp8;
- (struct __CFPasteboard *)_cfPasteboard;

@end

@interface NSURL (NSPasteboardSupport)
+ (id)URLFromPasteboard:(id)fp8;
- (void)writeToPasteboard:(id)fp8;
@end

@interface _NSFilePromiseTypeConverter : NSObject
{
}

+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSPromiseContentsTypeConverter : NSObject
{
}

+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSStringPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSTIFFPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;
+ (void)_setConvertedData:(id)fp8 pboard:(struct __CFPasteboard *)fp12 generation:(long)fp16 inItem:(void *)fp20;

@end

@interface _NSRTFPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;
+ (void)_setConvertedData:(id)fp8 pboard:(struct __CFPasteboard *)fp12 generation:(long)fp16 inItem:(void *)fp20;
+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSColorPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)fp8 fromPasteboard:(id)fp12;

@end

@interface _NSURLPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (void)_setConvertedData:(id)fp8 pboard:(struct __CFPasteboard *)fp12 generation:(long)fp16 inItem:(void *)fp20;
+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSFilenamePboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)fp8 fromPasteboard:(id)fp12;
+ (void)_setConvertedData:(id)fp8 pboard:(struct __CFPasteboard *)fp12 generation:(long)fp16 inItem:(void *)fp20;
+ (id)_getConvertedDataFromPasteboard:(id)fp8;

@end

@interface _NSAsciiPboardTypeConverter : _NSPboardTypeConverter
{
}

+ (id)dataForType:(id)fp8 fromPasteboard:(id)fp12;

@end

@interface _NSPboardTypeConverter : NSObject
{
}

+ (id)dataForType:(id)fp8 fromPasteboard:(id)fp12;
+ (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;

@end

@interface NSPasteboard (NSTypeConversion)
+ (id)_cocoaTypeNameFromIdentifier:(struct __CFString *)fp8;
+ (struct __CFString *)_typeIdentifierFromCocoaName:(id)fp8;
+ (struct __CFString *)_typeIdentifierFromCarbonCode:(unsigned long)fp8;
+ (id)_typesIncludingConversionsFromTypes:(id)fp8;
+ (void)_setConversionFromData:(id)fp8 type:(id)fp12 inPasteboard:(struct __CFPasteboard *)fp16 generation:(long)fp20 item:(void *)fp24;
- (id)_dataWithConversionForType:(id)fp8;
- (void)_addConversionsFromTypes:(id)fp8;
@end

@interface _NSPDFDocument : NSObject
{
    struct CGPDFDocument *_document;
    struct CGRect _mediaBox;
    struct _NSRect _cropBox;
    float _rotation;
    int _currentPage;
}

- (id)initWithData:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (struct CGPDFDocument *)documentRef;
- (struct CGRect)mediaBox;
- (struct _NSRect)bounds;
- (void)adjustCTM:(struct CGContext *)fp8;
- (void)setCurrentPage:(int)fp8;
- (int)currentPage;
- (int)pageCount;

@end

@interface NSPDFImageRep : NSImageRep
{
    NSData *_pdfData;
    int _reserved1;
    int _reserved2;
    id _private;
}

+ (void)initialize;
+ (BOOL)canInitWithData:(id)fp8;
+ (id)imageRepWithData:(id)fp8;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (id)initWithData:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)draw;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (void *)_createPatternFromRect:(struct _NSRect)fp8;
- (BOOL)_isValid;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)PDFRepresentation;
- (struct _NSRect)bounds;
- (void)setCurrentPage:(int)fp8;
- (int)currentPage;
- (int)pageCount;
- (int)_uncachedSize;

@end

@interface NSPSAndPDFGraphicsContext : NSPersistentGraphicsContext
{
    NSString *spoolFilePath;
}

- (id)initWithAttributes:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)data;
- (void)beginDocumentWithTitle:(id)fp8;
- (void)endDocument;
- (void)beginPage:(struct _NSRect)fp8;
- (void)endPage;

@end

@interface NSPersistentGraphicsContext : NSCGSContext
{
    NSDictionary *_attributes;
    NSMutableData *_stream;
    NSFocusStack *_focusStack;
}

+ (id)graphicsContextWithAttributes:(id)fp8;
- (id)initWithAttributes:(id)fp8;
- (void)dealloc;
- (void *)focusStack;
- (void)setFocusStack:(void *)fp8;
- (BOOL)isDrawingToScreen;
- (id)data;
- (id)attributes;
- (void)beginDocumentWithTitle:(id)fp8;
- (void)endDocument;
- (void)beginPage:(struct _NSRect)fp8;
- (void)endPage;

@end

@interface NSPICTImageRep : NSImageRep
{
    struct _NSPoint _pictOrigin;
    NSData *_pictData;
    unsigned int _reserved1;
    unsigned int _reserved2;
}

+ (void)initialize;
+ (id)imageRepWithData:(id)fp8;
+ (BOOL)_verifyDataIsPICT:(id)fp8;
+ (BOOL)canInitWithData:(id)fp8;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredPasteboardTypes;
- (id)init;
- (void)dealloc;
- (id)initWithData:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (struct _NSRect)boundingBox;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct _NSPoint)fp8;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (BOOL)_isValid;
- (int)_uncachedSize;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)PICTRepresentation;

@end

@interface NSPNGImageReader : NSImageReader
{
    float _gamma;
}

- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;
- (float)gamma;

@end

@interface NSPNGImageWriter : NSImageWriter
{
}

- (id)representationWithImageProperties:(id)fp8 withProperties:(id)fp12;

@end

@interface NSPopUpButton : NSButton
{
    struct __pbFlags _pbFlags;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8 pullsDown:(BOOL)fp24;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (void)_fixTargetsForMenu:(id)fp8;
- (void)setMenu:(id)fp8;
- (id)menu;
- (void)setPullsDown:(BOOL)fp8;
- (BOOL)pullsDown;
- (void)setAutoenablesItems:(BOOL)fp8;
- (BOOL)autoenablesItems;
- (void)setPreferredEdge:(int)fp8;
- (int)preferredEdge;
- (void)addItemWithTitle:(id)fp8;
- (void)addItemsWithTitles:(id)fp8;
- (void)insertItemWithTitle:(id)fp8 atIndex:(int)fp12;
- (void)removeItemWithTitle:(id)fp8;
- (void)removeItemAtIndex:(int)fp8;
- (void)removeAllItems;
- (id)itemArray;
- (int)numberOfItems;
- (int)indexOfItem:(id)fp8;
- (int)indexOfItemWithTitle:(id)fp8;
- (int)indexOfItemWithTag:(int)fp8;
- (int)indexOfItemWithRepresentedObject:(id)fp8;
- (int)indexOfItemWithTarget:(id)fp8 andAction:(SEL)fp12;
- (id)itemAtIndex:(int)fp8;
- (id)itemWithTitle:(id)fp8;
- (id)lastItem;
- (void)selectItem:(id)fp8;
- (void)selectItemAtIndex:(int)fp8;
- (void)selectItemWithTitle:(id)fp8;
- (BOOL)selectItemWithTag:(int)fp8;
- (void)setTitle:(id)fp8;
- (id)selectedItem;
- (int)indexOfSelectedItem;
- (void)synchronizeTitleAndSelectedItem;
- (id)itemTitleAtIndex:(int)fp8;
- (id)itemTitles;
- (id)titleOfSelectedItem;
- (void)sizeToFit;
- (void)performClick:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)moveUp:(id)fp8;
- (BOOL)_allowsContextMenus;
- (id)title;
- (id)image;
- (int)state;
- (int)selectedTag;

@end

@interface NSPopUpButtonCell : NSMenuItemCell
{
    NSMenu *_menu;
    int _selectedIndex;
    struct __pbcFlags _pbcFlags;
}

+ (void)initialize;
+ (id)_popUpMenuCurrentlyInvokingAction;
+ (id)_attachedCell;
+ (id)_popUpButtonCellInstances;
- (id)initTextCell:(id)fp8 pullsDown:(BOOL)fp12;
- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_fixTargetsForMenu:(id)fp8;
- (void)setMenu:(id)fp8;
- (id)menu;
- (id)menuView;
- (void)setFont:(id)fp8;
- (void)setPullsDown:(BOOL)fp8;
- (BOOL)pullsDown;
- (void)setAutoenablesItems:(BOOL)fp8;
- (BOOL)autoenablesItems;
- (void)setPreferredEdge:(int)fp8;
- (int)preferredEdge;
- (void)setUsesItemFromMenu:(BOOL)fp8;
- (BOOL)usesItemFromMenu;
- (void)setMenuItem:(id)fp8;
- (void)setAltersStateOfSelectedItem:(BOOL)fp8;
- (BOOL)altersStateOfSelectedItem;
- (void)addItemWithTitle:(id)fp8;
- (void)addItemsWithTitles:(id)fp8;
- (void)insertItemWithTitle:(id)fp8 atIndex:(int)fp12;
- (void)_itemAdded:(id)fp8;
- (void)removeItemWithTitle:(id)fp8;
- (void)removeItemAtIndex:(int)fp8;
- (void)removeAllItems;
- (void)_itemRemoved:(id)fp8;
- (void)_itemChanged:(id)fp8;
- (id)itemArray;
- (int)numberOfItems;
- (int)indexOfItem:(id)fp8;
- (int)indexOfItemWithTitle:(id)fp8;
- (int)indexOfItemWithTag:(int)fp8;
- (int)indexOfItemWithRepresentedObject:(id)fp8;
- (int)indexOfItemWithTarget:(id)fp8 andAction:(SEL)fp12;
- (id)itemAtIndex:(int)fp8;
- (id)itemWithTitle:(id)fp8;
- (id)lastItem;
- (void)_rawSetSelectedIndex:(int)fp8;
- (void)selectItem:(id)fp8;
- (void)selectItemAtIndex:(int)fp8;
- (void)selectItemWithTitle:(id)fp8;
- (BOOL)selectItemWithTag:(int)fp8;
- (void)setTitle:(id)fp8;
- (id)selectedItem;
- (int)indexOfSelectedItem;
- (void)synchronizeTitleAndSelectedItem;
- (id)itemTitleAtIndex:(int)fp8;
- (id)itemTitles;
- (id)titleOfSelectedItem;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (struct _NSPoint)_locationForPopUpMenuWithFrame:(struct _NSRect)fp8;
- (void)_handleWillPopUpNotification;
- (void)attachPopUpWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)dismissPopUp;
- (BOOL)keyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)_doPopupSearchString;
- (id)_indicatorImageForCellHeight:(float)fp8;
- (float)keyEquivalentWidth;
- (struct _NSRect)stateImageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)keyEquivalentRectForBounds:(struct _NSRect)fp8;
- (float)_extraWidthForCellHeight:(float)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)_drawThemePopUpBorderWithFrame:(struct _NSRect)fp8 inView:(id)fp24 bordered:(BOOL)fp28 style:(int)fp32;
- (void)_drawStandardPopUpBorderWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (BOOL)_obeysHiddenBit;
- (BOOL)isOpaque;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)performClickWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_popUpItemAction:(id)fp8;
- (void)_menuWillSendAction:(id)fp8;
- (void)_menuDidSendAction:(id)fp8;
- (BOOL)_canBecomeDefaultButtonCell;
- (BOOL)_allowsContextMenus;
- (id)_highlightColor;
- (id)_highlightTextColor;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (id)objectValue;
- (void)_setBackgroundColor:(id)fp8;
- (int)arrowPosition;
- (void)setArrowPosition:(int)fp8;

@end

@interface NSPopUpButtonCell (NSPopUpButtonCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (void)_accessibilityPressAction:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSPPDParse : NSObject
{
    CDAnonymousStruct23 inputStreamStack[17];
    CDAnonymousStruct23 *input;
    id delegate;
    CDAnonymousStruct15 argBuf;
    CDAnonymousStruct15 keyTran;
    CDAnonymousStruct15 argTran;
}

+ (id)typeToUnixName:(id)fp8;
+ (id)unixToTypeName:(id)fp8;
+ (id)availablePPDTypeFiles;
+ (id)findPPDFileName:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)processKeyword:(char *)fp8 option:(char *)fp12 keyTran:(char *)fp16 arg:(char *)fp20 argTran:(char *)fp24 quotedArg:(BOOL)fp28;
- (id)growBuffer:(CDAnonymousStruct15 *)fp8 current:(char **)fp12 end:(char **)fp16 factor:(float)fp20;
- (BOOL)getMoreInput;
- (BOOL)parseKey:(BOOL)fp8;
- (id)parseStream;
- (id)run;
- (void *)openInclude:(id)fp8;
- (id)startInputStream:(void *)fp8 closeOnEnd:(BOOL)fp12;
- (id)endInputStream;
- (id)readFromFile:(id)fp8;
- (id)readFromStream:(void *)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;

@end

@interface NSPreferences : NSObject
{
    NSWindow *_preferencesPanel;
    NSBox *_preferenceBox;
    NSMatrix *_moduleMatrix;
    NSButtonCell *_okButton;
    NSButtonCell *_cancelButton;
    NSButtonCell *_applyButton;
    NSMutableArray *_preferenceTitles;
    NSMutableArray *_preferenceModules;
    NSMutableDictionary *_masterPreferenceViews;
    NSMutableDictionary *_currentSessionPreferenceViews;
    NSBox *_originalContentView;
    BOOL _isModal;
    float _constrainedWidth;
    id _currentModule;
    void *_reserved;
}

+ (id)sharedPreferences;
+ (void)setDefaultPreferencesClass:(Class)fp8;
+ (Class)defaultPreferencesClass;
- (id)init;
- (void)dealloc;
- (void)addPreferenceNamed:(id)fp8 owner:(id)fp12;
- (void)_setupToolbar;
- (void)_setupUI;
- (struct _NSSize)preferencesContentSize;
- (void)showPreferencesPanel;
- (void)showPreferencesPanelForOwner:(id)fp8;
- (int)showModalPreferencesPanelForOwner:(id)fp8;
- (int)showModalPreferencesPanel;
- (void)ok:(id)fp8;
- (void)cancel:(id)fp8;
- (void)apply:(id)fp8;
- (void)_selectModuleOwner:(id)fp8;
- (id)windowTitle;
- (void)confirmCloseSheetIsDone:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (struct _NSSize)windowWillResize:(id)fp8 toSize:(struct _NSSize)fp12;
- (BOOL)usesButtons;
- (id)_itemIdentifierForModule:(id)fp8;
- (void)toolbarItemClicked:(id)fp8;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (id)toolbarSelectableItemIdentifiers:(id)fp8;

@end

@interface NSPreferencesModule : NSObject <NSPreferencesModule>
{
    NSBox *_preferencesView;
    struct _NSSize _minSize;
    BOOL _hasChanges;
    void *_reserved;
}

+ (id)sharedInstance;
- (void)dealloc;
- (void)finalize;
- (id)init;
- (id)preferencesNibName;
- (void)setPreferencesView:(id)fp8;
- (id)viewForPreferenceNamed:(id)fp8;
- (id)imageForPreferenceNamed:(id)fp8;
- (id)titleForIdentifier:(id)fp8;
- (BOOL)hasChangesPending;
- (void)saveChanges;
- (void)willBeDisplayed;
- (void)initializeFromDefaults;
- (void)didChange;
- (struct _NSSize)minSize;
- (void)setMinSize:(struct _NSSize)fp8;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (BOOL)isResizable;

@end

@interface NSPrinter : NSObject <NSCopying, NSCoding>
{
    unsigned char _44BytesOfPrivateData[44];
}

+ (id)printerNames;
+ (id)printerTypes;
+ (id)printerWithName:(id)fp8;
+ (id)printerWithType:(id)fp8;
+ (id)printerWithName:(id)fp8 domain:(id)fp12 includeUnavailable:(BOOL)fp16;
- (id)_initWithName:(id)fp8 printer:(struct OpaquePMPrinter *)fp12;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)type;
- (int)languageLevel;
- (struct _NSSize)pageSizeForPaper:(id)fp8;
- (int)statusForTable:(id)fp8;
- (BOOL)isKey:(id)fp8 inTable:(id)fp12;
- (BOOL)booleanForKey:(id)fp8 inTable:(id)fp12;
- (float)floatForKey:(id)fp8 inTable:(id)fp12;
- (int)intForKey:(id)fp8 inTable:(id)fp12;
- (struct _NSRect)rectForKey:(id)fp8 inTable:(id)fp12;
- (struct _NSSize)sizeForKey:(id)fp8 inTable:(id)fp12;
- (id)stringForKey:(id)fp8 inTable:(id)fp12;
- (id)stringListForKey:(id)fp8 inTable:(id)fp12;
- (struct _NSRect)imageRectForPaper:(id)fp8;
- (id)deviceDescription;
- (BOOL)acceptsBinary;
- (BOOL)isColor;
- (BOOL)isFontAvailable:(id)fp8;
- (BOOL)isOutputStackInReverseOrder;
- (id)domain;
- (id)host;
- (id)note;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)description;
- (void)encodeWithCoder:(id)fp8;
- (id)_compatibility_initWithUnkeyedCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface _NSPrinterPrivateData : NSObject
{
    NSString *printerName;
    struct OpaquePMPrinter *printer;
    NSDictionary *cachedDeviceDescription;
    int ppdCreationNum;
    void *ppdNodes;
    void *ppdPriv;
}

@end

@interface NSPrinter (NSPrivate)
+ (id)_printerForPrinter:(struct OpaquePMPrinter *)fp8;
+ (void)_flushCachedCarbonPrintersByName;
- (struct OpaquePMPrinter *)_printer;
- (id)_paperNameForSize:(struct _NSSize)fp8;
@end

@interface NSPrinter (NSPPDs)
- (CDAnonymousStruct6 *)_newNode:(int)fp8;
- (id)_makeRootNode;
- (id)_freeNode:(CDAnonymousStruct6 *)fp8;
- (char *)_allocString:(const char *)fp8;
- (CDAnonymousStruct6 *)_makeTable:(const char *)fp8 inNode:(CDAnonymousStruct6 *)fp12;
- (id)_freeNodes;
- (void)_allocatePPDStuffAndParse;
- (CDAnonymousStruct6 *)_getNodeForKey:(const char *)fp8 inTable:(const char *)fp12;
- (id)_keyListForKeyNode:(CDAnonymousStruct6 *)fp8;
- (id)_appendStringInKeyNode:(CDAnonymousStruct6 *)fp8 key:(const char *)fp12 value:(const char *)fp16;
- (CDAnonymousStruct6 *)_makeKeyNode:(const char *)fp8 inKeyNode:(CDAnonymousStruct6 *)fp12;
- (id)_appendKey:(const char *)fp8 option:(const char *)fp12 value:(const char *)fp16 inKeyNode:(CDAnonymousStruct6 *)fp20;
- (id)_setOrderDependency:(char *)fp8;
- (id)_setUIConstraints:(char *)fp8;
- (id)processKeyword:(char *)fp8 option:(char *)fp12 keyTran:(char *)fp16 arg:(char *)fp20 argTran:(char *)fp24;
- (void)_deallocatePPDStuff;
@end

@interface NSPrintInfo : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_attributes;
    id _moreVars;
}

+ (void)initialize;
+ (void)setSharedPrintInfo:(id)fp8;
+ (id)sharedPrintInfo;
+ (id)defaultPrinter;
+ (void)setDefaultPrinter:(id)fp8;
+ (struct _NSSize)sizeForPaperName:(id)fp8;
- (id)_initWithAttributesNoCopy:(id)fp8 pageFormatNoCopy:(struct OpaquePMPageFormat *)fp12 orFlattenedData:(id)fp16 printSettingsNoCopy:(struct OpaquePMPrintSettings *)fp20 orFlattenedData:(id)fp24;
- (void)_setBool:(BOOL)fp8 ifNoAttributeForKey:(id)fp12;
- (void)_setFloat:(float)fp8 ifNoAttributeForKey:(id)fp12;
- (void)_setInt:(int)fp8 ifNoAttributeForKey:(id)fp12;
- (void)_setObject:(id)fp8 ifNoAttributeForKey:(id)fp12;
- (void)_validatePaginationAttributes;
- (id)init;
- (id)initWithDictionary:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)dictionary;
- (void)setPaperName:(id)fp8;
- (void)setPaperSize:(struct _NSSize)fp8;
- (void)setOrientation:(int)fp8;
- (id)paperName;
- (struct _NSSize)paperSize;
- (int)orientation;
- (void)setLeftMargin:(float)fp8;
- (void)setRightMargin:(float)fp8;
- (void)setTopMargin:(float)fp8;
- (void)setBottomMargin:(float)fp8;
- (float)leftMargin;
- (float)rightMargin;
- (float)topMargin;
- (float)bottomMargin;
- (void)setHorizontallyCentered:(BOOL)fp8;
- (void)setVerticallyCentered:(BOOL)fp8;
- (BOOL)isHorizontallyCentered;
- (BOOL)isVerticallyCentered;
- (void)setHorizontalPagination:(int)fp8;
- (void)setVerticalPagination:(int)fp8;
- (int)horizontalPagination;
- (int)verticalPagination;
- (void)setJobDisposition:(id)fp8;
- (id)jobDisposition;
- (void)setPrinter:(id)fp8;
- (id)printer;
- (void)setUpPrintOperationDefaultValues;
- (id)localizedPaperName;
- (struct _NSRect)imageablePageBounds;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)description;
- (void)encodeWithCoder:(id)fp8;
- (id)_compatibility_initWithUnkeyedCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSPrintInfoAdditionalIVars : NSObject
{
    struct OpaquePMPrintSession *printSession;
    struct OpaquePMPageFormat *pageFormat;
    struct OpaquePMPrintSettings *printSettings;
    NSData *flattenedPageFormatData;
    NSData *flattenedPrintSettingsData;
    BOOL printSessionIsReconciled;
    BOOL pageFormatIsReconciled;
    BOOL printSettingsIsReconciled;
    BOOL pageFormatIsValidated;
    BOOL printSettingsIsValidated;
    NSPrintInfoAttributeDictionary *attributesProxy;
    BOOL printerWasSetExplicitly;
}

@end

@interface NSPrintInfo (NSTemporaryCompatibility)
- (struct OpaquePMPrintSession *)_pmPrintSession;
- (void)setPMPageFormat:(struct OpaquePMPageFormat *)fp8;
- (struct OpaquePMPageFormat *)pmPageFormat;
- (void)setPMPrintSettings:(struct OpaquePMPrintSettings *)fp8;
- (struct OpaquePMPrintSettings *)pmPrintSettings;
@end

@interface NSPrintInfo (NSInternal)
- (void)_createDefaultOrUnflattenPageFormatIfNecessary;
- (void)_createDefaultOrUnflattenPrintSettingsIfNecessary;
- (struct OpaquePMPrintSession *)_printSessionForGetting;
- (struct OpaquePMPageFormat *)_pageFormatForGetting;
- (struct OpaquePMPrintSettings *)_printSettingsForGetting;
- (struct OpaquePMPrintSession *)_printSessionForSetting;
- (struct OpaquePMPageFormat *)_pageFormatForSetting;
- (struct OpaquePMPrintSettings *)_printSettingsForSetting;
- (BOOL)_isJobDispositionCanceled;
@end

@interface NSPrintInfo (NSPrivate)
- (struct OpaquePMPrintSession *)_printSession;
- (struct OpaquePMPageFormat *)_pageFormat;
- (struct OpaquePMPrintSettings *)_printSettings;
- (void)_setPageFormat:(struct OpaquePMPageFormat *)fp8;
- (void)_setPrintSettings:(struct OpaquePMPrintSettings *)fp8;
@end

@interface NSNSPrintInfoAttributeKeyEnumerator : NSEnumerator
{
    NSArray *_keys;
    unsigned int _currentKeyIndex;
}

- (id)initWithKeys:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)allObjects;
- (id)nextObject;

@end

@interface NSPrintInfoAttributeDictionary : NSMutableDictionary
{
    NSPrintInfo *_printInfo;
}

- (id)initWithPrintInfo:(id)fp8;
- (void)printInfoIsBeingDeallocated;
- (unsigned int)count;
- (id)keyEnumerator;
- (id)objectForKey:(id)fp8;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (void)removeObjectForKey:(id)fp8;

@end

@interface NSPrintInfo (NSManagedAttributes)
+ (void)_setPrinter:(id)fp8 inPrintSession:(struct OpaquePMPrintSession *)fp12;
+ (id)_printerInPrintSession:(struct OpaquePMPrintSession *)fp8;
+ (void)_setPaperSize:(struct _NSSize)fp8 inPrintSession:(struct OpaquePMPrintSession *)fp16 inPageFormat:(struct OpaquePMPageFormat *)fp20;
+ (void)_setPaperName:(id)fp8 inPrintSession:(struct OpaquePMPrintSession *)fp12 pageFormat:(struct OpaquePMPageFormat *)fp16;
+ (void)_setOrientation:(int)fp8 inPageFormat:(struct OpaquePMPageFormat *)fp12;
+ (struct _NSSize)_paperSizeInPageFormat:(struct OpaquePMPageFormat *)fp8;
+ (id)_paperNameInPrintSession:(struct OpaquePMPrintSession *)fp8 pageFormat:(struct OpaquePMPageFormat *)fp12;
+ (int)_orientationInPageFormat:(struct OpaquePMPageFormat *)fp8;
+ (void)_setJobDisposition:(id)fp8 savePath:(id)fp12 inPrintSession:(struct OpaquePMPrintSession *)fp16 printSettings:(struct OpaquePMPrintSettings *)fp20;
+ (id)_jobDispositionInPrintSession:(struct OpaquePMPrintSession *)fp8 printSettings:(struct OpaquePMPrintSettings *)fp12;
+ (id)_jobSavePathInPrintSession:(struct OpaquePMPrintSession *)fp8 printSettings:(struct OpaquePMPrintSettings *)fp12;
+ (id)_printSessionAttributeKeys;
+ (id)_pageFormatAttributeKeys;
+ (id)_printSettingsAttributeKeys;
+ (id)_managedAttributeKeys;
- (void)_reconcilePrintSessionAttributes;
- (void)_reconcilePageFormatAttributes;
- (void)_reconcilePrintSettingsAttributes;
- (id)_allAttributeKeys;
- (id)_objectForAttributeKey:(id)fp8;
- (void)_setObject:(id)fp8 forAttributeKey:(id)fp12;
- (void)_removeObjectForAttributeKey:(id)fp8;
@end

@interface NSConcretePrintOperation : NSPrintOperation
{
    NSView *view;
    NSPrintInfo *printInfo;
    BOOL isCopying;
    BOOL canSpawnSeparateThread;
    BOOL _showsPrintPanel;
    BOOL _showsProgressPanel;
    struct _NSRect epsBounds;
    NSMutableData *epsStream;
    NSGraphicsContext *context;
    int pageOrder;
    NSPrintPanel *printPanel;
    id _accessoryView;
    id _thumbnailView;
    NSMutableData *printStream;
    BOOL releaseData;
    void *jobVars;
    NSString *_jobStyleHint;
    NSProgressPanel *progressPanel;
    struct _NSModalSession *progressPanelAppModalSession;
    struct {
        NSWindow *;
        id;
        SEL;
        void *;
    } *modalContextInfo;
    BOOL operationRanToCompletion;
    NSPrintOperationPrintEventRetrofitInfo *_printEventRetrofitInfo;
}

+ (id)printOperationWithView:(id)fp8;
+ (id)printOperationWithView:(id)fp8 printInfo:(id)fp12;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toPath:(id)fp28 printInfo:(id)fp32;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28 printInfo:(id)fp32;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28 printInfo:(id)fp32;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toPath:(id)fp28 printInfo:(id)fp32;
+ (id)currentOperation;
+ (void)setCurrentOperation:(id)fp8;
- (struct _PrivatePrintOperationInfo *)_operationInfo;
- (void)_initJobVars;
- (id)initWithView:(id)fp8 printInfo:(id)fp12;
- (id)initEPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28 printInfo:(id)fp32;
- (BOOL)isCopyingOperation;
- (BOOL)isEPSOperation;
- (void)dealloc;
- (void)finalize;
- (void)_createAndShowProgressPanelIfAppropriate:(BOOL)fp8;
- (BOOL)_doActualViewPrinting;
- (BOOL)runOperation;
- (void)_finishModalOperation;
- (void)_continueModalOperationToTheEnd:(id)fp8;
- (void)_continueModalOperationPastPrintPanel;
- (void)runOperationModalForWindow:(id)fp8 delegate:(id)fp12 didRunSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)_printPanel:(id)fp8 didEndAndReturn:(int)fp12 contextInfo:(void *)fp16;
- (void)_progressPanelWasCancelled:(id)fp8 contextInfo:(void *)fp12;
- (void)_progressPanel:(id)fp8 didEndAndReturn:(int)fp12 contextInfo:(void *)fp16;
- (void)setCanSpawnSeparateThread:(BOOL)fp8;
- (BOOL)canSpawnSeparateThread;
- (void)setShowsPrintPanel:(BOOL)fp8;
- (BOOL)showsPrintPanel;
- (void)setShowsProgressPanel:(BOOL)fp8;
- (BOOL)showsProgressPanel;
- (void)setPrintPanel:(id)fp8;
- (id)printPanel;
- (void)setAccessoryView:(id)fp8;
- (id)accessoryView;
- (void)setJobStyleHint:(id)fp8;
- (id)jobStyleHint;
- (void)_setThumbnailView:(id)fp8;
- (id)_thumbnailView;
- (void)_setShowPrintPanel:(BOOL)fp8;
- (void)_setShowProgressPanel:(BOOL)fp8;
- (void)setPrintInfo:(id)fp8;
- (id)printInfo;
- (id)view;
- (int)currentPage;
- (void)setPageOrder:(int)fp8;
- (int)pageOrder;
- (id)context;
- (BOOL)_realCreateContext;
- (void)_realDestroyContext;
- (id)_temporaryFilename:(id)fp8;
- (id)createContext;
- (void)_preparePrintStream;
- (void)destroyContext;
- (void)_destroyStream;
- (BOOL)deliverResult;
- (void)cleanUpOperation;
- (void)setBaseAffineTransform:(id)fp8;
- (id)baseAffineTransform;
- (void)_heedBeginningOfPage:(int)fp8;
- (void)_heedBeginningOfPage:(int)fp8 outOf:(int)fp12;
- (void)_handleUIEvents;

@end

@interface NSPrintOperationPrintEventRetrofitInfo : NSObject
{
    NSDictionary *printSettings;
    BOOL showPrintPanel;
    id sender;
    id delegate;
    SEL didPrintSelector;
    void *contextInfo;
}

- (id)initWithSettings:(id)fp8 showPrintPanel:(BOOL)fp12 sender:(id)fp16 delegate:(id)fp20 didPrintSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (void)dealloc;

@end

@interface NSPrintOperation : NSObject
{
}

+ (id)printOperationWithView:(id)fp8;
+ (id)printOperationWithView:(id)fp8 printInfo:(id)fp12;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28 printInfo:(id)fp32;
+ (id)EPSOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toPath:(id)fp28 printInfo:(id)fp32;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toData:(id)fp28 printInfo:(id)fp32;
+ (id)PDFOperationWithView:(id)fp8 insideRect:(struct _NSRect)fp12 toPath:(id)fp28 printInfo:(id)fp32;
+ (id)currentOperation;
+ (void)setCurrentOperation:(id)fp8;
+ (void)_setPrintEventRetrofitInfo:(id)fp8;
- (BOOL)isCopyingOperation;
- (BOOL)runOperation;
- (void)runOperationModalForWindow:(id)fp8 delegate:(id)fp12 didRunSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)setCanSpawnSeparateThread:(BOOL)fp8;
- (BOOL)canSpawnSeparateThread;
- (void)setShowsPrintPanel:(BOOL)fp8;
- (BOOL)showsPrintPanel;
- (void)setShowsProgressPanel:(BOOL)fp8;
- (BOOL)showsProgressPanel;
- (void)setPrintPanel:(id)fp8;
- (id)printPanel;
- (void)setAccessoryView:(id)fp8;
- (id)accessoryView;
- (void)setJobStyleHint:(id)fp8;
- (id)jobStyleHint;
- (void)_setThumbnailView:(id)fp8;
- (id)_thumbnailView;
- (void)_setShowPrintPanel:(BOOL)fp8;
- (void)_setShowProgressPanel:(BOOL)fp8;
- (void)setPrintInfo:(id)fp8;
- (id)printInfo;
- (id)view;
- (int)currentPage;
- (void)setPageOrder:(int)fp8;
- (int)pageOrder;
- (id)context;
- (id)createContext;
- (void)destroyContext;
- (BOOL)deliverResult;
- (void)cleanUpOperation;

@end

@interface NSConcretePrintOperation (NSDeprecated)
- (void)setShowPanels:(BOOL)fp8;
- (BOOL)showPanels;
@end

@interface NSPrintOperation (NSDeprecated)
- (void)setShowPanels:(BOOL)fp8;
- (BOOL)showPanels;
@end

@interface NSPrintPanel : NSObject
{
    unsigned char _244BytesOfPrivateData[244];
}

+ (id)printPanel;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)beginSheetWithPrintInfo:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didEndSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (int)_runModalWithPrintInfo:(id)fp8;
- (int)runModal;
- (id)accessoryView;
- (void)setAccessoryView:(id)fp8;
- (void)setJobStyleHint:(id)fp8;
- (id)jobStyleHint;
- (void)_setThumbnailView:(id)fp8;
- (id)_thumbnailView;
- (void)updateFromPrintInfo;
- (void)finalWritePrintInfo;
- (void)pickedAllPages:(id)fp8;
- (void)pickedButton:(id)fp8;
- (void)pickedLayoutList:(id)fp8;
- (void)_dismissSheet:(unsigned char)fp8;
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;

@end

@interface NSProgressIndicator : NSView
{
    BOOL _isBezeled;
    BOOL _isIndeterminate;
    BOOL _threadedAnimation;
    double _minimum;
    double _maximum;
    double _value;
    int _animationIndex;
    double _animationDelay;
    id _timer;
    id _animationThreadLock;
    id _cachedImage;
    id _cachedImageLock;
    struct __progressIndicatorFlags _progressIndicatorFlags;
    void *_NSProgressIndicatorReserved1;
}

+ (void)_controlTintChanged:(id)fp8;
+ (void)initialize;
+ (id)_createImage:(id)fp8:(id)fp12:(float)fp16;
+ (id)_barberImage:(float)fp8;
+ (id)_gaugeImage:(float)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (int)style;
- (void)setStyle:(int)fp8;
- (void)_commonInit;
- (void)dealloc;
- (void)finalize;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)_creteCachedImageLockIfNeeded;
- (void)_lockUnlockCachedImage:(BOOL)fp8;
- (void)_createCachedImage:(struct _NSSize)fp8;
- (id)_lockCachedImage;
- (void)_compositeAndUnlockCachedImage;
- (void)_drawThemeBackground;
- (void)_drawThemeProgressArea:(BOOL)fp8;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)_windowChangedKeyState;
- (void)drawRect:(struct _NSRect)fp8;
- (double)doubleValue;
- (void)_reconfigureAnimationState:(BOOL)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)usesVectorMovement;
- (void)setUsesVectorMovement:(BOOL)fp8;
- (void)setDoubleValue:(double)fp8;
- (void)incrementBy:(double)fp8;
- (double)animationDelay;
- (void)setAnimationDelay:(double)fp8;
- (BOOL)usesThreadedAnimation;
- (void)setUsesThreadedAnimation:(BOOL)fp8;
- (void)_startAnimationWithThread:(BOOL)fp8;
- (void)startAnimation:(id)fp8;
- (void)_stopAnimationWithWait:(BOOL)fp8;
- (void)stopAnimation:(id)fp8;
- (void)animate:(id)fp8;
- (BOOL)isDisplayedWhenStopped;
- (void)setDisplayedWhenStopped:(BOOL)fp8;
- (void)_animationIdler:(id)fp8;
- (double)minValue;
- (double)maxValue;
- (void)setMinValue:(double)fp8;
- (void)setMaxValue:(double)fp8;
- (BOOL)isIndeterminate;
- (void)setIndeterminate:(BOOL)fp8;
- (void)_drawWindowsGaugeRects:(struct _NSRect)fp8;
- (void)_drawAnimationStep;
- (void)_drawProgressArea;
- (void)_drawFrame;
- (void)_drawRemainderArea;
- (struct _NSRect)_getProgressFrame;
- (struct _NSRect)_getRemainderFrame;
- (float)_getPosition:(double)fp8;
- (struct _NSRect)_getGaugeFrame;
- (void)_fillGrayRect:(struct _NSRect *)fp8 with:(int)fp12;
- (id)_resizedImage:(unsigned int)fp8;
- (void)sizeToFit;
- (void)_setupSurfaceAndStartSpinning:(BOOL)fp8;
- (void)_installHeartBeat:(BOOL)fp8;
- (void)setBezeled:(BOOL)fp8;
- (BOOL)isBezeled;
- (int)controlTint;
- (void)setControlTint:(int)fp8;
- (int)controlSize;
- (void)setControlSize:(int)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_systemColorChanged:(id)fp8;
- (BOOL)_isThreadedAnimationLooping;
- (void)_animationThread;
- (id)_setWindow:(id)fp8;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;

@end

@interface NSProgressIndicatorPrivateData : NSObject
{
    NSSurface *_surface;
    BOOL _temporarilyBlockHeartBeating;
    BOOL _isHidden;
    BOOL _isHeartBeatInstalled;
    float _drawingWidth;
}

@end

@interface NSProgressIndicator (NSProgressIndicatorAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSProgressPanel : NSPanel
{
    NSButton *cancelButton;
    NSTextField *captionTextField;
    NSProgressIndicator *progressIndicator;
    id cancellationDelegate;
    SEL cancellationSelector;
    void *cancellationContextInfo;
    BOOL wasCancelled;
}

+ (id)progressPanel;
- (void)setCancellationDelegate:(id)fp8 wasCancelledSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (id)captionTextField;
- (id)progressIndicator;
- (void)cancelButtonPressed:(id)fp8;

@end

@interface NSPSMatrix : NSObject <NSCoding>
{
    float matrixElements[12];
    struct _mFlags mFlags;
}

+ (void)initialize;
- (id)init;
- (id)_doRotationOnly;
- (float)getRotationAngle;
- (void)scaleUnitSquareToSize:(struct _NSSize)fp8;
- (void)translateOriginToPoint:(struct _NSPoint)fp8;
- (void)rotateByAngle:(float)fp8;
- (id)scaleTo:(float)fp8:(float)fp12;
- (id)translateTo:(float)fp8:(float)fp12;
- (void)setFrameRotation:(float)fp8;
- (id)concat:(id)fp8;
- (id)send;
- (id)sendInv;
- (id)transform:(struct _NSPoint *)fp8;
- (id)invTransform:(struct _NSPoint *)fp8;
- (id)makeIdentity;
- (BOOL)identity;
- (BOOL)rotated;
- (id)transformRect:(struct _NSRect *)fp8;
- (id)invTransformRect:(struct _NSRect *)fp8;
- (id)_computeInv;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSQTImageImporter : NSImageReader
{
    void *_importer;
    int _hfsTypeCode;
    BOOL _premultipliedAlpha;
}

+ (BOOL)canImportData:(id)fp8;
- (id)initWithData:(id)fp8 hfsTypeCode:(int)fp12;
- (void)dealloc;
- (void)finalize;
- (BOOL)loadImageHeader;
- (BOOL)loadImage:(char **)fp8;

@end

@interface NSQuickDrawPort : NSObject
{
    struct OpaqueGrafPtr *_qdPort;
    struct OpaqueGrafPtr *_savePort;
    struct GDevice **_saveDevice;
}

- (id)initOffscreen:(struct _NSRect)fp8 withDepth:(short)fp24;
- (void)dealloc;
- (void)finalize;
- (void)lock;
- (void)unlock;
- (void)resetAlpha;
- (struct OpaqueGrafPtr *)port;
- (id)bitmapImage;

@end

@interface NSQuickDrawView : NSView
{
    void *_qdPort;
    void *_savePort;
    BOOL _synchToView;
}

- (void)dealloc;
- (void)finalize;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (id)_invalidateGStatesForTree;
- (BOOL)lockFocusIfCanDraw;
- (void)unlockFocus;
- (void *)qdPort;
- (BOOL)isFlipped;
- (BOOL)isOpaque;

@end

@interface NSQuickDrawView (NSQuickDrawView_Internal)
- (void)_lockQuickDrawPort;
- (void)_unlockQuickDrawPort;
- (void)_adjustPort;
@end

@interface NSResponder : NSObject <NSCoding>
{
    id _nextResponder;
}

- (id)nextResponder;
- (void)setNextResponder:(id)fp8;
- (BOOL)tryToPerform:(SEL)fp8 with:(id)fp12;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
- (BOOL)performKeyEquivalent:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)otherMouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)rightMouseUp:(id)fp8;
- (void)otherMouseUp:(id)fp8;
- (void)mouseMoved:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)scrollWheel:(id)fp8;
- (void)rightMouseDragged:(id)fp8;
- (void)otherMouseDragged:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (void)flagsChanged:(id)fp8;
- (void)tabletPoint:(id)fp8;
- (void)tabletProximity:(id)fp8;
- (void)noResponderFor:(SEL)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)interpretKeyEvents:(id)fp8;
- (void)flushBufferedKeyEvents;
- (void)setMenu:(id)fp8;
- (id)menu;
- (id)undoManager;
- (void)dealloc;
- (void)finalize;
- (void)helpRequested:(id)fp8;
- (void)showContextHelp:(id)fp8;
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (BOOL)_shouldPostEventNotifications;
- (void)_setShouldPostEventNotifications:(BOOL)fp8;
- (void)_postEventNotification:(id)fp8;
- (void)_postEventNotification:(id)fp8 fromCell:(id)fp12;
- (void)presentError:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didPresentSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)presentError:(id)fp8;
- (id)willPresentError:(id)fp8;

@end

@interface NSLeafProxy <NSCopying>
{
    Class isa;
    NSString *dir;
    NSString *file;
    NSDocInfo *docInfo;
    int refCount;
    id realObject;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)alloc;
+ (void)initialize;
+ (id)forward:(SEL)fp8:(void *)fp12;
+ (void)forwardInvocation:(id)fp8;
- (id)forward:(SEL)fp8:(void *)fp12;
- (void)forwardInvocation:(id)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;
- (id)initDir:(id)fp8 file:(id)fp12 docInfo:(id)fp16;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (void)reallyDealloc;
- (id)retain;
- (void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (void)dealloc;
- (void)finalize;
- (BOOL)isProxy;

@end

@interface NSDirInfoDeserializer : NSAKDeserializer
{
}

- (id)deserializePListValueIn:(id)fp8 key:(id)fp12 length:(unsigned int)fp16;

@end

@interface NSDirInfoSerializer : NSAKSerializer
{
}

- (unsigned int)serializePListValueIn:(id)fp8 key:(id)fp12 value:(id)fp16;

@end

@interface NSDocumentSerializer : NSAKSerializer
{
}

- (unsigned int)serializePListValueIn:(id)fp8 key:(id)fp12 value:(id)fp16;

@end

@interface NSDocInfo : NSObject <NSCopying>
{
    int time;
    unsigned short mode;
    struct {
        unsigned int isDir:1;
        unsigned int isSingleFile:1;
        unsigned int isSoftLink:1;
        unsigned int _pad:13;
    } flags;
}

- (id)initFromInfo:(struct stat *)fp8;
- (id)initWithFileAttributes:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;

@end

@interface NSDirInfo : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

- (id)init;
- (id)initWithObjects:(id *)fp8 forKeys:(id *)fp12 count:(unsigned int)fp16;
- (id)initWithDictionary:(id)fp8 copyItems:(BOOL)fp12;
- (id)initWithDictionary:(id)fp8;
- (id)initWithContentsOfFile:(id)fp8;
- (id)initWithCapacity:(unsigned int)fp8;
- (void)dealloc;
- (unsigned int)count;
- (id)objectForKey:(id)fp8;
- (id)keyEnumerator;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (void)removeObjectForKey:(id)fp8;
- (int)writePath:(id)fp8 docInfo:(id)fp12 errorHandler:(id)fp16 remapContents:(BOOL)fp20 hardLinkPath:(id)fp24;
- (id)serializeToData;

@end

@interface NSDocumentDeserializer : NSAKDeserializer
{
}

- (id)deserializeNewData;
- (void)fixupDirInfo:(id)fp8;
- (id)deserializeNewPList;

@end

@interface NSRTFD : NSMutableDictionary
{
    NSMutableDictionary *dict;
}

+ (void)initialize;
- (id)init;
- (id)initWithObjects:(id *)fp8 forKeys:(id *)fp12 count:(unsigned int)fp16;
- (id)initWithDictionary:(id)fp8 copyItems:(BOOL)fp12;
- (id)initWithDictionary:(id)fp8;
- (id)initWithContentsOfFile:(id)fp8;
- (id)initWithCapacity:(unsigned int)fp8;
- (void)dealloc;
- (unsigned int)count;
- (id)objectForKey:(id)fp8;
- (id)keyEnumerator;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (void)removeObjectForKey:(id)fp8;
- (BOOL)isPackage;
- (id)setPackage:(BOOL)fp8;
- (int)initUnixFile:(id)fp8;
- (int)initFromDocument:(id)fp8;
- (int)writePath:(id)fp8 docInfo:(id)fp12 errorHandler:(id)fp16 remapContents:(BOOL)fp20 markBusy:(BOOL)fp24 hardLinkPath:(id)fp28;
- (int)writePath:(id)fp8 docInfo:(id)fp12 errorHandler:(id)fp16 remapContents:(BOOL)fp20 hardLinkPath:(id)fp24;
- (int)internalWritePath:(id)fp8 errorHandler:(id)fp12 remapContents:(BOOL)fp16 hardLinkPath:(id)fp20;
- (int)internalSaveTo:(id)fp8 removeBackup:(BOOL)fp12 errorHandler:(id)fp16 temp:(id)fp20 backup:(id)fp24;
- (id)nameFromPath:(id)fp8 extra:(id)fp12;
- (id)tmpNameFromPath:(id)fp8 extension:(id)fp12;
- (id)tmpNameFromPath:(id)fp8;
- (int)internalSaveTo:(id)fp8 removeBackup:(BOOL)fp12 errorHandler:(id)fp16;
- (int)saveToDocument:(id)fp8 removeBackup:(BOOL)fp12 errorHandler:(id)fp16;
- (id)dataRepresentation;
- (id)initWithDataRepresentation:(id)fp8;
- (id)createRandomKey:(id)fp8;
- (id)createUniqueKey:(id)fp8;
- (id)uniqueKey:(id)fp8;
- (id)getDocument:(id)fp8 docInfo:(id)fp12;
- (id)replaceFile:(id)fp8 data:(id)fp12;
- (id)replaceFile:(id)fp8 path:(id)fp12;
- (id)addCommon:(id)fp8 docInfo:(id)fp12 value:(id)fp16 zone:(struct _NSZone *)fp20;
- (id)_getDocInfoForKey:(id)fp8;
- (id)addFile:(id)fp8;
- (id)addLink:(id)fp8;
- (id)dataForFile:(id)fp8;
- (id)removeFile:(id)fp8;
- (id)copy:(id)fp8 into:(id)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)copy;
- (id)addData:(id)fp8 name:(id)fp12;
- (int)validatePath:(id)fp8 ignore:(id)fp12;

@end

@interface NSRTFD (NSNewTextSupport)
- (BOOL)_isLink:(id)fp8;
@end

@interface NSRTFD (NSSerializationSupport)
- (id)serialize:(void **)fp8 length:(unsigned int *)fp12;
- (id)freeSerialized:(void *)fp8 length:(unsigned int)fp12;
- (id)initFromSerialized:(id)fp8;
- (id)pasteboardDataRepresentation;
- (id)initWithPasteboardDataRepresentation:(id)fp8;
@end

@interface NSString (NSUniquePart)
- (struct _NSRange)significantText;
@end

@interface NSRTFD (NSInternalUseOnly)
- (id)getDirInfo:(BOOL)fp8;
- (int)addFileNamed:(id)fp8 fileAttributes:(id)fp12;
- (int)insertItem:(id)fp8 path:(id)fp12 dirInfo:(id)fp16 zone:(struct _NSZone *)fp20 plist:(id)fp24;
- (int)realAddDirNamed:(id)fp8;
- (int)addDirNamed:(id)fp8 lazy:(BOOL)fp12;
@end

@interface NSRTFD (NSTextDocumentPboard)
- (id)initFromElement:(id)fp8 ofDocument:(id)fp12;
@end

@interface NSPageData : NSData
{
    NSData *data;
    NSDate *_originalFileModDate;
    NSString *_originalFilePath;
}

+ (void)initialize;
+ (int)_umask;
- (unsigned int)length;
- (const void *)bytes;
- (id)init;
- (id)initWithBytesNoCopy:(void *)fp8 length:(unsigned int)fp12;
- (id)initWithBytes:(const void *)fp8 length:(unsigned int)fp12;
- (id)initWithData:(id)fp8;
- (void)_setOriginalFileInfoFromFileAttributes:(id)fp8;
- (id)initWithContentsOfFile:(id)fp8;
- (id)initWithContentsOfMappedFile:(id)fp8;
- (id)initWithContentsOfMappedFile:(id)fp8 withFileAttributes:(id)fp12;
- (id)_mappedFile;
- (void)finalize;
- (void)dealloc;
- (int)writePath:(id)fp8 docInfo:(id)fp12 errorHandler:(id)fp16 remapContents:(BOOL)fp20 hardLinkPath:(id)fp24;
- (id)initFromSerializerStream:(id)fp8 length:(unsigned int)fp12;
- (struct _NXStream *)stream;
- (id)deserializer;

@end

@interface NSPageData (NSInternal)
- (int)writeFd:(int)fp8;
- (int)writeFile:(id)fp8;
@end

@interface NSAKDeserializer : NSObject
{
    id ds;
}

- (id)initForDeserializerStream:(id)fp8;
- (void)dealloc;
- (id)deserializerStream;
- (id)deserializeNewObject;
- (id)deserializeNewData;
- (id)deserializeData:(id)fp8;
- (id)deserializeNewString;
- (id)deserializeNewKeyString;
- (id)deserializeString:(id)fp8;
- (id)deserializeNewList;
- (id)deserializeList:(id)fp8;
- (id)deserializeListItemIn:(id)fp8 at:(unsigned int)fp12 length:(unsigned int)fp16;
- (id)deserializeNewPList;
- (id)deserializePList:(id)fp8;
- (id)deserializePListKeyIn:(id)fp8;
- (id)deserializePListValueIn:(id)fp8 key:(id)fp12 length:(unsigned int)fp16;

@end

@interface NSAKSerializer : NSObject
{
    id ss;
}

- (id)initForSerializerStream:(id)fp8;
- (void)dealloc;
- (id)serializerStream;
- (unsigned int)serializeObject:(id)fp8;
- (unsigned int)serializeData:(id)fp8;
- (unsigned int)serializeString:(id)fp8;
- (unsigned int)serializeList:(id)fp8;
- (unsigned int)serializeListItemIn:(id)fp8 at:(unsigned int)fp12;
- (unsigned int)serializePropertyList:(id)fp8;
- (unsigned int)serializePListKeyIn:(id)fp8 key:(id)fp12 value:(id)fp16;
- (unsigned int)serializePListValueIn:(id)fp8 key:(id)fp12 value:(id)fp16;

@end

@interface NSAKDeserializerStream : NSObject <NSDeserializerStream>
{
    void *memory;
    char *current;
    unsigned int left;
    unsigned int max;
    BOOL freeWhenDone;
}

- (id)initFromMemoryNoCopy:(const void *)fp8 length:(unsigned int)fp12 freeWhenDone:(BOOL)fp16;
- (void)dealloc;
- (void)finalize;
- (id)initFromPath:(id)fp8;
- (int)readInt;
- (unsigned int)readAlignedDataSize;
- (void)readData:(void *)fp8 length:(unsigned int)fp12;

@end

@interface NSAKSerializerStream : NSObject <NSSerializerStream>
{
    void *memory;
    unsigned int current;
    unsigned int max;
    struct __CFDictionary *roomForIntLocations;
}

- (void)dealloc;
- (void)finalize;
- (unsigned int)writeInt:(int)fp8;
- (unsigned int)writeAlignedDataSize:(unsigned int)fp8;
- (unsigned int)writeData:(const void *)fp8 length:(unsigned int)fp12;
- (unsigned int)writeRoomForInt:(int *)fp8;
- (void)writeDelayedInt:(int)fp8 for:(int)fp12;
- (BOOL)writeToPath:(id)fp8 safely:(BOOL)fp12;
- (void)copySerializationInto:(void *)fp8;

@end

@interface NSRTFReader : NSObject
{
    NSMutableAttributedString *_topAttributedString;
    NSMutableAttributedString *_curAttributedString;
    NSMutableArray *_attributesStack;
    NSMutableDictionary *_curAttributes;
    unsigned int _level;
    NSData *_rtfData;
    NSMutableDictionary *_fontTable;
    NSFileWrapper *_document;
    union {
        char thin[128];
        unsigned short fat[128];
    } _textBuffer;
    unsigned int _textBufferIndex;
    int _rtfVersion;
    int _cocoaVersion;
    int _cocoaSubVersion;
    int _readOnly;
    unsigned int _defaultToUniCharEncoding;
    struct _NSAttributeInfo _attributeInfo;
    NSMutableData *_attributeInfoStack;
    struct _NSSize _paperSize;
    float _lMargin;
    float _rMargin;
    float _bMargin;
    float _tMargin;
    NSMutableDictionary *_documentInfoDictionary;
    struct _NSSize _viewSize;
    int _viewScale;
    int _viewKind;
    struct _NSMapTable *_cachedRTFFontTable;
    float _hyphenationFactor;
    float _defaultTabInterval;
    NSColor *_documentBackgroundColor;
    struct _NSRTFPriv _private;
    BOOL _textBufferContentsIsFat;
    BOOL _explicitCharSetEncountered;
    BOOL _isRTLDocument;
    int _readLimit;
    BOOL _limitReached;
    NSMutableArray *_nestedTables;
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    BOOL _currentRowIsLast;
    BOOL _setTableCells;
    int _currentBorderEdge;
    BOOL _currentBorderIsTable;
    NSMutableDictionary *_listDefinitions;
    int _currentListNumber;
    int _currentListLevel;
}

- (id)initWithRTFD:(id)fp8;
- (id)initWithPath:(id)fp8;
- (id)initWithRTFDFileWrapper:(id)fp8;
- (id)initWithRTF:(id)fp8;
- (void)_setRTFDFileWrapper:(id)fp8;
- (id)_RTFDFileWrapper;
- (void)setReadLimit:(int)fp8;
- (void)setPaperSize:(struct _NSSize)fp8;
- (struct _NSSize)paperSize;
- (void)setViewSize:(struct _NSSize)fp8;
- (struct _NSSize)viewSize;
- (void)setViewKind:(int)fp8;
- (void)setViewScale:(int)fp8;
- (int)cocoaVersion;
- (int)cocoaSubVersion;
- (void)setCocoaVersion:(int)fp8;
- (void)setCocoaSubVersion:(int)fp8;
- (float)floatCocoaVersion;
- (void)setReadOnly:(int)fp8;
- (void)setLeftMargin:(float)fp8;
- (void)setRightMargin:(float)fp8;
- (void)setTopMargin:(float)fp8;
- (void)setBottomMargin:(float)fp8;
- (void)setHyphenationFactor:(float)fp8;
- (void)setBackgroundColor:(id)fp8;
- (void)setDefaultTabInterval:(float)fp8;
- (float)defaultTabInterval;
- (void)setBaseWritingDirection:(int)fp8;
- (int)baseWritingDirection;
- (void)_ensureTableCells;
- (void)_beginTableRow;
- (id)_currentTable;
- (id)_currentTableCell;
- (int)_currentBorderEdge;
- (BOOL)_currentBorderIsTable;
- (BOOL)_currentTableCellIsPlaceholder;
- (void)_setCurrentBorderEdge:(int)fp8 isTable:(BOOL)fp12;
- (void)_pushTableState;
- (void)_popTableState;
- (void)_setTableCells;
- (void)_clearTableCells;
- (void)_setTableNestingLevel:(int)fp8;
- (void)_startTableRowDefinition;
- (void)_endTableCellDefinition;
- (void)_paragraphInTable;
- (void)_endTableCell;
- (void)_lastTableRow;
- (void)_endTableRow;
- (void)_mergeTableCellsHorizontally;
- (void)_mergeTableCellsVertically;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)fp8;
- (id)mutableAttributedString;
- (id)mutableAttributes;
- (id)defaultParagraphStyle;
- (id)_mutableParagraphStyle;
- (id)attributedStringToEndOfGroup;
- (id)attributedString;
- (id)attributesAtEndOfGroup;
- (id)_documentInfoDictionary;
- (void)_updateAttributes;
- (int)_currentListNumber;
- (void)_setCurrentListNumber:(int)fp8;
- (int)_currentListLevel;
- (void)_setCurrentListLevel:(int)fp8;
- (id)_listDefinitions;
- (void)_addListDefinition:(id)fp8 forKey:(int)fp12;
- (void)_addOverride:(int)fp8 forKey:(int)fp12;
- (void)processString:(id)fp8;
- (void)_pushState;
- (void)_popState;
- (void)dealloc;
- (void)finalize;

@end

@interface NSRTFReaderTableState : NSObject
{
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    BOOL _currentRowIsLast;
}

- (void)dealloc;

@end

@interface NSRTFWriter : NSObject
{
    NSMutableData *_output;
    NSAttributedString *_attrString;
    unsigned int _attrStringLength;
    NSFileWrapper *_document;
    NSMutableDictionary *_fontNames;
    NSMutableDictionary *_colors;
    NSMutableArray *_listRanges;
    id _curFont;
    id _curForegroundColor;
    id _curBackgroundColor;
    id _curParagraphStyle;
    id _curKern;
    id _curBaselineOffset;
    id _curSuperscript;
    id _curUnderlineStyle;
    unsigned int _curTraits;
    unsigned int _curEncoding;
    BOOL forceColorWrite;
    BOOL _activeFontFeatures;
    float _rightMargin;
    NSDictionary *_docAttrs;
}

+ (void)initialize;
- (void)_writeCharacters:(id)fp8 range:(struct _NSRange)fp12;
- (void)writeEscapedUTF8String:(id)fp8;
- (int)_mostCompatibleCharset:(id)fp8;
- (id)initWithAttributedString:(id)fp8;
- (void)dealloc;
- (id)RTFD;
- (id)RTFDFileWrapper;
- (id)_RTFDFileWrapper;
- (void)_setRTFDFileWrapper:(id)fp8;
- (void)setDocumentAttributes:(id)fp8;
- (id)documentAttribute:(id)fp8;
- (id)documentAttributes;
- (void)writeRTF;
- (id)RTF;
- (void)collectResources;
- (void)writeFontTable;
- (void)writeColorTable;
- (void)writeStyleSheetTable;
- (void)writeListTable;
- (void)writePaperSize;
- (void)writeHyphenation;
- (void)writeDefaultTabInterval;
- (void)writeBackgroundColor;
- (void)_writeVersionsAndEncodings;
- (void)writeStringDocumentAttribute:(id)fp8 withRTFKeyword:(const char *)fp12;
- (void)writeDateDocumentAttribute:(id)fp8 withRTFKeyword:(const char *)fp12;
- (void)writeKeywordsDocumentAttribute;
- (void)writeInfo;
- (void)writeHeader;
- (void)writeColor:(id)fp8 type:(unsigned int)fp12;
- (void)writeTableHeader:(id)fp8 atIndex:(unsigned int)fp12 nestingLevel:(unsigned int)fp16;
- (BOOL)writeCellTerminator:(id)fp8 atIndex:(unsigned int)fp12 nestingLevel:(unsigned int)fp16;
- (void)writeParagraphStyle:(id)fp8;
- (id)_plainFontNameForFont:(id)fp8;
- (void)writeFont:(id)fp8;
- (void)writeKern:(id)fp8;
- (void)writeUnderlineStyle:(id)fp8 allowStrikethrough:(BOOL)fp12;
- (void)writeStrikethroughStyle:(id)fp8;
- (void)writeSuperscript:(id)fp8;
- (void)writeBaselineOffset:(id)fp8;
- (void)writeLigature:(id)fp8;
- (void)writeCharacterShape:(id)fp8;
- (void)writeStrokeWidth:(id)fp8;
- (void)writeObliqueness:(id)fp8;
- (void)writeExpansion:(id)fp8;
- (void)writeShadow:(id)fp8;
- (void)restoreAttributes:(id)fp8;
- (void)writeCharacterAttributes:(id)fp8 previousAttributes:(id)fp12;
- (void)writeAttachment:(id)fp8;
- (void)writeGlyphInfo:(id)fp8;
- (BOOL)writeLinkInfo:(id)fp8;
- (void)writeDate:(id)fp8;
- (void)writeBody;

@end

@interface NSRulebookCharacterSet : NSCharacterSet
{
    struct _NSRulebookSetHeader *rbset;
}

- (id)_initWithSet:(void *)fp8;
- (BOOL)characterIsMember:(unsigned short)fp8;

@end

@interface NSRulebook : NSObject
{
    char *rbuf;
    NSData *databuf;
    struct _NSRulebookHeader *header;
    struct _NSRulebookSetHeader *setofrules;
    id charsCovered;
    int *proptable;
    int *entryListList;
    int *entryList;
    struct _NSRulebookTestStruct *TSA;
    struct _NSRangeKeyRec *rangeKeyRecs;
    int *rb;
    NSRulebook *implementor[4];
}

+ (void)_setNetPathsDisabled:(BOOL)fp8;
+ (void)initialize;
+ (id)glyphGeneratorForEncoding:(id)fp8 language:(id)fp12 font:(id)fp16;
+ (id)glyphGeneratorForTriplet:(id)fp8 makeSharable:(BOOL)fp12;
+ (id)glyphGeneratorForEncoding:(id)fp8 language:(id)fp12 font:(id)fp16 makeSharable:(BOOL)fp20;
+ (id)sampleTextForEncoding:(id)fp8 language:(id)fp12 font:(id)fp16;
+ (void)flushLocalCopiesOfSharedRulebooks;
+ (id)loadRulebook:(id)fp8;
+ (void)_serverDied:(id)fp8;
+ (id)proxyForRulebookServer;
+ (id)coveredCharacterCache;
- (id)initWithData:(id)fp8;
- (id)initWithFile:(id)fp8;
- (id)runInitialization;
- (BOOL)coversCharacter:(unsigned short)fp8;
- (id)coveredCharacterSet;
- (unsigned int)propertyTableCount;
- (struct _NSRulebookSetHeader *)propertyTableAtIndex:(unsigned int)fp8;
- (BOOL)setImplementor:(id)fp8 atIndex:(unsigned int)fp12;
- (id)implementorAtIndex:(unsigned int)fp8;
- (struct _NSRulebookTestStruct *)testStructArrayAtIndex:(unsigned int)fp8;
- (int *)codeSegment;
- (id)data;
- (int *)findEntryListFor:(unsigned short)fp8;
- (void)dealloc;
- (int)maxUserData;
- (void)_dumpBookSegments;
- (id)representationOfCoveredCharacters;
- (unsigned int)hyphenGlyph;

@end

@interface NSRulerMarker : NSObject <NSCopying, NSCoding>
{
    NSRulerView *_ruler;
    float _location;
    NSImage *_image;
    struct _NSPoint _imageOrigin;
    struct __rFlags _rFlags;
    id _representedObject;
}

+ (id)_numericIndicatorCell;
+ (void)initialize;
- (id)initWithRulerView:(id)fp8 markerLocation:(float)fp12 image:(id)fp16 imageOrigin:(struct _NSPoint)fp20;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)ruler;
- (void)setMarkerLocation:(float)fp8;
- (float)markerLocation;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setImageOrigin:(struct _NSPoint)fp8;
- (struct _NSPoint)imageOrigin;
- (void)setMovable:(BOOL)fp8;
- (void)setRemovable:(BOOL)fp8;
- (BOOL)isMovable;
- (BOOL)isRemovable;
- (BOOL)isDragging;
- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;
- (struct _NSPoint)_originPointInRuler;
- (struct _NSPoint)_compositePointInRuler;
- (struct _NSRect)imageRectInRuler;
- (float)thicknessRequiredInRuler;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)trackMouse:(id)fp8 adding:(BOOL)fp12;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (float)_locationOfOriginPoint:(float)fp8;

@end

@interface NSRulerMarkerPanel : NSPanel
{
}

- (BOOL)hasShadow;

@end

@interface NSRulerMarker (NSTextExtensions)
+ (id)leftMarginMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)rightMarginMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)firstIndentMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)leftIndentMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)rightIndentMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)leftTabMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)rightTabMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)centerTabMarkerWithRulerView:(id)fp8 location:(float)fp12;
+ (id)decimalTabMarkerWithRulerView:(id)fp8 location:(float)fp12;
@end

@interface NSRulerView : NSView
{
    NSScrollView *_scrollView;
    int _orientation;
    NSString *_units;
    float _originOffset;
    float _ruleThickness;
    float _thicknessForMarkers;
    float _thicknessForAccessoryView;
    NSView *_clientView;
    NSMutableArray *_markers;
    NSView *_accessoryView;
    NSDictionary *_cachedHashDict;
    float _cachedDocViewToRulerConversion;
    struct _NSPoint _cachedContentBoundsOrigin;
    NSRulerMarker *_draggingMarker;
    id _reservedRulerView1;
}

+ (void)registerUnitWithName:(id)fp8 abbreviation:(id)fp12 unitToPointsConversionFactor:(float)fp16 stepUpCycle:(id)fp20 stepDownCycle:(id)fp24;
+ (void)initialize;
- (id)initWithScrollView:(id)fp8 orientation:(int)fp12;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setScrollView:(id)fp8;
- (id)scrollView;
- (void)setOrientation:(int)fp8;
- (int)orientation;
- (float)baselineLocation;
- (float)requiredThickness;
- (void)setRuleThickness:(float)fp8;
- (float)ruleThickness;
- (void)setReservedThicknessForMarkers:(float)fp8;
- (float)reservedThicknessForMarkers;
- (void)setReservedThicknessForAccessoryView:(float)fp8;
- (float)reservedThicknessForAccessoryView;
- (void)setMeasurementUnits:(id)fp8;
- (id)measurementUnits;
- (void)setOriginOffset:(float)fp8;
- (float)originOffset;
- (void)setClientView:(id)fp8;
- (id)clientView;
- (void)setMarkers:(id)fp8;
- (void)addMarker:(id)fp8;
- (void)removeMarker:(id)fp8;
- (id)markers;
- (BOOL)trackMarker:(id)fp8 withMouseEvent:(id)fp12;
- (void)setAccessoryView:(id)fp8;
- (id)accessoryView;
- (void)moveRulerlineFromLocation:(float)fp8 toLocation:(float)fp12;
- (void)invalidateHashMarks;
- (void)drawBackgroundInRect:(struct _NSRect)fp8;
- (void)drawSeparatorInRect:(struct _NSRect)fp8;
- (void)drawHashMarksAndLabelsInRect:(struct _NSRect)fp8;
- (void)drawMarkersInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (id)description;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)_captureVisibleIntoLiveResizeCache;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)fp8 visRect:(struct _NSRect)fp12;

@end

@interface NSRulerViewPrivateData : NSObject
{
    BOOL _showTooltip;
    id _accessibilityPanelController;
}

@end

@interface NSRulerLabelCell : NSTextFieldCell
{
}

- (int)_typesetterBehavior;

@end

@interface NSRulerView (NSPrivate)
+ (id)labelColor;
+ (id)backgroundColor;
+ (id)separatorColor;
+ (id)_labelCell;
+ (void)_registerUnitWithName:(id)fp8 abbreviation:(id)fp12 unitToPointsConversionFactor:(float)fp16 stepUpCycle:(id)fp20 stepDownCycle:(id)fp24;
+ (id)_registrationDictionaryForUnitNamed:(id)fp8;
- (struct _NSRect)_ruleAreaRect;
- (struct _NSRect)_maxRuleAreaRect;
- (struct _NSRect)_markerAreaRect;
- (struct _NSRect)_rulerAccessoryViewAreaRect;
- (struct _NSPoint)_rulerOrigin;
- (id)_hashMarkDictionary;
- (id)_hashMarkDictionaryForDocumentView:(id)fp8 measurementUnitName:(id)fp12;
- (id)_hashMarkDictionaryForDocView:(id)fp8 measurementUnitToBoundsConversionFactor:(float)fp12 stepUpCycle:(id)fp16 stepDownCycle:(id)fp20 minimumHashSpacing:(float)fp24 minimumLabelSpacing:(float)fp28;
- (id)_markerHitTest:(struct _NSPoint)fp8;
- (BOOL)displaysTooltips;
- (void)setDisplaysTooltips:(BOOL)fp8;
- (void)_scrollToMatchContentView;
- (void)_bitBlitSourceRect:(struct _NSRect)fp8 toDestinationRect:(struct _NSRect)fp24;
- (void)_setDraggingMarker:(id)fp8;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28 topView:(BOOL)fp32;
- (float)_unitsForClientLocation:(float)fp8;
- (float)_unitsForRulerLocation:(float)fp8;
@end

@interface NSAccessibilityRulerMarker : NSAccessibilityMockUIElement
{
    NSRulerMarker *_marker;
}

+ (id)markerWithRulerMarker:(id)fp8 parent:(id)fp12;
- (id)initWithRulerMarker:(id)fp8 parent:(id)fp12;
- (void)dealloc;
- (id)marker;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityMarkerTypeAttribute;
- (BOOL)accessibilityIsMarkerTypeAttributeSettable;
- (id)accessibilityMarkerTypeDescriptionAttribute;
- (BOOL)accessibilityIsMarkerTypeDescriptionAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSRulerViewAccessibilityPanelController : NSObject
{
    NSWindow *_accessibilityPanel;
    NSTextField *_valueField;
    NSPopUpButton *_markerTypeButton;
    NSRulerView *_rulerView;
}

- (id)initWithRulerView:(id)fp8;
- (void)dealloc;
- (id)_accessibilityPanel;
- (id)_valueField;
- (id)_markerTypeButton;
- (void)_addMarker:(id)fp8;
- (void)_cancelAddMarker:(id)fp8;

@end

@interface NSRulerView (NSRulerViewAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityUnitsAttribute;
- (BOOL)accessibilityIsUnitsAttributeSettable;
- (id)accessibilityUnitDescriptionAttribute;
- (BOOL)accessibilityIsUnitDescriptionAttributeSettable;
- (id)accessibilityMarkerUIElementsAttribute;
- (BOOL)accessibilityIsMarkerUIElementsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityRoleAttribute;
- (id)testPart:(struct _NSPoint)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
- (float)_locationFromUnitsValue:(float)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)_cancelAddMarker:(id)fp8;
- (void)_addMarker:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSIdRunStorage : NSRunStorage
{
}

+ (void)initialize;
- (void)_allocData:(unsigned long)fp8;
- (void)_reallocData:(unsigned long)fp8;
- (void)_deallocData;
- (void)dealloc;

@end

@interface NSRunStorage : NSObject <NSCopying>
{
    unsigned int _count;
    unsigned int _elementSize;
    unsigned int _numBlocks;
    unsigned int _maxBlocks;
    unsigned int _indexDeltaStartBlock;
    int _indexDelta;
    struct {
        unsigned int;
        unsigned char [0];
    } *_runs;
    unsigned int _cachedBlock;
    struct _NSRange _cachedBlockRange;
    unsigned int _gapBlockIndex;
}

+ (void)initialize;
- (void)_allocData:(unsigned long)fp8;
- (void)_reallocData:(unsigned long)fp8;
- (void)_deallocData;
- (id)initWithElementSize:(unsigned int)fp8 capacity:(unsigned int)fp12;
- (id)init;
- (id)initWithRunStorage:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (unsigned int)count;
- (unsigned int)elementSize;
- (void *)elementAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (void)replaceElementsInRange:(struct _NSRange)fp8 withElement:(void *)fp16 coalesceRuns:(BOOL)fp20;
- (void)insertElement:(void *)fp8 range:(struct _NSRange)fp12 coalesceRuns:(BOOL)fp20;
- (void)removeElementsInRange:(struct _NSRange)fp8 coalesceRuns:(BOOL)fp16;
- (id)description;

@end

@interface NSRunStorage (NSPrivate)
+ (void)_setConsistencyCheckingEnabled:(BOOL)fp8 superCheckEnabled:(BOOL)fp12;
- (void)_ensureCapacity:(unsigned int)fp8;
- (void)_moveGapToBlockIndex:(unsigned int)fp8;
- (void)_moveGapAndMergeWithBlockRange:(struct _NSRange)fp8;
- (void)_consistencyCheck:(int)fp8;
- (void)_consistencyError:(int)fp8 startAtZeroError:(BOOL)fp12 cacheError:(BOOL)fp16 inconsistentBlockError:(BOOL)fp20;
@end

@interface NSScreen : NSObject
{
    struct _NSRect _frame;
    int _depth;
    int _screenNumber;
    struct NSScreenAuxiliary *_auxiliaryStorage;
}

+ (id)screens;
+ (void)_resetScreens;
+ (id)mainScreen;
+ (id)_zeroScreen;
+ (id)deepestScreen;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)initWithFrame:(struct _NSRect)fp8 depth:(int)fp24;
- (int)depth;
- (struct _NSRect)frame;
- (struct _NSRect)visibleFrame;
- (struct _NSRect)_savedVisibleFrame;
- (void)_saveVisibleFrame;
- (id)deviceDescription;
- (const int *)supportedWindowDepths;
- (float)userSpaceScaleFactor;

@end

@interface NSScriptExecutionContext (NSAppKitScripting)
- (void)_setUpDefaultTopLevelObject;
@end

@interface NSScroller : NSControl
{
    float _curValue;
    float _percent;
    float _knobSize;
    struct __sFlags2 _sFlags2;
    id _target;
    SEL _action;
    struct _sFlags sFlags;
}

+ (void)_aquaScrollerBehaviorChanged:(id)fp8;
+ (void)_aquaScrollerVariantChanged:(id)fp8;
+ (float)scrollerWidth;
+ (float)scrollerWidthForControlSize:(int)fp8;
+ (void)initialize;
+ (int)_arrowsConfig;
+ (void)_setArrowsConfig:(int)fp8;
+ (void)_drawEndCapInRect:(struct _NSRect)fp8;
- (BOOL)_hasSeparateArrows;
- (double)_repeatTime;
- (id)_setWindow:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)drawParts;
- (struct _NSRect)_drawingRectForPart:(int)fp8;
- (struct _NSRect)rectForPart:(int)fp8;
- (void)checkSpaceForParts;
- (int)usableParts;
- (id)target;
- (void)setTarget:(id)fp8;
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (void)_adjustForGrowBox;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setArrowsPosition:(int)fp8;
- (int)arrowsPosition;
- (void)setControlTint:(int)fp8;
- (int)controlTint;
- (void)setControlSize:(int)fp8;
- (int)controlSize;
- (int)_realControlTint;
- (void)setEnabled:(BOOL)fp8;
- (void)drawArrow:(int)fp8 highlightPart:(int)fp12;
- (void)drawArrow:(int)fp8 highlight:(BOOL)fp12;
- (void)drawKnob;
- (void)drawKnobSlotInRect:(struct _NSRect)fp8 highlight:(BOOL)fp24;
- (void)drawRect:(struct _NSRect)fp8;
- (void)highlight:(BOOL)fp8;
- (void)_getPartStruct:(struct _PartStruct *)fp8 numberOfParts:(unsigned int *)fp12 withInnerBounds:(struct _NSRect)fp16;
- (int)_testPartUsingDestinationFloatValue:(struct _NSPoint)fp8;
- (int)testPart:(struct _NSPoint)fp8;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;
- (void)_scrollByDelta:(float)fp8;
- (void)trackKnob:(id)fp8;
- (void)trackScrollButtons:(id)fp8;
- (void)trackPagingArea:(id)fp8;
- (void)mouseDown:(id)fp8;
- (int)hitPart;
- (float)floatValue;
- (float)knobProportion;
- (void)setFloatValue:(float)fp8 knobProportion:(float)fp12;
- (void)setFloatValue:(float)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setInterfaceStyle:(int)fp8;
- (void)_windowChangedKeyState;

@end

@interface NSScroller (NSScrollerPrivate)
- (void)_decrementLine:(id)fp8;
- (void)_incrementLine:(id)fp8;
- (void)_decrementPage:(id)fp8;
- (void)_incrementPage:(id)fp8;
@end

@interface NSAccessibilityScrollerPart : NSAccessibilityMockUIElement
{
    int _partCode;
}

+ (id)partWithCode:(int)fp8 parent:(id)fp12;
- (id)initWithPartCode:(int)fp8 parent:(id)fp12;
- (int)partCode;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSScroller (NSScrollerAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (int *)_accessibilitySupportedPartCodes;
- (BOOL)_accessibilityIsSupportedPartCode:(int)fp8;
- (id)_accessibilityUIElementForPartCode:(int)fp8;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSScrollView : NSView
{
    NSScroller *_vScroller;
    NSScroller *_hScroller;
    NSClipView *_contentView;
    NSClipView *_headerClipView;
    NSView *_cornerView;
    id _ruler;
    struct __SFlags _sFlags;
    void *_extraIvars;
    NSRulerView *_horizontalRuler;
    NSRulerView *_verticalRuler;
}

+ (void)initialize;
+ (struct _NSSize)frameSizeForContentSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(int)fp24;
+ (struct _NSSize)contentSizeForFrameSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(int)fp24;
- (BOOL)scrollRectToVisible:(const struct _NSRect *)fp8 fromView:(id)fp12;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (struct _NSRect)_cornerViewFrame;
- (void *)_regionForOpaqueDescendants:(struct _NSRect)fp8 forMove:(BOOL)fp24;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)_ownsWindowGrowBox;
- (BOOL)_fixHeaderAndCornerViews;
- (void)setDocumentView:(id)fp8;
- (id)documentView;
- (void)setContentView:(id)fp8;
- (id)contentView;
- (struct _NSRect)documentVisibleRect;
- (void)setDocumentCursor:(id)fp8;
- (id)documentCursor;
- (struct _NSSize)contentSize;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (void)setCopiesOnScroll:(BOOL)fp8;
- (void)setScrollsDynamically:(BOOL)fp8;
- (BOOL)scrollsDynamically;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (BOOL)_drawRectIfEmpty;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_drawRect:(struct _NSRect)fp8 clip:(BOOL)fp24;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (int)borderType;
- (void)setBorderType:(int)fp8;
- (void)_setLineBorderColor:(id)fp8;
- (id)_lineBorderColor;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setHasVerticalScroller:(BOOL)fp8;
- (BOOL)hasVerticalScroller;
- (void)setHasHorizontalScroller:(BOOL)fp8;
- (BOOL)hasHorizontalScroller;
- (id)verticalScroller;
- (id)horizontalScroller;
- (void)setVerticalScroller:(id)fp8;
- (void)setHorizontalScroller:(id)fp8;
- (BOOL)autohidesScrollers;
- (void)setAutohidesScrollers:(BOOL)fp8;
- (id)_newScroll:(BOOL)fp8;
- (void)_updateRulerlineForRuler:(id)fp8 oldPosition:(float)fp12 newPosition:(float)fp16 vertical:(BOOL)fp20;
- (id)_rulerline:(float)fp8:(float)fp12 last:(BOOL)fp16;
- (void)_setScrollerNeedsDisplay:(id)fp8;
- (id)_commonNewScroll:(id)fp8;
- (float)_repeatMultiplier:(double)fp8;
- (void)setHorizontalLineScroll:(float)fp8;
- (void)setVerticalLineScroll:(float)fp8;
- (void)setLineScroll:(float)fp8;
- (float)horizontalLineScroll;
- (float)verticalLineScroll;
- (float)lineScroll;
- (void)setHorizontalPageScroll:(float)fp8;
- (void)setVerticalPageScroll:(float)fp8;
- (void)setPageScroll:(float)fp8;
- (float)horizontalPageScroll;
- (float)verticalPageScroll;
- (float)pageScroll;
- (void)_doScroller:(id)fp8 hitPart:(int)fp12 multiplier:(float)fp16;
- (BOOL)_pinnedInDirectionOfScroll:(id)fp8;
- (void)scrollWheel:(id)fp8;
- (void)_doScroller:(id)fp8;
- (void)_scrollPageInDirection:(int)fp8;
- (void)pageUp:(id)fp8;
- (void)pageDown:(id)fp8;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)fp8;
- (void)setInterfaceStyle:(int)fp8;
- (void)_dynamicColorsChanged:(id)fp8;
- (id)_update;
- (BOOL)preservesContentDuringLiveResize;
- (void)_updateForLiveResizeWithOldSize:(struct _NSSize)fp8;
- (id)_setWindow:(id)fp8;
- (BOOL)_cornerViewHidesWithVerticalScroller;
- (void)_setHorizontalScrollerHidden:(BOOL)fp8;
- (void)_setVerticalScrollerHidden:(BOOL)fp8;
- (void)tile;
- (void)scrollClipView:(id)fp8 toPoint:(struct _NSPoint)fp12;
- (void)reflectScrolledClipView:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)_setAutoResizeDocView:(BOOL)fp8;
- (id)_contentView;
- (void)willRemoveSubview:(id)fp8;
- (void)_finalize;
- (float)_destinationFloatValueForScroller:(id)fp8;

@end

@interface NSScrollView (NSPrivate)
+ (Class)_horizontalScrollerClass;
+ (Class)_verticalScrollerClass;
- (BOOL)autoforwardsScrollWheelEvents;
- (void)setAutoforwardsScrollWheelEvents:(BOOL)fp8;
@end

@interface NSScrollView (NSRulerSupport)
+ (void)setRulerViewClass:(Class)fp8;
+ (Class)rulerViewClass;
- (void)setRulersVisible:(BOOL)fp8;
- (BOOL)rulersVisible;
- (void)setHasHorizontalRuler:(BOOL)fp8;
- (BOOL)hasHorizontalRuler;
- (void)setHasVerticalRuler:(BOOL)fp8;
- (BOOL)hasVerticalRuler;
- (void)setHorizontalRulerView:(id)fp8;
- (id)horizontalRulerView;
- (void)setVerticalRulerView:(id)fp8;
- (id)verticalRulerView;
- (void)_reflectDocumentViewBoundsChange;
- (void)_handleBoundsChangeForSubview:(id)fp8;
- (id)rulerStateDescription;
@end

@interface NSScrollView (NSScrollViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (id)accessibilityVerticalScrollBarAttribute;
- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSSecureTextField : NSTextField
{
}

+ (void)initialize;
+ (void)setCellClass:(Class)fp8;
+ (Class)cellClass;
+ (BOOL)_editingInView:(id)fp8;
- (void)_commonSecureTextFieldInit:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)dealloc;
- (void)finalize;
- (void)_enableSecurity:(id)fp8;
- (void)_disableSecurity:(id)fp8;
- (BOOL)abortEditing;
- (void)mouseDown:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (id)_fieldEditor;
- (void)selectText:(id)fp8;
- (void)updateCell:(id)fp8;
- (void)validateEditing;
- (id)initWithCoder:(id)fp8;

@end

@interface NSSecureTextFieldCell : NSTextFieldCell
{
    BOOL _echosBullets;
}

+ (void)initialize;
+ (id)_sharedSecureFieldEditorCreate;
+ (id)_sharedSecureFieldEditor;
- (void)_setBulletCharacter:(unsigned short)fp8;
- (unsigned short)_bulletCharacter;
- (id)initTextCell:(id)fp8;
- (void)setEchosBullets:(BOOL)fp8;
- (BOOL)echosBullets;
- (id)_bulletStringForString:(id)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (id)initWithCoder:(id)fp8;
- (void)setObjectValue:(id)fp8;

@end

@interface NSSecureTextView : NSTextView
{
    NSSecureTextStorage *_secureTextStorage;
    BOOL _secureInput;
    BOOL _capsLockDown;
    BOOL _numLockDown;
}

+ (void)initialize;
+ (BOOL)_allowKillRing;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)fp8;
- (void)enableSecureInput:(BOOL)fp8;
- (void)setSelectable:(BOOL)fp8;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (void)copy:(id)fp8;
- (void)startSpeaking:(id)fp8;
- (void)complete:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)_acceptsMarkedText;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(int)fp16;
- (void)flagsChanged:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSSecureTextStorage : NSProxy
{
    NSTextStorage *_realTextStorage;
    NSBulletString *_bulletString;
    BOOL _enabled;
}

- (id)initWithRealTextStorage:(id)fp8;
- (void)dealloc;
- (id)string;
- (void)setEnabled:(BOOL)fp8;
- (void)setBulletCharacter:(unsigned short)fp8;
- (void)addLayoutManager:(id)fp8;
- (void)forwardInvocation:(id)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;

@end

@interface NSBulletString : NSString
{
    unsigned short _bulletCharacter;
    NSTextStorage *_textStorage;
}

- (id)initWithTextStorage:(id)fp8;
- (unsigned int)length;
- (unsigned short)characterAtIndex:(unsigned int)fp8;
- (void)setBulletCharacter:(unsigned short)fp8;

@end

@interface NSSecureTextField (NSSecureTextField_Private)
- (void)_setBulletCharacter:(unsigned short)fp8;
- (unsigned short)_bulletCharacter;
@end

@interface NSSecureTextFieldCell (NSSecureTextFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityValueAttribute;
@end

@interface NSServiceMaster : NSObject <NSServiceMasterProto>
{
    NSMutableDictionary *_localObjects;
    NSConnection *_cxn;
}

+ (id)sharedServiceMaster;
- (id)init;
- (void)dealloc;
- (void)registerObject:(id)fp8 withServicePath:(id)fp12;
- (void)unregisterObjectWithServicePath:(id)fp8;
- (id)serviceListener;
- (id)objectForServicePath:(id)fp8;
- (id)objectForServicePath:(id)fp8 app:(id)fp12 doLaunch:(BOOL)fp16 limitDate:(id)fp20 basePortName:(id)fp24;
- (id)objectForServicePath:(id)fp8 app:(id)fp12 doLaunch:(BOOL)fp16 limitDate:(id)fp20;

@end

@interface NSServiceListener : NSObject <NSServiceListenerProto>
{
    NSMutableArray *serviceProviders;
}

- (void)addServiceProvider:(id)fp8;
- (void)removeServiceProvider:(id)fp8;
- (id)providerRespondingToSelector:(SEL)fp8;
- (id)_doInvokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 error:(id *)fp24 unhide:(BOOL)fp28;
- (int)invokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 error:(id *)fp24;
- (int)invokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 menu:(id)fp24 remoteServices:(id)fp28;
- (void)asyncInvokeServiceIn:(id)fp8 msg:(id)fp12 pb:(id)fp16 userData:(id)fp20 menu:(id)fp24 remoteServices:(id)fp28 unhide:(BOOL)fp32;
- (void)serviceError:(id)fp8 error:(id)fp12;

@end

@interface NSServiceMaster (NSServicesMenuPrivate)
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (void)menuNeedsUpdate:(id)fp8;
@end

@interface NSApplication (NSServicesHandling)
- (id)servicesProvider;
- (void)setServicesProvider:(id)fp8;
- (void)registerServiceProvider:(id)fp8 withName:(id)fp12;
- (void)unregisterServiceProviderNamed:(id)fp8;
@end

@interface NSWindow (Sheets)
- (BOOL)_runningDocModal;
- (BOOL)_isDocModal;
- (void)_setModal:(BOOL)fp8;
- (void)_setSheet:(BOOL)fp8;
- (BOOL)_isSheet;
- (void)_moveSheetByItself:(id)fp8 delta:(struct _NSPoint)fp12;
- (void)_attachSheetWindow:(id)fp8;
- (void)_detachSheetWindow;
- (id)_attachedSheet;
- (id)_documentWindow;
- (void)_setDocumentWindow:(id)fp8;
- (void)_positionSheetRect:(struct _NSRect)fp8 onRect:(struct _NSRect)fp24 andDisplay:(BOOL)fp40;
- (void *)_sheetEffect;
- (float)_sheetEffectInset;
- (void)_adjustSheetEffect;
- (struct _NSRect)startRectForSheet:(id)fp8;
- (void)_positionSheetAndDisplay:(BOOL)fp8;
- (void)_constrainSheetAndDisplay:(BOOL)fp8;
- (struct _NSRect)_positionSheetConstrained:(BOOL)fp8 andDisplay:(BOOL)fp12;
- (void)_orderFrontRelativeToWindow:(id)fp8;
- (void)_orderOutRelativeToWindow:(id)fp8;
- (void)_stashOrigin:(struct _NSPoint)fp8;
- (struct _NSPoint)_stashedOrigin;
- (void)_stashCollapsedOrigin:(struct _NSPoint)fp8;
- (struct _NSPoint)_collapsedOrigin;
- (void)_hideSheet:(BOOL)fp8;
- (void)_unhideSheet;
@end

@interface NSMoveHelper (Sheets)
- (void)_startMove;
- (void)_positionWindow;
- (BOOL)_hasSheetFactor:(float *)fp8;
- (void)_startSheet;
- (void)_animatePanel;
- (void)_animateSheet;
- (void)_moveParent:(id)fp8 andOpenSheet:(id)fp12;
- (void)_closeSheet:(id)fp8 andMoveParent:(id)fp12;
@end

@interface NSSlider : NSControl
{
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)sizeToFit;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (double)altIncrementValue;
- (void)setAltIncrementValue:(double)fp8;
- (void)setTitleCell:(id)fp8;
- (id)titleCell;
- (void)setTitleColor:(id)fp8;
- (id)titleColor;
- (void)setTitleFont:(id)fp8;
- (id)titleFont;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)setTitleNoCopy:(id)fp8;
- (void)setKnobThickness:(float)fp8;
- (float)knobThickness;
- (void)setImage:(id)fp8;
- (id)image;
- (int)isVertical;
- (void)setEnabled:(BOOL)fp8;
- (void)_moveInDirection:(int)fp8;
- (void)moveRight:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)pageUp:(id)fp8;
- (void)pageDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)setNumberOfTickMarks:(int)fp8;
- (int)numberOfTickMarks;
- (void)setTickMarkPosition:(int)fp8;
- (int)tickMarkPosition;
- (void)setAllowsTickMarkValuesOnly:(BOOL)fp8;
- (BOOL)allowsTickMarkValuesOnly;
- (double)tickMarkValueAtIndex:(int)fp8;
- (struct _NSRect)rectOfTickMarkAtIndex:(int)fp8;
- (int)indexOfTickMarkAtPoint:(struct _NSPoint)fp8;
- (double)closestTickMarkValueToValue:(double)fp8;

@end

@interface NSSliderCell : NSActionCell
{
    int _reserved[3];
    int _numberOfTickMarks;
    double _altIncValue;
    double _value;
    double _maxValue;
    double _minValue;
    struct _NSRect _trackRect;
    struct __sliderCellFlags _scFlags;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (BOOL)_highlightsWithHighlightRect;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (id)stringValue;
- (void)setStringValue:(id)fp8;
- (id)objectValue;
- (void)setObjectValue:(id)fp8;
- (int)intValue;
- (void)setIntValue:(int)fp8;
- (float)floatValue;
- (void)setFloatValue:(float)fp8;
- (double)doubleValue;
- (void)setDoubleValue:(double)fp8;
- (void)setContinuous:(BOOL)fp8;
- (BOOL)isContinuous;
- (BOOL)isOpaque;
- (BOOL)_usesCustomTrackImage;
- (void)_drawCustomTrackWithTrackRect:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)setKnobThickness:(float)fp8;
- (BOOL)_setKnobThickness:(float)fp8 usingInsetRect:(BOOL)fp12;
- (float)knobThickness;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setTitleColor:(id)fp8;
- (id)titleColor;
- (void)setTitleFont:(id)fp8;
- (id)titleFont;
- (id)title;
- (void)setTitle:(id)fp8;
- (void)setTitleCell:(id)fp8;
- (id)titleCell;
- (void)setSliderType:(int)fp8;
- (int)sliderType;
- (struct _NSRect)knobRectFlipped:(BOOL)fp8;
- (void)drawKnob:(struct _NSRect)fp8;
- (void)_drawLiveResizeHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawKnob;
- (BOOL)_calcTrackRect:(struct _NSRect *)fp8 andAdjustRect:(BOOL)fp12;
- (void)drawBarInside:(struct _NSRect)fp8 flipped:(BOOL)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)setAltIncrementValue:(double)fp8;
- (double)altIncrementValue;
- (int)isVertical;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (struct _NSRect)trackRect;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setNumberOfTickMarks:(int)fp8;
- (int)numberOfTickMarks;
- (void)setTickMarkPosition:(int)fp8;
- (int)tickMarkPosition;
- (void)setAllowsTickMarkValuesOnly:(BOOL)fp8;
- (BOOL)allowsTickMarkValuesOnly;
- (double)tickMarkValueAtIndex:(int)fp8;
- (struct _NSRect)rectOfTickMarkAtIndex:(int)fp8;
- (int)indexOfTickMarkAtPoint:(struct _NSPoint)fp8;
- (double)closestTickMarkValueToValue:(double)fp8;
- (void)_moveInDirection:(int)fp8;

@end

@interface NSSliderCell (NSSliderCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityValueIndicatorAttribute;
- (BOOL)accessibilityIsValueIndicatorAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityAllowedValuesAttribute;
- (BOOL)accessibilityIsAllowedValuesAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSRect)_accessibilityIndicatorRect;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSSortedArray : NSMutableArray
{
    NSMutableArray *_array;
    SEL _compareSelector;
    unsigned int _cachedCount;
    id _cachedFirstObject;
}

+ (void)initialize;
- (id)initWithCapacity:(unsigned int)fp8 compareSelector:(SEL)fp12;
- (id)initWithCompareSelector:(SEL)fp8;
- (id)init;
- (SEL)compareSelector;
- (void)setCompareSelector:(SEL)fp8;
- (id)initWithCapacity:(unsigned int)fp8;
- (id)initWithObjects:(id *)fp8 count:(unsigned int)fp12;
- (id)initWithObjects:(id)fp8;
- (id)initWithArray:(id)fp8 copyItems:(BOOL)fp12;
- (id)initWithArray:(id)fp8;
- (id)mutableCopyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (void)dealloc;
- (void)_insertObjectInSortOrder:(id)fp8;
- (unsigned int)count;
- (id)objectAtIndex:(unsigned int)fp8;
- (void)addObject:(id)fp8;
- (void)replaceObjectAtIndex:(unsigned int)fp8 withObject:(id)fp12;
- (void)removeLastObject;
- (void)insertObject:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeObjectAtIndex:(unsigned int)fp8;
- (void)setArray:(id)fp8;
- (void)sortUsingFunction:(void *)fp8 context:(void *)fp12;
- (void)sortUsingSelector:(SEL)fp8;

@end

@interface NSSound : NSObject <NSCopying, NSCoding>
{
    id _delegate;
    void *_info;
    void *_reserved[7];
}

+ (void)initialize;
+ (id)soundUnfilteredFileTypes;
+ (id)soundUnfilteredPasteboardTypes;
+ (BOOL)canInitWithPasteboard:(id)fp8;
+ (id)_searchForSoundNamed:(id)fp8;
+ (id)soundNamed:(id)fp8;
- (void)_postInitialization;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)initWithContentsOfFile:(id)fp8 byReference:(BOOL)fp12;
- (id)initWithContentsOfURL:(id)fp8 byReference:(BOOL)fp12;
- (id)initWithData:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)initWithPasteboard:(id)fp8;
- (void)writeToPasteboard:(id)fp8;
- (id)_url;
- (id)url;
- (id)name;
- (BOOL)setName:(id)fp8;
- (BOOL)isPlaying;
- (BOOL)pause;
- (BOOL)resume;
- (BOOL)play;
- (BOOL)stop;
- (void)_audioCompleted1;
- (void)_audioCompleted2;

@end

@interface NSBundle (NSBundleSoundExtensions)
- (id)pathForSoundResource:(id)fp8;
@end

@interface NSDefaultSpellServerDelegate : NSObject
{
}

- (struct _NSRange)spellServer:(id)fp8 findMisspelledWordInString:(id)fp12 language:(id)fp16 wordCount:(int *)fp20 countOnly:(BOOL)fp24;
- (id)spellServer:(id)fp8 suggestGuessesForWord:(id)fp12 inLanguage:(id)fp16;

@end

@interface NSSpellChecker : NSObject
{
    id _guessesBrowser;
    id _wordField;
    id _languagePopUp;
    id _guessesList;
    id _panel;
    id _userDictionaries;
    id _correctButton;
    id _guessButton;
    id _ignoreButton;
    id _accessoryView;
    id _dictionaryBrowser;
    NSString *_selectionString;
    id _spellServers;
    NSString *_lastGuess;
    struct __scFlags _scFlags;
    id _deleteButton;
    id _openButton;
    id _learnButton;
    id _forgetButton;
    void *_reservedSpellChecker1;
}

+ (int)uniqueSpellDocumentTag;
+ (id)sharedSpellChecker;
+ (BOOL)sharedSpellCheckerExists;
- (id)_nameOfDictionaryForDocumentTag:(int)fp8;
- (void)_setDocumentDictionaryName:(id)fp8;
- (id)init;
- (void)_hideLanguagePopUp;
- (void)_showLanguagePopUp;
- (void)_initUI;
- (void)setupGuessesBrowser;
- (void)awakeFromNib;
- (id)language;
- (int)_indexOfPopupItemForLanguage:(id)fp8;
- (BOOL)setLanguage:(id)fp8;
- (void)setWordFieldStringValue:(id)fp8;
- (BOOL)windowIsSpellingPanel:(id)fp8;
- (id)spellingPanel;
- (id)accessoryView;
- (id)_viewAboveAccessoryView;
- (void)setAccessoryView:(id)fp8;
- (id)_spellServers;
- (id)_chosenSpellServer:(BOOL)fp8 launchIfNecessary:(BOOL)fp12;
- (void)_preflightChosenSpellServer;
- (id)_learnOrForgetOrInvalidate:(int)fp8 word:(id)fp12 dictionary:(id)fp16 language:(id)fp20 ephemeral:(int)fp24;
- (id)_learn:(id)fp8;
- (id)_forget:(id)fp8;
- (id)_ignore:(id)fp8;
- (void)ignoreWord:(id)fp8 inSpellDocumentWithTag:(int)fp12;
- (void)learnWord:(id)fp8 language:(id)fp12;
- (void)learnWord:(id)fp8;
- (void)forgetWord:(id)fp8 language:(id)fp12;
- (void)forgetWord:(id)fp8;
- (id)ignoredWordsInSpellDocumentWithTag:(int)fp8;
- (void)setIgnoredWords:(id)fp8 inSpellDocumentWithTag:(int)fp12;
- (void)closeSpellDocumentWithTag:(int)fp8;
- (id)_chooseGuess:(id)fp8;
- (void)_reallyChooseGuess:(id)fp8;
- (id)_correct:(id)fp8;
- (void)browser:(id)fp8 createRowsForColumn:(int)fp12 inMatrix:(id)fp16;
- (void)_setLastGuess:(id)fp8;
- (void)_setSelectionString:(id)fp8;
- (id)guessesForWord:(id)fp8;
- (id)_guess:(id)fp8;
- (void)_doUpdate:(id)fp8;
- (void)_windowDidBecomeVisible:(id)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (id)_changeLanguage:(id)fp8;
- (id)_findNext:(id)fp8;
- (int)adjustOffsetToNextWordBoundaryInString:(id)fp8 startingAt:(int)fp12;
- (struct _NSRange)_chunkAndCheckGrammarInString:(id)fp8 language:(id)fp12 usingSpellServer:(id)fp16 details:(id *)fp20;
- (struct _NSRange)_chunkAndFindMisspelledWordInString:(id)fp8 language:(id)fp12 learnedDictionaries:(id)fp16 wordCount:(int *)fp20 usingSpellServer:(id)fp24;
- (struct _NSRange)checkGrammarOfString:(id)fp8 startingAt:(int)fp12 language:(id)fp16 wrap:(BOOL)fp20 inSpellDocumentWithTag:(int)fp24 details:(id *)fp28 reconnectOnError:(BOOL)fp32;
- (struct _NSRange)checkGrammarOfString:(id)fp8 startingAt:(int)fp12 language:(id)fp16 wrap:(BOOL)fp20 inSpellDocumentWithTag:(int)fp24 details:(id *)fp28;
- (struct _NSRange)checkSpellingOfString:(id)fp8 startingAt:(int)fp12 language:(id)fp16 wrap:(BOOL)fp20 inSpellDocumentWithTag:(int)fp24 wordCount:(int *)fp28 reconnectOnError:(BOOL)fp32;
- (struct _NSRange)checkSpellingOfString:(id)fp8 startingAt:(int)fp12 language:(id)fp16 wrap:(BOOL)fp20 inSpellDocumentWithTag:(int)fp24 wordCount:(int *)fp28;
- (struct _NSRange)checkSpellingOfString:(id)fp8 startingAt:(int)fp12;
- (int)countWordsInString:(id)fp8 language:(id)fp12;
- (id)completionsForPartialWordRange:(struct _NSRange)fp8 inString:(id)fp16 language:(id)fp20 inSpellDocumentWithTag:(int)fp24;
- (void)updateSpellingPanelWithMisspelledWord:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;

@end

@interface NSSpellChecker (NSUnusedNibActions)
- (void)_newDictionary:(id)fp8;
- (void)_changeDictionaries:(id)fp8;
- (void)_openDictionaries:(id)fp8;
- (void)_deleteDictionaries:(id)fp8;
@end

@interface NSSplitView : NSView
{
    id _data;
}

+ (void)initialize;
- (BOOL)isFlipped;
- (float)dividerThickness;
- (void)setVertical:(BOOL)fp8;
- (BOOL)isVertical;
- (BOOL)_isGrabber;
- (BOOL)isPaneSplitter;
- (BOOL)isSubviewCollapsed:(id)fp8;
- (void)_setIsGrabber:(BOOL)fp8;
- (void)setIsPaneSplitter:(BOOL)fp8;
- (void)resetCursorRects;
- (id)_setWindow:(id)fp8;
- (BOOL)_seemsToBeVertical;
- (void)encodeWithCoder:(id)fp8;
- (void)_initData;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)_compatibility_initWithUnkeyedCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setAutoresizesSubviews:(BOOL)fp8;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)adjustSubviews;
- (void)replaceSubview:(id)fp8 with:(id)fp12;
- (BOOL)isOpaque;
- (void *)_regionForOpaqueDescendants:(struct _NSRect)fp8 forMove:(BOOL)fp24;
- (void)_drawRect:(struct _NSRect)fp8 withOpaqueAncestor:(id)fp24;
- (void)drawDividerInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_setResizeControlNeedsDisplay;
- (void)_windowChangedKeyState;
- (id)_addSubview:(id)fp8;
- (id)_removeSubview:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)_trackMouse:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (struct _NSRect)_resizeViewsForOffset:(int)fp8 coordinate:(float)fp12;

@end

@interface _NSSplitViewIVars : NSObject
{
    struct {
        unsigned int _isVertical:1;
        unsigned int _isGrabber:1;
        unsigned int _canBeOpaque:1;
        unsigned int _reserved:29;
    } spFlags;
    id _delegate;
}

@end

@interface NSSplitViewSplitter : NSAccessibilityMockUIElement
{
    int _index;
}

+ (id)splitterWithIndex:(int)fp8 parent:(id)fp12;
- (id)initWithIndex:(int)fp8 parent:(id)fp12;
- (BOOL)isEqual:(id)fp8;
- (int)index;

@end

@interface NSSplitView (NSSplitViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySplittersAttribute;
- (BOOL)accessibilityIsSplittersAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)_accessibilitySplitterRects;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSSplitViewSplitter (NSSplitViewSplitterAccessibility)
- (id)accessibilityAttributeNames;
- (float)_accessibilitySplitterMinCoordinate;
- (float)_accessibilityPreviousSplitterMaxCoordinate;
- (float)_accessibilityNextSplitterMinCoordinate;
- (float)_accessibilityMinValueWithoutCollapsing;
- (float)_accessibilityMinValue;
- (float)_accessibilityMaxValue;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityPreviousContentsAttribute;
- (BOOL)accessibilityIsPreviousContentsAttributeSettable;
- (id)accessibilityNextContentsAttribute;
- (BOOL)accessibilityIsNextContentsAttributeSettable;
@end

@interface NSStatusBar : NSObject
{
    NSMutableArray *_actions;
    long _fReserved1;
    long _fReserved2;
    long _fReserved3;
}

+ (id)systemStatusBar;
- (void)dealloc;
- (void)finalize;
- (id)statusItemWithLength:(float)fp8;
- (void)removeStatusItem:(id)fp8;
- (BOOL)isVertical;
- (float)thickness;

@end

@interface NSStatusBarAction : NSObject
{
    int _action;
    NSStatusItem *_item;
    int _priority;
    float _length;
}

- (void)dealloc;
- (id)initInsertActionWithItem:(id)fp8 withPriority:(int)fp12;
- (id)initRemoveActionWithItem:(id)fp8;
- (id)initSetLengthActionWithItem:(id)fp8 withLength:(float)fp12;
- (BOOL)replaceSetLengthActionForItem:(id)fp8 withLength:(float)fp12;
- (void)doActionForStatusBar:(id)fp8;

@end

@interface NSStatusBar (NSStatusBar_Appearance)
- (id)_createStatusItemWindow;
- (id)_createStatusItemControlInWindow:(id)fp8;
- (int)_placement;
- (int)_direction;
- (struct _NSSize)_initialOffset;
- (float)_lengthForSize:(struct _NSSize)fp8;
- (void)drawBackgroundInRect:(struct _NSRect *)fp8 inView:(id)fp12 highlight:(BOOL)fp16;
@end

@interface NSStatusBar (NSStatusBar_Private)
- (id)_init;
- (id)_name;
- (id)_lockName;
- (id)_statusItemWithLength:(float)fp8 withPriority:(int)fp12;
- (void)_insertStatusItem:(id)fp8 withPriority:(int)fp12;
- (void)_removeStatusItem:(id)fp8;
- (void)_setLengthOfStatusItem:(id)fp8 to:(float)fp12;
- (void)_refreshWindows;
- (void)_setUpdatesDisabled:(BOOL)fp8;
- (BOOL)_updatesDisabled;
@end

@interface NSStatusBarButton : NSButton
{
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8 inStatusBar:(id)fp24;
- (id)statusMenu;
- (void)setStatusMenu:(id)fp8;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;

@end

@interface NSStatusBarButtonCell : NSButtonCell
{
    NSStatusBar *_fStatusBar;
    NSMenu *_fStatusMenu;
    BOOL _fHighlightMode;
    BOOL _fDoubleClick;
    SEL _fDoubleAction;
}

+ (void)popupStatusBarMenu:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 withEvent:(id)fp32;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setStatusBar:(id)fp8;
- (id)statusMenu;
- (void)setStatusMenu:(id)fp8;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)isOpaque;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_fillBackground:(struct _NSRect)fp8 withAlternateColor:(BOOL)fp24;
- (id)_textHighlightColor;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)_sendActionFrom:(id)fp8;

@end

@interface NSStatusBar (NSStatusBarCGS)
- (void)_CGSinsertWindow:(id)fp8 withPriority:(int)fp12;
- (void)_CGSremoveWindow:(id)fp8;
- (void)_CGSadjustWindows;
@end

@interface NSStatusBarWindow : NSWindow
{
}

- (id)initWithContentRect:(struct _NSRect)fp8;
- (BOOL)_showToolTip;
- (void)_setWindowTag;
- (void)setFrame:(struct _NSRect)fp8 display:(BOOL)fp24;
- (void *)windowRef;
- (BOOL)worksWhenModal;
- (BOOL)canHide;
- (void)_automateLiveResize;

@end

@interface NSStatusItem : NSObject
{
    NSStatusBar *_fStatusBar;
    float _fLength;
    NSWindow *_fWindow;
    NSView *_fView;
    int _fPriority;
    struct {
        unsigned int customView:1;
        unsigned int highlightMode:1;
        unsigned int hasAlternateImage:1;
        unsigned int reserved:29;
    } _fFlags;
    long _fReserved1;
    long _fReserved2;
    long _fReserved3;
    long _fReserved4;
}

- (void)dealloc;
- (void)finalize;
- (id)statusBar;
- (float)length;
- (void)setLength:(float)fp8;

@end

@interface NSStatusItem (NSStatusItem_Private)
+ (id)_itemInStatusBar:(id)fp8 withLength:(float)fp12 withPriority:(int)fp16;
- (id)_initInStatusBar:(id)fp8 withLength:(float)fp12 withPriority:(int)fp16;
- (id)_window;
- (id)_button;
- (void)_adjustLength;
@end

@interface NSStatusItem (NSStatusItemView)
- (id)view;
- (void)setView:(id)fp8;
@end

@interface NSStatusItem (NSStatusItemCommon)
- (SEL)action;
- (void)setAction:(SEL)fp8;
- (SEL)doubleAction;
- (void)setDoubleAction:(SEL)fp8;
- (id)target;
- (void)setTarget:(id)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)fp8;
- (id)image;
- (void)setImage:(id)fp8;
- (id)alternateImage;
- (void)setAlternateImage:(id)fp8;
- (id)menu;
- (void)setMenu:(id)fp8;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;
- (id)toolTip;
- (void)setToolTip:(id)fp8;
- (BOOL)highlightMode;
- (void)setHighlightMode:(BOOL)fp8;
- (void)sendActionOn:(int)fp8;
- (void)popUpStatusItemMenu:(id)fp8;
- (void)drawStatusBarBackgroundInRect:(struct _NSRect)fp8 withHighlight:(BOOL)fp24;
@end

@interface NSStepper : NSControl
{
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (double)increment;
- (void)setIncrement:(double)fp8;
- (BOOL)valueWraps;
- (void)setValueWraps:(BOOL)fp8;
- (BOOL)autorepeat;
- (void)setAutorepeat:(BOOL)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSStepperCell : NSActionCell
{
    double _value;
    double _minValue;
    double _maxValue;
    double _increment;
    struct {
        unsigned int valueWraps:1;
        unsigned int autorepeat:1;
        unsigned int drawing:1;
        unsigned int reserved:29;
    } _stFlags;
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (double)increment;
- (void)setIncrement:(double)fp8;
- (BOOL)valueWraps;
- (void)setValueWraps:(BOOL)fp8;
- (BOOL)autorepeat;
- (void)setAutorepeat:(BOOL)fp8;
- (id)stringValue;
- (void)setStringValue:(id)fp8;
- (id)objectValue;
- (void)setObjectValue:(id)fp8;
- (int)intValue;
- (void)setIntValue:(int)fp8;
- (float)floatValue;
- (void)setFloatValue:(float)fp8;
- (double)doubleValue;
- (void)setDoubleValue:(double)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)getPeriodicDelay:(float *)fp8 interval:(float *)fp12;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)_sendActionFrom:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSStepperCell (NSStepperCellPrivate)
- (void)_doSingleStep:(BOOL)fp8 inView:(id)fp12;
@end

@interface NSStepperCell (NSStepperCellLocal)
- (void)_stepInUpDirection:(BOOL)fp8;
@end

@interface NSAccessibilityStepperArrowButton : NSAccessibilityMockUIElement
{
    BOOL _increments;
}

+ (id)incrementButtonWithParent:(id)fp8;
+ (id)decrementButtonWithParent:(id)fp8;
- (id)initWithIncrements:(BOOL)fp8 parent:(id)fp12;
- (BOOL)increments;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSStepperCell (NSStepperCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityIncrementButtonAttribute;
- (BOOL)accessibilityIsIncrementButtonAttributeSettable;
- (id)accessibilityDecrementButtonAttribute;
- (BOOL)accessibilityIsDecrementButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSRect)_accessibilityArrowScreenRect:(BOOL)fp8;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSStopTouchingMeBox : NSBox
{
    NSView *sibling1;
    NSView *sibling2;
    float offset;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)setSibling1:(id)fp8;
- (void)setSibling2:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setOffset:(float)fp8;
- (void)tile;

@end

@interface NSStorage : NSObject
{
    id _storage;
    int _hintCapacity;
    unsigned int _reserved[4];
}

+ (void)initialize;
- (id)initWithElementSize:(unsigned int)fp8 capacity:(unsigned int)fp12;
- (id)init;
- (void)dealloc;
- (unsigned int)count;
- (unsigned int)capacity;
- (void)setHintCapacity:(unsigned int)fp8;
- (unsigned int)hintCapacity;
- (unsigned int)elementSize;
- (void *)elementAtIndex:(unsigned int)fp8;
- (void)insertElements:(void *)fp8 count:(unsigned int)fp12 atIndex:(unsigned int)fp16;
- (void)removeElementAtIndex:(unsigned int)fp8;
- (void)replaceElementAtIndex:(unsigned int)fp8 withElement:(void *)fp12;
- (void)removeElementsInRange:(struct _NSRange)fp8;
- (void *)pointerToElement:(unsigned int)fp8 directlyAccessibleElements:(struct _NSRange *)fp12;
- (void)insertElement:(void *)fp8 atIndex:(unsigned int)fp12;
- (void)addElement:(void *)fp8;
- (id)description;

@end

@interface NSStringDrawingContext : NSObject
{
    NSMutableArray *_attributedStringArray;
    NSMutableArray *_rectArray;
    NSDictionary *_defaultAttributes;
}

- (id)init;
- (id)initWithDefaultAttributes:(id)fp8;
- (id)defaultAttributes;
- (void)dealloc;
- (void)addString:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)addString:(id)fp8 attributes:(id)fp12 inRect:(struct _NSRect)fp16;
- (void)addAttributedString:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)draw;
- (void)clear;

@end

@interface _NSCachedAttributedString : NSMutableAttributedString
{
    id _contents;
    NSAttributeDictionary *_baseAttributes;
    int _length;
    unsigned int _hashValue;
    struct {
        NSAttributeDictionary *;
        int;
    } *_runs;
    int _numRuns;
    int _allocedRunsSize;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (void)release;
- (id)initWithAttributedString:(id)fp8;
- (id)initWithString:(id)fp8 attributes:(id)fp12;
- (id)initWithString:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (unsigned int)length;
- (id)string;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (id)attributesAtIndex:(unsigned int)fp8 longestEffectiveRange:(struct _NSRange *)fp12 inRange:(struct _NSRange)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (BOOL)_isStringDrawingTextStorage;
- (BOOL)_baselineMode;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (void)cache;
- (id)copyCachedInstance;

@end

@interface NSAttributedString (NSExtendedStringDrawing)
- (void)drawWithRect:(struct _NSRect)fp8 options:(int)fp24;
- (struct _NSRect)boundingRectWithSize:(struct _NSSize)fp8 options:(int)fp16;
@end

@interface NSString (NSExtendedStringDrawing)
- (void)drawWithRect:(struct _NSRect)fp8 options:(int)fp24 attributes:(id)fp28;
- (struct _NSRect)boundingRectWithSize:(struct _NSSize)fp8 options:(int)fp16 attributes:(id)fp20;
@end

@interface NSAttributedString (NSStringDrawingExtension)
- (struct _NSSize)_sizeWithSize:(struct _NSSize)fp8;
- (struct _NSRect)_drawCenteredVerticallyInRect:(struct _NSRect)fp8;
- (struct _NSRect)_drawCenteredVerticallyInRect:(struct _NSRect)fp8 scrollable:(BOOL)fp24;
@end

@interface NSAttributedString (NSStringDrawing)
- (void)drawAtPoint:(struct _NSPoint)fp8;
- (void)drawInRect:(struct _NSRect)fp8;
- (struct _NSSize)size;
@end

@interface NSString (NSStringDrawingExtension)
- (struct _NSSize)_sizeWithSize:(struct _NSSize)fp8 attributes:(id)fp16;
@end

@interface NSString (NSStringDrawing)
+ (BOOL)usesFontLeading;
+ (void)setUsesFontLeading:(BOOL)fp8;
+ (BOOL)usesScreenFonts;
+ (void)setUsesScreenFonts:(BOOL)fp8;
+ (void)setShowsInvisibleCharacters:(BOOL)fp8;
+ (BOOL)showsInvisibleCharacters;
+ (void)setShowsControlCharacters:(BOOL)fp8;
+ (BOOL)showsControlCharacters;
+ (void)setHyphenationFactor:(float)fp8;
+ (float)hyphenationFactor;
+ (void)setDefaultAttachmentScaling:(int)fp8;
+ (int)defaultAttachmentScaling;
+ (int)typesetterBehavior;
+ (void)setTypesetterBehavior:(int)fp8;
+ (float)defaultLineHeightForFont:(id)fp8;
+ (float)defaultBaselineOffsetForFont:(id)fp8;
- (void)drawAtPoint:(struct _NSPoint)fp8 withAttributes:(id)fp16;
- (void)drawInRect:(struct _NSRect)fp8 withAttributes:(id)fp24;
- (struct _NSSize)sizeWithAttributes:(id)fp8;
@end

@interface NSStringDrawingTextStorage : NSTextStorage
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    NSLayoutManager *_layoutManager;
    NSTextContainer *_textContainer;
    NSFlippableView *_flippedView;
    id _preliminaryCache;
    id _cache;
    NSTextContainer *_firstTextContainer;
    NSTextContainer *_secondTextContainer;
    struct _NSRange _currentCharacterRange;
    struct _NSRange _currentGlyphRange;
    struct _NSRange _temporaryCharacterRange;
    unsigned int _retainCount;
    float _baselineDelta;
    struct {
        unsigned int _typesetterBehavior:4;
        unsigned int _needToFlushCache:1;
        unsigned int _baselineMode:1;
        unsigned int _reserved:26;
    } _sdflags;
}

+ (void)initialize;
+ (id)stringDrawingTextStorage;
+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (BOOL)_fastDrawString:(id)fp8 attributes:(id)fp12 length:(long)fp16 inRect:(struct _NSRect)fp20 graphicsContext:(id)fp36 baselineRendering:(BOOL)fp40 usesFontLeading:(BOOL)fp44 usesScreenFont:(BOOL)fp48 typesetterBehavior:(int)fp52 paragraphStyle:(id)fp56 lineBreakMode:(int)fp60 boundingRect:(struct _NSRect *)fp64 padding:(float)fp68 scrollable:(_Bool)fp72;
+ (void)_setHasCustomSettings:(BOOL)fp8;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (void)dealloc;
- (void)finalize;
- (BOOL)_informationForFont:(id)fp8 glyphTable:(unsigned short **)fp12 positionTable:(float **)fp16;
- (BOOL)_fastDrawGlyphs:(unsigned short *)fp8 advances:(struct CGSize *)fp12 length:(unsigned int)fp16 font:(id)fp20 color:(id)fp24 containerSize:(struct _NSSize)fp28 usedRect:(struct _NSRect)fp36 startingLocation:(struct _NSPoint)fp52 inRect:(struct _NSRect)fp60 onView:(id)fp76 context:(id)fp80 pinToTop:(BOOL)fp84;
- (BOOL)fastDrawString:(id)fp8 attributes:(id)fp12 containerSize:(struct _NSSize)fp16 padding:(float)fp24 inRect:(struct _NSRect)fp28 onView:(id)fp44 pinToTop:(BOOL)fp48 sizeOnly:(BOOL)fp52 size:(struct _NSSize *)fp56;
- (BOOL)fastDrawAttributedString:(id)fp8 containerSize:(struct _NSSize)fp12 padding:(float)fp20 inRect:(struct _NSRect)fp24 onView:(id)fp40 pinToTop:(BOOL)fp44 sizeOnly:(BOOL)fp48 size:(struct _NSSize *)fp52;
- (id)layoutManager;
- (id)textContainer;
- (id)flippedView;
- (int)typesetterBehavior;
- (struct _NSRect)usedRectForTextContainer:(id)fp8;
- (void)_setBaselineDelta:(float)fp8;
- (float)_baselineDelta;
- (void)_setBaselineMode:(BOOL)fp8;
- (BOOL)_baselineMode;
- (void)drawTextContainer:(id)fp8 withRect:(struct _NSRect)fp12 graphicsContext:(id)fp28 baselineMode:(BOOL)fp32 scrollable:(BOOL)fp36 padding:(float)fp40;
- (void)drawTextContainer:(id)fp8 inRect:(struct _NSRect)fp12 onView:(id)fp28 pinToTop:(BOOL)fp32;
- (void)drawInRect:(struct _NSRect)fp8 onView:(id)fp24 pinToTop:(BOOL)fp28;
- (void)drawTextContainer:(id)fp8 inRect:(struct _NSRect)fp12 onView:(id)fp28;
- (void)drawInRect:(struct _NSRect)fp8 onView:(id)fp24;
- (id)textContainerForAttributedString:(id)fp8;
- (id)textContainerForAttributedString:(id)fp8 containerSize:(struct _NSSize)fp12 lineFragmentPadding:(float)fp20;
- (void)invalidate;
- (void)_fontSetChanged:(id)fp8;
- (BOOL)_isStringDrawingTextStorage;
- (id)init;
- (void)processEditing;
- (unsigned int)length;
- (id)string;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (id)attribute:(id)fp8 atIndex:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
- (id)attribute:(id)fp8 atIndex:(unsigned int)fp12 longestEffectiveRange:(struct _NSRange *)fp16 inRange:(struct _NSRange)fp20;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withAttributedString:(id)fp16;
- (void)addAttribute:(id)fp8 value:(id)fp12 range:(struct _NSRange)fp16;

@end

@interface NSCoder (NSAppKitCoderExtensions)
- (void)_encodeByte:(unsigned char)fp8;
- (unsigned char)_decodeByte;
- (void)_encodeDepth:(int)fp8;
- (int)_decodeDepth;
@end

@interface NSString (_NSWindowPrivate)
- (struct _NSRange)_rangeOfSuffixFittingWidth:(float)fp8 withAttributes:(id)fp12;
- (struct _NSRange)_rangeOfSuffixFittingWidth:(float)fp8 withFont:(id)fp12;
- (struct _NSRange)_rangeOfPrefixFittingWidth:(float)fp8 withAttributes:(id)fp12;
- (struct _NSRange)_rangeOfPrefixFittingWidth:(float)fp8 withFont:(id)fp12;
@end

@interface NSString (NSStringKitExtensions)
- (id)stringWithoutAmpersand;
@end

@interface NSString (NSStringCanonicalMethods)
- (id)canonicalString;
- (BOOL)isCanonical;
@end

@interface NSString (NSStringTextExtras)
- (unsigned int)_endOfParagraphAtIndex:(unsigned int)fp8;
- (struct _NSRange)rangeOfGraphicalSegmentAtIndex:(unsigned int)fp8;
@end

@interface NSSubTextStorage : NSTextStorage
{
    NSTextStorage *_parent;
    struct _NSRange _range;
    BOOL _releasing;
    BOOL _editing;
}

- (id)initWithTextStorage:(id)fp8 range:(struct _NSRange)fp12;
- (id)initWithString:(id)fp8;
- (id)initWithString:(id)fp8 attributes:(id)fp12;
- (id)initWithAttributedString:(id)fp8;
- (Class)classForCoder;
- (void)finalize;
- (void)release;
- (void)dealloc;
- (id)string;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (id)_subtextStorageFromRange:(struct _NSRange)fp8;
- (void)textStorage:(id)fp8 edited:(unsigned int)fp12 range:(struct _NSRange)fp16 changeInLength:(int)fp24 invalidatedRange:(struct _NSRange)fp28;
- (void)setTextStorage:(id)fp8;

@end

@interface NSTextStorage (NSPrivateScripting)
- (id)_subtextStorageFromRange:(struct _NSRange)fp8;
@end

@interface NSSurface : NSObject
{
    NSView *_view;
    NSWindow *_window;
    struct _NSRect _frame;
    void *_surfaceID;
    void *_backingStore;
    int _saveWeighting;
    NSWindowGraphicsContext *_graphicsContext;
    NSGraphicsContext *_saveContext;
    struct {
        unsigned int opaque:1;
        unsigned int orderedIn:1;
        unsigned int deferSync:1;
        unsigned int reserved:29;
    } _sFlags;
}

- (id)initWithView:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 inWindow:(id)fp24;
- (void)_createBackingStore;
- (void)_disposeBackingStore;
- (void)_createSurface;
- (void)_disposeSurface;
- (void)dealloc;
- (void)finalize;
- (void)syncToViewUnconditionally;
- (void)syncToView:(BOOL)fp8;
- (void)orderFront;
- (void)orderBack;
- (void)orderOut;
- (void)orderSurface:(int)fp8 relativeTo:(id)fp12;
- (void *)surfaceID;
- (void)setFrame:(struct _NSRect)fp8;
- (struct _NSRect)frame;
- (void)setWindow:(id)fp8;
- (void)_windowWillClose:(id)fp8;
- (void)_windowWillGoAway:(id)fp8;
- (void)_windowDidComeBack:(id)fp8;
- (void)_windowDidChangeScreens:(id)fp8;
- (id)window;
- (void)setView:(id)fp8;
- (id)view;
- (BOOL)hasBackingStore;
- (void)clearBackingStore;
- (void)setDeferSync:(BOOL)fp8;
- (BOOL)deferSync;
- (void)setOpaque:(BOOL)fp8;
- (BOOL)isOpaque;
- (BOOL)isVisible;
- (void)setSaveWeighting:(int)fp8;
- (int)saveWeighting;
- (void)lockFocus;
- (void)unlockFocus;
- (void)flush;

@end

@interface NSSystemInfoPanel : NSObject
{
    NSScrollView *creditScrollView;
    NSPanel *infoPanel;
    NSImageView *appIconView;
    NSTextField *appNameField;
    NSTextView *creditView;
    NSTextField *legalTextField;
    NSTextField *versionField;
    NSMutableDictionary *_optionsDictionary;
}

+ (id)sharedInfoPanel;
+ (void)updateOptions:(id)fp8;
+ (void)updateOptionsWithApplicationIcon:(id)fp8;
+ (void)updateOptionsWithApplicationName:(id)fp8;
+ (void)updateOptionsWithCopyright:(id)fp8;
+ (void)updateOptionsWithCredits:(id)fp8;
+ (void)updateOptionsWithMarketingVersion:(id)fp8;
+ (void)updateOptionsWithVersion:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)showInfoPanel:(id)fp8;
- (void)setOptionsDictionary:(id)fp8;
- (void)loadNib;
- (void)unloadNib:(BOOL)fp8;
- (void)updateNib;
- (id)applicationIcon;
- (id)applicationName;
- (id)backgroundImage;
- (id)copyright;
- (id)credits;
- (id)versionString;
- (void)sizeCreditsView;
- (void)windowWillClose:(id)fp8;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;

@end

@interface NSApplication (NSStandardAboutPanel)
- (void)orderFrontStandardAboutPanel:(id)fp8;
- (void)orderFrontStandardAboutPanelWithOptions:(id)fp8;
@end

@interface NSSystemStatusBar : NSStatusBar
{
}

- (id)_createStatusItemControlInWindow:(id)fp8;
- (id)_name;
- (id)_lockName;
- (int)_placement;
- (int)_direction;
- (struct _NSSize)_initialOffset;
- (float)thickness;
- (void)drawBackgroundInRect:(struct _NSRect *)fp8 inView:(id)fp12 highlight:(BOOL)fp16;
- (float)_lengthForSize:(struct _NSSize)fp8;

@end

@interface NSTableColumn : NSObject <NSCoding>
{
    id _identifier;
    float _width;
    float _minWidth;
    float _maxWidth;
    NSTableView *_tableView;
    NSCell *_headerCell;
    NSCell *_dataCell;
    struct __colFlags _cFlags;
    id _tcAuxiliaryStorage;
}

+ (void)initialize;
- (void)_disableResizedPosting;
- (void)_enableResizedPosting;
- (void)_postColumnDidResizeNotificationWithOldWidth:(int)fp8;
- (id)initWithIdentifier:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_old_encodeWithCoder_NSTableColumn:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSTableColumn:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_setReorderResizeImageCache:(id)fp8;
- (id)_reorderResizeImageCache;
- (void)_setCanUseReorderResizeImageCache:(BOOL)fp8;
- (BOOL)_canUseReorderResizeImageCache;
- (void)setTableView:(id)fp8;
- (id)tableView;
- (void)setSortDescriptorPrototype:(id)fp8;
- (id)sortDescriptorPrototype;
- (void)setIdentifier:(id)fp8;
- (id)identifier;
- (void)setWidth:(float)fp8;
- (float)width;
- (void)setMinWidth:(float)fp8;
- (float)minWidth;
- (void)setMaxWidth:(float)fp8;
- (float)maxWidth;
- (void)setHeaderCell:(id)fp8;
- (id)headerCell;
- (void)_updateHeaderCellControlView;
- (void)_updateDataCellControlView;
- (void)setDataCell:(id)fp8;
- (id)dataCell;
- (id)dataCellForRow:(int)fp8;
- (void)setResizingMask:(unsigned int)fp8;
- (unsigned int)resizingMask;
- (void)setResizable:(BOOL)fp8;
- (BOOL)isResizable;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isEditable;
- (void)sizeToFit;
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;

@end

@interface _NSTableColumnAuxiliary : NSObject
{
    NSSortDescriptor *_sortDescriptorPrototype;
    _NSBindingAdaptor *_bindingAdaptor;
}

@end

@interface NSTableColumn (NSTableColumnAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)_accessibilityRowsInRange:(struct _NSRange)fp8;
- (id)accessibilityRowsAttribute;
- (BOOL)accessibilityIsRowsAttributeSettable;
- (id)accessibilityVisibleRowsAttribute;
- (BOOL)accessibilityIsVisibleRowsAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)fp8;
- (id)accessibilitySelectedAttribute;
- (BOOL)_canDeselect:(int)fp8;
- (BOOL)accessibilityIsSelectedAttributeSettable;
- (void)accessibilitySetSelectedAttribute:(id)fp8;
- (id)accessibilityHeaderAttribute;
- (BOOL)accessibilityIsHeaderAttributeSettable;
- (id)accessibilityIndexAttribute;
- (BOOL)accessibilityIsIndexAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (unsigned int)accessibilityArrayAttributeCount:(id)fp8;
- (id)accessibilityArrayAttributeValues:(id)fp8 index:(unsigned int)fp12 maxCount:(unsigned int)fp16;
@end

@interface NSTableHeaderCell : NSTextFieldCell
{
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_drawContents:(struct _NSRect)fp8 faceColor:(id)fp24 textColor:(id)fp28 inView:(id)fp32;
- (int)_realControlTintForView:(id)fp8;
- (BOOL)_shouldDrawRightSeparatorInView:(id)fp8;
- (void)_drawThemeContents:(struct _NSRect)fp8 highlighted:(BOOL)fp24 inView:(id)fp28;
- (BOOL)isOpaque;
- (void)_adjustFontSize;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)_drawSortIndicatorIfNecessaryWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawSortIndicatorWithFrame:(struct _NSRect)fp8 inView:(id)fp24 ascending:(BOOL)fp28 priority:(int)fp32;
- (struct _NSRect)sortIndicatorRectForBounds:(struct _NSRect)fp8;
- (void)_setSortable:(BOOL)fp8 showSortIndicator:(BOOL)fp12 ascending:(BOOL)fp16 priority:(int)fp20 highlightForSort:(BOOL)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (id)_convertToText:(id)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)_setIndicatorImage:(id)fp8;
- (id)_indicatorImage;

@end

@interface NSTableHeaderView : NSView
{
    NSTableView *_tableView;
    int _resizedColumn;
    int _draggedColumn;
    int _pressedColumn;
    NSImage *_headerDragImage;
    float _draggedDistance;
    BOOL _isColumnResizing;
    BOOL _showHandCursorFired;
    BOOL _reserved3;
    BOOL _reserved4;
    BOOL _skipDrawingSeparator;
    id _reserved;
}

+ (void)initialize;
- (struct _NSSize)_headerCellSizeOfColumn:(int)fp8;
- (struct _NSRect)_headerCellRectOfColumn:(int)fp8;
- (struct _NSSize)_headerSizeOfColumn:(int)fp8;
- (struct _NSRect)headerRectOfColumn:(int)fp8;
- (int)columnAtPoint:(struct _NSPoint)fp8;
- (void)_drawHeaderCell:(id)fp8 withFrame:(struct _NSRect)fp12 withStateFromColumn:(int)fp28;
- (void)_setOverflowHeaderCellPrototype:(id)fp8;
- (id)_overflowHeaderCellPrototype;
- (void)_tableView:(id)fp8 willAddTableColumn:(id)fp12;
- (void)_tableView:(id)fp8 willRemoveTableColumn:(id)fp12;
- (void)_drawHeaderFillerInRect:(struct _NSRect)fp8 matchLastState:(BOOL)fp24;
- (void)_drawHeaderOfColumn:(int)fp8;
- (void)_drawOverflowHeaderInRect:(struct _NSRect)fp8;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct _NSRect)fp8;
- (BOOL)_needsLiveResizeCacheInSyncWithSiblingView;
- (void)_invalidateLiveResizeCachedImage;
- (void)_drawRect:(struct _NSRect)fp8 liveResizeFill:(struct _NSRect)fp24:(struct _NSRect)fp40:(struct _NSRect)fp56:(struct _NSRect)fp72 cacheCoveredArea:(struct _NSRect)fp88;
- (struct _NSRect)_rowHeaderFixedContentRect;
- (struct _NSRect)_rowHeaderScrollableContentVisibleRect;
- (BOOL)_hasRowHeaderColumn;
- (id)_rectsForMultiClippedContentDrawing;
- (BOOL)_drawingEndSeparator;
- (void)_drawColumnHeaderRange:(struct _NSRange)fp8;
- (void)_doModifySelectionWithEvent:(id)fp8 onColumn:(int)fp12;
- (void)_showOpenHandCursor:(id)fp8;
- (void)_cancelDelayedShowOpenHandCursor;
- (void)_unshowOpenHandCursor:(id)fp8;
- (void)_scheduleDelayedShowOpenHandCursorIfNecessary;
- (BOOL)_trackAndModifySelectionWithEvent:(id)fp8 onColumn:(int)fp12 stopOnReorderGesture:(char *)fp16;
- (struct _NSRect)_unobstructedVisibleHeaderRectOfColumn:(int)fp8;
- (void)_beginDraggingColumn:(int)fp8;
- (void)_endDragging;
- (id)_lastDraggedEventFollowing:(id)fp8;
- (id)_lastDraggedOrUpEventFollowing:(id)fp8 canceled:(char *)fp12;
- (id)_resizeCursorForTableColumn:(id)fp8;
- (void)_reorderColumn:(int)fp8 withEvent:(id)fp12;
- (void)_resizeColumn:(int)fp8 withEvent:(id)fp12;
- (void)dealloc;
- (void)_old_encodeWithCoder_NSTableHeaderView:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSTableHeaderView:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)_invalidateOrComputeNewCursorRectsIfNecessary;
- (struct _NSRect)_unobstructedPortionOfRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (void)mouseDown:(id)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (struct _NSRect)_cursorRectForColumn:(int)fp8;
- (void)resetCursorRects;
- (BOOL)_shouldHaveResizeCursorAtPoint:(struct _NSPoint)fp8;
- (void)_windowChangedKeyState;
- (void)setTableView:(id)fp8;
- (id)tableView;
- (int)resizedColumn;
- (int)draggedColumn;
- (float)draggedDistance;

@end

@interface NSTableHeaderView (NSTableHeaderViewRowHeaderSupport)
- (struct _NSRect)_rowHeaderFixedContentRect;
- (struct _NSRect)_rowHeaderScrollableContentVisibleRect;
- (BOOL)_hasRowHeaderColumn;
- (id)_rectsForMultiClippedContentDrawing;
@end

@interface NSTableHeaderView (NSTableHeaderViewAccessibility)
- (id)accessibilityChildForColumn:(id)fp8;
- (unsigned int)accessibilityColumnForChild:(id)fp8;
- (id)accessibilityRoleAttribute;
- (id)accessibilityParentAttribute;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSTableRow : NSObject
{
    NSTableView *_tableView;
    int _row;
}

+ (id)tableRow:(int)fp8 ofTableView:(id)fp12;
- (id)initWithRow:(int)fp8 ofTableView:(id)fp12;
- (void)dealloc;
- (BOOL)isEqual:(id)fp8;
- (int)row;

@end

@interface NSTableRow (NSTableRowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)_accessibilityChildrenInRange:(struct _NSRange)fp8;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilitySelectedAttribute;
- (BOOL)_canDeselect;
- (BOOL)accessibilityIsSelectedAttributeSettable;
- (void)accessibilitySetSelectedAttribute:(id)fp8;
- (id)accessibilityIndexAttribute;
- (BOOL)accessibilityIsIndexAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (unsigned int)accessibilityIndexOfChild:(id)fp8;
- (unsigned int)accessibilityArrayAttributeCount:(id)fp8;
- (id)accessibilityArrayAttributeValues:(id)fp8 index:(unsigned int)fp12 maxCount:(unsigned int)fp16;
@end

@interface NSTableView : NSControl <NSUserInterfaceValidations>
{
    NSTableHeaderView *_headerView;
    NSView *_cornerView;
    NSMutableArray *_tableColumns;
    NSCell *_editingCell;
    id _delegate;
    id _dataSource;
    struct _NSSize _intercellSpacing;
    float _rowHeight;
    int _lastSelectedColumn;
    int _lastSelectedRow;
    int _editingRow;
    int _editingColumn;
    NSMutableIndexSet *_selectedColumns;
    NSMutableIndexSet *_selectedRows;
    NSImage *_bodyDragImage;
    NSColor *_backgroundColor;
    NSColor *_gridColor;
    float _dragYPos;
    id _target;
    SEL _action;
    SEL _doubleAction;
    struct _NSRect _rectOfLastColumn;
    int _lastCachedRectColumn;
    struct _NSRect _rectOfLastRow;
    int _lastCachedRectRow;
    struct __TvFlags _tvFlags;
    id _reserved;
}

+ (void)initialize;
+ (int)defaultFocusRingType;
+ (id)_defaultTableHeaderSortImage;
+ (id)_defaultTableHeaderReverseSortImage;
+ (Class)_dynamicToolTipManagerClass;
- (BOOL)_supportsVariableHeightRows;
- (void)_releaseRowHeightStorageIfNecessary;
- (id)_rowHeightStorage:(BOOL)fp8;
- (int)_rowHeightStorageComputeRowAtPoint:(struct _NSPoint)fp8 cacheHint:(BOOL)fp16;
- (struct _NSRect)_rowHeightStorageComputeRectOfRow:(int)fp8 cacheHint:(BOOL)fp12;
- (void)_rowHeightStorageBeginLayoutChange;
- (void)_rowHeightStorageEndLayoutChange;
- (void)_rowHeightStorageInvalidateCacheAndStorage;
- (void)noteHeightOfRowsWithIndexesChanged:(id)fp8;
- (void)_rowHeightStorageUpdateForInsertedRows:(int)fp8 atIndex:(int)fp12;
- (void)_rowHeightStorageUpdateForDeletedRows:(int)fp8 atIndex:(int)fp12;
- (float)_sendDelegateHeightOfRow:(int)fp8;
- (float)_uncachedRectHeightOfRow:(int)fp8;
- (void)__ivar_setTrackingCell:(id)fp8;
- (void)__ivar_setClickedRow:(int)fp8 clickedColumn:(int)fp12;
- (id)__ivar_getTrackingCell;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (int)_betweenDropFeedbackStyle;
- (int)_betweenDropGapSize;
- (BOOL)_isGapStyleDropTargetForRow:(int)fp8 operation:(int)fp12 mask:(int)fp16;
- (BOOL)_isCurrentlyGapStyleDropTarget;
- (void)_growFrameForDropGapStyle;
- (void)_growFrameForDropGapStyleIfNecessary;
- (void)_ungrowFrameForDropGapStyle;
- (float)_widthOfColumn:(int)fp8;
- (struct _NSRect)rectOfColumn:(int)fp8;
- (struct _NSRect)rectOfRow:(int)fp8;
- (float)_fillerRectHeight;
- (struct _NSRect)_rectOfRowAssumingRowExists:(int)fp8;
- (float)_locationOfColumn:(int)fp8;
- (float)_locationOfRow:(int)fp8;
- (float)_totalHeightOfTableView;
- (struct _NSRect)_rectOfRowRange:(struct _NSRange)fp8;
- (struct _NSRect)_rectOfColumnRange:(struct _NSRange)fp8;
- (int)_columnAtLocation:(float)fp8;
- (int)columnAtPoint:(struct _NSPoint)fp8;
- (int)_columnClosestToColumn:(int)fp8 whenMoved:(float)fp12;
- (struct _NSRange)columnsInRect:(struct _NSRect)fp8;
- (int)rowAtPoint:(struct _NSPoint)fp8;
- (struct _NSRange)rowsInRect:(struct _NSRect)fp8;
- (void)_setNeedsDisplayInColumn:(int)fp8 row:(int)fp12;
- (int)_compareWidthWithSuperview;
- (BOOL)_fillsClipViewWidth;
- (BOOL)_fillsClipViewHeight;
- (int)_rightmostAutoresizingColumn;
- (void)_moveAndResizeEditedCellWithOldFrame:(struct _NSRect)fp8;
- (void)_verifySelectionIsOK;
- (void)_tileAndRedisplayAll;
- (void)tile;
- (void)_setNumberOfRowsCacheIsValid:(BOOL)fp8;
- (void)_invalidateNumberOfRowsCache;
- (void)_finishedMakingConnections;
- (void)viewDidMoveToWindow;
- (void)reloadData;
- (void)noteNumberOfRowsChanged;
- (struct _NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (void)_sizeToFitText;
- (BOOL)_userCanChangeSelection;
- (BOOL)_sendDelegateCanSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)_sendDelegateCanSelectColumn:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)_userCanSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)_userCanSelectColumn:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)_userSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)_userSelectColumn:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)_userDeselectRow:(int)fp8;
- (void)_userDeselectColumn:(int)fp8;
- (void)_userSelectIndexesInRange:(struct _NSRange)fp8 toIndex:(int)fp16 byExtendingSelection:(BOOL)fp20 indexType:(int)fp24;
- (void)_userSelectRowRange:(struct _NSRange)fp8 toRow:(int)fp16 byExtendingSelection:(BOOL)fp20;
- (void)_userSelectColumnRange:(struct _NSRange)fp8 toColumn:(int)fp16 byExtendingSelection:(BOOL)fp20;
- (void)_revertToOldRowSelection:(id)fp8 fromRow:(int)fp12 toRow:(int)fp16;
- (void)_userChangeSelection:(id)fp8 fromAnchorRow:(int)fp12 toRow:(int)fp16 lastExtensionRow:(int)fp20 selecting:(BOOL)fp24;
- (BOOL)_userCanEditTableColumn:(id)fp8 row:(int)fp12;
- (BOOL)_userCanSelectAndEditTableColumn:(id)fp8 row:(int)fp12;
- (void)_userSelectTextOfNextCellInSameColumn;
- (void)_userSelectTextOfNextCell;
- (void)_userSelectTextOfPreviousCell;
- (id)_dataSourceValueForColumn:(id)fp8 row:(int)fp12;
- (void)_dataSourceSetValue:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (void)_delegateWillDisplayCell:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (BOOL)_delegateRespondsToGetToolTip;
- (id)_sendDelegateToolTipForCell:(id)fp8 tableColumn:(id)fp12 rect:(struct _NSRect *)fp16 row:(int)fp20 mouseLocation:(struct _NSPoint)fp24;
- (void)_sendDelegateWillDisplayCell:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (BOOL)_highlightColorDependsOnWindowState;
- (BOOL)_shouldUseSecondaryHighlightColor;
- (id)_highlightColorForCell:(id)fp8;
- (void)_debugDrawRowNumberInCell:(id)fp8 withFrame:(struct _NSRect)fp12 forRow:(int)fp28;
- (void)_debugDrawRowNumberForRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (void)_drawContentsAtRow:(int)fp8 column:(int)fp12 clipRect:(struct _NSRect)fp16;
- (void)drawRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (void)drawRowIndexes:(id)fp8 clipRect:(struct _NSRect)fp12;
- (void)drawRowsInRange:(struct _NSRange)fp8 clipRect:(struct _NSRect)fp16;
- (void)_highlightRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (void)_highlightColumn:(int)fp8 clipRect:(struct _NSRect)fp12;
- (void)highlightSelectionInClipRect:(struct _NSRect)fp8;
- (struct _NSRange)_rowsInRectAssumingRowsCoverVisible:(struct _NSRect)fp8;
- (void)drawGridInClipRect:(struct _NSRect)fp8;
- (void)_setNeedsDisplayInRow:(int)fp8;
- (void)_setNeedsDisplayInColumn:(int)fp8 includeHeader:(BOOL)fp12;
- (void)_setNeedsDisplayInColumnRange:(struct _NSRange)fp8 includeHeader:(BOOL)fp16;
- (void)_setNeedsDisplayForSortingChangeInColumn:(int)fp8;
- (void)_setNeedsDisplayForColumn:(int)fp8 draggedDelta:(float)fp12;
- (float)_draggedColumnImageInset;
- (void)_beginDraggingColumn:(int)fp8;
- (void)_endDragging;
- (void)dealloc;
- (void)finalize;
- (void)_old_encodeWithCoder_NSTableView:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSTableView:(id)fp8;
- (void)_finishedTableViewInitWithCoder;
- (id)initWithCoder:(id)fp8;
- (id)_setSuperview:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (struct _NSRect)_unobstructedPortionOfRect:(struct _NSRect)fp8;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_needsLiveResizeCacheInSyncWithSiblingView;
- (struct _NSRect)_liveResizeCacheableBounds;
- (void)_invalidateLiveResizeCachedImage;
- (BOOL)_autoresizesLastColumnOnly;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct _NSRect)fp8;
- (BOOL)_layoutIsSameAsCachedLayoutWithFrame:(struct _NSRect)fp8;
- (void)_drawRect:(struct _NSRect)fp8 liveResizeFill:(struct _NSRect)fp24:(struct _NSRect)fp40:(struct _NSRect)fp56:(struct _NSRect)fp72 cacheCoveredArea:(struct _NSRect)fp88;
- (struct _NSRect)_rectOfDraggedColumn;
- (void)_captureReorderResizeColumnImageCaches;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_alternatingRowBackgroundColors;
- (void)_drawAlternatingRowBackgroundColors:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)drawBackgroundInClipRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_updateLastEditingAndFocusRingFrame;
- (void)editColumn:(int)fp8 row:(int)fp12 withEvent:(id)fp16 select:(BOOL)fp20;
- (void)_didSetFocusForCell:(id)fp8 withKeyboardFocusClipView:(id)fp12;
- (BOOL)_sendingTableViewRowAction;
- (BOOL)_sendAction:(SEL)fp8 to:(id)fp12 row:(int)fp16 column:(int)fp20;
- (void)_endMyEditing;
- (BOOL)_shouldDrawFocus;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)fp8;
- (void)_drawTableExteriorFocusRingIfNecessaryInClipRect:(struct _NSRect)fp8;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (void)_setFocusRingNeedsDisplayIfNecessary;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (void)_setNeedsDisplayForFirstResponderChange;
- (void)_windowChangedKeyState;
- (BOOL)abortEditing;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (BOOL)_shouldAbortMouseDownAfterDragAttempt:(id)fp8;
- (void)mouseUp:(id)fp8;
- (BOOL)_mouseDownShouldMakeFirstResponder;
- (id)_getFullyFormedCellAtColumn:(int)fp8 row:(int)fp12;
- (BOOL)_canInitiateRowDragInColumn:(int)fp8;
- (unsigned int)_hitTestCellContentAtColumn:(int)fp8 row:(int)fp12 point:(struct _NSPoint)fp16;
- (BOOL)_canDragRowForClickOnCell:(id)fp8 column:(int)fp12 row:(int)fp16 atPoint:(struct _NSPoint)fp20;
- (BOOL)canDragRowsWithIndexes:(id)fp8 atPoint:(struct _NSPoint)fp12;
- (void)mouseDown:(id)fp8;
- (int)_findFirstUserSelectableRowStartingAtRow:(int)fp8 stoppingAtRow:(int)fp12 byExtendingSelection:(BOOL)fp16;
- (void)keyDown:(id)fp8;
- (void)updateCell:(id)fp8;
- (void)updateCellInside:(id)fp8;
- (id)selectedCell;
- (void)_prepareSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_doSynchronizationOfEditedFieldForColumnWidthChange;
- (void)_sizeToFitForUserColumnResize;
- (void)_autoresizeToFit;
- (void)superviewFrameChanged:(id)fp8;
- (void)_sizeTableColumnsToFitForAutoresizingWithStyle:(int)fp8;
- (void)_sizeTableColumnsToFitForColumnResizeWithStyle:(int)fp8;
- (void)_sizeTableColumnsToFitWithStyle:(int)fp8;
- (void)sizeLastColumnToFit;
- (void)sizeToFit;
- (void)_setMinColumnLayoutMinRequiredVisibleWidth:(float)fp8;
- (float)__preLiveResizeWidthOfColumn:(id)fp8;
- (void)_sizeTableColumnsToFitWithStyle:(int)fp8 forceExactFitIfPossible:(BOOL)fp12;
- (void)__clearPreLiveColumnWidths;
- (void)__computePreLiveColumnResizeWidthsByColumn;
- (void)_logColumnWidths:(id)fp8;
- (void)_markLiveResizeColumnLayoutInfo;
- (void)_clearLiveResizeColumnLayoutInfo;
- (BOOL)textShouldEndEditing:(id)fp8;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (BOOL)textShouldBeginEditing:(id)fp8;
- (BOOL)_okToStartTextEndEditing;
- (void)textDidEndEditing:(id)fp8;
- (void)textDidBeginEditing:(id)fp8;
- (void)textDidChange:(id)fp8;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)textView:(id)fp8 completions:(id)fp12 forPartialWordRange:(struct _NSRange)fp16 indexOfSelectedItem:(int *)fp24;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setDoubleAction:(SEL)fp8;
- (SEL)doubleAction;
- (void)setRefusesFirstResponder:(BOOL)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)_checkDataSource;
- (void)setDataSource:(id)fp8;
- (id)dataSource;
- (void)setAllowsColumnReordering:(BOOL)fp8;
- (BOOL)allowsColumnReordering;
- (void)setColumnAutoresizingStyle:(int)fp8;
- (int)columnAutoresizingStyle;
- (void)setAutoresizesAllColumnsToFit:(BOOL)fp8;
- (BOOL)autoresizesAllColumnsToFit;
- (void)setAllowsColumnSelection:(BOOL)fp8;
- (BOOL)allowsColumnSelection;
- (void)setAllowsColumnResizing:(BOOL)fp8;
- (BOOL)allowsColumnResizing;
- (void)setIntercellSpacing:(struct _NSSize)fp8;
- (struct _NSSize)intercellSpacing;
- (id)tableColumns;
- (int)numberOfColumns;
- (int)numberOfRows;
- (void)addTableColumn:(id)fp8;
- (void)removeTableColumn:(id)fp8;
- (void)setRowHeight:(float)fp8;
- (float)rowHeight;
- (void)setHeaderView:(id)fp8;
- (id)headerView;
- (void)setCornerView:(id)fp8;
- (void)setUsesAlternatingRowBackgroundColors:(BOOL)fp8;
- (BOOL)usesAlternatingRowBackgroundColors;
- (id)cornerView;
- (void)setGridStyleMask:(unsigned int)fp8;
- (unsigned int)gridStyleMask;
- (void)setDrawsGrid:(BOOL)fp8;
- (BOOL)drawsGrid;
- (BOOL)_drawsHorizontalGrid;
- (BOOL)_drawsVerticalGrid;
- (id)tableColumnWithIdentifier:(id)fp8;
- (int)columnWithIdentifier:(id)fp8;
- (void)_disableMovedPosting;
- (void)_enableMovedPosting;
- (void)_postColumnDidMoveNotificationFromColumn:(int)fp8 toColumn:(int)fp12;
- (BOOL)_userCanMoveColumn:(int)fp8 toColumn:(int)fp12;
- (void)moveColumn:(int)fp8 toColumn:(int)fp12;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setGridColor:(id)fp8;
- (id)gridColor;
- (int)editedColumn;
- (int)editedRow;
- (int)clickedRow;
- (int)clickedColumn;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsEmptySelection:(BOOL)fp8;
- (BOOL)allowsEmptySelection;
- (void)_disableSelectionPosting;
- (BOOL)_enableSelectionPostingAndPost;
- (void)_postSelectionDidChangeNotification;
- (void)_markSelectionIsChanging;
- (void)_postSelectionIsChangingAndMark:(BOOL)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)_deselectAll;
- (void)_deselectAllAndEndEditingIfNecessary:(BOOL)fp8;
- (void)deselectAll:(id)fp8;
- (void)_endMyEditingAndRemainFirstResponder;
- (void)_endEditingIfNecessaryWhenSelectingColumnRange:(struct _NSRange)fp8 byExtendingSelection:(BOOL)fp16;
- (void)_endEditingIfNecessaryWhenSelectingRowRange:(struct _NSRange)fp8 byExtendingSelection:(BOOL)fp16;
- (void)_endEditingIfNecessaryWhenDeselectingColumnRange:(struct _NSRange)fp8;
- (void)_endEditingIfNecessaryWhenDeselectingRowRange:(struct _NSRange)fp8;
- (BOOL)_validIndexes:(id)fp8 indexType:(int)fp12;
- (void)_doSelectIndexes:(id)fp8 byExtendingSelection:(BOOL)fp12 indexType:(int)fp16 funnelThroughSingleIndexVersion:(BOOL)fp20;
- (void)selectColumn:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)selectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)selectColumnIndexes:(id)fp8 byExtendingSelection:(BOOL)fp12;
- (void)selectRowIndexes:(id)fp8 byExtendingSelection:(BOOL)fp12;
- (void)_deselectColumn:(int)fp8;
- (void)deselectColumn:(int)fp8;
- (void)deselectRow:(int)fp8;
- (void)_deselectRowRange:(struct _NSRange)fp8;
- (int)selectedColumn;
- (int)selectedRow;
- (BOOL)isColumnSelected:(int)fp8;
- (BOOL)isRowSelected:(int)fp8;
- (int)numberOfSelectedColumns;
- (int)numberOfSelectedRows;
- (id)selectedColumnEnumerator;
- (id)selectedRowEnumerator;
- (id)selectedRowIndexes;
- (id)selectedColumnIndexes;
- (void)scrollRowToVisible:(int)fp8;
- (void)scrollColumnToVisible:(int)fp8;
- (id)_columnWidthAutoSaveNameWithPrefix;
- (id)_sortOrderAutoSaveNameWithPrefix;
- (void)setAutosaveName:(id)fp8;
- (id)autosaveName;
- (BOOL)autosaveTableColumns;
- (void)setAutosaveTableColumns:(BOOL)fp8;
- (void)_readPersistentTableColumns;
- (void)_writePersistentTableColumns;
- (void)_setNeedsDisplayInPrimarySortColumns;
- (void)_setNeedsDisplayInPrimarySortColumnsIfNecessary;
- (BOOL)_dataSourceRespondsToSortDescriptorsDidChange;
- (void)_sendDataSourceSortDescriptorsDidChange:(id)fp8;
- (void)setSortDescriptors:(id)fp8;
- (void)_removeSortDescriptorForTableColumn:(id)fp8;
- (void)_fixupSortDescriptorPlaceholdersIfNecessary;
- (id)sortDescriptors;
- (void)_changeSortDescriptorsForClickOnColumn:(int)fp8;
- (void)setIndicatorImage:(id)fp8 inTableColumn:(id)fp12;
- (id)indicatorImageInTableColumn:(id)fp8;
- (void)_sendDelegateDidMouseDownInHeader:(int)fp8;
- (void)_sendDelegateDidClickColumn:(int)fp8;
- (void)_sendDelegateDidDragColumn:(int)fp8;
- (void)setHighlightedTableColumn:(id)fp8;
- (id)highlightedTableColumn;
- (void)_setDeselectsWhenMouseLeavesDuringDrag:(BOOL)fp8;
- (BOOL)_deselectsWhenMouseLeavesDuringDrag;
- (BOOL)_hoverAreaIsSameAsLast:(id)fp8;
- (void)_tryDrop:(id)fp8 dropRow:(int)fp12 dropOperation:(int)fp16;
- (void)_determineDropCandidateForDragInfo:(id)fp8;
- (void)_setNeedsDisplayForDropCandidateRow:(int)fp8 operation:(int)fp12 mask:(unsigned int)fp16;
- (void)_drawGapStyleDropHighlightBetweenUpperRow:(int)fp8 andLowerRow:(int)fp12 atOffset:(int)fp16 inGapRect:(struct _NSRect)fp20;
- (void)_drawDropHighlight;
- (void)_drawDropHighlightOnRow:(int)fp8;
- (void)_drawDropHighlightBetweenUpperRow:(int)fp8 andLowerRow:(int)fp12 atOffset:(float)fp16;
- (void)_drawDropHighlightOffScreenIndicatorPointingLeftAtOffset:(float)fp8;
- (void)_drawDropHighlightOffScreenIndicatorPointingUp:(BOOL)fp8 atOffset:(float)fp12;
- (BOOL)_dragCanBeginFromHorizontalMouseMotion;
- (BOOL)_dragCanBeginFromVerticalMouseMotion;
- (BOOL)_dragCanBeginFromSomeMouseMotion;
- (void)setVerticalMotionCanBeginDrag:(BOOL)fp8;
- (BOOL)verticalMotionCanBeginDrag;
- (int)_distanceInDragDirectionBeforeDragAttempt;
- (int)_distanceInNonDragDirectionBeforeAbortingDragAttempt;
- (BOOL)_dragShouldBeginFromMouseDown:(id)fp8;
- (id)_candidateDragRowIndexForClickInRow:(int)fp8;
- (BOOL)_isPoint:(struct _NSPoint)fp8 inDragZoneOfRow:(int)fp16;
- (struct _NSRange)_columnRangeForDragImage;
- (id)_dragImageForRowsWithIndexes:(id)fp8 tableColumns:(id)fp12 event:(id)fp16 offset:(struct _NSPoint *)fp20;
- (id)dragImageForRowsWithIndexes:(id)fp8 tableColumns:(id)fp12 event:(id)fp16 offset:(struct _NSPoint *)fp20;
- (id)dragImageForRows:(id)fp8 event:(id)fp12 dragImageOffset:(struct _NSPoint *)fp16;
- (void)_doImageDragUsingRowsWithIndexes:(id)fp8 event:(id)fp12 pasteboard:(id)fp16 source:(id)fp20 slideBack:(BOOL)fp24;
- (void)_doImageDragUsingRows:(id)fp8 event:(id)fp12 pasteboard:(id)fp16 source:(id)fp20 slideBack:(BOOL)fp24;
- (BOOL)_sendDataSourceWriteDragRows:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)_sendDataSourceWriteDragDataWithIndexes:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)__sendDataSourceWriteDragDataWithIndexes:(id)fp8 toPasteboard:(id)fp12;
- (void)__doImageDragUsingRowsWithIndexes:(id)fp8 event:(id)fp12 pasteboard:(id)fp16 source:(id)fp20 slideBack:(BOOL)fp24;
- (BOOL)_dataSourceRespondsToWriteDragData;
- (BOOL)_performDragFromMouseDown:(id)fp8;
- (void)setDraggingSourceOperationMask:(unsigned int)fp8 forLocal:(BOOL)fp12;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 beganAt:(struct _NSPoint)fp12;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)setDropRow:(int)fp8 dropOperation:(int)fp12;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)viewDidMoveToSuperview;
- (void)_autoscrollForDraggingInfo:(id)fp8 timeDelta:(double)fp12;
- (BOOL)_wantsRevealovers;
- (void)_setWantsRevealovers:(BOOL)fp8;
- (void)_checkWantsDynamicToolTips;

@end

@interface NSTableOverlappingColumnClipHelper : NSObject
{
    NSGraphicsContext *_graphicsContext;
    NSTableView *_tableView;
    struct _NSRect _origClipRect;
    struct _NSRect _currClipRect;
    BOOL _isClipping;
}

- (id)initWithTableView:(id)fp8 clipRect:(struct _NSRect)fp12;
- (struct _NSRect)currentClipRect;
- (void)dealloc;
- (void)clearClipping;
- (BOOL)clipForDrawingRow:(int)fp8 column:(int)fp12;

@end

@interface _NSTableViewReserved : NSObject
{
    unsigned short selectionType;
    NSIndexSet *selectionChanging;
    unsigned short selectionChangingType;
    NSCell *trackingCell;
    struct _NSRect trackingCellRect;
    NSString **notificationTable;
    NSString *autoSaveName;
    struct __TvFlags2 _tvFlags2;
    unsigned int dropCandidateOpMask;
    int dropCandidateRow;
    int dropCandidateOpType;
    NSIndexSet *draggedRowIndexes;
    int lastDropHoverRow;
    unsigned int lastDropHoverSourceMask;
    struct _NSRect lastEditingCellFrame;
    struct _NSRect lastFocusRingFrame;
    struct _NSRect lastOffscreenDropIndicatorFrame;
    int numberOfRowsCacheValue;
    NSArray *sortDescriptors;
    int mouseDownEventNumber;
    float columnLayoutMinRequiredVisibleWidth;
    NSMutableDictionary *preLiveColumnResizeWidthsByColumn;
    float preLiveColumnResizeFirstVisibleColumnInset;
    int preLiveColumnResizeFirstVisibleColumn;
    NSIndexSet *selection;
    _NSTableRowHeightStorage *rowHeightStorage;
    struct _TvFlags3 _tvFlags3;
    int draggingSourceOperationMaskForLocal;
    int draggingSourceOperationMaskForNonLocal;
}

@end

@interface _NSCornerView : NSView
{
    NSCell *_drawCell;
}

- (void)dealloc;
- (BOOL)isFlipped;
- (id)enclosingScrollView;
- (struct _NSRect)fillRect;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)_drawingEndSeparator;

@end

@interface _NSFlippedImage : NSImage
{
}

- (BOOL)isFlipped;
- (id)initWithRect:(struct _NSRect)fp8 color:(id)fp24 ofView:(id)fp28;

@end

@interface NSTableView (NSTableViewRowHeaderSupport)
- (void)_setRowHeaderTableColumn:(id)fp8 repositionTableColumnIfNecessary:(BOOL)fp12;
- (void)_setRowHeaderTableColumn:(id)fp8;
- (id)_rowHeaderTableColumn;
- (BOOL)_hasRowHeaderColumn;
- (BOOL)_isDrawingMultiClippedContentColumn:(int)fp8;
- (int)_rowHeaderColumn;
- (BOOL)_isRowHeaderColumn:(int)fp8;
- (void)_getRowHeaderFixedContentRect:(struct _NSRect *)fp8 rowHeaderScrollableContentVisibleRect:(struct _NSRect *)fp12;
- (struct _NSRect)_rowHeaderFixedContentRect;
- (struct _NSRect)_rowHeaderScrollableContentVisibleRect;
- (struct _NSRect)_unobstructedVisibleRectOfColumn:(int)fp8;
- (BOOL)_drawView:(id)fp8;
- (void)_beginDrawView:(id)fp8;
- (void)_endDrawView:(id)fp8;
- (BOOL)_cachingView;
- (void)willRemoveSubview:(id)fp8;
- (id)_rectsForMultiClippedContentDrawing;
- (void)_clipViewBoundsChanged:(id)fp8;
- (void)_registerForClipBoundsDidChangeNotificaitonIfNecessaryForSuperview:(id)fp8;
- (void)_unregisterForClipBoundsDidChangeNotificaitonIfNecessaryForSuperview:(id)fp8 force:(BOOL)fp12;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)_sizeRowHeaderToFitIfNecessary;
- (BOOL)_rowHeaderShadowSurfaceIsShowing;
- (id)_rowHeaderShadowSurface;
- (struct _NSRect)_rowHeaderShadowSurfaceBounds;
- (struct _NSRect)_surfaceBounds;
- (void)_viewWillStartLiveResize_handleRowHeaderSurfaces;
- (void)_viewDidEndLiveResize_handleRowHeaderSurfaces;
- (BOOL)_drawRowHeaderSeparatorAsSurface;
- (void)_drawRowHeaderBackgroundInRect:(struct _NSRect)fp8;
- (id)_rowHeaderSeparatorLineColor;
- (void)_drawRowHeaderSeparatorInClipRect:(struct _NSRect)fp8;
- (BOOL)_shouldHeaderShowSeparatorForColumn:(int)fp8;
@end

@interface NSCell (NSCellHitTesting)
- (unsigned int)_hitTestContentAtPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
@end

@interface NSTableView (NSTableViewAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityCurrentEditorForCell:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)_accessibilityRowsInRange:(struct _NSRange)fp8;
- (id)accessibilityRowsAttribute;
- (BOOL)accessibilityIsRowsAttributeSettable;
- (id)accessibilityVisibleRowsAttribute;
- (BOOL)accessibilityIsVisibleRowsAttributeSettable;
- (id)accessibilitySelectedRowsAttribute;
- (BOOL)accessibilityIsSelectedRowsAttributeSettable;
- (void)accessibilitySetSelectedRowsAttribute:(id)fp8;
- (id)accessibilityColumnsAttribute;
- (BOOL)accessibilityIsColumnsAttributeSettable;
- (id)accessibilityVisibleColumnsAttribute;
- (BOOL)accessibilityIsVisibleColumnsAttributeSettable;
- (id)accessibilitySelectedColumnsAttribute;
- (BOOL)accessibilityIsSelectedColumnsAttributeSettable;
- (void)accessibilitySetSelectedColumnsAttribute:(id)fp8;
- (id)accessibilityHeaderAttribute;
- (BOOL)accessibilityIsHeaderAttributeSettable;
- (unsigned int)_accessibilityNumberOfChildren;
- (id)_accessibilityChildrenInRange:(struct _NSRange)fp8;
- (unsigned int)accessibilityIndexOfChild:(id)fp8;
- (id)accessibilityChildrenAttribute;
- (unsigned int)accessibilityArrayAttributeCount:(id)fp8;
- (id)accessibilityArrayAttributeValues:(id)fp8 index:(unsigned int)fp12 maxCount:(unsigned int)fp16;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (id)_accessibilityTableCell:(int)fp8 tableColumn:(id)fp12;
- (id)_accessibilityTableRow:(int)fp8;
@end

@interface NSTableViewCellProxy : NSAccessibilityProxy
{
    NSTableColumn *_tableColumn;
    int _row;
}

+ (id)cellForRow:(int)fp8 column:(int)fp12 tableView:(id)fp16;
+ (id)cellForRow:(int)fp8 tableColumn:(id)fp12;
- (id)initWithRow:(int)fp8 tableColumn:(id)fp12;
- (id)initWithRow:(int)fp8 column:(int)fp12 tableView:(id)fp16;
- (void)dealloc;
- (int)row;
- (int)column;
- (BOOL)isBeingEdited;
- (id)editor;
- (id)realElement;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityParentAttribute;
- (void)_sendDataSourceSetObjectValue:(id)fp8;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)fp8;
- (void)_accessibilityPopUpButtonCellPressAction:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSTabView : NSView
{
    id _tabViewItems;
    NSTabViewItem *_selectedTabViewItem;
    NSFont *_font;
    int _tabViewType;
    BOOL _allowTruncatedLabels;
    id _delegate;
    BOOL _tabViewUnusedBOOL1;
    BOOL _drawsBackground;
    NSTabViewItem *_pressedTabViewItem;
    int _endTabWidth;
    int _maxOverlap;
    int _tabHeight;
    NSTabViewItem *_tabViewItemWithKeyView;
    NSView *_originalNextKeyView;
    struct __NSTabViewDelegateRespondTo _delegateRespondTo;
    struct __NSTabViewFlags _flags;
    NSTabViewItem *_focusedTabViewItem;
    void *_tabViewUnused2;
}

+ (void)initialize;
+ (BOOL)_usesToolTipsWhenTruncated;
+ (void)_setUsesToolTipsWhenTruncated:(BOOL)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)_commonInit;
- (void)dealloc;
- (void)finalize;
- (BOOL)allowsTruncatedLabels;
- (id)tabViewItems;
- (int)indexOfTabViewItem:(id)fp8;
- (id)tabViewItemAtIndex:(int)fp8;
- (int)indexOfTabViewItemWithIdentifier:(id)fp8;
- (id)selectedTabViewItem;
- (int)numberOfTabViewItems;
- (id)font;
- (BOOL)isFlipped;
- (int)_tabOrientation;
- (BOOL)_hasHorizontalOrientation;
- (int)tabViewType;
- (BOOL)_hasTabs;
- (BOOL)_hasBezelBorder;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)isOpaque;
- (int)controlTint;
- (int)controlSize;
- (void)setAllowsTruncatedLabels:(BOOL)fp8;
- (void)setFont:(id)fp8;
- (void)setTabViewType:(int)fp8;
- (void)setControlTint:(int)fp8;
- (void)setControlSize:(int)fp8;
- (void)_addedTab:(id)fp8 atIndex:(int)fp12;
- (void)addTabViewItem:(id)fp8;
- (void)insertTabViewItem:(id)fp8 atIndex:(int)fp12;
- (void)removeTabViewItem:(id)fp8;
- (void)_removeTabViewItems:(id)fp8;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (id)currentEditor;
- (BOOL)_hasKeyboardFocus;
- (BOOL)_hasKeyboardFocusInTabItem:(id)fp8;
- (id)_findFirstValidKeyViewStartingFrom:(id)fp8 inTabViewItem:(id)fp12;
- (void)_switchTabViewItem:(id)fp8 oldView:(id)fp12 withTabViewItem:(id)fp16 newView:(id)fp20 initialFirstResponder:(id)fp24 lastKeyView:(id)fp28;
- (void)_setInteriorNextKeyView:(id)fp8;
- (void)_setNextKeyViewFor:(id)fp8 toNextKeyView:(id)fp12;
- (void)setNextKeyView:(id)fp8;
- (BOOL)_isViewValidOriginalNextKeyView:(id)fp8;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (BOOL)_wiringNibConnections;
- (void)_finishedMakingConnections;
- (void)_primitiveSetNextKeyView:(id)fp8;
- (void)_primitiveSetPreviousKeyView:(id)fp8;
- (void)_prepareForDefaultKeyLoopComputation;
- (void)_recursiveBreakKeyViewLoop;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_primitiveSetDefaultNextKeyView:(id)fp8;
- (void)_concludeDefaultKeyLoopComputation;
- (id)_originalNextKeyView;
- (void)_switchInitialFirstResponder:(id)fp8 lastKeyView:(id)fp12 forTabViewItem:(id)fp16;
- (BOOL)_shouldSelectTabViewItem:(id)fp8;
- (void)selectTabViewItem:(id)fp8;
- (void)takeSelectedTabViewItemFromSender:(id)fp8;
- (void)selectTabViewItemAtIndex:(int)fp8;
- (void)selectTabViewItemWithIdentifier:(id)fp8;
- (void)selectFirstTabViewItem:(id)fp8;
- (void)selectLastTabViewItem:(id)fp8;
- (void)selectNextTabViewItem:(id)fp8;
- (void)selectPreviousTabViewItem:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)tabViewItemAtPoint:(struct _NSPoint)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (int)_findPreviousNextTab:(int)fp8 loop:(BOOL)fp12 startingAtTabItem:(id)fp16;
- (void)_previousNextTab:(int)fp8 loop:(BOOL)fp12;
- (void)_cancelDelayedKeyboardNavigationTabSwitch;
- (void)_keyboardNavigateDoSelectOfFocusItem:(id)fp8;
- (void)_keyboardNavigateToTabAtIndex:(int)fp8;
- (void)_keyboardNavigateToTabByDelta:(int)fp8;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)performClick:(id)fp8;
- (struct _NSRect)_tabRectAdjustedForOverlap:(struct _NSRect)fp8;
- (void)_setNeedsDisplayForTabViewItem:(id)fp8;
- (void)_setKeyboardFocusRingNeedsDisplayForTabViewItem:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_drawThemeTab:(id)fp8 withState:(int)fp12 inRect:(struct _NSRect)fp16;
- (void)_drawTabViewItem:(id)fp8 inRect:(struct _NSRect)fp12;
- (struct _NSRect)_labelRectForTabRect:(struct _NSRect)fp8 forItem:(id)fp24;
- (struct _NSRect)_titleRectForTabViewItem:(id)fp8;
- (struct _NSSize)_nominalSizeNeedForTabItemLabel:(id)fp8;
- (struct _NSSize)_minimumSizeNeedForTabItemLabel:(id)fp8;
- (struct _NSRect)_themeContentRect;
- (struct _NSRect)_themeTabAndBarArea;
- (void)_getThemeImageTabBarRect:(struct _NSRect *)fp8 backgroundRect:(struct _NSRect *)fp12 fillBackgroundRect:(struct _NSRect *)fp16;
- (struct _NSRect)_tabRectForTabViewItem:(id)fp8;
- (void)_drawThemeBezelBorder:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)_drawBezelBorder:(id)fp8 inRect:(struct _NSRect)fp12;
- (void)_drawBorder:(id)fp8 inRect:(struct _NSRect)fp12;
- (int)_realControlTint;
- (void)_windowChangedKeyState;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)_old_encodeWithCoder_NSTabView:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSTabView:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (struct _NSSize)minimumSize;
- (float)_totalTabsLength:(BOOL)fp8 overlap:(float)fp12;
- (float)_totalNominalTabsLengthWithOverlap:(float)fp8;
- (float)_totalMinimumTabsLengthWithOverlap:(float)fp8;
- (float)_endTabWidth;
- (float)_tabHeight;
- (float)_doLayoutTabs:(float)fp8;
- (void)_layoutTabs;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)_resizeSelectedTabViewItem;
- (struct _NSRect)contentRect;
- (void)_invalidateTabsCache;
- (void)_systemColorChanged:(id)fp8;
- (void)_setPressedTabViewItem:(id)fp8;
- (BOOL)mouseTracker:(id)fp8 shouldStartTrackingWithEvent:(id)fp12;
- (BOOL)mouseTracker:(id)fp8 shouldContinueTrackingWithEvent:(id)fp12;
- (BOOL)mouseTracker:(id)fp8 didStopTrackingWithEvent:(id)fp12;
- (void)_selectTabWithDraggingInfo:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;

@end

@interface NSTabView (NSTabViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityTabsAttribute;
- (BOOL)accessibilityIsTabsAttributeSettable;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
@end

@interface NSTabViewItem : NSObject <NSCoding>
{
    id _identifier;
    NSString *_label;
    NSView *_view;
    NSView *_initialFirstResponder;
    NSColor *_color;
    NSTabView *_tabView;
    int _tabState;
    NSView *_lastKeyView;
    struct __tviFlags _tviFlags;
    struct _NSSize _labelSize;
    struct _NSRect _tabRect;
    int _tabToolTipTag;
    id _auxiliaryStorage;
}

- (void)_allocAuxiliaryStorage;
- (void)_deallocAuxiliaryStorage;
- (id)init;
- (id)initWithIdentifier:(id)fp8;
- (void)_commonInit;
- (void)dealloc;
- (void)finalize;
- (id)view;
- (void)_validateViewIsInViewHeirarchy:(id *)fp8;
- (id)_lastKeyView;
- (id)initialFirstResponder;
- (id)label;
- (id)tabView;
- (id)color;
- (id)identifier;
- (struct _NSRect)_tabRect;
- (int)tabState;
- (void)setColor:(id)fp8;
- (BOOL)_hasCustomColor;
- (void)setIdentifier:(id)fp8;
- (void)_setTabView:(id)fp8;
- (void)setLabel:(id)fp8;
- (void)_setTabRect:(struct _NSRect)fp8;
- (void)_setTabState:(int)fp8;
- (void)_setTabEnabled:(BOOL)fp8;
- (BOOL)_isTabEnabled;
- (id)_labelColor;
- (void)setView:(id)fp8;
- (void)_setInitialFirstResponder:(id)fp8 autoGenerated:(BOOL)fp12;
- (void)setInitialFirstResponder:(id)fp8;
- (void)_finishedWiringNibConnections;
- (BOOL)_canAutoGenerateKeyboardLoops;
- (void)_setAutoGeneratedInitialFirstResponder:(id)fp8;
- (void)_setDefaultKeyViewLoopAndInitialFirstResponder;
- (void)_clearInitialFirstResponderAndLastKeyViewIfAutoGenerated;
- (BOOL)_rotateCoordsForDrawLabelInRect:(struct _NSRect)fp8;
- (void)_drawOrientedLabel:(BOOL)fp8 inRect:(struct _NSRect)fp12;
- (void)drawLabel:(BOOL)fp8 inRect:(struct _NSRect)fp12;
- (void)_drawKeyViewOutline:(struct _NSRect)fp8;
- (void)_invalidLabelSize;
- (struct _NSSize)sizeOfLabel:(BOOL)fp8;
- (id)_shadowTabColorAtIndex:(int)fp8;
- (id)_highlightTabColor;
- (void)_old_encodeWithCoder_NSTabViewItem:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_old_initWithCoder_NSTabViewItem:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSRange)_rangeOfPrefixOfString:(id)fp8 fittingWidth:(float)fp12 withFont:(id)fp16;
- (id)_computeMinimumDisplayedLabelForWidth:(float)fp8;
- (struct _NSSize)_computeDisplayedSizeOfString:(id)fp8;
- (id)_computeDisplayedLabelForRect:(struct _NSRect)fp8;
- (struct _NSSize)_computeMinimumDisplayedLabelSize;
- (struct _NSSize)_computeNominalDisplayedLabelSize;
- (id)_displayedLabelForRect:(struct _NSRect)fp8;
- (id)_displayedLabel;
- (id)_fullLabel;
- (int)_addToolTipRect:(struct _NSRect)fp8;
- (void)_removeToolTip;
- (void)_resetToolTipIfNecessary;
- (void)_tabViewWillRemoveFromSuperview;

@end

@interface _NSTabViewItemAuxiliary : NSObject
{
    struct _NSSize lastComputeDisplayedLabelForRectSize;
    NSString *lastComputeDisplayedLabelForRectLabel;
    struct _NSSize cachedMinimumLabelSize;
}

@end

@interface NSTabViewItem (NSTabViewItemAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
@end

@interface NSTabWell : NSView
{
    NSRulerMarker *_prototype;
    BOOL _disabled;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8 prototypeRulerMarker:(id)fp24;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setPrototype:(id)fp8;
- (id)prototype;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (void)mouseDown:(id)fp8;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isEnabled;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSTearOffFrame : NSTitledFrame
{
}

+ (float)_minXWindowBorderWidth:(unsigned int)fp8;
+ (float)_maxXWindowBorderWidth:(unsigned int)fp8;
+ (float)_minYWindowBorderHeight:(unsigned int)fp8;
+ (void)initTitleCell:(id)fp8 styleMask:(unsigned int)fp12;
+ (float)_minXTitlebarBorderThickness;
+ (float)_maxXTitlebarBorderThickness;
+ (float)_minXTitlebarDecorationMinWidth:(unsigned int)fp8;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (float)_titlebarHeight:(unsigned int)fp8;
+ (float)_contentToFrameMinXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMaxXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMinYHeight:(unsigned int)fp8;
+ (float)_contentToFrameMaxYHeight:(unsigned int)fp8;
- (void)shapeWindow;
- (void)propagateFrameDirtyRects:(struct _NSRect)fp8;
- (void)_showDrawRect:(struct _NSRect)fp8;
- (void)drawFrame:(struct _NSRect)fp8;
- (void)_drawFrameRects:(struct _NSRect)fp8;
- (void)_drawTitlebar:(struct _NSRect)fp8;
- (void)_resetDragMargins;
- (void)_setUtilityWindow:(BOOL)fp8;
- (float)_minXWindowBorderWidth;
- (float)_maxXWindowBorderWidth;
- (float)_minYWindowBorderHeight;
- (float)_titlebarHeight;
- (struct _NSRect)_titlebarTitleRect;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (struct _NSRect)titlebarRect;
- (void)_resetTitleFont;
- (id)titleFont;
- (float)_minXTitlebarBorderThickness;
- (float)_maxXTitlebarBorderThickness;
- (float)_minXTitlebarDecorationMinWidth;
- (float)_minXTitleOffset;
- (id)newCloseButton;
- (struct _NSPoint)_closeButtonOrigin;
- (float)_maxYTitlebarDragHeight;
- (float)_minXTitlebarDragWidth;
- (float)_maxXTitlebarDragWidth;
- (float)_contentToFrameMinXWidth;
- (float)_contentToFrameMaxXWidth;
- (float)_contentToFrameMinYHeight;
- (float)_contentToFrameMaxYHeight;

@end

@interface NSCStringText : NSText
{
}

+ (id)new;
- (int)_textLength;
- (id)initWithFrame:(struct _NSRect)fp8 text:(id)fp24 alignment:(int)fp28;
- (id)initWithCoder:(id)fp8;

@end

@interface NSText : NSView <NSChangeSpelling, NSIgnoreMisspelledWords>
{
    id _ivars;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)string;
- (void)setString:(id)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (id)RTFFromRange:(struct _NSRange)fp8;
- (id)RTFDFromRange:(struct _NSRange)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withRTF:(id)fp16;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withRTFD:(id)fp16;
- (BOOL)writeRTFDToFile:(id)fp8 atomically:(BOOL)fp12;
- (BOOL)readRTFDFromFile:(id)fp8;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)fp8;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)fp8;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)setFont:(id)fp8;
- (id)font;
- (void)setTextColor:(id)fp8;
- (id)textColor;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (int)alignment;
- (void)setAlignment:(int)fp8;
- (int)baseWritingDirection;
- (void)setBaseWritingDirection:(int)fp8;
- (void)setFieldEditor:(BOOL)fp8;
- (BOOL)isFieldEditor;
- (void)setTextColor:(id)fp8 range:(struct _NSRange)fp12;
- (void)setFont:(id)fp8 range:(struct _NSRange)fp12;
- (BOOL)usesFontPanel;
- (void)setUsesFontPanel:(BOOL)fp8;
- (struct _NSSize)maxSize;
- (void)setMaxSize:(struct _NSSize)fp8;
- (struct _NSSize)minSize;
- (void)setMinSize:(struct _NSSize)fp8;
- (BOOL)isHorizontallyResizable;
- (void)setHorizontallyResizable:(BOOL)fp8;
- (BOOL)isVerticallyResizable;
- (void)setVerticallyResizable:(BOOL)fp8;
- (void)sizeToFit;
- (void)copy:(id)fp8;
- (void)copyFont:(id)fp8;
- (void)copyRuler:(id)fp8;
- (void)cut:(id)fp8;
- (void)delete:(id)fp8;
- (void)paste:(id)fp8;
- (void)pasteFont:(id)fp8;
- (void)pasteRuler:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)alignLeft:(id)fp8;
- (void)alignRight:(id)fp8;
- (void)alignCenter:(id)fp8;
- (void)subscript:(id)fp8;
- (void)superscript:(id)fp8;
- (void)underline:(id)fp8;
- (void)unscript:(id)fp8;
- (void)showGuessPanel:(id)fp8;
- (void)checkSpelling:(id)fp8;
- (void)toggleRuler:(id)fp8;
- (BOOL)isRulerVisible;
- (struct _NSRange)selectedRange;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (void)scrollRangeToVisible:(struct _NSRange)fp8;
- (void)changeSpelling:(id)fp8;
- (void)ignoreSpelling:(id)fp8;

@end

@interface NSAccessibilityTextLink : NSAccessibilityMockUIElement
{
    struct _NSRange _characterRange;
}

+ (id)linkWithCharacterRange:(struct _NSRange)fp8 parent:(id)fp16;
- (id)initWithCharacterRange:(struct _NSRange)fp8 parent:(id)fp16;
- (struct _NSRange)characterRange;
- (BOOL)isEqual:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSText (NSTextAccessibilityPrivate)
- (void)accessibilityPostNotification:(id)fp8;
- (id)accessibilitySelectedText;
- (BOOL)accessibilityIsSelectedTextSettable;
- (void)accessibilitySetSelectedText:(id)fp8;
- (struct _NSRange)accessibilitySelectedRange;
- (BOOL)accessibilityIsSelectedRangeSettable;
- (void)accessibilitySetSelectedRange:(struct _NSRange)fp8;
- (id)accessibilityTextView;
- (struct _NSRange)accessibilityVisibleCharacterRange;
- (BOOL)accessibilityIsVisibleCharacterRangeSettable;
- (void)accessibilitySetVisibleCharacterRange:(struct _NSRange)fp8;
- (unsigned int)accessibilityInsertionPointLineNumber;
- (unsigned int)accessibilityLineNumberForCharacterIndex:(unsigned int)fp8;
- (struct _NSRange)accessibilityCharacterRangeForLineNumber:(unsigned int)fp8;
- (struct _NSRange)accessibilityCharacterRangeForPosition:(struct _NSPoint)fp8;
- (struct _NSRect)accessibilityBoundsForCharacterRange:(struct _NSRange)fp8;
- (id)accessibilityRTFForCharacterRange:(struct _NSRange)fp8;
- (id)accessibilityAXAttributedStringForCharacterRange:(struct _NSRange)fp8 parent:(id)fp16;
- (struct _NSRange)accessibilityStyleRangeForCharacterIndex:(unsigned int)fp8;
- (id)accessibilitySharedTextViews;
- (struct _NSRange)accessibilitySharedCharacterRange;
- (id)accessibilityAttachments;
- (unsigned int)accessibilityIndexForAttachment:(id)fp8;
- (id)accessibilityAttachmentAtIndex:(unsigned int)fp8;
- (id)accessibilityTextLinks;
- (id)accessibilityTextLinkAtIndex:(unsigned int)fp8;
@end

@interface NSSecureTextView (NSTextAccessibilityPrivate)
- (void)accessibilityPostNotification:(id)fp8;
@end

@interface NSMultiplePagePDFImageViewTextAttachmentCell : NSViewTextAttachmentCell
{
    BOOL _isExpanded;
}

- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
- (struct _NSSize)cellSize;
- (void)addView:(id)fp8 frame:(struct _NSRect)fp12 toView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;
- (void)adjustView:(id)fp8 frame:(struct _NSRect)fp12 forView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;

@end

@interface NSDocumentTextAttachmentScrollView : NSScrollView
{
    NSImageView *_imageView;
    NSView *_expandedView;
    NSLayoutManager *_layoutManager;
    unsigned int _charIndex;
    BOOL _isExpanded;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (BOOL)isExpanded;
- (id)layoutManager;
- (unsigned int)charIndex;
- (id)image;
- (void)setImage:(id)fp8;
- (id)expandedView;
- (void)setExpandedView:(id)fp8;
- (void)setCharacterIndex:(unsigned int)fp8 layoutManager:(id)fp12;
- (void)setExpanded:(BOOL)fp8;
- (void)toggleExpanded:(id)fp8;

@end

@interface NSMultiplePagePDFImageView : NSView
{
    NSPDFImageRep *_imageRep;
}

- (void)dealloc;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (int)numberOfPages;
- (id)imageRep;
- (void)setImageRep:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)mouseDown:(id)fp8;

@end

@interface NSImageViewTextAttachmentCell : NSViewTextAttachmentCell
{
}

- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)addView:(id)fp8 frame:(struct _NSRect)fp12 toView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;

@end

@interface NSTextAttachmentImageView : NSImageView
{
}

- (void)mouseDown:(id)fp8;

@end

@interface NSTextAttachmentMovieView : NSMovieView
{
}

- (id)_invalidateGStatesForTree;
- (void)mouseDown:(id)fp8;

@end

@interface NSMovieViewTextAttachmentCell : NSViewTextAttachmentCell
{
    NSMovie *_movie;
    struct _NSSize _size;
}

- (id)initWithMovie:(id)fp8;
- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)addView:(id)fp8 frame:(struct _NSRect)fp12 toView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;
- (struct _NSSize)cellSize;
- (void)dealloc;

@end

@interface NSViewTextAttachmentCell : NSTextAttachmentCell
{
}

- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (id)viewForCharacterIndex:(unsigned int)fp8 layoutManager:(id)fp12;
- (BOOL)wantsToTrackMouse;
- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)addView:(id)fp8 frame:(struct _NSRect)fp12 toView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;
- (void)adjustView:(id)fp8 frame:(struct _NSRect)fp12 forView:(id)fp28 characterIndex:(unsigned int)fp32 layoutManager:(id)fp36;
- (void)_helperDeallocatedForView:(id)fp8 layoutManager:(id)fp12;
- (void)removeView:(id)fp8 fromView:(id)fp12 layoutManager:(id)fp16;
- (void)releaseView:(id)fp8;

@end

@interface NSViewTextAttachmentCellHelper : NSObject
{
    NSView *_view;
    NSViewTextAttachmentCell *_attachmentCell;
    NSLayoutManager *_layoutManager;
}

- (id)initWithView:(id)fp8 layoutManager:(id)fp12 characterIndex:(unsigned int)fp16 attachmentCell:(id)fp20;
- (id)view;
- (void)setView:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSTextAttachmentCell : NSCell <NSTextAttachmentCell>
{
    NSTextAttachment *_attachment;
}

- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
- (struct _NSSize)cellSize;
- (struct _NSPoint)cellBaselineOffset;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (void)setAttachment:(id)fp8;
- (id)attachment;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;

@end

@interface NSTextAttachment : NSObject <NSCoding>
{
    NSFileWrapper *_fileWrapper;
    id _cell;
    struct {
        unsigned int cellWasExplicitlySet:1;
        unsigned int :31;
    } _flags;
}

- (id)initWithFileWrapper:(id)fp8;
- (void)setFileWrapper:(id)fp8;
- (id)fileWrapper;
- (void)setAttachmentCell:(id)fp8;
- (id)attachmentCell;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSMutableAttributedString (NSMutableAttributedStringAttachmentConveniences)
- (void)updateAttachmentsFromPath:(id)fp8;
@end

@interface NSAttributedString (NSAttributedStringAttachmentConveniences)
+ (id)attributedStringWithAttachment:(id)fp8;
- (id)_attachmentFileWrapperDescription:(BOOL)fp8;
@end

@interface NSTextContainer : NSObject <NSCoding>
{
    NSLayoutManager *_layoutManager;
    NSTextView *_textView;
    struct _NSSize _size;
    float _lineFragmentPadding;
    struct __tcFlags _tcFlags;
}

+ (void)initialize;
- (void)_commonInit;
- (id)initWithContainerSize:(struct _NSSize)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)layoutManager;
- (void)setLayoutManager:(id)fp8;
- (void)replaceLayoutManager:(id)fp8;
- (id)textView;
- (void)setTextView:(id)fp8;
- (void)setWidthTracksTextView:(BOOL)fp8;
- (BOOL)widthTracksTextView;
- (void)setHeightTracksTextView:(BOOL)fp8;
- (BOOL)heightTracksTextView;
- (void)setContainerSize:(struct _NSSize)fp8;
- (struct _NSSize)containerSize;
- (void)setLineFragmentPadding:(float)fp8;
- (float)lineFragmentPadding;
- (struct _NSRect)lineFragmentRectForProposedRect:(struct _NSRect)fp8 sweepDirection:(int)fp24 movementDirection:(int)fp28 remainingRect:(struct _NSRect *)fp32;
- (BOOL)isSimpleRectangularTextContainer;
- (BOOL)containsPoint:(struct _NSPoint)fp8;

@end

@interface NSTextContainer (NSPrivate)
- (void)_setContainerObservesTextViewFrameChanges:(BOOL)fp8;
- (BOOL)_containerObservesTextViewFrameChanges;
- (void)_resizeAccordingToTextView:(id)fp8;
- (void)_containerTextViewFrameChanged:(id)fp8;
@end

@interface NSTextField : NSControl
{
    id _delegate;
    SEL _errorAction;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (void)setTextColor:(id)fp8;
- (id)textColor;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)fp8;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)fp8;
- (BOOL)allowsEditingTextAttributes;
- (void)setAllowsEditingTextAttributes:(BOOL)fp8;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)fp8;
- (void)setBezelStyle:(int)fp8;
- (int)bezelStyle;
- (void)setPreviousText:(id)fp8;
- (void)setNextText:(id)fp8;
- (id)nextText;
- (id)previousText;
- (BOOL)performMnemonic:(id)fp8;
- (void)setTitleWithMnemonic:(id)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)selectText:(id)fp8;
- (void)startSpeaking:(id)fp8;
- (void)stopSpeaking:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (BOOL)textShouldEndEditing:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)textShouldBeginEditing:(id)fp8;
- (void)textDidBeginEditing:(id)fp8;
- (void)textDidChange:(id)fp8;
- (BOOL)textView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)textView:(id)fp8 completions:(id)fp12 forPartialWordRange:(struct _NSRange)fp16 indexOfSelectedItem:(int *)fp24;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSTextField (NSTextFieldObsolete)
- (SEL)errorAction;
- (void)setErrorAction:(SEL)fp8;
@end

@interface NSTextFieldCell : NSActionCell
{
    NSColor *_backgroundColor;
    NSColor *_textColor;
    struct __tfFlags _tfFlags;
}

+ (void)initialize;
- (id)init;
- (id)initTextCell:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isOpaque;
- (void)setBezeled:(BOOL)fp8;
- (BOOL)acceptsFirstResponder;
- (void)setBackgroundColor:(id)fp8;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (id)backgroundColor;
- (void)setTextColor:(id)fp8;
- (id)textColor;
- (void)_invalidateTextColor;
- (void)setBezelStyle:(int)fp8;
- (int)bezelStyle;
- (void)setPlaceholderString:(id)fp8;
- (id)placeholderString;
- (void)setPlaceholderAttributedString:(id)fp8;
- (id)placeholderAttributedString;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (id)_selectOrEdit:(const struct _NSRect *)fp8 inView:(id)fp12 target:(id)fp16 editor:(id)fp20 event:(id)fp24 start:(int)fp28 end:(int)fp32;
- (struct _NSRect)_focusRingFrameForFrame:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)_drawKeyboardFocusRingWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawThemeBezelWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawFocusRingWithFrame:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_highlightsWithHighlightRect;
- (void)_getTextColor:(id *)fp8 backgroundColor:(id *)fp12;
- (id)setUpFieldEditorAttributes:(id)fp8;
- (id)_textAttributes;
- (void)setFont:(id)fp8;
- (int)_typesetterBehavior;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSTextFieldCell (NSTextFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityElementForAttachment:(id)fp8;
- (id)accessibilityAttachmentAtIndex:(unsigned int)fp8;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (struct _NSRect)_accessibilityBoundsOfChild:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSConcreteTextStorage : NSTextStorage
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    id _lock;
    struct {
        unsigned int _forceFixAttributes:1;
        unsigned int _needLock:1;
        unsigned int _reserved:30;
    } _pFlags;
}

- (Class)classForCoder;
- (BOOL)_lockForReading;
- (BOOL)_lockForWriting;
- (void)_unlock;
- (void)becomeMultiThreaded:(id)fp8;
- (void)becomeSingleThreaded:(id)fp8;
- (void)_initLocks;
- (id)initWithAttributedString:(id)fp8;
- (id)initWithString:(id)fp8;
- (id)initWithString:(id)fp8 attributes:(id)fp12;
- (id)init;
- (void)dealloc;
- (BOOL)fixesAttributesLazily;
- (unsigned int)length;
- (id)string;
- (void)_setForceFixAttributes:(BOOL)fp8;
- (BOOL)_forceFixAttributes;
- (id)attributesAtIndex:(unsigned int)fp8 effectiveRange:(struct _NSRange *)fp12;
- (id)attributesAtIndex:(unsigned int)fp8 longestEffectiveRange:(struct _NSRange *)fp12 inRange:(struct _NSRange)fp16;
- (id)attribute:(id)fp8 atIndex:(unsigned int)fp12 effectiveRange:(struct _NSRange *)fp16;
- (id)attribute:(id)fp8 atIndex:(unsigned int)fp12 longestEffectiveRange:(struct _NSRange *)fp16 inRange:(struct _NSRange)fp20;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withAttributedString:(id)fp16;
- (void)addAttribute:(id)fp8 value:(id)fp12 range:(struct _NSRange)fp16;

@end

@interface NSTextStorage : NSMutableAttributedString
{
    struct _NSRange _editedRange;
    int _editedDelta;
    struct {
        unsigned int editedMask:8;
        unsigned int :8;
        unsigned int disabled:16;
    } _flags;
    NSMutableArray *_layoutManagers;
    id _sideData;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)addLayoutManager:(id)fp8;
- (void)removeLayoutManager:(id)fp8;
- (id)layoutManagers;
- (BOOL)_lockForReading;
- (BOOL)_lockForWriting;
- (void)_unlock;
- (void)_setForceFixAttributes:(BOOL)fp8;
- (BOOL)_forceFixAttributes;
- (void)beginEditing;
- (void)endEditing;
- (BOOL)_isEditing;
- (struct _NSRange)editedRange;
- (unsigned int)editedMask;
- (int)changeInLength;
- (void)edited:(unsigned int)fp8 range:(struct _NSRange)fp12 changeInLength:(int)fp20;
- (void)processEditing;
- (struct _NSRange)_rangeByEstimatingAttributeFixingForRange:(struct _NSRange)fp8;
- (void)invalidateAttributesInRange:(struct _NSRange)fp8;
- (void)ensureAttributesAreFixedInRange:(struct _NSRange)fp8;
- (BOOL)fixesAttributesLazily;
- (void)_notifyEdited:(unsigned int)fp8 range:(struct _NSRange)fp12 changeInLength:(int)fp20 invalidatedRange:(struct _NSRange)fp24;
- (void)_antialiasThresholdChanged:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;

@end

@interface _NSTextStorageSideData : NSObject
{
    id _delegate;
    struct _NSRange _lazyFixRange;
}

@end

@interface NSConcreteNotifyingMutableAttributedString : NSConcreteMutableAttributedString
{
    id _delegate;
}

+ (Class)_mutableStringClass;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)beginEditing;
- (void)endEditing;
- (void)edited:(unsigned int)fp8 range:(struct _NSRange)fp12 changeInLength:(int)fp20;

@end

@interface NSUndoTyping : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSMutableAttributedString *_attributedString;
}

- (id)initWithAffectedRange:(struct _NSRange)fp8 layoutManager:(id)fp16 undoManager:(id)fp20 replacementRange:(struct _NSRange)fp24;
- (void)dealloc;
- (BOOL)coalesceAffectedRange:(struct _NSRange)fp8 replacementRange:(struct _NSRange)fp16 selectedRange:(struct _NSRange)fp24 text:(id)fp32;
- (void)undoRedo:(id)fp8;
- (BOOL)isSupportingCoalescing;

@end

@interface NSUndoSetAttributes : NSUndoTextOperation
{
    _NSAttributeRun *_attributes;
}

- (id)initWithAffectedRange:(struct _NSRange)fp8 layoutManager:(id)fp16 undoManager:(id)fp20;
- (void)dealloc;
- (void)finalize;
- (void)undoRedo:(id)fp8;

@end

@interface NSUndoReplaceCharacters : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSAttributedString *_attributedString;
}

- (id)initWithAffectedRange:(struct _NSRange)fp8 layoutManager:(id)fp16 undoManager:(id)fp20 replacementRange:(struct _NSRange)fp24;
- (void)dealloc;
- (void)finalize;
- (void)undoRedo:(id)fp8;

@end

@interface NSUndoTextOperation : NSObject
{
    struct _NSRange _affectedRange;
    NSUndoManager *_undoManager;
    NSLayoutManager *_layoutManager;
}

- (id)initWithAffectedRange:(struct _NSRange)fp8 layoutManager:(id)fp16 undoManager:(id)fp20;
- (void)dealloc;
- (void)undoRedo:(id)fp8;
- (id)firstTextViewForTextStorage:(id)fp8;
- (id)undoManager;
- (BOOL)isSupportingCoalescing;

@end

@interface NSTextStorage (NSUndo)
- (void)_undoRedoTextOperation:(id)fp8;
- (id)_undoRedoAttributedSubstringFromRange:(struct _NSRange)fp8;
@end

@interface NSTextStorage (NSScripting)
- (id)scriptingTextDescriptor;
- (id)attributeRuns;
- (void)setAttributeRuns:(id)fp8;
- (id)paragraphs;
- (void)setParagraphs:(id)fp8;
- (id)words;
- (void)setWords:(id)fp8;
- (id)characters;
- (void)setCharacters:(id)fp8;
- (id)font;
- (void)setFont:(id)fp8;
- (id)fontName;
- (void)setFontName:(id)fp8;
- (float)fontSize;
- (void)setFontSize:(float)fp8;
- (id)foregroundColor;
- (void)setForegroundColor:(id)fp8;
- (void)insertInAttachments:(id)fp8;
- (void)replaceValueAtIndex:(unsigned int)fp8 inPropertyWithKey:(id)fp12 withValue:(id)fp16;
- (void)insertValue:(id)fp8 atIndex:(unsigned int)fp12 inPropertyWithKey:(id)fp16;
- (void)removeValueAtIndex:(unsigned int)fp8 fromPropertyWithKey:(id)fp12;
- (id)coerceValue:(id)fp8 forKey:(id)fp12;
- (id)valueInAttributeRunsAtIndex:(unsigned int)fp8;
- (id)valueInParagraphsAtIndex:(unsigned int)fp8;
- (id)valueInWordsAtIndex:(unsigned int)fp8;
- (id)valueInCharactersAtIndex:(unsigned int)fp8;
@end

@interface NSColor (NSScripting)
+ (id)scriptingColorWithDescriptor:(id)fp8;
- (id)scriptingColorDescriptor;
@end

@interface NSTextTemplate : NSViewTemplate
{
    id _contents;
    NSColor *_textColor;
    NSFont *_font;
    int _alignment;
    NSColor *_backgroundColor;
    struct _NSSize _minSize;
    struct _NSSize _maxSize;
    id _delegate;
    struct __ttFlags _ttFlags;
}

+ (void)initialize;
- (id)initWithView:(id)fp8 className:(id)fp12;
- (void)dealloc;
- (id)createRealObject;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSTextView : NSText <NSTextInput, NSUserInterfaceValidations>
{
}

+ (void)initialize;
+ (void)setDefaultMenu:(id)fp8;
+ (id)defaultMenu;
- (id)initWithFrame:(struct _NSRect)fp8 textContainer:(id)fp24;
- (id)initWithFrame:(struct _NSRect)fp8;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)textContainer;
- (void)setTextContainer:(id)fp8;
- (void)replaceTextContainer:(id)fp8;
- (void)setTextContainerInset:(struct _NSSize)fp8;
- (struct _NSSize)textContainerInset;
- (struct _NSPoint)textContainerOrigin;
- (void)invalidateTextContainerOrigin;
- (id)layoutManager;
- (id)textStorage;
- (void)doCommandBySelector:(SEL)fp8;
- (void)_addSpellingAttributeForRange:(struct _NSRange)fp8;
- (void)_removeSpellingAttributeForRange:(struct _NSRange)fp8 includeAccessibility:(BOOL)fp16;
- (void)_removeSpellingAttributeForRange:(struct _NSRange)fp8;
- (BOOL)_mightHaveSpellingAttributes;
- (id)_spellingGuessesForRange:(struct _NSRange)fp8;
- (struct _NSRange)_doubleClickAtIndex:(unsigned int)fp8 limitedRangeOK:(BOOL)fp12;
- (struct _NSRange)_spellingSelectionRangeForProposedRange:(struct _NSRange)fp8;
- (struct _NSRange)_rangeByTrimmingWhitespaceFromRange:(struct _NSRange)fp8;
- (void)_clearSpellingForRange:(struct _NSRange)fp8;
- (void)_checkSpellingForRange:(struct _NSRange)fp8 excludingRange:(struct _NSRange)fp16;
- (id)inputContext;
- (void)insertText:(id)fp8;
- (void)setConstrainedFrameSize:(struct _NSSize)fp8;
- (void)setAlignment:(int)fp8 range:(struct _NSRange)fp12;
- (void)setBaseWritingDirection:(int)fp8 range:(struct _NSRange)fp12;
- (void)performFindPanelAction:(id)fp8;
- (void)turnOffKerning:(id)fp8;
- (void)tightenKerning:(id)fp8;
- (void)loosenKerning:(id)fp8;
- (void)useStandardKerning:(id)fp8;
- (void)turnOffLigatures:(id)fp8;
- (void)useStandardLigatures:(id)fp8;
- (void)useAllLigatures:(id)fp8;
- (void)raiseBaseline:(id)fp8;
- (void)lowerBaseline:(id)fp8;
- (void)toggleTraditionalCharacterShape:(id)fp8;
- (void)rulerView:(id)fp8 didMoveMarker:(id)fp12;
- (void)rulerView:(id)fp8 didRemoveMarker:(id)fp12;
- (void)rulerView:(id)fp8 didAddMarker:(id)fp12;
- (BOOL)rulerView:(id)fp8 shouldMoveMarker:(id)fp12;
- (BOOL)rulerView:(id)fp8 shouldRemoveMarker:(id)fp12;
- (BOOL)rulerView:(id)fp8 shouldAddMarker:(id)fp12;
- (float)rulerView:(id)fp8 willMoveMarker:(id)fp12 toLocation:(float)fp16;
- (float)rulerView:(id)fp8 willAddMarker:(id)fp12 atLocation:(float)fp16;
- (void)rulerView:(id)fp8 handleMouseDown:(id)fp12;
- (void)rulerView:(id)fp8 willSetClientView:(id)fp12;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8 avoidAdditionalLayout:(BOOL)fp24;
- (BOOL)shouldDrawInsertionPoint;
- (void)_drawInsertionPointInRect:(struct _NSRect)fp8 color:(id)fp24;
- (void)drawInsertionPointInRect:(struct _NSRect)fp8 color:(id)fp24 turnedOn:(BOOL)fp28;
- (void)updateRuler;
- (void)updateFontPanel;
- (void)updateDragTypeRegistration;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(int)fp16;
- (id)string;
- (void)setString:(id)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (id)RTFFromRange:(struct _NSRange)fp8;
- (id)RTFDFromRange:(struct _NSRange)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withRTF:(id)fp16;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withRTFD:(id)fp16;
- (BOOL)writeRTFDToFile:(id)fp8 atomically:(BOOL)fp12;
- (BOOL)readRTFDFromFile:(id)fp8;
- (void)setFont:(id)fp8;
- (id)font;
- (void)setTextColor:(id)fp8;
- (id)textColor;
- (void)setAlignment:(int)fp8;
- (int)alignment;
- (int)baseWritingDirection;
- (void)setBaseWritingDirection:(int)fp8;
- (void)setTextColor:(id)fp8 range:(struct _NSRange)fp12;
- (void)setFont:(id)fp8 range:(struct _NSRange)fp12;
- (struct _NSSize)maxSize;
- (void)setMaxSize:(struct _NSSize)fp8;
- (struct _NSSize)minSize;
- (void)setMinSize:(struct _NSSize)fp8;
- (BOOL)isHorizontallyResizable;
- (void)setHorizontallyResizable:(BOOL)fp8;
- (BOOL)isVerticallyResizable;
- (void)setVerticallyResizable:(BOOL)fp8;
- (void)sizeToFit;
- (void)delete:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)changeAttributes:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)changeDocumentBackgroundColor:(id)fp8;
- (void)alignLeft:(id)fp8;
- (void)alignRight:(id)fp8;
- (void)alignCenter:(id)fp8;
- (void)alignJustified:(id)fp8;
- (void)toggleBaseWritingDirection:(id)fp8;
- (void)changeBaseWritingDirection:(id)fp8;
- (void)subscript:(id)fp8;
- (void)superscript:(id)fp8;
- (void)underline:(id)fp8;
- (void)outline:(id)fp8;
- (void)unscript:(id)fp8;
- (void)showGuessPanel:(id)fp8;
- (void)checkSpelling:(id)fp8;
- (void)_changeSpellingToWord:(id)fp8;
- (void)_changeSpellingFromMenu:(id)fp8;
- (void)changeSpelling:(id)fp8;
- (void)ignoreSpelling:(id)fp8;
- (void)_ignoreSpellingFromMenu:(id)fp8;
- (void)_learnSpellingFromMenu:(id)fp8;
- (void)_forgetSpellingFromMenu:(id)fp8;
- (void)_openLinkFromMenu:(id)fp8;
- (void)_makeLinkFromMenu:(id)fp8;
- (void)_searchWithGoogleFromMenu:(id)fp8;
- (void)_lookUpRangeInDictionary:(struct _NSRange)fp8;
- (void)_lookUpDefiniteRangeInDictionaryFromMenu:(id)fp8;
- (void)_lookUpIndefiniteRangeInDictionaryFromMenu:(id)fp8;
- (void)toggleRuler:(id)fp8;
- (void)scrollRangeToVisible:(struct _NSRange)fp8;
- (BOOL)isFlipped;
- (void)_propagateDownNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (void)resetCursorRects;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)_checkRotatedOrScaledFromBase;
- (id)_setRotatedFromBase:(BOOL)fp8;
- (id)_setRotatedOrScaledFromBase:(BOOL)fp8;
- (void)setBoundsSize:(struct _NSSize)fp8;
- (void)scaleUnitSquareToSize:(struct _NSSize)fp8;
- (struct _NSRange)_extendedGlyphRangeForRange:(struct _NSRange)fp8 maxGlyphIndex:(unsigned int)fp16 drawingToScreen:(BOOL)fp20;
- (void)_drawRect:(struct _NSRect)fp8 clip:(BOOL)fp24;
- (void)drawViewBackgroundInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)_attachmentAtGlyphIndex:(unsigned int)fp8 containsWindowPoint:(struct _NSPoint)fp12;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (void)keyUp:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)flagsChanged:(id)fp8;
- (void)clickedOnLink:(id)fp8 atIndex:(unsigned int)fp12;
- (BOOL)mouseDownCanMoveWindow;
- (void)_showToolTip:(id)fp8;
- (void)_toolTipTimer;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (struct _NSRect)_contentRectForTextBlock:(id)fp8 glyphRange:(struct _NSRange)fp12;
- (id)_cellForPoint:(struct _NSPoint)fp8 characterIndex:(unsigned int)fp16 level:(unsigned int *)fp20 row:(int *)fp24 column:(int *)fp28 range:(struct _NSRange *)fp32;
- (void)mouseMoved:(id)fp8;
- (void)_resizeTable:(id)fp8 level:(unsigned int)fp12 range:(struct _NSRange)fp16 column:(int)fp24 widthDelta:(float)fp28;
- (void)_resizeTable:(id)fp8 level:(unsigned int)fp12 range:(struct _NSRange)fp16 row:(int)fp24 heightDelta:(float)fp28;
- (id)_rectangularCharacterRangesForGlyphRange:(struct _NSRange)fp8 from:(float)fp16 to:(float)fp20 granularity:(int)fp24;
- (float)_distForGlyphLocation:(unsigned int)fp8;
- (id)_selectedRangesByTogglingRanges:(id)fp8 withRanges:(id)fp12 initialCharacterIndex:(unsigned int)fp16 granularity:(int)fp20;
- (void)mouseDown:(id)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (BOOL)hasMarkedText;
- (void)lockDocument;
- (void)unlockDocument;
- (void)getMarkedText:(id *)fp8 selectedRange:(struct _NSRange *)fp12;
- (void)unmarkText;
- (long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (BOOL)acceptsGlyphInfo;
- (void)setAcceptsGlyphInfo:(BOOL)fp8;
- (id)validAttributesForMarkedText;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (BOOL)_acceptsMarkedText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (id)_selectedRanges;
- (id)selectedRanges;
- (id)description;
- (id)menuForEvent:(id)fp8;
- (void)rightMouseUp:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (id)_getUndoManager:(BOOL)fp8;
- (id)undoManager;
- (void)startSpeaking:(id)fp8;
- (void)stopSpeaking:(id)fp8;
- (void)orderFrontLinkPanel:(id)fp8;
- (void)orderFrontSpacingPanel:(id)fp8;
- (void)orderFrontListPanel:(id)fp8;
- (void)orderFrontTablePanel:(id)fp8;

@end

@interface NSTextView (NSDragging)
- (unsigned int)_insertionGlyphIndexForDrag:(id)fp8;
- (void)_updateDragInsertionIndicatorWith:(struct _NSRect)fp8;
- (struct _NSPoint)_pointForTopOfBeginningOfCharRange:(struct _NSRange)fp8;
- (id)acceptableDragTypes;
- (void)cleanUpAfterDragOperation;
- (void)_forceRedrawDragInsertionIndicator;
- (void)_setDragAndDropCharRange:(struct _NSRange)fp8;
- (void)_setDragAndDropCharRanges:(id)fp8;
- (unsigned int)dragOperationForDraggingInfo:(id)fp8 type:(id)fp12;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (id)dragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (BOOL)dragSelectionWithEvent:(id)fp8 offset:(struct _NSSize)fp12 slideBack:(BOOL)fp20;
@end

@interface NSTextViewCompletionController : NSObject
{
    NSWindow *_completionWindow;
    NSTableView *_tableView;
    NSWindow *_textViewWindow;
    NSTextView *_textView;
    struct _NSRange _charRange;
    NSString *_originalString;
    int _movement;
    NSArray *_completions;
}

+ (id)sharedController;
- (void)_setupWindow;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_reflectSelection:(BOOL)fp8;
- (void)displayCompletions:(id)fp8 forPartialWordRange:(struct _NSRange)fp12 originalString:(id)fp20 atPoint:(struct _NSPoint)fp24 forTextView:(id)fp32;
- (void)displayCompletions:(id)fp8 indexOfSelectedItem:(int)fp12 forPartialWordRange:(struct _NSRange)fp16 originalString:(id)fp24 atPoint:(struct _NSPoint)fp28 forTextView:(id)fp36;
- (id)currentTextView;
- (id)completionWindow;
- (void)endDisplayAndComplete:(BOOL)fp8;
- (void)endDisplayNoComplete;
- (void)endDisplay;
- (void)tableAction:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;

@end

@interface NSTextView (NSKeyBindingCommands)
+ (BOOL)_allowKillRing;
- (float)_verticalDistanceForPageScroll;
- (float)_verticalDistanceForLineScroll;
- (struct _NSRange)_rangeForMoveUpFromRange:(struct _NSRange)fp8 verticalDistance:(float)fp16 desiredDistanceIntoContainer:(float *)fp20 selectionAffinity:(int *)fp24;
- (struct _NSRange)_rangeForMoveDownFromRange:(struct _NSRange)fp8 verticalDistance:(float)fp16 desiredDistanceIntoContainer:(float *)fp20 selectionAffinity:(int *)fp24;
- (void)_scrollUp:(float)fp8;
- (void)_scrollDown:(float)fp8;
- (void)scrollPageUp:(id)fp8;
- (void)scrollPageDown:(id)fp8;
- (void)scrollLineUp:(id)fp8;
- (void)scrollLineDown:(id)fp8;
- (void)scrollToBeginningOfDocument:(id)fp8;
- (void)scrollToEndOfDocument:(id)fp8;
- (void)moveForward:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)moveBackward:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)_moveUp:(float)fp8;
- (void)_moveDown:(float)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)pageUp:(id)fp8;
- (void)pageDown:(id)fp8;
- (void)moveWordForward:(id)fp8;
- (void)moveWordBackward:(id)fp8;
- (void)moveWordRight:(id)fp8;
- (void)moveWordLeft:(id)fp8;
- (void)moveToBeginningOfLine:(id)fp8;
- (void)moveToEndOfLine:(id)fp8;
- (void)moveToBeginningOfParagraph:(id)fp8;
- (void)moveToEndOfParagraph:(id)fp8;
- (void)moveToEndOfDocument:(id)fp8;
- (void)moveToBeginningOfDocument:(id)fp8;
- (void)centerSelectionInVisibleArea:(id)fp8;
- (void)transpose:(id)fp8;
- (void)selectParagraph:(id)fp8;
- (void)selectLine:(id)fp8;
- (void)selectWord:(id)fp8;
- (void)_checkInList:(char *)fp8 listStart:(char *)fp12 markerRange:(struct _NSRange *)fp16 emptyItem:(char *)fp20 atEnd:(char *)fp24 inBlock:(char *)fp28 blockStart:(char *)fp32;
- (void)_reformListAtIndex:(unsigned int)fp8;
- (void)_nestListAtIndex:(unsigned int)fp8;
- (void)_unnestListAtIndex:(unsigned int)fp8 markerRange:(struct _NSRange)fp12;
- (void)_moveToNextBlock;
- (void)_moveToPreviousBlock;
- (void)insertTab:(id)fp8;
- (void)insertBacktab:(id)fp8;
- (void)insertNewline:(id)fp8;
- (void)insertParagraphSeparator:(id)fp8;
- (void)insertLineBreak:(id)fp8;
- (void)insertLineSeparator:(id)fp8;
- (void)insertPageBreak:(id)fp8;
- (void)insertContainerBreak:(id)fp8;
- (void)insertNewlineIgnoringFieldEditor:(id)fp8;
- (void)insertTabIgnoringFieldEditor:(id)fp8;
- (void)uppercaseWord:(id)fp8;
- (void)lowercaseWord:(id)fp8;
- (void)capitalizeWord:(id)fp8;
- (void)deleteForward:(id)fp8;
- (void)deleteBackward:(id)fp8;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)fp8;
- (void)deleteWordForward:(id)fp8;
- (void)deleteWordBackward:(id)fp8;
- (void)deleteToBeginningOfLine:(id)fp8;
- (void)deleteToEndOfLine:(id)fp8;
- (void)deleteToBeginningOfParagraph:(id)fp8;
- (void)deleteToEndOfParagraph:(id)fp8;
- (struct _NSRange)rangeForUserCompletion;
- (id)_completionsFromDocumentForPartialWordRange:(struct _NSRange)fp8;
- (id)completionsForPartialWordRange:(struct _NSRange)fp8 indexOfSelectedItem:(int *)fp16;
- (void)insertCompletion:(id)fp8 forPartialWordRange:(struct _NSRange)fp12 movement:(int)fp20 isFinal:(BOOL)fp24;
- (void)complete:(id)fp8;
- (void)spotlight:(id)fp8;
- (void)setMark:(id)fp8;
- (void)deleteToMark:(id)fp8;
- (void)selectToMark:(id)fp8;
- (void)swapWithMark:(id)fp8;
- (void)moveForwardAndModifySelection:(id)fp8;
- (void)moveBackwardAndModifySelection:(id)fp8;
- (void)moveWordForwardAndModifySelection:(id)fp8;
- (void)moveWordBackwardAndModifySelection:(id)fp8;
- (BOOL)_rightToLeftAtIndex:(unsigned int)fp8;
- (void)moveRightAndModifySelection:(id)fp8;
- (void)moveLeftAndModifySelection:(id)fp8;
- (void)moveWordRightAndModifySelection:(id)fp8;
- (void)moveWordLeftAndModifySelection:(id)fp8;
- (void)moveParagraphForwardAndModifySelection:(id)fp8;
- (void)moveParagraphBackwardAndModifySelection:(id)fp8;
- (void)_moveUpAndModifySelection:(float)fp8;
- (void)_moveDownAndModifySelection:(float)fp8;
- (void)moveUpAndModifySelection:(id)fp8;
- (void)pageUpAndModifySelection:(id)fp8;
- (void)moveDownAndModifySelection:(id)fp8;
- (void)pageDownAndModifySelection:(id)fp8;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)fp8;
- (void)moveToEndOfParagraphAndModifySelection:(id)fp8;
- (void)moveToBeginningOfLineAndModifySelection:(id)fp8;
- (void)moveToEndOfLineAndModifySelection:(id)fp8;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)fp8;
- (void)moveToEndOfDocumentAndModifySelection:(id)fp8;
- (void)changeBaseWritingDirectionToRTL:(id)fp8;
- (void)changeBaseWritingDirectionToLTR:(id)fp8;
- (void)yank:(id)fp8;
- (void)yankAndSelect:(id)fp8;
- (void)insertTable:(id)fp8;
@end

@interface NSTextView (NSPasteboard)
+ (id)_readablePasteboardTypesForRichText:(BOOL)fp8 importsGraphics:(BOOL)fp12 usesFontPanel:(BOOL)fp16 usesRuler:(BOOL)fp20 allowsFiltering:(BOOL)fp24;
+ (void)registerForServices;
- (id)_attachmentCellForSelection;
- (id)writablePasteboardTypes;
- (BOOL)_writeStringInRanges:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)_writeStringInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (id)_attributedSubstringForCopyingFromRange:(struct _NSRange)fp8;
- (BOOL)_writeRTFInRanges:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)_writeRTFInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeRTFDInRanges:(id)fp8 toPasteboard:(id)fp12;
- (BOOL)_writeRTFDInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeFontInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeRulerInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeURLInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeURLStringInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeURLNameInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeURLStringsWithNamesInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)_writeLinkStringInRange:(struct _NSRange)fp8 toPasteboard:(id)fp16;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (BOOL)writeSelectionToPasteboard:(id)fp8 types:(id)fp12;
- (id)readablePasteboardTypes;
- (id)preferredPasteboardTypeFromArray:(id)fp8 restrictedToTypesFromArray:(id)fp12;
- (BOOL)_readStringIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_replaceCharactersInRange:(struct _NSRange)fp8 withPastedAttributedString:(id)fp16;
- (BOOL)_readRTFIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readRTFDIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readHTMLIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readColorIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readFilenameStringsIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readFilenamesIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readFontIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readRulerIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readURLIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readURLStringIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readURLStringsWithNamesIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readImageIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)_readMovieIntoRange:(struct _NSRange)fp8 fromPasteboard:(id)fp16;
- (BOOL)readSelectionFromPasteboard:(id)fp8 type:(id)fp12;
- (BOOL)_wantsPastedFile:(id)fp8;
- (BOOL)_wantsPastedFiles:(id)fp8;
- (BOOL)_wantsPastedURL:(id)fp8 allowFileURLs:(BOOL)fp12;
- (BOOL)_readSelectionFromPasteboard:(id)fp8 types:(id)fp12;
- (BOOL)readSelectionFromPasteboard:(id)fp8;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (void)copyFont:(id)fp8;
- (void)copyRuler:(id)fp8;
- (void)copyLink:(id)fp8;
- (void)paste:(id)fp8;
- (void)pasteFont:(id)fp8;
- (void)pasteRuler:(id)fp8;
- (void)pasteAsPlainText:(id)fp8;
- (void)pasteAsRichText:(id)fp8;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
@end

@interface NSSelectionArray : NSArray
{
    unsigned int _count;
    struct _NSRange _firstRange;
    struct _NSRange *_ranges;
}

+ (id)arrayWithRanges:(const struct _NSRange *)fp8 count:(unsigned int)fp12;
+ (id)arrayWithRange:(struct _NSRange)fp8;
+ (id)arrayWithIndexes:(id)fp8;
+ (id)arrayWithArray:(id)fp8;
+ (id)arrayWithObjects:(id *)fp8 count:(unsigned int)fp12;
- (void)dealloc;
- (void)finalize;
- (id)initWithRanges:(const struct _NSRange *)fp8 count:(unsigned int)fp12;
- (id)initWithRange:(struct _NSRange)fp8;
- (id)initWithIndexes:(id)fp8;
- (id)initWithArray:(id)fp8;
- (id)initWithObjects:(id *)fp8 count:(unsigned int)fp12;
- (unsigned int)count;
- (id)objectAtIndex:(unsigned int)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isEqualToArray:(id)fp8;
- (struct _NSRange)firstRange;
- (struct _NSRange)lastRange;
- (struct _NSRange)maximumRange;
- (struct _NSRange)rangeAtIndex:(unsigned int)fp8;
- (unsigned int)indexOfFirstRangeContainingOrFollowing:(unsigned int)fp8;

@end

@interface NSTextViewIvars : NSObject
{
    struct _NSSize textContainerInset;
    struct _NSPoint textContainerOrigin;
    NSLayoutManager *layoutManager;
    NSTextStorage *textStorage;
    struct _NSSize maxBoundsSize;
    struct _NSSize minBoundsSize;
    struct _tvFlags tvFlags;
    NSTextViewSharedData *sharedData;
    NSMutableArray *eventList;
    struct _NSTextDragInfo *dragInfo;
    struct _NSRect dirtyRectForDisplayWithoutLayout;
    struct _NSRect _insertionPointRect;
    NSViewRectCache *_insertionPointRectCache;
    int _trackingRectTag;
    NSEvent *_lastFirstMouseEvent;
    NSTextContainer *textContainer;
}

@end

@interface NSArray (NSSelectionArray)
- (struct _NSRange)firstRange;
- (struct _NSRange)lastRange;
- (struct _NSRange)maximumRange;
- (struct _NSRange)rangeAtIndex:(unsigned int)fp8;
- (unsigned int)indexOfFirstRangeContainingOrFollowing:(unsigned int)fp8;
@end

@interface NSTextView (NSPrivate)
+ (void)_setInsertionPointDisabled:(BOOL)fp8;
+ (BOOL)_insertionPointDisabled;
+ (id)_URLForString:(id)fp8;
+ (id)_URLStringForString:(id)fp8;
- (void)_commonInitIvarBlock;
- (void)_commonInitState;
- (BOOL)_textViewOwnsTextStorage;
- (id)replacementObjectForKeyedArchiver:(id)fp8;
- (id)replacementObjectForArchiver:(id)fp8;
- (void)_drawViewBackgroundInRect:(struct _NSRect)fp8;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (id)_getGlyphIndex:(unsigned int *)fp8 forWindowPoint:(struct _NSPoint)fp12 pinnedPoint:(struct _NSPoint)fp20 anchorPoint:(struct _NSPoint)fp28 useAnchorPoint:(BOOL)fp36 preferredTextView:(id)fp40 partialFraction:(float *)fp44;
- (id)_getGlyphIndex:(unsigned int *)fp8 forWindowPoint:(struct _NSPoint)fp12 pinnedPoint:(struct _NSPoint)fp20 preferredTextView:(id)fp28 partialFraction:(float *)fp32;
- (BOOL)_trackAttachmentClick:(id)fp8 characterIndex:(unsigned int)fp12 glyphIndex:(unsigned int)fp16 attachmentCell:(id)fp20;
- (unsigned int)_clickedCharIndex;
- (BOOL)_range:(struct _NSRange)fp8 containsPoint:(struct _NSPoint)fp16;
- (void)_sizeDownIfPossible;
- (id)_setSuperview:(id)fp8;
- (void)_superviewClipViewFrameChanged:(id)fp8;
- (BOOL)_charRangeIsHighlightOptimizable:(struct _NSRange)fp8 fromOldCharRange:(struct _NSRange)fp16;
- (void)_optimizeHighlightForCharRange:(struct _NSRange)fp8 charRange:(struct _NSRange)fp16 fullSelectionCharRange:(struct _NSRange)fp24 oldSelectionFullCharRange:(struct _NSRange)fp32;
- (void)_fastHighlightGlyphRange:(struct _NSRange)fp8 withinSelectedGlyphRange:(struct _NSRange)fp16;
- (void)_ensureMinAndMaxSizesConsistentWithBounds;
- (id)_stripAttachmentCharactersFromString:(id)fp8;
- (id)_stripAttachmentCharactersFromAttributedString:(id)fp8;
- (id)_stripAttachmentCharactersAndParagraphStylesFromAttributedString:(id)fp8;
- (void)_setAttributes:(id *)fp8 newValues:(id)fp12 range:(struct _NSRange)fp16;
- (BOOL)_canAcceptRichText;
- (BOOL)_canImportGraphics;
- (void)_addToTypingAttributes:(id)fp8 value:(id)fp12;
- (void)_addMultipleToTypingAttributes:(id)fp8;
- (void)_remove:(id *)fp8 andAddMultipleToTypingAttributes:(id)fp12;
- (BOOL)_underlineIsOn;
- (BOOL)_outlineIsOn;
- (void)_giveUpFirstResponder:(int)fp8;
- (void)_fixSharedData;
- (void)_installRulerAccViewForParagraphStyle:(id)fp8 ruler:(id)fp12 enabled:(BOOL)fp16;
- (BOOL)_canChangeRulerMarkers;
- (void)_applyMarkerSettingsFromParagraphStyle:(id)fp8;
- (void)_blinkCaret:(id)fp8;
- (void)_invalidateBlinkTimer:(id)fp8;
- (BOOL)_shouldHaveBlinkTimer;
- (BOOL)_couldHaveBlinkTimer;
- (float)_distanceForVerticalArrowKeyMovement;
- (void)_setDistanceForVerticalArrowKeyMovement:(float)fp8;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)fp8;
- (void)_setFrameSize:(struct _NSSize)fp8 forceScroll:(BOOL)fp16;
- (void)_adjustedCenteredScrollRectToVisible:(struct _NSRect)fp8 forceCenter:(BOOL)fp24;
- (void)_centeredScrollRectToVisible:(struct _NSRect)fp8 forceCenter:(BOOL)fp24;
- (void)_scrollRangeToVisible:(struct _NSRange)fp8 forceCenter:(BOOL)fp16;
- (void)_calculatePageRectsWithOperation:(id)fp8 pageSize:(struct _NSSize)fp12 layoutAssuredComplete:(BOOL)fp20;
- (void)_calculateTotalScaleForPrintingWithOperation:(id)fp8;
- (float)_provideTotalScaleFactorForPrintOperation:(id)fp8;
- (BOOL)knowsPageRange:(struct _NSRange *)fp8;
- (BOOL)knowsPagesFirst:(int *)fp8 last:(int *)fp12;
- (struct _NSRect)rectForPage:(int)fp8;
- (void)adjustPageHeightNew:(float *)fp8 top:(float)fp12 bottom:(float)fp16 limit:(float)fp20;
- (id)_setWindow:(id)fp8;
- (id)_sharedData;
- (id)_ivars;
- (void)_userReplaceRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)_userDeleteRange:(struct _NSRange)fp8;
- (void)setUndoActionName:(id)fp8;
- (void)_setUndoRedoInProgress:(BOOL)fp8;
- (void)_setUseCellFieldEditorUndo:(BOOL)fp8;
- (void)_clearUndoRegistrations;
- (id)attributedSubstringForMarkedRange;
- (void)setWantsNotificationForMarkedText:(BOOL)fp8;
- (BOOL)wantsNotificationForMarkedText;
- (BOOL)_isUnmarking;
- (void)_clearMarkedRange;
- (void)_changeBaseWritingDirection:(int)fp8;
@end

@interface NSTextView (NSSharing)
- (void)_invalidateDisplayForChangeOfSelectionFromRange:(struct _NSRange)fp8 toRange:(struct _NSRange)fp16;
- (struct _NSRange)_fixedSelectionRangeForRange:(struct _NSRange)fp8 affinity:(int)fp16;
- (id)_fixedSelectionRangesForRanges:(id)fp8 affinity:(int)fp12;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (void)setSelectedRanges:(id)fp8 affinity:(int)fp12 stillSelecting:(BOOL)fp16;
- (int)selectionAffinity;
- (int)selectionGranularity;
- (void)setSelectionGranularity:(int)fp8;
- (void)setSelectedTextAttributes:(id)fp8;
- (id)selectedTextAttributes;
- (void)setLinkTextAttributes:(id)fp8;
- (id)linkTextAttributes;
- (void)setInsertionPointColor:(id)fp8;
- (id)insertionPointColor;
- (BOOL)_usesSplitCursor;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)fp8;
- (void)setMarkedTextAttributes:(id)fp8;
- (id)markedTextAttributes;
- (void)setRulerVisible:(BOOL)fp8;
- (BOOL)_continuousCheckingAllowed;
- (BOOL)isContinuousSpellCheckingEnabled;
- (void)_preflightSpellChecker:(id)fp8;
- (void)setContinuousSpellCheckingEnabled:(BOOL)fp8;
- (void)toggleContinuousSpellChecking:(id)fp8;
- (BOOL)isContinuousGrammarCheckingEnabled;
- (void)setContinuousGrammarCheckingEnabled:(BOOL)fp8;
- (void)toggleContinuousGrammarChecking:(id)fp8;
- (BOOL)usesRuler;
- (void)setUsesRuler:(BOOL)fp8;
- (int)spellCheckerDocumentTag;
- (id)typingAttributes;
- (void)setTypingAttributes:(id)fp8;
- (void)setDefaultParagraphStyle:(id)fp8;
- (id)defaultParagraphStyle;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)fp8 replacementString:(id)fp16;
- (BOOL)shouldChangeTextInRanges:(id)fp8 replacementStrings:(id)fp12;
- (void)didChangeText;
- (id)_blockSafeRangesForRange:(struct _NSRange)fp8;
- (struct _NSRange)rangeForUserTextChange;
- (id)rangesForUserTextChange;
- (struct _NSRange)rangeForUserCharacterAttributeChange;
- (id)rangesForUserCharacterAttributeChange;
- (struct _NSRange)_rangeForUserBaseWritingDirectionChange;
- (id)_rangesForUserBaseWritingDirectionChange;
- (struct _NSRange)rangeForUserParagraphAttributeChange;
- (id)rangesForUserParagraphAttributeChange;
- (BOOL)isSelectable;
- (void)setSelectable:(BOOL)fp8;
- (BOOL)isEditable;
- (void)setEditable:(BOOL)fp8;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)fp8;
- (void)breakUndoCoalescing;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)fp8;
- (BOOL)importsGraphics;
- (void)setImportsGraphics:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)isFieldEditor;
- (void)setFieldEditor:(BOOL)fp8;
- (BOOL)usesFontPanel;
- (void)setUsesFontPanel:(BOOL)fp8;
- (BOOL)usesFindPanel;
- (void)setUsesFindPanel:(BOOL)fp8;
- (BOOL)isRulerVisible;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setDrawsBackground:(BOOL)fp8;
- (BOOL)drawsBackground;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (void)setSelectedRanges:(id)fp8;
- (BOOL)allowsDocumentBackgroundColorChange;
- (void)setAllowsDocumentBackgroundColorChange:(BOOL)fp8;
- (void)_invalidateDisplayForMarkedOrSelectedRange;
- (BOOL)_validateAndCommitTokens;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)becomeKeyWindow;
- (void)becomeMainWindow;
- (void)resignKeyWindow;
- (void)removeFromSuperview;
- (BOOL)smartInsertDeleteEnabled;
- (void)setSmartInsertDeleteEnabled:(BOOL)fp8;
- (void)toggleSmartInsertDelete:(id)fp8;
- (struct _NSRange)smartDeleteRangeForProposedRange:(struct _NSRange)fp8;
- (id)smartInsertBeforeStringForString:(id)fp8 replacingRange:(struct _NSRange)fp12;
- (id)smartInsertAfterStringForString:(id)fp8 replacingRange:(struct _NSRange)fp12;
- (void)smartInsertForString:(id)fp8 replacingRange:(struct _NSRange)fp12 beforeString:(id *)fp20 afterString:(id *)fp24;
@end

@interface NSTextView (NSTextViewAccessibility)
- (id)accessibilityElementForAttachment:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (void)accessibilitySetSelectedTextAttribute:(id)fp8;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)fp8;
- (id)accessibilityNumberOfCharactersAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)fp8;
- (id)accessibilitySharedTextUIElementsAttribute;
- (BOOL)accessibilityIsSharedTextUIElementsAttributeSettable;
- (id)accessibilitySharedCharacterRangeAttribute;
- (BOOL)accessibilityIsSharedCharacterRangeAttributeSettable;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (id)accessibilityLineForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForLineAttributeForParameter:(id)fp8;
- (id)accessibilityStringForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (struct _NSPoint)accessibilityWindowPointForShowMenu;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (struct _NSRect)_accessibilityBoundsOfChild:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSTextViewSharedData : NSObject <NSCoding>
{
    struct __sdFlags _sdFlags;
    struct _NSRange _selectedCharRange;
    struct _NSRange _dragAndDropCharRange;
    float _distanceForVerticalArrowKeyMovement;
    struct _NSRange _markedCharRange;
    NSDictionary *_markedAttributesDict;
    struct __CFRunLoopTimer *_blinkTimer;
    NSTextContainer *_blinkContainer;
    struct _NSRect _blinkRect;
    id _delegate;
    NSTextView *_notifyingTextView;
    NSColor *_backgroundColor;
    NSDictionary *_selectedAttributesDict;
    NSColor *_insertionPointColor;
    int _spellCheckerDocumentTag;
    NSDictionary *_typingAttributesDict;
    NSTextView *_rulerClient;
    NSRulerView *_ruler;
    NSParagraphStyle *_rulerStyle;
    int _altKeypadBufferedSum;
    unsigned int _clickedCharIndex;
    id _undoTextObject;
    NSAttributedString *_attributedStringForMarkedRange;
    NSArray *_validMarkedAttributesDict;
    struct _NSRange _excludedSpellingCharRange;
    struct _NSRange _emacsMarkCharRange;
    struct __sdFlags2 _sdFlags2;
    unsigned int _pastedGraphicCount;
    NSDictionary *_linkAttributesDict;
    NSParagraphStyle *_defaultParagraphStyle;
    struct __CFRunLoopTimer *_toolTipTimer;
    struct _NSPoint _toolTipPoint;
    NSWindow *_toolTipWindow;
    NSTextView *_toolTipTrackingRectClient;
    int _toolTipTrackingRectTag;
    NSInputContext *_inputContext;
    NSSelectionArray *_selectedRanges;
    NSSelectionArray *_savedSelectedRanges;
    NSSelectionArray *_dragAndDropCharRanges;
    struct _NSRect _alternateBlinkRect;
    NSDictionary *_markedTypingAttributesDict;
}

+ (void)initialize;
- (void)_commonInit;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setBackgroundColor:(id)fp8;
- (void)setSelectedTextAttributes:(id)fp8;
- (void)setLinkTextAttributes:(id)fp8;
- (void)setInsertionPointColor:(id)fp8;
- (void)setMarkedTextAttributes:(id)fp8;
- (id)typingAttributes;
- (void)setTypingAttributes:(id)fp8;
- (void)setDefaultParagraphStyle:(id)fp8;
- (void)setSelectedRanges:(id)fp8;
- (void)setDragAndDropCharRanges:(id)fp8;
- (void)setDelegate:(id)fp8 withNotifyingTextView:(id)fp12;
- (BOOL)isCoalescing;
- (void)stopCoalescing;
- (void)coalesceInTextView:(id)fp8 affectedRange:(struct _NSRange)fp12 replacementRange:(struct _NSRange)fp20;
- (void)changeWillBeUndone:(id)fp8;
- (void)clearMarkedRange;
- (BOOL)acceptsGlyphInfo;
- (void)setAcceptsGlyphInfo:(BOOL)fp8;
- (id)validAttributesForMarkedText;
- (void)setWantsNotificationForMarkedText:(BOOL)fp8;
- (BOOL)wantsNotificationForMarkedText;
- (id)inputContextForFirstTextView:(id)fp8;

@end

@interface NSTextViewTemplate : NSViewTemplate
{
    id _contents;
    NSColor *_backgroundColor;
    NSDictionary *_selectedTextAttributes;
    NSColor *_insertionPointColor;
    struct _NSSize _containerSize;
    struct _NSSize _minSize;
    struct _NSSize _maxSize;
    id _delegate;
    struct __tvtFlags _tvtFlags;
    NSDictionary *_typingAttrs;
}

+ (void)initialize;
- (id)initWithView:(id)fp8 className:(id)fp12;
- (void)dealloc;
- (id)createRealObject;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSThemeFrame : NSTitledFrame
{
    NSButton *toolbarButton;
    int toolbarVisibleStatus;
    NSImage *showToolbarTransitionImage;
    struct _NSSize showToolbarPreWindowSize;
    NSButton *modeButton;
    int leftGroupTrackingTagNum;
    int rightGroupTrackingTagNum;
    BOOL mouseInsideLeftGroup;
    BOOL mouseInsideRightGroup;
    int widgetState;
    NSString *displayName;
}

+ (void)initialize;
+ (void)drawBevel:(struct _NSRect)fp8 inFrame:(struct _NSRect)fp24 topCornerRounded:(BOOL)fp40;
+ (float)_windowBorderThickness:(unsigned int)fp8;
+ (float)_minXWindowBorderWidth:(unsigned int)fp8;
+ (float)_maxXWindowBorderWidth:(unsigned int)fp8;
+ (float)_minYWindowBorderHeight:(unsigned int)fp8;
+ (float)_windowTitlebarButtonSpacingWidth:(unsigned int)fp8;
+ (float)_windowFileButtonSpacingWidth:(unsigned int)fp8;
+ (float)_minXTitlebarWidgetInset:(unsigned int)fp8;
+ (float)_maxXTitlebarWidgetInset:(unsigned int)fp8;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (float)_windowSideTitlebarTitleMinWidth:(unsigned int)fp8;
+ (float)_windowTitlebarTitleMinHeight:(unsigned int)fp8;
+ (float)_sideTitlebarWidth:(unsigned int)fp8;
+ (float)_titlebarHeight:(unsigned int)fp8;
+ (float)_resizeHeight:(unsigned int)fp8;
+ (BOOL)_resizeFromEdge;
+ (struct _NSSize)sizeOfTitlebarButtons:(unsigned int)fp8;
+ (float)_contentToFrameMinXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMaxXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMinYHeight:(unsigned int)fp8;
+ (float)_contentToFrameMaxYHeight:(unsigned int)fp8;
+ (unsigned int)_validateStyleMask:(unsigned int)fp8;
- (struct _NSSize)_topCornerSize;
- (struct _NSSize)_bottomCornerSize;
- (void *)_createWindowOpaqueShape;
- (void)shapeWindow;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28 topView:(BOOL)fp32;
- (void *)_regionForOpaqueDescendants:(struct _NSRect)fp8 forMove:(BOOL)fp24;
- (void)_drawFrameInterior:(struct _NSRect *)fp8 clip:(struct _NSRect)fp12;
- (void)_setTextShadow:(BOOL)fp8;
- (BOOL)_isOnePieceTitleAndToolbar;
- (void)_drawUnifiedToolbarBackgroundInRect:(struct _NSRect)fp8 withState:(int)fp24;
- (void)_drawUnifiedToolbar:(int)fp8;
- (void)_drawTitleBar:(struct _NSRect)fp8;
- (void)_drawResizeIndicators:(struct _NSRect)fp8;
- (void)_drawFrameRects:(struct _NSRect)fp8;
- (void)drawFrame:(struct _NSRect)fp8;
- (id)contentFill;
- (void)viewDidEndLiveResize;
- (float)contentAlpha;
- (void)setThemeFrameWidgetState:(int)fp8;
- (BOOL)constrainResizeEdge:(int *)fp8 withDelta:(struct _NSSize)fp12 elapsedTime:(float)fp20;
- (void)addFileButton:(id)fp8;
- (void)_updateButtons;
- (void)_updateButtonState;
- (id)newCloseButton;
- (id)newZoomButton;
- (id)newMiniaturizeButton;
- (id)newToolbarButton;
- (id)newFileButton;
- (void)_resetTitleBarButtons;
- (void)setDocumentEdited:(BOOL)fp8;
- (id)toolbarButton;
- (id)modeButton;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)setIsResizable:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)_canHaveToolbar;
- (BOOL)_toolbarIsInTransition;
- (BOOL)_toolbarIsShown;
- (BOOL)_toolbarIsHidden;
- (id)_toolbarView;
- (id)_toolbar;
- (float)_distanceFromToolbarBaseToTitlebar;
- (unsigned int)_shadowFlags;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (struct _NSRect)contentRect;
- (struct _NSRect)_contentRectExcludingToolbar;
- (struct _NSRect)_contentRectIncludingToolbarAtHome;
- (void)_setToolbarShowHideResizeWeightingOptimizationOn:(BOOL)fp8;
- (BOOL)_usingToolbarShowHideWeightingOptimization;
- (void)handleSetFrameCommonRedisplay;
- (void)_startLiveResizeAsTopLevel;
- (void)_endLiveResizeAsTopLevel;
- (void)_growContentReshapeContentAndToolbarView:(int)fp8 animate:(BOOL)fp12;
- (BOOL)_growWindowReshapeContentAndToolbarView:(int)fp8 animate:(BOOL)fp12;
- (void)_reshapeContentAndToolbarView:(int)fp8 resizeWindow:(BOOL)fp12 animate:(BOOL)fp16;
- (void)_toolbarFrameSizeChanged:(id)fp8 oldSize:(struct _NSSize)fp12;
- (void)_syncToolbarPosition;
- (void)_showHideToolbar:(int)fp8 resizeWindow:(BOOL)fp12 animate:(BOOL)fp16;
- (void)_showToolbarWithAnimation:(BOOL)fp8;
- (void)_hideToolbarWithAnimation:(BOOL)fp8;
- (void)_drawToolbarTransitionIfNecessary;
- (void)drawRect:(struct _NSRect)fp8;
- (void)resetCursorRects;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (BOOL)_shouldBeTreatedAsInkEventInInactiveWindow:(id)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (struct _NSRect)_leftGroupRect;
- (struct _NSRect)_rightGroupRect;
- (void)_updateWidgets;
- (void)_updateMouseTracking;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)_setMouseEnteredGroup:(BOOL)fp8 entered:(BOOL)fp12;
- (BOOL)_mouseInGroup:(id)fp8;
- (struct _NSSize)miniaturizedSize;
- (float)_minXTitlebarDecorationMinWidth;
- (float)_maxXTitlebarDecorationMinWidth;
- (struct _NSSize)minFrameSize;
- (float)_windowBorderThickness;
- (float)_windowTitlebarXResizeBorderThickness;
- (float)_windowTitlebarYResizeBorderThickness;
- (float)_windowResizeBorderThickness;
- (float)_minXWindowBorderWidth;
- (float)_maxXWindowBorderWidth;
- (float)_minYWindowBorderHeight;
- (float)_maxYWindowBorderHeight;
- (float)_minYTitlebarButtonsOffset;
- (float)_minYTitlebarTitleOffset;
- (float)_sideTitlebarWidth;
- (float)_titlebarHeight;
- (struct _NSRect)_defaultTitlebarTitleRect;
- (struct _NSRect)_titlebarTitleRect;
- (struct _NSRect)titlebarRect;
- (float)_windowTitlebarTitleMinHeight;
- (struct _NSSize)_sizeOfTitlebarFileButton;
- (struct _NSSize)sizeOfTitlebarToolbarButton;
- (float)_windowTitlebarButtonSpacingWidth;
- (float)_windowFileButtonSpacingWidth;
- (float)_minXTitlebarWidgetInset;
- (float)_maxXTitlebarWidgetInset;
- (float)_minXTitlebarButtonsWidth;
- (float)_maxXTitlebarButtonsWidth;
- (struct _NSPoint)_closeButtonOrigin;
- (struct _NSPoint)_zoomButtonOrigin;
- (struct _NSPoint)_collapseButtonOrigin;
- (struct _NSPoint)_toolbarButtonOrigin;
- (struct _NSPoint)_fileButtonOrigin;
- (void)_tileTitlebarAndRedisplay:(BOOL)fp8;
- (struct _NSRect)_commandPopupRect;
- (void)_resetDragMargins;
- (float)_maxYTitlebarDragHeight;
- (float)_minXTitlebarDragWidth;
- (float)_maxXTitlebarDragWidth;
- (float)_contentToFrameMinXWidth;
- (float)_contentToFrameMaxXWidth;
- (float)_contentToFrameMinYHeight;
- (float)_contentToFrameMaxYHeight;
- (float)_windowResizeCornerThickness;
- (struct _NSRect)_minYResizeRect;
- (struct _NSRect)_minYminXResizeRect;
- (struct _NSRect)_minYmaxXResizeRect;
- (struct _NSRect)_minXResizeRect;
- (struct _NSRect)_minXminYResizeRect;
- (struct _NSRect)_minXmaxYResizeRect;
- (struct _NSRect)_maxYResizeRect;
- (struct _NSRect)_maxYminXResizeRect;
- (struct _NSRect)_maxYmaxXResizeRect;
- (struct _NSRect)_maxXResizeRect;
- (struct _NSRect)_maxXminYResizeRect;
- (struct _NSRect)_maxXmaxYResizeRect;
- (struct _NSRect)_minXTitlebarResizeRect;
- (struct _NSRect)_maxXTitlebarResizeRect;
- (struct _NSRect)_minXBorderRect;
- (struct _NSRect)_maxXBorderRect;
- (struct _NSRect)_maxYBorderRect;
- (struct _NSRect)_minYBorderRect;
- (void)_setUtilityWindow:(BOOL)fp8;
- (BOOL)_isUtility;
- (float)_sheetHeightAdjustment;
- (void)_setSheet:(BOOL)fp8;
- (BOOL)_isSheet;
- (BOOL)_isResizable;
- (BOOL)_isClosable;
- (BOOL)_isMiniaturizable;
- (BOOL)_hasToolbar;
- (struct _NSRect)_growBoxRect;
- (void)_drawGrowBoxWithClip:(struct _NSRect)fp8;
- (BOOL)_inactiveButtonsNeedMask;
- (void)mouseDown:(id)fp8;
- (id)_displayName;
- (void)_setDisplayName:(id)fp8;

@end

@interface NSThemeDocumentButton : NSDocumentDragButton
{
    BOOL _documentEdited;
}

+ (void)initialize;
- (void)setDocumentEdited:(BOOL)fp8;
- (BOOL)documentEdited;
- (void)mouseDown:(id)fp8;
- (void)setRepresentedFilename:(id)fp8;

@end

@interface NSThemeDocumentButtonCell : NSButtonCell
{
}

- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface _NSThemeCloseWidget : _NSThemeWidget
{
}

+ (void)initialize;
+ (id)closeWidgetInView:(id)fp8 withButtonID:(int)fp12 action:(SEL)fp16;
- (void)setDocumentEdited:(BOOL)fp8;

@end

@interface _NSThemeCloseWidgetCell : _NSThemeWidgetCell
{
    BOOL _edited;
}

- (int)getState:(id)fp8;
- (BOOL)setEditedFlag:(BOOL)fp8;

@end

@interface _NSThemeWidget : NSButton
{
    int _trackingTagNum;
}

+ (void)initialize;
+ (id)widgetInView:(id)fp8 withButtonID:(int)fp12 action:(SEL)fp16;
- (id)initWithButtonID:(int)fp8;
- (void)dealloc;
- (void)mouseDown:(id)fp8;
- (void)update;

@end

@interface _NSThemeWidgetCell : NSButtonCell
{
    int _buttonID;
    BOOL _hasRollover;
    BOOL _isObscured;
}

- (void)setButtonID:(int)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (int)getState:(id)fp8;
- (int)getValue:(id)fp8;
- (void)setObscured:(BOOL)fp8;
- (BOOL)isObscured;
- (void)update;

@end

@interface NSView (NSStandardWindowButtons)
- (id)_buttonOfClass:(Class)fp8 action:(SEL)fp12;
@end

@interface NSView (NSThemeFrame_Private)
- (void)_addCornerDirtyRectForRect:(struct _NSRect)fp8 list:(struct _NSRect *)fp24 count:(int *)fp28;
@end

@interface NSThemeDocumentButtonCell (NSThemeDocumentButtonCellAccessibility)
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface _NSThemeCloseWidgetCell (_NSThemeCloseWidgetCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityEditedAttribute;
- (BOOL)accessibilityIsEditedAttributeSettable;
@end

@interface _NSThemeWidgetCell (_NSThemeWidgetCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityTitleAttribute;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSThemeTearOffFrame : NSTearOffFrame
{
}

- (void)shapeWindow;
- (void)_drawTitlebar:(struct _NSRect)fp8;
- (void)drawFrame:(struct _NSRect)fp8;
- (struct _NSSize)sizeOfTitlebarButtons;
- (id)newCloseButton;
- (struct _NSPoint)_closeButtonOrigin;

@end

@interface NSTiogaGraphicsContext : NSPersistentGraphicsContext
{
    struct OpaquePMPrintSettings *_printSettings;
    struct OpaquePMPageFormat *_pageFormat;
    BOOL needsToEndDocument;
}

- (void)dealloc;
- (void)finalize;
- (void)beginDocumentWithTitle:(id)fp8;
- (void)endDocument;
- (void)beginPage:(struct _NSRect)fp8;
- (void)endPage;

@end

@interface NSTitledFrame : NSFrameView
{
    int resizeFlags;
    NSDocumentDragButton *fileButton;
    struct _NSSize titleCellSize;
}

+ (void)initialize;
+ (float)_windowBorderThickness:(unsigned int)fp8;
+ (float)_minXWindowBorderWidth:(unsigned int)fp8;
+ (float)_maxXWindowBorderWidth:(unsigned int)fp8;
+ (float)_minYWindowBorderHeight:(unsigned int)fp8;
+ (BOOL)_resizeFromEdge;
+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (struct _NSSize)minContentSizeForMinFrameSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (struct _NSSize)_titleCellSizeForTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (float)_titleCellHeight:(unsigned int)fp8;
+ (float)_windowTitlebarTitleMinHeight:(unsigned int)fp8;
+ (float)_titlebarHeight:(unsigned int)fp8;
+ (struct _NSSize)sizeOfTitlebarButtons:(unsigned int)fp8;
+ (float)windowTitlebarLinesSpacingWidth:(unsigned int)fp8;
+ (float)windowTitlebarTitleLinesSpacingWidth:(unsigned int)fp8;
+ (float)_contentToFrameMinXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMaxXWidth:(unsigned int)fp8;
+ (float)_contentToFrameMinYHeight:(unsigned int)fp8;
+ (float)_contentToFrameMaxYHeight:(unsigned int)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 owner:(id)fp28;
- (void)dealloc;
- (void)setIsClosable:(BOOL)fp8;
- (void)setIsResizable:(BOOL)fp8;
- (void)_resetTitleFont;
- (void)_setUtilityWindow:(BOOL)fp8;
- (BOOL)isOpaque;
- (BOOL)worksWhenModal;
- (void)propagateFrameDirtyRects:(struct _NSRect)fp8;
- (void)_showDrawRect:(struct _NSRect)fp8;
- (id)frameHighlightColor;
- (id)frameShadowColor;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)tileAndSetWindowShape:(BOOL)fp8;
- (void)tile;
- (void)_tileTitlebarAndRedisplay:(BOOL)fp8;
- (void)setTitle:(id)fp8;
- (BOOL)_shouldRepresentFilename;
- (void)setRepresentedFilename:(id)fp8;
- (void)_drawTitleStringIn:(struct _NSRect)fp8 withColor:(id)fp24;
- (id)titleFont;
- (id)titleButtonOfClass:(Class)fp8;
- (id)initTitleButton:(id)fp8;
- (id)newCloseButton;
- (id)newZoomButton;
- (id)newMiniaturizeButton;
- (id)newFileButton;
- (id)fileButton;
- (void)_removeButtons;
- (void)_updateButtons;
- (BOOL)_eventInTitlebar:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (void)rightMouseUp:(id)fp8;
- (int)resizeEdgeForEvent:(id)fp8;
- (struct _NSSize)_resizeDeltaFromPoint:(struct _NSPoint)fp8 toEvent:(id)fp16;
- (struct _NSRect)_validFrameForResizeFrame:(struct _NSRect)fp8 fromResizeEdge:(int)fp24;
- (struct _NSRect)frame:(struct _NSRect)fp8 resizedFromEdge:(int)fp24 withDelta:(struct _NSSize)fp28;
- (BOOL)constrainResizeEdge:(int *)fp8 withDelta:(struct _NSSize)fp12 elapsedTime:(float)fp20;
- (void)resizeWithEvent:(id)fp8;
- (int)resizeFlags;
- (void)resetCursorRects;
- (void)setDocumentEdited:(BOOL)fp8;
- (struct _NSSize)miniaturizedSize;
- (struct _NSSize)minFrameSize;
- (float)_windowBorderThickness;
- (float)_windowTitlebarXResizeBorderThickness;
- (float)_windowTitlebarYResizeBorderThickness;
- (float)_windowResizeBorderThickness;
- (float)_minXWindowBorderWidth;
- (float)_maxXWindowBorderWidth;
- (float)_minYWindowBorderHeight;
- (id)_customTitleCell;
- (void)_invalidateTitleCellSize;
- (void)_invalidateTitleCellWidth;
- (float)_titleCellHeight;
- (struct _NSSize)_titleCellSize;
- (float)_titlebarHeight;
- (struct _NSRect)titlebarRect;
- (struct _NSRect)_maxTitlebarTitleRect;
- (struct _NSRect)_titlebarTitleRect;
- (float)_windowTitlebarTitleMinHeight;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (struct _NSSize)sizeOfTitlebarButtons;
- (struct _NSSize)_sizeOfTitlebarFileButton;
- (float)_windowTitlebarButtonSpacingWidth;
- (float)_minXTitlebarButtonsWidth;
- (float)_maxXTitlebarButtonsWidth;
- (int)_numberOfTitlebarLines;
- (float)windowTitlebarLinesSpacingWidth;
- (float)windowTitlebarTitleLinesSpacingWidth;
- (float)_minLinesWidthWithSpace;
- (struct _NSRect)_minXTitlebarLinesRectWithTitleCellRect:(struct _NSRect)fp8;
- (struct _NSRect)_maxXTitlebarLinesRectWithTitleCellRect:(struct _NSRect)fp8;
- (float)_minXTitlebarDecorationMinWidth;
- (float)_maxXTitlebarDecorationMinWidth;
- (struct _NSPoint)_closeButtonOrigin;
- (struct _NSPoint)_zoomButtonOrigin;
- (struct _NSPoint)_collapseButtonOrigin;
- (struct _NSPoint)_fileButtonOrigin;
- (float)_maxYTitlebarDragHeight;
- (float)_minXTitlebarDragWidth;
- (float)_maxXTitlebarDragWidth;
- (float)_contentToFrameMinXWidth;
- (float)_contentToFrameMaxXWidth;
- (float)_contentToFrameMinYHeight;
- (float)_contentToFrameMaxYHeight;
- (struct _NSRect)contentRect;
- (float)_windowResizeCornerThickness;
- (struct _NSRect)_minYResizeRect;
- (struct _NSRect)_minYminXResizeRect;
- (struct _NSRect)_minYmaxXResizeRect;
- (struct _NSRect)_minXResizeRect;
- (struct _NSRect)_minXminYResizeRect;
- (struct _NSRect)_minXmaxYResizeRect;
- (struct _NSRect)_maxYResizeRect;
- (struct _NSRect)_maxYminXResizeRect;
- (struct _NSRect)_maxYmaxXResizeRect;
- (struct _NSRect)_maxXResizeRect;
- (struct _NSRect)_maxXminYResizeRect;
- (struct _NSRect)_maxXmaxYResizeRect;
- (struct _NSRect)_minXTitlebarResizeRect;
- (struct _NSRect)_maxXTitlebarResizeRect;
- (struct _NSRect)_minXBorderRect;
- (struct _NSRect)_maxXBorderRect;
- (struct _NSRect)_maxYBorderRect;
- (struct _NSRect)_minYBorderRect;

@end

@interface NSToolbar : NSObject
{
    NSString *_toolbarIdentifier;
    NSMutableArray *_currentItems;
    NSMutableArray *_currentItemIdentifiers;
    NSDictionary *_initPListDatabase;
    id _initPListTarget;
    NSString *_selectedItemIdentifier;
    void *_metrics;
    id _delegate;
    NSWindow *_window;
    id _configPalette;
    id _toolbarView;
    int _syncPostEnabledCount;
    struct __tbFlags _tbFlags;
    int _customizationSheetWidth;
    id _tbReserved;
}

+ (BOOL)_allowSmallIcons;
+ (void)_registerToolbarInstance:(id)fp8;
+ (void)_unregisterToolbarInstance:(id)fp8;
+ (id)toolbarInstancesWithIdentifier:(id)fp8;
+ (id)_newUnknownItemWithItemIdentifier:(id)fp8;
+ (id)_newPlaceholderItemWithItemIdentifier:(id)fp8;
+ (id)_newStandardItemWithItemIdentifier:(id)fp8;
- (void)_toolbarRegisterForNotifications;
- (void)_toolbarUnregisterForNotifications;
- (void)_toolbarCommonBeginInit;
- (void)_toolbarCommonFinishInit;
- (id)initWithIdentifier:(id)fp8;
- (id)initFromPList:(id)fp8 target:(id)fp12 andIdentifier:(id)fp16;
- (id)_toolbarAuxiliary:(BOOL)fp8;
- (void)_deallocAuxiliary;
- (void)dealloc;
- (void)finalize;
- (void)_checkForObsoleteDelegateMethodsInObject:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)_setFirstMoveableItemIndex:(int)fp8;
- (int)_firstMoveableItemIndex;
- (void)_setWantsToolbarContextMenu:(BOOL)fp8;
- (BOOL)_wantsToolbarContextMenu;
- (void)_setCustomizesAlwaysOnClickAndDrag:(BOOL)fp8;
- (BOOL)_customizesAlwaysOnClickAndDrag;
- (void)setCustomizationSheetWidth:(int)fp8;
- (void)_setEnableDelegateNotifications:(BOOL)fp8;
- (void)_setToolbarViewWindow:(id)fp8;
- (void)_setToolbarView:(id)fp8;
- (id)_toolbarView;
- (id)_customMetrics;
- (void)_setMetrics:(struct __NSToolbarMetrics *)fp8;
- (const struct __NSToolbarMetrics *)_metrics;
- (void)_loadInitialItemIdentifiers:(id)fp8 requireImmediateLoad:(BOOL)fp12;
- (void)_loadViewIfNecessary;
- (void)_loadFromUDIfNecessary;
- (BOOL)_prefersToBeShown;
- (void)_setHideWithoutResizingWindowHint:(BOOL)fp8;
- (BOOL)_hideWithoutResizingWindowHint;
- (void)_windowWillShowToolbar;
- (void)_windowDidHideToolbar;
- (void)_show:(id)fp8;
- (void)_hide:(id)fp8;
- (void)_toggleShown:(id)fp8;
- (void)toggleShown:(id)fp8;
- (void)makeShown:(BOOL)fp8;
- (BOOL)isShown;
- (void)setVisible:(BOOL)fp8;
- (BOOL)isVisible;
- (void)runConfigurationPalette:(id)fp8;
- (BOOL)configurationPaletteIsRunning;
- (void)setAllowsUserConfiguration:(BOOL)fp8;
- (BOOL)allowsUserConfiguration;
- (void)runCustomizationPalette:(id)fp8;
- (id)_customizationPaletteSheetWindow;
- (void)_endCustomizationPalette:(id)fp8;
- (BOOL)customizationPaletteIsRunning;
- (BOOL)_isEditing;
- (void)_endCustomizationPanel;
- (BOOL)_canRunCustomizationPanel;
- (void)_runCustomizationPanel;
- (void)_configSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)_sizeModeIsValidForCurrentDisplayMode:(int)fp8;
- (void)setSizeMode:(int)fp8;
- (int)sizeMode;
- (void)setDisplayMode:(int)fp8;
- (void)setShowsBaselineSeparator:(BOOL)fp8;
- (BOOL)showsBaselineSeparator;
- (BOOL)_allowsDisplayMode:(int)fp8;
- (BOOL)_allowsSizeMode:(int)fp8;
- (id)selectableItemIdentifiers;
- (BOOL)_isSelectableItemIdentifier:(id)fp8;
- (void)_setNeedsDisplayForItemIdentifierSelection:(id)fp8;
- (void)setSelectedItemIdentifier:(id)fp8;
- (id)selectedItemIdentifier;
- (int)_nextDisplayMode;
- (int)_previousDisplayMode;
- (int)displayMode;
- (void)_setNextSizeAndDisplayMode;
- (void)_setPreviousSizeAndDisplayMode;
- (void)_setBackgroundColor:(id)fp8;
- (id)_backgroundColor;
- (BOOL)_drawsBackground;
- (void)setAllowsUserCustomization:(BOOL)fp8;
- (BOOL)allowsUserCustomization;
- (BOOL)_allowsDuplicateItems;
- (id)identifier;
- (id)_items;
- (int)_numberOfItems;
- (id)items;
- (id)visibleItems;
- (BOOL)_sanityCheckPListDatabase:(id)fp8;
- (id)_itemAtIndex:(int)fp8;
- (id)_findFirstItemInArray:(id)fp8 withItemIdentifier:(id)fp12;
- (BOOL)_keyboardLoopNeedsUpdating;
- (void)_setKeyboardLoopNeedsUpdating:(BOOL)fp8;
- (void)_computeToolbarItemKeyboardLoopIfNecessary;
- (void)_makeFirstResponderForKeyboardHotKeyEvent;
- (void)_forceAppendItem:(id)fp8;
- (void)_forceInsertItem:(id)fp8 atIndex:(int)fp12;
- (void)_forceReplaceItemAtIndex:(int)fp8 withItem:(id)fp12;
- (void)_forceMoveItemFromIndex:(int)fp8 toIndex:(int)fp12;
- (void)_forceRemoveItemFromIndex:(int)fp8;
- (void)_appendNewItemWithItemIdentifier:(id)fp8 notifyDelegate:(BOOL)fp12 notifyView:(BOOL)fp16 notifyFamilyAndUpdateDefaults:(BOOL)fp20;
- (void)_insertNewItemWithItemIdentifier:(id)fp8 atIndex:(int)fp12 notifyDelegate:(BOOL)fp16 notifyView:(BOOL)fp20 notifyFamilyAndUpdateDefaults:(BOOL)fp24;
- (void)_moveItemFromIndex:(int)fp8 toIndex:(int)fp12 notifyDelegate:(BOOL)fp16 notifyView:(BOOL)fp20 notifyFamilyAndUpdateDefaults:(BOOL)fp24;
- (void)_removeItemAtIndex:(int)fp8 notifyDelegate:(BOOL)fp12 notifyView:(BOOL)fp16 notifyFamilyAndUpdateDefaults:(BOOL)fp20;
- (void)_setCurrentItemsToItemIdentifiers:(id)fp8 notifyDelegate:(BOOL)fp12 notifyView:(BOOL)fp16 notifyFamilyAndUpdateDefaults:(BOOL)fp20;
- (void)_loadAllPlaceholderItems;
- (void)insertItemWithItemIdentifier:(id)fp8 atIndex:(int)fp12;
- (void)removeItemAtIndex:(int)fp8;
- (void)_userInsertItemWithItemIdentifier:(id)fp8 atIndex:(int)fp12;
- (void)_userMoveItemFromIndex:(int)fp8 toIndex:(int)fp12;
- (void)_userRemoveItemAtIndex:(int)fp8;
- (void)_userResetToDefaultConfiguration;
- (void)_userSetCurrentItemsToItemIdentifiers:(id)fp8;
- (void)_replaceAllItemsAndSetNewWithItemIdentifiers:(id)fp8;
- (BOOL)_canUserSetVisibilityPriority;
- (void)_disableChangeSync;
- (void)_enableChangeSync;
- (BOOL)_changeSyncPostingEnabled;
- (void)_notifyDelegate_DidRemoveItem:(id)fp8;
- (void)_notifyDelegate_DidRemoveItems:(id)fp8;
- (void)_notifyDelegate_WillAddItem:(id)fp8;
- (void)_notifyFamily_DidRemoveItemAtIndex:(int)fp8;
- (void)_notifyView_DidRemoveItemAtIndex:(int)fp8;
- (void)_notifyFamily_MovedFromIndex:(int)fp8 toIndex:(int)fp12;
- (void)_notifyView_MovedFromIndex:(int)fp8 toIndex:(int)fp12;
- (void)_notifyFamily_InsertedNewItem:(id)fp8 atIndex:(int)fp12;
- (void)_notifyView_InsertedNewItem:(id)fp8 atIndex:(int)fp12;
- (void)_notifyFamily_DidSetAllCurrentItems:(id)fp8;
- (void)_notifyView_DidSetAllCurrentItems:(id)fp8;
- (void)_noteToolbarSizeModeChangedAndPostSyncSEL;
- (void)_noteToolbarDisplayModeChangedAndPostSyncSEL;
- (void)_noteItemUserVisibilityPriorityChanged:(id)fp8;
- (void)_noteToolbarShowsBaselinePropertyChanged;
- (id)_userVisibilityPriorityValues;
- (void)_syncToolbarItemUserVisibilityPriorityToValues:(id)fp8;
- (void)_syncToChangedToolbar:(id)fp8 itemRemoved:(id)fp12;
- (void)_syncToChangedToolbar:(id)fp8 itemMoved:(id)fp12;
- (void)_syncToChangedToolbar:(id)fp8 itemInserted:(id)fp12;
- (void)_syncToChangedToolbar:(id)fp8 toolbarReplacedAllItems:(id)fp12;
- (void)_syncToChangedToolbar:(id)fp8 toolbarModeChanged:(id)fp12;
- (void)_syncToChangedToolbar:(id)fp8 toolbarItemUserVisibilityPriorityChanged:(id)fp12;
- (id)_newItemFromInitPListWithItemIdentifier:(id)fp8;
- (id)_newItemFromDelegateWithItemIdentifier:(id)fp8 willBeInsertedIntoToolbar:(BOOL)fp12;
- (id)_newItemFromItemIdentifier:(id)fp8 requireImmediateLoad:(BOOL)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)_createItemFromItemIdentifier:(id)fp8;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)_defaultItemIdentifiers;
- (id)_allowedItemIdentifiers;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (id)_dictionaryForSavedConfiguration;
- (BOOL)_setConfigurationFromDictionary:(id)fp8 notifyFamilyAndUpdateDefaults:(BOOL)fp12;
- (void)_saveConfigurationUsingName:(id)fp8 domain:(id)fp12;
- (BOOL)_setConfigurationUsingName:(id)fp8 domain:(id)fp12;
- (id)_configurationAutosaveName;
- (void)_autoSaveCofiguration;
- (void)saveCofigurationUsingName:(id)fp8;
- (void)saveConfigurationUsingName:(id)fp8;
- (void)setConfigurationFromDictionary:(id)fp8;
- (BOOL)setConfigurationUsingName:(id)fp8;
- (id)configurationDictionary;
- (void)setAutosavesConfigurationUsingIdentifier:(BOOL)fp8;
- (BOOL)autosavesConfigurationUsingIdentifier;
- (void)setAutosavesConfiguration:(BOOL)fp8;
- (BOOL)autosavesConfiguration;
- (void)validateVisibleItems;
- (void)_setAutovalidatesItems:(BOOL)fp8;
- (BOOL)_autovalidatesItems;
- (void)_autovalidateVisibleToolbarItems;
- (void)_autovalidateToolbarItem:(id)fp8;

@end

@interface _NSToolbarAuxiliary : NSObject
{
    NSColor *backgroundColor;
}

@end

@interface _NSToolbarItemPlaceholder : NSObject
{
    NSString *_itemIdentifier;
    NSToolbar *_tb;
    int _visibilityPriority;
    BOOL _hasCustomVisibilityPriority;
}

- (id)initWithItemIdentifier:(id)fp8;
- (void)dealloc;
- (id)itemIdentifier;
- (void)_setToolbar:(id)fp8;
- (id)toolbar;
- (void)setVisibilityPriority:(int)fp8;
- (int)visibilityPriority;
- (BOOL)_hasCustomVisibilityPriority;

@end

@interface NSToolbarButton : NSButton
{
    NSToolbarItem *_item;
    SEL _primaryAction;
    SEL _alternateAction;
    NSString *_primaryToolTip;
    NSString *_alternateToolTip;
    NSString *_primaryTitle;
    NSString *_alternateTitle;
    NSImage *_cachedDrawingImage;
}

+ (void)initialize;
- (id)autorelease;
- (void)release;
- (id)initWithItem:(id)fp8;
- (void)dealloc;
- (id)_item;
- (void)setState:(int)fp8;
- (void)setImagePosition:(int)fp8;
- (BOOL)sendAction:(SEL)fp8 to:(id)fp12;
- (BOOL)sendAction;
- (BOOL)refusesFirstResponder;
- (void)invalidateCachedDrawingImage;
- (id)cachedDrawingImage;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setImage:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface _NSToolbarItemViewerLabelCell : NSCell
{
}

- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface _NSToolbarButtonCell : NSButtonCell
{
}

- (int)nextState;
- (BOOL)refusesFirstResponder;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSToolbarButton (NSToolbarButtonAccessibility)
- (void)accessibilitySetFocusedAttribute:(id)fp8;
@end

@interface _NSToolbarButtonCell (_NSToolbarButtonCellAccessibility)
- (id)_accessibilityToolBarItem;
- (id)_accessibilityToolBarItemViewer;
- (id)accessibilityHelpAttribute;
- (id)accessibilityTitleAttribute;
- (id)accessibilityPositionAttribute;
- (id)accessibilitySizeAttribute;
@end

@interface NSToolbarClippedItemsIndicator : NSPopUpButton
{
    NSArray *_clippedItems;
    BOOL _cachedMenuIsValid;
    BOOL _returnFocusToWindowAfterClick;
}

+ (void)initialize;
+ (BOOL)isItemShownInPopupIfSoleEntry:(id)fp8;
+ (BOOL)willHaveItemsToDisplayForItemViewers:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)hasItemsToDisplayInPopUp;
- (void)_computeMenuForClippedItems;
- (BOOL)_shouldDrawSelectionIndicatorForItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_simpleOverflowMenuItemClicked:(id)fp8;
- (void)_computeMenuForClippedItemsIfNeeded;
- (void)_willPopUpNotification:(id)fp8;
- (void)_updateMenuForClippedItems;
- (void)setClippedItems:(id)fp8;
- (id)clippedItems;
- (id)_clipViewAncestor;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)didSendActionNotification:(id)fp8;
- (void)performClick:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface _NSToolbarClippedItemsIndicatorCell : NSPopUpButtonCell
{
}

- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)drawImageWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface _NSToolbarClippedItemsIndicatorCell (_NSToolbarClippedItemsIndicatorCellAccessibility)
- (id)accessibilityChildrenAttribute;
@end

@interface NSToolbarConfigPanel : NSPanel
{
    NSToolbar *_editedToolbar;
    float _widthOfWidgets;
    NSToolbar *_individualItemsToolbar;
    NSTextField *_individualItemsText;
    NSToolbarView *_individualItemsToolbarView;
    NSScrollView *_individualItemsScrollView;
    NSTextField *_defaultItemsText;
    _NSToolbarImageRepView *_defaultToolbarImageRep;
    NSPopUpButton *_displayModePopUp;
    float _maxIndividualItemViewHeight;
    int _desiredSheetWidth;
    NSButton *_useSmallIconsCheckBox;
}

+ (id)_nibName;
- (void)_finishInitialization;
- (id)initForToolbar:(id)fp8 withWidth:(int)fp12;
- (void)_orderFrontRelativeToWindow:(id)fp8;
- (id)editedToolbar;
- (void)dealloc;
- (void)_syncToChangedToolbar:(id)fp8:(id)fp12 toolbarModeChanged:(id)fp16;
- (struct _NSSize)_offsetFromStartRect;
- (BOOL)_addCursorRect:(struct _NSRect)fp8 cursor:(id)fp24 forView:(id)fp28;
- (void)ok:(id)fp8;
- (void)cancel:(id)fp8;
- (void)_setUpTextField:(id)fp8;
- (void)_loadDefaultSetImageRep;
- (void)_loadData;
- (float)_resizeTextFieldToFit:(id)fp8;
- (float)_deltaForResizingTextField:(id)fp8;
- (float)_resizeToolbarImageRepViewToFit:(id)fp8;
- (float)_deltaForResizingImageRepView:(id)fp8;
- (void)_computeMaxItemViewHeight;
- (float)_resizeToolbarViewToFit:(id)fp8;
- (float)_resizeViewToFit:(id)fp8;
- (void)_layoutForData;
- (BOOL)_blocksActionWhenModal:(SEL)fp8;

@end

@interface _NSToolbarImageRepView : NSView
{
    NSArray *_itemIdentifiers;
    NSImage *_image;
}

- (void)dealloc;
- (BOOL)isOpaque;
- (void)setImageRep:(id)fp8 forItemIdentifiers:(id)fp12;
- (void)sizeToFit;
- (void)sizeWidthToFit;
- (void)sizeHeightToFit;
- (struct _NSSize)sizeWhenSizedToFit;
- (void)drawRect:(struct _NSRect)fp8;
- (id)_computeDragImage;
- (void)mouseDown:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (id)_validDestinationForDragsWeInitiate;
- (BOOL)_isPaletteView;

@end

@interface _NSToolbarConfigPanelLoader : NSObject
{
    NSPanel *panel;
}

+ (id)loadPanelNamed:(id)fp8;
- (id)panel;

@end

@interface NSToolbarFlexibleSpaceItem : NSToolbarItem
{
    NSImage *_paletteImageRep;
}

+ (id)itemIdentifier;
+ (BOOL)_resizeWeightSharedWithDuplicateItems;
+ (float)_resizeWeight;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)paletteImageRep;
- (BOOL)isSeparatorItem;
- (BOOL)wantsToDrawIconInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawLabelInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(int)fp8;
- (BOOL)_emptyContents;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;
- (struct _NSSize)minSize;
- (struct _NSSize)maxSize;
- (void)configureForDisplayMode:(int)fp8 andSizeMode:(int)fp12;

@end

@interface _NSToolbarFlexibleSpace : NSView
{
    NSToolbarFlexibleSpaceItem *_spaceItem;
    BOOL _inPalette;
    NSImage *_configPanelImage;
}

- (id)initWithSize:(struct _NSSize)fp8 forSpaceItem:(id)fp16;
- (void)setInPalette:(BOOL)fp8;
- (BOOL)inPalette;
- (BOOL)_drawsNothing;
- (BOOL)preservesContentDuringLiveResize;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSToolbarItem : NSObject <NSCopying, NSValidatedUserInterfaceItem>
{
    NSToolbar *_toolbar;
    NSImage *_image;
    NSString *_itemIdentifier;
    NSString *_label;
    int _labelAlignment;
    NSString *_paletteLabel;
    NSString *_toolTip;
    NSMenuItem *_menuItemRep;
    int _tag;
    struct __tbiFlags _tbiFlags;
    NSArray *_allPossibleLabelsToFit;
    id _itemViewer;
    NSView *_view;
    struct _NSSize _minSize;
    struct _NSSize _maxSize;
}

+ (id)_newShowColorsItem;
+ (id)_newShowFontsItem;
+ (id)_newCustomizeToolbarItem;
+ (id)_newPrintItem;
+ (id)newStandardItemWithItemIdentifier:(id)fp8;
+ (id)standardItemWithItemIdentifier:(id)fp8;
+ (id)_imageForDrawingInRectOfSize:(struct _NSSize)fp8 fromImage:(id)fp16;
+ (BOOL)_resizeWeightSharedWithDuplicateItems;
+ (float)_resizeWeight;
+ (BOOL)allowsDuplicatesInToolbar;
- (void)_loadViewIfNecessary;
- (void)_toolbarItemCommonInit;
- (id)initWithType:(int)fp8 itemIdentifier:(id)fp12;
- (id)initWithItemIdentifier:(id)fp8;
- (id)_copyOfCustomView;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (struct __NSToolbarItemExternalData *)_getExternalData:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_validateAsCommonItem:(id)fp8;
- (BOOL)_shouldValidateMenuFormRepresentation;
- (void)_validateMenuFormRepresentation:(id)fp8;
- (void)_validateAsCustomItem:(id)fp8;
- (void)setAutovalidates:(BOOL)fp8;
- (BOOL)autovalidates;
- (void)validate;
- (id)itemIdentifier;
- (int)itemType;
- (id)toolbar;
- (void)_setAllPossibleLabelsToFit:(id)fp8;
- (id)_allPossibleLabelsToFit;
- (BOOL)_emptyContents;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (void)setLabel:(id)fp8;
- (id)label;
- (void)setPaletteLabel:(id)fp8;
- (id)paletteLabel;
- (void)setToolTip:(id)fp8;
- (id)toolTip;
- (void)_clearDefaultMenuFormRepresentation;
- (void)setMenuFormRepresentation:(id)fp8;
- (void)_noteDefaultMenuAttributeChanged;
- (id)_imageForMenu;
- (id)menuFormRepresentation;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_standardCommonMenuFormRepresentationClicked:(id)fp8;
- (void)_performMenuFormRepresentationClick;
- (id)_startingWindowForSendAction:(SEL)fp8;
- (void)_standardCustomMenuFormRepresentationClicked:(id)fp8;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)isEnabled;
- (void)setTag:(int)fp8;
- (int)tag;
- (void)_forceSetView:(id)fp8;
- (void)setView:(id)fp8;
- (id)view;
- (void)setVisibilityPriority:(int)fp8;
- (int)visibilityPriority;
- (BOOL)_canUserSetVisibilityPriority;
- (void)_toggleUserVisibilityPriority:(id)fp8;
- (void)setMinSize:(struct _NSSize)fp8;
- (struct _NSSize)minSize;
- (void)setMaxSize:(struct _NSSize)fp8;
- (struct _NSSize)maxSize;
- (void)setImage:(id)fp8;
- (id)image;
- (BOOL)allowsDuplicatesInToolbar;

@end

@interface NSToolbarItem (NSInternal_CommonAndCustomTypeMethods)
+ (id)newSeparatorItem;
+ (id)separatorItemIdentifier;
+ (id)spaceItemIdentifier;
- (void)_beginDrawForDragging;
- (void)_endDrawForDragging;
- (BOOL)_isDrawingForDragImage;
- (BOOL)isSeparatorItem;
- (int)_itemType;
- (id)_view;
- (id)_menuFormRepresentation;
- (void)_setIsUserRemovable:(BOOL)fp8;
- (BOOL)_isUserRemovable;
- (void)_setToolbar:(id)fp8;
- (id)_toolbar;
- (BOOL)_handleSendControlSize:(int)fp8 toView:(id)fp12;
- (BOOL)_handleSendControlSize:(int)fp8 toCellOfView:(id)fp12;
- (void)configureForDisplayMode:(int)fp8 andSizeMode:(int)fp12;
- (BOOL)usesMenuFormRepresentationInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawIconInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawLabelInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawLabelInPalette;
- (BOOL)_allowToolbarToStealEvent:(id)fp8;
- (int)_labelAlignment;
- (id)_itemViewer;
- (void)_setItemViewer:(id)fp8;
- (id)_button;
@end

@interface NSToolbarItem (NSToolbarItemCustomType)
@end

@interface NSToolbarItem (NSToolbarItemCommonType)
- (struct _NSSize)_buttonFrameSizeForSizeMode:(int)fp8;
@end

@interface NSToolbarItemViewer : NSView
{
    NSToolbarItem *_item;
    NSToolbarView *_toolbarView;
    _NSToolbarItemViewerLabelCellPopUpCell *_labelCell;
    struct _NSRect _labelRect;
    float _labelHeight;
    struct _NSSize _maxViewerSize;
    struct _NSSize _minViewerSize;
    struct _NSRect _minIconFrame;
    struct _NSRect _minLabelFrame;
    double _motionStartTime;
    double _motionDuration;
    struct _NSPoint _motionStartLocation;
    struct _NSPoint _motionDestLocation;
    struct {
        unsigned int drawsIconPart:1;
        unsigned int drawsLabelPart:1;
        unsigned int iconAreaIncludesLabelArea:1;
        unsigned int transparentBackground:1;
        unsigned int labelOnlyShowsAsPopupMenu:1;
        unsigned int inMotion:1;
        unsigned int inRecursiveDisplay:1;
        unsigned int insertionAnimationOptimizationOn:1;
        unsigned int needsViewerLayout:1;
        unsigned int needsModeConfiguration:1;
        unsigned int inPaletteView:1;
        unsigned int returnFocusToWindowAfterClick:1;
        unsigned int needsInitialAutovalidation:1;
        unsigned int needsRedrawForChangeInActiveState:1;
        unsigned int liveResizeImageImageCachingDisabled:1;
        unsigned int UNUSED:17;
    } _tbivFlags;
}

- (id)initWithItem:(id)fp8 forToolbarView:(id)fp12;
- (id)item;
- (void)_setToolbarItem:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setTransparentBackground:(BOOL)fp8;
- (BOOL)transparentBackground;
- (BOOL)isOpaque;
- (const struct __NSToolbarMetrics *)_metrics;
- (float)_widthRequiredForLabelLayout;
- (void)_computeLayoutInfoForIconViewSize:(struct _NSSize)fp8 frameSize:(struct _NSSize *)fp16 iconFrame:(struct _NSRect *)fp20 labelFrame:(struct _NSRect *)fp24;
- (void)_recomputeLabelHeight;
- (void)_noteToolbarSizeModeChanged;
- (void)_configureLabelCellStringValue;
- (void)configureForLayoutInDisplayMode:(int)fp8 andSizeMode:(int)fp12 inToolbarView:(id)fp16;
- (void)layoutToFitInMinimumIconSize;
- (void)layoutToFitInViewerFrameHeight:(double)fp8;
- (void)layoutToFitInIconWidth:(double)fp8;
- (struct _NSSize)maxSize;
- (void)setDestinationOrigin:(struct _NSPoint)fp8 travelTimeInSeconds:(double)fp16;
- (void)stepTowardsDestinationAtleastAsFarAs:(double)fp8;
- (BOOL)isInMotion;
- (struct _NSPoint)destination;
- (void)_startInsertionOptimization;
- (void)_endInsertionOptimization;
- (void)_windowChangedKeyState;
- (void)_setDisableLiveResizeImageCaching:(BOOL)fp8;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)_shouldLiveResizeUseCachedImage;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (void)_captureVisibleIntoLiveResizeCache;
- (BOOL)_hasImageCache;
- (void)_captureVisibleIntoImageCache;
- (void)_drawWithImageCache;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)fp8 visRect:(struct _NSRect)fp12;
- (BOOL)_shouldDrawSelectionIndicator;
- (BOOL)_useSquareToolbarSelectionHighlight;
- (BOOL)_shouldDrawFocus;
- (void)drawSelectionIndicatorInRect:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)_setHighlighted:(BOOL)fp8 displayNow:(BOOL)fp12;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)description;
- (void)setNeedsDisplay:(BOOL)fp8;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)_acceptsFirstResponderInItem:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)moveRight:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)_labelCellWillPopUpNotification:(id)fp8;
- (void)_labelCellWillDismissNotification:(id)fp8;
- (void)labelOnlyMenuDidSendActionNotification:(id)fp8;
- (void)performClick:(id)fp8;
- (void)_setDefaultKeyViewLoop;
- (BOOL)mouseDownCanMoveWindow;
- (void)trackMouseForPopupMenuFormRepresentation:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)_beginToolbarEditingMode;
- (void)_endToolbarEditingMode;
- (void)_setNeedsModeConfiguration:(BOOL)fp8;
- (BOOL)_needsModeConfiguration;
- (void)_setNeedsViewerLayout:(BOOL)fp8;
- (BOOL)_needsViewerLayout;
- (BOOL)_heightIsFlexible;
- (BOOL)_widthIsFlexible;
- (BOOL)_labelOnlyShowsAsPopupMenu;
- (int)_itemVisibilityPriority;
- (void)_itemChanged;
- (void)_itemEnabledStateChanged;
- (void)_itemChangedToolTip;
- (void)_itemLayoutChanged;
- (void)_itemChangedLabelOrPaletteLabel;
- (void)_menuFormRepresentationChanged;

@end

@interface _NSToolbarItemViewerLabelCellPopUpCell : NSPopUpButtonCell
{
    NSString *_realTitle;
}

- (id)initTextCell:(id)fp8;
- (void)_setRealTitle:(id)fp8;
- (void)dealloc;
- (void)setTitle:(id)fp8;
- (void)setStringValue:(id)fp8;
- (void)beginUsingMenuFormRepresentation:(id)fp8;
- (void)finishUsingMenuRepresentation;
- (id)title;
- (void)setCellAttribute:(int)fp8 to:(int)fp12;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (int)alignment;
- (id)_sharedTextCell;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawRealTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_setTextShadow:(BOOL)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)performClickWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSWindow (_NSEvilHacks)
- (void)_evilHackToClearlastLeftHitInWindow;
@end

@interface _NSToolbarItemViewerLabelCellPopUpCellProxy : NSAccessibilityReparentingCellProxy
{
}

- (id)_itemViewer;
- (id)_item;
- (int)_labelType;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityRoleDescriptionAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSToolbarItemViewer (NSToolbarItemViewerAccessibility)
- (int)_accessibilityCellLabelType;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)_accessibilityIconHandlesTitle;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSToolbarPoofAnimator : NSObject
{
    NSWindow *_poofWindow;
    NSPoofView *_poofWindowImageView;
    NSImage *_poofAnimFrames[5];
    double _nextPoofTime;
    int _nextPoofFrame;
    BOOL _releasesAfterPoofing;
    NSDictionary *_callbackInfo;
}

+ (void)runPoofAtPoint:(struct _NSPoint)fp8 withSize:(struct _NSSize)fp16 callbackInfo:(id)fp24;
+ (void)runPoofAtPoint:(struct _NSPoint)fp8;
- (id)initAtPoint:(struct _NSPoint)fp8 withSize:(struct _NSSize)fp16 callbackInfo:(id)fp24;
- (void)dealloc;
- (void)finalize;
- (void)setReleasesAfterPoofing:(BOOL)fp8;
- (void)setDragWindowImage:(id)fp8;
- (void)scheduleUpdate;
- (void)runPoof;
- (void)_doCallback;
- (void)_donePoofing;
- (void)updatePoofAnimation;

@end

@interface NSPoofView : NSView
{
    NSImage *_image;
}

- (void)dealloc;
- (void)finalize;
- (void)setImage:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSToolbarSeparatorItem : NSToolbarItem
{
}

+ (id)itemIdentifier;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)fp8;
- (id)init;
- (BOOL)isSeparatorItem;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;

@end

@interface _NSToolbarSeparator : NSView
{
    BOOL _inPalette;
}

- (id)init;
- (void)setInPalette:(BOOL)fp8;
- (struct _NSPoint)rasterize:(struct _NSPoint)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;

@end

@interface NSToolbarSeparatorItem (NSToolbarItemCustomType)
- (struct _NSSize)minSize;
- (struct _NSSize)maxSize;
- (void)configureForDisplayMode:(int)fp8 andSizeMode:(int)fp12;
- (BOOL)wantsToDrawIconInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawLabelInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(int)fp8;
@end

@interface NSToolbarSpaceItem : NSToolbarItem
{
    NSImage *_paletteImageRep;
}

+ (id)itemIdentifier;
- (void)_separatorFinishInit;
- (id)initWithItemIdentifier:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)paletteImageRep;
- (BOOL)isSeparatorItem;
- (BOOL)wantsToDrawIconInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawLabelInDisplayMode:(int)fp8;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(int)fp8;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (BOOL)_emptyContents;
- (id)view;
- (BOOL)allowsDuplicatesInToolbar;
- (struct _NSSize)minSize;
- (struct _NSSize)maxSize;
- (void)configureForDisplayMode:(int)fp8 andSizeMode:(int)fp12;

@end

@interface _NSToolbarSpace : NSView
{
    NSToolbarSpaceItem *_spaceItem;
    BOOL _inPalette;
    NSImage *_configPanelImage;
}

- (id)initWithSize:(struct _NSSize)fp8 forSpaceItem:(id)fp16;
- (void)setInPalette:(BOOL)fp8;
- (BOOL)inPalette;
- (BOOL)_drawsNothing;
- (BOOL)preservesContentDuringLiveResize;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSToolbarView : NSView
{
    NSToolbar *_toolbar;
    NSToolbarClippedItemsIndicator *_clipIndicator;
    NSClipView *_ivClipView;
    NSMutableDictionary *_toolbarItemViewersByItem;
    NSMutableArray *_layoutOrderedItemViewers;
    NSMutableArray *_toolbarOrderedItemViewers;
    NSToolbarItemViewer *_dragDataItemViewer;
    int _dragDataItemViewerStartIndex;
    BOOL _dragDataItemShouldBeRemoved;
    NSToolbarItemViewer *_dragDataInsertionGapItemViewer;
    struct _NSPoint _dragDataLastPoint;
    BOOL _insertionAnimationRunning;
    struct _NSPoint _halftonePhaseOverrideValue;
    NSToolbarView *_validDestinationForDragsWeInitiate;
    int _layoutEnabledCount;
    struct __tbvFlags _tbvFlags;
    NSResponder *_windowPriorFirstResponder;
}

+ (id)newViewForToolbar:(id)fp8 inWindow:(id)fp12 attachedToEdge:(int)fp16;
+ (id)_findFirstKeyViewInDirection:(int)fp8 forKeyLoopGroupingView:(id)fp12;
+ (id)defaultMenu;
- (const struct __NSToolbarMetrics *)_metrics;
- (void)_toolbarViewCommonInit;
- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)_inTexturedWindow;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)dealloc;
- (void)finalize;
- (void)_setAllItemsTransparentBackground:(BOOL)fp8;
- (void)_setForceItemsToBeMinSize:(BOOL)fp8;
- (void)_setAllowsMultipleRows:(BOOL)fp8;
- (void)_setDrawsBaseline:(BOOL)fp8;
- (id)_validDestinationForDragsWeInitiate;
- (void)_setWantsKeyboardLoop:(BOOL)fp8;
- (BOOL)_wantsKeyboardLoop;
- (void)_setActsAsPalette:(BOOL)fp8 forToolbar:(id)fp12;
- (BOOL)_isPaletteView;
- (void)setToolbar:(id)fp8;
- (id)toolbar;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)visibleItems;
- (id)clippedItems;
- (int)numberOfItems;
- (BOOL)_clipIndicatorIsShowing;
- (id)_clipIndicator;
- (struct _NSRect)_validItemViewerBoundsAssumingClipIndicatorNotShown;
- (struct _NSRect)_validItemViewerBounds;
- (struct _NSRect)_validItemViewerBoundsAssumingClipIndicatorShown;
- (void)_forceResetTexturedWindowDragMargins;
- (void)_beginTempEditingMode;
- (void)_beginCustomizationMode;
- (void)_endCustomizationMode;
- (BOOL)_isInCustomizationMode;
- (BOOL)_isInConfigurationMode;
- (BOOL)_isEditing;
- (BOOL)_shouldStealHitTestForCurrentEvent;
- (id)_findHitItemViewer:(struct _NSPoint)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)resetToolbarToDefaultConfiguration:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)_printVerboseDebuggingInformation:(id)fp8;
- (void)toggleKeepVisibleToolbarItem:(id)fp8;
- (void)removeToolbarItem:(id)fp8;
- (BOOL)mouseDownCanMoveWindow;
- (void)mouseDown:(id)fp8;
- (struct CGSize)_toolbarPatternPhase;
- (void)_drawForTransitionInWindow:(id)fp8 usingHalftonePhaseForWindowOfSize:(struct _NSSize)fp12;
- (void)_windowChangedKeyState;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_createClipIndicatorIfNecessary;
- (void)_setClipIndicatorItemsFromItemViewers:(id)fp8;
- (void)_adjustClipIndicatorPosition;
- (void)_syncItemSet;
- (void)_syncItemSetAndUpdateItemViewersWithSEL:(SEL)fp8 setNeedsModeConfiguration:(BOOL)fp12 sizeToFit:(BOOL)fp16 setNeedsDisplay:(BOOL)fp20 updateKeyLoop:(BOOL)fp24;
- (void)_setFrameSize:(struct _NSSize)fp8;
- (id)_allItems;
- (id)_visibleItemViewers;
- (id)_clippedItemViewers;
- (void)_removeClipIndicatorFromSuperview;
- (void)_makeSureFirstResponderIsNotInInvisibleItemViewer;
- (void)_detatchNextAndPreviousForView:(id)fp8;
- (void)_detatchNextAndPreviousForAllSubviews;
- (void)_computeToolbarItemKeyboardLoop;
- (void)_computeToolbarItemKeyboardLoopIfNecessary;
- (void)_returnFirstResponderToWindowFromKeyboardHotKeyEvent;
- (id)_computePriorFirstResponder;
- (void)_makeFirstResponderForKeyboardHotKeyEvent;
- (void)viewDidMoveToSuperview;
- (void)_cycleWindows:(id)fp8;
- (id)_itemsFromItemViewers:(id)fp8;
- (id)_computeOrderedItemViewersOfType:(int)fp8 inRange:(struct _NSRange)fp12 resizeableOnly:(BOOL)fp20;
- (id)_computeOrderedItemViewersOfType:(int)fp8;
- (id)_computeCommonItemViewers;
- (id)_computeCustomItemViewers;
- (id)_computeResizeableCustomItemViewersInRange:(struct _NSRange)fp8;
- (void)_makeSureItemViewersInArray:(id)fp8 areSubviews:(BOOL)fp12 from:(int)fp16 to:(int)fp20;
- (void)_distributeAvailableSpaceIfNecessary:(float)fp8 toFlexibleSizedItems:(id)fp12 lastItemIsRightAligned:(char *)fp16;
- (int)_layoutRowStartingAtIndex:(int)fp8 withFirstItemPosition:(struct _NSPoint)fp12 gridWidth:(int)fp20;
- (id)description;
- (void)_setNeedsModeConfiguration:(BOOL)fp8 itemViewers:(id)fp12;
- (void)_setNeedsViewerLayout:(BOOL)fp8 itemViewers:(id)fp12;
- (void)_setNeedsDisplayForItemViewerSelection:(id)fp8;
- (void)_setNeedsDisplayForItemIdentifierSelection:(id)fp8;
- (void)_fullLayout;
- (void)_disableLayout;
- (void)_enableLayout;
- (BOOL)_layoutEnabled;
- (void)_collectItemViewerFrames:(id)fp8 intoRectArray:(struct _NSRect *)fp12;
- (void)_setNeedsDisplayIfTopLeftChanged;
- (BOOL)preservesContentDuringLiveResize;
- (void)_setNeedsDisplayForItemViewers:(id)fp8 movingFromFrames:(struct _NSRect *)fp12 toFrames:(struct _NSRect *)fp16;
- (float)_maximumItemViewerHeight;
- (void)_layoutDirtyItemViewersAndTileToolbar;
- (void)_endLiveResize;
- (void)_sizeToFit:(BOOL)fp8;
- (void)_sizeVerticalyToFit;
- (void)_sizeHorizontallyToFit;
- (float)_distanceFromBaseToTopOfWindow;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)_noteToolbarModeChangedAndUpdateItemViewers:(SEL)fp8;
- (void)_noteToolbarSizeModeChanged;
- (void)_noteToolbarDisplayModeChanged;
- (void)_noteToolbarLayoutChanged;
- (void)_noteToolbarShowsBaselinePropertyChanged;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)windowDidUpdate:(id)fp8;
- (void)_doDelayedValidateVisibleToolbarItems;
- (void)_validateVisibleToolbarItems;

@end

@interface _NSToolbarViewClipView : NSClipView
{
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)preservesContentDuringLiveResize;

@end

@interface NSToolbarView (_NSPrivate_Internal)
- (void)_toolbarContentsChanged:(id)fp8;
- (void)_toolbarAttributesChanged:(id)fp8;
- (void)_toolbarContentsAttributesChanged:(id)fp8;
- (void)_registerForToolbarNotifications:(id)fp8;
- (void)_unregisterForToolbarNotifications:(id)fp8;
@end

@interface NSToolbarView (_ItemDragAndDropSupport)
- (id)_findItemViewerAtPoint:(struct _NSPoint)fp8;
- (id)_computeDragImageFromItemViewer:(id)fp8;
- (id)_dragDataItemViewer;
- (struct _NSRect)_rectOfItemAtIndex:(int)fp8;
- (id)_insertionGapForItemViewer:(id)fp8 forDraggingSource:(id)fp12;
- (int)_layoutOrderInsertionIndexForPoint:(struct _NSPoint)fp8 previousIndex:(int)fp16;
- (void)removeItemViewerAtIndex:(int)fp8;
- (void)insertItemViewer:(id)fp8 atIndex:(int)fp12;
- (void)_startInsertionOptimizationWithDragSource:(id)fp8;
- (void)_endInsertionOptimizationWithDragSource:(id)fp8 force:(BOOL)fp12;
- (void)_dragEndedNotification:(id)fp8;
- (void)_updateDragInsertion:(id)fp8;
- (void)stopUpdateInsertionAnimation;
- (float)_computeTravelTimeForInsertionOfItemViewer:(id)fp8;
- (void)beginUpdateInsertionAnimationAtIndex:(int)fp8 throwAwayCacheWhenDone:(BOOL)fp12;
- (unsigned int)_findIndexOfFirstDuplicateItemWithItemIdentier:(id)fp8;
- (BOOL)_isAcceptableDragSource:(id)fp8 types:(id)fp12 dragInfo:(id)fp16;
- (id)_itemViewerForDraggingInfo:(id)fp8 draggingSource:(id)fp12;
- (unsigned int)dstDraggingEnteredAtPoint:(struct _NSPoint)fp8 draggingInfo:(id)fp16;
- (unsigned int)dstDraggingMovedToPoint:(struct _NSPoint)fp8 draggingInfo:(id)fp16;
- (void)_dstDraggingExitedAtPoint:(struct _NSPoint)fp8 draggingInfo:(id)fp16 stillInViewBounds:(BOOL)fp20;
- (void)dstDraggingExitedAtPoint:(struct _NSPoint)fp8 draggingInfo:(id)fp16;
- (BOOL)dstDraggingDepositedAtPoint:(struct _NSPoint)fp8 draggingInfo:(id)fp16;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (BOOL)_canMoveItemAsSource:(id)fp8;
- (BOOL)_beginSrcDragItemViewerWithEvent:(id)fp8;
- (BOOL)_isItemViewerMoveable:(id)fp8;
- (BOOL)_beginSrcDragItemWithEvent:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
@end

@interface NSToolbarView (NSToolbarViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityOverflowButtonAttribute;
- (BOOL)accessibilityIsOverflowButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsIgnored;
@end

@interface NSToolTipManager : NSObject
{
    NSWindow *toolTipWindow;
    NSMutableArray *toolTips;
    double toolTipDelay;
    NSDate *timeToolTipRemovedFromScreen;
    struct __CFRunLoopTimer *toolTipDisplayTimer;
    NSToolTip *currentDisplayedToolTip;
    NSToolTip *currentFadingToolTip;
    float currentFadeValue;
    NSTimer *fadeTimer;
    NSWindow *lastToolTipWindow;
}

+ (id)sharedToolTipManager;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setInitialToolTipDelay:(double)fp8;
- (void)_checkToolTipDelay;
- (void)windowDidBecomeKeyNotification:(id)fp8;
- (BOOL)_shouldInstallToolTip:(void *)fp8;
- (void)_getDisplayDelegateFadesOutWhenInactive:(id)fp8;
- (BOOL)_checkDisplayDelegate:(id)fp8;
- (int)_addTrackingRect:(struct _NSRect)fp8 andStartToolTipIfNecessary:(BOOL)fp24 view:(id)fp28 owner:(id)fp32 toolTip:(id)fp36 reuseExistingTrackingNum:(BOOL)fp40;
- (void)addTrackingRectForToolTip:(id)fp8 reuseExistingTrackingNum:(BOOL)fp12;
- (void)_addTrackingRectsForView:(id)fp8;
- (int)_setToolTip:(id)fp8 forView:(id)fp12 cell:(id)fp16 rect:(struct _NSRect)fp20 owner:(id)fp36 ownerIsDisplayDelegate:(BOOL)fp40 userData:(void *)fp44;
- (void)_removeToolTip:(id)fp8 stopTimerIfNecessary:(BOOL)fp12;
- (void)_removeTrackingRectsForView:(id)fp8 stopTimerIfNecessary:(BOOL)fp12;
- (void)_removeTrackingRectForToolTip:(id)fp8 stopTimerIfNecessary:(BOOL)fp12;
- (int)setToolTipForView:(id)fp8 rect:(struct _NSRect)fp12 displayDelegate:(id)fp28 displayInfo:(id)fp32;
- (int)setToolTipForView:(id)fp8 rect:(struct _NSRect)fp12 owner:(id)fp28 userData:(void *)fp32;
- (void)setToolTipWithOwner:(id)fp8 forView:(id)fp12 cell:(id)fp16;
- (void)setToolTip:(id)fp8 forView:(id)fp12 cell:(id)fp16;
- (void)removeToolTipForView:(id)fp8 tag:(int)fp12;
- (BOOL)viewHasToolTips:(id)fp8;
- (void)removeAllToolTipsForView:(id)fp8;
- (void)removeAllToolTipsForView:(id)fp8 withOwner:(id)fp12;
- (id)toolTipForView:(id)fp8 cell:(id)fp12;
- (void)recomputeToolTipsForView:(id)fp8 remove:(BOOL)fp12 add:(BOOL)fp16;
- (void)startTimer:(float)fp8 userInfo:(id)fp12;
- (void)stopTimer;
- (void)_stopTimerIfRunningForToolTip:(id)fp8;
- (void)displayToolTip:(id)fp8;
- (void)orderOutToolTip;
- (void)fadeToolTip:(id)fp8;
- (void)orderOutToolTipImmediately:(BOOL)fp8;
- (void)abortToolTip;
- (BOOL)_inQuickDisplayModeForWindow:(id)fp8;
- (void)mouseEnteredToolTip:(id)fp8 inWindow:(id)fp12 withEvent:(id)fp16;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface NSToolTipPanel : NSPanel
{
    int _shadowStyle;
    NSString *_toolTipString;
}

- (void)dealloc;
- (BOOL)hasShadow;
- (int)_shadowStyle;
- (void)_setShadowStyle:(int)fp8;
- (void)_clearEventMask;
- (void)orderFront:(id)fp8;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (id)toolTipString;
- (void)setToolTipString:(id)fp8;

@end

@interface NSToolTipStringDrawingLayoutManager : NSObject
{
    NSDictionary *_wrappingAttributes;
    NSLayoutManager *_layoutManager;
}

+ (id)sharedToolTipStringDrawingLayoutManager;
+ (struct _NSSize)sizeForDisplayingAttributedString:(id *)fp8;
- (id)_wrappingAttributes;
- (struct _NSSize)_sizeWithSize:(struct _NSSize)fp8 attributedString:(id *)fp16;
- (void)dealloc;

@end

@interface NSToolTip : NSObject
{
    NSView *view;
    NSCell *cell;
    NSString *string;
    id owner;
    void *data;
    int trackingNum;
    struct _NSRect trackingRect;
    struct {
        unsigned int ownerIsDisplayDelegate:1;
        unsigned int isTemporary:1;
        unsigned int fadesOutWhenInactive:1;
        unsigned int reserved:29;
    } ttFlags;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)isTemporary;
- (id)description;

@end

@interface NSToolTipManager (NSToolTipManagerDynamicToolTipSupport)
- (void)_displayTemporaryToolTipForView:(id)fp8 withString:(id)fp12;
- (void)_displayTemporaryToolTipForView:(id)fp8 withDisplayDelegate:(id)fp12 displayInfo:(id)fp16;
- (void)_getDisplayDelay:(float *)fp8 inQuickMode:(char *)fp12 forView:(id)fp16;
- (void)_orderOutAllToolTipsImmediately:(BOOL)fp8;
@end

@interface NSTracer : NSObject
{
    struct _NSMapTable *flavorPriorityMap;
    id reporter;
    SEL reporterSelector;
    unsigned int defaultPriority;
}

+ (void)initialize;
+ (id)sharedTracer;
+ (void)traceWithFlavor:(id)fp8 priority:(unsigned int)fp12 format:(id)fp16;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setDefaultPriority:(unsigned int)fp8;
- (void)setPriority:(unsigned int)fp8 forFlavor:(id)fp12;
- (unsigned int)priorityForFlavor:(id)fp8;
- (void)setReporter:(id)fp8 selector:(SEL)fp12;
- (void)traceWithFlavor:(id)fp8 priority:(unsigned int)fp12 format:(id)fp16;
- (void)traceWithFlavor:(id)fp8 priority:(unsigned int)fp12 format:(id)fp16 arguments:(char *)fp20;

@end

@interface NSTypesetter : NSObject
{
    unsigned int _reserved[2];
}

+ (void)initialize;
+ (BOOL)_usesATSTypesetter;
+ (int)defaultTypesetterBehavior;
+ (int)defaultStringDrawingTypesetterBehavior;
+ (id)sharedSystemTypesetterForBehavior:(int)fp8;
+ (id)sharedSystemTypesetter;
+ (struct _NSSize)printingAdjustmentInLayoutManager:(id)fp8 forNominallySpacedGlyphRange:(struct _NSRange)fp12 packedGlyphs:(const char *)fp20 count:(unsigned int)fp24;
- (CDAnonymousStruct16 *)_allocateAuxData;
- (CDAnonymousStruct16 *)_getAuxData;
- (void)dealloc;
- (void)finalize;
- (BOOL)_forceOriginalFontBaseline;
- (void)_setForceOriginalFontBaseline:(BOOL)fp8;
- (int)_getRemainingNominalParagraphRange:(struct _NSRange *)fp8 andParagraphSeparatorRange:(struct _NSRange *)fp12 charactarIndex:(unsigned int)fp16 layoutManager:(id)fp20 string:(id)fp24;
- (void)_updateParagraphStyleCache:(id)fp8;
- (CDAnonymousUnion1 *)_lineFragmentRectForProposedRectArgs;
- (int)_sweepDirectionForGlyphAtIndex:(long)fp8;
- (BOOL)usesFontLeading;
- (void)setUsesFontLeading:(BOOL)fp8;
- (int)typesetterBehavior;
- (void)setTypesetterBehavior:(int)fp8;
- (float)hyphenationFactor;
- (void)setHyphenationFactor:(float)fp8;
- (float)lineFragmentPadding;
- (void)setLineFragmentPadding:(float)fp8;
- (id)substituteFontForFont:(id)fp8;
- (id)textTabForGlyphLocation:(float)fp8 writingDirection:(int)fp12 maxLocation:(float)fp16;
- (BOOL)bidiProcessingEnabled;
- (void)setBidiProcessingEnabled:(BOOL)fp8;
- (float)tightenThresholdForTruncation;
- (void)setTightenThresholdForTruncation:(float)fp8;
- (void)setAttributedString:(id)fp8;
- (id)attributedString;
- (void)setParagraphGlyphRange:(struct _NSRange)fp8 separatorGlyphRange:(struct _NSRange)fp16;
- (struct _NSRange)paragraphGlyphRange;
- (struct _NSRange)paragraphSeparatorGlyphRange;
- (struct _NSRange)paragraphCharacterRange;
- (struct _NSRange)paragraphSeparatorCharacterRange;
- (unsigned int)layoutParagraphAtPoint:(struct _NSPoint *)fp8;
- (void)beginParagraph;
- (void)endParagraph;
- (void)beginLineWithGlyphAtIndex:(unsigned int)fp8;
- (void)endLineWithGlyphRange:(struct _NSRange)fp8;
- (float)lineSpacingAfterGlyphAtIndex:(unsigned int)fp8 withProposedLineFragmentRect:(struct _NSRect)fp12;
- (float)paragraphSpacingBeforeGlyphAtIndex:(unsigned int)fp8 withProposedLineFragmentRect:(struct _NSRect)fp12;
- (float)paragraphSpacingAfterGlyphAtIndex:(unsigned int)fp8 withProposedLineFragmentRect:(struct _NSRect)fp12;
- (id)layoutManager;
- (id)textContainers;
- (id)currentTextContainer;
- (id)currentParagraphStyle;
- (void)setHardInvalidation:(BOOL)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)getLineFragmentRect:(struct _NSRect *)fp8 usedRect:(struct _NSRect *)fp12 forParagraphSeparatorGlyphRange:(struct _NSRange)fp16 atProposedOrigin:(struct _NSPoint)fp24;
- (id)attributesForExtraLineFragment;
- (int)actionForControlCharacterAtIndex:(unsigned int)fp8;
- (void)layoutGlyphsInLayoutManager:(id)fp8 startingAtGlyphIndex:(unsigned int)fp12 maxNumberOfLineFragments:(unsigned int)fp16 nextGlyphIndex:(unsigned int *)fp20;
- (float)baselineOffsetInLayoutManager:(id)fp8 glyphIndex:(unsigned int)fp12;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)fp8 actualGlyphRange:(struct _NSRange *)fp16;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)fp8 actualCharacterRange:(struct _NSRange *)fp16;
- (unsigned int)getGlyphsInRange:(struct _NSRange)fp8 glyphs:(unsigned int *)fp16 characterIndexes:(unsigned int *)fp20 glyphInscriptions:(int *)fp24 elasticBits:(char *)fp28 bidiLevels:(char *)fp32;
- (void)getLineFragmentRect:(struct _NSRect *)fp8 usedRect:(struct _NSRect *)fp12 remainingRect:(struct _NSRect *)fp16 forStartingGlyphAtIndex:(unsigned int)fp20 proposedRect:(struct _NSRect)fp24 lineSpacing:(float)fp40 paragraphSpacingBefore:(float)fp44 paragraphSpacingAfter:(float)fp48;
- (void)setLineFragmentRect:(struct _NSRect)fp8 forGlyphRange:(struct _NSRange)fp24 usedRect:(struct _NSRect)fp32 baselineOffset:(float)fp48;
- (void)substituteGlyphsInRange:(struct _NSRange)fp8 withGlyphs:(unsigned int *)fp16;
- (void)insertGlyph:(unsigned int)fp8 atGlyphIndex:(unsigned int)fp12 characterIndex:(unsigned int)fp16;
- (void)deleteGlyphsInRange:(struct _NSRange)fp8;
- (void)setNotShownAttribute:(BOOL)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)setDrawsOutsideLineFragment:(BOOL)fp8 forGlyphRange:(struct _NSRange)fp12;
- (void)setLocation:(struct _NSPoint)fp8 withAdvancements:(const float *)fp16 forStartOfGlyphRange:(struct _NSRange)fp20;
- (void)setAttachmentSize:(struct _NSSize)fp8 forGlyphRange:(struct _NSRange)fp16;
- (void)setBidiLevels:(const char *)fp8 forGlyphRange:(struct _NSRange)fp12;

@end

@interface NSUIHeartBeat : NSObject
{
    CDAnonymousStruct11 _times;
    NSConditionLock *_drawingThreadLock;
    NSLock *_clientsLock;
    NSMutableArray *_clients;
    NSView *_currentView;
    struct {
        unsigned int _isDrawingLocked:1;
        unsigned int _isClientsChanged:1;
        unsigned int _lockedByClient:1;
        unsigned int _usedDoubleBuffer:1;
        unsigned int _isAboutToLock:1;
        unsigned int _reserved:27;
    } _hbFlags;
}

+ (void)initialize;
+ (id)sharedHeartBeat;
+ (double)heartBeatCycle;
+ (void)setHeartBeatCycle:(double)fp8;
+ (BOOL)isHeartBeatThread;
- (void)_heartBeatThread:(id)fp8;
- (void)_startHeartBeating;
- (id)init;
- (void)dealloc;
- (void)addHeartBeatView:(id)fp8;
- (void)removeHeartBeatView:(id)fp8;
- (double)birthDate;
- (void)updateHeartBeatState;
- (void)disableHeartBeating;
- (void)reenableHeartBeating:(BOOL)fp8;
- (BOOL)lockFocusForView:(id)fp8 inRect:(struct _NSRect)fp12 needsTranslation:(BOOL)fp28;
- (void)unlockFocusInRect:(struct _NSRect)fp8;

@end

@interface NSViewMultiClipDrawingHelper : NSObject
{
    NSView *_drawingView;
    NSArray *_rects;
    int _currentDrawingIndex;
}

- (id)initWithDrawingView:(id)fp8 rects:(id)fp12;
- (void)dealloc;
- (void)drawViewInRect:(struct _NSRect)fp8;
- (BOOL)isDrawingContentAtIndex:(int)fp8;

@end

@interface NSViewRectCache : NSObject
{
    NSView *_view;
    NSWindow *_window;
    struct _NSRect _viewRect;
    struct _NSRect _windowRect;
    struct _NSRect _savedRect;
    NSImage *_savedImage;
    BOOL _savedImageIsValid;
}

- (id)initWithView:(id)fp8;
- (BOOL)cacheRect:(struct _NSRect)fp8;
- (BOOL)restore;
- (void)dealloc;

@end

@interface NSFlippableView : NSView
{
    BOOL isFlipped;
    BOOL isOpaque;
}

+ (void)_initFlippableViewCacheLock;
+ (id)newFlipped:(BOOL)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)isFlipped;
- (void)setOpaque:(BOOL)fp8;
- (BOOL)isOpaque;

@end

@interface NSView : NSResponder
{
    struct _NSRect _frame;
    struct _NSRect _bounds;
    id _superview;
    id _subviews;
    NSWindow *_window;
    id _gState;
    id _frameMatrix;
    id _drawMatrix;
    id _dragTypes;
    _NSViewAuxiliary *_viewAuxiliary;
    struct __VFlags _vFlags;
    struct __VFlags2 _vFlags2;
}

+ (void)initialize;
+ (void)_setShowsAllDrawing:(BOOL)fp8;
+ (BOOL)_showsAllDrawing;
+ (id)new;
+ (int)defaultFocusRingType;
+ (id)focusView;
+ (id)_findFirstKeyViewInDirection:(int)fp8 forKeyLoopGroupingView:(id)fp12;
+ (Class)_dynamicToolTipManagerClass;
+ (id)defaultMenu;
- (void)_setDrawsOwnDescendants:(BOOL)fp8;
- (BOOL)_drawsOwnDescendants;
- (BOOL)_drawnByAncestor;
- (struct _NSRect)_focusRingVisibleRect;
- (void)_showKeyboardUILoop;
- (void)_showBorder;
- (void)_showDrawRect:(struct _NSRect)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)init;
- (void)_commonAwake;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (void)_resetRefCount:(long)fp8;
- (BOOL)_allowsContextMenus;
- (void)_deallocateGState;
- (void)_finalize;
- (void)dealloc;
- (void)finalize;
- (void)_addToOrphanList;
- (id)_setWindow:(id)fp8;
- (id)window;
- (id)superview;
- (id)subviews;
- (BOOL)isDescendantOf:(id)fp8;
- (id)ancestorSharedWithView:(id)fp8;
- (id)opaqueAncestor;
- (id)_clipViewAncestor;
- (void)_setKeyboardFocusRingNeedsDisplayInRect:(struct _NSRect)fp8 force:(BOOL)fp24;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setFocusRingType:(int)fp8;
- (int)focusRingType;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)fp8;
- (void)didAddSubview:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (void)addSubview:(id)fp8;
- (void)addSubview:(id)fp8 positioned:(int)fp12 relativeTo:(id)fp16;
- (void)sortSubviewsUsingFunction:(void *)fp8 context:(void *)fp12;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)viewDidMoveToSuperview;
- (void)_recursiveGainedHiddenAncestor;
- (void)_recursiveLostHiddenAncestor;
- (void)_setHidden:(BOOL)fp8;
- (void)setHidden:(BOOL)fp8;
- (BOOL)isHidden;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (void)_abortEditingIfFirstResponderIsASubview;
- (void)_endEditingIfFirstResponderIsASubview;
- (void)removeFromSuperview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)_markRememberedEditingFirstResponderIfIsASubview;
- (id)_validRememberedEditingFirstResponder;
- (void)_makeRememberedOrNewEditingSubviewBecomeFirstResponder;
- (void)_clearRememberedEditingFirstResponder;
- (void)_replaceSubview:(id)fp8 with:(id)fp12 rememberAndResetEditingFirstResponder:(BOOL)fp16 abortEditingIfNecessary:(BOOL)fp20;
- (void)replaceSubview:(id)fp8 with:(id)fp12;
- (id)_setSuperview:(id)fp8;
- (id)_addSubview:(id)fp8;
- (id)_removeSubview:(id)fp8;
- (id)_subviews;
- (void)_setPostsFocusChangedNotifications:(BOOL)fp8;
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;
- (void)_postFrameChangeNotification;
- (void)setPostsFrameChangedNotifications:(BOOL)fp8;
- (BOOL)postsFrameChangedNotifications;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (id)_setNoVerticalAutosizing:(BOOL)fp8;
- (BOOL)_noVerticalAutosizing;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)_autoSizeView:(BOOL)fp8:(unsigned int)fp12:(const struct _NSRect *)fp16:(const struct _NSRect *)fp20:(struct _NSRect *)fp24;
- (void)setAutoresizesSubviews:(BOOL)fp8;
- (BOOL)autoresizesSubviews;
- (void)setAutoresizingMask:(unsigned int)fp8;
- (unsigned int)autoresizingMask;
- (void)_setNeedsDisplayInRectForLiveResize:(struct _NSRect)fp8;
- (struct _NSSize)_oldSizeDuringLiveResize;
- (struct _NSPoint)_topLeftDuringLiveResize;
- (void)_invalidateForSubviewFrameChange:(struct _NSRect)fp8 oldSize:(struct _NSSize)fp24 oldTopLeft:(struct _NSPoint)fp32;
- (struct _NSRect)_oldBoundsDuringLiveResize;
- (void)_setKeyboardFocusRingNeedsDisplayDuringLiveResize;
- (BOOL)_drawsNothing;
- (BOOL)_needsRedrawForMovement;
- (void)_setNeedsDisplayIfTopLeftChanged;
- (void)_updateSizeAndLocation;
- (void)_invalidateForLiveResize;
- (BOOL)preservesContentDuringLiveResize;
- (struct _NSRect)rectPreservedDuringLiveResize;
- (void)getRectsExposedDuringLiveResize:(struct _NSRect [4])fp8 count:(int *)fp12;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (BOOL)_shouldTransformMatrix;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)setFrameRotation:(float)fp8;
- (struct _NSRect)frame;
- (float)frameRotation;
- (void)setBounds:(struct _NSRect)fp8;
- (void)setBoundsOrigin:(struct _NSPoint)fp8;
- (void)setBoundsSize:(struct _NSSize)fp8;
- (void)setBoundsRotation:(float)fp8;
- (void)translateOriginToPoint:(struct _NSPoint)fp8;
- (void)scaleUnitSquareToSize:(struct _NSSize)fp8;
- (void)rotateByAngle:(float)fp8;
- (struct _NSRect)bounds;
- (float)boundsRotation;
- (BOOL)isFlipped;
- (BOOL)_inScaledWindow;
- (id)_setInScaledWindow:(BOOL)fp8;
- (id)_setRotatedFromBase:(BOOL)fp8;
- (id)_setRotatedOrScaledFromBase:(BOOL)fp8;
- (BOOL)isRotatedFromBase;
- (BOOL)isRotatedOrScaledFromBase;
- (BOOL)isOpaque;
- (id)_drawMatrix;
- (id)_computeBounds;
- (BOOL)_convertPointFromSuperview:(struct _NSPoint *)fp8 test:(BOOL)fp12;
- (struct _NSPoint)_convertPointToSuperview:(struct _NSPoint)fp8;
- (struct _NSRect)_convertRectFromSuperview:(struct _NSRect)fp8 test:(BOOL)fp24;
- (struct _NSRect)_convertRectToSuperview:(struct _NSRect)fp8;
- (struct _NSPoint)convertPoint:(struct _NSPoint)fp8 fromView:(id)fp16;
- (struct _NSPoint)convertPoint:(struct _NSPoint)fp8 toView:(id)fp16;
- (struct _NSPoint)_convertPoint:(struct _NSPoint)fp8 fromAncestor:(id)fp16;
- (struct _NSPoint)_convertPoint:(struct _NSPoint)fp8 toAncestor:(id)fp16;
- (struct _NSSize)convertSize:(struct _NSSize)fp8 fromView:(id)fp16;
- (struct _NSSize)convertSize:(struct _NSSize)fp8 toView:(id)fp16;
- (struct _NSRect)convertRect:(struct _NSRect)fp8 fromView:(id)fp24;
- (struct _NSRect)convertRect:(struct _NSRect)fp8 toView:(id)fp24;
- (struct _NSRect)_convertRect:(struct _NSRect)fp8 fromAncestor:(id)fp24;
- (struct _NSRect)_convertRect:(struct _NSRect)fp8 toAncestor:(id)fp24;
- (struct _NSRect)centerScanRect:(struct _NSRect)fp8;
- (struct _NSPoint)_centerScanPoint:(struct _NSPoint)fp8;
- (id)_crackRect:(struct _NSRect *)fp8;
- (id)_crackPoint:(struct _NSPoint *)fp8;
- (id)_crackSize:(struct _NSSize *)fp8;
- (BOOL)canDraw;
- (BOOL)needsDisplay;
- (BOOL)_needsDisplayInRect:(struct _NSRect)fp8;
- (BOOL)_hasgState;
- (int)gState;
- (void)allocateGState;
- (void)releaseGState;
- (void)_invalidateResourceForGraphicsContext:(id)fp8;
- (void)setUpGState;
- (void)renewGState;
- (id)_focusInto:(id)fp8 withClip:(BOOL)fp12;
- (id)_gatherFocusStateInto:(id)fp8 upTo:(id)fp12 withContext:(id)fp16;
- (void)_focusFromView:(id)fp8 withContext:(id)fp12;
- (void)lockFocus;
- (BOOL)lockFocusIfCanDraw;
- (BOOL)lockFocusIfCanDrawInContext:(id)fp8;
- (void)unlockFocus;
- (BOOL)_lockFocusNoRecursion;
- (void)_unlockFocusNoRecursion;
- (void)_postFocusChangedNotification;
- (void)_recursiveRecomputeToolTips;
- (id)_invalidateGStatesForTree;
- (id)_invalidateFocus;
- (struct _NSRect)visibleRect;
- (BOOL)_canOptimizeDrawing;
- (BOOL)_optimizedRectFill:(const struct _NSRect *)fp8 gray:(float)fp12;
- (BOOL)_shouldAttemptIdleTimeDisposeOfLiveResizeCacheWithFrame:(struct _NSRect)fp8;
- (BOOL)_shouldLiveResizeUseCachedImage;
- (BOOL)_wantsLiveResizeToUseCachedImage;
- (BOOL)_needsRedrawBeforeFirstLiveResizeCache;
- (BOOL)_needsLiveResizeCacheInSyncWithSiblingView;
- (BOOL)_liveResizeCachedImageIsValid;
- (struct _NSRect)_liveResizeCacheableBounds;
- (struct _NSRect)_liveResizeCachedBounds;
- (id)_liveResizeCachedImage;
- (void)_releaseLiveResizeCachedImage;
- (void)_invalidateLiveResizeCachedImage;
- (void)_getRidOfCacheAndMarkYourselfAsDirty;
- (void)_captureVisibleIntoLiveResizeCache;
- (void)_drawLiveResizeCachedImage;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (BOOL)inLiveResize;
- (BOOL)_inLiveResize;
- (void)_setLiveResize:(BOOL)fp8;
- (void)_startLiveResizeAsTopLevel;
- (void)_endLiveResizeAsTopLevel;
- (void)_startLiveResizeCacheOK:(id)fp8;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (id)_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:(id)fp8;
- (BOOL)_drawRectIfEmpty;
- (BOOL)_drawRectIfEmptyWhenSubviewsCoverDirtyRect:(struct _NSRect)fp8;
- (void)_drawRect:(struct _NSRect)fp8 liveResizeFill:(struct _NSRect)fp24:(struct _NSRect)fp40:(struct _NSRect)fp56:(struct _NSRect)fp72 cacheCoveredArea:(struct _NSRect)fp88;
- (void)_drawRect:(struct _NSRect)fp8 liveResizeCacheCoveredArea:(struct _NSRect)fp24;
- (id)_multiClipDrawingHelper;
- (BOOL)_isDrawingMultiClippedContentAtIndex:(int)fp8;
- (id)_rectsForMultiClippedContentDrawing;
- (BOOL)_drawAsMultiClippedContentInRect:(struct _NSRect)fp8;
- (void)_drawRect:(struct _NSRect)fp8 clip:(BOOL)fp24;
- (struct _NSRect)_dirtyRect;
- (void)_lightWeightRecursiveDisplayInRect:(struct _NSRect)fp8;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)fp8 visRect:(struct _NSRect)fp12;
- (void)_propagateDownNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28 topView:(BOOL)fp32;
- (void)_displayRectIgnoringOpacity:(struct _NSRect)fp8 isVisibleRect:(BOOL)fp24 rectIsVisibleRectForView:(id)fp28;
- (void)_propagateDirtyRectsToOpaqueAncestors;
- (BOOL)mouseDownCanMoveWindow;
- (void *)_regionForOpaqueDescendants:(struct _NSRect)fp8 forMove:(BOOL)fp24;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)setNeedsDisplay:(BOOL)fp8;
- (void)displayIfNeeded;
- (void)display;
- (void)displayIfNeededInRect:(struct _NSRect)fp8;
- (void)displayRect:(struct _NSRect)fp8;
- (void)displayIfNeededIgnoringOpacity;
- (void)displayIgnoringOpacity;
- (void)displayIfNeededInRectIgnoringOpacity:(struct _NSRect)fp8;
- (void)displayRectIgnoringOpacity:(struct _NSRect)fp8;
- (void)_recursiveDisplayRectIgnoringOpacity:(struct _NSRect)fp8 inContext:(id)fp24 topView:(BOOL)fp28;
- (void)displayRectIgnoringOpacity:(struct _NSRect)fp8 inContext:(id)fp24;
- (void)drawRect:(struct _NSRect)fp8;
- (void)getRectsBeingDrawn:(const struct _NSRect **)fp8 count:(int *)fp12;
- (BOOL)needsToDrawRect:(struct _NSRect)fp8;
- (BOOL)wantsDefaultClipping;
- (id)bitmapImageRepForCachingDisplayInRect:(struct _NSRect)fp8;
- (void)cacheDisplayInRect:(struct _NSRect)fp8 toBitmapImageRep:(id)fp24;
- (float)backgroundGray;
- (void)scrollPoint:(const struct _NSPoint *)fp8 fromView:(id)fp12;
- (void)_scrollPoint:(const struct _NSPoint *)fp8 fromView:(id)fp12;
- (void)scrollPoint:(struct _NSPoint)fp8;
- (BOOL)scrollRectToVisible:(const struct _NSRect *)fp8 fromView:(id)fp12;
- (BOOL)_scrollRectToVisible:(const struct _NSRect *)fp8 fromView:(id)fp12;
- (BOOL)scrollRectToVisible:(struct _NSRect)fp8;
- (BOOL)autoscroll:(id)fp8;
- (struct _NSRect)adjustScroll:(struct _NSRect)fp8;
- (void)invalidate:(struct _NSRect)fp8;
- (void)scrollRect:(struct _NSRect)fp8 by:(struct _NSSize)fp24;
- (id)hitTest:(struct _NSPoint)fp8;
- (BOOL)mouse:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16;
- (id)viewWithTag:(int)fp8;
- (int)tag;
- (id)_recursiveFindDefaultButtonCell;
- (BOOL)performKeyEquivalent:(id)fp8;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (BOOL)_shouldBeTreatedAsInkEventInInactiveWindow:(id)fp8;
- (void)_setDrawDelegate:(id)fp8;
- (id)_drawDelegate;
- (void)addCursorRect:(struct _NSRect)fp8 cursor:(id)fp24;
- (void)removeCursorRect:(struct _NSRect)fp8 cursor:(id)fp24;
- (void)discardCursorRects;
- (void)resetCursorRects;
- (id)_resetCursorRects;
- (int)addTrackingRect:(struct _NSRect)fp8 owner:(id)fp24 userData:(void *)fp28 assumeInside:(BOOL)fp32;
- (void)_removeTrackingRectTag:(int)fp8;
- (void)_removeTrackingRects:(int *)fp8 count:(int)fp12;
- (void)removeTrackingRect:(int)fp8;
- (BOOL)shouldDrawColor;
- (id)enclosingScrollView;
- (void)_postBoundsChangeNotification;
- (void)setPostsBoundsChangedNotifications:(BOOL)fp8;
- (BOOL)postsBoundsChangedNotifications;
- (int)compareGeometry:(id)fp8;
- (void)_primitiveSetDefaultNextKeyView:(id)fp8;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_setDefaultKeyViewLoop;
- (void)_recursiveEnsureSubviewNextKeyViewsAreSubviewsOf:(id)fp8;
- (void)_ensureSubviewNextKeyViewsAreSubviews;
- (id)_editingFirstResponderIfIsASubview;
- (id)_findLastViewInKeyViewLoopStartingAtView:(id)fp8;
- (id)_findLastViewInKeyViewLoop;
- (void)_prepareForDefaultKeyLoopComputation;
- (void)_concludeDefaultKeyLoopComputation;
- (BOOL)_ignoreForKeyViewLoop;
- (void)_setIgnoreForKeyViewLoop:(BOOL)fp8;
- (BOOL)_isAncestorOfViewIdenticalTo:(void *)fp8;
- (BOOL)_isAncestorOf:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (void)_primitiveSetPreviousKeyView:(id)fp8;
- (void)_primitiveSetNextKeyView:(id)fp8;
- (void)setNextKeyView:(id)fp8;
- (id)nextKeyView;
- (id)previousKeyView;
- (void)_removeNextPointersToMe;
- (void)_removePreviousPointersToMe;
- (void)_removeFromKeyViewLoop;
- (void)_recursiveBreakKeyViewLoop;
- (void)_recursiveGatherAllKeyViewCandidatesInArray:(id)fp8;
- (id)nextValidKeyView;
- (id)previousValidKeyView;
- (BOOL)canBecomeKeyView;
- (id)_dynamicToolTipManager;
- (void)_setDynamicToolTipsEnabled:(BOOL)fp8;
- (BOOL)_dynamicToolTipsEnabled;
- (void)scrollWheel:(id)fp8;
- (void)_delayedEnableRevealoverComputationAfterScrollWheel:(id)fp8;
- (void)_setRevealoversDirty:(BOOL)fp8;
- (void)_setWantsRevealovers:(BOOL)fp8;
- (BOOL)_wantsRevealovers;
- (BOOL)_shouldComputeRevealovers;
- (void)_recursiveWindowDidEnableToolTipCreationAndDisplay;
- (void)_removeAllRevealovers;
- (void)_invalidateAllRevealovers;
- (void)_toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)fp8 adding:(BOOL)fp12;
- (id)_revealoverInfoForCell:(id)fp8 cellRect:(struct _NSRect)fp12;
- (int)_addToolTipRect:(struct _NSRect)fp8 displayDelegate:(id)fp24 displayInfo:(id)fp28;
- (void)_addRevealoverIfNecessaryForCell:(id)fp8 cellRect:(struct _NSRect)fp12;
- (struct _NSRect)_toolTipRectForCell:(id)fp8 withFrame:(struct _NSRect)fp12;
- (void)view:(id)fp8 customToolTip:(int)fp12 drawInView:(id)fp16 displayInfo:(id)fp20;
- (struct _NSRect)view:(id)fp8 customToolTip:(int)fp12 frameForToolTipWithDisplayInfo:(id)fp16;
- (BOOL)view:(id)fp8 customToolTip:(int)fp12 fadeOutAllowedForToolTipWithDisplayInfo:(id)fp16;
- (void)setToolTip:(id)fp8;
- (id)toolTip;
- (int)addToolTipRect:(struct _NSRect)fp8 owner:(id)fp24 userData:(void *)fp28;
- (void)removeToolTip:(int)fp8;
- (void)removeAllToolTips;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)interpretKeyEvents:(id)fp8;
- (void)setMenu:(id)fp8;
- (id)menu;
- (id)menuForEvent:(id)fp8;
- (void)rightMouseDown:(id)fp8;
- (id)_contextMenuTargetForEvent:(id)fp8;
- (void)helpRequested:(id)fp8;
- (void)_windowChangedKeyState;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;
- (BOOL)wantsDoubleBuffering;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)fp8;
- (void)_autoscrollForDraggingInfo:(id)fp8 timeDelta:(double)fp12;
- (id)_highlightColorForCell:(id)fp8;
- (id)inputContext;

@end

@interface _NSViewAuxiliary : NSObject
{
    int leftover1;
    int leftover2;
    int _retainCount;
    struct _NSRect _dirtyRect;
    NSRegion *_dirtyRegion;
    struct _NSRect _dirtyRectsBeingDrawnBounds;
    struct _NSRect *_dirtyRectsBeingDrawnArray;
    unsigned int _dirtyRectsBeingDrawnCount;
    struct _NSMapTable *_gStateTable;
    NSInputContext *_inputContext;
    NSImage *_liveResizeCachedImage;
    struct _NSRect _liveResizeCachedImageFrame;
    NSDate *_lastIdleLiveResizeInvalidation;
    struct {
        unsigned int _liveResizeImageCanBeCachedInStart:1;
        unsigned int _liveResizeActive:1;
        unsigned int _usesQuickdraw:1;
        unsigned int _hidden:1;
        unsigned int _hiddenOrHasHiddenAncestor:1;
        unsigned int _reallyNeedsDisplayForBounds:1;
        unsigned int _focusRingType:2;
        unsigned int _drawWithTintWhenHidden:1;
        unsigned int _impactsWindowMoving:1;
        unsigned int _drawsOwnDescendants:1;
        unsigned int _drawnByAncestor:1;
        unsigned int _hasSurface:1;
        unsigned int _fillBehindSurfaceNeedsDisplay:1;
        unsigned int _dynamicToolTipsEnabled:1;
        unsigned int _revealoverComputationEnabled:1;
        unsigned int _revealoverComputationNeeded:1;
        unsigned int _revealoversWanted:1;
        unsigned int _hasDrawDelegate:1;
        unsigned int _inScaledWindow:1;
        unsigned int _ignoreForKeyViewLoop:1;
        unsigned int _searchingForKeyViewReplacement:1;
        unsigned int _hasMultiClipDrawingHelper:1;
        unsigned int _displayingAllDirty:1;
        unsigned int _focusRingNeedsDisplayOutsideSelf:1;
        unsigned int _reserved:7;
    } _vFlags2;
    _NSBindingAdaptor *_bindingAdaptor;
    struct _NSViewTrackingRect *_trackingRects;
    NSViewDynamicToolTipManager *_dynamicToolTipManager;
    struct _NSPoint topLeft;
    struct _NSRect _errorOffsets;
    struct _NSSize oldSize;
    NSRegion *_regionInvalidatedDuringDisplay;
}

@end

@interface _NSViewGState : NSObject
{
    NSGraphicsContext *_graphicsContext;
    struct CGGState *_state;
    BOOL _isInvalid;
}

- (id)initWithGraphicsContext:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSView (NSPrivateIBSupport)
+ (void)_setHiddenViewsTint:(id)fp8;
+ (id)_hiddenViewsTint;
- (BOOL)_drawsWithTintWhenHidden;
- (void)_setDrawsWithTintWhenHidden:(BOOL)fp8;
@end

@interface NSView (NSInternal)
- (void)_allocAuxiliary:(BOOL)fp8;
- (id)_briefDescription;
- (id)_subtreeDescriptionWithDepth:(int)fp8;
- (id)_subtreeDescription;
- (void)_drawRectClipSaveDirtyRectsBeingDrawn:(CDAnonymousStruct24 *)fp8 andGetForRect:(struct _NSRect *)fp12;
- (void)_drawRectClipRestoreDirtyRectsBeingDrawn:(CDAnonymousStruct24 *)fp8;
- (void)_clearDirtyRectsForTreeInRect:(struct _NSRect)fp8;
- (void)_mergeRegionInvalidatedDuringDisplayIntoDirtyRegion;
- (void)_trimRegionInvalidatedDuringDisplayToRectsJustDrawn;
- (id)_subviewsExcludingHiddenViews;
- (void)_recursiveDisableTrackingRectsForHiddenViews;
- (void)_recursiveEnableTrackingRectsForNonHiddenViews;
- (void)_recursiveOrderOutSurfacesForHiddenViews;
- (void)_recursiveOrderFrontSurfacesForNonHiddenViews;
- (void)_addTrackingTag:(int)fp8;
- (void)_addTrackingRects:(struct _NSRect *)fp8 owner:(id)fp12 userDataList:(void **)fp16 assumeInsideList:(char *)fp20 trackingNums:(int *)fp24 count:(int)fp28;
- (int)_addTrackingRect:(struct _NSRect)fp8 owner:(id)fp24 userData:(void *)fp28 assumeInside:(BOOL)fp32 useTrackingNum:(int)fp36;
- (BOOL)_reallyNeedsDisplayForBounds;
- (void)_clearDirtyRectsForLockedTree;
- (void)_clearDirtyRectsForTree;
- (void)_getDirtyRects:(struct _NSRect **)fp8 clippedToRect:(struct _NSRect)fp12 count:(int *)fp28 boundingBox:(struct _NSRect *)fp32;
- (int)_effectiveFocusRingType;
- (id)_dirtyRegion;
- (void)_setImpactsWindowMoving:(BOOL)fp8;
- (BOOL)_impactsWindowMoving;
- (struct _NSRect)_opaqueRect;
- (void)_compositeHiddenViewHighlight;
- (void)_handleBoundsChangeForSubview:(id)fp8;
- (void)_handleFrameChangeForSubview:(id)fp8;
@end

@interface NSView (NSView_QuickDraw)
- (BOOL)_usesQuickdraw;
- (void)_setUsesQuickdraw:(BOOL)fp8;
- (struct Rect)_convertToQDRect:(struct _NSRect)fp8;
- (struct _NSRect)_convertToNSRect:(struct Rect)fp8;
@end

@interface NSView (NSSurface)
- (void)_setSurface:(id)fp8;
- (id)_surface;
- (struct _NSRect)_surfaceBounds;
@end

@interface NSView (NSImageCacheViewCompatibility)
- (BOOL)lockFocusIfCanDrawInFrame:(struct _NSRect)fp8 flipped:(BOOL)fp24 clip:(BOOL)fp28;
@end

@interface NSView (NSViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)_accessibilityParentForSubview:(id)fp8;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (struct _NSPoint)accessibilityWindowPointForShowMenu;
- (void)_accessibilityShowMenu:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityPopUpMenuParent:(id)fp8;
- (void)accessibilityPopUpMenuCreated:(id)fp8;
@end

@interface NSViewHierarchyLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)lockForReadingWithExceptionHandler:(BOOL)fp8;
- (void)lockForReading;
- (void)lockForWriting;
- (void)lock;
- (void)unlock;
- (void)unlockTopMostReader;
- (id)description;

@end

@interface NSViewTemplate : NSView
{
    NSString *_className;
}

+ (void)initialize;
- (id)retain;
- (void)release;
- (unsigned int)retainCount;
- (id)initWithView:(id)fp8 className:(id)fp12;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)finalize;
- (void)dealloc;
- (id)className;
- (void)setClassName:(id)fp8;
- (id)createRealObject;
- (id)awakeAfterUsingCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSMoveHelper : NSObject
{
    struct __CFRunLoopTimer *_moveTimer;
    struct __CFRunLoop *_runLoop;
    double _startTime;
    double _totalTime;
    float _percent;
    void *_effect;
    NSWindow *_window;
    NSWindow *_sheet;
    struct _NSRect _frameDelta;
    struct _NSRect _startFrame;
    struct _NSPoint _sheetOrigin;
    struct _NSRect _sheetDelta;
    struct _NSRect _sheetStartFrame;
    float _screenMaxY;
    float _sheetHeight;
    int _flavor;
    BOOL _done;
    BOOL _displayFlag;
    float _sheetEffectLeft;
    float _sheetEffectRight;
}

+ (float)_windowAnimationVelocity;
- (id)init;
- (void *)_effect;
- (void)_releaseEffect;
- (void)dealloc;
- (void)finalize;
- (void)_resizeWindow:(id)fp8 toFrame:(struct _NSRect)fp12 display:(BOOL)fp28;
- (void)_doAnimation;
- (void)_stopAnimation;

@end

@interface NSWindow : NSResponder
{
    struct _NSRect _frame;
    id _contentView;
    id _delegate;
    NSResponder *_firstResponder;
    NSView *_lastLeftHit;
    NSView *_lastRightHit;
    id _counterpart;
    id _fieldEditor;
    int _winEventMask;
    int _windowNum;
    int _level;
    NSColor *_backgroundColor;
    id _borderView;
    unsigned char _postingDisabled;
    unsigned char _styleMask;
    unsigned char _flushDisabled;
    unsigned char _reservedWindow1;
    void *_cursorRects;
    void *_trectTable;
    NSImage *_miniIcon;
    int _lastResizeTime;
    NSMutableSet *_dragTypes;
    NSString *_representedFilename;
    struct _NSSize *_sizeLimits;
    NSString *_frameSaveName;
    NSSet *_regDragTypes;
    struct __wFlags _wFlags;
    id _defaultButtonCell;
    NSView *_initialFirstResponder;
    NSWindowAuxiliary *_auxiliaryStorage;
}

+ (void)initialize;
+ (unsigned int)_validateStyleMask:(unsigned int)fp8;
+ (Class)frameViewClassForStyleMask:(unsigned int)fp8;
+ (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
+ (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (struct _NSSize)minContentSizeForMinFrameSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
+ (float)minFrameWidthWithTitle:(id)fp8 styleMask:(unsigned int)fp12;
+ (id)standardWindowButton:(int)fp8 forStyleMask:(unsigned int)fp12;
+ (int)defaultDepthLimit;
+ (void)_minimizeAll;
+ (void)_setAutoreleaseDuringLiveResize:(BOOL)fp8;
+ (BOOL)_autoreleaseDuringLiveResize;
+ (void)_removeFrameUsingName:(id)fp8 domain:(id)fp12;
+ (void)removeFrameUsingName:(id)fp8;
+ (void)_createMenuMapLock;
+ (void)menuChanged:(id)fp8;
+ (id)_windowsForMenu:(id)fp8;
- (void)_fromScreenCommonCode:(id)fp8;
- (void)_setWantsToBeOnMainScreen:(BOOL)fp8;
- (id)_initContent:(const struct _NSRect *)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20 screen:(id)fp24 contentView:(id)fp28;
- (void)_commonInitFrame:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (void)_setUtilityWindow:(BOOL)fp8;
- (BOOL)_isUtilityWindow;
- (void)_setNonactivatingPanel:(BOOL)fp8;
- (BOOL)_isNonactivatingPanel;
- (id)_initContent:(const struct _NSRect *)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20 contentView:(id)fp24;
- (id)_initContent:(const struct _NSRect *)fp8 styleMask:(unsigned int)fp12 backing:(int)fp16 defer:(BOOL)fp20 counterpart:(id)fp24;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32 screen:(id)fp36;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (id)init;
- (id)_initFromGlobalWindow:(int)fp8 inRect:(const struct _NSRect *)fp12 styleMask:(unsigned int)fp16;
- (id)_initFromGlobalWindow:(int)fp8 inRect:(const struct _NSRect *)fp12;
- (void)_finishedMakingConnections;
- (void)_setTexturedBackground:(BOOL)fp8;
- (BOOL)_hasMetalSheetEffect;
- (struct _NSRect)_pointRectInPixels:(struct _NSRect)fp8;
- (struct _NSRect)_pixelRectInPoints:(struct _NSRect)fp8;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)frameRectForContentRect:(struct _NSRect)fp8;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24;
- (struct _NSRect)contentRectForFrameRect:(struct _NSRect)fp8;
- (struct _NSSize)minFrameSizeForMinContentSize:(struct _NSSize)fp8 styleMask:(unsigned int)fp16;
- (BOOL)_windowDying;
- (void)_cancelPerformSelectors;
- (void)dealloc;
- (void)finalize;
- (void)release;
- (id)windowController;
- (void)setWindowController:(id)fp8;
- (id)_getUndoManager:(BOOL)fp8;
- (id)_getActiveUndoManager;
- (id)undoManager;
- (void)undo:(id)fp8;
- (void)redo:(id)fp8;
- (BOOL)_wantToBeModal;
- (void)_setShowingModalFrame:(BOOL)fp8;
- (void)_setWindowNumber:(int)fp8;
- (void)_resetFirstResponder;
- (id)_viewDetaching:(id)fp8;
- (id)_viewFreeing:(id)fp8;
- (void)_setEventMask:(int)fp8;
- (void)_setWindowTag;
- (void)_commonAwake;
- (void)setBackingType:(int)fp8;
- (int)backingType;
- (int)_backingType;
- (void)setExcludedFromWindowsMenu:(BOOL)fp8;
- (BOOL)isExcludedFromWindowsMenu;
- (BOOL)_titleIsRepresentedFilename;
- (id)_displayName;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)representedFilename;
- (void)_setRepresentedFilename:(id)fp8;
- (void)setRepresentedFilename:(id)fp8;
- (void)setTitleWithRepresentedFilename:(id)fp8;
- (void)_dosetTitle:(id)fp8 andDefeatWrap:(BOOL)fp12;
- (id)_calcAndSetFilenameTitle;
- (BOOL)_isTitleHidden;
- (id)_customTitleCell;
- (struct _NSRect)_customTitleFrame;
- (void)setContentView:(id)fp8;
- (id)contentView;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)addDocumentIconButton;
- (id)standardWindowButton:(int)fp8;
- (int)windowNumber;
- (int)_realWindowNumber;
- (void *)_auxStorage;
- (int)_globalWindowNum;
- (int)_cachedGlobalWindowNum;
- (void)_lockViewHierarchyForModification;
- (void)_unlockViewHierarchyForModification;
- (void)_lockViewHierarchyForDrawing;
- (void)_lockViewHierarchyForDrawingWithExceptionHandler:(BOOL)fp8;
- (void)_unlockViewHierarchyForDrawing;
- (id)fieldEditor:(BOOL)fp8 forObject:(id)fp12;
- (void)endEditingFor:(id)fp8;
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;
- (BOOL)_isDraggable;
- (struct _NSRect)dragRectForFrameRect:(struct _NSRect)fp8;
- (BOOL)_useMetalPattern;
- (void)_oldPlaceWindow:(struct _NSRect)fp8;
- (void)_setFrameCommon:(struct _NSRect)fp8 display:(BOOL)fp24 stashSize:(BOOL)fp28;
- (double)animationResizeTime:(struct _NSRect)fp8;
- (void)setFrame:(struct _NSRect)fp8 display:(BOOL)fp24 animate:(BOOL)fp28;
- (void)setFrame:(struct _NSRect)fp8 display:(BOOL)fp24;
- (void)setContentSize:(struct _NSSize)fp8;
- (void)_setContentRect:(struct _NSRect)fp8;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameTopLeftPoint:(struct _NSPoint)fp8;
- (void)_setLocationTemporary:(BOOL)fp8;
- (BOOL)_locationTemporary;
- (void)_setFrame:(struct _NSRect)fp8;
- (struct _NSRect)frame;
- (void)setResizeIncrements:(struct _NSSize)fp8;
- (struct _NSSize)resizeIncrements;
- (void)setAspectRatio:(struct _NSSize)fp8;
- (struct _NSSize)aspectRatio;
- (void)setContentResizeIncrements:(struct _NSSize)fp8;
- (struct _NSSize)contentResizeIncrements;
- (void)setContentAspectRatio:(struct _NSSize)fp8;
- (struct _NSSize)contentAspectRatio;
- (struct _NSPoint)mouseLocationOutsideOfEventStream;
- (BOOL)_isDocWindow;
- (unsigned int)styleMask;
- (id)_resetDisableCounts;
- (void)disableFlushWindow;
- (void)enableFlushWindow;
- (BOOL)isFlushWindowDisabled;
- (void)_enableScreenUpdatesIfNeeded;
- (void)flushWindow;
- (void)flushWindowIfNeeded;
- (void)disableScreenUpdatesUntilFlush;
- (void)_forceFlushWindowToScreen;
- (void)_postWindowNeedsDisplay;
- (id)_resetPostingCounts;
- (void)_disablePosting;
- (void)_enablePosting;
- (BOOL)_postingDisabled;
- (void)_setNeedsDisplay:(id)fp8;
- (void)setViewsNeedDisplay:(BOOL)fp8;
- (BOOL)viewsNeedDisplay;
- (void)displayIfNeeded;
- (BOOL)_canOptimizeDrawing;
- (BOOL)_isImageCache;
- (void)useOptimizedDrawing:(BOOL)fp8;
- (void)display;
- (void)setAutodisplay:(BOOL)fp8;
- (BOOL)isAutodisplay;
- (void)update;
- (id)_borderView;
- (void)_installTrackingRect:(struct _NSRect)fp8 assumeInside:(BOOL)fp24 userData:(void *)fp28 trackingNum:(int)fp32;
- (void)_installTrackingRects:(struct _NSRect *)fp8 insideList:(char *)fp12 userDataList:(void **)fp16 trackingNumList:(int *)fp20 count:(int)fp24;
- (void)_removeTrackingRect:(int)fp8;
- (void)_removeTrackingRects:(int *)fp8 count:(int)fp12;
- (int)_nextTrackingNum;
- (void)_setTrackingRects;
- (void)_clearTrackingRects;
- (void)_activateTrackingRectsForApplicationActivation;
- (void)_deactivateTrackingRectsForApplicationDeactivation;
- (CDAnonymousStruct12 *)_setTrackingRect:(struct _NSRect)fp8 inside:(BOOL)fp24 owner:(id)fp28 userData:(void *)fp32 useTrackingNum:(int)fp36 install:(BOOL)fp40;
- (void)_setTrackingRects:(struct _NSRect *)fp8 insideList:(char *)fp12 owner:(id)fp16 userDataList:(void **)fp20 trackingNums:(int *)fp24 count:(int)fp28;
- (int)_setTrackingRect:(struct _NSRect)fp8 inside:(BOOL)fp24 owner:(id)fp28 userData:(void *)fp32 useTrackingNum:(int)fp36;
- (int)_setTrackingRect:(struct _NSRect)fp8 inside:(BOOL)fp24 owner:(id)fp28 userData:(void *)fp32;
- (void)_discardTrackingRects:(int *)fp8 count:(int)fp12;
- (void)_discardTrackingRect:(int)fp8;
- (void)_disableTrackingRect:(int)fp8;
- (void)_enableTrackingRect:(int)fp8;
- (BOOL)_containsTrackingRect:(int)fp8;
- (void)_lockFirstResponder;
- (void)_unlockFirstResponder;
- (BOOL)makeFirstResponder:(id)fp8;
- (id)_newFirstResponderAfterResigning;
- (id)_oldFirstResponderBeforeBecoming;
- (id)firstResponder;
- (BOOL)_allowsOrdering;
- (id)nextEventMatchingMask:(unsigned int)fp8;
- (id)nextEventMatchingMask:(unsigned int)fp8 untilDate:(id)fp12 inMode:(id)fp16 dequeue:(BOOL)fp20;
- (id)currentEvent;
- (void)setAcceptsMouseMovedEvents:(BOOL)fp8;
- (BOOL)acceptsMouseMovedEvents;
- (void)setIgnoresMouseEvents:(BOOL)fp8;
- (BOOL)ignoresMouseEvents;
- (void)discardEventsMatchingMask:(unsigned int)fp8 beforeEvent:(id)fp12;
- (void)postEvent:(id)fp8 atStart:(BOOL)fp12;
- (SEL)_keyboardUIActionForEvent:(id)fp8;
- (void)_cycleWindows:(id)fp8;
- (void)_cycleWindowsBackwards:(id)fp8;
- (void)_cycleDrawers:(id)fp8;
- (void)_cycleDrawersBackwards:(id)fp8;
- (void)_handleFocusToolbarHotKey:(id)fp8;
- (void)_cancelKey:(id)fp8;
- (void)cancelOperation:(id)fp8;
- (void)selectKeyViewFollowingView:(id)fp8;
- (void)selectKeyViewPrecedingView:(id)fp8;
- (void)selectNextKeyView:(id)fp8;
- (void)selectPreviousKeyView:(id)fp8;
- (id)_findKeyLoopGroupingViewFollowingKeyLoopGroupingView:(id)fp8 direction:(int)fp12;
- (id)_findFirstKeyViewInDirection:(int)fp8 forKeyLoopGroupingView:(id)fp12;
- (void)_selectFirstKeyView;
- (int)keyViewSelectionDirection;
- (void)_setKeyViewSelectionDirection:(int)fp8;
- (void)_setFallBackInitialFirstResponder:(id)fp8;
- (void)setInitialFirstResponder:(id)fp8;
- (id)initialFirstResponder;
- (void)setKeyView:(id)fp8;
- (BOOL)_processKeyboardUIKey:(id)fp8;
- (BOOL)performMnemonic:(id)fp8;
- (void)_verifyDefaultButtonCell:(BOOL)fp8;
- (void)setDefaultButtonCell:(id)fp8;
- (void)_setDefaultButtonCell:(id)fp8;
- (id)defaultButtonCell;
- (void)_disableEnablingKeyEquivalentForDefaultButtonCell;
- (void)_enableEnablingKeyEquivalentForDefaultButtonCell;
- (void)disableKeyEquivalentForDefaultButtonCell;
- (void)enableKeyEquivalentForDefaultButtonCell;
- (void)_drawKeyboardUIIndicationForView:(id)fp8 debuggingIndex:(id)fp12;
- (void)_drawKeyboardUILoopStartingAtResponder:(id)fp8 validOnly:(BOOL)fp12;
- (BOOL)_selectAnyValidResponderOverride;
- (void)_clearAnyValidResponderOverride;
- (void)_toggleSelectAnyValidResponderOverride;
- (void)setAutorecalculatesKeyViewLoop:(BOOL)fp8;
- (BOOL)autorecalculatesKeyViewLoop;
- (void)recalculateKeyViewLoop;
- (void)_setKeyViewLoopNeedsRecalc:(BOOL)fp8;
- (void)_setKeyViewGroupBoundaryNeedsRecalc:(BOOL)fp8;
- (BOOL)_keyViewRedirectionDisabled;
- (void)_setKeyViewRedirectionDisabled:(BOOL)fp8;
- (void)_performToggleToolbarShown:(id)fp8;
- (void)showToolbar:(id)fp8;
- (void)hideToolbar:(id)fp8;
- (void)toggleToolbarShown:(id)fp8;
- (void)runToolbarConfigurationPalette:(id)fp8;
- (void)runToolbarCustomizationPalette:(id)fp8;
- (void)changeToolbarDisplayMode:(id)fp8;
- (void)toggleUsingSmallToolbarIcons:(id)fp8;
- (void)_toggleToolbarConfigPanel:(id)fp8;
- (void)_setNextToolbarSizeAndDisplayMode:(id)fp8;
- (void)_setPreviousToolbarSizeAndDisplayMode:(id)fp8;
- (void)_setNextToolbarDisplayMode:(id)fp8;
- (void)_setNextToolbarSizeMode:(id)fp8;
- (BOOL)_toolbarButtonIsClickable;
- (void)_toolbarPillButtonClicked:(id)fp8;
- (id)_toolbarView;
- (BOOL)_toolbarIsShown;
- (void)setToolbar:(id)fp8;
- (id)toolbar;
- (BOOL)_hasToolbar;
- (void)_showToolbar:(id)fp8 animate:(BOOL)fp12;
- (void)_hideToolbar:(id)fp8 animate:(BOOL)fp12;
- (void)_toolbarFrameSizeChanged:(id)fp8 oldSize:(struct _NSSize)fp12;
- (void)setShowsToolbarButton:(BOOL)fp8;
- (BOOL)showsToolbarButton;
- (void)_setResizeWeighting:(int)fp8;
- (int)_resizeWeighting;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (BOOL)wantsScrollWheelEvent:(id)fp8;
- (void)sendEvent:(id)fp8;
- (BOOL)_lmouseUpPending;
- (id)_lastLeftHit;
- (id)_lastRightHit;
- (void)_windowExposed:(id)fp8;
- (void)_setNeedsZoom:(id)fp8;
- (void)_screenChanged:(id)fp8;
- (void)_setFrameAfterMove:(struct _NSRect)fp8;
- (void)_windowMovedToRect:(struct _NSRect)fp8;
- (void)_setAutoPositionMask:(unsigned int)fp8;
- (unsigned int)_autoPositionMask;
- (void)_adjustWindowToScreen;
- (id)_displayChanged;
- (id)_displayProfileChanged;
- (id)_getPositionFromServer;
- (void)_windowMoved:(id)fp8;
- (void)_windowMovedToPoint:(struct _NSPoint)fp8;
- (void)resizeToScreenWithEvent:(id)fp8;
- (void)_hideMenu:(id)fp8;
- (int)resizeFlags;
- (void)makeKeyWindow;
- (void)makeMainWindow;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_resignKeyFocus;
- (BOOL)_isKeyWindowIgnoringFocus;
- (void)becomeMainWindow;
- (void)resignMainWindow;
- (void)_frameDidDrawTitle;
- (void)_setTitleNeedsDisplay;
- (void)_setFrameNeedsDisplay:(BOOL)fp8;
- (void)rightMouseDown:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)_close;
- (void)close;
- (void)setReleasedWhenClosed:(BOOL)fp8;
- (BOOL)isReleasedWhenClosed;
- (BOOL)isMiniaturized;
- (void)miniaturize:(id)fp8;
- (void)deminiaturize:(id)fp8;
- (id)_counterpart;
- (struct _NSRect)_standardFrame;
- (BOOL)isZoomed;
- (void)zoom:(id)fp8;
- (BOOL)tryToPerform:(SEL)fp8 with:(id)fp12;
- (id)validRequestorForSendType:(id)fp8 returnType:(id)fp12;
- (id)_setCounterpart:(id)fp8;
- (id)_getCounterpart;
- (BOOL)_hasGradientBackground;
- (id)_gradientImage;
- (id)_textureImage;
- (id)_texturePattern;
- (BOOL)_scalesBackgroundHorizontally;
- (BOOL)_scalesBackgroundVertically;
- (BOOL)_hasScaledBackground;
- (id)_generateScaledBackground;
- (void)_invalidateScaledBackground;
- (id)_scaledBackground;
- (void)_invalidateCompositedBackground;
- (void)_resizeMetalBackground;
- (id)_generateMetalBackground;
- (id)_generateCompositedBackground;
- (id)_compositedBackground;
- (BOOL)_hasBackgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setMovableByWindowBackground:(BOOL)fp8;
- (BOOL)isMovableByWindowBackground;
- (void)setHidesOnDeactivate:(BOOL)fp8;
- (BOOL)hidesOnDeactivate;
- (void)setDynamicDepthLimit:(BOOL)fp8;
- (BOOL)hasDynamicDepthLimit;
- (void)setDepthLimit:(int)fp8;
- (int)depthLimit;
- (void)_setWindowDepth:(int)fp8;
- (int)_windowDepth;
- (id)_adjustDynamicDepthLimit;
- (BOOL)displaysWhenScreenProfileChanges;
- (void)setDisplaysWhenScreenProfileChanges:(BOOL)fp8;
- (void)center;
- (BOOL)becomesKeyOnlyIfNeeded;
- (void)makeKeyAndOrderFront:(id)fp8;
- (BOOL)_toggleOrderedFrontMostWillOrderOut;
- (void)_toggleOrderedFrontMost:(id)fp8;
- (id)_specialServicesMenuUpdate;
- (void)orderFront:(id)fp8;
- (void)orderBack:(id)fp8;
- (void)orderOut:(id)fp8;
- (void)orderFrontRegardless;
- (void)_justOrderOut;
- (void)orderWindow:(int)fp8 relativeTo:(int)fp12;
- (void)_doOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16;
- (void)_doOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16 forCounter:(BOOL)fp20 force:(BOOL)fp24;
- (void)_orderOutAndCalcKeyWithCounter:(BOOL)fp8;
- (void)_reallyDoOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16 forCounter:(BOOL)fp20 force:(BOOL)fp24 isModal:(BOOL)fp28;
- (void)_doOrderWindow:(int)fp8 relativeTo:(int)fp12 findKey:(BOOL)fp16 forCounter:(BOOL)fp20 force:(BOOL)fp24 isModal:(BOOL)fp28;
- (BOOL)_wantsToDestroyRealWindow;
- (void)_setWantsToDestroyRealWindow:(BOOL)fp8;
- (id)_destroyRealWindow:(BOOL)fp8;
- (id)_destroyRealWindowIfNotVisible:(id)fp8;
- (id)_destroyRealWindowIfNeeded;
- (int)level;
- (void)setLevel:(int)fp8;
- (id)_clearModalWindowLevel;
- (void)_setModalWindowLevel;
- (id)_restoreModalWindowLevel;
- (void)setCanCycle:(BOOL)fp8;
- (BOOL)canCycle;
- (void)setCanHide:(BOOL)fp8;
- (BOOL)canHide;
- (id)_tempHideHODWindow;
- (id)_tempUnhideHODWindow;
- (id)_hideHODWindow;
- (id)_unhideHODWindow;
- (id)_tempHide:(BOOL)fp8 relWin:(int)fp12;
- (BOOL)_wantsHideOnDeactivate;
- (void)_setWantsHideOnDeactivate:(BOOL)fp8;
- (void)setMiniwindowImage:(id)fp8;
- (void)_setMiniImageInDock;
- (void)setMiniwindowTitle:(id)fp8;
- (id)miniwindowImage;
- (id)miniwindowTitle;
- (id)_makeMiniView;
- (void)_setDocumentEdited:(BOOL)fp8;
- (void)setDocumentEdited:(BOOL)fp8;
- (BOOL)isDocumentEdited;
- (BOOL)isVisible;
- (void)_setVisible:(BOOL)fp8;
- (BOOL)isKeyWindow;
- (BOOL)_isKeyWindow;
- (BOOL)isMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)worksWhenModal;
- (BOOL)_blocksActionWhenModal:(SEL)fp8;
- (BOOL)_miniaturizedOrCanBecomeMain;
- (BOOL)_visibleAndCanBecomeKey;
- (BOOL)_visibleAndCanBecomeKeyLimitedOK:(BOOL)fp8;
- (struct _NSPoint)convertBaseToScreen:(struct _NSPoint)fp8;
- (struct _NSPoint)convertScreenToBase:(struct _NSPoint)fp8;
- (void)__close;
- (void)_close:(id)fp8;
- (void)_document:(id)fp8 shouldClose:(BOOL)fp12 contextInfo:(void *)fp16;
- (void)performClose:(id)fp8;
- (void)performMiniaturize:(id)fp8;
- (void)performZoom:(id)fp8;
- (id)_batchClose;
- (id)_batchZoom;
- (int)gState;
- (void)setOneShot:(BOOL)fp8;
- (id)_setOneShotIsDelayed:(BOOL)fp8;
- (BOOL)isOneShot;
- (void)_setAvoidsActivation:(BOOL)fp8;
- (BOOL)_avoidsActivation;
- (void)_setPreventsActivation:(BOOL)fp8;
- (BOOL)_preventsActivation;
- (void)_changeJustMain;
- (void)_changeKeyAndMainLimitedOK:(BOOL)fp8;
- (void)_win32ChangeKeyAndMain;
- (id)_wsmIconInitFor:(int)fp8;
- (BOOL)_wsmOwnsWindow;
- (id)dataWithEPSInsideRect:(struct _NSRect)fp8;
- (id)dataWithPDFInsideRect:(struct _NSRect)fp8;
- (void)print:(id)fp8;
- (BOOL)_showToolTip;
- (void)setAllowsToolTipsWhenApplicationIsInactive:(BOOL)fp8;
- (BOOL)allowsToolTipsWhenApplicationIsInactive;
- (BOOL)_addCursorRect:(struct _NSRect)fp8 cursor:(id)fp24 forView:(id)fp28;
- (BOOL)_removeCursorRect:(struct _NSRect)fp8 cursor:(id)fp24 forView:(id)fp28;
- (BOOL)_hasCursorRectsForView:(id)fp8;
- (void)GDBDumpCursorRects;
- (BOOL)_inLiveResize;
- (void)_setLiveResizeImageCacheingEnabled:(BOOL)fp8;
- (BOOL)_liveResizeImageCacheingEnabled;
- (void)setPreservesContentDuringLiveResize:(BOOL)fp8;
- (BOOL)preservesContentDuringLiveResize;
- (BOOL)_liveResizeLOptimizationEnabled;
- (void)_startLiveResize;
- (void)_endLiveResize;
- (void)_pauseUIHeartBeatingInView:(id)fp8;
- (void)_resumeUIHeartBeatingInView:(id)fp8;
- (BOOL)_hasCursorRects;
- (void)disableCursorRects;
- (void)enableCursorRects;
- (BOOL)areCursorRectsEnabled;
- (void)discardCursorRects;
- (void)_postInvalidCursorRects;
- (void)_disableToolTipCreationAndDisplay;
- (void)_enableToolTipCreationAndDisplay;
- (BOOL)_isToolTipCreationAndDisplayEnabled;
- (void)_invalidateAllRevealoversForView:(id)fp8;
- (void)_invalidateCursorRectsForView:(id)fp8 force:(BOOL)fp12;
- (void)invalidateCursorRectsForView:(id)fp8;
- (BOOL)allowsCursorRectsWhenInactive;
- (void)setAllowsCursorRectsWhenInactive:(BOOL)fp8;
- (BOOL)_shouldShowCursorRects;
- (void)resetCursorRects;
- (id)_discardCursorRectsForView:(id)fp8;
- (void)_markCursorRectsForRemovedView:(id)fp8;
- (void)_deallocCursorRects;
- (void)cacheImageInRect:(struct _NSRect)fp8;
- (void)restoreCachedImage;
- (void)discardCachedImage;
- (id)_stringWithSavedFrame;
- (void)_saveFrameUsingName:(id)fp8 domain:(id)fp12;
- (void)saveFrameUsingName:(id)fp8;
- (id)stringWithSavedFrame;
- (struct _NSRect)_adjustedFrameFromDefaults:(struct _NSRect)fp8;
- (struct _NSRect)_adjustedFrameForSaving:(struct _NSRect)fp8;
- (BOOL)_setFrameFromString:(id)fp8 force:(BOOL)fp12;
- (BOOL)_setFrameUsingName:(id)fp8 domain:(id)fp12 force:(BOOL)fp16;
- (BOOL)_setFrameUsingName:(id)fp8 domain:(id)fp12;
- (void)setFrameFromString:(id)fp8;
- (BOOL)setFrameUsingName:(id)fp8;
- (BOOL)setFrameUsingName:(id)fp8 force:(BOOL)fp12;
- (BOOL)_setFrameAutosaveName:(id)fp8 changeFrame:(BOOL)fp12;
- (BOOL)setFrameAutosaveName:(id)fp8;
- (id)frameAutosaveName;
- (id)_toggleFrameAutosaveEnabled:(id)fp8;
- (void)_setFrameSavedUsingTitle:(BOOL)fp8;
- (BOOL)canStoreColor;
- (id)deepestScreen;
- (id)deviceDescription;
- (id)screen;
- (void)setHasShadow:(BOOL)fp8;
- (BOOL)hasShadow;
- (void)invalidateShadow;
- (struct _NSRect)constrainFrameRect:(struct _NSRect)fp8 toScreen:(id)fp24;
- (void)_validSize:(struct _NSSize *)fp8 force:(BOOL)fp12;
- (BOOL)_confirmSize:(struct _NSSize *)fp8 force:(BOOL)fp12;
- (void)setMinSize:(struct _NSSize)fp8;
- (void)setMaxSize:(struct _NSSize)fp8;
- (struct _NSSize)minSize;
- (struct _NSSize)maxSize;
- (void)setContentMinSize:(struct _NSSize)fp8;
- (void)setContentMaxSize:(struct _NSSize)fp8;
- (struct _NSSize)contentMinSize;
- (struct _NSSize)contentMaxSize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSPoint)cascadeTopLeftFromPoint:(struct _NSPoint)fp8;
- (void)_setOwnsRealWindow:(BOOL)fp8;
- (BOOL)_doesOwnRealWindow;
- (void)_termOneShotWindow;
- (void)_termWindowIfOwner;
- (BOOL)_isTerminating;
- (void)_setWin32MouseActivationInProgress:(BOOL)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMenu:(id)fp8;
- (void)_cleanupMenuMaps;
- (id)menu;
- (void)_takeApplicationMenuIfNeeded:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)helpRequested:(id)fp8;
- (BOOL)_makingFirstResponderForMouseDown;
- (id)_realHeartBeatThreadContext;
- (id)_heartBeatBufferWindow;
- (void)_setDrawingToHeartBeatWindow:(BOOL)fp8;
- (BOOL)_isDrawingToHeartBeatWindow;
- (void)_setNeedsToUseHeartBeatWindow:(BOOL)fp8;
- (BOOL)_needsToUseHeartBeatWindow;
- (void)_blockHeartBeat:(BOOL)fp8;
- (id)_threadContext;
- (void *)graphicsPort;
- (void)_windowDeviceRound;
- (id)graphicsContext;
- (void)_setWindowContextForCurrentThread:(id)fp8;
- (void)setAutofill:(BOOL)fp8;
- (BOOL)autofill;
- (void)setAutofillColor:(id)fp8;
- (id)autofillColor;
- (void)setOpaque:(BOOL)fp8;
- (BOOL)isOpaque;
- (void)setAlphaValue:(float)fp8;
- (float)alphaValue;
- (void)setShowsResizeIndicator:(BOOL)fp8;
- (BOOL)showsResizeIndicator;
- (id)attachedSheet;
- (BOOL)isSheet;
- (void)setBottomCornerRounded:(BOOL)fp8;
- (BOOL)bottomCornerRounded;
- (void)_removeFromGroups:(id)fp8;
- (void)_addToGroups:(id)fp8 ordered:(int)fp12;
- (void)_hideChildren;
- (void)_unhideChildren;
- (void)_setRelativeOrdering:(int)fp8;
- (void)addChildWindow:(id)fp8 ordered:(int)fp12;
- (void)addChildWindow:(id)fp8 ordered:(int)fp12 shareKey:(BOOL)fp16;
- (BOOL)_sharesParentKeyState;
- (void)removeChildWindow:(id)fp8;
- (id)childWindows;
- (id)parentWindow;
- (void)setParentWindow:(id)fp8;
- (id)_topmostChild;
- (void)_setExcludedFromVisibleWindowList:(BOOL)fp8;
- (BOOL)_excludedFromVisibleWindowList;
- (float)userSpaceScaleFactor;

@end

@interface NSWindowAuxiliary : NSObject
{
    int leftover1;
    int leftover2;
    int leftover3;
    struct _NSRect standardFrame;
    int realWindowNumber;
    NSMultiReadUniWriteLock *viewHierarchyLock;
    NSUndoManager *undoManager;
    NSWindowController *windowController;
    NSRecursiveLock *responderLock;
    id _rememberedFirstResponder;
    unsigned int _rememberedFirstResponderState;
    struct __CFRunLoopObserver *_windowDisplayObserver;
    struct __CFRunLoopObserver *_invalidCursorObserver;
    NSGraphicsContext *_appkitThreadContext;
    struct _NSMapTable *_subthreadContexts;
    struct _NSSize originalSize;
    NSWindow *docWindow;
    NSWindow *sheetWindow;
    NSString *dockWindowTitle;
    NSMutableArray *_heartBeatClients;
    NSGraphicsContext *_heartBeatThreadContext;
    NSWindow *_heartBeatBufferWindow;
    struct _NSPoint stashedOrigin;
    id _moveHelper;
    struct _NSPoint swmOrigin;
    unsigned int autoPositionMask;
    NSImage *scaledImage;
    NSColor *autofillColor;
    float alpha;
    struct _NSPoint collapsedOrigin;
    NSColor *pattern;
    NSMutableArray *childWindows;
    NSMutableArray *childOrdering;
    NSWindow *parentWindow;
    int relativeOrdering;
    NSColor *compositedPattern;
    struct __auxWFlags _auxWFlags;
    NSToolbar *toolbar;
    int _toolTipDisabledCount;
    NSView *_lastOtherHit;
    void *_windowRef;
    float _scaleFactor;
    int resizeWeighting;
    id _bindingAdaptor;
    id _growBoxOwner;
    struct __CFArray *_mouseMovedListeners;
    struct _NSRect userFrame;
}

@end

@interface NSWindow (NSWindow_Scale)
+ (float)_scaleFactorForStyleMask:(unsigned int)fp8;
- (void)_setScaleFactor:(float)fp8;
- (float)_scaleFactor;
- (struct CGAffineTransform)_baseTransform;
- (struct _NSRect)_scaledIntegralRect:(struct _NSRect)fp8;
- (void)_addMouseMovedListener:(id)fp8;
- (void)_removeMouseMovedListener:(id)fp8;
@end

@interface NSWindow (NSWindow_Performance)
- (void)_automateLiveResize;
@end

@interface NSWindow (NSWindow_Carbon)
- (unsigned long)_carbonWindowClass;
- (struct OpaqueWindowPtr *)_windowRef;
- (BOOL)_hasWindowRef;
- (BOOL)_managesWindowRef;
- (struct OpaqueWindowPtr *)_windowRefCreatedForCarbonApp;
- (struct OpaqueWindowPtr *)_windowRefCreatedForCarbonControl;
- (BOOL)_hasWindowRefCreatedForCarbonControl;
- (void)_removeWindowRef;
@end

@interface NSWindow (NSWindow_Theme)
- (void)_setHasShadow:(BOOL)fp8;
- (BOOL)_hasShadow;
- (void)_setContentHasShadow:(BOOL)fp8;
- (BOOL)_contentHasShadow;
- (BOOL)_hasActiveAppearance;
- (BOOL)_hasKeyAppearance;
- (BOOL)_hasMainAppearance;
- (struct _NSRect)_growBoxRect;
- (void)_setShowOpaqueGrowBoxForOwner:(id)fp8;
- (void)_setShowOpaqueGrowBox:(BOOL)fp8;
- (id)_growBoxOwner;
- (BOOL)_showOpaqueGrowBox;
- (void)_setForceActiveControls:(BOOL)fp8;
- (BOOL)_controlAppearanceChangesOnKeyStateChange;
- (BOOL)_hasActiveControls;
- (float)_transparency;
- (BOOL)_needsToResetDragMargins;
- (void)_setNeedsToResetDragMargins:(BOOL)fp8;
- (BOOL)_needsToRemoveFieldEditor;
- (void)_setNeedsToRemoveFieldEditor:(BOOL)fp8;
- (BOOL)_registerWithDockIfNeeded;
- (void *)_dockItem;
- (BOOL)_prepareToMinimize;
- (void)_minimizeSucceeded:(BOOL)fp8;
- (BOOL)_minimizeToDock;
- (BOOL)_wantsHeartBeat;
- (void)heartBeat:(CDAnonymousStruct11 *)fp8;
- (void)_addHeartBeatClientView:(id)fp8;
- (void)_removeHeartBeartClientView:(id)fp8;
- (void)guessDockTitle:(id)fp8;
- (BOOL)dockTitleIsGuess;
- (void)cacheMiniwindowTitle:(id)fp8 guess:(BOOL)fp12;
- (unsigned int)_autoResizeState;
- (void)stashSize;
- (id)restoreWindowOnDockDeath;
- (id)restoreWindowOnDockReincarnation;
- (id)showDeminiaturizedWindow;
- (id)_updateFrameWidgets;
- (id)_updateButtonsForModeChanged;
- (void)updateInDock;
- (void)_selectWindow:(id)fp8;
- (struct __CFDictionary *)_createWindowsMenuEntryWithTitle:(id)fp8 enabled:(BOOL)fp12;
- (void)_setDefaultButtonPaused:(BOOL)fp8;
- (BOOL)_defaultButtonPaused;
@end

@interface NSWindow (NSCarbonExtensions)
- (id)initWithWindowRef:(void *)fp8;
- (void *)windowRef;
- (void)_hiliteWindow:(struct OpaqueWindowPtr *)fp8 fromWindow:(id)fp12;
- (void)_setCursorRect:(struct _NSRect)fp8 index:(int)fp24;
- (void)_discardCursorRect:(int)fp8;
@end

@interface NSWindow (NSInputManager)
- (void)_notifyIM:(SEL)fp8 withObject:(id)fp12;
@end

@interface NSAccessibilityWindowGrowBox : NSAccessibilityMockUIElement
{
}

+ (id)growBoxWithParent:(id)fp8;
- (id)accessibilityAttributeNames;

@end

@interface NSStatusBarWindow (NSStatusBarWindowAccessibility)
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityChildrenAttribute;
@end

@interface NSToolTipPanel (NSToolTipPanelAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (void)accessibilityPostNotification:(id)fp8;
@end

@interface NSPanel (NSPanelAccessibility)
- (id)accessibilitySubroleAttribute;
@end

@interface NSWindow (NSWindowAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (BOOL)_accessibilityIsModal;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (struct _NSRect)_accessibilityTitleRect;
- (id)_accessibilityTitleCell;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (void)accessibilitySetPositionAttribute:(id)fp8;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (void)accessibilitySetSizeAttribute:(id)fp8;
- (id)accessibilityMainAttribute;
- (BOOL)accessibilityIsMainAttributeSettable;
- (void)accessibilitySetMainAttribute:(id)fp8;
- (id)accessibilityMinimizedAttribute;
- (BOOL)accessibilityIsMinimizedAttributeSettable;
- (void)accessibilitySetMinimizedAttribute:(id)fp8;
- (id)accessibilityCloseButtonAttribute;
- (BOOL)accessibilityIsCloseButtonAttributeSettable;
- (id)accessibilityZoomButtonAttribute;
- (BOOL)accessibilityIsZoomButtonAttributeSettable;
- (id)accessibilityMinimizeButtonAttribute;
- (BOOL)accessibilityIsMinimizeButtonAttributeSettable;
- (id)accessibilityToolbarButtonAttribute;
- (BOOL)accessibilityIsToolbarButtonAttributeSettable;
- (id)accessibilityProxyAttribute;
- (BOOL)accessibilityIsProxyAttributeSettable;
- (id)accessibilityTitleUIElementAttribute;
- (BOOL)accessibilityIsTitleUIElementAttributeSettable;
- (struct _NSRect)_accessibilityGrowBoxRect;
- (id)accessibilityGrowAreaAttribute;
- (BOOL)accessibilityIsGrowAreaAttributeSettable;
- (id)accessibilityDefaultButtonAttribute;
- (BOOL)accessibilityIsDefaultButtonAttributeSettable;
- (id)accessibilityCancelButtonAttribute;
- (BOOL)accessibilityIsCancelButtonAttributeSettable;
- (id)accessibilityDocumentAttribute;
- (BOOL)accessibilityIsDocumentAttributeSettable;
- (id)accessibilityModalAttribute;
- (BOOL)accessibilityIsModalAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilitySetValue:(id)fp8 forAttribute:(id)fp12;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (struct _NSRect)accessibilityFocusRingBounds;
- (id)_accessibilityViewCorrectedForFieldEditor:(id)fp8;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (int)accessibilityWindowNumber;
- (BOOL)accessibilityIsChildOfApp;
- (id)accessibilityWindowAttributeValueHelper;
- (id)accessibilityTopLevelUIElementAttributeValueHelper;
- (void)accessibilityPostNotification:(id)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSWindowController : NSResponder <NSCoding>
{
    NSWindow *_window;
    NSString *_windowNibName;
    NSDocument *_document;
    NSArray *_topLevelObjects;
    id _owner;
    struct __wcFlags _wcFlags;
    id _autounbinder;
    void *_reserved;
}

+ (void)initialize;
- (id)initWithWindow:(id)fp8;
- (id)init;
- (id)initWithWindowNibName:(id)fp8;
- (id)initWithWindowNibName:(id)fp8 owner:(id)fp12;
- (id)initWithWindowNibPath:(id)fp8 owner:(id)fp12;
- (void)release;
- (void)dealloc;
- (void)finalize;
- (id)_compatibility_initWithUnkeyedCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)windowNibName;
- (id)windowNibPath;
- (id)owner;
- (void)setWindowFrameAutosaveName:(id)fp8;
- (id)windowFrameAutosaveName;
- (BOOL)shouldCascadeWindows;
- (void)setShouldCascadeWindows:(BOOL)fp8;
- (id)document;
- (void)setDocument:(id)fp8;
- (void)setDocumentEdited:(BOOL)fp8;
- (BOOL)shouldCloseDocument;
- (void)setShouldCloseDocument:(BOOL)fp8;
- (void)setWindow:(id)fp8;
- (id)window;
- (void)synchronizeWindowTitleWithDocumentName;
- (id)windowTitleForDocumentDisplayName:(id)fp8;
- (void)_windowWillClose:(id)fp8;
- (void)close;
- (void)showWindow:(id)fp8;
- (BOOL)isWindowLoaded;
- (void)windowWillLoad;
- (void)windowDidLoad;
- (void)_windowDidLoad;
- (void)_windowWillLoad;
- (void)loadWindow;
- (void)presentError:(id)fp8 modalForWindow:(id)fp12 delegate:(id)fp16 didPresentSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)presentError:(id)fp8;
- (id)_autounbinder;

@end

@interface NSBitmapGraphicsContext : NSWindowGraphicsContext
{
    NSFocusStack *_focusStack;
    NSBitmapImageRep *_imageRep;
    BOOL _isFlipped;
}

- (id)_initWithGraphicsPort:(void *)fp8 flipped:(BOOL)fp12;
- (id)_initWithBitmapImageRep:(id)fp8;
- (void)dealloc;
- (void *)focusStack;
- (void)setFocusStack:(void *)fp8;
- (BOOL)isFlipped;

@end

@interface NSWindowGraphicsContext : NSCGSContext
{
    void *_cgsWindowID;
    unsigned int _displayPostingDisableCount;
    unsigned int _flushDisableCount;
    NSQuickDrawPort *_qdPort;
}

- (id)_initWithWindowNumber:(int)fp8 scaleFactor:(float)fp12;
- (id)_initWithWindowNumber:(int)fp8;
- (id)initWithWindow:(id)fp8;
- (id)attributes;
- (void *)windowID;
- (BOOL)isDrawingToScreen;
- (void *)focusStack;
- (void)setFocusStack:(void *)fp8;
- (void)dealloc;
- (void)finalize;
- (id)qdPort;
- (id)qdCreatePortForWindow:(id)fp8;
- (void)disableDisplayPositing;
- (void)reenableDisplayPosting;
- (BOOL)isDisplayPostingDisabled;
- (void)resetDisplayDisableCount;
- (void)disableFlush;
- (void)reenableFlush;
- (BOOL)isFlushDisabled;
- (void)resetFlushDisableCount;

@end

@interface NSWindow (NSScripting)
- (BOOL)hasCloseBox;
- (BOOL)hasTitleBar;
- (BOOL)isFloatingPanel;
- (BOOL)isMiniaturizable;
- (BOOL)isModalPanel;
- (BOOL)isResizable;
- (BOOL)isZoomable;
- (int)orderedIndex;
- (void)setIsMiniaturized:(BOOL)fp8;
- (void)setIsVisible:(BOOL)fp8;
- (void)setIsZoomed:(BOOL)fp8;
- (void)setOrderedIndex:(int)fp8;
- (id)boundsAsQDRect;
- (id)document;
- (int)uniqueID;
- (void)setBoundsAsQDRect:(id)fp8;
- (id)objectSpecifier;
- (id)handleCloseScriptCommand:(id)fp8;
- (id)handlePrintScriptCommand:(id)fp8;
- (id)handleSaveScriptCommand:(id)fp8;
@end

@interface NSWindowTemplate : NSObject <NSCoding>
{
    struct _NSRect windowRect;
    int windowStyleMask;
    int windowBacking;
    NSString *windowTitle;
    NSString *viewClass;
    NSString *windowClass;
    id windowView;
    NSWindow *realObject;
    id extension;
    struct _NSSize minSize;
    struct __WtFlags _wtFlags;
    struct _NSRect screenRect;
    NSString *frameAutosaveName;
    struct _NSSize maxSize;
}

+ (void)initialize;
- (void)dealloc;
- (void)finalize;
- (id)title;
- (void)setTitle:(id)fp8;
- (unsigned int)styleMask;
- (void)setStyleMask:(unsigned int)fp8;
- (int)backingType;
- (void)setBackingType:(int)fp8;
- (BOOL)isOneShot;
- (void)setOneShot:(BOOL)fp8;
- (BOOL)hasDynamicDepthLimit;
- (void)setDynamicDepthLimit:(BOOL)fp8;
- (BOOL)isDeferred;
- (void)setDeferred:(BOOL)fp8;
- (BOOL)isReleasedWhenClosed;
- (void)setReleasedWhenClosed:(BOOL)fp8;
- (BOOL)hidesOnDeactivate;
- (void)setHidesOnDeactivate:(BOOL)fp8;
- (BOOL)wantsToBeColor;
- (void)setWantsToBeColor:(BOOL)fp8;
- (unsigned int)autoPositionMask;
- (void)setAutoPositionMask:(unsigned int)fp8;
- (int)interfaceStyle;
- (void)setInterfaceStyle:(int)fp8;
- (void)setFrameAutosaveName:(id)fp8;
- (id)frameAutosaveName;
- (struct _NSSize)maxSize;
- (void)setMaxSize:(struct _NSSize)fp8;
- (void)setAllowsToolTipsWhenApplicationIsInactive:(BOOL)fp8;
- (BOOL)allowsToolTipsWhenApplicationIsInactive;
- (void)setHasShadow:(BOOL)fp8;
- (BOOL)hasShadow;
- (void)setAutorecalculatesKeyViewLoop:(BOOL)fp8;
- (BOOL)autorecalculatesKeyViewLoop;
- (id)nibInstantiate;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSWorkspace : NSObject
{
    NSNotificationCenter *notificationCenter;
    int deviceStatusCount;
    int applicationStatusCount;
    void *_reservedWorkspace1;
}

+ (id)sharedWorkspace;
- (id)init;
- (id)absolutePathForAppBundleWithIdentifier:(id)fp8;
- (BOOL)openURLs:(id)fp8 withAppBundleIdentifier:(id)fp12 options:(unsigned int)fp16 additionalEventParamDescriptor:(id)fp20 launchIdentifiers:(id *)fp24;
- (BOOL)launchAppWithBundleIdentifier:(id)fp8 options:(unsigned int)fp12 additionalEventParamDescriptor:(id)fp16 launchIdentifier:(id *)fp20;
- (BOOL)openFile:(id)fp8 withApplication:(id)fp12;
- (BOOL)openFile:(id)fp8;
- (id)iconForFiles:(id)fp8;
- (id)notificationCenter;
- (void)center:(id)fp8 didAddObserver:(id)fp12 name:(id)fp16 object:(id)fp20;
- (void)center:(id)fp8 didRemoveObserver:(id)fp12 name:(id)fp16 object:(id)fp20;
- (void)_willUnmountDeviceAtPath:(id)fp8 ok:(int *)fp12;
- (void)_didUnmountDeviceAtPath:(id)fp8;
- (void)_didMountDeviceAtPath:(id)fp8;
- (void)_fileOperationCompleted:(int)fp8;
- (void)_applicationWillLaunch:(id)fp8;
- (void)_applicationDidLaunch:(id)fp8;
- (void)_applicationDidTerminate:(id)fp8;
- (void)_willPowerOff;
- (void)_shouldPowerOff;
- (void)dealloc;
- (BOOL)openURL:(id)fp8;
- (BOOL)_openFile:(id)fp8 withApplication:(id)fp12 asService:(BOOL)fp16 andWait:(BOOL)fp20 andDeactivate:(BOOL)fp24;
- (BOOL)openFile:(id)fp8 withApplication:(id)fp12 andDeactivate:(BOOL)fp16;
- (BOOL)openTempFile:(id)fp8;
- (BOOL)openFile:(id)fp8 fromImage:(id)fp12 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (BOOL)_launchService:(id)fp8 andWait:(BOOL)fp12;
- (BOOL)launchApplication:(id)fp8;
- (BOOL)launchApplication:(id)fp8 showIcon:(BOOL)fp12 autolaunch:(BOOL)fp16;
- (id)_defaultDocIcon;
- (id)iconForFileType:(id)fp8;
- (id)_iconForOSType:(unsigned long)fp8 creator:(unsigned long)fp12;
- (id)_iconForOSType:(unsigned long)fp8;
- (id)iconForFile:(id)fp8;
- (BOOL)setIcon:(id)fp8 forFile:(id)fp12 options:(unsigned int)fp16;
- (BOOL)getInfoForFile:(id)fp8 application:(id *)fp12 type:(id *)fp16;
- (BOOL)isFilePackageAtPath:(id)fp8;
- (int)extendPowerOffBy:(int)fp8;
- (void)slideImage:(id)fp8 from:(struct _NSPoint)fp12 to:(struct _NSPoint)fp20;
- (BOOL)_sendFinderAppleEvent:(unsigned long)fp8 class:(unsigned long)fp12 file:(id)fp16;
- (BOOL)selectFile:(id)fp8 inFileViewerRootedAtPath:(id)fp12;
- (id)_fullPathForService:(id)fp8;
- (id)_locationsForApplications;
- (id)fullPathForApplication:(id)fp8;
- (BOOL)_fileOperation:(int)fp8 source:(id)fp12 destination:(id)fp16 files:(id)fp20;
- (BOOL)performFileOperation:(id)fp8 source:(id)fp12 destination:(id)fp16 files:(id)fp20 tag:(int *)fp24;
- (void)noteFileSystemChanged;
- (void)noteFileSystemChanged:(id)fp8;
- (BOOL)fileSystemChanged;
- (void)noteUserDefaultsChanged;
- (BOOL)userDefaultsChanged;
- (void)findApplications;
- (void)hideOtherApplications;
- (void)_beginListeningForDeviceStatusChanges;
- (void)_endListeningForDeviceStatusChanges;
- (id)_dictionaryForSerialNumber:(struct CPSProcessSerNum *)fp8 remove:(BOOL)fp12 clear:(BOOL)fp16;
- (void)_applicationStatusChange:(id)fp8;
- (void)_beginListeningForApplicationStatusChanges;
- (void)_endListeningForApplicationStatusChanges;
- (void)_beginListeningForPowerStatusChanges;
- (void)_endListeningForPowerStatusChanges;
- (void)_workspaceDidResignOrBecomeActive:(id)fp8;
- (void)_beginListeningForSessionStatusChanges;
- (void)_endListeningForSessionStatusChanges;
- (BOOL)_workspaceSessionIsActive;
- (void)_postSessionNotificationIfNeeded;
- (id)launchedApplications;
- (id)activeApplication;
- (BOOL)_volumeIsEjectableForRefNum:(short)fp8;
- (BOOL)_volumeIsLocalForRefNum:(short)fp8;
- (BOOL)getFileSystemInfoForPath:(id)fp8 isRemovable:(char *)fp12 isWritable:(char *)fp16 isUnmountable:(char *)fp20 description:(id *)fp24 type:(id *)fp28;
- (id)mountedLocalVolumePaths;
- (id)mountedRemovableMedia;
- (id)mountNewRemovableMedia;
- (void)checkForRemovableMedia;
- (BOOL)unmountAndEjectDeviceAtPath:(id)fp8;
- (BOOL)openFile:(id)fp8 operation:(int)fp12;
- (void)unhideApplication;
- (void)_checkInName:(id)fp8 onHost:(id)fp12 andPid:(int)fp16 forUser:(id)fp20;
- (void)_replySequenceNumber:(int)fp8 ok:(int)fp12;
- (void)_announce;
- (oneway void)powerOffIn:(int)fp8 andSave:(BOOL)fp12;
- (oneway void)applicationLaunched:(id)fp8 handle:(int)fp12;
- (oneway void)applicationQuit:(id)fp8 handle:(int)fp12;
- (BOOL)shouldUnmount:(id)fp8;
- (oneway void)unmounted:(id)fp8;
- (oneway void)mounted:(id)fp8;
- (oneway void)fileOperationCompleted:(int)fp8 ok:(BOOL)fp12;
- (oneway void)startProfiling;
- (oneway void)stopProfiling;
- (oneway void)writeProfilingDataToPath:(id)fp8;
- (oneway void)resetProfiling;

@end

@interface NSWorkspaceCenter : NSNotificationCenter
{
    id delegate;
    NSMutableArray *NSWorkspaceCenterDeviceObservers;
    NSMutableArray *NSWorkspaceCenterApplicationObservers;
    NSMutableArray *NSWorkspaceCenterPowerObservers;
    NSMutableArray *NSWorkspaceCenterSessionObservers;
}

- (id)init;
- (void)addObserver:(id)fp8 selector:(SEL)fp12 name:(id)fp16 object:(id)fp20;
- (void)removeObserver:(id)fp8 name:(id)fp12 object:(id)fp16;
- (void)setDelegate:(id)fp8;
- (id)delegate;

@end

@interface NSWorkspaceObserver : NSObject
{
    id observer;
    NSString *name;
    id object;
}

- (id)initWithObserver:(id)fp8 name:(id)fp12 object:(id)fp16;
- (void)dealloc;
- (id)observer;
- (id)name;
- (id)object;

@end

@interface NSApplication (NSResponsibleDelegate)
- (id)_responsibleDelegateForSelector:(SEL)fp8;
@end

@interface NSString (NSWorkspaceStatic)
+ (id)_pathForFSRef:(struct FSRef *)fp8;
- (BOOL)_getVRefNumForPath:(short *)fp8;
- (BOOL)_getFSSpecForPath:(struct FSSpec *)fp8;
- (BOOL)_getFSRefForPath:(struct FSRef *)fp8;
- (BOOL)_getFSRefForApplicationName:(struct FSRef *)fp8;
- (BOOL)_getFSRefForServiceName:(struct FSRef *)fp8;
@end

@interface NSPasteboard (NSFileContentsPrivate)
- (id)writeDocument:(id)fp8 pbtype:(id)fp12 filename:(id)fp16;
- (id)readDocumentFromPbtype:(id)fp8 filename:(id *)fp12;
@end

@interface NSPasteboard (NSFileContents)
- (BOOL)writeFileContents:(id)fp8;
- (BOOL)writeFileWrapper:(id)fp8;
- (BOOL)attemptOverwrite:(id)fp8;
- (id)processType:(id)fp8 file:(id)fp12 isDir:(BOOL)fp16;
- (id)readFileContentsType:(id)fp8 toFile:(id)fp12;
- (id)readFileWrapper;
@end

@interface _NSCachedBitmapImageRep : NSBitmapImageRep
{
    struct CGImage *_imageRef;
}

- (struct CGImage *)_CGImageRef;
- (void)_setCGImageRef:(struct CGImage *)fp8;
- (Class)classForArchiver;

@end

@interface NSThemeDocumentButton (NSThemeFramePathExtensions)
- (Class)menuClass;
- (struct _NSPoint)menuLocation;
- (void)showPopup;
- (void)sendOpenEventFor:(id)fp8;
@end

@interface NSExceptionHandlingRecursiveLock : NSRecursiveLock
{
}

- (void)lock;
- (void)unlock;

@end

@interface NSView (NSPrinting)
- (void)writeEPSInsideRect:(struct _NSRect)fp8 toPasteboard:(id)fp24;
- (id)dataWithEPSInsideRect:(struct _NSRect)fp8;
- (void)writePDFInsideRect:(struct _NSRect)fp8 toPasteboard:(id)fp24;
- (id)dataWithPDFInsideRect:(struct _NSRect)fp8;
- (void)beginPrologueBBox:(struct _NSRect)fp8 creationDate:(id)fp24 createdBy:(id)fp28 fonts:(id)fp32 forWhom:(id)fp36 pages:(int)fp40 title:(id)fp44;
- (void)endHeaderComments;
- (void)endPrologue;
- (void)beginSetup;
- (void)endSetup;
- (void)beginPage:(int)fp8 label:(id)fp12 bBox:(struct _NSRect)fp16 fonts:(id)fp32;
- (void)addToPageSetup;
- (void)endPageSetup;
- (void)beginTrailer;
- (void)endTrailer;
- (id)printJobTitle;
- (void)_realCopyPSCodeInside:(const struct _NSRect *)fp8 helpedBy:(id)fp12;
- (void)print:(id)fp8;
- (id)_realPrintPSCode:(id)fp8 helpedBy:(id)fp12;
- (BOOL)_setUpOperation:(id)fp8 helpedBy:(id)fp12;
- (BOOL)_setPageGenerationOrder:(id)fp8;
- (BOOL)_generatePSCodeHelpedBy:(id)fp8 operation:(id)fp12;
- (BOOL)knowsPagesFirst:(int *)fp8 last:(int *)fp12;
- (BOOL)_knowsPagesFirst:(int *)fp8 last:(int *)fp12;
- (BOOL)knowsPageRange:(struct _NSRange *)fp8;
- (void)beginPageSetupRect:(struct _NSRect)fp8 placement:(struct _NSPoint)fp24;
- (void)beginDocument;
- (void)endDocument;
- (void)beginPageInRect:(struct _NSRect)fp8 atPlacement:(struct _NSPoint)fp24;
- (void)endPage;
- (float)_provideTotalScaleFactorForPrintOperation:(id)fp8;
- (id)_printPagesWithOperation:(id)fp8 helpedBy:(id)fp12;
- (id)_printAndPaginateWithOperation:(id)fp8 helpedBy:(id)fp12;
- (void)_calcMarginSize:(struct _NSSize *)fp8 operation:(id)fp12;
- (void)_calcWidths:(float **)fp8 num:(int *)fp12 margin:(const struct _NSSize *)fp16 operation:(id)fp20 helpedBy:(id)fp24;
- (void)_calcHeights:(float **)fp8 num:(int *)fp12 margin:(const struct _NSSize *)fp16 operation:(id)fp20 helpedBy:(id)fp24;
- (float)heightAdjustLimit;
- (float)widthAdjustLimit;
- (void)adjustPageWidthNew:(float *)fp8 left:(float)fp12 right:(float)fp16 limit:(float)fp20;
- (void)adjustPageHeightNew:(float *)fp8 top:(float)fp12 bottom:(float)fp16 limit:(float)fp20;
- (void)_doPageArea:(const struct _NSRect *)fp8 finishPage:(BOOL)fp12 helpedBy:(id)fp16 pageLabel:(int)fp20;
- (struct _NSRect)rectForPage:(int)fp8;
- (struct _NSPoint)locationOfPrintRect:(struct _NSRect)fp8;
- (void)drawSheetBorderWithSize:(struct _NSSize)fp8;
- (void)_getPageHeaderRect:(struct _NSRect *)fp8 pageFooterRect:(struct _NSRect *)fp12 forBorderSize:(struct _NSSize)fp16;
- (void)drawPageBorderWithSize:(struct _NSSize)fp8;
- (id)_pageHeaderAndFooterTextAttributes;
- (id)pageHeader;
- (id)pageFooter;
@end

@interface NSTableOptions : NSObject
{
    id tableOptionsPanel;
    id rowsField;
    id rowsStepper;
    id columnsField;
    id columnsStepper;
    id mergeCellsButton;
    id splitCellsButton;
    id nestTableButton;
    id horizontalAlignment;
    id verticalAlignment;
    id borderField;
    id borderStepper;
    id borderColorWell;
    id backgroundPopUp;
    id backgroundColorWell;
    NSTextView *_client;
    NSTextTable *_table;
    unsigned int _level;
    struct _NSRange _tableRange;
    int _numRows;
    int _numCols;
    int _minRow;
    int _maxRow;
    int _minCol;
    int _maxCol;
    int _spacesOccupied;
    int _maxSpaces;
    NSMutableArray *_cellRanges;
    NSColor *_defaultBorderColor;
    BOOL _modifyingClient;
}

+ (id)sharedTableOptions;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (id)tableOptionsPanel:(BOOL)fp8;
- (BOOL)textView:(id)fp8 shouldSetColor:(id)fp12;
- (void)clearTableParameters;
- (BOOL)tableParameters;
- (void)enableAll:(BOOL)fp8;
- (void)updateUI;
- (void)orderFrontTableOptionsPanel:(id)fp8;
- (void)addOrNestTable;
- (void)_addDefaultTable;
- (void)addDefaultTable;
- (void)removeTable;
- (void)addRows:(int)fp8;
- (void)removeRows:(int)fp8;
- (void)addColumns:(int)fp8;
- (void)removeColumns:(int)fp8;
- (void)mergeCells;
- (void)splitCell:(id)fp8 range:(struct _NSRange)fp12;
- (void)splitCells;
- (void)setHorizontalAlignment:(int)fp8;
- (void)setVerticalAlignment:(int)fp8;
- (void)setBorderWidth:(float)fp8;
- (void)setBorderColor:(id)fp8;
- (void)setDefaultBorderColor:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (void)modifyOptionsViaPanel:(id)fp8;
- (void)setClient:(id)fp8;
- (void)removeClient:(id)fp8;

@end

@interface NSTextRulerOptions : NSObject
{
    id addFavoritePanel;
    id favoriteNameField;
    id includeFontOptionsButton;
    id includeFontButton;
    id confirmAddFavoriteButton;
    id replaceFavoritePanel;
    id removeFavoritePanel;
    id removeFavoritePopUp;
    id spacingPanel;
    id multipleField;
    id minField;
    id maxField;
    id lineSpacingField;
    id multipleStepper;
    id minStepper;
    id maxStepper;
    id lineSpacingStepper;
    id minMatrix;
    id maxButton;
    id spaceBeforeField;
    id spaceAfterField;
    id spaceBeforeStepper;
    id spaceAfterStepper;
    id listPanel;
    id beforeField;
    id numberingPopUp;
    id afterField;
    id prependButton;
    id linkPanel;
    id linkField;
    NSMutableDictionary *_favoriteRulers;
    NSMutableDictionary *_selectedAttributes;
    NSWindow *_windowForSheets;
    NSWindow *_windowForSpacing;
    id _delegateForSpacing;
    NSWindow *_windowForMarkerFormat;
    id _delegateForMarkerFormat;
    NSWindow *_windowForLink;
    id _delegateForLink;
}

+ (id)sharedTextRulerOptions;
- (void)saveFavoritesToDefaults;
- (void)updateFavoritesFromDefaults;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (void)finalize;
- (id)favoriteAttributesNames;
- (id)favoriteAttributesForName:(id)fp8;
- (id)selectedAttributes;
- (void)updateFavoritesUI;
- (void)addFavorite;
- (void)addFavorite:(id)fp8 inWindow:(id)fp12;
- (void)removeFavoriteInWindow:(id)fp8;
- (void)updateLineSpacingUI;
- (void)setSpacing:(id)fp8 inWindow:(id)fp12 delegate:(id)fp16;
- (void)setMarkerFormatInWindow:(id)fp8 textList:(id)fp12 delegate:(id)fp16;
- (void)setLinkInWindow:(id)fp8 string:(id)fp12 delegate:(id)fp16;
- (void)controlTextDidChange:(id)fp8;
- (void)modifyOptionsViaPanel:(id)fp8;
- (void)confirmSheet:(id)fp8;
- (void)cancelSheet:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)displayStringForLineHeightMultiple:(float)fp8 min:(float)fp12 max:(float)fp16 lineSpacing:(float)fp20 paragraphSpacingBefore:(float)fp24 after:(float)fp28;

@end

@interface NSFontOptions : NSObject
{
    id panel;
    id fontField;
    id fontColorWell;
    id backgroundColorWell;
    id favoritesPullDown;
    id kerningButton;
    id kerningSlider;
    id expansionButton;
    id expansionSlider;
    id baselineButton;
    id baselineSlider;
    id obliquenessButton;
    id obliquenessSlider;
    id shadowButton;
    id shadowHeightSlider;
    id shadowWidthSlider;
    id shadowBlurRadiusSlider;
    id strokeMatrix;
    id strokeColorWell;
    id strokeSlider;
    id underlineMatrix;
    id underlineColorWell;
    id underlineTypeButton;
    id underlineStylePopUp;
    id strikethroughMatrix;
    id strikethroughColorWell;
    id strikethroughTypeButton;
    id strikethroughStylePopUp;
    id optionsPanel;
    id optionsMatrix;
    id optionsButtons;
    id optionsPopUp;
    id optionsPreviewField;
    id optionsAttributesField;
    id optionsAddRemoveButton;
    id colorOptionsPanel;
    id colorOptionsFontColorWell;
    id colorOptionsBackgroundColorWell;
    id colorOptionsStrokeColorWell;
    id colorOptionsUnderlineColorWell;
    id colorOptionsStrikethroughColorWell;
    id colorOptionsStrokeMatrix;
    id colorOptionsStrokeSlider;
    id addFavoritePanel;
    id favoriteNameField;
    id includeFontButton;
    id includeRulerButton;
    id confirmAddFavoriteButton;
    id selectButton;
    id replaceFavoritePanel;
    id removeFavoritePanel;
    id removeFavoritePopUp;
    id selectPanel;
    id selectByFontFamilyButton;
    id selectByFontButton;
    id selectByCharStyleButton;
    id selectByParStyleButton;
    id selectWithinSelectionMatrix;
    NSMutableDictionary *_attributesToAdd;
    NSMutableArray *_attributesToRemove;
    NSMutableDictionary *_favoriteStyles;
    NSMutableDictionary *_selectedAttributes;
    NSDictionary *_optionsAttributes;
    NSDictionary *_attributesForNewFavorite;
    NSString *_stringForOptions;
    NSString *_optionsAddTitle;
    NSString *_optionsRemoveTitle;
    struct {
        unsigned int isMultiple:1;
        unsigned int reserved:31;
    } _flags;
    NSWindow *_windowForSheets;
    NSWindow *_windowForOptions;
    NSTextView *_textViewForOptions;
    struct _NSRange _rangeForOptions;
    NSWindow *_windowForColorOptions;
    struct _NSRect _previewRect;
}

+ (id)sharedFontOptions;
- (id)storedAttributes;
- (void)saveFavoritesToDefaults;
- (void)updateFavoritesFromDefaults;
- (id)init;
- (void)loadUI;
- (void)dealloc;
- (void)finalize;
- (void)enableAll:(BOOL)fp8;
- (void)updateUI;
- (id)displayStringsForAttributes:(id)fp8 includeBoldItalic:(BOOL)fp12;
- (id)displayStringsForParagraphStyle:(id)fp8;
- (void)updateOptionsUI;
- (void)updateColorOptionsUI;
- (id)favoriteAttributesNames;
- (id)favoriteAttributesForName:(id)fp8;
- (void)updateFavoritesUI;
- (void)orderFrontColorOptionsPanelInWindow:(id)fp8;
- (void)orderFrontFontOptionsPanel:(id)fp8;
- (void)orderFrontStylesPanel:(id)fp8;
- (void)orderFrontStylesPanelInWindow:(id)fp8 textView:(id)fp12;
- (void)orderFrontFontPanel:(id)fp8;
- (BOOL)textView:(id)fp8 shouldSetColor:(id)fp12;
- (void)setSelectedAttributes:(id)fp8 isMultiple:(BOOL)fp12;
- (id)selectedAttributes;
- (void)setOptionsAttributes:(id)fp8 string:(id)fp12;
- (id)optionsAttributes;
- (id)convertAttributes:(id)fp8;
- (void)modifyOptionsViaPanel:(id)fp8;
- (id)stringForRange:(struct _NSRange)fp8;
- (void)selectDefaultRange;
- (void)selectFarthestRangeForward:(BOOL)fp8;
- (void)selectNextRangeForward:(BOOL)fp8;
- (void)changeOptionsPanelSettings:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)confirmSheet:(id)fp8;
- (void)cancelSheet:(id)fp8;
- (void)addFavorite;
- (void)addFavoriteInWindow:(id)fp8;
- (void)removeFavoriteInWindow:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)selectAllInView:(id)fp8 selectionOnly:(BOOL)fp12 fontFamily:(BOOL)fp16 font:(BOOL)fp20 characterStyle:(BOOL)fp24 paragraphStyle:(BOOL)fp28;

@end

@interface NSFontOptionsPreviewBox : NSBox
{
}

- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSFontOptionsColorWell : NSColorWell
{
}

- (id)_takeColorFrom:(id)fp8 andSendAction:(BOOL)fp12;

@end

@interface NSShadow : NSObject <NSCopying, NSCoding>
{
    unsigned int _shadowFlags;
    struct _NSSize _shadowOffset;
    float _shadowBlurRadius;
    NSColor *_shadowColor;
    float _reservedFloat[3];
    void *_reserved;
}

+ (void)initialize;
+ (id)shadow;
+ (id)defaultShadowColor;
- (id)init;
- (id)initWithShadow:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (struct _NSSize)shadowOffset;
- (void)setShadowOffset:(struct _NSSize)fp8;
- (float)shadowBlurRadius;
- (void)setShadowBlurRadius:(float)fp8;
- (id)shadowColor;
- (void)setShadowColor:(id)fp8;
- (void)set;
- (id)description;

@end

@interface NSApplication (NSAppleEventHandling)
- (void)_handleAEOpen:(id)fp8;
- (void)_handleAEReopen;
- (short)_handleAEOpenDocuments:(id)fp8;
- (short)_handleAEPrintDocuments:(id)fp8 withSettings:(id)fp12 showPrintPanels:(BOOL)fp16;
- (short)_handleAEOpenContentsEvent:(const struct AEDesc *)fp8 replyEvent:(struct AEDesc *)fp12;
- (short)_handleAEQuitWithActivating:(BOOL)fp8 documentSaving:(int)fp12;
- (long)_handleSelfTestEvent:(id)fp8;
- (void)_handleTestEvent:(id)fp8 withReplyEvent:(id)fp12;
- (void)_handleCoreEvent:(id)fp8 withReplyEvent:(id)fp12;
- (void)_registerRequiredAEHandlers;
@end

@interface NSAccessibilityReparentingCellProxy (NSAccessibilityReparentingCellProxyTextAttributesAccessibility)
- (BOOL)hasEditor;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (id)accessibilityLineForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForLineAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)fp8;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)fp8;
@end

@interface NSCell (NSCellTextAttributesAccessibility)
- (id)accessibilityCurrentEditor;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (void)accessibilitySetSelectedTextAttribute:(id)fp8;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)fp8;
- (id)accessibilityNumberOfCharactersAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (void)accessibilitySetVisibleCharacterRangeAttribute:(id)fp8;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (id)accessibilityLineForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForLineAttributeForParameter:(id)fp8;
- (id)accessibilityStringForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)fp8;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)fp8;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityRTFForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityAttributedStringForRangeAttributeForParameter:(id)fp8;
- (id)accessibilityStyleRangeForIndexAttributeForParameter:(id)fp8;
@end

@interface NSTextFinder : NSObject
{
    NSTextField *findTextField;
    NSTextField *replaceTextField;
    NSTextField *statusField;
    NSButton *ignoreCaseButton;
    NSButton *replaceAllButton;
    NSButton *replaceButton;
    NSButton *findNextButton;
    NSButton *findPreviousButton;
    NSButton *replaceAndFindButton;
    NSButton *wrapAroundButton;
    NSPopUpButton *matchPopUp;
    NSTextView *fieldEditor;
    NSString *findString;
    BOOL lastFindWasSuccessful;
    BOOL findStringChangedInUI;
    BOOL findStringNeedsToBeRefreshedFromPB;
}

+ (id)sharedTextFinder;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (void)appDidActivate:(id)fp8;
- (BOOL)loadFindStringFromPasteboard;
- (void)loadFindStringToPasteboard;
- (void)loadUI;
- (void)controlTextDidChange:(id)fp8;
- (id)findString;
- (void)setFindString:(id)fp8 writeToPasteboard:(BOOL)fp12 updateUI:(BOOL)fp16;
- (id)textObjectToSearchIn;
- (id)findPanel:(BOOL)fp8;
- (void)takeFindStringFromView:(id)fp8;
- (unsigned int)optionsFromPanel;
- (BOOL)findInView:(id)fp8 forward:(BOOL)fp12;
- (BOOL)replaceInView:(id)fp8;
- (BOOL)replaceAndFindInView:(id)fp8;
- (int)replaceAllInView:(id)fp8 selectionOnly:(BOOL)fp12;
- (BOOL)selectAllInView:(id)fp8 selectionOnly:(BOOL)fp12;
- (void)orderFrontFindPanel:(id)fp8;
- (void)findNextAndOrderFindPanelOut:(id)fp8;
- (void)performFindPanelAction:(id)fp8;
- (void)performFindPanelAction:(int)fp8 forClient:(id)fp12;
- (BOOL)validateFindPanelAction:(int)fp8 forClient:(id)fp12;
- (void)windowDidUpdate:(id)fp8;

@end

@interface NSFindPanelTextView : NSTextView
{
}

- (void)performFindPanelAction:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;

@end

@interface NSTextStorage (NSFindAndReplace)
- (struct _NSRange)findString:(id)fp8 selectedRange:(struct _NSRange)fp12 options:(unsigned int)fp20;
- (int)replaceString:(id)fp8 withString:(id)fp12 ranges:(id)fp16 options:(unsigned int)fp20 inView:(id)fp24 replacementRange:(struct _NSRange *)fp28;
- (int)replaceString:(id)fp8 withString:(id)fp12 range:(struct _NSRange)fp16 options:(unsigned int)fp24 inView:(id)fp28 replacementRange:(struct _NSRange *)fp32;
@end

@interface NSNib : NSObject <NSCoding>
{
    NSData *_data;
    NSArray *_images;
    NSArray *_sounds;
    NSBundle *_bundle;
    struct _NSNibFlags _flags;
    id reserved1;
    id reserved2;
}

- (id)initWithContentsOfURL:(id)fp8;
- (id)initWithNibNamed:(id)fp8 bundle:(id)fp12;
- (id)_initWithPath:(id)fp8 bundle:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)instantiateNibWithOwner:(id)fp8 topLevelObjects:(id *)fp12;
- (BOOL)instantiateNibWithExternalNameTable:(id)fp8;
- (void)_loadNibDataFromPath:(id)fp8;

@end

@interface NSSpeechRecognizerVars : NSObject
{
    id _delegate;
    NSMutableDictionary *_commandDisplay;
    NSString *_displayedTitle;
    NSArray *_displayedStrings;
    NSArray *_simpleCommandsArray;
    id _languageModel;
    struct OpaqueSRSpeechObject *_srRecognizer;
    struct OpaqueSRSpeechObject *_srRecognitionSystem;
    id _objectForCurrentRecognition;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setSRRecognitionSystem:(struct OpaqueSRSpeechObject *)fp8;
- (struct OpaqueSRSpeechObject *)srRecognitionSystem;
- (void)setSRRecognizer:(struct OpaqueSRSpeechObject *)fp8;
- (struct OpaqueSRSpeechObject *)srRecognizer;
- (void)setDisplayedStringsArray:(id)fp8;
- (id)displayedStringsArray;
- (void)setDisplayedTitle:(id)fp8;
- (id)displayedTitle;
- (id)commandDisplay;
- (void)setSimpleCommandsArray:(id)fp8;
- (id)simpleCommandsArray;
- (void)setObjectForCurrentRecognition:(id)fp8;
- (void)setLanguageModel:(id)fp8;
- (id)languageModel;

@end

@interface NSSpeechRecognizer : NSObject
{
    id _privateNSSpeechRecognizerVars;
}

+ (id)_forSRSpeechObject:(struct OpaqueSRSpeechObject *)fp8 objectForProperty:(unsigned long)fp12 usingDataSize:(long)fp16 withRequestedObjectClass:(Class)fp20;
+ (BOOL)_forSRSpeechObject:(struct OpaqueSRSpeechObject *)fp8 setObject:(id)fp12 forProperty:(unsigned long)fp16 usingDataSize:(long)fp20;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)startListening;
- (void)stopListening;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)commands;
- (void)setCommands:(id)fp8;
- (id)displayedCommandsTitle;
- (void)setDisplayedCommandsTitle:(id)fp8;
- (BOOL)listensInForegroundOnly;
- (void)setListensInForegroundOnly:(BOOL)fp8;
- (BOOL)blocksOtherRecognizers;
- (void)setBlocksOtherRecognizers:(BOOL)fp8;
- (void)_setDisplayContents:(id)fp8 usingSimpleCommandDefaults:(BOOL)fp12;
- (void)_setDisplayContents:(id)fp8;
- (void)_setDisplayPositionHint:(int)fp8;
- (void)_setDisplayRelativeOrder:(int)fp8;
- (void)_setTargetProcess:(struct ProcessSerialNumber *)fp8;
- (void)_setLanguageModel:(id)fp8;
- (id)_languageModel;
- (void)_updateCommandDisplayWithRecognizer;
- (struct OpaqueSRSpeechObject *)_createSRLanguageModelWithDescription:(id)fp8;
- (struct OpaqueSRSpeechObject *)_createSRLanguagePath;
- (struct OpaqueSRSpeechObject *)_createSRLanguagePhraseWithString:(id)fp8;
- (struct OpaqueSRSpeechObject *)_createSRLanguageWordWithString:(id)fp8;
- (void)_handleRecognitionBeginningWithRecognitionResult:(struct OpaqueSRSpeechObject *)fp8;
- (void)_handleRecognitionDoneWithRecognitionResult:(struct OpaqueSRSpeechObject *)fp8;
- (id)_objectForProperty:(unsigned long)fp8 usingDataSize:(long)fp12 withRequestedObjectClass:(Class)fp16;
- (BOOL)_setObject:(id)fp8 forProperty:(unsigned long)fp12 usingDataSize:(long)fp16;

@end

@interface NSSpeechSynthesizerVars : NSObject
{
    id _delegate;
    struct SpeechChannelRecord *_speechChannel;
    unsigned int _speechFeedbackServicesRef;
    NSTimer *_speechFeedbackServicesTimer;
    NSString *_speakingString;
    NSString *_currentVoice;
    unsigned int _currentVoiceScriptCode;
    float _normalSpeakingRate;
    BOOL _usingDefaultVoice;
    BOOL _usesFeedbackWindow;
    BOOL _speakingSpeechFeedbackServices;
    BOOL _needsResyncWithDefaultVoice;
    BOOL _speechFinishedSuccessfully;
    BOOL _synthesizerIsRetained;
}

+ (BOOL)findVoiceByIdentifier:(id)fp8 returningCreator:(unsigned int *)fp12 returningID:(unsigned int *)fp16;
+ (id)voiceIdentifierForVoiceCreator:(unsigned long)fp8 voiceID:(unsigned long)fp12;
- (id)init;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (short)setSpeechChannelWithVoiceIdentifier:(id)fp8;
- (short)setSpeechChannelWithVoiceCreator:(unsigned long)fp8 voiceID:(unsigned long)fp12;
- (struct SpeechChannelRecord *)speechChannel;
- (unsigned long)speechFeedbackServicesRef;
- (void)setSpeakingString:(id)fp8;
- (id)speakingString;
- (void)setCurrentVoiceIdentifier:(id)fp8;
- (id)currentVoiceIdentifier;
- (unsigned long)currentVoiceScriptCode;
- (float)normalSpeakingRate;
- (void)setUsingDefaultVoice:(BOOL)fp8;
- (BOOL)usingDefaultVoice;
- (void)setUsesFeedbackWindow:(BOOL)fp8;
- (BOOL)usesFeedbackWindow;
- (void)setSpeakingSpeechFeedbackServices:(BOOL)fp8;
- (BOOL)speakingSpeechFeedbackServices;
- (void)setSpeechFeedbackServicesTimer:(id)fp8;
- (id)speechFeedbackServicesTimer;
- (void)setNeedsResyncWithDefaultVoice:(BOOL)fp8;
- (BOOL)needsResyncWithDefaultVoice;
- (void)setSpeechFinishedSuccessfully:(BOOL)fp8;
- (BOOL)speechFinishedSuccessfully;
- (void)setSynthesizerIsRetained:(BOOL)fp8;
- (BOOL)synthesizerIsRetained;

@end

@interface NSSpeechSynthesizer : NSObject
{
    id _privateNSSpeechSynthesizerVars;
}

+ (BOOL)isAnyApplicationSpeaking;
+ (id)defaultVoice;
+ (id)availableVoices;
+ (id)attributesForVoice:(id)fp8;
- (id)init;
- (id)initWithVoice:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)startSpeakingString:(id)fp8;
- (BOOL)startSpeakingString:(id)fp8 toURL:(id)fp12;
- (void)stopSpeaking;
- (BOOL)isSpeaking;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)voice;
- (BOOL)setVoice:(id)fp8;
- (BOOL)usesFeedbackWindow;
- (void)setUsesFeedbackWindow:(BOOL)fp8;
- (id)_speakingString;
- (BOOL)_feedbackWindowIsVisible;
- (void)_checkIfSpeakingThroughSpeechFeedbackWindowIsFinished:(id)fp8;
- (void)_handleSpeechDoneCallback;
- (void)_handleWordCallbackWithParams:(id)fp8;
- (void)_handlePhonemeCallbackWithOpcode:(id)fp8;
- (BOOL)_beginSpeakingString:(id)fp8 optionallyToURL:(id)fp12;
- (BOOL)_setupCallbacksSavingToFile:(BOOL)fp8;
- (void)_handleDefaultVoiceChange;
- (float)_normalSpeakingRate;
- (void)_setPitchBase:(float)fp8;
- (float)_pitchBase;
- (void)_setRate:(float)fp8;
- (float)_rate;
- (void)_setVolume:(float)fp8;
- (float)_volume;
- (void)_stopSpeakingAtBoundary:(unsigned int)fp8;
- (void)_pauseSpeakingAtBoundary:(unsigned int)fp8;
- (void)_continueSpeaking;
- (id)_objectForProperty:(unsigned long)fp8 usingDataSize:(long)fp12 withRequestedObjectClass:(Class)fp16;
- (BOOL)_setObject:(id)fp8 forProperty:(unsigned long)fp12 usingDataSize:(long)fp16;

@end

@interface NSColorPickerPageableNameList : NSColorPicker <NSColorPickingCustom>
{
    NSColorPickerPageableNameListView *listView;
    NSView *listPickerView;
    NSScrollView *scrollView;
    NSPopUpButton *listPopUp;
    NSMenuItem *newColor;
    NSMenuItem *renameColor;
    NSMenuItem *removeColor;
    NSMenuItem *find;
    NSMenuItem *newList;
    NSMenuItem *openList;
    NSMenuItem *renameList;
    NSMenuItem *removeList;
    NSTextField *renamePrompt;
    NSTextField *renameString;
    NSButton *renameButton;
    NSPanel *renamePanel;
    NSSearchField *filterField;
    BOOL _ui_is_built;
    NSMutableDictionary *_listDict;
    NSMutableDictionary *_attachedListDict;
    NSString *currListName;
}

- (void)dealloc;
- (void)finalize;
- (BOOL)supportsMode:(int)fp8;
- (int)currentMode;
- (void)setupLoadedNib;
- (id)provideNewView:(BOOL)fp8;
- (void)setColor:(id)fp8;
- (id)provideNewButtonImage;
- (float)_insertionOrder;
- (struct _NSSize)minPickerContentSize;
- (id)initWithPickerMask:(int)fp8 colorPanel:(id)fp12;
- (id)_buttonImageToolTip;
- (void)insertPopItemWithTitle:(id)fp8 andObject:(id)fp12;
- (void)refreashUI;
- (void)switchToListNamed:(id)fp8;
- (void)switchList:(id)fp8;
- (void)attachColorList:(id *)fp8 systemList:(BOOL)fp12 makeSelected:(BOOL)fp16;
- (void)attachColorList:(id)fp8 makeSelected:(BOOL)fp12;
- (void)attachColorList:(id)fp8;
- (void)colorListChanged:(id)fp8;
- (void)detachColorList:(id)fp8;
- (void)setCurrListName:(id)fp8;
- (id)listDictionary;
- (id)attachedListDictionary;
- (void)loadColorLists;
- (void)saveDefaults;
- (void)restoreDefaults;
- (int)findColorNamed:(id)fp8 inList:(id)fp12 usingLocalName:(BOOL)fp16;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)saveList:(id)fp8;
- (BOOL)isCurrListEditable;
- (void)addNewColor:(id)fp8 andShowInWell:(BOOL)fp12;
- (id)newColorName:(id)fp8;
- (void)newColor:(id)fp8;
- (id)newListName:(id)fp8;
- (void)newList:(id)fp8;
- (void)openListFromFile:(id)fp8;
- (void)openList:(id)fp8;
- (void)renameColorSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (void)renameColor:(id)fp8;
- (void)tryNewColorListNameSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (void)renameListSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (void)renameList:(id)fp8;
- (void)removeColorSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (void)removeColor:(id)fp8;
- (void)removeListSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (void)removeList:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)controlTextDidChange:(id)fp8;
- (void)filterChanged:(id)fp8;
- (void)endSheetReturningTag:(id)fp8;

@end

@interface NSColorPickerPageableNameListScrollView : NSScrollView
{
    NSColorPickerPageableNameList *picker;
    NSImage *_scrollerCaps;
    int _partMouseDown;
    int _arrowPlacement;
    int _tint;
}

- (void)appearanceChanged:(id)fp8;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (int)partHit:(id)fp8;
- (void)mouse:(id)fp8;
- (void)timer:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (void)mouseUp:(id)fp8;
- (BOOL)isPaged;
- (unsigned int)pageCount;
- (id)colorList;
- (BOOL)isFirstAndKey;
- (void)updateWithFocusRingForWindowKeyChange;
- (void)updateWithFocusRing;
- (void)_windowChangedKeyState;
- (void)drawScroller:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)scrollWheel:(id)fp8;
- (void)pageDown:(id)fp8;
- (void)pageUp:(id)fp8;

@end

@interface NSColorPickerPageableNameListView : NSView
{
    NSColorPickerPageableNameList *picker;
    NSColorList *_cList;
    NSString *_filter;
    unsigned int _filteredCount;
    char *_filteredCache;
    unsigned int _lastHint;
    unsigned int _lastSelected;
    float _lastQual;
    NSColor *_lastColor;
    unsigned int _hint;
    unsigned int _page;
    unsigned int _pageH;
    unsigned int _pageW;
    int _itemH;
    int _swatchW;
    NSColor *colorToDrag;
    NSColor *draggedColor;
}

- (void)_init;
- (id)initWithCoder:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (void)viewDidMoveToWindow;
- (void)adjustScrollView;
- (void)clipFrameChanged:(id)fp8;
- (void)colorListChanged:(id)fp8;
- (id)colorList;
- (void)setColorList:(id)fp8;
- (void)setFilter:(id)fp8;
- (void)buildFilterCache;
- (void)clearFilterCache;
- (unsigned int)countFiltered:(BOOL)fp8;
- (BOOL)passesFilterAtIndex:(unsigned int)fp8;
- (unsigned int)actualIndexForIndex:(unsigned int)fp8 filtered:(BOOL)fp12;
- (unsigned int)filteredIndexForActualIndex:(unsigned int)fp8;
- (id)colorAtIndex:(unsigned int)fp8 filtered:(BOOL)fp12;
- (id)nameAtIndex:(unsigned int)fp8 filtered:(BOOL)fp12;
- (struct _NSRect)rectForIndex:(unsigned int)fp8;
- (BOOL)isPaged;
- (unsigned int)pageCount;
- (unsigned int)page;
- (void)setPage:(unsigned int)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)_colorForMouseEvent:(id)fp8;
- (void)_setColorPanelColor:(id)fp8 force:(BOOL)fp12;
- (void)_mouse:(id)fp8 force:(BOOL)fp12;
- (void)_periodicEvent:(id)fp8;
- (BOOL)_mouseDragged:(id)fp8;
- (BOOL)_mouseUp:(id)fp8;
- (void)mouseDown:(id)fp8;
- (float)matchQualityOfColorAtIndex:(unsigned int)fp8 toColor:(id)fp12 filtered:(BOOL)fp16 ifBetterThan:(float)fp20;
- (unsigned int)selectedIndexAndQuality:(float *)fp8;
- (unsigned int)selectedIndex;
- (BOOL)hasSelectedColor;
- (id)selectedName;
- (void)scrollToSelected;
- (BOOL)isFirstAndKey;
- (void)updateWithFocusRing;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)needsPanelToBecomeKey;
- (void)windowDidBecomeKeyNotification:(id)fp8;
- (void)windowDidResignKeyNotification:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;

@end

@interface NSColorList (NSPagedColorListSupport)
- (id)_initWithName:(id)fp8 fromCMProfileRef:(struct OpaqueCMProfileRef *)fp12;
- (unsigned int)_count;
- (id)_colorAtIndex:(unsigned int)fp8;
- (id)_nameAtIndex:(unsigned int)fp8;
- (BOOL)_isPaged;
- (BOOL)_isProfileBased;
- (unsigned int)_pageCount;
- (CDAnonymousStruct20)_infoForPage:(unsigned int)fp8;
- (unsigned int)_pageForIndex:(unsigned int)fp8;
@end

@interface NSRegion : NSObject
{
    struct _NSRect _bounds;
    void *_cgRegion;
}

- (id)init;
- (id)initWithRect:(struct _NSRect)fp8;
- (id)initWithRects:(const struct _NSRect *)fp8 count:(int)fp12;
- (id)initWithCGSRegionObj:(void *)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copy;
- (id)mutableCopy;
- (id)description;
- (void *)cgsRegionObj;
- (BOOL)isEmpty;
- (struct _NSRect)bounds;
- (BOOL)containsRect:(struct _NSRect)fp8;
- (BOOL)intersectsRect:(struct _NSRect)fp8;
- (void)getRects:(struct _NSRect **)fp8 count:(int *)fp12;
- (void)setEmpty;
- (void)addRect:(struct _NSRect)fp8;
- (void)addRegion:(id)fp8;
- (void)subtractRect:(struct _NSRect)fp8;
- (void)subtractRegion:(id)fp8;
- (void)intersectWithRect:(struct _NSRect)fp8;
- (void)addClip;

@end

@interface NSSearchField : NSTextField
{
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (void)setRecentSearches:(id)fp8;
- (id)recentSearches;
- (void)setRecentsAutosaveName:(id)fp8;
- (id)recentsAutosaveName;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setSearchMenuTemplate:(id)fp8;
- (id)searchMenuTemplate;

@end

@interface NSSearchFieldCell : NSTextFieldCell
{
    struct __sfFlags _sfFlags;
    NSButtonCell *_searchButtonCell;
    NSButtonCell *_cancelButtonCell;
    NSMenu *_searchMenuTemplate;
    NSString *_recentsAutosaveName;
    NSMutableArray *_recentSearches;
    NSMenu *_searchMenu;
    NSTimer *_partialStringTimer;
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)searchButtonCell;
- (void)setSearchButtonCell:(id)fp8;
- (id)cancelButtonCell;
- (void)setCancelButtonCell:(id)fp8;
- (void)resetSearchButtonCell;
- (void)resetCancelButtonCell;
- (struct _NSRect)searchTextRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)searchButtonRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)cancelButtonRectForBounds:(struct _NSRect)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (void)setObjectValue:(id)fp8;
- (void)setSearchMenuTemplate:(id)fp8;
- (id)searchMenuTemplate;
- (void)setEnabled:(BOOL)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setTextColor:(id)fp8;
- (void)_getTextColor:(id *)fp8 backgroundColor:(id *)fp12;
- (BOOL)_shouldSetHighlightToFlag:(BOOL)fp8;
- (id)_selectOrEdit:(const struct _NSRect *)fp8 inView:(id)fp12 target:(id)fp16 editor:(id)fp20 event:(id)fp24 start:(int)fp28 end:(int)fp32;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)resetCursorRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)textDidChange:(id)fp8;
- (BOOL)_sendActionFrom:(id)fp8;
- (void)endEditing:(id)fp8;
- (void)setSendsWholeSearchString:(BOOL)fp8;
- (BOOL)sendsWholeSearchString;
- (void)setMaximumRecents:(int)fp8;
- (int)maximumRecents;
- (void)setRecentSearches:(id)fp8;
- (id)recentSearches;
- (void)setRecentsAutosaveName:(id)fp8;
- (id)recentsAutosaveName;
- (BOOL)sendsSearchStringImmediately;
- (void)setSendsSearchStringImmediately:(BOOL)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSSearchFieldCell (NSSearchFieldCell_Local)
+ (double)_keyboardDelayForPartialSearchString:(id)fp8;
- (int)_realMaximumRecents;
- (void)_searchFieldSearch:(id)fp8;
- (BOOL)_controlView:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)_searchFieldCancel:(id)fp8;
- (void)_searchFieldDoRecent:(id)fp8;
- (void)_searchFieldClearRecents:(id)fp8;
- (void)_sendPartialString;
- (id)_searchMenuTemplate;
- (void)_updateSearchMenu;
- (void)_registerForAutosaveNotification;
- (void)_deregisterForAutosaveNotification;
- (void)_updateAutosavedRecents:(id)fp8;
- (void)_adjustSearchButtonCellImages:(BOOL)fp8:(BOOL)fp12;
- (void)_adjustCancelButtonCellImages:(BOOL)fp8:(BOOL)fp12;
- (void)_addStringToRecentSearches:(id)fp8;
- (BOOL)_trimRecentSearchList;
- (void)_trackButton:(id)fp8 forEvent:(id)fp12 inRect:(struct _NSRect)fp16 ofView:(id)fp32;
- (void)_textDidEndEditing:(id)fp8;
- (void)_autosaveRecentSearchList;
- (void)_loadRecentSearchList;
@end

@interface NSMutableFontDescriptor : NSFontDescriptor
{
}

+ (id)_fontDescriptorForFontPanel;
- (id)init;
- (id)_attributes;

@end

@interface NSCTFontDescriptor_ : NSCTFontDescriptor
{
}

@end

@interface NSCTFontDescriptor : NSFontDescriptor
{
}

+ (id)fontDescriptorWithFontAttributes:(id)fp8;
+ (id)fontDescriptorWithName:(id)fp8 size:(float)fp12;
+ (id)fontDescriptorWithName:(id)fp8 matrix:(id)fp12;
- (unsigned long)_cfTypeID;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (id)retain;
- (oneway void)release;
- (unsigned int)retainCount;
- (void)finalize;
- (id)objectForKey:(id)fp8;
- (id)fontDescriptorByAddingAttributes:(id)fp8;
- (id)fontAttributes;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSFontDescriptor : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_attributes;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
    id _reserved5;
}

+ (void)initialize;
+ (id)_createMungledDictionary:(id)fp8;
+ (id)fontDescriptorWithFontAttributes:(id)fp8;
+ (id)fontDescriptorWithName:(id)fp8 size:(float)fp12;
+ (id)fontDescriptorWithName:(id)fp8 matrix:(id)fp12;
- (id)initWithFontAttributes:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)fontAttributes;
- (id)_attributes;
- (Class)classForCoder;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)postscriptName;
- (float)pointSize;
- (id)matrix;
- (unsigned int)symbolicTraits;
- (id)objectForKey:(id)fp8;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)fp8;
- (id)fontDescriptorByAddingAttributes:(id)fp8;
- (id)fontDescriptorWithSymbolicTraits:(unsigned int)fp8;
- (id)fontDescriptorWithSize:(float)fp8;
- (id)fontDescriptorWithMatrix:(id)fp8;
- (id)fontDescriptorWithFace:(id)fp8;
- (id)fontDescriptorWithFamily:(id)fp8;
- (id)_visibleName;
- (id)description;

@end

@interface NSFontManager (NSFontManagerCollectionAdditions)
- (id)_nameForCollection:(id)fp8;
- (id)_filenameForCollection:(id)fp8;
- (id)_collectionWithName:(id)fp8 index:(int *)fp12;
- (id)_fontFromDescriptor:(id)fp8;
- (id)availableFontNamesMatchingFontDescriptor:(id)fp8;
- (id)_availableFontSetNames;
- (void)_collectionsChanged:(id)fp8;
- (id)_openCollections;
- (void)_sortCollections;
- (id)_createDefaultCollectionRep;
- (id)_fontNameForFamily:(id)fp8 face:(id)fp12;
- (id)_faceForFamily:(id)fp8 fontName:(id)fp12;
- (void)_openRegularCollections;
- (id)_fontSetWithName:(id)fp8;
- (void)saveFontCollection:(id)fp8 withName:(id)fp12;
- (void)saveFontCollection:(id)fp8;
- (id)_defaultFacesForFamily:(id)fp8;
- (id)_createFontPanelRepFromCollection:(id)fp8 removingHidden:(BOOL)fp12;
- (void)_addDescriptorCheckingForDuplicates:(id)fp8 toCollection:(id)fp12;
- (void)_openOldCollections;
- (void)_openOldFavorites;
- (BOOL)addCollection:(id)fp8 options:(int)fp12;
- (void)_addCollection:(id)fp8 options:(int)fp12 sender:(id)fp16;
- (BOOL)removeCollection:(id)fp8;
- (void)addFontDescriptors:(id)fp8 toCollection:(id)fp12;
- (void)_replaceFontDescriptor:(id)fp8 withDescriptor:(id)fp12 inCollection:(id)fp16;
- (void)_removeFontDescriptor:(id)fp8 fromCollection:(id)fp12 save:(BOOL)fp16;
- (void)removeFontDescriptor:(id)fp8 fromCollection:(id)fp12;
- (void)removeFontDescriptors:(id)fp8 fromCollection:(id)fp12;
- (id)collectionNames;
- (id)fontDescriptorsInCollection:(id)fp8;
- (id)_collectionWithName:(id)fp8;
- (id)_collections;
- (void)_collection:(id)fp8 setHidden:(BOOL)fp12 save:(BOOL)fp16;
- (void)_collection:(id)fp8 setHidden:(BOOL)fp12;
- (int)_renameCollection:(id)fp8 to:(id)fp12;
- (int)_renameCollectionWithName:(id)fp8 to:(id)fp12;
@end

@interface NSCGImageRep : NSImageRep
{
    struct CGImage *_cgImage;
    unsigned int reserved1;
    unsigned int reserved2;
    unsigned int reserved3;
    unsigned int reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initWithCGImage:(struct CGImage *)fp8;
- (id)initWithFocusedViewRect:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (struct CGImage *)CGImage;
- (BOOL)_isValid;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct _NSPoint)fp8;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;

@end

@interface NSAnimationHelper : NSObject
{
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopTimer *_moveTimer;
    double _moveTimerFiringInterval;
    double _startTime;
    double _totalTime;
    BOOL _done;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)_isAnimating;
- (double)_timeRemaining;
- (void)_doAnimationStepWithProgress:(float)fp8;
- (void)_doFinalAnimationStep;
- (void)_runBlockingWithDuration:(double)fp8 firingInterval:(double)fp16;
- (void)_startRunWithDuration:(double)fp8 firingInterval:(double)fp16;
- (void)_continueRunWithStartTime:(double)fp8 duration:(double)fp16;
- (void)_stopRun;
- (float)_progress;
- (void)_resetTimer;

@end

@interface NSAnimationHelper (NSPrivate)
- (void)_doAnimationStep;
- (void)_createTimer;
- (void)_doRunLoop;
- (void)_destroyTimer;
@end

@interface NSSearchButtonCellProxy : NSAccessibilityReparentingCellProxy
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (void)_accessibilityPressAction:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSSearchFieldCell (NSSearchFieldCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilitySearchButtonAttribute;
- (BOOL)accessibilityIsSearchButtonAttributeSettable;
- (id)accessibilityClearButtonAttribute;
- (BOOL)accessibilityIsClearButtonAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (struct _NSRect)_accessibilitySearchFieldCellBounds;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityHelpStringForChild:(id)fp8;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
@end

@interface NSSearchFieldCell (NSSearchButtonCellProxy)
- (id)_searchMenuForProxy;
- (BOOL)_searchMenuTracking;
@end

@interface NSNavView : NSView
{
    NSNavDataSource *_dataSource;
    id _delegate;
    id _delegatedObject;
    NSView *_fileListViewContainer;
    NSBrowser *_browser;
    NSOutlineView *_outline;
    NSNavSidebarView *_sidebar;
    NSControl *_fileListModeControl;
    NSControl *_historyControl;
    NSNavNodePopUpButton *_pathComponentPicker;
    NSNavSplitViewController *_splitViewController;
    NSSearchField *_searchField;
    NSTextField *_searchResultsCountField;
    NSProgressIndicator *_searchProgressIndicator;
    NSNavQuerySliceView *_searchSliceView;
    struct _NSRect _searchProgressIndicatorFrame;
    BOOL _restoredSavedSettings;
    BOOL _showingSearchParts;
}

+ (id)navView;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)clockPreferencesChanged:(id)fp8;
- (id)_historyControlCell;
- (id)_fileListModeControlCell;
- (id)_setupSegmentSwitchForControl:(id)fp8 firstImage:(id)fp12 secondImage:(id)fp16 action:(SEL)fp20;
- (void)_setupHistoryControl;
- (void)_setupFileListModeControl;
- (void)_setupSearchParts;
- (void)awakeFromNib;
- (void)_selectFirstKeyView;
- (void)_swapFileListKeyViewFrom:(id)fp8 to:(id)fp12;
- (void)_concludeDefaultKeyLoopComputation;
- (id)_topContainerView;
- (id)_bottomContainerView;
- (id)_activeFileListViewForResizing;
- (BOOL)preservesContentDuringLiveResize;
- (void)tileVertically;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (BOOL)_drawView:(id)fp8;
- (void)_beginDrawView:(id)fp8;
- (void)_endDrawView:(id)fp8;
- (BOOL)_cachingView;
- (void)_positionAndResizeSearchParts;
- (void)dealloc;
- (void)finalize;
- (id)_sidebarView;
- (id)_dataSource;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)_delegatedObject;
- (void)_setDelegate:(id)fp8 forPanel:(id)fp12;
- (Class)navNodeClass;
- (void)setNavNodeClass:(Class)fp8;
- (id)rootNode;
- (void)setRootNode:(id)fp8;
- (void)setRootPath:(id)fp8;
- (void)reloadRootNode;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (void)setCurrentDirectoryNode:(id)fp8;
- (BOOL)setSelectionFromDroppedNode:(id)fp8 selectionHelper:(id)fp12;
- (BOOL)setSelectionFromPasteboard:(id)fp8 selectionHelper:(id)fp12;
- (BOOL)_dropNode:(id)fp8;
- (id)showNodeInCurrentDirectoryWithFilename:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (id)selectedResolvedNodes;
- (id)currentResolvedDirectoryNode;
- (id)selectedNodes;
- (void)_configureHistoryControl;
- (void)_configureSearching:(BOOL)fp8;
- (void)_configureFileListModeControlForMode:(int)fp8;
- (void)_configureForFileListMode:(int)fp8;
- (void)_configureForShowingInPanel;
- (void)_handleAppActivation:(id)fp8;
- (void)_handleFileListDidReloadChildrenForNode:(id)fp8;
- (void)_commonHandleRootOrCurrentDirectoryChanged;
- (void)_handleRootNodeChanged;
- (void)_handleCurrentDirectoryNodeChanged;
- (void)_handleCurrentBrowsingNodePathChanged;
- (void)_handleFileListModeChanged;
- (void)_handleSelectionChanged;
- (void)_handleSelectionConfirmed;
- (void)_handleFauxDisabledNodeClicked:(id)fp8;
- (void)_changeHistory:(id)fp8;
- (BOOL)goForwardInHistoryIfPossible;
- (BOOL)goBackwardInHistoryIfPossible;
- (void)goUpDirectory;
- (void)_changeFileListMode:(id)fp8;
- (void)_directoryPopUpButtonClick:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (id)_recentPlacesNode;
- (id)lazyGetChildrenForNodeWithIdentifier:(id)fp8;
- (void)_configurePathComponentPicker;
- (void)_addCurrentDirectoryToRecentPlaces;
- (int)fileListMode;
- (void)setFileListMode:(int)fp8;
- (id)enabledFileTypes;
- (void)setEnabledFileTypes:(id)fp8;
- (id)fauxFilePackageTypes;
- (void)setFauxFilePackageTypes:(id)fp8;
- (id)displayedFileProperties;
- (BOOL)isFilePropertyDisplayed:(id)fp8;
- (void)setIsFileProperty:(id)fp8 displayed:(BOOL)fp12;
- (id)fileListOrderedByFileProperty;
- (void)setFileListOrderedByFileProperty:(id)fp8;
- (BOOL)isFileListOrderedAscending;
- (void)setIsFileListOrderedAscending:(BOOL)fp8;
- (BOOL)isFileListOrderedCaseSensitive;
- (void)setIsFileListOrderedCaseSensitive:(BOOL)fp8;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)fp8;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)fp8;
- (BOOL)showsPreviews;
- (void)setShowsPreviews:(BOOL)fp8;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)fp8;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)fp8;
- (BOOL)canClickDisabledFiles;
- (void)setCanClickDisabledFiles:(BOOL)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)fp8;
- (BOOL)treatsDirectoryAliasesAsDirectories;
- (void)setTreatsDirectoryAliasesAsDirectories:(BOOL)fp8;
- (BOOL)calculatesAllSizes;
- (void)setCalculatesAllSizes:(BOOL)fp8;
- (BOOL)allowsExpandingMultipleDirectories;
- (void)setAllowsExpandingMultipleDirectories:(BOOL)fp8;
- (void)_showQueryProgress;
- (void)_hideQueryProgress;
- (void)_handleQueryStateChange:(id)fp8;
- (void)_unregisterForQueryStateChangeNotifications:(id)fp8;
- (void)_registerForQueryStateChangeNotifications:(id)fp8;
- (void)_searchFieldCancelAction:(id)fp8;
- (void)_searchFieldAction:(id)fp8;

@end

@interface NSSavePanel : NSPanel
{
    NSNavView *_navView;
    NSView *_accessoryView;
    NSArray *_allowedFileTypes;
    NSString *_validatedPosixName;
    NSString *_hiddenExtension;
    NSTextField *_messageTextField;
    NSView *_savePane;
    NSBox *_saveNavSeparatorBox;
    NSView *_savePaneTopPartsContainer;
    NSTextField *_nameField;
    NSTextField *_nameFieldLabel;
    NSButton *_expansionButton;
    NSView *_directoryPopUpContainer;
    NSNavNodePopUpButton *_directoryPopUp;
    NSTextField *_directoryPopUpLabel;
    NSBox *_navViewContainer;
    NSBox *_accessoryViewContainer;
    NSView *_bottomControlsContainer;
    NSButton *_hideExtensionButton;
    NSButton *_newFolderButton;
    NSButton *_cancelButton;
    NSButton *_okButton;
    NSNavFilepathInputController *_filepathInputController;
    NSNavNewFolderController *_newFolderController;
    struct __SPFlags _spFlags;
    NSSavePanelAuxiliary *_spAuxiliaryStorage;
    char _reserved[5];
    void *_private;
}

+ (id)_crunchyRawUnbonedPanel;
+ (id)savePanel;
- (void)_initSaveMode;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(int)fp28 defer:(BOOL)fp32;
- (void)_selectFirstKeyView;
- (void)_bonafiedDeallocHelper;
- (void)_bonafiedDealloc;
- (void)dealloc;
- (void)finalize;
- (void)orderOut:(id)fp8;
- (id)_navView;
- (void)_restoreDefaultSettingsCommon;
- (void)_restoreDefaultSettingsForSaveMode;
- (void)_restoreDefaultSettingsForOpenMode;
- (void)_initSidebarAndPopups;
- (void)_initPanelCommon;
- (void)_updateOkButtonEnabledState;
- (void)_updateNewFolderButtonEnabledState;
- (void)_updateExpansionButtonEnabledState;
- (void)_updateHideExtensionButtonStateFromNameFieldContents;
- (void)_updateNameFieldContentsFromHideExtensionButtonState;
- (void)_handleNameFieldContentsChanged;
- (id)URL;
- (id)URLs;
- (id)_validatedPosixName;
- (void)_setValidatedPosixName:(id)fp8;
- (id)_hiddenExtension;
- (void)_setHiddenExtension:(id)fp8;
- (id)_nameFieldContentsAsPosixName;
- (void)_setNameFieldContentsFromPosixName:(id)fp8;
- (void)_setInitialNameFieldContentsFromPosixName:(id)fp8;
- (void)_selectNameFieldContentsExcludingExtension;
- (id)filenames;
- (id)filename;
- (BOOL)_isSaveFilenameLengthLegal;
- (id)directory;
- (void)setDirectory:(id)fp8;
- (BOOL)_saveMode;
- (id)requiredFileType;
- (void)setRequiredFileType:(id)fp8;
- (id)allowedFileTypes;
- (void)setAllowedFileTypes:(id)fp8;
- (BOOL)_filenameHasNonEmptyAcceptableFileType:(id)fp8;
- (BOOL)_filenameHasAcceptableFileType:(id)fp8;
- (BOOL)_isAllowedFileType:(id)fp8;
- (BOOL)allowsOtherFileTypes;
- (void)setAllowsOtherFileTypes:(BOOL)fp8;
- (id)_enabledFileTypes;
- (void)_setEnabledFileTypes:(id)fp8;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)fp8;
- (id)accessoryView;
- (void)setAccessoryView:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)validateVisibleColumns;
- (BOOL)isExpanded;
- (void)_setIsExpanded:(BOOL)fp8;
- (void)toggleIsExpanded:(id)fp8;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)fp8;
- (BOOL)canCreateDirectories;
- (void)setCanCreateDirectories:(BOOL)fp8;
- (BOOL)canSelectHiddenExtension;
- (void)setCanSelectHiddenExtension:(BOOL)fp8;
- (BOOL)isExtensionHidden;
- (void)setExtensionHidden:(BOOL)fp8;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)fp8;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)fp8;
- (id)prompt;
- (void)setPrompt:(id)fp8;
- (id)title;
- (void)setTitle:(id)fp8;
- (id)nameFieldLabel;
- (void)setNameFieldLabel:(id)fp8;
- (id)message;
- (id)_defaultMessageAttributes;
- (void)setMessage:(id)fp8;
- (int)_fetchFileListMode;
- (void)_storeFileListMode;
- (BOOL)_fetchExpandedState;
- (void)_storeExpandedState;
- (struct _NSSize)_fetchExpandedFrameSize;
- (void)_storeExpandedFrameSize;
- (id)_fetchRootDirectory;
- (void)_storeRootDirectory;
- (id)_fetchCurrentDirectory;
- (void)_storeCurrentDirectory;
- (BOOL)_fetchUserSetHideExtensionButtonState;
- (void)_storeUserSetHideExtensionButtonState;
- (BOOL)_canShowGoto;
- (void)_handleGotoFinishedWithResult:(int)fp8;
- (void)gotoSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)showGotoWithInitialFilename:(id)fp8;
- (void)sendEvent:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (BOOL)_shouldHandleAsGotoForTypedString:(id)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)_handleNameFieldContentsChangedAsGoto;
- (void)newFolder:(id)fp8;
- (void)selectText:(id)fp8;
- (void)hideExtensionButtonClick:(id)fp8;
- (void)directorySelectionPopUpButtonClick:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (id)control:(id)fp8 textView:(id)fp12 completions:(id)fp16 forPartialWordRange:(struct _NSRange)fp20 indexOfSelectedItem:(int *)fp28;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)_sendDirectoryDidChange;
- (void)_sendSelectionDidChange;
- (void)_handleRootNodeChanged:(id)fp8;
- (void)_handleCurrentDirectoryChanged:(id)fp8;
- (void)_handleFileListModeChanged:(id)fp8;
- (void)_handleFileListSelectionChanged:(id)fp8;
- (void)_handleFileListConfirmedSelection:(id)fp8;
- (void)_handleDisabledNodeClicked:(id)fp8;
- (void)_registerForDragTypes;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)selectDraggedFileNode:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;

@end

@interface NSSavePanelAuxiliary : NSObject
{
    SEL modalDelegateDidEndSelector;
    void *contextInfo;
    int _distanceBetweenExtensionCheckAndNewFolderButton;
    NSView *_savePaneAuxPartsContainer;
    BOOL _autoAppendsMDAttributesToSavedFile;
    id modalDelegate;
}

@end

@interface NSSavePanel (NSSavePanelObsoleteMethods)
- (void)_setIncludeNewFolderButton:(BOOL)fp8;
- (int)runModalForDirectory:(id)fp8 file:(id)fp12 types:(id)fp16 relativeToWindow:(id)fp20;
- (int)runModalForDirectory:(id)fp8 file:(id)fp12 relativeToWindow:(id)fp16;
@end

@interface NSNavExpansionButtonCell : NSButtonCell
{
}

- (id)initWithCell:(id)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (BOOL)acceptsFirstResponder;

@end

@interface NSDisclosureButtonCell : NSNavExpansionButtonCell
{
}

@end

@interface NSNavNameFieldFormatter : NSFormatter
{
    NSSavePanel *_panel;
    BOOL _autoAddExtensionToNextInput;
}

- (id)initWithPanel:(id)fp8;
- (void)setAutoAddExtensionToNextInput:(BOOL)fp8;
- (id)stringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;
- (BOOL)isPartialStringValid:(id *)fp8 proposedSelectedRange:(struct _NSRange *)fp12 originalString:(id)fp16 originalSelectedRange:(struct _NSRange)fp20 errorDescription:(id *)fp28;

@end

@interface NSNavMatrix : NSMatrix
{
    unsigned int _lastFoundCellIndex;
}

- (void)_commonInitNavMatrix;
- (id)initWithFrame:(struct _NSRect)fp8 mode:(int)fp24 prototype:(id)fp28 numberOfRows:(int)fp32 numberOfColumns:(int)fp36;
- (id)initWithFrame:(struct _NSRect)fp8 mode:(int)fp24 cellClass:(Class)fp28 numberOfRows:(int)fp32 numberOfColumns:(int)fp36;
- (id)initWithCoder:(id)fp8;
- (BOOL)refusesFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setIntercellSpacing:(struct _NSSize)fp8;
- (id)_enclosingBrowser;
- (void)sendMouseUpActionForDisabledCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (id)cellAtPoint:(struct _NSPoint)fp8 row:(int *)fp16 column:(int *)fp20;
- (BOOL)isOpaque;
- (BOOL)getRow:(int *)fp8 column:(int *)fp12 ofCell:(id)fp16;
- (BOOL)isPreviewColumn;
- (void)updateCell:(id)fp8;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct _NSRect)fp8;
- (struct _NSSize)exactSizeToCellsSize;
- (void)sizeToCells;
- (void)putCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)keyDown:(id)fp8;
- (void)_forceSendDoubleActionForPreviewCell;
- (void)mouseDown:(id)fp8;

@end

@interface NSNavOutlineView : NSOutlineView
{
    int _fauxHighlightedCellRow;
    int _fauxHighlightedCellCol;
    NSCell *_fauxHighlightedCell;
    BOOL _isTryingToHideScrollers;
}

+ (int)defaultFocusRingType;
- (void)sendMouseUpActionForDisabledCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (BOOL)shouldHighlightWithoutSelectingCell:(id)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)tile;
- (void)_delegateWillDisplayCellIfNecessary:(id)fp8 forColumn:(id)fp12 row:(int)fp16;
- (id)cellAtRow:(int)fp8 column:(int)fp12 loaded:(BOOL)fp16;
- (id)cellAtPoint:(struct _NSPoint)fp8 row:(int *)fp16 column:(int *)fp20 loaded:(BOOL)fp24;
- (struct _NSRect)_adjustFrameOfOutlineCellIfNecessary:(id)fp8 frame:(struct _NSRect)fp12;
- (void)_drawOutlineCell:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)_highlightOutlineCell:(id)fp8 highlight:(BOOL)fp12 withFrame:(struct _NSRect)fp16 inView:(id)fp32;
- (struct _NSRect)_frameOfOutlineCellAtRow:(int)fp8;
- (struct _NSRect)labelRectOfRow:(int)fp8;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)displaysEnabledAtRow:(int)fp8;
- (void)drawRow:(int)fp8 clipRect:(struct _NSRect)fp12;
- (BOOL)_shouldContinueExpandAtLevel:(int)fp8 beganAtLevel:(int)fp12;
- (void)selectRowIndexes:(id)fp8 byExtendingSelection:(BOOL)fp12;
- (BOOL)_sendDelegateCanSelectRow:(int)fp8 byExtendingSelection:(BOOL)fp12;
- (void)keyDown:(id)fp8;
- (BOOL)performKeyEquivalent:(id)fp8;
- (BOOL)showsOutlineCell;
- (struct _NSRect)frameOfCellAtColumn:(int)fp8 row:(int)fp12;
- (void)mouseDown:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;

@end

@interface NSNavBrowserCell : NSBrowserCell
{
    NSView *_controlView;
    NSNavNode *_node;
    NSNavNodePreviewHelper *_nodePreviewHelper;
    struct _NSRect _currentCellFrame;
    struct _NSSize _textSizeCache;
    struct __NBCFlags _nbcFlags;
}

+ (void)resetDateFormats;
+ (BOOL)preprefersTrackingUntilMouseUp;
+ (struct _NSSize)iconSize;
+ (void)delayedProcessLogonButtonClick:(id)fp8;
+ (void)delayedProcessGetInfoButtonClick:(id)fp8;
- (id)init;
- (int)_effectiveFocusRingType;
- (int)_typesetterBehavior;
- (void)_releaseNodePreviewHelper;
- (void)_createNewNodePreviewHelper;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)node;
- (id)_textAttributes;
- (void)setNode:(id)fp8 isDirectory:(BOOL)fp12 displayState:(int)fp16;
- (void)setPreviewNode:(id)fp8;
- (void)stopObservingPreviewNode;
- (void)startObservingPreviewNode:(id)fp8;
- (void)_handleChildChanged:(id)fp8;
- (void)setControlView:(id)fp8;
- (id)controlView;
- (void)handleDelayedUpdate:(id)fp8;
- (void)cancelDelayedUpdate;
- (void)scheduleDelayedUpdate;
- (void)handlePreviewTextUpdate;
- (void)setShowsLogonButton:(BOOL)fp8;
- (BOOL)showsLogonButton;
- (id)logonButtonCell;
- (void)setShowsGetInfoButton:(BOOL)fp8;
- (BOOL)showsGetInfoButton;
- (id)getInfoButtonCell;
- (id)currentButtonCell;
- (BOOL)isPreview;
- (BOOL)isDirectory;
- (BOOL)isFauxDisabled;
- (BOOL)hasNodeLabel;
- (id)_currentBranchImage;
- (void)doCalcDrawInfo:(struct _NSRect)fp8;
- (void)calcDrawInfo:(struct _NSRect)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)clickableContentRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)_branchImageRectForBounds:(struct _NSRect)fp8;
- (void)_drawLabelHighlightIfNecessaryWithFrame:(struct _NSRect)fp8 inView:(id)fp24 fullHighlight:(BOOL)fp28;
- (BOOL)controlDrawsSelectionHighlights;
- (void)_drawHighlightWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setEnableTextHighlightDrawing:(BOOL)fp8;
- (void)setEnableSelectionHighlightDrawing:(BOOL)fp8;
- (BOOL)_usingAlternateHighlightColorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawNormalInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)buttonRectForBounds:(struct _NSRect)fp8;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)drawPreviewInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)currentButtonClicked:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;

@end

@interface NSNavPreviewButtonCell : NSNavSimpleButtonCell
{
}

- (id)initTextCell:(id)fp8;
- (id)textColorForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImageNamePrefixForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImageForHeightReference;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;

@end

@interface NSNavBrowserCell (NSNavBrowserCellRevealovers)
- (BOOL)_needsRevealoverWithFrame:(struct _NSRect *)fp8 trackingRect:(struct _NSRect *)fp12 inView:(id)fp16;
- (void)drawRevealoverTextWithFrame:(struct _NSRect)fp8 inView:(id)fp24 forView:(id)fp28;
- (void)_drawRevealoverWithFrame:(struct _NSRect)fp8 inView:(id)fp24 forView:(id)fp28;
@end

@interface NSBrowserCell (NSNavPrivate)
- (struct _NSSize)labelSizeForBounds:(struct _NSRect)fp8;
@end

@interface NSNavOutlineCell : NSNavBrowserCell
{
}

- (id)_currentBranchImage;
- (BOOL)controlDrawsSelectionHighlights;
- (void)setNode:(id)fp8 displayState:(int)fp12;
- (void)setLeaf:(BOOL)fp8;

@end

@interface NSNavOutlineDateCell : NSTextFieldCell
{
    NSFont *_lastFont;
    NSFont *_smallerFont;
    double _timeIntervalSince1970;
    NSMutableAttributedString *_lastDateString;
    double _lastDateInterval;
    NSMutableDictionary *_normalAttributes;
    NSMutableParagraphStyle *_paragraphStyle;
    NSMutableAttributedString *_drawingString;
    BOOL _use24HourFormat;
    BOOL _okToUseYesterdayAndToday;
    BOOL _drawnInSelectedRow;
    float _lastWidth;
    int _dateDetailLevel;
}

+ (void)initialize;
+ (void)resetDateFormats;
- (id)shortTimeFormat;
- (id)fontName;
- (float)fontSize;
- (int)_typesetterBehavior;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (float)_widthOfLongestDateStringWithLevel:(int)fp8 format:(id)fp12;
- (BOOL)_persistsWidthCacheToUserDefaults;
- (void)_saveWidthsToDefaults;
- (BOOL)_readWidthsFromDefaults;
- (void)_updateDateColumnDetailLevelWidths;
- (BOOL)_updateDateColumnDetailLevels;
- (float)minimumWidth;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (id)copyOfCalendarDate;
- (BOOL)shouldUseEnabledTextColor;
- (id)textColor;
- (void)setDrawnInSelectedRow:(BOOL)fp8;
- (BOOL)drawnInSelectedRow;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setTimeIntervalSince1970:(double)fp8;
- (void)setObjectValue:(id)fp8;
- (void)setFont:(id)fp8;

@end

@interface NSNavOutlineHeaderCell : NSTableHeaderCell
{
    NSTableColumn *_tableColumn;
}

- (void)setTableColumn:(id)fp8;
- (id)tableColumn;
- (id)_outlineView;
- (int)_typesetterBehavior;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;

@end

@interface NSNavBrowserDelegate : NSNavFileListDelegate
{
    NSBrowser *_browser;
    NSNavNode *_lastSelectedNode;
}

- (void)dealloc;
- (void)finalize;
- (id)browser;
- (void)setBrowser:(id)fp8;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)fp8 selectedNodes:(id)fp12;
- (BOOL)lightweightHandleChildChanged:(id)fp8 parent:(id)fp12 property:(id)fp16;
- (void)reloadChildrenForNode:(id)fp8;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (id)currentBrowsingNodePath;
- (id)currentTypeSelectDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)fp8 pathToNode:(id)fp12;
- (void)setCurrentDirectoryNode:(id)fp8;
- (void)setCurrentBrowsingNodePath:(id)fp8;
- (BOOL)canHighlightNode:(id)fp8;
- (id)showNode:(id)fp8 inDirectory:(id)fp12 selectIfEnabled:(BOOL)fp16;
- (void)handleUserGoUpDirectory;
- (id)selectedNodes;
- (void)configureForCanChooseDirectories:(BOOL)fp8;
- (void)configureForCanChooseFiles:(BOOL)fp8;
- (void)configureForAllowsMultipleSelection:(BOOL)fp8;
- (void)_browserAction:(id)fp8;
- (void)browser:(id)fp8 didClickOnDisabledCell:(id)fp12 atRow:(int)fp16 column:(int)fp20;
- (BOOL)_browser:(id)fp8 keyEvent:(id)fp12 inColumn:(int)fp16;
- (BOOL)_browser:(id)fp8 performKeyEquivalent:(id)fp12 inColumn:(int)fp16;
- (void)_browserDoubleAction:(id)fp8;
- (int)browser:(id)fp8 numberOfRowsInColumn:(int)fp12;
- (void)browser:(id)fp8 willDisplayCell:(id)fp12 atRow:(int)fp16 column:(int)fp20;
- (void)browserColumnConfigurationDidChange:(id)fp8;
- (void)_debug;

@end

@interface _NSNavBrowserColumnSelectionInfo : NSObject
{
    NSArray *selectedNodes;
    NSNavNode *firstNode;
    float firstNodeTopInset;
    struct _NSRect visibleRect;
    BOOL isPreviewColumn;
}

- (id)description;

@end

@interface NSNavOutlineDelegate : NSNavFileListDelegate
{
    NSOutlineView *_outline;
    NSNavNode *_currentDirectoryNode;
    float _normalIndentationPerLevel;
    NSArray *_highlightedNodesToRestore;
}

- (void)dealloc;
- (void)finalize;
- (id)outline;
- (BOOL)supportsSortingByFileProperties;
- (void)prepareForReloadChildrenForNode:(id)fp8;
- (void)setOutline:(id)fp8;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)fp8 selectedNodes:(id)fp12;
- (void)_synchronizeExpandedNodesWithOutlineExpandedItems;
- (BOOL)lightweightHandleChildChanged:(id)fp8 parent:(id)fp12 property:(id)fp16;
- (void)reloadChildrenForNode:(id)fp8;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)configureForCanChooseDirectories:(BOOL)fp8;
- (void)configureForCanChooseFiles:(BOOL)fp8;
- (void)configureForAllowsMultipleSelection:(BOOL)fp8;
- (void)configureForAllowsExpandingMultipleDirectories:(BOOL)fp8;
- (void)configureForSortedByFileProperty:(id)fp8 ascending:(BOOL)fp12 caseSensitive:(BOOL)fp16;
- (void)configureForDisplayedFileProperties:(id)fp8;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)fp8;
- (void)setCurrentDirectoryNode:(id)fp8;
- (void)setCurrentBrowsingNodePath:(id)fp8;
- (id)showNode:(id)fp8 inDirectory:(id)fp12 selectIfEnabled:(BOOL)fp16;
- (id)_doFindIndexesOfNodes:(id)fp8 inDirectory:(id)fp12 visitedNodes:(id)fp16;
- (void)_setHighlightedRowsFromNodes:(id)fp8 maintainFirstVisibleRow:(BOOL)fp12;
- (id)_highlightedNodes;
- (id)selectedNodes;
- (void)sendSelectionChangedNotification;
- (void)_outlineAction:(id)fp8;
- (void)_doChangeDirectoryForUserDrillIntoNode:(id)fp8;
- (BOOL)_tryUserDrillIntoHighlightedNode;
- (BOOL)outlineView:(id)fp8 keyDownEvent:(id)fp12;
- (BOOL)outlineView:(id)fp8 performKeyEquivalent:(id)fp12;
- (void)outlineView:(id)fp8 didClickOnDisabledCell:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (BOOL)outlineView:(id)fp8 shouldHighlightWithoutSelectingCell:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (BOOL)outlineView:(id)fp8 labelShouldDisplayEnabledAtRow:(int)fp12;
- (void)outlineViewSelectionDidChange:(id)fp8;
- (void)_outlineDoubleAction:(id)fp8;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (BOOL)canChooseNode:(id)fp8;
- (BOOL)canHighlightNode:(id)fp8;
- (BOOL)_outlineView:(id)fp8 shouldSelectItem:(id)fp12;
- (id)_chooseableIndexesFromIndexes:(id)fp8;
- (id)outlineView:(id)fp8 shouldSelectRowIndexes:(id)fp12 byExtendingSelection:(BOOL)fp16;
- (BOOL)outlineView:(id)fp8 shouldSelectItem:(id)fp12 byExtendingSelection:(BOOL)fp16;
- (BOOL)outlineView:(id)fp8 shouldEditTableColumn:(id)fp12 item:(id)fp16;
- (void)outlineViewItemDidExpand:(id)fp8;
- (void)outlineViewItemDidCollapse:(id)fp8;
- (void)outlineViewColumnDidMove:(id)fp8;
- (void)outlineView:(id)fp8 sortDescriptorsDidChange:(id)fp12;
- (void)_debug;

@end

@interface NSNavFileListDelegate : NSObject
{
    NSNavDataSource *_dataSource;
    NSMutableArray *_currentBrowsingNodePath;
}

- (id)initWithDataSource:(id)fp8;
- (void)dealloc;
- (id)dataSource;
- (id)currentTypeSelectDirectoryNode;
- (id)currentBrowsingNodePath;
- (void)updateCurrentBrowsingNodePathWithCurrentDirectoryNode:(id)fp8;
- (void)storeCurrentBrowsingNodePath:(id)fp8;
- (id)showNodeInCurrentDirectoryWithFilename:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (id)showNodeInDirectory:(id)fp8 withDisplayNamePrefix:(id)fp12 selectIfEnabled:(BOOL)fp16 caseSensitiveCompare:(BOOL)fp20;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (void)handleUserGoUpDirectory;
- (id)_doTypeSelectNodeInDirectory:(id)fp8 withSearchString:(id)fp12 visitedNodes:(id)fp16 expandedNodesToVisit:(id)fp20 recursively:(BOOL)fp24;
- (id)typeSelectNodeInTypeSelectDirectoryWithKeyDownEvent:(id)fp8 recursively:(BOOL)fp12;
- (BOOL)_tryUserDrillIntoHighlightedNode;
- (BOOL)_tryUserMoveToParentNode;
- (BOOL)handleKeyboardShortcutWithEvent:(id)fp8;
- (void)getSnapToWidthList:(const float **)fp8 snapRadiusList:(const float **)fp12 count:(int *)fp16;
- (float)minimumWidth;
- (void)setRememberedSnapToIndex:(int)fp8;
- (int)rememberedSnapToIndex;

@end

@interface NSNavFileListDelegate (NSNavFileListDelegateOptionalOverrides)
- (BOOL)lightweightHandleChildChanged:(id)fp8 parent:(id)fp12 property:(id)fp16;
- (BOOL)supportsSortingByFileProperties;
- (void)prepareForReloadChildrenForNode:(id)fp8;
- (void)configureForActiveState;
- (void)configureForInactiveState;
- (void)configureForDisplayedFileProperties:(id)fp8;
- (void)configureForSortedByFileProperty:(id)fp8 ascending:(BOOL)fp12 caseSensitive:(BOOL)fp16;
- (void)configureForShowsPreviews:(BOOL)fp8;
- (void)configureForCanChooseDirectories:(BOOL)fp8;
- (void)configureForCanChooseFiles:(BOOL)fp8;
- (void)configureForCanClickDisabledFiles:(BOOL)fp8;
- (void)configureForAllowsMultipleSelection:(BOOL)fp8;
- (void)configureForTreatsFilePackagesAsDirectories:(BOOL)fp8;
- (void)configureForTreatsDirectoryAliasesAsDirectories:(BOOL)fp8;
- (void)configureForCalculatesAllSizes:(BOOL)fp8;
- (void)configureForAllowsExpandingMultipleDirectories:(BOOL)fp8;
@end

@interface NSNavSidebarItemView : NSBox
{
    NSNavNode *_node;
    NSNavSidebarItemViewTextField *_textLabel;
    NSNavSidebarItemActionButton *_actionButton;
    NSNavSidebarItemRollover *_rollover;
    int _rolloverTrackingTag;
    struct {
        unsigned int rolloverTrackingActive:1;
        unsigned int tileDisabled:1;
        unsigned int scheduledRolloverTrackingUpdate:1;
        unsigned int lastDisplayedAsSelected:1;
        unsigned int reserved:28;
    } _sbivFlags;
}

+ (struct _NSSize)iconSize;
+ (float)minimumHeight;
+ (float)maximumHeight;
- (void)_commonInitSidebarItemView;
- (id)_navView;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSRect)iconRect;
- (float)_widthToStartRolloverTracking;
- (struct _NSRect)rectForRolloverTracking;
- (id)description;
- (float)sizeToFitWidth;
- (struct _NSSize)iconSize;
- (float)rolloverXLocation;
- (void)updateTextColor;
- (void)tile;
- (void)_installLabel;
- (void)_installActionButtonIfNecessary;
- (void)_uninstallActionButtonIfNecessary;
- (id)label;
- (void)ejectButtonPressedAction:(id)fp8;
- (void)handleNodePropertyChanged;
- (BOOL)isEnabled;
- (BOOL)hasDirectoryNode;
- (void)setContentView:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)_tile:(BOOL)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 node:(id)fp24;
- (void)dealloc;
- (void)finalize;
- (id)sidebar;
- (BOOL)isSelected;
- (id)_enclosingSidebarView;
- (BOOL)showPrimarySelection;
- (void)setNeedsDisplayForResponderChange;
- (void)_windowChangedKeyState;
- (id)node;
- (void)_drawIcon;
- (void)setNeedsDisplayIfSelectionNeedsToRedraw;
- (void)drawRect:(struct _NSRect)fp8;
- (void)showRolloverWindow;
- (void)cancelPreviouslScheduleRolloverWindow;
- (void)scheduleShowRolloverWindow;
- (void)hideRolloverWindow;
- (BOOL)_shouldBeRolloverTracking;
- (BOOL)configureForRolloverTrackingIfNecessary;
- (void)configureForRolloverTrackingIfNecessaryForClipViewFrameChange;
- (void)clearRolloverTrackingRect;
- (void)repositionRolloverTrackingRectIfNecessary;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)unregisterForWindowNotifications;
- (void)registerForWindowNotifications;
- (void)unregisterForEnclosingClipViewNotifications;
- (void)registerForEnclosingClipViewNotifications;
- (void)windowWillCloseNotification:(id)fp8;
- (void)enclosingClipViewBoundsOrFrameDidChangeNotification:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToSuperview;
- (void)viewDidMoveToSuperview;
- (void)viewDidEndLiveResize;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface NSNavSidebarItemViewTextField : NSTextField
{
}

- (void)_commonInitSidebarItemViewTextField;
- (id)_enclosingSidebarItem;
- (id)textAttributes;
- (void)setStringValue:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSNavSidebarView : NSControl
{
    int _rememberedSnapToIndex;
    float _lastTiledItemViewHeight;
    float _lastTiledContentHeight;
    float _lastIconHeight;
    float _itemViewAreaHeight;
    NSNavView *_navView;
    BOOL _alreadyHandlingSetFrameSize;
    BOOL _registeredForNavChildNotifications;
    NSNavNode *_sidebarVolumesNode;
    NSNavNode *_sidebarFavoritesNode;
    NSMutableArray *_itemViewGroups;
    NSMutableArray *_itemViewSeparators;
    NSView *_lastLayedView;
}

+ (struct _NSSize)defaultIconSize;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (id)navView;
- (id)sidebarVolumesNode;
- (id)sidebarFavoritesNode;
- (void)_setSidebarVolumesNode:(id)fp8 favoritesNode:(id)fp12;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)setDisplayedContainerNodes:(id)fp8;
- (void)_handleChildrenChanged:(id)fp8;
- (void)_handleChildAddedOrRemoved:(id)fp8;
- (void)_handleChildChanged:(id)fp8;
- (struct _NSSize)iconSize;
- (float)spaceForScrollbarAndScrollViewBorder;
- (float)sizeToFitWidth;
- (void)getSnapToWidthList:(const float **)fp8 snapRadiusList:(const float **)fp12 count:(int *)fp16;
- (float)minimumWidth;
- (void)setRememberedSnapToIndex:(int)fp8;
- (int)rememberedSnapToIndex;
- (BOOL)_shouldShowNode:(id)fp8;
- (void)_loadItemViewsForChildrenOfContainerNodes:(id)fp8 existingViewsToKeepTable:(id)fp12;
- (id)_updatedItemViewsForChildrenOfContainerNodes:(id)fp8;
- (void)_reloadSidebarNodes;
- (id)_itemAtPosition:(struct _NSPoint)fp8;
- (id)selectedItem;
- (void)selectItem:(id)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)_shouldDrawFocusIfInKeyWindow;
- (BOOL)_shouldDrawFocus;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)fp8;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (void)_setFocusRingNeedsDisplay;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)_windowChangedKeyState;
- (BOOL)needsPanelToBecomeKey;
- (void)_moveSelectionBy:(int)fp8;
- (void)moveUp:(id)fp8;
- (void)moveDown:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)handleRootNodeChanged;
- (void)_handleRedrawSidebarSelectionIfNecessary;
- (void)handleCurrentDirectoryNodeChanged;
- (void)handleFileListModeChanged;
- (int)numberOfGroups;
- (id)_orderedSidebarItemViews;
- (id)_allSidebarItemViews;
- (int)totalNumberOfItemViewersAndSeparators;
- (void)_layoutItemViewForWithItemHeight:(float)fp8 allSidebarItemViews:(id)fp12;
- (void)tileIfNecessary;
- (void)tile;
- (void)_setNeedsTiling;
- (void)clipviewBoundsChangedNotification:(id)fp8;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)_adjustWidthsToFit;
- (BOOL)preservesContentDuringLiveResize;
- (void)setFrameSize:(struct _NSSize)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;

@end

@interface NSNavSidebarGroupSeparator : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;

@end

@interface NSNavSidebarView (NSNavSidebarViewDragging)
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
@end

@interface NSNavSidebarView (_NSNavProKitExports)
+ (void)_setAppearance:(struct __NSNavSidebarAppearance)fp8;
+ (struct __NSNavSidebarAppearance)_appearance;
@end

@interface NSNavSplitViewController : NSObject
{
    NSNavView *_navView;
    NSNavSplitView *_splitView;
    int _lastUncollapsedSidebarWidth;
    int _lastUncollapsedSidebarSplitIndex;
    float _sidebarInset;
}

- (id)leftSplitItem;
- (id)rightSplitItem;
- (id)leftView;
- (id)rightView;
- (void)_restoreSplitPositionFromDefaults;
- (void)restoreSavedSettings;
- (void)_saveSplitPositionToDefaults;
- (void)_adjustNibControlSizes;
- (void)awakeFromNib;
- (void)_commonInitSplitViewController;
- (id)init;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)sidebarView;
- (id)filelistDelegate;
- (float)_snapSplitPosition:(float)fp8 forItem:(id)fp12 snapIndex:(int *)fp16;
- (float)splitView:(id)fp8 constrainSplitPosition:(float)fp12 ofSubviewAt:(int)fp16;
- (BOOL)_snapPositionConstrainedResizeSplitView:(id)fp8;
- (void)_setSidebarWidth:(float)fp8 maintainSnap:(BOOL)fp12 constrain:(BOOL)fp16;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;
- (BOOL)_isSidebarCollapsed;
- (void)_updateLastUncollapsedSidebarWidth;
- (void)splitViewWillTrackOrResize:(id)fp8;
- (void)splitViewDidTrackOrResize:(id)fp8;
- (void)_toggleCollapsedSplitView;
- (void)splitViewDoubleClick:(id)fp8;

@end

@interface NSNavDisplayNameFilePropertySortDescriptor : NSNavFilePropertySortDescriptor
{
    id _delegate;
    NSSavePanel *_panel;
    NSNavView *_navView;
    BOOL _caseSensitive;
}

- (id)initWithDataSource:(id)fp8 ascending:(BOOL)fp12;
- (int)_compareNode:(id)fp8 withDisplayName:(id)fp12 toNode:(id)fp16 withDisplayName:(id)fp20;
- (int)compareObjectValue:(id)fp8 toObjectValue:(id)fp12;
- (int)compareObject:(id)fp8 toObject:(id)fp12;

@end

@interface NSNavFilePropertySortDescriptor : NSSortDescriptor
{
    NSString *_fileProperty;
    NSNavDataSource *_dataSource;
}

+ (id)sortDescriptorForFileProperty:(id)fp8 dataSource:(id)fp12 ascending:(BOOL)fp16;
- (id)initWithFileProperty:(id)fp8 dataSource:(id)fp12 ascending:(BOOL)fp16;
- (void)dealloc;
- (int)compareObjectValue:(id)fp8 toObjectValue:(id)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)fileProperty;

@end

@interface NSString (NSNavFilePropertyComparisonAdditions)
- (int)_NSNavFilePropertyCompare:(id)fp8;
- (int)_NSNavFilePropertyCompareCaseInsenstive:(id)fp8;
- (int)_NSNavDisplayNameCompare:(id)fp8 caseSensitive:(BOOL)fp12;
- (int)_NSNavShortVersionCompare:(id)fp8;
@end

@interface NSNavNode (NSNavPhysicalSizeComparisonAdditions)
- (int)_physicalSizeCompare:(id)fp8;
@end

@interface NSNavDataSource : NSObject
{
    NSNavView *_navView;
    NSNavNode *_rootNode;
    Class _navNodeClass;
    int _fileListMode;
    int _lastNonNaughtFileListMode;
    NSArray *_enabledFileTypes;
    NSArray *_fauxFilePackageTypes;
    NSMutableArray *_allFileProperties;
    NSMutableArray *_displayedFileProperties;
    NSString *_fileListOrderedByFileProperty;
    BOOL _resolvesAliases;
    BOOL _showsHiddenFiles;
    BOOL _showsPreviews;
    BOOL _canChooseFiles;
    BOOL _canChooseDirectories;
    BOOL _canClickDisabledFiles;
    BOOL _allowsMultipleSelection;
    BOOL _treatsFilePackagesAsDirectories;
    BOOL _treatsDirectoryAliasesAsDirectories;
    BOOL _calculatesAllSizes;
    BOOL _isFileListOrderedDescending;
    BOOL _isFileListOrderedCaseSensitive;
    BOOL _allowsExpandingMultipleDirectories;
    BOOL _isReloading;
    NSNavExpandedNodeObservingCenter *_expandedNodesObservingCenter;
    NSMutableArray *_history;
    int _currentHistoryPosition;
    int _makeHistoryDisabledCount;
    NSNavFileListDelegate *_browserDelegate;
    NSNavFileListDelegate *_outlineDelegate;
    NSNavFileListDelegate *_naughtDelegate;
    void *_private;
}

- (void)_fetchOrderedByFileProperty:(id *)fp8 orderedAscending:(char *)fp12;
- (void)_storeOrderedByFileProperty:(id)fp8 orderedAscending:(BOOL)fp12;
- (id)initWithNavView:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_setNavView:(id)fp8;
- (id)navView;
- (id)browser;
- (void)setBrowser:(id)fp8;
- (id)outline;
- (void)setOutline:(id)fp8;
- (Class)navNodeClass;
- (void)setNavNodeClass:(Class)fp8;
- (id)rootNode;
- (void)_setRootNode:(id)fp8 makeHistory:(BOOL)fp12 notify:(BOOL)fp16;
- (void)setRootNode:(id)fp8;
- (void)setRootPath:(id)fp8;
- (void)reloadRootNode;
- (id)visualRootNode;
- (void)_loadAndRestoreCurrentBrowsingNodePath:(id)fp8 selectedNodes:(id)fp12;
- (id)currentDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)fp8 makeHistory:(BOOL)fp12 notify:(BOOL)fp16;
- (void)setCurrentDirectoryNode:(id)fp8;
- (id)currentBrowsingNodePath;
- (void)_setCurrentBrowsingNodePath:(id)fp8 makeHistory:(BOOL)fp12 notify:(BOOL)fp16;
- (void)setCurrentBrowsingNodePath:(id)fp8;
- (id)showNodeInCurrentDirectoryWithFilename:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (id)showNodeInCurrentDirectoryWithDisplayNamePrefix:(id)fp8 selectIfEnabled:(BOOL)fp12;
- (id)selectedNodes;
- (void)sync;
- (int)fileListMode;
- (void)setFileListMode:(int)fp8;
- (id)enabledFileTypes;
- (void)setEnabledFileTypes:(id)fp8;
- (BOOL)_isNodeFileTypeEnabled:(id)fp8;
- (id)fauxFilePackageTypes;
- (void)setFauxFilePackageTypes:(id)fp8;
- (BOOL)_isFauxFilePackageNode:(id)fp8;
- (id)displayedFileProperties;
- (BOOL)isFilePropertyDisplayed:(id)fp8;
- (void)setIsFileProperty:(id)fp8 displayed:(BOOL)fp12;
- (id)fileListOrderedByFileProperty;
- (void)setFileListOrderedByFileProperty:(id)fp8;
- (BOOL)isFileListOrderedAscending;
- (void)setIsFileListOrderedAscending:(BOOL)fp8;
- (BOOL)isFileListOrderedCaseSensitive;
- (void)setIsFileListOrderedCaseSensitive:(BOOL)fp8;
- (void)setFileListOrderedByFileProperty:(id)fp8 ascending:(BOOL)fp12;
- (void)setFileListOrderedByFileProperty:(id)fp8 ascending:(BOOL)fp12 caseSensitive:(BOOL)fp16;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)fp8;
- (BOOL)showsHiddenFiles;
- (void)setShowsHiddenFiles:(BOOL)fp8;
- (BOOL)showsPreviews;
- (void)setShowsPreviews:(BOOL)fp8;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)fp8;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)fp8;
- (BOOL)canClickDisabledFiles;
- (void)setCanClickDisabledFiles:(BOOL)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (BOOL)treatsFilePackagesAsDirectories;
- (void)setTreatsFilePackagesAsDirectories:(BOOL)fp8;
- (BOOL)treatsDirectoryAliasesAsDirectories;
- (void)setTreatsDirectoryAliasesAsDirectories:(BOOL)fp8;
- (BOOL)calculatesAllSizes;
- (void)setCalculatesAllSizes:(BOOL)fp8;
- (BOOL)allowsExpandingMultipleDirectories;
- (void)setAllowsExpandingMultipleDirectories:(BOOL)fp8;
- (void)_reloadChildrenForNode:(id)fp8;
- (void)_prepareForReloadChildrenForNode:(id)fp8;
- (void)_concludeReloadChildrenForNode:(id)fp8;
- (id)canBrowseNode:(id)fp8 allowInteraction:(BOOL)fp12;
- (BOOL)isReloading;
- (BOOL)shouldShowPreviewColumn:(id)fp8;
- (BOOL)isDirectoryNode:(id)fp8;
- (int)displayStateForNode:(id)fp8;
- (BOOL)isFauxDisabledNode:(id)fp8;
- (BOOL)isSizeDisplayedForNode:(id)fp8;
- (id)_browserDelegate;
- (id)_outlineDelegate;
- (id)_naughtDelegate;
- (id)activeFileListDelegate;
- (void)handleDelegateChangedSelection;
- (void)handleDelegateConfirmedSelection;
- (void)handleDelegateChangedCurrentDirectory;
- (void)handleDelegateClickedFauxDisabledNode:(id)fp8;
- (void)handleDelegateMovedDiplayedProperty:(id)fp8 toIndex:(unsigned int)fp12;
- (id)_expandedNodesForObservedNode:(id)fp8;
- (void)_flushCachedChildrenForNode:(id)fp8;
- (void)_flushAllCachedChildren;
- (id)_cachedChildrenForNode:(id)fp8 createIfNeeded:(BOOL)fp12;
- (id)cachedChildrenForNode:(id)fp8;
- (int)countOfCachedChildrenForNode:(id)fp8;
- (void)willChangeExpandedNodes;
- (void)didChangeExpandedNodes;
- (id)expandedNodes;
- (BOOL)isExpandedNode:(id)fp8;
- (void)addExpandedNode:(id)fp8;
- (void)removeExpandedNode:(id)fp8;
- (void)removeExpandedNodesStartingWithIndex:(unsigned int)fp8;
- (void)removeAllExpandedNodes;
- (void)_syncAllExpandedNodes;
- (void)_makeHistory;
- (void)disableMakeHistory;
- (void)enableMakeHistory;
- (BOOL)isMakeHistoryEnabled;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (void)_goToHistoryState:(id)fp8;
- (void)goBack;
- (void)goForward;
- (void)goUpDirectory;
- (id)currentLocalSearchScopeNode;
- (BOOL)canSearch;
- (id)_actualOrderingFilePropertyAscending:(char *)fp8;
- (id)_sortDescriptors;
- (unsigned int)_leftmostInsertionIndexForNode:(id)fp8 inOrderedNodes:(id)fp12 withSortDescriptors:(id)fp16;
- (unsigned int)_leftmostInsertionIndexForNode:(id)fp8 inOrderedNodes:(id)fp12;
- (unsigned int)_indexOfNode:(id)fp8 inOrderedNodes:(id)fp12;
- (unsigned int)indexOfNode:(id)fp8 inCachedChildrenForNode:(id)fp12;
- (id)entryForNode:(id)fp8 inCachedChildrenForNode:(id)fp12;
- (unsigned int)indexOfBestMatchForDisplayNamePrefix:(id)fp8 inCachedChildrenForNode:(id)fp12;
- (void)_sortNodes:(id)fp8;
- (BOOL)_showsNode:(id)fp8;
- (void)_filterNodeList:(id)fp8 ofParentNode:(id)fp12;
- (id)_queryHitResultsFilterUTIs;
- (id)_filteredAndSortedChildrenOfNode:(id)fp8;
- (BOOL)_updateNodeList:(id)fp8 byAddingNode:(id)fp12;
- (BOOL)_updateNodeList:(id)fp8 byRemovingNode:(id)fp12 sendPrepareMessageWithParentNode:(id)fp16;
- (BOOL)_updateNodeList:(id)fp8 forChangedProperty:(id)fp12 ofNode:(id)fp16;
- (id)_affectedExpandedNodes:(id)fp8;
- (id)_affectedExpandedNodesForNode:(id)fp8;
- (void)_handleChildrenChanged:(id)fp8;
- (void)_handleChildAdded:(id)fp8;
- (void)_handleChildRemoved:(id)fp8;
- (id)_lightweightHandleChildChanged:(id)fp8 parents:(id)fp12 property:(id)fp16;
- (void)_handleChildChanged:(id)fp8;

@end

@interface NSNavHistoryState : NSObject
{
    NSArray *_currentBrowsingNodePath;
    int _fileListMode;
}

- (id)initWithCurrentBrowsingNodePath:(id)fp8 fileListMode:(int)fp12;
- (void)dealloc;
- (id)description;
- (BOOL)isEqual:(id)fp8;
- (id)rootNode;
- (id)currentDirectoryNode;
- (id)currentBrowsingNodePath;
- (int)fileListMode;

@end

@interface NSNavExpandedNodeObservingCenter : NSObject
{
    NSMutableArray *_orderedExpandedNodes;
    struct __CFDictionary *_expandedToObservedNodeMap;
    struct __CFDictionary *_observedToChildrenAndListenersMap;
    NSMutableArray *_preWillChangeExpandedNodes;
}

- (void)_allocateObserationStorage;
- (id)init;
- (void)_debug;
- (void)_addExpandedNodeToObservedNodeMappingForExpandedNode:(id)fp8;
- (void)setExpandedNodes:(id)fp8;
- (void)addExpandedNode:(id)fp8;
- (void)removeExpandedNode:(id)fp8;
- (void)removeAllExpandedNodes;
- (void)deallocAllExpandedNodes;
- (void)removeExpandedNodesStartingWithIndex:(unsigned int)fp8;
- (BOOL)isExpandedNode:(id)fp8;
- (id)expandedNodes;
- (id)expandedNodesSet;
- (id)observedNodesSet;
- (void)willChangeExpandedNodes;
- (void)_releaseOneLevelPreWillChangeExpandedNodes;
- (void)_releaseAllPreWillChangeExpandedNodes;
- (void)didChangeExpandedNodes;
- (void)dealloc;
- (void)finalize;
- (id)cachedChildrenForExpandedNode:(id)fp8;
- (id)expandedNodesForObservedNode:(id)fp8;
- (id)observedNodeForExpandedNode:(id)fp8 createIfNeeded:(BOOL)fp12;
- (void)setCachedChildren:(id)fp8 forObservedNode:(id)fp12;
- (void)flushCachedChildrenForNode:(id)fp8;
- (void)flushAllCachedChildren;

@end

@interface NSNavChildrenAndListenersValue : NSObject
{
    NSMutableSet *_listeners;
    NSMutableArray *_cachedChildren;
    NSNavNode *_keyBackPointer;
}

- (id)initForKeyBackPointer:(id)fp8;
- (void)dealloc;
- (id)keyBackPointer;
- (id)description;
- (void)addListenerIfAbsent:(id)fp8;
- (void)removeListener:(id)fp8;
- (id)listeners;
- (void)setCachedChildren:(id)fp8;
- (void)flushCachedChildren;
- (id)cachedChildren;

@end

@interface NSNavObservedNodeAndCountValue : NSObject
{
    NSNavNode *_observedNode;
    int _observationCount;
}

- (id)initWithObservedNode:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (void)incObservationCount;
- (void)decObservationCount;
- (int)observationCount;
- (id)observedNode;

@end

@interface NSNavDataSource (NSNavDataSourceDebugging)
- (void)_debug;
@end

@interface NSNavFBEQueryNode : NSNavFBENode
{
    struct OpaqueNodeRef *_savedQueryNodeRef;
    NSString *_simpleQueryString;
    NSString *_formattedSQLQueryString;
    NSString *_queryTitle;
    NSArray *_sortDescriptors;
    NSSet *_queryHitResultsFilterUTIs;
    struct OpaqueNodeRef *_mdQueryNodeRef;
    unsigned int _scopeOptions;
    NSArray *_selectedScopeLocationNodes;
    NSMutableArray *_selectableScopeLocationNodes;
    void *_comparator;
    BOOL _isGatheringResults;
    BOOL _loadedQueryDictionariesFromSavedQuery;
}

+ (BOOL)supportsMutableFBENode;
+ (id)navNodeWithSimpleQueryString:(id)fp8 searchScopeNode:(id)fp12;
- (id)initWithFBENode:(struct OpaqueNodeRef *)fp8;
- (id)initWithSimpleQueryString:(id)fp8 searchScopeNode:(id)fp12;
- (id)initWithSavedQueryNode:(struct OpaqueNodeRef *)fp8;
- (BOOL)isEditableQuery;
- (BOOL)isSearchable;
- (void)dealloc;
- (void)finalize;
- (void)_postQueryFinishedNotification;
- (BOOL)isGatheringResults;
- (void)_postQueryStartedNotification;
- (void)didPostNotificationForNodeEventKind:(unsigned long)fp8 notification:(id)fp12;
- (void)setFBENode:(struct OpaqueNodeRef *)fp8;
- (void)flushAllCaches;
- (void)_lazyLoadQueryDictionariesFromSavedQuery;
- (void)updateQueryNode:(BOOL)fp8;
- (void)resetQueryForChangedAttributes:(BOOL)fp8;
- (void)createMDQueryNodeRefIfNecessary;
- (id)children;
- (void)noteQueryAttributesChanged;
- (void)_updateFormattedQueryString;
- (void)setSimpleQueryString:(id)fp8;
- (id)simpleQueryString;
- (void)appendSelectableScopeLocationNode:(id)fp8;
- (id)selectableScopeLocationNodes;
- (id)selectedScopeLocationNodes;
- (void)setSelectedScopeLocationNodes:(id)fp8;
- (BOOL)sortsChildrenEfficiently;
- (void)setQueryHitResultsFilterUTIs:(id)fp8;
- (id)queryHitResultsFilterUTIs;
- (void)setSortDescriptors:(id)fp8;
- (id)sortDescriptors;
- (void)startQuery;
- (void)cancelQuery;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (struct OpaqueIconRef *)copyIcon;
- (id)displayName;
- (id)name;
- (id)description;
- (struct OpaqueNodeRef *)fbeQueryNode;
- (BOOL)hasBeenStarted;
- (BOOL)isAlias;
- (id)path;
- (BOOL)isContainer;
- (BOOL)isQuery;
- (BOOL)isVisible;

@end

@interface NSNavFBENetworkNode : NSNavFBENode
{
}

+ (id)networkNode;
- (BOOL)isVisible;
- (id)parent;

@end

@interface NSNavFBETopLevelNode : NSNavFBENode
{
}

+ (id)topLevelNode;
- (id)children;
- (id)path;
- (id)finderPath;

@end

@interface NSNavFBENode : NSNavNode
{
    struct OpaqueNodeRef *_fbeNode;
}

+ (void)initialize;
+ (Class)previewHelperClass;
+ (id)nodeWithFBENode:(struct OpaqueNodeRef *)fp8;
+ (id)topLevelNode;
+ (id)sidebarContainerNodes;
+ (id)userHomeNode;
+ (id)iDiskNode;
+ (id)findSidebarNodeForNode:(id)fp8;
+ (id)nodeWithPath:(id)fp8;
+ (id)navNodeWithSimpleQueryString:(id)fp8 searchScopeNode:(id)fp12;
+ (BOOL)supportsMutableFBENode;
+ (struct OpaqueEventQueue *)eventQueue;
+ (void)_postNotificationForEvent:(unsigned long)fp8 notificationName:(id)fp12 parent:(id)fp16 child:(id)fp20 fbeProperty:(int)fp24;
+ (void)_postNotificationForEvent:(unsigned long)fp8 notificationName:(id)fp12 parent:(id)fp16 child:(id)fp20;
+ (void)_postNotificationForEvent:(unsigned long)fp8 notificationName:(id)fp12 parent:(id)fp16;
+ (void)_processNotifications:(id)fp8;
+ (void)_reallyProcessNotifications:(id)fp8;
- (id)initWithFBENode:(struct OpaqueNodeRef *)fp8;
- (void)didPostNotificationForNodeEventKind:(unsigned long)fp8 notification:(id)fp12;
- (void)sync;
- (BOOL)_registeredForChildNotifications;
- (void)_setRegisteredForChildNotifications:(BOOL)fp8;
- (void)_registerForChildChangedNotifications;
- (void)_unregisterForChildChangedNotifications;
- (void)setFBENode:(struct OpaqueNodeRef *)fp8;
- (void)flushAllCaches;
- (id)children;
- (BOOL)isVolumeLocal;
- (BOOL)canVolumeBeUnmounted;
- (BOOL)isVolumeEjectable;
- (BOOL)ejectVolume;
- (id)initWithPath:(id)fp8 logonOK:(BOOL)fp12;
- (id)initWithPath:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (struct OpaqueNodeRef *)fbeNode;
- (BOOL)isValid;
- (id)description;
- (id)parent;
- (id)getNodeAsInfoNode:(BOOL)fp8;
- (id)getNodeAsResolvedNode:(BOOL)fp8;
- (id)getNodeAsDeepResolvedNode:(BOOL)fp8;
- (void)registerForPropertyChangedNotifications;
- (void)unregisterForPropertyChangedNotifications;
- (BOOL)isContainer;
- (id)displayName;
- (id)searchScopeDisplayName;
- (id)path;
- (id)name;
- (BOOL)isVisible;
- (BOOL)isPackage;
- (BOOL)isAlias;
- (BOOL)isVolume;
- (BOOL)isExtensionHidden;
- (BOOL)isDisconnectedMountPoint;
- (BOOL)isUnauthenticatedMountPoint;
- (BOOL)eject;
- (BOOL)isEjectable;
- (struct OpaqueIconRef *)copyIcon;
- (struct OpaqueIconRef *)copyPreviewIcon;
- (void)_calculatePreviewThumbnailImage:(id *)fp8 allowComputingFromFullImage:(BOOL)fp12;
- (id)fastGetPreviewThumbnailImage;
- (id)previewThumbnailImage;
- (id)modDate;
- (id)creationDate;
- (long long)physicalSize;
- (long long)logicalSize;
- (long long)capacity;
- (long long)freeSpace;
- (long long)usedSize;
- (id)kind;
- (id)fileType;
- (id)utiAsString;
- (id)shortVersion;
- (id)comment;
- (short)_labelColorIndex;
- (id)_labelPatternColorForLabelIndex:(short)fp8;
- (id)labelColor;
- (id)finderPath;

@end

@interface NSNavNode : NSObject
{
    struct __nFlags _nFlags;
}

+ (void)initialize;
+ (id)navNodeWithSimpleQueryString:(id)fp8 searchScopeNode:(id)fp12;
+ (Class)previewHelperClass;
- (BOOL)isValid;
- (BOOL)isQuery;
- (BOOL)isSearchable;
- (id)searchScopeDisplayName;
- (id)utiAsString;
- (id)getNodeAsInfoNode:(BOOL)fp8;
- (id)getNodeAsContainerNodeForBrowsing:(BOOL)fp8;
- (id)getNodeAsResolvedNode:(BOOL)fp8;
- (id)getNodeAsDeepResolvedNode:(BOOL)fp8;
- (void)retainCaches;
- (void)releaseCaches;
- (void)dealloc;
- (void)finalize;
- (void)flushAllCaches;
- (id)description;
- (BOOL)isDescendantOfNode:(id)fp8;
- (id)ancestorsStartingWith:(id)fp8;
- (id)children;
- (BOOL)sortsChildrenEfficiently;
- (void)setQueryHitResultsFilterUTIs:(id)fp8;
- (id)queryHitResultsFilterUTIs;
- (void)setSortDescriptors:(id)fp8;
- (id)sortDescriptors;
- (id)fastGetPreviewThumbnailImage;
- (id)previewThumbnailImage;
- (void)registerForPropertyChangedNotifications;
- (void)unregisterForPropertyChangedNotifications;

@end

@interface NSOpenPanel : NSSavePanel
{
    char _reservedOpenPanel[4];
    void *_privateOpenPanel;
}

+ (id)openPanel;
- (void)_initSaveMode;
- (id)URLs;
- (id)filenames;
- (BOOL)resolvesAliases;
- (void)setResolvesAliases:(BOOL)fp8;
- (BOOL)canChooseDirectories;
- (void)setCanChooseDirectories:(BOOL)fp8;
- (BOOL)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(BOOL)fp8;
- (BOOL)canChooseFiles;
- (void)setCanChooseFiles:(BOOL)fp8;
- (BOOL)_blocksActionWhenModal:(SEL)fp8;

@end

@interface NSNavVirtualNode : NSNavNode
{
    NSNavNode *_parent;
    NSString *_name;
    NSString *_displayName;
    NSString *_searchScopeDisplayName;
    NSString *_path;
    NSNavNode *_originalNode;
    struct OpaqueIconRef *_iconRef;
    BOOL _isContainer;
    BOOL _isVisible;
    BOOL _isPackage;
    BOOL _isAlias;
    BOOL _isVolume;
    BOOL _isExtensionHidden;
    BOOL _isDisconnectedMountPoint;
    BOOL _isUnauthenticatedMountPoint;
    NSDate *_modDate;
    NSDate *_creationDate;
    long long _physicalSize;
    long long _logicalSize;
    long long _usedSize;
    NSString *_kind;
    NSString *_fileType;
    NSString *_shortVersion;
    NSString *_comment;
    NSMutableArray *_children;
}

+ (id)userHomeNode;
+ (id)node;
+ (id)containerNode;
+ (id)containerNodeWithChildren:(id)fp8;
- (id)init;
- (id)initWithPath:(id)fp8 logonOK:(BOOL)fp12;
- (id)initWithPath:(id)fp8;
- (id)initWithQueryString:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)addChildWithPath:(id)fp8;
- (void)addChild:(id)fp8;
- (void)addChildren:(id)fp8;
- (id)parent;
- (void)setParent:(id)fp8;
- (id)name;
- (void)setName:(id)fp8;
- (id)displayName;
- (void)setDisplayName:(id)fp8;
- (id)searchScopeDisplayName;
- (void)setSearchScopeDisplayName:(id)fp8;
- (id)path;
- (void)setPath:(id)fp8;
- (id)getNodeAsResolvedNode:(BOOL)fp8;
- (id)getNodeAsDeepResolvedNode:(BOOL)fp8;
- (void)setOriginalNode:(id)fp8;
- (struct OpaqueIconRef *)copyIcon;
- (struct OpaqueIconRef *)copyPreviewIcon;
- (id)previewThumbnailImage;
- (void)setIconRef:(struct OpaqueIconRef *)fp8;
- (void)sync;
- (BOOL)isContainer;
- (void)setIsContainer:(BOOL)fp8;
- (BOOL)isVisible;
- (void)setIsVisible:(BOOL)fp8;
- (BOOL)isPackage;
- (void)setIsPackage:(BOOL)fp8;
- (BOOL)isAlias;
- (void)setIsAlias:(BOOL)fp8;
- (BOOL)isVolume;
- (void)setIsVolume:(BOOL)fp8;
- (BOOL)isExtensionHidden;
- (void)setIsExtensionHidden:(BOOL)fp8;
- (BOOL)isDisconnectedMountPoint;
- (void)setIsDisconnectedMountPoint:(BOOL)fp8;
- (BOOL)isUnauthenticatedMountPoint;
- (void)setIsUnauthenticatedMountPoint:(BOOL)fp8;
- (BOOL)eject;
- (BOOL)isEjectable;
- (id)modDate;
- (void)setModDate:(id)fp8;
- (id)creationDate;
- (void)setCreationDate:(id)fp8;
- (long long)physicalSize;
- (void)setPhysicalSize:(long long)fp8;
- (long long)logicalSize;
- (void)setLogicalSize:(long long)fp8;
- (long long)usedSize;
- (void)setUsedSize:(long long)fp8;
- (id)kind;
- (void)setKind:(id)fp8;
- (id)fileType;
- (void)setFileType:(id)fp8;
- (id)shortVersion;
- (void)setShortVersion:(id)fp8;
- (id)comment;
- (void)setComment:(id)fp8;
- (id)labelColor;
- (id)children;
- (void)setChildren:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSSavePanelNameFieldCell : NSTextFieldCell
{
}

- (BOOL)wantsNotificationForMarkedText;

@end

@interface NSMoveHelper (NSSavePanel)
- (void)_moveParent:(id)fp8 andExpandPanel:(id)fp12 toFrame:(struct _NSRect)fp16;
- (void)_collapsePanel:(id)fp8 andMoveParent:(id)fp12 toFrame:(struct _NSRect)fp16;
@end

@interface NSSavePanel (NSSavePanelLayout)
+ (struct _NSSize)_minExpandedFrameSize;
+ (struct _NSSize)_minContentRectSize;
- (void)_adjustMinContentSizeForMinFrameSize:(struct _NSSize)fp8;
- (float)_computeMinWidthForSimpleSavePanel:(BOOL)fp8;
- (float)_computeMinHeightForSimpleSavePanel:(BOOL)fp8;
- (struct _NSSize)_minExpandedFrameSize;
- (struct _NSSize)_minNonExpandedFrameSize;
- (void)saveFrameUsingName:(id)fp8;
- (void)setContentView:(id)fp8;
- (void)_hideMDPartsIfNecessary;
- (void)set_savePaneAuxPartsContainer:(id)fp8;
- (void)_initContentView;
- (void)_configureMessageView;
- (void)_configureSavePane;
- (void)_configureAccessoryView;
- (void)_configureDirectoryPopup;
- (id)lazyGetChildrenForNodeWithIdentifier:(id)fp8;
- (void)_configureBottomControls;
- (void)_fixupKeyboardLoop;
- (void)_adjustPanelForMinWidth;
- (void)accessoryViewContainerContentFrameDidChange:(id)fp8;
- (void)_layoutViewsVerticallyAndResize;
- (void)_centerOnScreen;
- (void)_resizeKeepingPanelOnScreen:(struct _NSRect)fp8 expand:(BOOL)fp24;
@end

@interface NSSavePanel (NSSavePanelRuntime)
- (void)_saveCurrentPanelState:(int)fp8;
- (void)_configureForDirectory:(id)fp8 name:(id)fp12;
- (int)runModalForDirectory:(id)fp8 file:(id)fp12 types:(id)fp16;
- (void)beginSheetForDirectory:(id)fp8 file:(id)fp12 types:(id)fp16 modalForWindow:(id)fp20 modalDelegate:(id)fp24 didEndSelector:(SEL)fp28 contextInfo:(void *)fp32;
- (void)beginForDirectory:(id)fp8 file:(id)fp12 types:(id)fp16 modelessDelegate:(id)fp20 didEndSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (void)_didEndSheet:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_dismissModeless:(int)fp8;
- (int)runModalForDirectory:(id)fp8 file:(id)fp12;
- (int)runModal;
- (void)beginSheetForDirectory:(id)fp8 file:(id)fp12 modalForWindow:(id)fp16 modalDelegate:(id)fp20 didEndSelector:(SEL)fp24 contextInfo:(void *)fp28;
- (int)runModalForTypes:(id)fp8;
- (id)_nameWithLooseRequiredExtensionCheck:(id)fp8;
- (id)_nameWithStrictRequiredExtensionCheck:(id)fp8;
- (id)_nameWithRequiredExtensionCheck:(id)fp8;
- (BOOL)_legalNameCheck:(id)fp8;
- (BOOL)_overwriteExistingFileCheck:(id)fp8;
- (BOOL)_okForSaveMode;
- (BOOL)_okForOpenMode;
- (BOOL)_isModal;
- (void)ok:(id)fp8;
- (void)cancel:(id)fp8;
@end

@interface NSWorkspace (NSSavePanelRuntime)
- (void)_sendFileSystemChangedNotificationForSavePanelInfo:(id)fp8;
@end

@interface NSNavNodePopUpButton : NSPopUpButton
{
    NSMutableDictionary *_nodeInfoTable;
    NSMutableArray *_groupIdentifiers;
    BOOL _inMenuTrackingMode;
    BOOL _otherMenuContentsDirty;
    BOOL _otherMenuIconsDirty;
    BOOL _firstItemDirty;
}

- (Class)cellClass;
- (void)_commonInitNavNodePopUpButton;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_setContentsDirtyForNodeWithIdentifier:(id)fp8;
- (void)appendDisplayedNode:(id)fp8 identifier:(id)fp12 title:(id)fp16 displaysChildren:(BOOL)fp20;
- (void)replaceNodeWithIdentifier:(id)fp8 withNode:(id)fp12;
- (void)replaceNodeWithIdentifier:(id)fp8 withDataFromDelegate:(id)fp12;
- (int)indexOfItemWithRepresentedNavNode:(id)fp8;
- (void)_handleChildChanged:(id)fp8;
- (void)startObservingNode:(id)fp8;
- (void)stopObservingNode;
- (id)selectedNavNode;
- (BOOL)_lastItemIsNonSeparator;
- (void)_updateMenuItemIcon:(id)fp8;
- (id)_keyEquivalentForNode:(id)fp8;
- (id)_newIconlessMenuItemForNavNode:(id)fp8;
- (void)_popUpItemAction:(id)fp8;
- (id)_blockAndGetChildrenOfNavNode:(id)fp8;
- (id)_nodesToDisplayForNodeInfo:(id)fp8;
- (void)_appendNodes:(id)fp8 forNodeInfo:(id)fp12 addSeparator:(BOOL)fp16;
- (void)_loadIconlessMenuContentsIfNecessary;
- (void)_loadMenuItemIconsIfNecessary;
- (BOOL)_keyEquivalentsAreActive;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (void)willPopUpNotification:(id)fp8;
- (void)doneTrackingMenu:(id)fp8;
- (void)_setContentsDirty:(BOOL)fp8;
- (void)_updateFirstItemIfNecessary;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSNavNodePopUpButtonCell : NSPopUpButtonCell
{
}

- (int)lineBreakMode;

@end

@interface _NSNavNodeMenuItem : NSMenuItem
{
    BOOL _representedObjectIsObservedNode;
}

- (id)initWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16 representedNavNode:(id)fp20;
- (void)_setIconRef:(struct OpaqueIconRef *)fp8;
- (void)startObservingNode;
- (void)stopObservingNode;
- (void)setRepresentedObject:(id)fp8;
- (void)dealloc;
- (void)finalize;

@end

@interface NSArray (_NSBinderKeyValueCodingAdditions)
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 ofObjectAtIndex:(unsigned int)fp20;
@end

@interface NSObject (_NSBinderKeyValueCodingAdditions)
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
@end

@interface _NSBindingAdaptor : NSObject
{
    NSMutableArray *_binders;
    id _editableBinder;
    id _referenceBinder;
    id _contentBinder;
}

+ (void)copyBindingsFromObject:(id)fp8 toObject:(id)fp12;
+ (id)returnDisconnectedBindingsOfObject:(id)fp8;
+ (void)reconnectBindings:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)addBinder:(id)fp8;
- (void)removeBinder:(id)fp8;
- (id)binders;
- (id)editableBinder;
- (id)referenceBinder;
- (id)contentBinder;
- (void)_discardEditingForAllBinders;
- (void)_objectDidTriggerAction:(id)fp8 bindingAdaptor:(id)fp12;
- (void)objectDidTriggerDoubleClickAction:(id)fp8;
- (void)objectDidTriggerAction:(id)fp8;
- (void)_editor:(id)fp8 didChangeEditingState:(BOOL)fp12 bindingAdaptor:(id)fp16;
- (void)editorDidBeginEditing:(id)fp8;
- (void)editorDidEndEditing:(id)fp8;
- (BOOL)_handleValidationError:(id)fp8 description:(id)fp12 inEditor:(id)fp16 errorUserInterfaceHandled:(char *)fp20 bindingAdaptor:(id)fp24;
- (BOOL)handleValidationError:(id)fp8 description:(id)fp12 inEditor:(id)fp16 errorUserInterfaceHandled:(char *)fp20;
- (BOOL)_validateAndCommitValueInEditor:(id)fp8 editingIsEnding:(BOOL)fp12 errorUserInterfaceHandled:(char *)fp16 bindingAdaptor:(id)fp20;
- (BOOL)validateAndCommitValueInEditor:(id)fp8 editingIsEnding:(BOOL)fp12 errorUserInterfaceHandled:(char *)fp16;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (void)outlineView:(id)fp8 willDisplayOutlineCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)browser:(id)fp8 selectRow:(int)fp12 inColumn:(int)fp16;
- (void)browser:(id)fp8 createRowsForColumn:(int)fp12 inMatrix:(id)fp16;
- (void)browser:(id)fp8 willDisplayCell:(id)fp12 atRow:(int)fp16 column:(int)fp20;
- (void)window:(id)fp8 didChangeToVisibleState:(BOOL)fp12;
- (void)windowDidResize:(id)fp8;
- (void)drawer:(id)fp8 didChangeToState:(BOOL)fp12;
- (int)numberOfRowsInTableView:(id)fp8;
- (BOOL)tableView:(id)fp8 shouldEditTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 didChangeToSortDescriptors:(id)fp12;
- (void)tableView:(id)fp8 didChangeToSelectedRowIndexes:(id)fp12;
- (void)tableView:(id)fp8 updateVisibleRowInformation:(struct _NSRange)fp12;
- (void)outlineColumn:(id)fp8 willDisplayOutlineCell:(id)fp12 row:(int)fp16;
- (void)outlineColumn:(id)fp8 willDisplayCell:(id)fp12 row:(int)fp16;
- (void)tableColumn:(id)fp8 willDisplayCell:(id)fp12 row:(int)fp16;
- (void)tableColumn:(id)fp8 didChangeToWidth:(float)fp12;
- (id)defaultSortDescriptorPrototypeForTableColumn:(id)fp8;
- (void)searchFieldCellOrControlDidClearRecents:(id)fp8;
- (id)updateInvalidatedObjectValue:(id)fp8 forObject:(id)fp12;
- (id)updateInvalidatedFont:(id)fp8 forObject:(id)fp12;
- (id)updateInvalidatedTextColor:(id)fp8 forObject:(id)fp12;
- (id)searchMenuTemplate;
- (BOOL)enabledStateForMenuItem:(id)fp8;
- (void)controller:(id)fp8 didChangeToSelectionIndexes:(id)fp12;
- (void)controller:(id)fp8 didChangeToSelectionIndexPaths:(id)fp12;
- (void)controller:(id)fp8 didChangeToSortDescriptors:(id)fp12;
- (void)controller:(id)fp8 didChangeToFilterPredicate:(id)fp12;

@end

@interface NSObject (_NSBindingAdaptorAccess)
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;
- (void)_releaseBindingAdaptor;
@end

@interface _NSModelObservingTracker : NSObject
{
    id _modelObserver;
    NSArray *_availableModelAndProxyKeys;
    NSArray *_indexReferenceModelObjectArray;
    NSMutableIndexSet *_observedModelIndexData;
    void *_observedModelObjectsData;
    struct __modelObservingTrackerFlags _modelObservingTrackerFlags;
    NSMutableDictionary *_observedModelKeyPathInfoTable;
    NSMutableArray *_modelAndProxyKeysObserved;
}

- (id)initWithModelObserver:(id)fp8 availableModelAndProxyKeys:(id)fp12;
- (void)dealloc;
- (void)finalize;
- (void)setIndexReferenceModelObjectArray:(id)fp8 clearAllModelObjectObserving:(BOOL)fp12;
- (id)indexReferenceModelObjectArray;
- (void)replaceIndexReferenceModelObjectArrayWithEqualCopy:(id)fp8;
- (void)updateReferenceIndexesToReflectInsertionAtIndex:(unsigned int)fp8;
- (void)updateReferenceIndexesToReflectInsertionAtIndexes:(id)fp8;
- (void)updateReferenceIndexesToReflectRemovalAtIndex:(unsigned int)fp8;
- (void)updateReferenceIndexesToReflectRemovalAtIndexes:(id)fp8;
- (void)_registerOrUnregister:(BOOL)fp8 observerNotificationsForKeyPath:(id)fp12 ofModelObject:(id)fp16;
- (void)_registerOrUnregister:(BOOL)fp8 observerNotificationsForModelObject:(id)fp12;
- (void)_registerOrUnregister:(BOOL)fp8 observerNotificationsForKeyPath:(id)fp12;
- (void)_startObservingModelObject:(id)fp8;
- (void)_stopObservingModelObject:(id)fp8;
- (void)startObservingModelObjectAtReferenceIndex:(unsigned int)fp8;
- (void)stopObservingModelObjectAtReferenceIndex:(unsigned int)fp8;
- (void)startObservingModelObjectsAtReferenceIndexes:(id)fp8;
- (void)stopObservingModelObjectsAtReferenceIndexes:(id)fp8;
- (void)setObservingToModelObjectsRange:(struct _NSRange)fp8;
- (void)startObservingModelObject:(id)fp8;
- (void)stopObservingModelObject:(id)fp8;
- (void)clearAllModelObjectObserving;
- (void)_registerObservedModelKeyPath:(id)fp8;
- (void)_unregisterObservedModelKeyPath:(id)fp8;
- (void)analyzeKeyPath:(id)fp8 registerOrUnregister:(BOOL)fp12;
- (id)modelAndProxyKeysObserved;
- (void)_logObservingInfo;

@end

@interface _NSExpectedObservingInfo : NSObject
{
    unsigned int _suppressAllNotificationCounter;
    id _allSuppressedObject;
    id _specificSuppressedObject;
    NSString *_specificSuppressedKeyPath;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)suppressAllNotifications;
- (void)unsuppressAllNotifications;
- (void)suppressAllNotificationsFromObject:(id)fp8;
- (void)unsuppressAllNotificationsFromObject:(id)fp8;
- (void)suppressSpecificNotificationFromObject:(id)fp8 keyPath:(id)fp12;
- (void)unsuppressSpecificNotificationFromObject:(id)fp8 keyPath:(id)fp12;
- (BOOL)shouldSuppressNotificationFromObject:(id)fp8 keyPath:(id)fp12;
- (id)description;

@end

@interface _NSStringAndClassInfo : NSObject <NSCopying>
{
    NSString *_registryString;
    Class _objectClass;
    unsigned int _registryStringHash;
    unsigned int _objectClassHash;
    unsigned int _hash;
}

- (id)initWithRegistryString:(id)fp8 andObjectClass:(Class)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (id)description;
- (void)setRegistryString:(id)fp8;
- (void)setObjectClass:(Class)fp8;

@end

@interface _NSClassAndClassInfo : NSObject <NSCopying>
{
    Class _registryClass;
    Class _objectClass;
    unsigned int _registryClassHash;
    unsigned int _objectClassHash;
    unsigned int _hash;
}

- (id)initWithRegistryClass:(Class)fp8 andObjectClass:(Class)fp12;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
- (id)description;
- (void)setRegistryClass:(Class)fp8;
- (void)setObjectClass:(Class)fp8;

@end

@interface NSPanel (NSErrorPresentation)
- (id)presentationWindowForError:(id)fp8 originatedInWindow:(id)fp12;
@end

@interface NSResponder (NSErrorPresentationAdditions)
- (id)presentationWindowForError:(id)fp8 originatedInWindow:(id)fp12;
@end

@interface NSObject (NSPlaceholders)
+ (void)_registerObjectClass:(Class)fp8 placeholder:(id)fp12 binding:(id)fp16;
+ (void)_registerDefaultPlaceholders;
+ (id)_stateMarkerForValue:(id)fp8;
+ (void)setDefaultPlaceholder:(id)fp8 forMarker:(id)fp12 withBinding:(id)fp16;
+ (id)defaultPlaceholderForMarker:(id)fp8 withBinding:(id)fp12;
@end

@interface NSObject (_NSBindingCreationSupport)
- (void)_cleanupBindingsWithExistingNibConnectors:(id)fp8 exception:(id)fp12;
- (void)_addOptionValue:(id)fp8 toArray:(id)fp12 withKey:(id)fp16 typeString:(id)fp20;
- (void)_addPlaceholderOptionValue:(id)fp8 isDefault:(BOOL)fp12 toArray:(id)fp16 withKey:(id)fp20 binder:(id)fp24 binding:(id)fp28;
- (id)_suggestedControllerKeyForController:(id)fp8 binding:(id)fp12;
- (void)_placeSuggestionsInDictionary:(id)fp8 acceptableControllers:(id)fp12 boundBinders:(id)fp16 binder:(id)fp20 binding:(id)fp24;
- (id)_bindingInformationWithExistingNibConnectors:(id)fp8 availableControllerChoices:(id)fp12;
- (void)_bind:(id)fp8 toController:(id)fp12 withKeyPath:(id)fp16 valueTransformerName:(id)fp20 options:(id)fp24 existingNibConnectors:(id)fp28 connectorsToRemove:(id)fp32 connectorsToAdd:(id)fp36;
- (void)_unbind:(id)fp8 existingNibConnectors:(id)fp12 connectorsToRemove:(id)fp16 connectorsToAdd:(id)fp20;
@end

@interface NSObject (NSKeyValueBindingCreation)
+ (id)_guaranteeStorageInDictionary:(id)fp8 addBinding:(id)fp12;
+ (void)_concealBinding:(id)fp8;
+ (void)_exposeBinding:(id)fp8 valueClass:(Class)fp12;
+ (void)exposeBinding:(id)fp8;
+ (id)_exposedBindings;
- (id)exposedBindings;
- (id)_binderForBinding:(id)fp8 withBinders:(id)fp12 createAutoreleasedInstanceIfNotFound:(BOOL)fp16;
- (Class)_binderClassForBinding:(id)fp8 withBinders:(id)fp12;
- (id)_binderWithClass:(Class)fp8 withBinders:(id)fp12 createAutoreleasedInstanceIfNotFound:(BOOL)fp16;
- (Class)valueClassForBinding:(id)fp8;
- (void)bind:(id)fp8 toObject:(id)fp12 withKeyPath:(id)fp16 options:(id)fp20;
- (void)unbind:(id)fp8;
- (id)infoForBinding:(id)fp8;
@end

@interface NSObject (_NSBindingCreationDelegateRegistration)
+ (void)_setBindingCreationDelegate:(id)fp8;
+ (id)_bindingCreationDelegate;
@end

@interface NSNibBindingConnector : NSNibConnector <NSCoding>
{
    NSString *_binding;
    NSString *_keyPath;
    NSDictionary *_options;
    struct __nibBindingConnectorFlags _nibBindingConnectorFlags;
    NSNibBindingConnector *_previousConnector;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)_updateForVersion:(int)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_updateLabel;
- (void)setBinding:(id)fp8;
- (id)binding;
- (void)setKeyPath:(id)fp8;
- (id)keyPath;
- (void)setOptions:(id)fp8;
- (id)options;
- (void)_setPreviousNibBindingConnector:(id)fp8;
- (id)_previousNibBindingConnector;
- (void)replaceObject:(id)fp8 withObject:(id)fp12;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (id)description;

@end

@interface NSBinder : NSObject <NSCoding>
{
    void *_reserved;
    void *_reserved2;
    id _object;
    NSMutableArray *_bindingInfos;
    struct __binderFlags _binderFlags;
    unsigned long long _bindingsBoundMask;
    id _plugin;
    id _expectedObservingInfo;
}

+ (void)load;
+ (id)_prepareAlertError:(id)fp8 responder:(id *)fp12 responderCandidate:(id)fp16 window:(id *)fp20 recoveryAttempter:(id)fp24;
+ (void)_presentAlertPanelForError:(id)fp8 responder:(id)fp12 responderCandidate:(id)fp16;
+ (void)_presentSheetForError:(id)fp8 responder:(id)fp12 responderCandidate:(id)fp16 delegate:(id)fp20 callback:(SEL)fp24 callbackContextInfo:(void *)fp28;
+ (void)_didPresentModalAlert:(BOOL)fp8 contextInfo:(CDAnonymousStruct19 *)fp12;
+ (struct __CFArray *)_allBinderClasses;
+ (id)binderClassesForObject:(id)fp8;
+ (id)_pluginProtocol;
+ (Class)_pluginClassWithObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)_enumeratedBindings:(id)fp8 storage:(id *)fp12 number:(unsigned int)fp16 numberFirstBinding:(BOOL)fp20 maxNumber:(unsigned int)fp24;
+ (id)bindingsForObject:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (BOOL)_autoCreateBinderForObject:(id)fp8 withController:(id)fp12;
- (void)_init;
- (id)_initWithObjectNoExceptions:(id)fp8;
- (id)initWithObject:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (id)copyToObject:(id)fp8;
- (void)_updatePlaceholdersForBindingInfo:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_dealloc;
- (void)dealloc;
- (void)finalize;
- (void)_setObject:(id)fp8;
- (id)object;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)_plugin;
- (id)availableBindings;
- (BOOL)_testBinderConfiguration:(id)fp8 repairBindings:(BOOL)fp12;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (void)_setOptions:(id)fp8 withBindingInfo:(id)fp12;
- (void)_setOptions:(id)fp8 forBinding:(id)fp12;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (BOOL)canAddBinding:(id)fp8 toController:(id)fp12;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)bindingRunsAlerts:(id)fp8;
- (BOOL)isBindingKeyless:(id)fp8;
- (BOOL)isBindingKeyOptional:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (BOOL)canApplyValueTransformer:(id)fp8 toBinding:(id)fp12;
- (void)_addBinding:(id)fp8 toController:(id)fp12 withKeyPath:(id)fp16 valueTransformerName:(id)fp20 options:(id)fp24;
- (void)addBinding:(id)fp8 toController:(id)fp12 withKeyPath:(id)fp16 valueTransformer:(id)fp20 options:(id)fp24;
- (unsigned int)_bindingInfoIndexForBinding:(id)fp8;
- (id)_bindingInfoForBinding:(id)fp8;
- (void)_removeBinding:(id)fp8;
- (void)_removeBinding:(id)fp8 byReplacingWithRemainingBindingsInArray:(id)fp12;
- (void)removeBinding:(id)fp8;
- (id)_bindingInfos;
- (id)controllerForBinding:(id)fp8;
- (id)keyPathForBinding:(id)fp8;
- (id)valueTransformerForBinding:(id)fp8;
- (id)_valueTransformerNameForBinding:(id)fp8;
- (void)_setController:(id)fp8 forBinding:(id)fp12;
- (void)setPlaceholder:(id)fp8 forMarker:(id)fp12 withBinding:(id)fp16;
- (id)placeholderForMarker:(id)fp8 withBinding:(id)fp12;
- (void)setRaisesForNotApplicableKeys:(BOOL)fp8 withBinding:(id)fp12;
- (BOOL)raisesForNotApplicableKeysWithBinding:(id)fp8;
- (void)setValidatesImmediately:(BOOL)fp8 withBinding:(id)fp12;
- (BOOL)validatesImmediatelyWithBinding:(id)fp8;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)fp8 withBinding:(id)fp12;
- (BOOL)alwaysPresentsApplicationModalAlertsWithBinding:(id)fp8;
- (BOOL)_isBindingEstablished:(id)fp8;
- (BOOL)_isAnyBindingInMaskBound:(unsigned long long)fp8;
- (BOOL)_isKeyPathBound:(id)fp8;
- (BOOL)_observeKeyPathForRelatedBinder:(id)fp8 registerOrUnregister:(BOOL)fp12;
- (BOOL)_observeKeyPathForBindingInfo:(id)fp8 registerOrUnregister:(BOOL)fp12;
- (void)_updateObservingRegistration:(BOOL)fp8;
- (id)_referenceBinding;
- (id)_referenceBinderController;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)fp8;
- (void)_updateDependenciesWithPeerBinders:(id)fp8;
- (void)_performConnectionEstablishedRefresh;
- (void)_connectionWasEstablished;
- (BOOL)_handleObservingRefresh;
- (void)establishConnection;
- (void)_connectionWasBroken;
- (void)_cleanUpConnectionWithSynchronizePeerBinders:(BOOL)fp8;
- (void)breakConnection;
- (void)releaseConnectionWithSynchronizePeerBinders:(BOOL)fp8;
- (BOOL)isConnected;
- (void)_prepareIndirectKeyValueCodingCallWithPartialControllerKey:(id)fp8 controller:(id)fp12;
- (id)_applyValueTransformerToValue:(id)fp8 forBindingInfo:(id)fp12 reverse:(BOOL)fp16;
- (id)_resolveMarkerToPlaceholder:(id)fp8 forBindingInfo:(id)fp12 allowPluginOverride:(BOOL)fp16;
- (id)_valueForKeyPath:(id)fp8 ofObject:(id)fp12 mode:(struct __NSKeyValueCodingControllerModeType)fp16 raisesForNotApplicableKeys:(BOOL)fp28;
- (id)_mutableArrayValueForKeyPath:(id)fp8 ofObject:(id)fp12 atIndex:(unsigned int)fp16 raisesForNotApplicableKeys:(BOOL)fp20;
- (id)_mutableSetValueForKeyPath:(id)fp8 ofObject:(id)fp12 atIndex:(unsigned int)fp16 raisesForNotApplicableKeys:(BOOL)fp20;
- (BOOL)_setValue:(id *)fp8 forKeyPath:(id)fp12 ofObject:(id)fp16 mode:(struct __NSKeyValueCodingControllerModeType)fp20 validateImmediately:(BOOL)fp32 raisesForNotApplicableKeys:(BOOL)fp36 error:(id *)fp40;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 ofObject:(id)fp20 mode:(struct __NSKeyValueCodingControllerModeType)fp24 raisesForNotApplicableKeys:(BOOL)fp36;
- (id)applyValueTransformerToValue:(id)fp8 forBinding:(id)fp12 reverse:(BOOL)fp16;
- (id)resolveMarkerToPlaceholder:(id)fp8 binding:(id)fp12;
- (id)valueForBinding:(id)fp8 resolveMarkersToPlaceholders:(BOOL)fp12;
- (id)mutableArrayValueForBinding:(id)fp8 resolveMarkersToPlaceholders:(BOOL)fp12;
- (id)mutableSetValueForBinding:(id)fp8 resolveMarkersToPlaceholders:(BOOL)fp12;
- (BOOL)setValue:(id *)fp8 forBinding:(id)fp12 error:(id *)fp16;
- (BOOL)invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16 error:(id *)fp20;
- (id)_objectInTree:(id)fp8 atIndexPath:(id)fp12;
- (BOOL)invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16 atIndexPath:(id)fp20 error:(id *)fp24;
- (BOOL)setValue:(id *)fp8 forBinding:(id)fp12 atIndexPath:(id)fp16 error:(id *)fp20;
- (id)valueForBinding:(id)fp8 atIndexPath:(id)fp12 resolveMarkersToPlaceholders:(BOOL)fp16;
- (id)valueForBinding:(id)fp8 atIndex:(unsigned int)fp12 resolveMarkersToPlaceholders:(BOOL)fp16;
- (id)mutableArrayValueForBinding:(id)fp8 atIndex:(unsigned int)fp12 resolveMarkersToPlaceholders:(BOOL)fp16;
- (id)mutableSetValueForBinding:(id)fp8 atIndex:(unsigned int)fp12 resolveMarkersToPlaceholders:(BOOL)fp16;
- (BOOL)setValue:(id *)fp8 forBinding:(id)fp12 atIndex:(unsigned int)fp16 error:(id *)fp20;
- (BOOL)invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16 atIndex:(unsigned int)fp20 error:(id *)fp24;
- (void)_discardEditingOfView:(id)fp8;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)fp8 didCommitSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (BOOL)isEditing;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)_presentModalAlertWithError:(id)fp8 responder:(id)fp12 relatedToBinding:(id)fp16;
- (void)_logError:(id)fp8 fallbackMessage:(id)fp12 relatedToBinding:(id)fp16;
- (id)description;
- (BOOL)_isAutoCreated;
- (void)_markAutoCreated:(BOOL)fp8;

@end

@interface _NSBindingInfo : NSObject <NSCoding>
{
    NSString *_binding;
    NSString *_key;
    NSString *_partialControllerKey;
    NSString *_partialObjectKey;
    NSValueTransformer *_valueTransformer;
    NSString *_valueTransformerName;
    id _controller;
    struct __bindingFlags _bindingFlags;
    id _nullPlaceholder;
    id _noSelectionPlaceholder;
    id _multipleValuesSelectionPlaceholder;
    id _notApplicablePlaceholder;
    id _observingBinder;
}

- (id)initWithController:(id)fp8 retainController:(BOOL)fp12 key:(id)fp16 valueTransformer:(id)fp20 binding:(id)fp24;
- (id)initWithController:(id)fp8 retainController:(BOOL)fp12 key:(id)fp16 valueTransformerName:(id)fp20 binding:(id)fp24;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (id)binding;
- (id)key;
- (void)setValueTransformer:(id)fp8;
- (id)valueTransformer;
- (void)setController:(id)fp8 retainController:(BOOL)fp12;
- (id)controller;
- (void)setValueTransformerName:(id)fp8;
- (id)valueTransformerName;
- (void)setRaisesForNotApplicableKeys:(BOOL)fp8;
- (BOOL)raisesForNotApplicableKeys;
- (void)setValidatesImmediately:(BOOL)fp8;
- (BOOL)validatesImmediately;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)fp8;
- (BOOL)alwaysPresentsApplicationModalAlerts;
- (void)setBinderSpecificFlag:(BOOL)fp8 atIndex:(unsigned int)fp12;
- (BOOL)binderSpecificFlagAtIndex:(unsigned int)fp8;
- (void)setPlaceholder:(id)fp8 forMarker:(id)fp12 isDefault:(BOOL)fp16;
- (id)placeholderForMarker:(id)fp8;
- (BOOL)isPlaceholderForMarkerExplicitlySet:(id)fp8;
- (BOOL)setParameter:(id)fp8 forOption:(id)fp12;
- (void)setRequiresDirectKeyValueCodingCall:(BOOL)fp8 partialControllerKey:(id)fp12 partialObjectKey:(id)fp16;
- (BOOL)requiresDirectKeyValueCodingCall;
- (id)partialControllerKey;
- (id)partialObjectKey;
- (void)setObservingBinder:(id)fp8;
- (id)observingBinder;
- (id)description;

@end

@interface _NSBinderAlertRecoveryAttempter : NSObject
{
    unsigned int _recoveryOptionIndex;
}

- (id)init;
- (void)attemptRecoveryFromError:(id)fp8 optionIndex:(unsigned int)fp12 delegate:(id)fp16 didRecoverSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (BOOL)attemptRecoveryFromError:(id)fp8 optionIndex:(unsigned int)fp12;
- (unsigned int)recoveryOptionIndex;

@end

@interface NSDisplayFontBinder : NSBinder
{
    NSFont *_originalFont;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
- (void)_init;
- (void)_dealloc;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)_availableBindingsWithFontBindingsFiltered:(id)fp8;
- (BOOL)_isAnyFontBindingBoundToController:(id)fp8;
- (id)_valueForBindingWithResolve:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12;
- (id)_fontFromBindingsWithMode:(struct __NSKeyValueCodingControllerModeType)fp8 referenceFont:(id)fp20 fallbackFont:(id)fp24;
- (id)availableBindings;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (void)_connectionWasEstablished;
- (id)_adjustFontOfObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 triggerRedisplay:(BOOL)fp24 compareDirectly:(BOOL)fp28 toFont:(id)fp32;
- (id)updateInvalidatedFont:(id)fp8 forObject:(id)fp12;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface NSWindowTitleBinder : NSTitleBinder
{
}

+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;

@end

@interface NSTitleBinder : NSBinder
{
}

+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;

@end

@interface NSDisplayPatternTitleBinder : NSDisplayPatternBinder
{
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)_enumeratedDisplayPatternTitleBindings:(unsigned int)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (BOOL)isBindingReadOnly:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (id)availableBindings;
- (id)_patternForBinding:(id)fp8;
- (void)_setDisplayValue:(id)fp8 object:(id)fp12 triggerRedisplay:(BOOL)fp16;

@end

@interface NSDisplayPatternBinder : NSBinder
{
    NSString *_displayPattern;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)_enumeratedDisplayPatternTitleBindings:(unsigned int)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (id)_cellOrControlForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (void)_dealloc;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (id)availableBindings;
- (void)removeBinding:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (BOOL)_handleObservingRefresh;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)setDisplayPattern:(id)fp8;
- (id)displayPattern;
- (id)_patternForBinding:(id)fp8;
- (void)_setDisplayValue:(id)fp8 object:(id)fp12 triggerRedisplay:(BOOL)fp16;
- (void)_adjustObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 triggerRedisplay:(BOOL)fp24;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface NSObjectParameterBinder : NSBinder
{
    struct __objectParameterBinderFlags _objectParameterBinderFlags;
    NSMutableDictionary *_originalValues;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasEstablished;
- (id)availableBindings;
- (BOOL)canAddBinding:(id)fp8 toController:(id)fp12;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;

@end

@interface NSTableBinder : NSBinder
{
    struct __tableBinderFlags _tableBinderFlags;
    unsigned int _numberOfDisplayedObjects;
    id _modelObservingTracker;
}

+ (BOOL)_autoCreateBinderForObject:(id)fp8 withController:(id)fp12;
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (id)_editableBinderForTableColumn:(id)fp8;
+ (id)_editableBinderAtIndex:(unsigned int)fp8 forTableView:(id)fp12;
- (void)_init;
- (void)dealloc;
- (void)_copyDetailsFromBinder:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_scrollSelectionToVisible;
- (BOOL)_isTableColumn:(id)fp8 boundWithKeyPath:(id)fp12;
- (void)_updateSortDescriptors:(id)fp8;
- (void)_updateSelectionIndexes:(id)fp8;
- (void)_updateContent;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)_markAutoCreated:(BOOL)fp8;
- (BOOL)_isAutoCreated;
- (int)numberOfRowsInTableView:(id)fp8;
- (BOOL)tableView:(id)fp8 shouldEditTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 didChangeToSortDescriptors:(id)fp12;
- (void)tableView:(id)fp8 didChangeToSelectedRowIndexes:(id)fp12;
- (void)tableView:(id)fp8 updateVisibleRowInformation:(struct _NSRange)fp12;
- (BOOL)_observeKeyPathForRelatedBinder:(id)fp8 registerOrUnregister:(BOOL)fp12;
- (void)_redisplayTableContentWithRowIndexes:(id)fp8 columnIndexes:(id)fp12;
- (id)_visibleRowIndexesForObject:(id)fp8;
- (id)_visibleColumnIndexesForKeyPath:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;

@end

@interface _NSTableUtilities : NSObject
{
}

+ (id)_tableBinderForTableView:(id)fp8;
+ (BOOL)_tableBinderForTableViewSupportsSorting:(id)fp8;
+ (void)_breakConnectionOfTableBinderIfAutoCreated:(id)fp8;
+ (void)_setPartialKeysWithTableBinder:(id)fp8 forTableColumnBinder:(id)fp12;
+ (void)_setPartialKeysWithTableBinder:(id)fp8 forAllTableColumnBindersOfTableView:(id)fp12;
+ (void)_registerTableColumnBinder:(id)fp8 toTableColumn:(id)fp12 autoCreateReferenceController:(id)fp16;
+ (void)_unregisterTableColumnBinder:(id)fp8 fromTableColumn:(id)fp12;
+ (id)_referenceBinderForTableColumn:(id)fp8;
+ (id)_referenceBinderAtIndex:(unsigned int)fp8 forTableView:(id)fp12;

@end

@interface NSBinder (NSTableColumnBinder)
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;
- (BOOL)supportsTableEditing;
@end

@interface NSTableColumnBinder : NSViewStateBinder
{
}

+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (BOOL)isBindingReadOnly:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (void)_updateTableColumn:(id)fp8 withWidth:(id)fp12;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (void)tableColumn:(id)fp8 didChangeToWidth:(float)fp12;

@end

@interface NSTabViewBinder : NSViewStateBinder
{
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)availableBindings;
- (Class)valueClassForBinding:(id)fp8;
- (void)_selectInTabView:(id)fp8 itemAtIndex:(id)fp12;
- (void)_selectInTabView:(id)fp8 itemWithLabel:(id)fp12;
- (void)_selectInTabView:(id)fp8 itemWithIdentifier:(id)fp12;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;

@end

@interface NSValueBinder : NSEditorBinder
{
    struct __valueBinderFlags _valueBinderFlags;
    id _cachedObjectValue;
    id _cachedDisplayValue;
    id _sortDescriptorPrototype;
    NSString *_referenceBinding;
}

+ (void)initialize;
+ (id)_pluginProtocol;
+ (id)bindingsForObject:(id)fp8;
+ (id)bindingCategory;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (void)_dealloc;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (BOOL)_supportsMinAndMax;
- (BOOL)_isBooleanBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (id)availableBindings;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (BOOL)_isReferenceBinding:(id)fp8;
- (BOOL)_valueClassIsSortableWithBinding:(id)fp8;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (Class)_valueClass;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)canApplyValueTransformer:(id)fp8 toBinding:(id)fp12;
- (BOOL)_cachedValuesAreValid;
- (void)_cacheObjectValue:(id)fp8;
- (id)_cachedObjectValue;
- (void)_cacheDisplayValue:(id)fp8;
- (id)_cachedDisplayValue;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8 errorEncountered:(char *)fp12 error:(id *)fp16;
- (id)updateInvalidatedObjectValue:(id)fp8 forObject:(id)fp12;
- (id)_formatter;
- (id)displayValueForObjectValue:(id)fp8;
- (id)objectValueForDisplayValue:(id)fp8;
- (id)_referenceBindingValue;
- (id)_referenceBindingValueAtIndex:(unsigned int)fp8;
- (id)_referenceBindingValueAtIndexPath:(id)fp8;
- (id)validateObjectValue:(id)fp8;
- (id)_validateDisplayValue;
- (BOOL)_shouldAlwaysUpdateDisplayValue;
- (void)setAllowsEditingMultipleValuesSelection:(BOOL)fp8;
- (BOOL)allowsEditingMultipleValuesSelection;
- (void)setContinuouslyUpdatesValue:(BOOL)fp8;
- (BOOL)continuouslyUpdatesValue;
- (void)setCreatesSortDescriptor:(BOOL)fp8;
- (BOOL)createsSortDescriptor;
- (id)_referenceBinding;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)releaseConnectionWithSynchronizePeerBinders:(BOOL)fp8;
- (BOOL)_isExplicitlyNonEditable;
- (void)_adjustObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 observedController:(id)fp24 observedKeyPath:(id)fp28 context:(void *)fp32 editableState:(char *)fp36 adjustState:(char *)fp40;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnOutlineCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;
- (BOOL)supportsTableEditing;
- (int)_handleApplyValueError:(id)fp8 forBinding:(id)fp12 canRecoverFromErrors:(BOOL)fp16 handleErrors:(BOOL)fp20 typeOfAlert:(BOOL)fp24 discardEditingCallback:(SEL)fp28 otherCallback:(SEL)fp32 callbackContextInfo:(void *)fp36 didRunAlert:(char *)fp40;
- (int)_applyObjectValue:(id *)fp8 forBinding:(id)fp12 canRecoverFromErrors:(BOOL)fp16 handleErrors:(BOOL)fp20 typeOfAlert:(BOOL)fp24 discardEditingCallback:(SEL)fp28 otherCallback:(SEL)fp32 callbackContextInfo:(void *)fp36 didRunAlert:(char *)fp40;
- (void)_revertDisplayValueBackToOriginalValue:(void *)fp8;
- (BOOL)_handleApplyValueResult:(int)fp8 cachedValue:(id)fp12 displayValue:(id)fp16 objectValue:(id)fp20;
- (BOOL)applyDisplayedValueHandleErrors:(BOOL)fp8 typeOfAlert:(BOOL)fp12 canRecoverFromErrors:(BOOL)fp16 discardEditingCallback:(SEL)fp20 otherCallback:(SEL)fp24 callbackContextInfo:(void *)fp28 didRunAlert:(char *)fp32;
- (BOOL)_applyDisplayedValueIfHasUncommittedChangesWithHandleErrors:(BOOL)fp8 typeOfAlert:(BOOL)fp12 discardEditingCallback:(SEL)fp16 otherCallback:(SEL)fp20 callbackContextInfo:(void *)fp24 didRunAlert:(char *)fp28;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)fp8 didCommitSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)_commitEditingDiscardEditingCallback:(CDAnonymousStruct2 *)fp8;
- (void)_commitEditingOtherCallback:(CDAnonymousStruct2 *)fp8;
- (BOOL)isEditing;
- (void)_startChanging;
- (void)_endChanging;
- (void)editorDidBeginEditing:(id)fp8;
- (void)editorDidEndEditing:(id)fp8;
- (BOOL)handleValidationError:(id)fp8 description:(id)fp12 inEditor:(id)fp16 errorUserInterfaceHandled:(char *)fp20;
- (void)_discardValidateAndCommitValue:(void *)fp8;
- (BOOL)validateAndCommitValueInEditor:(id)fp8 editingIsEnding:(BOOL)fp12 errorUserInterfaceHandled:(char *)fp16;
- (void)performAction:(id)fp8;
- (id)_defaultSortDescriptorPrototypeKey;
- (id)defaultSortDescriptorPrototypeForTableColumn:(id)fp8;
- (BOOL)_presentDiscardEditingAlertPanelWithError:(id)fp8 relatedToBinding:(id)fp12;
- (void)_presentDiscardEditingSheetWithError:(id)fp8 discardEditingCallback:(SEL)fp12 otherCallback:(SEL)fp16 callbackContextInfo:(void *)fp20 relatedToBinding:(id)fp24;
- (void)_didPresentDiscardEditingSheetWithRecovery:(BOOL)fp8 contextInfo:(CDAnonymousStruct3 *)fp12;

@end

@interface NSViewStateBinder : NSBinder
{
    struct __viewStateBinderFlags _viewStateBinderFlags;
}

+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (BOOL)_setValue:(id *)fp8 forBinding:(id)fp12 errorFallbackMessage:(id)fp16;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;

@end

@interface NSWindowBinder : NSViewStateBinder
{
}

+ (void)initialize;
+ (void)_applicationWillTerminate:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (void)_updateWindow:(id)fp8 withWidth:(id)fp12 height:(id)fp16;
- (void)_updateWindow:(id)fp8 withVisibilityState:(id)fp12;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (void)window:(id)fp8 didChangeToVisibleState:(BOOL)fp12;
- (void)windowDidResize:(id)fp8;

@end

@interface NSEditorBinder : NSBinder
{
    struct __editorBinderFlags _editorBinderFlags;
    id _editableBinder;
}

+ (id)_pluginProtocol;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (void)_setObject:(id)fp8;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_noticeEditablePeerBinder:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (BOOL)_isReferenceBinding:(id)fp8;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (void)setConditionallySetsEditable:(BOOL)fp8;
- (BOOL)conditionallySetsEditable;
- (void)setConditionallySetsEnabled:(BOOL)fp8;
- (BOOL)conditionallySetsEnabled;
- (void)setConditionallySetsHidden:(BOOL)fp8;
- (BOOL)conditionallySetsHidden;
- (BOOL)_conditionallySetsStates;
- (BOOL)_isExplicitlyNonEditable;
- (void)_adjustStatesOfObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 state:(BOOL)fp24 triggerRedisplay:(BOOL)fp28;

@end

@interface NSEditableBinder : NSBinder
{
    struct __editableBinderFlags _editableBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)_enumeratedEditableBindings:(unsigned int)fp8;
+ (id)_enumeratedEnabledBindings:(unsigned int)fp8;
+ (id)_enumeratedHiddenBindings:(unsigned int)fp8;
+ (id)bindingsForObject:(id)fp8;
- (void)_init;
- (void)_copyDetailsFromBinder:(id)fp8;
- (void)_setObject:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (id)availableBindings;
- (void)_countBindings;
- (void)addBinding:(id)fp8 toController:(id)fp12 withKeyPath:(id)fp16 valueTransformer:(id)fp20 options:(id)fp24;
- (void)removeBinding:(id)fp8;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)fp8;
- (void)_requestEditableState:(BOOL)fp8;
- (void)_requestAnyEditableState;
- (void)_requestEnabledState:(BOOL)fp8;
- (void)_requestAnyEnabledState;
- (void)_requestHiddenState:(BOOL)fp8;
- (void)_requestAnyHiddenState;
- (BOOL)editableState;
- (BOOL)editableStateAtIndex:(unsigned int)fp8;
- (BOOL)editableStateAtIndexPath:(id)fp8;
- (BOOL)_editableStateWithMode:(struct __NSKeyValueCodingControllerModeType)fp8;
- (BOOL)enabledState;
- (BOOL)enabledStateAtIndex:(unsigned int)fp8;
- (BOOL)enabledStateAtIndexPath:(id)fp8;
- (BOOL)_enabledStateWithMode:(struct __NSKeyValueCodingControllerModeType)fp8;
- (BOOL)hiddenState;
- (BOOL)hiddenStateAtIndex:(unsigned int)fp8;
- (BOOL)hiddenStateAtIndexPath:(id)fp8;
- (BOOL)_hiddenStateWithMode:(struct __NSKeyValueCodingControllerModeType)fp8;
- (void)_setStatesImmediatelyInObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 triggerRedisplay:(BOOL)fp24;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface NSBinder (_NSEditableBinderHandshaking)
- (void)_noticeEditablePeerBinder:(id)fp8;
@end

@interface NSDrawerBinder : NSViewStateBinder
{
    struct __drawerBinderFlags _drawerBinderFlags;
}

+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (void)_connectionWasEstablished;
- (void)_updateDrawer:(id)fp8 withVisibilityState:(id)fp12;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;
- (void)drawer:(id)fp8 didChangeToState:(BOOL)fp12;

@end

@interface NSTextValueBinder : NSValueBinder
{
    struct __textBinderFlags _textBinderFlags;
    NSColor *_originalColor;
    NSColor *_nullColor;
    NSColor *_noSelectionColor;
    NSColor *_multipleValuesSelectionColor;
    NSColor *_notApplicableColor;
    id _textColorBinder;
}

+ (id)binderClassesSuperseded;
+ (void)setDefaultTextColor:(id)fp8 whenObjectValueIsUsed:(id)fp12;
+ (id)defaultTextColorWhenObjectValueIsUsed:(id)fp8;
- (void)_init;
- (void)_copyDetailsFromBinder:(id)fp8;
- (void)_dealloc;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_setObject:(id)fp8;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_noticeTextColorPeerBinder:(id)fp8;
- (void)_connectionWasEstablished;
- (void)setTextColor:(id)fp8 whenObjectValueIsUsed:(id)fp12;
- (id)textColorWhenObjectValueIsUsed:(id)fp8;
- (void)_adjustTextColorOfObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12;
- (void)_startChanging;
- (void)_endChanging;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface NSTextColorBinder : NSBinder
{
    NSColor *_originalColor;
    NSColor *_referenceBinderRequestedColor;
    struct __textColorBinderFlags _textColorBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
- (void)_init;
- (void)_dealloc;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (Class)valueClassForBinding:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_connectionWasEstablished;
- (void)_clearDependenciesWithAllPeerBinders;
- (void)_synchronizeWithPeerBindersInArray:(id)fp8;
- (void)_requestTextColor:(id)fp8;
- (id)textColor;
- (id)textColorAtIndex:(unsigned int)fp8;
- (id)textColorAtIndexPath:(id)fp8;
- (id)_textColorWithMode:(struct __NSKeyValueCodingControllerModeType)fp8;
- (id)_setTextColorInObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 compareDirectly:(BOOL)fp24 toTextColor:(id)fp28;
- (void)_showTextColorImmediatelyInObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12;
- (id)updateInvalidatedTextColor:(id)fp8 forObject:(id)fp12;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface NSBinder (_NSTextColorBinderHandshaking)
- (void)_noticeTextColorPeerBinder:(id)fp8;
@end

@interface _NSBinderPluginRegistry : NSObject
{
    struct _NSMapTable *_registry;
    struct _NSMapTable *_cachedRegistry;
}

+ (id)sharedRegistry;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)registerPluginClass:(Class)fp8 forObjectClass:(Class)fp12 andBinderClass:(Class)fp16;
- (Class)pluginClassForObject:(id)fp8 andBinderClass:(Class)fp12 requiredPluginProtocol:(id)fp16;

@end

@interface _NSDoubleClickActionBinderPlugin : _NSActionBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)fp8;

@end

@interface _NSActionBinderPlugin : _NSBinderPlugin <_NSActionBinderPlugin>
{
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (BOOL)needsAction;
- (BOOL)prefersEnabledOverEditable:(id)fp8;
- (BOOL)conditionalBehaviorOffByDefault:(id)fp8;
- (BOOL)targetAndArgumentsAcceptableForPerformAction;
- (BOOL)invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16 object:(id)fp20;

@end

@interface _NSDisplayFontBinderPlugin : _NSBinderPlugin <_NSDisplayFontBinderPlugin>
{
    struct __displayFontBinderPluginFlags _displayFontBinderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (id)fontInvalidationCapableObjectForObject:(id)fp8;

@end

@interface _NSTextColorBinderPlugin : _NSBinderPlugin <_NSTextColorBinderPlugin>
{
    struct __textColorBinderPluginFlags _textColorBinderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (id)textColorInvalidationCapableObjectForObject:(id)fp8;

@end

@interface _NSEditableBinderPlugin : _NSBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)fp8;

@end

@interface _NSBinderPlugin : NSObject <_NSBinderPlugin>
{
    id _binder;
    struct __binderPluginFlags _binderPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (Class)defaultPlaceholderLookupClassForBinding:(id)fp8 object:(id)fp12;
- (id)cellOrControlForObject:(id)fp8;
- (id)viewForObject:(id)fp8;
- (id)indexPathForOutlineView:(id)fp8 row:(int)fp12;
- (BOOL)shouldUseInvalidationForObject:(id)fp8;
- (BOOL)isInvalidationCapableObject:(id)fp8 withSelector:(SEL)fp12;
- (id)editorWithObject:(id)fp8;
- (BOOL)isEditingWithObject:(id)fp8;
- (BOOL)isEditingAtIndexPath:(id)fp8 withObject:(id)fp12;
- (BOOL)isEditingAtIndex:(unsigned int)fp8 withObject:(id)fp12;
- (BOOL)needsAction;
- (id)objectMechanismsRequired;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (void)connectionWasEstablished:(id)fp8;
- (void)connectionWasBroken:(id)fp8;
- (BOOL)handleObservingRefresh:(id)fp8;
- (BOOL)observeKeyPathForBindingInfo:(id)fp8 registerOrUnregister:(BOOL)fp12 object:(id)fp16;

@end

@interface _NSMultipleSelectionMatrixPlugin : _NSMatrixPlugin <_NSMultipleSelectionBinderPlugin>
{
    struct __multipleSelectionMatrixPluginFlags _multipleSelectionMatrixPluginFlags;
    int _mode;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)connectionWasEstablished:(id)fp8;
- (unsigned long long)allowedValueBindingMask;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSSegmentedControlPlugin : _NSSelectionBinderPlugin
{
}

- (unsigned long long)allowedValueBindingMask;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (void)removeAllContentObjectsInCellOrControl:(id)fp8;
- (void)addContentObject:(id)fp8 isPlaceholder:(BOOL)fp12 value:(id)fp16 tag:(int)fp20 cellOrControl:(id)fp24;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSMatrixPlugin : _NSSelectionBinderPlugin
{
    struct __matrixPluginFlags _matrixPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)connectionWasEstablished:(id)fp8;
- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (unsigned long long)allowedValueBindingMask;
- (unsigned long long)allowedContentBindingMask;
- (void)populateObject:(id)fp8 withContent:(id)fp12 valueKey:(id)fp16 objectKey:(id)fp20 insertsNullPlaceholder:(BOOL)fp24;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSComboBoxPlugin : _NSSelectionBinderPlugin
{
    NSDecimalNumber *_originalMinValue;
    NSDecimalNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)dealloc;
- (BOOL)prefersEnabledOverEditable:(id)fp8;
- (Class)_valueClass:(id)fp8;
- (id)objectMechanismsRequired;
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (BOOL)needsAction;
- (BOOL)needsDelegate;
- (BOOL)canPopulateWithPlaceholders;
- (BOOL)canIgnorePopulatingObject:(id)fp8;
- (void)removeAllContentObjectsInCellOrControl:(id)fp8;
- (void)addContentObject:(id)fp8 isPlaceholder:(BOOL)fp12 value:(id)fp16 tag:(int)fp20 cellOrControl:(id)fp24;
- (void)showValue:(id)fp8 inObject:(id)fp12;

@end

@interface _NSPopUpButtonPlugin : _NSSelectionBinderPlugin
{
}

- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (unsigned long long)allowedValueBindingMask;
- (unsigned long long)allowedContentBindingMask;
- (void)removeAllContentObjectsInCellOrControl:(id)fp8;
- (void)addContentObject:(id)fp8 isPlaceholder:(BOOL)fp12 value:(id)fp16 tag:(int)fp20 cellOrControl:(id)fp24;
- (BOOL)canIgnorePopulatingObject:(id)fp8;
- (int)_supposedNumberOfItems;
- (void)_clearUnneccessaryItems:(id)fp8;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;
- (BOOL)shouldIgnoreAction:(id)fp8;
- (void)actionHasEnded:(id)fp8 sender:(id)fp12;

@end

@interface _NSSelectionBinderPlugin : _NSValueBinderPlugin <_NSSelectionBinderPlugin>
{
}

- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (unsigned long long)allowedContentBindingMask;
- (void)removeAllContentObjectsInCellOrControl:(id)fp8;
- (void)addContentObject:(id)fp8 isPlaceholder:(BOOL)fp12 value:(id)fp16 tag:(int)fp20 cellOrControl:(id)fp24;
- (BOOL)canPopulateWithPlaceholders;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)canIgnorePopulatingObject:(id)fp8;
- (void)populateObject:(id)fp8 withContent:(id)fp12 valueKey:(id)fp16 objectKey:(id)fp20 insertsNullPlaceholder:(BOOL)fp24;

@end

@interface _NSProgressIndicatorPlugin : _NSDoubleValueBinderPlugin
{
}

- (BOOL)needsDelegate;
- (BOOL)needsAction;

@end

@interface _NSDoubleValueBinderPlugin : _NSValueBinderPlugin
{
    NSNumber *_originalMinValue;
    NSNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)dealloc;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (Class)_valueClass:(id)fp8;
- (id)objectMechanismsRequired;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSMenuItemPlugin : _NSValueBinderPlugin
{
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (BOOL)needsAction;
- (void)actionHasBegun:(id)fp8 sender:(id)fp12;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;
- (id)objectMechanismsRequired;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (BOOL)shouldAlwaysUpdateDisplayValue;

@end

@interface _NSDateValueBinderPlugin : _NSValueBinderPlugin
{
    NSDate *_originalMinValue;
    NSDate *_originalMaxValue;
}

- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)dealloc;
- (Class)_valueClass:(id)fp8;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)fp8;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;
- (id)editingColorAdjustableObject:(id)fp8;
- (id)objectMechanismsRequired;

@end

@interface _NSMovieViewPlugin : _NSValueBinderPlugin
{
}

- (id)objectMechanismsRequired;
- (unsigned long long)allowedValueBindingMask;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (BOOL)needsDelegate;
- (BOOL)needsAction;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSColorWellPlugin : _NSValueBinderPlugin
{
}

- (id)objectMechanismsRequired;
- (Class)_valueClass:(id)fp8;
- (unsigned long long)allowedValueBindingMask;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSImageCellPlugin : _NSImageViewPlugin
{
}

- (BOOL)needsDelegate;
- (BOOL)needsAction;

@end

@interface _NSImageViewPlugin : _NSValueBinderPlugin
{
}

- (BOOL)prefersEnabledOverEditable:(id)fp8;
- (unsigned long long)allowedValueBindingMask;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSTextPlugin : _NSTextFieldPlugin
{
}

- (id)objectMechanismsRequired;
- (unsigned long long)allowedValueBindingMask;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (BOOL)conditionalBehaviorOffByDefault:(id)fp8;
- (BOOL)acceptsStyleChanges;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;

@end

@interface _NSPlaceholderTextFieldPlugin : _NSTextFieldPlugin
{
}

- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (id)formattedValueInObject:(id)fp8 errorEncountered:(char *)fp12 error:(id *)fp16;
- (void)showValue:(id)fp8 inObject:(id)fp12;

@end

@interface _NSTextFieldPlugin : _NSValueBinderPlugin
{
    NSDecimalNumber *_originalMinValue;
    NSDecimalNumber *_originalMaxValue;
}

- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)dealloc;
- (Class)_valueClass:(id)fp8;
- (BOOL)conditionalBehaviorOffByDefault:(id)fp8;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)fp8;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (BOOL)needsDelegate;
- (BOOL)acceptsStyleChanges;
- (id)editingColorAdjustableObject:(id)fp8;
- (id)objectMechanismsRequired;

@end

@interface _NSTokenFieldPlugin : _NSPlaceholderTextFieldPlugin
{
}

- (Class)_valueClass:(id)fp8;
- (id)shownValueInObject:(id)fp8;
- (id)formattedValueInObject:(id)fp8 errorEncountered:(char *)fp12 error:(id *)fp16;
- (void)showValue:(id)fp8 inObject:(id)fp12;

@end

@interface _NSSearchFieldPlugin : _NSTextFieldPlugin
{
}

- (BOOL)needsAction;
- (unsigned long long)allowedValueBindingMask;

@end

@interface _NSCheckBoxPlugin : _NSValueBinderPlugin
{
    struct __checkBoxPluginFlags _checkBoxPluginFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)connectionWasEstablished:(id)fp8;
- (id)objectMechanismsRequired;
- (BOOL)isBooleanValueBindingForObject:(id)fp8;
- (BOOL)acceptsMarker:(id)fp8 binding:(id)fp12 overrideWithPlaceholderIfDefined:(char *)fp16;
- (Class)_valueClass:(id)fp8;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;
- (BOOL)shouldAlwaysUpdateDisplayValue;

@end

@interface _NSValueBinderPlugin : _NSBinderPlugin <_NSValueBinderPlugin>
{
    struct __valueBinderPluginFlags _valueBinderPluginFlags;
    unsigned int _affectedIndex;
    NSIndexPath *_affectedIndexPath;
    Class _valueClass;
}

+ (BOOL)isUsableWithObject:(id)fp8;
- (id)initWithBinder:(id)fp8 object:(id)fp12;
- (void)dealloc;
- (id)objectValueInvalidationCapableObjectForObject:(id)fp8;
- (void)invalidateObjectValueInObject:(id)fp8;
- (id)viewForObject:(id)fp8;
- (unsigned long long)allowedValueBindingMask;
- (BOOL)canIgnoreSettingMinAndMaxForObject:(id)fp8;
- (BOOL)canSupportMinAndMaxForObject:(id)fp8;
- (void)storeMin:(BOOL)fp8 andMax:(BOOL)fp12 ofObject:(id)fp16;
- (BOOL)updateCellOrControl:(id)fp8 forMinValue:(id)fp12;
- (BOOL)updateCellOrControl:(id)fp8 forMaxValue:(id)fp12;
- (BOOL)isBooleanValueBindingForObject:(id)fp8;
- (Class)_valueClass:(id)fp8;
- (Class)valueClass:(id)fp8;
- (Class)valueClass:(id)fp8 forBinding:(id)fp12;
- (BOOL)conditionalBehaviorOffByDefault:(id)fp8;
- (BOOL)prefersEnabledOverEditable:(id)fp8;
- (BOOL)needsDelegate;
- (BOOL)needsAction;
- (id)objectMechanismsRequired;
- (void)connectionWasEstablished:(id)fp8;
- (void)connectionWasBroken:(id)fp8;
- (struct __NSKeyValueCodingControllerModeType)editedMode:(id)fp8 forEditingOrAction:(BOOL)fp12;
- (void)editingHasBegun:(id)fp8;
- (void)editingHasEnded:(id)fp8;
- (void)editingWasAborted:(id)fp8;
- (void)_actionHasBegun:(id)fp8 atIndexPath:(id)fp12;
- (void)_actionHasBegun:(id)fp8 atIndex:(unsigned int)fp12;
- (void)actionHasBegun:(id)fp8 sender:(id)fp12;
- (void)actionHasEnded:(id)fp8 sender:(id)fp12;
- (id)editingBinderForControl:(id)fp8;
- (BOOL)shouldIgnoreAction:(id)fp8;
- (void)showValue:(id)fp8 inObject:(id)fp12;
- (id)shownValueInObject:(id)fp8;
- (id)formattedValueInObject:(id)fp8 errorEncountered:(char *)fp12 error:(id *)fp16;
- (id)formatterOfObject:(id)fp8;
- (BOOL)isObjectTableColumnDataCell:(id)fp8;
- (BOOL)shouldProvideSortDescriptor:(id)fp8 optionsAdvertisingOnly:(BOOL)fp12;
- (BOOL)shouldAlwaysUpdateDisplayValue;
- (BOOL)applyObjectValue:(id *)fp8 forBinding:(id)fp12 operation:(int *)fp16 needToRunAlert:(char *)fp20 error:(id *)fp24;

@end

@interface NSArrayController : NSObjectController
{
    void *_reserved5;
    NSMutableArray *_temporaryWorkObjects;
    NSPredicate *_filterPredicate;
    struct __arrayControllerFlags _arrayControllerFlags;
    NSArray *_sortDescriptors;
    NSMutableIndexSet *_selectionIndexes;
    unsigned int _observedIndexHint;
    NSMutableArray *_objects;
    NSMutableArray *_selectedObjects;
    NSArray *_arrangedObjects;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_dealloc;
- (id)description;
- (BOOL)_registerObservingForAllModelObjects;
- (void)_startObservingSelectionIfNecessary;
- (void)_stopObservingSelectionIfNecessary;
- (void)addObserver:(id)fp8 forKeyPath:(id)fp12 options:(unsigned int)fp16 context:(void *)fp20;
- (void)_setRefreshesAllModelObjects:(BOOL)fp8;
- (BOOL)_refreshesAllModelObjects;
- (BOOL)_shouldSendObserverNotificationForModelOrProxyKey:(id)fp8 keyPath:(id)fp12 ofObject:(id)fp16;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)willChangeValuesForArrangedKeys:(BOOL)fp8 objectKeys:(BOOL)fp12 indexKeys:(BOOL)fp16;
- (void)didChangeValuesForArrangedKeys:(BOOL)fp8 objectKeys:(BOOL)fp12 indexKeys:(BOOL)fp16;
- (id)_filterObjects:(id)fp8;
- (id)_sortObjects:(id)fp8;
- (id)arrangeObjects:(id)fp8;
- (void)_setObjects:(id)fp8;
- (void)_ensureObjectsAreMutable;
- (void)_arrangeObjectsWithSelectedObjects:(id)fp8 avoidsEmptySelection:(BOOL)fp12 operationsMask:(unsigned int)fp16 useBasis:(id)fp20;
- (void)setFilterPredicate:(id)fp8;
- (id)filterPredicate;
- (void)setSortDescriptors:(id)fp8;
- (id)sortDescriptors;
- (void)_setContentInBackground:(id)fp8;
- (void)setContent:(id)fp8;
- (id)content;
- (void)_prepareContentWithNewObject:(id)fp8;
- (void)rearrangeObjects;
- (void)setAvoidsEmptySelection:(BOOL)fp8;
- (BOOL)avoidsEmptySelection;
- (void)setPreservesSelection:(BOOL)fp8;
- (BOOL)preservesSelection;
- (void)setSelectsInsertedObjects:(BOOL)fp8;
- (BOOL)selectsInsertedObjects;
- (void)setClearsFilterPredicateOnInsertion:(BOOL)fp8;
- (BOOL)clearsFilterPredicateOnInsertion;
- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)fp8;
- (BOOL)alwaysUsesMultipleValuesMarker;
- (unsigned int)_selectionIndexesCount;
- (BOOL)_selectObjectsAtIndexesNoCopy:(id)fp8 avoidsEmptySelection:(BOOL)fp12 sendObserverNotifications:(BOOL)fp16 forceUpdate:(BOOL)fp20;
- (BOOL)_selectObjectsAtIndexes:(id)fp8 avoidsEmptySelection:(BOOL)fp12 sendObserverNotifications:(BOOL)fp16 forceUpdate:(BOOL)fp20;
- (BOOL)setSelectionIndexes:(id)fp8;
- (id)selectionIndexes;
- (BOOL)setSelectionIndex:(unsigned int)fp8;
- (unsigned int)selectionIndex;
- (BOOL)addSelectionIndexes:(id)fp8;
- (BOOL)removeSelectionIndexes:(id)fp8;
- (BOOL)_modifySelectedObjects:(id)fp8 useExistingIndexesAsStartingPoint:(BOOL)fp12 avoidsEmptySelection:(BOOL)fp16 addOrRemove:(BOOL)fp20 sendObserverNotifications:(BOOL)fp24 forceUpdate:(BOOL)fp28;
- (BOOL)setSelectedObjects:(id)fp8;
- (BOOL)addSelectedObjects:(id)fp8;
- (BOOL)removeSelectedObjects:(id)fp8;
- (void)_cacheSelectedObjectsIfNecessary;
- (id)selectedObjects;
- (void)_modifySelectionIndexes:(unsigned int)fp8 atIndex:(unsigned int)fp12 addOrRemove:(BOOL)fp16 sendObserverNotifications:(BOOL)fp20;
- (void)_addNumberOfIndexes:(unsigned int)fp8 toSelectionIndexesAtIndex:(unsigned int)fp12 sendObserverNotifications:(BOOL)fp16;
- (void)_removeNumberOfIndexes:(unsigned int)fp8 fromSelectionIndexesAtIndex:(unsigned int)fp12 sendObserverNotifications:(BOOL)fp16;
- (void)_setFilterRestrictsInsertion:(BOOL)fp8;
- (BOOL)_filterRestrictsInsertion;
- (void)_assertFilterRestrictsInsertionOfObjects:(id)fp8 atArrangedObjectIndexes:(id)fp12;
- (void)addObject:(id)fp8;
- (void)addObjects:(id)fp8;
- (void)_insertObject:(id)fp8 atArrangedObjectIndex:(unsigned int)fp12 objectHandler:(id)fp16;
- (void)insertObject:(id)fp8 atArrangedObjectIndex:(unsigned int)fp12;
- (void)insertObjects:(id)fp8 atArrangedObjectIndexes:(id)fp12;
- (void)_ensureSelectionAfterRemoveWithPreferredIndex:(unsigned int)fp8 sendObserverNotifications:(BOOL)fp12;
- (void)_removeObjectAtArrangedObjectIndex:(unsigned int)fp8 objectHandler:(id)fp12;
- (void)removeObjectAtArrangedObjectIndex:(unsigned int)fp8;
- (void)_removeObjectsAtArrangedObjectIndexes:(id)fp8 contentIndexes:(id)fp12 objectHandler:(id)fp16;
- (void)removeObjectsAtArrangedObjectIndexes:(id)fp8;
- (void)removeObject:(id)fp8;
- (void)_removeObjects:(id)fp8 objectHandler:(id)fp12;
- (void)removeObjects:(id)fp8;
- (void)_executeInsert:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)insert:(id)fp8;
- (void)_executeAdd:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)add:(id)fp8;
- (void)remove:(id)fp8;
- (void)_changeEditable:(BOOL)fp8;
- (void)_setExplicitlyCannotAdd:(BOOL)fp8 insert:(BOOL)fp12 remove:(BOOL)fp16;
- (BOOL)_explicitlyCannotInsert;
- (BOOL)canInsert;
- (BOOL)canAdd;
- (BOOL)canRemove;
- (BOOL)canSelectNext;
- (void)_executeSelectNext:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)selectNext:(id)fp8;
- (BOOL)canSelectPrevious;
- (void)_executeSelectPrevious:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)selectPrevious:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (unsigned int)_multipleValuesObjectCount;
- (id)_multipleValuesObjectAtIndex:(unsigned int)fp8;
- (id)_multipleValuesObjectsAtIndexes:(id)fp8;
- (id)_multipleValueForKey:(id)fp8 atIndex:(unsigned int)fp12;
- (id)_multipleValueForKeyPath:(id)fp8 atIndex:(unsigned int)fp12;
- (id)_multipleMutableArrayValueForKey:(id)fp8 atIndex:(unsigned int)fp12;
- (id)_multipleMutableArrayValueForKeyPath:(id)fp8 atIndex:(unsigned int)fp12;
- (void)_setMultipleValue:(id)fp8 forKey:(id)fp12 atIndex:(unsigned int)fp16;
- (void)_setMultipleValue:(id)fp8 forKeyPath:(id)fp12 atIndex:(unsigned int)fp16;
- (void)_invokeMultipleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 atIndex:(unsigned int)fp20;
- (BOOL)_validateMultipleValue:(id *)fp8 forKeyPath:(id)fp12 atIndex:(unsigned int)fp16 error:(id *)fp20;
- (id)_singleValueForKeyPath:(id)fp8 operationType:(int)fp12;
- (id)_singleMutableArrayValueForKey:(id)fp8;
- (id)_singleMutableArrayValueForKeyPath:(id)fp8;
- (id)_singleValueForKey:(id)fp8;
- (id)_singleValueForKeyPath:(id)fp8;
- (void)_setSingleValue:(id)fp8 forKey:(id)fp12;
- (void)_setSingleValue:(id)fp8 forKeyPath:(id)fp12;
- (void)_invokeSingleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKey:(id)fp12 error:(id *)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;
- (id)_controllerKeys;
- (id)_keyValueBindingAccessPoints;
- (id)_modelAndProxyKeys;
- (id)arrangedObjects;

@end

@interface _NSControllerArrayProxyMutatorArray : NSMutableArray
{
    NSObjectController *_controller;
    NSString *_keyPath;
}

- (id)initWithController:(id)fp8 keyPath:(id)fp12;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)_referenceArray;
- (unsigned int)count;
- (id)objectAtIndex:(unsigned int)fp8;
- (void)getObjects:(id *)fp8 range:(struct _NSRange)fp12;
- (void)_performMutatorOperation:(int)fp8 object:(id)fp12 index:(unsigned int)fp16;
- (void)addObject:(id)fp8;
- (void)insertObject:(id)fp8 atIndex:(unsigned int)fp12;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned int)fp8;
- (void)replaceObjectAtIndex:(unsigned int)fp8 withObject:(id)fp12;

@end

@interface _NSControllerArrayProxy : NSArray
{
    id _controller;
}

- (id)initWithController:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)clearController;
- (unsigned int)count;
- (id)objectAtIndex:(unsigned int)fp8;
- (id)objectsAtIndexes:(id)fp8;
- (void)getObjects:(id *)fp8 range:(struct _NSRange)fp12;
- (id)_valueForKeyPath:(id)fp8 ofObjectAtIndex:(unsigned int)fp12;
- (void)_setValue:(id)fp8 forKeyPath:(id)fp12 ofObjectAtIndex:(unsigned int)fp16;
- (BOOL)_validateValue:(id *)fp8 forKeyPath:(id)fp12 ofObjectAtIndex:(unsigned int)fp16 error:(id *)fp20;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 ofObjectAtIndex:(unsigned int)fp20;

@end

@interface NSArrayController (NSManagedController)
- (id)_fetchRequestForPerformingFetch;
- (BOOL)_performFetchWithRequest:(id)fp8 merge:(BOOL)fp12 error:(id *)fp16;
- (void)_reactToMatchingInsertions:(id)fp8 deletions:(id)fp12 refreshed:(id)fp16;
@end

@interface NSController : NSObject <NSCoding>
{
    void *_reserved;
    void *_reserved2;
    int _specialPurposeType;
    id _bindingAdaptor;
    struct __CFArray *_editors;
    NSMutableArray *_declaredKeys;
    NSMutableDictionary *_dependentKeyToModelKeyTable;
    NSMutableDictionary *_modelKeyToDependentKeyTable;
    NSMutableArray *_modelKeysToRefreshEachTime;
    struct __bindingsControllerFlags _bindingsControllerFlags;
    NSMutableDictionary *_reservedOther;
    id _modelObservingTracker;
    id _expectedObservingInfo;
    id _singleValueAccessor;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)fp8;
- (void)_init;
- (id)init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_dealloc;
- (void)dealloc;
- (void)finalize;
- (void)_setBindingAdaptor:(id)fp8;
- (id)_bindingAdaptor;
- (id)_controllerKeys;
- (id)_keyValueBindingAccessPoints;
- (id)_modelAndProxyKeys;
- (void)_setDeclaredKeys:(id)fp8;
- (id)_declaredKeys;
- (void)_addDeclaredKey:(id)fp8;
- (void)_removeDeclaredKey:(id)fp8;
- (void)_setSpecialPurposeType:(int)fp8;
- (int)_specialPurposeType;
- (BOOL)_shouldAddObservationForwardersForKey:(id)fp8;
- (void)_notifyObserversForKeyPath:(id)fp8 change:(id)fp12;
- (void)addObserver:(id)fp8 forKeyPath:(id)fp12 options:(unsigned int)fp16 context:(void *)fp20;
- (void)removeObserver:(id)fp8 forKeyPath:(id)fp12;
- (void)willChangeValueForKey:(id)fp8;
- (void)didChangeValueForKey:(id)fp8;
- (void)_notifyEditorStateChanged:(BOOL)fp8;
- (void)objectDidBeginEditing:(id)fp8;
- (void)objectDidEndEditing:(id)fp8;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)fp8;
- (BOOL)alwaysPresentsApplicationModalAlerts;
- (void)discardEditing;
- (BOOL)commitEditing;
- (void)commitEditingWithDelegate:(id)fp8 didCommitSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (void)_controllerEditor:(id)fp8 didCommit:(BOOL)fp12 contextInfo:(CDAnonymousStruct2 *)fp16;
- (BOOL)isEditing;
- (id)_singleValueForKey:(id)fp8;
- (id)_singleValueForKeyPath:(id)fp8;
- (id)_singleValueForKeyPath:(id)fp8 operationType:(int)fp12;
- (id)_singleMutableArrayValueForKey:(id)fp8;
- (id)_singleMutableArrayValueForKeyPath:(id)fp8;
- (void)_setSingleValue:(id)fp8 forKey:(id)fp12;
- (void)_setSingleValue:(id)fp8 forKeyPath:(id)fp12;
- (void)_invokeSingleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKey:(id)fp12 error:(id *)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;
- (BOOL)_observesModelObjects;
- (id)_modelAndProxyKeysObserved;
- (BOOL)_shouldSendObserverNotificationForModelOrProxyKey:(id)fp8 keyPath:(id)fp12 ofObject:(id)fp16;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)_setModelKeys:(id)fp8 triggerChangeNotificationsForDependentKey:(id)fp12;
- (id)_modelKeysTriggeringChangeNotificationsForDependentKey:(id)fp8;
- (void)_setRefreshesAllModelKeys:(BOOL)fp8;
- (BOOL)_refreshesAllModelKeys;

@end

@interface _NSControllerObjectProxy : NSObject
{
    id _controller;
}

- (id)initWithController:(id)fp8;
- (void)clearController;
- (int)_requestTypeForOperationKey:(id)fp8;
- (id)_valueWithOperatorKeyPath:(id)fp8;
- (id)valueForKey:(id)fp8;
- (id)valueForKeyPath:(id)fp8;
- (id)_proxyMutableArrayValueForKey:(id)fp8;
- (id)_proxyMutableArrayValueForKeyPath:(id)fp8;
- (id)mutableArrayValueForKey:(id)fp8;
- (id)mutableArrayValueForKeyPath:(id)fp8;
- (void)setValue:(id)fp8 forKey:(id)fp12;
- (void)setValue:(id)fp8 forKeyPath:(id)fp12;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
- (BOOL)validateValue:(id *)fp8 forKey:(id)fp12 error:(id *)fp16;
- (BOOL)validateValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;

@end

@interface _NSManagedProxy : NSObject
{
    id _callbackHandler;
    NSManagedObjectContext *_managedObjectContext;
    NSString *_entityName;
    NSPredicate *_fetchPredicate;
}

- (id)init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;
- (void)_setCallbackHandler:(id)fp8;
- (id)_callbackHandler;
- (void)setManagedObjectContext:(id)fp8;
- (id)managedObjectContext;
- (void)setEntityName:(id)fp8;
- (id)entityName;
- (void)setFetchPredicate:(id)fp8;
- (id)fetchPredicate;
- (id)_managedObjectContext;
- (id)_persistentStoreCoordinator;
- (id)_entity;
- (BOOL)isEntityUsable:(id)fp8;
- (id)usableSortDescriptorsFromArray:(id)fp8;
- (id)fetchRequestWithSortDescriptors:(id)fp8 limit:(unsigned int)fp12;
- (id)fetchObjectsWithFetchRequest:(id)fp8 error:(id *)fp12;
- (id)newInsertedObjectForEntity:(id)fp8;
- (id)newInsertedObject;
- (void)deleteObject:(id)fp8;
- (BOOL)_objectMatchesEntity:(id)fp8;
- (void)_storesDidChange:(id)fp8;
- (BOOL)_objectMatchesFetchPredicate:(id)fp8;
- (void)_managedObjectsChangedInContext:(id)fp8;

@end

@interface NSObjectController : NSController
{
    void *_reserved3;
    id _managedProxy;
    struct __objectControllerFlags _objectControllerFlags;
    NSString *_objectClassName;
    Class _objectClass;
    NSArray *_contentObjectArray;
    id _content;
    id _objectHandler;
}

+ (void)initialize;
+ (id)_nonAutomaticObservingKeys;
+ (Class)_defaultObjectClass;
+ (id)_defaultObjectClassName;
- (void)_init;
- (id)init;
- (id)initWithContent:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)awakeFromNib;
- (void)_dealloc;
- (id)description;
- (void)_setObjectHandler:(id)fp8;
- (void)setContent:(id)fp8;
- (void)_notifyEditorStateChanged:(BOOL)fp8;
- (void)_notifyOfAnyContentChange;
- (id)content;
- (void)_markHasLoadedData:(BOOL)fp8;
- (void)setAutomaticallyPreparesContent:(BOOL)fp8;
- (BOOL)automaticallyPreparesContent;
- (void)_changeEditable:(BOOL)fp8;
- (void)setEditable:(BOOL)fp8;
- (BOOL)isEditable;
- (void)_setObjectClassName:(id)fp8;
- (id)_objectClassName;
- (void)setObjectClass:(Class)fp8;
- (Class)objectClass;
- (id)newObject;
- (void)_prepareContentWithNewObject:(id)fp8;
- (void)prepareContent;
- (void)addObject:(id)fp8;
- (void)removeObject:(id)fp8;
- (void)_executeAdd:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)add:(id)fp8;
- (void)remove:(id)fp8;
- (void)_setExplicitlyCannotAdd:(BOOL)fp8 remove:(BOOL)fp12;
- (BOOL)_explicitlyCannotAdd;
- (BOOL)_explicitlyCannotRemove;
- (BOOL)canAdd;
- (BOOL)canRemove;
- (BOOL)validateMenuItem:(id)fp8;
- (id)_singleValueForKey:(id)fp8;
- (id)_singleValueForKeyPath:(id)fp8;
- (id)_singleMutableArrayValueForKey:(id)fp8;
- (id)_singleMutableArrayValueForKeyPath:(id)fp8;
- (void)_setSingleValue:(id)fp8 forKey:(id)fp12;
- (void)_setSingleValue:(id)fp8 forKeyPath:(id)fp12;
- (void)_invokeSingleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKey:(id)fp12 error:(id *)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;
- (id)_controllerKeys;
- (id)_keyValueBindingAccessPoints;
- (id)_modelAndProxyKeys;
- (id)selectedObjects;
- (id)selection;

@end

@interface NSObjectController (NSManagedController)
- (BOOL)_isManagedController;
- (void)_setUsingManagedProxy:(BOOL)fp8;
- (BOOL)_isUsingManagedProxy;
- (id)_managedProxy;
- (void)setManagedObjectContext:(id)fp8;
- (id)managedObjectContext;
- (void)_notifyManagedContextEditorStateChanged:(BOOL)fp8;
- (void)setEntityName:(id)fp8;
- (id)entityName;
- (void)setFetchPredicate:(id)fp8;
- (id)fetchPredicate;
- (id)_fetchRequestForPerformingFetch;
- (BOOL)_performFetchWithRequest:(id)fp8 merge:(BOOL)fp12 error:(id *)fp16;
- (BOOL)fetchWithRequest:(id)fp8 merge:(BOOL)fp12 error:(id *)fp16;
- (void)_executeFetch:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)fetch:(id)fp8;
- (BOOL)_needsLiveUpdates;
- (void)_reactToMatchingInsertions:(id)fp8 deletions:(id)fp12 refreshed:(id)fp16;
@end

@interface NSUserDefaultsController : NSController
{
    void *_reserved3;
    void *_reserved4;
    NSUserDefaults *_defaults;
    NSMutableDictionary *_valueBuffer;
    NSDictionary *_initialValues;
    struct __userDefaultsControllerFlags _userDefaultsControllerFlags;
}

+ (id)sharedUserDefaultsController;
+ (id)_nonAutomaticObservingKeys;
- (void)_init;
- (id)init;
- (id)initWithDefaults:(id)fp8 initialValues:(id)fp12;
- (id)initWithCoder:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_dealloc;
- (id)description;
- (void)_setDefaults:(id)fp8;
- (id)defaults;
- (void)setInitialValues:(id)fp8;
- (id)initialValues;
- (id)_valueBuffer;
- (void)_applyValue:(id)fp8 forKey:(id)fp12 registrationDomain:(id)fp16;
- (void)_applyAllValuesFromValueBuffer;
- (void)setAppliesImmediately:(BOOL)fp8;
- (BOOL)appliesImmediately;
- (void)revert:(id)fp8;
- (void)_executeSave:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)save:(id)fp8;
- (BOOL)hasUnappliedChanges;
- (void)revertToInitialValues:(id)fp8;
- (id)_controllerKeys;
- (id)_keyValueBindingAccessPoints;
- (id)_modelAndProxyKeys;
- (id)values;
- (id)_singleValueForKey:(id)fp8;
- (id)_singleMutableArrayValueForKey:(id)fp8;
- (void)_setSingleValue:(id)fp8 forKey:(id)fp12;
- (void)_invokeSingleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;

@end

@interface NSDoubleClickActionBinder : NSActionBinder
{
}

+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)_enumerationBinding;
+ (id)_targetBinding;
+ (id)_enumeratedArgumentBindings:(unsigned int)fp8;
+ (id)bindingsForObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)_referenceBinding;
- (unsigned int)_argumentBindingCount;
- (BOOL)_targetBindingBound;
- (BOOL)bindingRunsAlerts:(id)fp8;

@end

@interface NSActionBinder : NSEditorBinder
{
    SEL _selector;
    struct __actionBinderFlags _actionBinderFlags;
}

+ (id)_pluginProtocol;
+ (id)_enumerationBinding;
+ (id)_targetBinding;
+ (id)_enumeratedArgumentBindings:(unsigned int)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (id)bindingCategory;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (unsigned int)_argumentBindingCount;
- (void)_connectionWasEstablished;
- (id)availableBindings;
- (BOOL)_targetBindingBound;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)bindingRunsAlerts:(id)fp8;
- (BOOL)canApplyValueTransformer:(id)fp8 toBinding:(id)fp12;
- (void)removeBinding:(id)fp8;
- (id)_referenceBinding;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (void)setSelector:(SEL)fp8;
- (SEL)selector;
- (void)setAllowsNullArgument:(BOOL)fp8 withBinding:(id)fp12;
- (BOOL)allowsNullArgumentWithBinding:(id)fp8;
- (void)setInvokesSeparatelyWithArrayObjects:(BOOL)fp8 withBinding:(id)fp12;
- (BOOL)invokesSeparatelyWithArrayObjectsWithBinding:(id)fp8;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 forBinding:(id)fp16;
- (BOOL)_targetAndArgumentsAcceptableForMode:(struct __NSKeyValueCodingControllerModeType)fp8;
- (BOOL)targetAndArgumentsAcceptable;
- (BOOL)targetAndArgumentsAcceptableAtIndex:(unsigned int)fp8;
- (BOOL)targetAndArgumentsAcceptableAtIndexPath:(id)fp8;
- (void)_executePerformAction;
- (void)_performActionWithCommitEditing:(id)fp8 didCommit:(BOOL)fp12 contextInfo:(id)fp16;
- (BOOL)_performActionWithCommitEditing;
- (void)performAction:(id)fp8;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateTableColumnDataCell:(id)fp8 forDisplayAtIndex:(unsigned int)fp12;

@end

@interface _NSStateMarker : NSObject <NSCopying>
{
    short _type;
    struct _NSMapTable *_placeholderRegistry;
    struct _NSMapTable *_cachedPlaceholderRegistry;
    NSColor *_textColor;
    unsigned long long _placeholderBindingsMask;
}

- (id)initWithType:(int)fp8;
- (void)dealloc;
- (void)finalize;
- (short)_type;
- (id)retain;
- (id)autorelease;
- (void)release;
- (id)copy;
- (unsigned int)_hash;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)valueForKey:(id)fp8;
- (id)description;
- (void)setDefaultTextColor:(id)fp8;
- (id)defaultTextColor;
- (void)setDefaultPlaceholder:(id)fp8 forBinding:(id)fp12 onObjectClass:(Class)fp16;
- (id)defaultPlaceholderForBinding:(id)fp8 onObjectClass:(Class)fp12;

@end

@interface NSArrayDetailBinder : NSObjectDetailBinder
{
    struct __arrayDetailBinderFlags _arrayDetailBinderFlags;
}

+ (id)binderClassesSuperseded;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (id)availableBindings;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (BOOL)_handlesSelectAll;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (void)setSelectsAllWhenSettingContent:(BOOL)fp8;
- (BOOL)selectsAllWhenSettingContent;
- (id)_referenceBinding;
- (BOOL)_canGuaranteeOrderOfContentObjects;
- (void)_selectAllContent:(id)fp8 inDetailcontroller:(id)fp12;
- (void)_refreshDetailContentInBackground:(BOOL)fp8;
- (void)refreshDetailContent;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (BOOL)_performArrayBinderOperation:(int)fp8 singleObject:(id)fp12 multipleObjects:(id)fp16 singleIndex:(unsigned int)fp20 multipleIndexes:(id)fp24 selectionMode:(int *)fp28;
- (BOOL)addObjectToMasterArrayRelationship:(id)fp8 selectionMode:(int *)fp12;
- (BOOL)addObjectsToMasterArrayRelationship:(id)fp8 selectionMode:(int *)fp12;
- (BOOL)insertObjectIntoMasterArrayRelationship:(id)fp8 atIndex:(unsigned int)fp12 selectionMode:(int *)fp16;
- (BOOL)insertObjectsIntoMasterArrayRelationship:(id)fp8 atIndexes:(id)fp12 selectionMode:(int *)fp16;
- (BOOL)removeObjectFromMasterArrayRelationshipAtIndex:(unsigned int)fp8 selectionMode:(int *)fp12;
- (BOOL)removeObjectsFromMasterArrayRelationshipAtIndexes:(id)fp8 selectionMode:(int *)fp12;

@end

@interface NSObjectDetailBinder : NSEditorBinder
{
    NSResponder *_errorPresenter;
    struct __objectDetailBinderFlags _objectDetailBinderFlags;
}

+ (void)initialize;
+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)_copyDetailsFromBinder:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (void)_notifyEditorStateChanged:(BOOL)fp8;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (void)setHandlesContentAsCompoundValue:(BOOL)fp8;
- (BOOL)handlesContentAsCompoundValue;
- (void)setDeletesObjectsOnRemove:(BOOL)fp8;
- (BOOL)deletesObjectsOnRemove;
- (id)_referenceBinding;
- (void)refreshDetailContent;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (BOOL)setMasterObjectRelationship:(id)fp8 refreshDetailContent:(BOOL)fp12;
- (BOOL)setMasterObjectRelationship:(id)fp8;
- (void)noteContentValueHasChanged;
- (void)_useErrorPresenter:(id)fp8;

@end

@interface NSMultipleSelectionBinder : NSSelectionBinder
{
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (BOOL)insertsNullPlaceholder;
- (id)availableBindings;
- (id)_referenceBinding;

@end

@interface NSSelectionBinder : NSValueBinder
{
    struct __selectionBinderFlags _selectionBinderFlags;
    id _modelObservingTracker;
}

+ (id)_pluginProtocol;
+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (id)bindingsForObject:(id)fp8;
- (void)_init;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)dealloc;
- (void)_copyDetailsFromBinder:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (BOOL)_isReferenceBinding:(id)fp8;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (void)setInsertsNullPlaceholder:(BOOL)fp8;
- (BOOL)insertsNullPlaceholder;
- (id)availableBindings;
- (BOOL)_analyzeContentBindingInSyncWithBinding:(id)fp8;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (BOOL)_observeKeyPathForBindingInfo:(id)fp8 registerOrUnregister:(BOOL)fp12;
- (id)_referenceBinding;
- (BOOL)_valueClassIsSortableWithBinding:(id)fp8;
- (id)_defaultSortDescriptorPrototypeKey;
- (id)_preferredPlaceholderForMarker:(id)fp8 onlyIfNotExplicitlySet:(BOOL)fp12;
- (id)preferredPlaceholderForMarker:(id)fp8;
- (id)contentValueKey;
- (id)contentObjectKey;
- (id)_valueForBindingWithoutResolve:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12;
- (void)_adjustObject:(id)fp8 mode:(struct __NSKeyValueCodingControllerModeType)fp12 observedController:(id)fp24 observedKeyPath:(id)fp28 context:(void *)fp32 editableState:(char *)fp36 adjustState:(char *)fp40;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (id)contentValueWithEditedMode:(struct __NSKeyValueCodingControllerModeType)fp8 contentIndex:(unsigned int)fp20;
- (id)contentObjectWithEditedMode:(struct __NSKeyValueCodingControllerModeType)fp8 contentIndex:(unsigned int)fp20;
- (unsigned int)contentCountWithEditedMode:(struct __NSKeyValueCodingControllerModeType)fp8;

@end

@interface NSNavSegmentSwitchControl : NSSegmentedControl
{
}

- (id)switchCell;
- (BOOL)becomeFirstResponder;

@end

@interface NSNavFilepathInputController : NSObject
{
    id _target;
    SEL _action;
    BOOL isUILoaded;
    NSTextField *_filepathInputTextField;
    NSTextField *_filepathLabel;
    NSButton *_okButton;
    NSMutableDictionary *_cachedUIStrings;
    NSSavePanel *_savePanel;
    SEL _sheetDidEndSelector;
    void *_sheetDidEndContextInfo;
}

- (id)_window;
- (void)_commonNavFilepathInputControllerInit;
- (void)dealloc;
- (void)finalize;
- (void)_cancelDelayedAutocomplete;
- (void)_scheduleDelayedAutocomplete;
- (id)init;
- (void)_updateUIToMatchCachedValues;
- (void)_loadUIIfNecessary;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setPrompt:(id)fp8;
- (id)prompt;
- (void)setTitle:(id)fp8;
- (id)title;
- (void)setFilepathLabel:(id)fp8;
- (id)filepathLabel;
- (void)_setCurrentInputFilepath:(id)fp8;
- (id)_currentInputFilepath;
- (id)filepath;
- (void)_setDefaultWindowKeyViewLoop;
- (void)_prepareToRunForSavePanel:(id)fp8 withFilepath:(id)fp12;
- (BOOL)isRunning;
- (void)beginSheetForSavePanel:(id)fp8 withFilepath:(id)fp12 didEndSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (int)runModalForSavePanel:(id)fp8 withFilepath:(id)fp12;
- (int)runModalForSavePanel:(id)fp8;
- (void)_stopGotoWithCode:(int)fp8;
- (void)ok:(id)fp8;
- (void)cancel:(id)fp8;
- (unsigned int)_simpleCompletePathWithPrefix:(id)fp8 intoString:(id *)fp12 caseSensitive:(BOOL)fp16 matchesIntoArray:(id *)fp20 filterTypes:(id)fp24;
- (int)_completePathWithPrefix:(id)fp8 intoString:(id *)fp12 matchesIntoArray:(id *)fp16;
- (void)doFileCompletion:(id)fp8 isAutoComplete:(BOOL)fp12 reverseCycle:(BOOL)fp16;
- (void)_doUserComplete;
- (BOOL)_shouldExecuteDelayedAutocomplete;
- (BOOL)_doDelayedAutocomplete;
- (BOOL)_handleTabKey:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (BOOL)control:(id)fp8 textShouldBeginEditing:(id)fp12;
- (void)controlTextDidChange:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;

@end

@interface NSNavSidebarScrollView : NSScrollView
{
    float _originalInset;
    struct __NSSVFlags _nssvFlags;
}

- (void)dealloc;
- (void)finalize;
- (void)awakeFromNib;
- (BOOL)isOpaque;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;

@end

@interface NSNavSidebarScrollView (NSLiveResizeOptimizations)
- (BOOL)preservesContentDuringLiveResize;
@end

@interface NSNavSplitView : NSSplitView
{
    SEL _doubleAction;
    id _target;
}

- (void)setDoubleAction:(SEL)fp8;
- (SEL)doubleAction;
- (void)setTarget:(id)fp8;
- (id)target;
- (BOOL)_tryToSendDoubleAction;
- (BOOL)preservesContentDuringLiveResize;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (void)mouseDown:(id)fp8;

@end

@interface NSNavNaughtDelegate : NSNavFileListDelegate
{
    NSNavNode *_currentDirectoryNode;
    NSArray *_selectedNodes;
}

- (void)dealloc;
- (void)loadAndRestoreCurrentBrowsingNodePath:(id)fp8 selectedNodes:(id)fp12;
- (void)setCurrentBrowsingNodePath:(id)fp8;
- (void)reloadChildrenForNode:(id)fp8;
- (id)visualRootNode;
- (id)currentDirectoryNode;
- (void)_setCurrentDirectoryNode:(id)fp8;
- (void)setCurrentDirectoryNode:(id)fp8;
- (void)sendSelectionChangedNotification;
- (void)_setSelectedNodes:(id)fp8;
- (id)selectedNodes;
- (BOOL)canChooseNode:(id)fp8;
- (BOOL)canHighlightNode:(id)fp8;
- (id)showNode:(id)fp8 inDirectory:(id)fp12 selectIfEnabled:(BOOL)fp16;
- (void)_debug;

@end

@interface NSNavNewFolderController : NSObject
{
    NSSavePanel *_savePanel;
    NSWindow *_window;
    NSTextField *_folderNameField;
    NSTextField *_errorMessage;
    NSButton *_cancelButton;
    NSButton *_okButton;
}

- (void)dealloc;
- (void)finalize;
- (id)folderPath;
- (void)_updateOkButtonEnabledStateAndErrorMessage;
- (void)controlTextDidChange:(id)fp8;
- (id)_defaultNewFolderName;
- (id)runModalForSavePanel:(id)fp8;
- (void)ok:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface NSNavSidebarItemRollover : NSObject
{
    NSWindow *_rolloverWindow;
    NSTextField *_rolloverTextField;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)setFont:(id)fp8;
- (void)setTextColor:(id)fp8;
- (void)setStringValue:(id)fp8;
- (void)tileForView:(id)fp8;
- (void)showRelativeToView:(id)fp8;
- (void)hide;

@end

@interface NSNavSidebarItemRolloverWindow : NSPanel
{
}

- (void)_clearEventMask;
- (void)orderFront:(id)fp8;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;

@end

@interface NSOpenGLPixelBuffer : NSObject
{
    struct _CGLPBufferObject *_pixelBufferAuxiliary;
    void *_reserved1;
    void *_reserved2;
}

- (id)initWithTextureTarget:(unsigned long)fp8 textureInternalFormat:(unsigned long)fp12 textureMaxMipMapLevel:(long)fp16 pixelsWide:(int)fp20 pixelsHigh:(int)fp24;
- (void)dealloc;
- (void)finalize;
- (int)pixelsWide;
- (int)pixelsHigh;
- (unsigned long)textureTarget;
- (unsigned long)textureInternalFormat;
- (long)textureMaxMipMapLevel;

@end

@interface NSOpenGLPixelBuffer (NSOpenGL_Private)
- (struct _CGLPBufferObject *)_pixelBufferAuxiliary;
@end

@interface NSSegmentedCell : NSActionCell
{
    NSMutableArray *_segmentItems;
    int _selectedSegment;
    int _keySegment;
    struct _NSRect _lastBounds;
    struct {
        unsigned int trackingMode:3;
        unsigned int trimmedLabels:1;
        unsigned int drawing:1;
        unsigned int style:2;
        unsigned int recalcToolTips:1;
        unsigned int reserved:24;
    } _seFlags;
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
+ (id)_labelCell;
+ (BOOL)_performKeyEquivalentOnAllCells:(id)fp8;
+ (BOOL)prefersTrackingUntilMouseUp;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)setSegmentCount:(int)fp8;
- (int)segmentCount;
- (void)setSelectedSegment:(int)fp8;
- (int)_trackingSegment;
- (int)selectedSegment;
- (BOOL)selectSegmentWithTag:(int)fp8;
- (int)indexOfSelectedItem;
- (int)_keySegment;
- (void)_setKeySegment:(int)fp8;
- (void)makeNextSegmentKey;
- (void)makePreviousSegmentKey;
- (BOOL)acceptsFirstResponder;
- (void)setTrackingMode:(int)fp8;
- (int)trackingMode;
- (void)setObjectValue:(id)fp8;
- (id)objectValue;
- (void)_setSegmentedCellStyle:(int)fp8;
- (void)setWidth:(float)fp8 forSegment:(int)fp12;
- (float)widthForSegment:(int)fp8;
- (void)setImage:(id)fp8 forSegment:(int)fp12;
- (id)imageForSegment:(int)fp8;
- (void)setLabel:(id)fp8 forSegment:(int)fp12;
- (id)labelForSegment:(int)fp8;
- (void)setSelected:(BOOL)fp8 forSegment:(int)fp12;
- (BOOL)isSelectedForSegment:(int)fp8;
- (void)setEnabled:(BOOL)fp8 forSegment:(int)fp12;
- (BOOL)isEnabledForSegment:(int)fp8;
- (void)setMenu:(id)fp8 forSegment:(int)fp12;
- (id)menuForSegment:(int)fp8;
- (void)setToolTip:(id)fp8 forSegment:(int)fp12;
- (id)toolTipForSegment:(int)fp8;
- (BOOL)_needsToolTipRecalc;
- (void)_setNeedsToolTipRecalc:(BOOL)fp8;
- (BOOL)_hasItemTooltips;
- (void)setTag:(int)fp8 forSegment:(int)fp12;
- (int)tagForSegment:(int)fp8;
- (void)setMenuIndicatorShown:(BOOL)fp8 forSegment:(int)fp12;
- (BOOL)isMenuIndicatorShownForSegment:(int)fp8;
- (void)setFont:(id)fp8;
- (void)setControlSize:(int)fp8;
- (void)setControlView:(id)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (struct _NSRect)_boundsForCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)_rectForSegment:(int)fp8 inFrame:(struct _NSRect)fp12;
- (void)_drawBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawSegment:(int)fp8 inFrame:(struct _NSRect)fp12 withView:(id)fp28;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)_selectHighlightedSegment;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)_sendActionFrom:(id)fp8;
- (void)_performClick:(id)fp8 ignoreMenus:(BOOL)fp12;
- (void)performClick:(id)fp8;
- (void)_calculateSelectedSegmentForPoint:(struct _NSPoint)fp8;
- (void)_trackSelectedItemMenu;
- (void)_displayDelayedMenu;
- (BOOL)_isTextured;
- (void)_removeAllToolTips;

@end

@interface NSSegmentItem : NSObject <NSCopying, NSCoding>
{
    float _width;
    NSImage *_image;
    NSString *_label;
    NSMenu *_menu;
    NSString *_toolTip;
    int _tag;
    struct {
        unsigned int needsRecalc:1;
        unsigned int selected:1;
        unsigned int disabled:1;
        unsigned int showMenuIndicator:1;
        unsigned int reserved:28;
    } _flags;
    float _fullWidth;
    float _shrinkage;
    struct _NSRect _imageRect;
    struct _NSRect _labelRect;
    struct _NSRect _menuIndRect;
    int _toolTipTag;
}

+ (void)initialize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)_setWidth:(float)fp8;
- (BOOL)_setImage:(id)fp8;
- (BOOL)_setLabel:(id)fp8;
- (BOOL)_setMenu:(id)fp8;
- (void)_setNeedsRecalc;
- (BOOL)_needsRecalc;
- (void)_recalcRectsForCell:(id)fp8;
- (float)_displayWidth;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;

@end

@interface NSSegmentedControl : NSControl
{
    unsigned int _reserved1;
    unsigned int _reserved2;
    unsigned int _reserved3;
    unsigned int _reserved4;
}

+ (void)initialize;
- (BOOL)isFlipped;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)moveLeft:(id)fp8;
- (void)moveRight:(id)fp8;
- (void)_windowChangedKeyState;
- (void)viewDidEndLiveResize;
- (void)setSegmentCount:(int)fp8;
- (int)segmentCount;
- (void)setSelectedSegment:(int)fp8;
- (int)selectedSegment;
- (BOOL)selectSegmentWithTag:(int)fp8;
- (int)indexOfSelectedItem;
- (void)setWidth:(float)fp8 forSegment:(int)fp12;
- (float)widthForSegment:(int)fp8;
- (void)setImage:(id)fp8 forSegment:(int)fp12;
- (id)imageForSegment:(int)fp8;
- (void)setLabel:(id)fp8 forSegment:(int)fp12;
- (id)labelForSegment:(int)fp8;
- (void)setMenu:(id)fp8 forSegment:(int)fp12;
- (id)menuForSegment:(int)fp8;
- (void)setSelected:(BOOL)fp8 forSegment:(int)fp12;
- (BOOL)isSelectedForSegment:(int)fp8;
- (void)setEnabled:(BOOL)fp8 forSegment:(int)fp12;
- (BOOL)isEnabledForSegment:(int)fp8;

@end

@interface NSFontEffectsBox : NSBox
{
    id _blurSlider;
    id _opacitySlider;
    id _radiusSlider;
    id _angleDial;
    id _mainControlsBox;
    id _shadowControlsBox;
    id _dividerImage;
    id _mainEffectsBox;
    id _angleLabel;
    id _effectsPopup;
    id _underlineButton;
    id _strikeButton;
    id _topDividerLine;
    id _bottomDividerLine;
    id _shadowToggleButton;
    id _textColorButton;
    id _documentColorButton;
    NSMutableDictionary *_attributesToAdd;
    NSMutableArray *_attributesToRemove;
    int _toggleShadow;
    double _shadowXOffset;
    double _shadowYOffset;
    int _shadowBlur;
    int _colorState;
    struct __feblags _febFlags;
}

- (void)awakeFromNib;
- (void)_changeTextColor:(id)fp8;
- (void)_changeDocumentColor:(id)fp8;
- (void)_changeShadowOpacity:(id)fp8;
- (void)_changeShadowAngle:(id)fp8;
- (void)_changeShadowBlur:(id)fp8;
- (void)frameDidChange:(id)fp8;
- (void)_openUnderlineMenu:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)_changeColorToColor:(id)fp8;
- (void)_orderFrontModalColorPanel;
- (void)_openStrikeMenu:(id)fp8;
- (id)convertAttributes:(id)fp8;
- (void)_setAttributes:(id)fp8 isMultiple:(BOOL)fp12;
- (void)_openEffectsButton:(id)fp8;
- (void)_toggleShadow:(id)fp8;
- (void *)carbonNotificationProc;
- (void)_sendCarbonNotificationForTag:(unsigned long)fp8 withValuePtr:(const void *)fp12 andSize:(unsigned long)fp16;
- (void)_sendCarbonNotificationFor:(unsigned long)fp8 tags:(const unsigned int *)fp12 withValuePtrs:(const void **)fp16 andSizes:(const unsigned int *)fp20;
- (void)_validateUnderline:(BOOL)fp8;
- (void)_validateStrikethrough:(BOOL)fp8;
- (void)_validateTextColor:(BOOL)fp8;
- (void)_validateDocumentColor:(BOOL)fp8;
- (void)_validateShadowEffect:(BOOL)fp8;

@end

@interface NSFontPanelEffectsSliderCell : NSSliderCell
{
}

- (BOOL)_usesCustomTrackImage;
- (void)drawBarInside:(struct _NSRect)fp8 flipped:(BOOL)fp24;
- (void)drawKnob:(struct _NSRect)fp8;

@end

@interface NSFontPanelEffectsImageView : NSImageView
{
}

- (BOOL)acceptsFirstResponder;

@end

@interface NSProgressIndicatorBinder : NSViewStateBinder
{
}

+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (BOOL)isBindingReadOnly:(id)fp8;
- (BOOL)_isBooleanBinding:(id)fp8;
- (Class)valueClassForBinding:(id)fp8;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;

@end

@interface NSSegmentedControlBinder : NSValueBinder
{
}

+ (id)bindingCategory;
+ (id)binderClassesSuperseded;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)_referenceBinding;
- (id)availableBindings;

@end

@interface NSNavSidebarItemView (NSNavSidbarItemViewAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)hitTest:(struct _NSPoint)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSNavSidebarView (NSNavSidbarViewAccessibility)
+ (BOOL)accessibilityIsSingleCelled;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (void)accessibilitySetSelectedChildrenAttribute:(id)fp8;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityDescriptionAttribute;
- (BOOL)accessibilityIsDescriptionAttributeSettable;
@end

@interface NSAccessibilitySegment : NSAccessibilityMockUIElement
{
    int _index;
}

+ (id)segmentWithIndex:(int)fp8 parent:(id)fp12;
- (id)initWithIndex:(int)fp8 parent:(id)fp12;
- (BOOL)isEqual:(id)fp8;
- (id)segmentedCell;
- (int)index;
- (id)accessibilityAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)_accessibilityPerformClickAction:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)fp8;

@end

@interface NSSegmentedCell (NSSegmentedCellAccessibility)
- (id)_accessibilitySegmentAtIndex:(int)fp8;
- (struct _NSRect)_accessibilityScreenRectForSegment:(int)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityValueAttribute;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (BOOL)accessibilityIsChildFocusable:(id)fp8;
- (void)accessibilitySetFocus:(id)fp8 forChild:(id)fp12;
- (id)accessibilityPositionOfChild:(id)fp8;
- (id)accessibilitySizeOfChild:(id)fp8;
- (struct _NSRect)accessibilityFocusRingBounds;
- (id)accessibilityHelpStringForChild:(id)fp8;
@end

@interface NSSearchFieldBinder : NSViewStateBinder
{
    struct __searchFieldBinderFlags _searchFieldBinderFlags;
    NSMutableDictionary *_predicateBindingTable;
    NSString *_selectedPredicateBinding;
    NSMenu *_searchMenuTemplate;
}

+ (id)bindingsForObject:(id)fp8;
+ (id)bindingCategory;
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)_enumeratedPredicateBindings:(unsigned int)fp8;
- (void)_countBindings;
- (void)addBinding:(id)fp8 toController:(id)fp12 withKeyPath:(id)fp16 valueTransformer:(id)fp20 options:(id)fp24;
- (void)removeBinding:(id)fp8;
- (id)availableBindings;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (id)_cellForObject;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (id)_predicateOptionPairForBinding:(id)fp8;
- (void)_setParameter:(id)fp8 forOption:(id)fp12 withBindingInfo:(id)fp16;
- (id)_optionsForBinding:(id)fp8 specifyOnlyIfDifferentFromDefault:(BOOL)fp12;
- (Class)valueClassForBinding:(id)fp8;
- (void)searchFieldCellOrControlDidClearRecents:(id)fp8;
- (void)performAction:(id)fp8;
- (id)searchMenuTemplate;
- (void)check:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (void)updateSearchFieldWithPredicate:(id)fp8;
- (void)_updateObject:(id)fp8 observedController:(id)fp12 observedKeyPath:(id)fp16 context:(void *)fp20;

@end

@interface _NSSearchFieldBinderPredicateOptionPair : NSObject
{
    NSString *_predicateString;
    NSString *_predicateName;
    NSPredicate *_predicate;
    _NSFilterPredicateVisitor *_visitor;
}

- (id)init;
- (void)dealloc;
- (id)predicateString;
- (void)setPredicateString:(id)fp8;
- (id)predicateName;
- (void)setPredicateName:(id)fp8;
- (id)predicate;
- (id)visitor;

@end

@interface _NSFilterPredicateVisitor : NSObject <NSPredicateVisitor>
{
    NSMutableArray *_predicateParts;
    unsigned int _predicatePartsCount;
    BOOL _didFirstVisit;
    BOOL _bail;
    unsigned int _visitingIndex;
    NSString *_substitutedValue;
}

- (id)initWithPredicate:(id)fp8;
- (void)dealloc;
- (void)visitPredicate:(id)fp8;
- (void)visitPredicateExpression:(id)fp8;
- (void)visitPredicateOperator:(id)fp8;
- (void)reset;
- (id)substitutedValueForPredicate:(id)fp8;
- (id)result;

@end

@interface NSNavSidebarItemActionButtonCell : NSButtonCell
{
    BOOL _mouseInside;
    int _actionType;
    NSImage *_normalSelectedImage;
    NSImage *_normalUnselectedImage;
    NSImage *_rolloverImage;
    NSImage *_pressedImage;
}

- (void)_loadImagesForActionType;
- (id)initForActionType:(int)fp8;
- (int)actionType;
- (void)dealloc;
- (void)finalize;
- (BOOL)_needsRedrawOnMouseInsideChange;
- (BOOL)_shouldShowRollovers;
- (void)_setImageForState;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)highlight:(BOOL)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)_needRedrawOnWindowChangedKeyState;

@end

@interface NSNavSidebarItemActionButton : NSButton
{
}

- (void)_adjustFrameSize;
- (id)initForActionType:(int)fp8;
- (int)actionType;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)init;
- (BOOL)isOpaque;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (id)_enclosingSidebarItem;
- (BOOL)isItemSelected;

@end

@interface NSNavSidebarItemActionButton (NSNavSidebarItemActionButtonAccessibility)
@end

@interface NSImageCacheView : NSView
{
    struct __CFDictionary *_threadEntries;
    BOOL isOpaque;
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (BOOL)lockFocusIfCanDrawInFrame:(struct _NSRect)fp8 flipped:(BOOL)fp24 clip:(BOOL)fp28;
- (BOOL)lockFocusIfCanDraw;
- (void)unlockFocus;
- (struct _NSRect)frame;
- (struct _NSRect)bounds;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)setOpaque:(BOOL)fp8;

@end

@interface NSATSUStyleObject : NSObject
{
    struct OpaqueATSUStyle *style;
    NSMutableArray *exclusives;
}

- (id)init;
- (id)initWithStyle:(struct OpaqueATSUStyle *)fp8;
- (void)dealloc;
- (void)finalize;
- (struct OpaqueATSUStyle *)style;
- (void)setFeatures:(unsigned short *)fp8 selectors:(unsigned short *)fp12 count:(unsigned long)fp16;
- (void)setVariations:(unsigned int *)fp8 Values:(int *)fp12 Count:(unsigned long)fp16;
- (void)addVariationDescriptions:(id)fp8;
- (void)addFeatureDescriptions:(id)fp8;
- (id)description;
- (void)mergeInVariations:(struct OpaqueATSUStyle *)fp8;
- (void)merge:(struct OpaqueATSUStyle *)fp8;
- (void)setAttributes:(unsigned int *)fp8 Values:(void *)fp12 ValueSizes:(unsigned int *)fp16 Count:(unsigned long)fp20;
- (void)mergeFontVariationsInto:(id)fp8;
- (void)mergeFontFeaturesInto:(id)fp8;
- (void)mergeAttributesInto:(id)fp8;
- (void)mergeStyleInto:(id)fp8;
- (id)exclusives;
- (void)typeIsNotExclusive:(unsigned short)fp8;
- (BOOL)isTypeNotExclusive:(unsigned short)fp8;
- (id)convertToDictionary;

@end

@interface NSFileLocationComponent : NSObject
{
    id _specifierOrStandardizedPath;
    BOOL _carbonCatalogInfoAndNameAreValid;
    unsigned int _carbonCatalogInfoMask;
    struct FSCatalogInfo _carbonCatalogInfo;
    struct HFSUniStr255 _carbonName;
    NSString *_name;
    NSFileLocationComponent *_containerComponent;
    NSString *_presentableName;
    NSAttributedString *_iconAsAttributedString;
}

+ (void)flushCaches;
+ (BOOL)_checkTrashiness;
+ (BOOL)_useFSRefsEvenOnPathBasedFileSystems;
+ (id)untrashedLeafFileLocationComponentWithLocator:(id)fp8;
- (id)_initWithFileSpecifierOrStandardizedPath:(id)fp8;
- (BOOL)_validateCarbonNameAndCatalogInfo;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)containerComponent;
- (id)presentableName;
- (id)iconAsAttributedString;

@end

@interface NSTextAttachmentCell (NSTextAttachmentCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityURLAttribute;
- (BOOL)accessibilityIsURLAttributeSettable;
@end

@interface NSTabWell (NSTabWellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityMarkerTypeAttribute;
- (BOOL)accessibilityIsMarkerTypeAttributeSettable;
- (id)accessibilityMarkerTypeDescriptionAttribute;
- (BOOL)accessibilityIsMarkerTypeDescriptionAttributeSettable;
- (id)accessibilityHitTest:(struct _NSPoint)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRoleAttribute;
@end

@interface NSSavePanel (_NSMatadorInternal)
- (void)_configureMDParts;
- (void)textFieldBeganOrEndedEditing:(id)fp8;
@end

@interface NSSavePanel (_NSMatadorSPI)
- (void)_setAutoAppendsMDAttributesToSavedFile:(BOOL)fp8;
- (BOOL)_autoAppendsMDAttributesToSavedFile;
- (id)_mdAttributes;
- (void)_setMDAttributes:(id)fp8;
@end

@interface NSObject (NSAccessibilityOverriddenAttributesArchiving)
- (void)accessibilityEncodeOverriddenAttributes:(id)fp8;
- (void)accessibilityDecodeOverriddenAttributes:(id)fp8;
@end

@interface NSObject (NSAccessibilityOverridingAttributes)
- (BOOL)accessibilitySetOverrideValue:(id)fp8 forAttribute:(id)fp12;
@end

@interface NSObject (NSAccessibilityOverriddenAttributes)
- (id)accessibilityOverriddenAttributes;
- (BOOL)accessibilitySupportsOverriddenAttributes;
@end

@interface NSSimpleHorizontalTypesetter : NSTypesetter
{
    NSLayoutManager *layoutManager;
    NSTextStorage *textStorage;
    unsigned int firstGlyphIndex;
    unsigned int curGlyphIndex;
    unsigned int firstInvalidGlyphIndex;
    struct _NSTypesetterGlyphInfo *glyphs;
    unsigned int *glyphCache;
    int *glyphInscriptionCache;
    unsigned int *glyphCharacterIndexCache;
    char *glyphElasticCache;
    struct _NSSize glyphLocationOffset;
    float curMaxGlyphLocation;
    unsigned int lastFixedGlyphIndex;
    unsigned int sizeOfGlyphInfo;
    unsigned int curGlyph;
    int curGlyphInscription;
    unsigned int curCharacterIndex;
    unsigned int previousGlyph;
    unsigned int previousBaseGlyphIndex;
    unsigned int previousBaseGlyph;
    NSFont *previousFont;
    float curGlyphOffset;
    BOOL curGlyphOffsetOutOfDate;
    BOOL curGlyphIsAControlGlyph;
    BOOL containerBreakAfterCurGlyph;
    BOOL wrapAfterCurGlyph;
    float curSpaceAfter;
    float previousSpaceAfter;
    int glyphLayoutMode;
    float curGlyphExtentAboveLocation;
    float curGlyphExtentBelowLocation;
    int curLayoutDirection;
    int curTextAlignment;
    NSFont *curFont;
    struct _NSRect curFontBoundingBox;
    BOOL curFontIsFixedPitch;
    struct _NSPoint curFontAdvancement;
    void *curFontPositionOfGlyphMethod;
    NSDictionary *attrs;
    struct _NSRange attrsRange;
    float curBaselineOffset;
    float curMinBaselineDistance;
    float curMaxBaselineDistance;
    int curSuperscript;
    NSParagraphStyle *curParaStyle;
    NSTextContainer *curContainer;
    unsigned int curContainerIndex;
    float curContainerLineFragmentPadding;
    BOOL curContainerIsSimpleRectangular;
    struct _NSSize curContainerSize;
    float curMinLineHeight;
    float curMaxLineHeight;
    NSString *textString;
    unsigned int capacityOfGlyphs;
    BOOL busy;
    struct {
        unsigned int _glyphPostLay:1;
        unsigned int _fragPostLay:1;
        unsigned int _useItal:1;
        unsigned int _curFontIsDefaultFace:1;
        unsigned int _tabState:2;
        unsigned int _tabType:2;
        unsigned int _tabEOL:1;
        unsigned int reserved:23;
    } _tsFlags;
    char *glyphBidiLevelCache;
    unsigned char curBidiLevel;
    unsigned char previousBidiLevel;
    unsigned char _reservedChars[2];
    unsigned int _reserved2[6];
}

+ (id)sharedInstance;
+ (id)new;
- (id)init;
- (struct _NSTypesetterGlyphInfo *)_glyphInfoAtIndex:(int)fp8;
- (void)release;
- (void)dealloc;
- (void)finalize;
- (BOOL)_typesetterIsBusy;
- (void)setFollowsItalicAngle:(BOOL)fp8;
- (BOOL)followsItalicAngle;
- (id)currentLayoutManager;
- (id)currentContainer;
- (id)currentParagraphStyle;
- (id)currentTextStorage;
- (struct _NSTypesetterGlyphInfo *)baseOfTypesetterGlyphInfo;
- (unsigned int)sizeOfTypesetterGlyphInfo;
- (unsigned int)capacityOfTypesetterGlyphInfo;
- (unsigned int)firstGlyphIndexOfCurrentLineFragment;
- (void)layoutGlyphsInLayoutManager:(id)fp8 startingAtGlyphIndex:(unsigned int)fp12 maxNumberOfLineFragments:(unsigned int)fp16 nextGlyphIndex:(unsigned int *)fp20;
- (void)_layoutGlyphsInLayoutManager:(id)fp8 startingAtGlyphIndex:(unsigned int)fp12 maxNumberOfLineFragments:(unsigned int)fp16 currentTextContainer:(id *)fp20 proposedRect:(struct _NSRect *)fp24 nextGlyphIndex:(unsigned int *)fp28;
- (unsigned int)growGlyphCaches:(unsigned int)fp8 fillGlyphInfo:(BOOL)fp12;
- (void)insertGlyph:(unsigned int)fp8 atGlyphIndex:(unsigned int)fp12 characterIndex:(unsigned int)fp16;
- (void)clearAttributesCache;
- (void)clearGlyphCache;
- (void)updateCurGlyphOffset;
- (struct _NSRect)normalizedRect:(struct _NSRect)fp8;
- (void)layoutTab;
- (int)layoutControlGlyphForLineFragment:(struct _NSRect)fp8;
- (float)baselineOffsetInLayoutManager:(id)fp8 glyphIndex:(unsigned int)fp12;
- (void)fillAttributesCache;
- (void)getAttributesForCharacterIndex:(unsigned int)fp8;
- (void)fullJustifyLineAtGlyphIndex:(unsigned int)fp8;
- (unsigned int)glyphIndexToBreakLineByHyphenatingWordAtIndex:(unsigned int)fp8;
- (unsigned int)glyphIndexToBreakLineByWordWrappingAtIndex:(unsigned int)fp8;
- (unsigned int)glyphIndexToBreakLineByClippingAtIndex:(unsigned int)fp8;
- (void)breakLineAtIndex:(unsigned int)fp8;
- (void)_setupBoundsForLineFragment:(struct _NSRect *)fp8;
- (int)layoutGlyphsInHorizontalLineFragment:(struct _NSRect *)fp8 baseline:(float *)fp12;

@end

@interface NSViewDynamicToolTipManager : NSObject
{
    NSView *_view;
    struct __CFRunLoopTimer *_monitorMovementTimerRef;
    struct _NSPoint _lastFixedMousePoint;
    struct _NSRect _lastFixedMousePointToolTipRect;
    double _lastFixedMousePointTime;
    float _displayToolTipDelay;
    BOOL _inQuickToolTipMode;
    BOOL _trackingDisabledInToolTipTrackingRect;
    struct _NSRect _toolTipTrackingRect;
    int _toolTipTrackingRectTag;
    int _visibleViewTrackingRectTag;
}

+ (void)_registerDynamicToolTipManagerInstance:(id)fp8;
+ (void)_unregisterDynamicToolTipManagerInstance:(id)fp8;
+ (id)_dynamicToolTipManagerInstances;
+ (void)abortAllToolTips;
- (void)_abortAndRestartTracking:(BOOL)fp8;
- (void)abortToolTip;
- (id)initWithView:(id)fp8;
- (void)_removeAllTrackingRects;
- (void)detatchFromView;
- (void)dealloc;
- (void)finalize;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)fp8 adding:(BOOL)fp12;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)_viewVisibleBoundsChanged;
- (void)_setupForWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)windowDidBecomeVisibleNotification:(id)fp8;
- (void)viewWillResetCursorRects;
- (void)viewDidEndLiveResize;
- (void)windowDidEnableToolTipCreationAndDisplay;
- (void)windowChangedKeyState;
- (struct _NSRect)dynamicToolTipRectAtPoint:(struct _NSPoint)fp8;
- (id)dynamicToolTipStringAtPoint:(struct _NSPoint)fp8 trackingRect:(struct _NSRect *)fp16;
- (id)dynamicToolTipRevealoverInfoAtPoint:(struct _NSPoint)fp8 trackingRect:(struct _NSRect *)fp16;
- (void)view:(id)fp8 customToolTip:(int)fp12 drawInView:(id)fp16 displayInfo:(id)fp20;
- (struct _NSRect)view:(id)fp8 customToolTip:(int)fp12 frameForToolTipWithDisplayInfo:(id)fp16;
- (BOOL)view:(id)fp8 customToolTip:(int)fp12 fadeOutAllowedForToolTipWithDisplayInfo:(id)fp16;
- (void)_cancelCurrentToolTipWindowImmediately:(BOOL)fp8;
- (BOOL)_canShowToolTip;
- (BOOL)_shouldTrack;
- (int)_displayToolTipIfNecessaryIgnoringTime:(BOOL)fp8;
- (BOOL)_shouldRestartMovementTracking;
- (void)_markMovementTrackingInfo;
- (void)_cancelMovementTrackingTimer;
- (void)_disabledTrackingInNeighborhoodOfMouse;
- (void)_continueMovementTracking;
- (void)_restartMovementTracking;
- (struct _NSPoint)_currentLocalMousePoint;

@end

@interface NSTableViewDynamicToolTipManager : NSViewDynamicToolTipManager
{
}

- (BOOL)_wantsToolTipAtColumn:(int)fp8 row:(int)fp12;
- (BOOL)_wantsRevealoverAtColumn:(int)fp8 row:(int)fp12;
- (id)_tooltipStringForCell:(id)fp8 column:(int)fp12 row:(int)fp16 point:(struct _NSPoint)fp20 trackingRect:(struct _NSRect *)fp28;
- (void)_getColumn:(int *)fp8 row:(int *)fp12 cell:(id *)fp16 cellFrame:(struct _NSRect *)fp20 toolTipRect:(struct _NSRect *)fp24 wantsToolTip:(char *)fp28 wantsRevealover:(char *)fp32 atPoint:(struct _NSPoint)fp36;
- (struct _NSRect)dynamicToolTipRectAtPoint:(struct _NSPoint)fp8;
- (id)dynamicToolTipStringAtPoint:(struct _NSPoint)fp8 trackingRect:(struct _NSRect *)fp16;
- (id)dynamicToolTipRevealoverInfoAtPoint:(struct _NSPoint)fp8 trackingRect:(struct _NSRect *)fp16;

@end

@interface NSHTMLWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSMutableData *_htmlData;
    NSMutableString *_bodyStr;
    NSFileWrapper *_fileWrapper;
    NSMutableDictionary *_subresources;
    NSMutableArray *_paraStyleStrings;
    NSMutableArray *_paraStyleArrays;
    NSMutableArray *_charStyleStrings;
    NSMutableArray *_charStyleArrays;
    NSMutableArray *_fontStrings;
    NSMutableArray *_tableStyleStrings;
    NSMutableArray *_tableCellStyleStrings;
    NSMutableArray *_blockStyleStrings;
    NSMutableDictionary *_fontNames;
    int _level;
    int _prefixSpaces;
    NSString *_textEncodingName;
    unsigned int _characterEncoding;
    NSURL *_outputBaseURL;
    id _resourceHandler;
    unsigned int _excludedElements1;
    unsigned int _excludedElements2;
    BOOL _interchangeNewline;
    BOOL _noDefaultFonts;
    BOOL _tabsToSpaces;
    BOOL _coalesceTabSpans;
    BOOL _usedTabSpan;
}

- (id)_webKitBundle;
- (void)_loadWebKit;
- (Class)_webArchiveClass;
- (Class)_webResourceClass;
- (id)initWithAttributedString:(id)fp8;
- (void)dealloc;
- (void)setDocumentAttributes:(id)fp8;
- (id)_prefix;
- (id)_prefixUp;
- (id)_prefixDown;
- (unsigned int)_spanClassForAttributes:(id)fp8 inParagraphClass:(unsigned int)fp12 spanClass:(unsigned int)fp16 flags:(unsigned int *)fp20;
- (id)_defaultValueForAttribute:(id)fp8 range:(struct _NSRange)fp12;
- (unsigned int)_paragraphClassforParagraphStyle:(id)fp8 range:(struct _NSRange)fp12 isEmpty:(BOOL)fp20 isCompletelyEmpty:(BOOL)fp24 headerString:(id *)fp28 alignmentString:(id *)fp32 directionString:(id *)fp36;
- (void)_writeDocumentProperty:(id)fp8 value:(id)fp12 toString:(id)fp16;
- (void)_writeDocumentPropertiesToString:(id)fp8;
- (void)_closeFlags:(unsigned int)fp8 openFlags:(unsigned int)fp12 inString:(id)fp16;
- (unsigned int)_blockClassForBlock:(id)fp8;
- (void)_openBlocksForParagraphStyle:(id)fp8 atIndex:(unsigned int)fp12 inString:(id)fp16;
- (BOOL)_closeBlocksForParagraphStyle:(id)fp8 atIndex:(unsigned int)fp12 inString:(id)fp16;
- (void)_openListsForParagraphStyle:(id)fp8 atIndex:(unsigned int)fp12 inString:(id)fp16;
- (BOOL)_closeListsForParagraphStyle:(id)fp8 atIndex:(unsigned int)fp12 inString:(id)fp16;
- (void)_appendAttachment:(id)fp8 atIndex:(unsigned int)fp12 toString:(id)fp16;
- (BOOL)_isStrictByParsingExcludedElements;
- (void)_generateHTML;
- (id)HTMLData;
- (id)HTMLFileWrapper;
- (id)subresources;
- (id)webArchive;
- (id)webArchiveData;
- (void)readDocumentFragment:(id)fp8;
- (id)documentFragmentForDocument:(id)fp8;

@end

@interface NSHTMLReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_data;
    NSURL *_baseURL;
    NSDictionary *_options;
    WebView *_webView;
    id _webDelegate;
    DOMDocument *_document;
    DOMRange *_domRange;
    WebDataSource *_dataSource;
    NSString *_standardFontFamily;
    float _textSizeMultiplier;
    float _webViewTextSizeMultiplier;
    float _defaultTabInterval;
    float _defaultFontSize;
    float _minimumFontSize;
    NSMutableArray *_textLists;
    NSMutableArray *_textBlocks;
    NSMutableArray *_textTables;
    NSMutableArray *_textTableSpacings;
    NSMutableArray *_textTablePaddings;
    NSMutableArray *_textTableRows;
    NSMutableArray *_textTableRowArrays;
    NSMutableArray *_textTableRowBackgroundColors;
    NSMutableDictionary *_computedStylesForElements;
    NSMutableDictionary *_specifiedStylesForElements;
    NSMutableDictionary *_stringsForNodes;
    NSMutableDictionary *_floatsForNodes;
    NSMutableDictionary *_colorsForNodes;
    NSMutableDictionary *_attributesForElements;
    NSMutableDictionary *_elementIsBlockLevel;
    int _domRangeStartIndex;
    int _indexingLimit;
    int _errorCode;
    int _quoteLevel;
    struct {
        unsigned int isSoft:1;
        unsigned int reachedEnd:1;
        unsigned int isIndexing:1;
        unsigned int isTesting:1;
        unsigned int hasTrailingNewline:1;
        unsigned int pad:27;
    } _flags;
}

+ (id)defaultParagraphStyle;
- (Class)_htmlDocumentClass;
- (id)_webKitBundle;
- (void)_loadWebKit;
- (Class)_webViewClass;
- (Class)_webArchiveClass;
- (id)_webPreferences;
- (id)_childrenForNode:(id)fp8;
- (id)_computedStyleForElement:(id)fp8;
- (id)_specifiedStyleForElement:(id)fp8;
- (id)_computedStringForNode:(id)fp8 property:(id)fp12;
- (id)_stringForNode:(id)fp8 property:(id)fp12;
- (BOOL)_getComputedFloat:(float *)fp8 forNode:(id)fp12 property:(id)fp16;
- (BOOL)_getFloat:(float *)fp8 forNode:(id)fp12 property:(id)fp16;
- (BOOL)_elementIsBlockLevel:(id)fp8;
- (BOOL)_elementHasOwnBackgroundColor:(id)fp8;
- (id)_blockLevelElementForNode:(id)fp8;
- (id)_computedColorForNode:(id)fp8 property:(id)fp12;
- (id)_colorForNode:(id)fp8 property:(id)fp12;
- (id)_computedAttributesForElement:(id)fp8;
- (id)_attributesForElement:(id)fp8;
- (void)_newParagraphForElement:(id)fp8 tag:(id)fp12 allowEmpty:(BOOL)fp16 suppressTrailingSpace:(BOOL)fp20;
- (void)_newLineForElement:(id)fp8;
- (BOOL)_addAttachmentForElement:(id)fp8 URL:(id)fp12 needsParagraph:(BOOL)fp16 usePlaceholder:(BOOL)fp20;
- (void)_addQuoteForElement:(id)fp8 opening:(BOOL)fp12 level:(int)fp16;
- (void)_fillInBlock:(id)fp8 forElement:(id)fp12 backgroundColor:(id)fp16 extraMargin:(float)fp20 extraPadding:(float)fp24 isTable:(BOOL)fp28;
- (void)_processMetaElementWithName:(id)fp8 content:(id)fp12;
- (void)_processHeadElement:(id)fp8;
- (BOOL)_enterElement:(id)fp8 tag:(id)fp12 display:(id)fp16 embedded:(BOOL)fp20;
- (BOOL)_processElement:(id)fp8 tag:(id)fp12 display:(id)fp16 depth:(int)fp20;
- (void)_addMarkersToList:(id)fp8 range:(struct _NSRange)fp12;
- (void)_exitElement:(id)fp8 tag:(id)fp12 display:(id)fp16 startIndex:(unsigned int)fp20;
- (void)_processText:(id)fp8;
- (void)_traverseNode:(id)fp8 depth:(int)fp12 embedded:(BOOL)fp16;
- (void)_parseNode:(id)fp8;
- (void)_adjustTrailingNewline;
- (void)_loadUsingWebKit;
- (void)_loadFromDOMRange;
- (void)_newParagraphForLibXML2ElementNode:(struct _xmlNode *)fp8 tag:(id)fp12 allowEmpty:(BOOL)fp16 suppressTrailingSpace:(BOOL)fp20;
- (void)_newLineForLibXML2ElementNode:(struct _xmlNode *)fp8;
- (void)_addQuoteForLibXML2ElementNode:(struct _xmlNode *)fp8 opening:(BOOL)fp12 level:(int)fp16;
- (void)_processLibXML2TitleNode:(struct _xmlNode *)fp8;
- (void)_processLibXML2MetaNode:(struct _xmlNode *)fp8;
- (void)_processLibXML2HeadElementNode:(struct _xmlNode *)fp8;
- (BOOL)_enterLibXML2ElementNode:(struct _xmlNode *)fp8 tag:(id)fp12;
- (BOOL)_processLibXML2ElementNode:(struct _xmlNode *)fp8 tag:(id)fp12;
- (void)_exitLibXML2ElementNode:(struct _xmlNode *)fp8 tag:(id)fp12 startIndex:(unsigned int)fp16;
- (void)_processLibXML2TextNode:(struct _xmlNode *)fp8 content:(id)fp12;
- (void)_traverseLibXML2Node:(struct _xmlNode *)fp8 depth:(int)fp12;
- (void)_parseLibXML2Node:(struct _xmlNode *)fp8;
- (void)_loadUsingLibXML2;
- (void)_loadUsingHTMLDisplay;
- (void)_load;
- (void)dealloc;
- (id)initWithData:(id)fp8 options:(id)fp12;
- (id)initWithPath:(id)fp8 options:(id)fp12;
- (id)initWithDOMRange:(id)fp8;
- (id)attributedString;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)fp8;

@end

@interface NSHTMLWebDelegate : NSObject
{
    BOOL _loadDidFinish;
    BOOL _loadDidSucceed;
}

- (id)init;
- (BOOL)loadDidFinish;
- (BOOL)loadDidSucceed;
- (void)webView:(id)fp8 didStartProvisionalLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 resource:(id)fp12 didReceiveAuthenticationChallenge:(id)fp16 fromDataSource:(id)fp20;
- (void)webView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;
- (void)webView:(id)fp8 resource:(id)fp12 didFailLoadingWithError:(id)fp16 fromDataSource:(id)fp20;
- (void)webView:(id)fp8 decidePolicyForMIMEType:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)wakeup:(id)fp8;

@end

@interface NSAccessibilityTableHeaderCellProxy : NSAccessibilityReparentingCellProxy
{
}

- (void)accessibilityPerformAction:(id)fp8;

@end

@interface NSTableHeaderCell (NSTableHeaderCellAccessibility)
- (BOOL)accessibilityIsSortButton;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilitySortDirectionAttribute;
- (BOOL)accessibilityIsSortDirectionAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (id)accessibilityElementWithParent:(id)fp8;
@end

@interface NSTextTable : NSTextBlock
{
    unsigned int _numCols;
    unsigned int _tableFlags;
    id _lcache;
    void *_tablePrimary;
    void *_tableSecondary;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_takeValuesFromTextBlock:(id)fp8;
- (void)setNumberOfColumns:(unsigned int)fp8;
- (unsigned int)numberOfColumns;
- (BOOL)collapsesBorders;
- (void)setCollapsesBorders:(BOOL)fp8;
- (BOOL)hidesEmptyCells;
- (void)setHidesEmptyCells:(BOOL)fp8;
- (int)layoutAlgorithm;
- (void)setLayoutAlgorithm:(int)fp8;
- (unsigned int)_tableFlags;
- (void)_setTableFlags:(unsigned int)fp8;
- (id)_rowArrayForBlock:(id)fp8 atIndex:(unsigned int)fp12 text:(id)fp16 layoutManager:(id)fp20 containerWidth:(float)fp24 withRepetitions:(BOOL)fp28 collapseBorders:(BOOL)fp32 rowCharRange:(struct _NSRange *)fp36 indexInRow:(unsigned int *)fp40 startingRow:(int *)fp44 startingColumn:(int *)fp48 previousRowBlockHelper:(id *)fp52;
- (id)_descriptionAtIndex:(unsigned int)fp8 text:(id)fp12;
- (struct _NSRect)rectForBlock:(id)fp8 layoutAtPoint:(struct _NSPoint)fp12 inRect:(struct _NSRect)fp20 textContainer:(id)fp36 characterRange:(struct _NSRange)fp40;
- (struct _NSRect)_contentRectForCharRange:(struct _NSRange)fp8 textContainer:(id)fp16;
- (struct _NSRect)boundsRectForBlock:(id)fp8 contentRect:(struct _NSRect)fp12 inRect:(struct _NSRect)fp28 textContainer:(id)fp44 characterRange:(struct _NSRange)fp48;
- (void)drawBackgroundForBlock:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28 characterRange:(struct _NSRange)fp32 layoutManager:(id)fp40;

@end

@interface NSTextTableBlock : NSTextBlock
{
    NSTextTable *_table;
    int _rowNum;
    int _colNum;
    int _rowSpan;
    int _colSpan;
    void *_tableBlockPrimary;
    void *_tableBlockSecondary;
}

+ (void)initialize;
- (id)initWithTable:(id)fp8 startingRow:(int)fp12 rowSpan:(int)fp16 startingColumn:(int)fp20 columnSpan:(int)fp24;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)table;
- (int)startingRow;
- (int)rowSpan;
- (int)startingColumn;
- (int)columnSpan;
- (void)_setRowSpan:(int)fp8;
- (void)_setColumnSpan:(int)fp8;
- (struct _NSRect)rectForLayoutAtPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 textContainer:(id)fp32 characterRange:(struct _NSRange)fp36;
- (struct _NSRect)boundsRectForContentRect:(struct _NSRect)fp8 inRect:(struct _NSRect)fp24 textContainer:(id)fp40 characterRange:(struct _NSRange)fp44;
- (void)drawBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterRange:(struct _NSRange)fp28 layoutManager:(id)fp36;

@end

@interface NSTextBlock : NSObject <NSCoding, NSCopying>
{
    void *_propVals;
    unsigned int _propMask;
    unsigned int _typeMask;
    id _primParamVal;
    id _otherParamVals;
    void *_blockPrimary;
    void *_blockSecondary;
}

+ (void)initialize;
- (id)init;
- (void)_createFloatStorage;
- (void)_destroyFloatStorage;
- (void)dealloc;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_setValue:(float)fp8 type:(int)fp12 forParameter:(unsigned int)fp16;
- (float)_valueForParameter:(unsigned int)fp8;
- (int)_valueTypeForParameter:(unsigned int)fp8;
- (void)_takeValuesFromTextBlock:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setValue:(float)fp8 type:(int)fp12 forDimension:(int)fp16;
- (float)valueForDimension:(int)fp8;
- (int)valueTypeForDimension:(int)fp8;
- (void)setContentWidth:(float)fp8 type:(int)fp12;
- (float)contentWidth;
- (int)contentWidthValueType;
- (void)setWidth:(float)fp8 type:(int)fp12 forLayer:(int)fp16 edge:(int)fp20;
- (float)widthForLayer:(int)fp8 edge:(int)fp12;
- (int)widthValueTypeForLayer:(int)fp8 edge:(int)fp12;
- (void)setWidth:(float)fp8 type:(int)fp12 forLayer:(int)fp16;
- (void)setVerticalAlignment:(int)fp8;
- (int)verticalAlignment;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (void)setBorderColor:(id)fp8 forEdge:(int)fp12;
- (id)borderColorForEdge:(int)fp8;
- (void)setBorderColor:(id)fp8;
- (struct _NSRect)rectForLayoutAtPoint:(struct _NSPoint)fp8 inRect:(struct _NSRect)fp16 textContainer:(id)fp32 characterRange:(struct _NSRange)fp36;
- (struct _NSRect)boundsRectForContentRect:(struct _NSRect)fp8 inRect:(struct _NSRect)fp24 textContainer:(id)fp40 characterRange:(struct _NSRange)fp44;
- (void)drawBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterRange:(struct _NSRange)fp28 layoutManager:(id)fp36;
- (id)_attributeDescription;

@end

@interface NSTextBlockLayoutHelper : NSObject
{
    NSTextTableBlock *_block;
    NSLayoutManager *_layoutManager;
    NSAttributedString *_text;
    struct _NSRange _charRange;
    struct _NSRange _glyphRange;
    struct _NSRect _layoutRect;
    struct _NSRect _boundsRect;
    float _lMargin;
    float _lBorder;
    float _lPadding;
    float _tMargin;
    float _tBorder;
    float _tPadding;
    float _width;
    float _height;
    float _rPadding;
    float _rBorder;
    float _rMargin;
    float _bPadding;
    float _bBorder;
    float _bMargin;
}

- (id)initWithTextBlock:(id)fp8 charRange:(struct _NSRange)fp12 glyphRange:(struct _NSRange)fp20 layoutRect:(struct _NSRect)fp28 boundsRect:(struct _NSRect)fp44 text:(id)fp60 layoutManager:(id)fp64 containerWidth:(float)fp68 allowMargins:(BOOL)fp72 collapseBorders:(BOOL)fp76 allowPadding:(BOOL)fp80;
- (id)initWithTextBlock:(id)fp8 charRange:(struct _NSRange)fp12 text:(id)fp20 layoutManager:(id)fp24 containerWidth:(float)fp28 collapseBorders:(BOOL)fp32;
- (id)initWithTextBlock:(id)fp8 charIndex:(unsigned int)fp12 text:(id)fp16 layoutManager:(id)fp20 containerWidth:(float)fp24 collapseBorders:(BOOL)fp28;
- (id)initWithTextTable:(id)fp8 charIndex:(unsigned int)fp12 text:(id)fp16 layoutManager:(id)fp20 containerWidth:(float)fp24 collapseBorders:(BOOL)fp28;
- (id)description;
- (void)dealloc;

@end

@interface NSTextList : NSObject <NSCoding, NSCopying>
{
    NSString *_markerFormat;
    unsigned int _listFlags;
    void *_listPrimary;
    void *_listSecondary;
}

+ (void)initialize;
- (id)initWithMarkerFormat:(id)fp8 options:(unsigned int)fp12;
- (void)dealloc;
- (id)markerFormat;
- (unsigned int)listOptions;
- (unsigned int)options;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)description;
- (id)_markerForMarkerFormat:(id)fp8 itemNumber:(int)fp12 isNumbered:(char *)fp16 substitutionStart:(unsigned int *)fp20 end:(unsigned int *)fp24;
- (id)markerForItemNumber:(int)fp8;
- (BOOL)_isOrdered;
- (id)_markerPrefix;
- (id)_unaffixedMarkerFormat;
- (id)_unaffixedMarkerForItemNumber:(int)fp8;
- (id)_markerSuffix;
- (id)_markerAtIndex:(unsigned int)fp8 inText:(id)fp12;

@end

@interface _NSTableRowHeightStorage : NSObject
{
    NSTableView *_tableView;
    struct _NSRect _lastCachedRect;
    int _lastCachedRectRowIndex;
    float _tableHeight;
    int _minBucketSize;
    int _heightBucketArrayCount;
    int _heightBucketArraySize;
    struct __NSRowHeightBucket *_heightBucketArray;
    struct __rcFlags _rcFlags;
}

- (id)_debugHeightBucketArrayDescription;
- (id)initWithTableView:(id)fp8;
- (void)dealloc;
- (struct __NSRowHeightBucketLocation)_getBucketForSeekingToRow:(int)fp8;
- (struct __NSRowHeightBucketLocation)_getBucketForSeekingToPoint:(struct _NSPoint)fp8;
- (struct __NSRowHeightBucketLocation)_getBucketLocationForBucket:(int)fp8;
- (void)_hintedGetBucketIndex:(int *)fp8 bucketFirstRowIndex:(int *)fp12 containingRowIndex:(int)fp16;
- (void)_sizeHeightBucket:(struct __NSRowHeightBucket **)fp8 withSize:(int *)fp12 toFitSize:(int)fp16;
- (void)_shiftBucketDataFromIndex:(int)fp8 by:(int)fp12 insertionData:(struct __NSRowHeightBucket *)fp16;
- (void)_cacheRow:(int)fp8 rect:(struct _NSRect)fp12;
- (void)_cacheRowHeightsIntoBucket:(struct __NSRowHeightBucket *)fp8 bucketFirstRowIndex:(int)fp12 lastCacheableRowIndex:(int)fp16;
- (void)_recomputeBucketIndex:(int *)fp8 bucketFirstRowIndex:(int *)fp12;
- (BOOL)_fastGetCachedRect:(struct _NSRect *)fp8 forRow:(int)fp12;
- (void)_convert:(int)fp8 row:(int *)fp12 point:(struct _NSPoint *)fp16 cacheHint:(BOOL)fp20;
- (struct _NSPoint)_computeOriginForRow:(int)fp8 cacheHint:(BOOL)fp12;
- (struct _NSRect)computeRectOfRow:(int)fp8 cacheHint:(BOOL)fp12;
- (int)computeRowAtPoint:(struct _NSPoint)fp8 cacheHint:(BOOL)fp16;
- (float)computeTableHeight;
- (void)_invalidateCachedRect;
- (void)createAndCacheRowHeightSumsIfNecessary;
- (void)invalidateCacheAndStorage;
- (void)beginLayoutChange;
- (void)endLayoutChange;
- (void)noteHeightOfRowsWithIndexesChanged:(id)fp8;
- (void)insertRows:(int)fp8 atIndex:(int)fp12;
- (void)deleteRows:(int)fp8 atIndex:(int)fp12;

@end

@interface NSLevelIndicatorCell : NSActionCell
{
    double _value;
    double _minValue;
    double _maxValue;
    double _warningValue;
    double _criticalValue;
    int _numberOfTickMarks;
    int _numberOfMajorTickMarks;
    struct {
        unsigned int indicatorStyle:4;
        unsigned int tickMarkPosition:1;
        unsigned int reserved:27;
    } _liFlags;
    struct _NSRect _cellFrame;
    int _reserved1;
    int _reserved2;
    int _reserved3;
    int _reserved4;
}

+ (void)initialize;
- (id)initWithLevelIndicatorStyle:(int)fp8;
- (int)levelIndicatorStyle;
- (void)setLevelIndicatorStyle:(int)fp8;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (double)warningValue;
- (void)setWarningValue:(double)fp8;
- (double)criticalValue;
- (void)setCriticalValue:(double)fp8;
- (void)setTickMarkPosition:(int)fp8;
- (int)tickMarkPosition;
- (void)setNumberOfTickMarks:(int)fp8;
- (int)numberOfTickMarks;
- (void)setNumberOfMajorTickMarks:(int)fp8;
- (int)numberOfMajorTickMarks;
- (struct _NSRect)rectOfTickMarkAtIndex:(int)fp8;
- (double)tickMarkValueAtIndex:(int)fp8;
- (id)stringValue;
- (void)setStringValue:(id)fp8;
- (id)objectValue;
- (void)setObjectValue:(id)fp8;
- (int)intValue;
- (void)setIntValue:(int)fp8;
- (float)floatValue;
- (void)setFloatValue:(float)fp8;
- (double)doubleValue;
- (void)setDoubleValue:(double)fp8;
- (BOOL)isOpaque;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)keyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)setImage:(id)fp8;

@end

@interface NSLevelIndicatorCell (NSPrivate)
- (void)_drawRelevancyWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawContinuousCapacityWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawDiscreteCapacityWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawRatingWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)_drawTickMarksWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSSize)_rankIndicatorSize;
- (void)_updateTrackingValueForPoint:(struct _NSPoint)fp8;
@end

@interface NSDatePicker : NSControl
{
}

+ (void)initialize;
- (id)initWithFrame:(struct _NSRect)fp8;
- (int)datePickerStyle;
- (void)setDatePickerStyle:(int)fp8;
- (BOOL)isBezeled;
- (void)setBezeled:(BOOL)fp8;
- (BOOL)isBordered;
- (void)setBordered:(BOOL)fp8;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)fp8;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (id)textColor;
- (void)setTextColor:(id)fp8;
- (int)datePickerMode;
- (void)setDatePickerMode:(int)fp8;
- (unsigned int)datePickerElements;
- (void)setDatePickerElements:(unsigned int)fp8;
- (id)calendar;
- (void)setCalendar:(id)fp8;
- (id)locale;
- (void)setLocale:(id)fp8;
- (id)timeZone;
- (void)setTimeZone:(id)fp8;
- (id)dateValue;
- (void)setDateValue:(id)fp8;
- (double)timeInterval;
- (void)setTimeInterval:(double)fp8;
- (id)minDate;
- (void)setMinDate:(id)fp8;
- (id)maxDate;
- (void)setMaxDate:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)isOpaque;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)removeFromSuperview;

@end

@interface _NSDatePickerCellSubfield : NSObject <NSCopying>
{
    int _element;
    struct _NSRect _frame;
    NSString *_dateFormat;
    NSString *_stringValue;
}

- (id)initWithElement:(int)fp8 frame:(struct _NSRect)fp12 dateFormat:(id)fp28 stringValue:(id)fp32;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (int)element;
- (struct _NSRect)frame;
- (id)dateFormat;
- (id)stringValue;
- (void)setStringValue:(id)fp8;
- (void)adjustFrameOriginX:(float)fp8;

@end

@interface NSDatePickerCell : NSActionCell
{
    double _timeInterval;
    NSDate *_minDate;
    NSDate *_maxDate;
    struct __dateCellFlags _dcFlags;
    id _delegate;
    NSCalendar *_calendar;
    NSLocale *_locale;
    NSTimeZone *_timeZone;
    NSColor *_backgroundColor;
    NSColor *_textColor;
    int _indexOfSelectedSubfield;
    int _displayedYear;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
}

+ (void)_updateInstancesForDatePreferencesChange;
+ (void)_datePreferencesChanged:(id)fp8;
+ (void)initialize;
- (void)_updateInstancesForDatePreferencesChange;
- (void)_registerInstance;
- (void)_unregisterInstance;
- (id)init;
- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setEnabled:(BOOL)fp8;
- (int)datePickerStyle;
- (void)setDatePickerStyle:(int)fp8;
- (BOOL)drawsBackground;
- (void)setDrawsBackground:(BOOL)fp8;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (id)textColor;
- (void)setTextColor:(id)fp8;
- (void)setFont:(id)fp8;
- (int)datePickerMode;
- (void)setDatePickerMode:(int)fp8;
- (unsigned int)datePickerElements;
- (void)setDatePickerElements:(unsigned int)fp8;
- (id)calendar;
- (void)setCalendar:(id)fp8;
- (id)locale;
- (void)setLocale:(id)fp8;
- (id)timeZone;
- (void)setTimeZone:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (id)dateValue;
- (void)setDateValue:(id)fp8;
- (double)timeInterval;
- (void)setTimeInterval:(double)fp8;
- (id)minDate;
- (void)setMinDate:(id)fp8;
- (id)maxDate;
- (void)setMaxDate:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (struct _NSSize)cellSize;
- (void)setAlignment:(int)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)keyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;

@end

@interface NSDatePickerCell (NSAnalogClockDatePickerInternal)
- (void)_drawAnalogClockWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_analogClockTrackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
@end

@interface NSDatePickerCell (NSClockAndCalendarDatePickerInternal)
+ (id)_calendarHeaderFont;
- (int)_calendarFirstWeekday;
- (id)_calendarDayNamesStringForFirstWeekday:(int)fp8;
- (id)_calendarContentAttributedStringWithSelectedDay:(int)fp8 today:(int)fp12;
- (void)_clockAndCalendarFillDayCell:(int)fp8 withColor:(id)fp12 inFrame:(struct _NSRect)fp16;
- (void)_drawClockAndCalendarWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSSize)_clockAndCalendarCellSize;
- (void)_clockAndCalendarGetClockFrame:(struct _NSRect *)fp8 calendarFrame:(struct _NSRect *)fp12 retreatMonthButtonCellFrame:(struct _NSRect *)fp16 advanceMonthButtonCellFrame:(struct _NSRect *)fp20 returnToHomeMonthButtonCellFrame:(struct _NSRect *)fp24 forDatePickerCellFrame:(struct _NSRect)fp28;
- (BOOL)_clockAndCalendarTrackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)_clockAndCalendarKeyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (id)_clockAndCalendarRetreatMonthButtonCell;
- (id)_clockAndCalendarAdvanceMonthButtonCell;
- (id)_clockAndCalendarReturnToHomeMonthButtonCell;
- (void)_clockAndCalendarRetreatMonth:(id)fp8;
- (void)_clockAndCalendarAdvanceMonth:(id)fp8;
- (void)_clockAndCalendarReturnToHomeMonth:(id)fp8;
- (void)_clockAndCalendarTakeDisplayedMonthFromDateValue;
@end

@interface NSDatePickerCell (NSTextFieldWithStepperDatePickerInternal)
- (void)_drawTextFieldWithStepperWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)_hasFocusRingInView:(id)fp8;
- (BOOL)_shouldShowFocusRingInView:(id)fp8;
- (void)_adjustLayoutForTextAreaFrame:(struct _NSRect)fp8;
- (struct _NSSize)_desiredTextAreaSize;
- (void)_getTextAreaFrame:(struct _NSRect *)fp8 stepperCellFrame:(struct _NSRect *)fp12 forDatePickerCellFrame:(struct _NSRect)fp16;
- (int)_indexOfSubfieldAtPoint:(struct _NSPoint)fp8 inFrame:(struct _NSRect)fp16;
- (struct _NSSize)_textFieldWithStepperCellSize;
- (void)_createSubfields;
- (void)_addEditableSubfieldForElement:(int)fp8 dateFormat:(id)fp12;
- (void)_addStaticSubfieldWithString:(id)fp8;
- (void)_addSubfieldForElement:(int)fp8 withDateFormat:(id)fp12 stringValue:(id)fp16 alternateStringValue:(id)fp20;
- (void)_addSubfieldsForICUDateFormatString:(id)fp8;
- (id)_stringForDatePickerElement:(int)fp8 usingDateFormat:(id)fp12;
- (void)_updateSubfieldStringsForDateChange;
- (BOOL)_textFieldWithStepperTrackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (BOOL)_textFieldWithStepperKeyDown:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)_decrementSelectedSubfield;
- (void)_incrementSelectedSubfield;
- (void)_deleteDigit;
- (void)_insertDigit:(int)fp8;
- (void)_setPM:(BOOL)fp8;
- (void)_selectNextSubfield;
- (void)_selectPreviousSubfield;
- (void)_selectFirstSubfield;
- (void)_selectLastSubfield;
- (id)_stepperCell;
- (void)_stepperCellValueChanged:(id)fp8;
@end

@interface NSDatePickerCell (NSInternal)
- (BOOL)_fixUpDatePickerElementFlags;
- (id)_dateFormatter;
- (void)_adjustDatePickerElement:(int)fp8 by:(int)fp12 returnCalendarToHomeMonth:(BOOL)fp16;
- (void)_toggleAMPM;
- (BOOL)_constrainAndSetDateValue:(id)fp8 sendActionIfChanged:(BOOL)fp12 beepIfNoChange:(BOOL)fp16 returnCalendarToHomeMonth:(BOOL)fp20;
- (void)_finishPendingEdit;
- (id)_constrainDateValue:(id)fp8;
@end

@interface NSLevelIndicator : NSControl
{
}

+ (void)initialize;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)sizeToFit;
- (double)minValue;
- (void)setMinValue:(double)fp8;
- (double)maxValue;
- (void)setMaxValue:(double)fp8;
- (double)warningValue;
- (void)setWarningValue:(double)fp8;
- (double)criticalValue;
- (void)setCriticalValue:(double)fp8;
- (int)tickMarkPosition;
- (void)setTickMarkPosition:(int)fp8;
- (int)numberOfTickMarks;
- (void)setNumberOfTickMarks:(int)fp8;
- (int)numberOfMajorTickMarks;
- (void)setNumberOfMajorTickMarks:(int)fp8;
- (struct _NSRect)rectOfTickMarkAtIndex:(int)fp8;
- (double)tickMarkValueAtIndex:(int)fp8;

@end

@interface NSAnimation : NSObject <NSCopying, NSCoding>
{
    double _duration;
    float _currentProgress;
    float _framesPerSecond;
    id _delegate;
    NSTimer *_timer;
    double _startTime;
    NSMutableArray *_progressMarks;
    NSAnimation *_startAnimation;
    NSAnimation *_stopAnimation;
    int _nextProgressMark;
    struct __aFlags _aFlags;
    struct __aSettings _aSettings;
    long _reserved1;
    long _reserved2;
    long _reserved3;
    long _reserved4;
}

+ (void)initialize;
- (id)init;
- (id)initWithDuration:(double)fp8 animationCurve:(int)fp16;
- (void)dealloc;
- (void)finalize;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)startAnimation;
- (void)stopAnimation;
- (BOOL)isAnimating;
- (float)currentProgress;
- (void)setCurrentProgress:(float)fp8;
- (void)setDuration:(double)fp8;
- (double)duration;
- (int)animationBlockingMode;
- (void)setAnimationBlockingMode:(int)fp8;
- (void)setFrameRate:(float)fp8;
- (float)frameRate;
- (void)setAnimationCurve:(int)fp8;
- (int)animationCurve;
- (float)currentValue;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)progressMarks;
- (void)setProgressMarks:(id)fp8;
- (void)addProgressMark:(float)fp8;
- (void)removeProgressMark:(float)fp8;
- (void)startWhenAnimation:(id)fp8 reachesProgress:(float)fp12;
- (void)stopWhenAnimation:(id)fp8 reachesProgress:(float)fp12;
- (void)clearStartAnimation;
- (void)clearStopAnimation;
- (id)runLoopModesForAnimating;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSTargetAnimationInfo : NSObject <NSCoding>
{
    NSAnimation *_animation;
    float _progress;
    BOOL _start;
}

- (id)initWithAnimation:(id)fp8 progress:(float)fp12 start:(BOOL)fp16;
- (float)floatValue;
- (void)startOrStopTargetAnimation;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)description;

@end

@interface NSAnimation (NSInternal)
- (void)_createTimer:(BOOL)fp8;
- (void)_runBlocking;
- (void)_startRunningNonBlocking;
- (void)_runInNewThread;
- (void)_advanceTime;
- (void)_animationThread;
- (void)_startAnimation;
- (void)_stopAnimation:(int)fp8;
- (void)_addTargetAnimation:(id)fp8 start:(BOOL)fp12 atProgress:(float)fp16;
- (void)_removeTargetAnimation:(id)fp8 start:(BOOL)fp12;
- (float)_progressForAnimation:(id)fp8 start:(BOOL)fp12;
- (void)_clearAllTargetAnimations;
@end

@interface NSViewAnimation : NSAnimation
{
    NSArray *_viewAnimations;
    struct __CFDictionary *_viewAnimationInfo;
    struct __CFDictionary *_windowAnimationInfo;
    struct __CFDictionary *_viewCacheContexts;
    NSGraphicsContext *_saveContext;
    NSGraphicsContext *_currentCacheContext;
    struct __vaFlags _vaFlags;
    unsigned int _reserved5;
    unsigned int _reserved6;
    unsigned int _reserved7;
    unsigned int _reserved8;
}

- (id)initWithViewAnimations:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)viewAnimations;
- (void)setViewAnimations:(id)fp8;
- (void)setCurrentProgress:(float)fp8;
- (void)_startAnimation;
- (void)_stopAnimation:(int)fp8;
- (BOOL)_drawView:(id)fp8;
- (BOOL)_cachingView;
- (void)_beginDrawView:(id)fp8;
- (void)_endDrawView:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;

@end

@interface NSCachedContext : NSCGSContext
{
    NSFocusStack *_focusStack;
    struct _NSRect _bounds;
    BOOL _isFlipped;
}

- (id)initWithView:(id)fp8 context:(id)fp12;
- (void)dealloc;
- (void)drawInRect:(struct _NSRect)fp8 withAlpha:(float)fp24 operation:(int)fp28 flipped:(BOOL)fp32;
- (BOOL)isDrawingToScreen;
- (void *)focusStack;
- (void)setFocusStack:(void *)fp8;
- (struct _NSRect)bounds;
- (BOOL)isFlipped;

@end

@interface NSAnimationInfo : NSObject <NSCopying>
{
    struct _NSRect _startFrame;
    struct _NSRect _endFrame;
    int _effect;
    struct _NSRect _lastFrame;
}

- (id)copyWithZone:(struct _NSZone *)fp8;

@end

@interface NSViewAnimation (NSInternal)
- (void)_setupAnimationInfo;
- (void)_clearAnimationInfo;
- (void)_cacheViewImage:(id)fp8;
@end

@interface NSTokenAttachmentCell : NSTextAttachmentCell
{
    struct _NSSize cachedStringSize;
    struct _NSSize cellSize;
    struct _NSRect _drawingRect;
    NSImage *_normalImage;
    NSArray *_stringDrawingInfo;
    id _control;
    unsigned int isSelected:1;
    int drawingStyle;
}

- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)initImageCell:(id)fp8;
- (id)initTextCell:(id)fp8;
- (id)textAttachment;
- (void)setAttachment:(id)fp8;
- (id)drawingAttributes;
- (void)setControl:(id)fp8;
- (id)control;
- (struct _NSSize)sizeOfString:(id)fp8;
- (id)backgroundColor;
- (id)backgroundEdgeColor;
- (id)spotlightColor;
- (id)spotlightEdgeColor;
- (id)textAttributesRegular;
- (id)textAttributesWhiteText;
- (struct _NSSize)cellSize;
- (struct _NSRect)drawingRectForCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
- (struct _NSPoint)cellBaselineOffset;
- (void)cacheStringImage:(id)fp8 whiteText:(BOOL)fp12;
- (id)__normalImage;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (void)setDrawingStyle:(int)fp8;
- (int)drawingStyle;
- (void)_recacheString;
- (void)_sizeChanged;
- (void)_recacheAll;
- (void)setStringValue:(id)fp8;
- (void)_drawAtomPartsWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)_drawAtomWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)dealloc;
- (id)dragImage;

@end

@interface NSTokenAttachment : NSTextAttachment
{
    id _representedObject;
    NSDictionary *_drawingAttributes;
    BOOL _generatingAttachmentCellInGetter;
}

- (void)_commonInitTokenAttachmentWithStringValue:(id)fp8 representedObject:(id)fp12;
- (id)initWithFileWrapper:(id)fp8;
- (id)initWithStringValue:(id)fp8;
- (id)initWithStringValue:(id)fp8 representedObject:(id)fp12;
- (id)initWithCoder:(id)fp8;
- (id)atomAttachmentCell;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (void)setAttachmentCell:(id)fp8;
- (id)attachmentCell;
- (id)tokenFieldCell;
- (id)representedObject;
- (BOOL)isEditable;
- (id)stringForEditing;
- (BOOL)hasAttachmentMenu;
- (id)attachmentMenu;
- (void)setStringValue:(id)fp8;
- (id)stringValue;
- (void)_recacheAll;
- (void)setDrawingAttributes:(id)fp8;
- (id)drawingAttributes;
- (id)displayString;
- (void)setControl:(id)fp8;
- (id)control;
- (void)dealloc;

@end

@interface NSTokenField : NSTextField
{
    BOOL _reserved1;
    BOOL _reserved2;
    BOOL _reserved3;
    BOOL _reserved4;
    int _trackingRectTag;
    id _reserved5;
    id _reserved6;
    id _reserved7;
}

+ (Class)cellClass;
+ (double)defaultCompletionDelay;
+ (id)defaultTokenizingCharacterSet;
- (id)tokenFieldCell;
- (id)initWithFrame:(struct _NSRect)fp8;
- (id)initWithCoder:(id)fp8;
- (void)_setup;
- (void)setNeedsDisplayInRect:(struct _NSRect)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)resetCursorRects;
- (void)mouseMoved:(id)fp8;
- (void)mouseExited:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)finalize;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (void)draggingEnded:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)setTokenStyle:(int)fp8;
- (int)tokenStyle;
- (void)setCompletionDelay:(double)fp8;
- (double)completionDelay;
- (void)setTokenizingCharacterSet:(id)fp8;
- (id)tokenizingCharacterSet;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setDisplaysTokenWhileEditing:(BOOL)fp8;
- (BOOL)displaysTokenWhileEditing;
- (BOOL)_autocompletesTyping;
- (id)tokenFieldCell:(id)fp8 completionsForSubstring:(id)fp12 indexOfToken:(int)fp16 indexOfSelectedItem:(int *)fp20;
- (id)_handleCompletionsForPartialWordRange:(struct _NSRange)fp8 indexOfSelectedItem:(int *)fp16 inTextView:(id)fp20;
- (id)tokenFieldCell:(id)fp8 shouldAddObjects:(id)fp12 atIndex:(unsigned int)fp16;
- (id)tokenFieldCell:(id)fp8 displayStringForRepresentedObject:(id)fp12;
- (id)tokenFieldCell:(id)fp8 editingStringForRepresentedObject:(id)fp12;
- (id)tokenFieldCell:(id)fp8 tooltipStringForRepresentedObject:(id)fp12;
- (id)tokenFieldCell:(id)fp8 representedObjectForEditingString:(id)fp12;
- (int)tokenFieldCell:(id)fp8 styleForRepresentedObject:(id)fp12;
- (id)tokenFieldCell:(id)fp8 menuForRepresentedObject:(id)fp12;
- (BOOL)tokenFieldCell:(id)fp8 hasMenuForRepresentedObject:(id)fp12;
- (id)tokenFieldCell:(id)fp8 readFromPasteboard:(id)fp12;
- (BOOL)tokenFieldCell:(id)fp8 writeRepresentedObjects:(id)fp12 toPasteboard:(id)fp16;

@end

@interface NSTokenFieldCell : NSTextFieldCell
{
    double _completionDelay;
    int _tokenStyle;
    id _delegate;
    NSMutableDictionary *_tokens;
    NSCharacterSet *_tokenizingCharacterSet;
    NSMutableCharacterSet *_fancyTokenizingCharacterSet;
    BOOL _editingText;
    BOOL _lastTextChangeWasSelectionDeletion;
    BOOL _reserved;
    BOOL _editing;
    BOOL _inAutoCompleteTyping;
    BOOL _addingObject;
    id _spotlightedAttachment;
    id _layoutManager;
    NSTextContainer *_textContainer;
    struct _NSRange _editingRange;
    NSMutableArray *_dirtyTokens;
    NSString *_lastTokenizingCharacter;
    unsigned int _insertionGlyphIndexForDrag;
    id _reserved2;
    id _reserved3;
    id _reserved4;
}

+ (void)initialize;
+ (id)_sharedFieldEditor;
+ (id)defaultTokenizingCharacterSet;
+ (double)defaultCompletionDelay;
- (id)_reallyControlView;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (id)init;
- (id)initTextCell:(id)fp8;
- (void)_commonSetupTokenFieldCell;
- (BOOL)allowsEditingTextAttributes;
- (BOOL)_needsHighlightedTextHint;
- (BOOL)_isEditing;
- (id)currentEditor;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)endEditing:(id)fp8;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (BOOL)_usingAlternateHighlightColorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)backgroundColor;
- (id)textColor;
- (void)_tokenAttachmentDisplayAttributeDidChange;
- (void)setFont:(id)fp8;
- (void)setControlSize:(int)fp8;
- (id)_tokenAttachmentForString:(id)fp8 representedObject:(id)fp12;
- (void)_addRepresentedObjects:(id)fp8 toAttributedString:(id)fp12 atRange:(struct _NSRange)fp16;
- (int)_addRepresentedObject:(id)fp8 toAttributedString:(id)fp12 atRange:(struct _NSRange)fp16;
- (id)_attributedStringFromRepresentedObjects:(id)fp8;
- (id)_tokensFromCharacterRange:(struct _NSRange)fp8 inAttributedString:(id)fp16 includePlainText:(BOOL)fp20 includeAttachments:(BOOL)fp24 asRepresentedObjects:(BOOL)fp28;
- (id)_allTokenFieldAttachments;
- (unsigned int)_getInsertionGlyphIndexForDrag:(id)fp8;
- (unsigned int)_getGlyphIndexForLocationInWindow:(struct _NSPoint)fp8 roundToClosest:(BOOL)fp16 fraction:(float *)fp20 layoutManager:(id *)fp24 textStorage:(id *)fp28;
- (void)performDelayedComplete;
- (void)textDidChange:(id)fp8;
- (BOOL)_inAutoCompleteTyping;
- (void)_autoCompleteEditorTyping:(id)fp8;
- (id)_tokensFromPasteboard:(id)fp8;
- (void)_writeTokensInCharacterRange:(struct _NSRange)fp8 textStorage:(id)fp16 toPasteboard:(id)fp20;
- (BOOL)_delegateWriteTokens:(id)fp8 toPasteboard:(id)fp12;
- (id)_delegateTokensFromPasteboard:(id)fp8;
- (void)_string:(id)fp8 tokenizeIndex:(int)fp12 inTextStorage:(id)fp16;
- (struct _NSRange)_string:(id)fp8 objectValueTokenRangeForIndex:(int)fp12;
- (struct _NSRange)_string:(id)fp8 tokenRangeForIndex:(int)fp12;
- (BOOL)textView:(id)fp8 shouldChangeTextInRange:(struct _NSRange)fp12 replacementString:(id)fp20;
- (struct _NSRange)textView:(id)fp8 willChangeSelectionFromCharacterRange:(struct _NSRange)fp12 toCharacterRange:(struct _NSRange)fp20;
- (BOOL)_validateAndCommitTokens;
- (void)setInsertionGlyphIndex:(unsigned int)fp8;
- (void)_updateDraggingInfo:(id)fp8 dragInside:(BOOL)fp12;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (void)draggingEnded:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)mouseExited:(id)fp8;
- (id)_representedObjectForString:(id)fp8 allowNULL:(BOOL)fp12;
- (id)_representedObjectForString:(id)fp8;
- (void)_tokenizeDirtyTokens;
- (void)_drawInsertionPointIfNecessary;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setAttributedStringValue:(id)fp8;
- (void)mouseMoved:(id)fp8;
- (id)_textContainer;
- (void)_setTextContainer:(id)fp8;
- (id)_layoutManager;
- (id)_spotlightedAttachment;
- (void)_setSpotlightedAttachment:(id)fp8;
- (void)_updateCell;
- (void)_updateCellIfNotEditing;
- (void)_setContents:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (void)setBaseWritingDirection:(int)fp8;
- (void)_computeObjectValue:(id)fp8 generateTokenStore:(BOOL)fp12;
- (id)objectValue;
- (void)setTokenizingCharacterSet:(id)fp8;
- (id)tokenizingCharacterSet;
- (void)setCompletionDelay:(double)fp8;
- (double)completionDelay;
- (void)setTokenStyle:(int)fp8;
- (int)tokenStyle;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setDisplaysTokenWhileEditing:(BOOL)fp8;
- (BOOL)displaysTokenWhileEditing;

@end

@interface NSTokenLayoutManager : NSLayoutManager
{
    BOOL isDrawingBackground;
}

+ (id)_nextAttributeForString:(id)fp8 type:(id)fp12 location:(int)fp16 range:(struct _NSRange *)fp20;
- (id)init;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (void)_drawBackgroundAtomForRange:(struct _NSRange)fp8;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (struct _NSRange)_getRangeForTypingInString:(id)fp8 endRange:(struct _NSRange *)fp12;
- (void)_drawAtomPartsWithRect:(struct _NSRect)fp8;

@end

@interface NSTokenTypesetter : NSATSTypesetter
{
}

- (void)endLineWithGlyphRange:(struct _NSRange)fp8;

@end

@interface NSTokenTextView : NSTextView
{
    id _control;
    id _tokenFieldDelegate;
    struct _NSRange _dragGlyphRange;
    BOOL _draggingOn;
}

- (id)completionsForPartialWordRange:(struct _NSRange)fp8 indexOfSelectedItem:(int *)fp16;
- (void)insertCompletion:(id)fp8 forPartialWordRange:(struct _NSRange)fp12 movement:(int)fp20 isFinal:(BOOL)fp24;
- (BOOL)_validateAndCommitTokens;
- (void)dealloc;
- (void)_setTokenFieldDelegate:(id)fp8;
- (id)_tokenFieldDelegate;
- (void)_setControl:(id)fp8;
- (id)_control;
- (void)_setDragGlyphRange:(struct _NSRange)fp8;
- (struct _NSRange)_dragGlyphRange;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(int)fp16 stillSelecting:(BOOL)fp20;
- (void)scrollRangeToVisible:(struct _NSRange)fp8;
- (void)setTypingAttributes:(id)fp8;
- (void)_fixJoiningOfSelectedAtoms;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)_didSelectPopup:(id)fp8;
- (BOOL)_attachmentAtGlyphIndex:(unsigned int)fp8 containsWindowPoint:(struct _NSPoint)fp12;
- (void)mouseMoved:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)shouldDrawInsertionPoint;
- (void)drawRect:(struct _NSRect)fp8;
- (id)dragImageForAtomAttachmentCell:(id)fp8;
- (void)insertNewline:(id)fp8;
- (BOOL)resignFirstResponder;
- (void)mouseDown:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (void)draggingEnded:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (void)paste:(id)fp8;

@end

@interface NSOutlineViewBinder : NSBinder
{
    struct ___outlineViewBinderFlags _outlineViewBinderFlags;
}

+ (BOOL)_autoCreateBinderForObject:(id)fp8 withController:(id)fp12;
+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)bindingCategory;
+ (id)bindingsForObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (BOOL)_isAutoCreated;
- (void)_markAutoCreated:(BOOL)fp8;
- (void)_init;
- (void)_connectionWasEstablished;
- (void)_connectionWasBroken;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (void)outlineView:(id)fp8 willDisplayOutlineCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)expandIndexPath:(id)fp8;
- (void)_scrollSelectionToVisible;
- (void)_updateSelectionIndexPaths:(id)fp8;
- (void)tableView:(id)fp8 didChangeToSelectedRowIndexes:(id)fp12;
- (void)_updateSortDescriptors:(id)fp8;
- (void)tableView:(id)fp8 didChangeToSortDescriptors:(id)fp12;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;

@end

@interface NSBinder (NSOutlineViewColumnBinder)
- (void)updateOutlineColumnDataCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
- (void)updateOutlineColumnOutlineCell:(id)fp8 forDisplayAtIndexPath:(id)fp12;
@end

@interface NSTreeController : NSObjectController
{
    void *reserved1;
    NSArray *_modeObservingKeyPaths;
    void *_observedIndexPathHint;
    id _arrangedObjects;
    id _arrayControllerTree;
    id _selectionIndexPaths;
    struct __treeControllerFlags _treeControllerFlags;
    NSMutableArray *_selectedObjects;
    NSString *_childrenKeyPath;
    NSString *_countKeyPath;
    NSString *_leafKeyPath;
    NSArray *_sortDescriptors;
}

+ (id)_nonAutomaticObservingKeys;
- (void)_prepareArrayControllerTree;
- (void)_init;
- (void)_dealloc;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)_multipleValuesObjectAtIndexPath:(id)fp8;
- (id)_multipleValueForKey:(id)fp8 atIndexPath:(id)fp12;
- (id)_multipleValueForKeyPath:(id)fp8 atIndexPath:(id)fp12;
- (id)_multipleMutableArrayValueForKey:(id)fp8 atIndexPath:(id)fp12;
- (id)_multipleMutableArrayValueForKeyPath:(id)fp8 atIndexPath:(id)fp12;
- (void)_setMultipleValue:(id)fp8 forKey:(id)fp12 atIndexPath:(id)fp16;
- (void)_setMultipleValue:(id)fp8 forKeyPath:(id)fp12 atIndexPath:(id)fp16;
- (void)_setSingleValue:(id)fp8 forKey:(id)fp12;
- (void)_setSingleValue:(id)fp8 forKeyPath:(id)fp12;
- (void)_invokeSingleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16;
- (void)_invokeMultipleSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 atIndexPath:(id)fp20;
- (BOOL)_validateMultipleValue:(id *)fp8 forKeyPath:(id)fp12 atIndexPath:(id)fp16 error:(id *)fp20;
- (BOOL)_validateSingleValue:(id *)fp8 forKey:(id)fp12 error:(id *)fp16;
- (BOOL)_validateSingleValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;
- (id)_singleValueForKeyPath:(id)fp8 operationType:(int)fp12;
- (id)_singleValueForKey:(id)fp8;
- (id)_singleValueForKeyPath:(id)fp8;
- (id)_singleMutableArrayValueForKey:(id)fp8;
- (id)_singleMutableArrayValueForKeyPath:(id)fp8;
- (id)_controllerKeys;
- (id)_keyValueBindingAccessPoints;
- (id)_modelAndProxyKeys;
- (id)_modelObservingKeyPaths;
- (void)addObserver:(id)fp8 forKeyPath:(id)fp12 options:(unsigned int)fp16 context:(void *)fp20;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (id)arrangedObjects;
- (void)_prepareContentWithNewObject:(id)fp8;
- (void)rearrangeObjects;
- (void)_changeEditable:(BOOL)fp8;
- (void)_setExplicitlyCannotAdd:(BOOL)fp8 insert:(BOOL)fp12 remove:(BOOL)fp16;
- (BOOL)_explicitlyCannotAddChild;
- (BOOL)_explicitlyCannotInsertChild;
- (BOOL)_explicitlyCannotInsert;
- (void)setChildrenKeyPath:(id)fp8;
- (id)childrenKeyPath;
- (void)setCountKeyPath:(id)fp8;
- (id)countKeyPath;
- (void)setLeafKeyPath:(id)fp8;
- (id)leafKeyPath;
- (BOOL)_isLeafObject:(id)fp8;
- (void)setAvoidsEmptySelection:(BOOL)fp8;
- (BOOL)avoidsEmptySelection;
- (void)setAlwaysUsesMultipleValuesMarker:(BOOL)fp8;
- (BOOL)alwaysUsesMultipleValuesMarker;
- (void)setPreservesSelection:(BOOL)fp8;
- (BOOL)preservesSelection;
- (void)setSelectsInsertedObjects:(BOOL)fp8;
- (BOOL)selectsInsertedObjects;
- (void)setSortDescriptors:(id)fp8;
- (id)sortDescriptors;
- (void)_setContentInBackground:(id)fp8;
- (void)setContent:(id)fp8;
- (id)content;
- (id)_rootNode;
- (unsigned int)_rootContentCount;
- (void)insertObjects:(id)fp8 atArrangedObjectIndexPaths:(id)fp12;
- (void)insertObject:(id)fp8 atArrangedObjectIndexPath:(id)fp12;
- (void)addObject:(id)fp8;
- (void)addChildObject:(id)fp8;
- (BOOL)canAdd;
- (BOOL)canAddChild;
- (BOOL)canInsert;
- (BOOL)canInsertChild;
- (BOOL)canRemove;
- (BOOL)validateMenuItem:(id)fp8;
- (id)newObject;
- (id)newChildObject;
- (void)_executeAdd:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)add:(id)fp8;
- (void)_executeAddChild:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)addChild:(id)fp8;
- (id)_additionIndexPathAppendChildIndex:(BOOL)fp8;
- (id)_insertionIndexPathAppendChildIndex:(BOOL)fp8;
- (void)_insertChildOrSibling:(BOOL)fp8;
- (void)_executeInsert:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)insert:(id)fp8;
- (void)_executeInsertChild:(id)fp8 didCommitSuccessfully:(BOOL)fp12 actionSender:(id)fp16;
- (void)insertChild:(id)fp8;
- (void)_insertObject:(id)fp8 atArrangedObjectIndexPath:(id)fp12 objectHandler:(id)fp16;
- (void)_removeObjectsAtArrangedObjectIndexPaths:(id)fp8 objectHandler:(id)fp12;
- (void)removeObjectsAtArrangedObjectIndexPaths:(id)fp8;
- (void)removeObjectAtArrangedObjectIndexPath:(id)fp8;
- (void)remove:(id)fp8;
- (void)removeObject:(id)fp8;
- (BOOL)_selectObjectsAtIndexPathsNoCopy:(id)fp8 avoidsEmptySelection:(BOOL)fp12 sendObserverNotifications:(BOOL)fp16;
- (void)_willChangeValuesForArrangedKeys:(BOOL)fp8 objectKeys:(BOOL)fp12 indexPathKeys:(BOOL)fp16;
- (void)_didChangeValuesForArrangedKeys:(BOOL)fp8 objectKeys:(BOOL)fp12 indexPathKeys:(BOOL)fp16;
- (BOOL)_selectObjectsAtIndexPaths:(id)fp8 avoidsEmptySelection:(BOOL)fp12 sendObserverNotifications:(BOOL)fp16;
- (BOOL)setSelectionIndexPath:(id)fp8;
- (id)selectionIndexPath;
- (BOOL)setSelectionIndexPaths:(id)fp8;
- (id)selectionIndexPaths;
- (BOOL)addSelectionIndexPaths:(id)fp8;
- (BOOL)removeSelectionIndexPaths:(id)fp8;
- (id)selectedObjects;

@end

@interface _NSControllerTreeProxy : NSObject <_NSBindingTree>
{
    id _controller;
}

- (id)initWithController:(id)fp8;
- (unsigned int)count;
- (id)_safeNodeAtIndexPath:(id)fp8;
- (id)nodeAtIndexPath:(id)fp8;
- (id)childOfNode:(id)fp8 atIndex:(int)fp12;
- (unsigned int)countForNode:(id)fp8;
- (unsigned int)countForIndexPath:(id)fp8;
- (BOOL)isExpandable:(id)fp8;
- (BOOL)isExpandableAtArrangedObjectIndexPath:(id)fp8;
- (id)_valueForKeyPath:(id)fp8 ofObjectAtIndexPath:(id)fp12;
- (void)_setValue:(id)fp8 forKeyPath:(id)fp12 ofObjectAtIndexPath:(id)fp16;
- (id)objectAtIndexPath:(id)fp8;
- (void)_invokeSelector:(SEL)fp8 withArguments:(id)fp12 onKeyPath:(id)fp16 ofObjectAtIndexPath:(id)fp20;
- (BOOL)_validateValue:(id *)fp8 forKeyPath:(id)fp12 ofObjectAtIndexPath:(id)fp16 error:(id *)fp20;

@end

@interface _NSArrayControllerTreeNode : NSObject
{
    id _observedObject;
    NSArrayController *_controller;
    NSTreeController *_treeController;
    NSMutableArray *_subNodes;
    _NSArrayControllerTreeNode *_parentNode;
    struct __NSArrayControllerTreeNodeFlags _NSArrayControllerTreeNodeFlags;
}

- (id)initWithTreeController:(id)fp8;
- (void)dealloc;
- (id)description;
- (void)_clearObserving;
- (id)contentForObject:(id)fp8;
- (void)updateSubnodes;
- (id)observedObject;
- (void)setObservedObject:(id)fp8;
- (void)setParentNode:(id)fp8;
- (id)parentNode;
- (id)nodeAtIndexPath:(id)fp8;
- (id)_safeObjectAtIndexPath:(id)fp8;
- (id)_safeNodeAtIndexPath:(id)fp8;
- (id)subnodeAtIndex:(unsigned int)fp8;
- (unsigned int)count;
- (BOOL)allowsSubnodeAtIndex:(unsigned int)fp8;
- (BOOL)isLeaf;
- (void)startObservingModelKeyPath:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (id)_indexPath;
- (id)indexPath;
- (void)insertObject:(id)fp8 atIndex:(unsigned int)fp12;
- (id)insertObject:(id)fp8 atIndexPath:(id)fp12;
- (void)removeObjectAtIndex:(unsigned int)fp8;
- (void)removeObjectAtIndexPath:(id)fp8;
- (void)prune;
- (void)setSortDescriptors:(id)fp8;
- (id)objectAtIndexPath:(id)fp8;

@end

@interface _NSControllerTreeProxyMutatorArray : _NSControllerArrayProxyMutatorArray
{
}

- (id)initWithTreeController:(id)fp8 keyPath:(id)fp12;
- (void)dealloc;
- (id)_referenceArray;
- (void)_performMutatorOperation:(int)fp8 object:(id)fp12 index:(unsigned int)fp16;

@end

@interface NSTreeController (NSManagedController)
- (id)_fetchRequestForPerformingFetch;
- (BOOL)_performFetchWithRequest:(id)fp8 merge:(BOOL)fp12 error:(id *)fp16;
- (void)_reactToMatchingInsertions:(id)fp8 deletions:(id)fp12 refreshed:(id)fp16;
@end

@interface NSPersistentDocument : NSDocument
{
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_managedObjectContext;
    id _store;
    void *_reserved;
    void *_reserved2;
    void *_reserved3;
    void *_reserved4;
}

- (id)init;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (BOOL)_isBeingEdited;
- (void)_discardEditing;
- (void)_commitEditing:(id)fp8;
- (void)_documentEditor:(id)fp8 didCommit:(BOOL)fp12 contextInfo:(void *)fp16;
- (void)_commitEditingWithSuccessInvocation:(id)fp8 failureInvocation:(id)fp12;
- (void)setManagedObjectContext:(id)fp8;
- (id)managedObjectContext;
- (id)managedObjectModel;
- (id)persistentStoreTypeForFileType:(id)fp8;
- (id)_persistentStoreCoordinator;
- (BOOL)configurePersistentStoreCoordinatorForURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)hasUndoManager;
- (void)setHasUndoManager:(BOOL)fp8;
- (void)setUndoManager:(id)fp8;
- (void)setFileURL:(id)fp8;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)writeToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 originalContentsURL:(id)fp20 error:(id *)fp24;
- (BOOL)writeSafelyToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(int)fp16 error:(id *)fp20;
- (BOOL)revertToContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;

@end

@interface NSBrowserBinder : NSBinder
{
    struct ___browserBinderFlags _browserBinderFlags;
    NSArray *_selectedIndexPaths;
}

+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)bindingCategory;
+ (id)bindingsForObject:(id)fp8;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (void)setSelectedIndexPaths:(id)fp8;
- (void)_init;
- (void)_dealloc;
- (void)_connectionWasBroken;
- (void)_connectionWasEstablished;
- (id)_selectionIndexPathsInBrowser:(id)fp8;
- (void)performAction:(id)fp8;
- (void)browser:(id)fp8 willDisplayCell:(id)fp12 atRow:(int)fp16 column:(int)fp20;
- (void)browser:(id)fp8 createRowsForColumn:(int)fp12 inMatrix:(id)fp16;
- (void)_updateSelectionIndexPaths:(id)fp8;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;

@end

@interface NSNibAXAttributeConnector : NSObject <NSCoding>
{
    id _destination;
    NSString *_attributeType;
    NSString *_attributeValue;
}

- (void)dealloc;
- (id)attributeType;
- (void)setAttributeType:(id)fp8;
- (id)attributeValue;
- (void)setAttributeValue:(id)fp8;
- (id)source;
- (void)setSource:(id)fp8;
- (id)destination;
- (void)setDestination:(id)fp8;
- (void)replaceObject:(id)fp8 withObject:(id)fp12;
- (void)establishConnection;
- (void)instantiateWithObjectInstantiator:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)label;
- (void)setLabel:(id)fp8;

@end

@interface NSNibAXRelationshipConnector : NSNibConnector
{
}

- (void)establishConnection;

@end

@interface NSShadowSurface : NSSurface
{
    int _height;
    char *_fill;
    BOOL _isHorizontal;
}

- (id)initWithView:(id)fp8 height:(int)fp12 fill:(const char *)fp16 isHorizontal:(BOOL)fp20;
- (id)initWithView:(id)fp8 height:(int)fp12 fill:(const char *)fp16;
- (void)dealloc;
- (void)finalize;
- (void)setFrame:(struct _NSRect)fp8;

@end

@interface NSNavQuerySliceView : NSView
{
    NSNavNode *_queryNode;
    NSArray *_scopeLocationNodes;
    NSMutableDictionary *_nodeToScopeButtonTable;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (id)_scopeButtonsForNodes:(id)fp8;
- (id)allOrderedScopeButtons;
- (void)_layoutViews:(id)fp8 startingInsetFromXOrigin:(float)fp12 insetFromTop:(float)fp16 withSpacing:(float)fp20 sizeToFit:(BOOL)fp24 horizontal:(BOOL)fp28;
- (void)_syncScopeLayout;
- (void)_setSelectedScopeLocationNodes:(id)fp8;
- (void)_syncScopeButtons;
- (void)_storeDefaultSearchScopeMode;
- (void)scopeButtonAction:(id)fp8;
- (void)setScopeLocationNodes:(id)fp8;
- (void)setQueryNode:(id)fp8;
- (id)queryNode;
- (id)scopeLocationNodes;
- (id)_backgroundColor;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface NSNavScopeButton : NSButton
{
    NSNavNode *_node;
}

+ (Class)cellClass;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setStringValue:(id)fp8;
- (void)setNode:(id)fp8;
- (id)node;
- (void)setStateToSelected;
- (void)setStateToUnselected;

@end

@interface NSNavScopeButtonCell : NSNavSimpleButtonCell
{
}

- (id)initTextCell:(id)fp8;
- (id)textColorForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)textShadowForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImageNamePrefixForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImageForHeightReference;

@end

@interface NSControllerConfigurationBinder : NSBinder
{
    struct __controllerConfigurationBinderFlags _controllerConfigurationBinderFlags;
}

+ (id)bindingCategory;
+ (id)objectMechanismsRequiredForObject:(id)fp8;
+ (id)bindingsForObject:(id)fp8;
+ (BOOL)isUsableWithObject:(id)fp8;
- (void)_init;
- (unsigned int)_bindingAdaptorMethodsNeededMask;
- (void)_connectionWasBroken;
- (Class)valueClassForBinding:(id)fp8;
- (void)_updateFilterPredicate:(id)fp8;
- (void)_updateSortDescriptors:(id)fp8;
- (void)_updateSelectionIndexes:(id)fp8;
- (void)_updateSelectionIndexPaths:(id)fp8;
- (void)_observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 context:(void *)fp16;
- (void)controller:(id)fp8 didChangeToSelectionIndexes:(id)fp12;
- (void)controller:(id)fp8 didChangeToSelectionIndexPaths:(id)fp12;
- (void)controller:(id)fp8 didChangeToSortDescriptors:(id)fp12;
- (void)controller:(id)fp8 didChangeToFilterPredicate:(id)fp12;

@end

@interface NSColorSpace : NSObject <NSCoding>
{
    id _profile;
    struct {
        unsigned int colorSpaceID:8;
        unsigned int storageType:3;
        unsigned int replacedDuringUnarchiving:1;
        unsigned int :20;
    } _flags;
    void *__cgColorSpace;
    void *_reserved[5];
}

+ (id)specialColorSpaceWithID:(int)fp8;
+ (id)genericRGBColorSpace;
+ (id)genericGrayColorSpace;
+ (id)genericCMYKColorSpace;
+ (id)deviceRGBColorSpace;
+ (id)deviceGrayColorSpace;
+ (id)deviceCMYKColorSpace;
+ (id)colorSpaceForColorSpaceName:(id)fp8;
+ (id)_colorSpacesForColorPanelPaneUsingModel:(int)fp8;
- (id)initWithColorProfile:(id)fp8;
- (id)_initWithCGColorSpaceNoCache:(struct CGColorSpace *)fp8;
- (id)initWithCGColorSpace:(struct CGColorSpace *)fp8;
- (id)initWithICCProfileData:(id)fp8;
- (id)initWithColorSyncProfile:(void *)fp8;
- (void)release;
- (void)finalize;
- (void)dealloc;
- (id)ICCProfileData;
- (void)_createProfileFor:(unsigned long)fp8;
- (struct CGColorSpace *)CGColorSpace;
- (void *)colorSyncProfile;
- (id)colorProfile;
- (int)numberOfColorComponents;
- (int)colorSpaceModel;
- (int)model;
- (BOOL)_isDeviceColorSpace;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (id)description;
- (id)localizedName;
- (id)colorSpaceName;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;

@end

@interface NSNavSimpleButtonCell : NSButtonCell
{
    BOOL _showsRollover;
    BOOL _mouseInside;
    BOOL _showsShadowedText;
    BOOL _disabledWhenInactive;
    struct _NSSize _titleSize;
    NSMutableDictionary *_textColorTable;
    NSMutableDictionary *_textShadowTable;
    NSMutableDictionary *_buttonImagesTable;
}

- (void)setupAttributes;
- (id)initTextCell:(id)fp8;
- (id)textColorForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)textShadowForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImageNamePrefixForButtonState:(struct NSNavSimpleButtonState)fp8;
- (id)buttonImagesForButtonState:(struct NSNavSimpleButtonState)fp8;
- (void)setShowsShadowedText:(BOOL)fp8;
- (BOOL)showsShadowedText;
- (void)setShowsRollover:(BOOL)fp8;
- (BOOL)showsRollover;
- (void)setDisabledWhenInactive:(BOOL)fp8;
- (BOOL)disabledWhenInactive;
- (void)setTitle:(id)fp8;
- (BOOL)isPressed;
- (BOOL)isSelected;
- (BOOL)_needsRedrawOnMouseInsideChange;
- (BOOL)_shouldShowRollovers;
- (BOOL)_enablesOnWindowChangedKeyState;
- (BOOL)isEnabled;
- (struct NSNavSimpleButtonState)currentButtonState;
- (id)_textAttributes;
- (id)attributedTitle;
- (BOOL)_getButtonImageParts:(id *)fp8:(id *)fp12:(id *)fp16;
- (id)buttonImageForHeightReference;
- (float)buttonHeight;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)_needRedrawOnWindowChangedKeyState;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSColorProfile : NSObject <NSCoding>
{
    void *_profile;
    void *_header;
    void *_location;
    void *_md5;
    NSString *_name;
    void *_reserved[2];
}

+ (id)availableProfiles;
- (id)initWithColorSyncProfile:(void *)fp8;
- (id)initWithICCProfileData:(id)fp8;
- (id)initWithColorSyncInfo:(void *)fp8;
- (void)finalize;
- (void)dealloc;
- (void *)colorSyncProfile;
- (id)ICCProfileData;
- (void *)MD5;
- (id)localizedName;
- (id)description;
- (unsigned long)_colorSyncProfileSpace;
- (unsigned long)_colorSyncProfileClass;
- (int)_appropriateColorPanelSliderPane;
- (int)_isGenericProfile;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (id)awakeAfterUsingCoder:(id)fp8;

@end

@interface NSNavFBENodePreviewHelper : NSNavNodePreviewHelper
{
    void *_previewMDRef;
    struct __fbephFlags _fbephFlags;
    NSImage *_cachedPreviewThumbnailImage;
}

+ (void)_subthreadComputePreviewThumbnailImages;
+ (void)_computeThumbnailImageInSubthreadFor:(id)fp8;
- (id)initWithNode:(id)fp8 delegate:(id)fp12;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (void)handleMetadataCallback;
- (void)getLocalizedLabels:(id *)fp8 andLocalizedValues:(id *)fp12;
- (void)handlePreviewImageChanged;
- (void)_mainthreadComputePreviewThumbnailFinished:(id)fp8;
- (id)previewThumbnailImage;

@end

@interface NSNavNodePreviewHelper (NSInternal)
- (BOOL)_backgroundDataCancelled;
@end

@interface NSNavNodePreviewHelper : NSObject
{
    NSNavNode *_node;
    id _delegate;
    float _maxLabelWidth;
    NSArray *_valuesCache;
    NSArray *_labelsCache;
}

+ (id)defaultLabelFontAttribute;
+ (id)defaultValueFontAttribute;
+ (void)resetDateFormats;
+ (id)defaultDateFormatter;
- (id)initWithNode:(id)fp8 delegate:(id)fp12;
- (void)setDelegate:(id)fp8;
- (void)dealloc;
- (id)node;
- (id)delegate;
- (id)_attributedLabelsFromStringLabels:(id)fp8;
- (id)_attributedValuesFromStringValues:(id)fp8;
- (void)handlePreviewTextChange;
- (void)getLocalizedLabels:(id *)fp8 andLocalizedValues:(id *)fp12;
- (void)_getLocalizedLabels:(id *)fp8 andLocalizedValues:(id *)fp12;
- (void)getLocalizedFormattedDisplayLabels:(id *)fp8 andLocalizedFormattedDisplayValues:(id *)fp12;
- (id)localizedFormattedDisplayLabels;
- (id)localizedFormattedDisplayValues;
- (float)maxFormattedDisplayLabelWidth;
- (id)previewThumbnailImage;
- (struct OpaqueIconRef *)copyPreviewIcon;

@end

@interface NSDownloadController : NSObject
{
    NSString *_mimeType;
    NSString *_riskCategory;
    NSString *_contentType;
    NSString *_filename;
    NSString *_messageText;
    NSString *_informativeText;
    NSAlert *_alert;
    NSDictionary *_downloadInfo;
    id _modalDelegate;
    SEL _didEndSelector;
    BOOL _autoOpen;
    BOOL _useSave;
    char _reserved[2];
    id reserved1[5];
}

- (void)_setMessageAndInformativeText;
- (id)initWithDictionary:(id)fp8;
- (void)dealloc;
- (id)downloadInformation;
- (id)_createAlert;
- (int)runModalWindow;
- (void)beginSheetModalForWindow:(id)fp8 modalDelegate:(id)fp12 didEndSelector:(SEL)fp16 contextInfo:(void *)fp20;
- (void)alertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)setMessageText:(id)fp8;
- (id)messageText;
- (void)setInformativeText:(id)fp8;
- (id)informativeText;
- (id)window;

@end

@interface NSCIImageRep : NSImageRep
{
    CIImage *_ciImage;
}

+ (void)initialize;
+ (id)imageRepWithCIImage:(id)fp8;
- (id)init;
- (id)initWithCIImage:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (id)CIImage;
- (BOOL)_isValid;
- (id)description;
- (BOOL)draw;
- (BOOL)drawAtPoint:(struct _NSPoint)fp8;
- (BOOL)drawInRect:(struct _NSRect)fp8;
- (BOOL)_drawFromRect:(struct _NSRect)fp8 toRect:(struct _NSRect)fp24 operation:(int)fp40 alpha:(float)fp44 compositing:(BOOL)fp48 flipped:(BOOL)fp52 ignoreContext:(BOOL)fp56;

@end

@interface CIImage (NSAppKitAdditions)
- (id)initWithBitmapImageRep:(id)fp8;
- (void)drawInRect:(struct _NSRect)fp8 fromRect:(struct _NSRect)fp24 operation:(int)fp40 fraction:(float)fp44;
- (void)drawAtPoint:(struct _NSPoint)fp8 fromRect:(struct _NSRect)fp16 operation:(int)fp32 fraction:(float)fp36;
@end

@interface NSTreeDetailBinder : NSArrayDetailBinder
{
    struct __treeDetailBinderFlags _treeDetailBinderFlags;
}

+ (BOOL)isUsableWithObject:(id)fp8;
+ (id)binderClassesSuperseded;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (BOOL)_handlesSelectAll;
- (void)_selectAllContent:(id)fp8 inDetailcontroller:(id)fp12;

@end

@interface NSFileInfoCache : NSObject
{
    unsigned int _flushPreventionCount;
    NSMutableDictionary *_entriesByPath;
    NSMutableDictionary *_entriesBySpecifier;
    struct __CFDictionary *_iconsByCarbonIconThenSize;
}

+ (id)sharedFileInfoCache;
- (id)init;
- (void)dealloc;
- (void)preventFlushing;
- (void)allowFlushing;
- (void)_observePathOfEntry:(id)fp8;
- (void)_observeSpecifierOfEntry:(id)fp8;
- (id)_newEntryWithUnavoidableSpecifier:(id)fp8 path:(id)fp12 url:(id)fp16 isSymbolicLink:(int)fp20;
- (id)_entryForPath:(id)fp8;
- (id)_entryForSpecifier:(id)fp8;
- (id)_iconForCarbonIcon:(struct OpaqueIconRef *)fp8 size:(struct _NSSize)fp12;
- (id)specifierWithPath:(id)fp8;
- (id)iconForSpecifier:(id)fp8 size:(struct _NSSize)fp12;
- (id)presentableNameForSpecifier:(id)fp8;

@end

@interface NSFileInfoCacheEntry : NSObject
{
    NSFileSpecifier *_specifier;
    NSString *_path;
    NSURL *_url;
    int _isSymbolicLink;
    BOOL _carbonCatalogInfoIsValid;
    unsigned int _carbonCatalogInfoMask;
    struct FSCatalogInfo _carbonCatalogInfo;
    struct FSRef _carbonParentRef;
    BOOL _linkTargetCarbonCatalogInfoIsValid;
    unsigned int _linkTargetCarbonCatalogInfoMask;
    struct FSCatalogInfo *_linkTargetCarbonCatalogInfo;
    struct FSRef *_linkTargetCarbonParentRef;
    struct HFSUniStr255 *_linkTargetCarbonName;
    NSFileSpecifier *_linkTargetSpecifier;
    struct OpaqueIconRef *_carbonIcon;
    NSString *_presentableName;
}

- (id)initWithUnavoidableSpecifier:(id)fp8 path:(id)fp12 url:(id)fp16 isSymbolicLink:(int)fp20;
- (void)dealloc;
- (void)setAvoidableSpecifier:(id)fp8 path:(id)fp12;
- (BOOL)_validatePath;
- (BOOL)_validateSpecifier;
- (BOOL)_validateURL;
- (unsigned long)_requiredCarbonCatalogInfoMask;
- (BOOL)_validateCarbonCatalogInfo;
- (BOOL)_validateIsSymbolicLink;
- (BOOL)_validateLinkTargetSpecifier;
- (BOOL)_validateLinkTargetCarbonCatalogInfo;
- (id)iconForSize:(struct _NSSize)fp8;
- (id)presentableName;
- (id)specifierTraverseLink:(BOOL)fp8;
- (id)unvalidatedPath;
- (id)unvalidatedSpecifier;

@end

@interface NSLevelIndicatorCell (NSLevelIndicatorCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
@end

@interface NSDatePickerCell (NSDatePickerCellAccessibility)
- (id)accessibilityAttributeNames;
- (id)accessibilityRoleAttribute;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)fp8;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityDateTimeComponentsAttribute;
- (BOOL)accessibilityIsDateTimeComponentsAttributeSettable;
@end

@interface NSAutounbinder : NSProxy
{
    NSObject *_bindingTarget;
    BOOL _isRetainingBindingTarget;
    BOOL _isRecordingBindings;
    NSMutableSet *_bindingsToThisObject;
    NSMutableArray *_observancesOfThisObject;
}

- (id)initWithBindingTarget:(id)fp8;
- (void)dealloc;
- (void)forwardInvocation:(id)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;
- (id)description;
- (id)bindingTarget;
- (void)addBinding:(id)fp8 fromObject:(id)fp12;
- (void)removeBinding:(id)fp8 fromObject:(id)fp12;
- (void)retainBindingTargetAndUnbind;
- (void)addObserver:(id)fp8 forKeyPath:(id)fp12 options:(unsigned int)fp16 context:(void *)fp20;
- (void)removeObserver:(id)fp8 forKeyPath:(id)fp12;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (id)valueForKeyPath:(id)fp8;
- (void)setValue:(id)fp8 forKeyPath:(id)fp12;
- (BOOL)validateValue:(id *)fp8 forKeyPath:(id)fp12 error:(id *)fp16;
- (id)mutableArrayValueForKeyPath:(id)fp8;
- (id)mutableSetValueForKeyPath:(id)fp8;

@end

@interface NSAutounbinderObservance : NSObject
{
    NSObject *_observer;
    NSString *_keyPath;
    void *_context;
}

- (id)initWithObserver:(id)fp8 keyPath:(id)fp12 context:(void *)fp16;
- (void)dealloc;

@end

@interface NSAutounbinderBinding : NSObject
{
    NSString *_name;
    NSString *_boundObject;
}

- (id)initWithName:(id)fp8 boundObject:(id)fp12;
- (void)dealloc;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;

@end

