/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

struct CGColor;

struct CGPath;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct ComponentInstanceRecord {
    long _field1[1];
};

struct MailAlertInfo {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    int _field5;
};

struct MailPasswordInfo {
    id _field1;
    id _field2;
    char *_field3;
    id _field4;
};

struct OpaqueEventHandlerRef;

struct PointerDataRefRecord;

struct ProcessSerialNumber {
    unsigned int highLongOfPSN;
    unsigned int lowLongOfPSN;
};

struct SheetContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    char _field5;
};

struct UserDataRecord;

struct _MessageSortingInformation {
    char _field1;
    char _field2;
    id _field3;
    void *_field4;
};

struct _NSPoint {
    float x;
    float y;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSRect {
    struct _NSPoint origin;
    struct _NSSize size;
};

struct _NSSize {
    float width;
    float height;
};

struct _NSZone;

struct _QuotaSimpleSortDescriptor {
    void *comparator;
    char ascending;
};

struct __CFDictionary;

struct __CFSet;

struct __CFURL;

struct menuItemInfo {
    int _field1;
    int _field2;
};

struct visible_state {
    char hadSelection;
    char selectionWasVisible;
    char scrollerWasAtEnd;
    char forceSelToVisible;
    NSString *msgIDToPin;
    float msgUpperLeft;
};

typedef struct {
    int _field1;
    float _field2;
} CDAnonymousStruct1;

typedef struct {
    int _field1;
    char _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    char _field7;
    char _field8;
} CDAnonymousStruct2;

/*
 * File: Mail
 * Arch: Intel 80x86 (i386)
 */

@protocol AccountSetupValidatorDelegate
@end

@protocol AccountStatusDataSourceDelegate
@end

@protocol AddProgressMonitor
- (void)setFractionDone:(float)fp8;
@end

@protocol DOMEventListener <NSObject>
- (void)handleEvent:(id)fp8;
@end

@protocol DocumentEditorManaging
- (void)registerDocumentEditor:(id)fp8;
- (void)unregisterDocumentEditor:(id)fp8;
@end

@protocol DynamicErrorWindowDelegate <NSObject>
- (BOOL)displayIndeterminateProgress;
- (id)errorMessageForErrorDiagnosis:(unsigned int)fp8;
- (id)errorDescriptionForErrorDiagnosis:(unsigned int)fp8;
- (id)leftButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (id)rightButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (void)leftActionSelectedWithDiagnosis:(unsigned int)fp8;
- (void)rightActionSelectedWithDiagnosis:(unsigned int)fp8;
- (unsigned int)helpTopicForDiagnosis:(unsigned int)fp8;
@end

@protocol MFUserAgent
- (id)queryUserForPasswordWithMessage:(id)fp8 title:(id)fp12 remember:(char *)fp16;
- (BOOL)showCertificateTrustPanelForError:(id)fp8 host:(id)fp12 certificates:(id)fp16;
- (int)informUserOfError:(id)fp8;
- (BOOL)queryUserWithMessageText:(id)fp8 informativeText:(id)fp12 defaultButton:(id)fp16 alternateButton:(id)fp20;
- (int)runAlertPanelWithTitle:(id)fp8 defaultTitle:(id)fp12 alternateTitle:(id)fp16 otherTitle:(id)fp20 message:(id)fp24;
- (void)runNonModalAlertPanelForObject:(id)fp8 withError:(id)fp12;
- (void)dismissNonModalAlertPanelForObject:(id)fp8;
- (int)queryUserForBigMessageAction:(id)fp8;
- (BOOL)queryUserIfNeededToCreateMailbox:(id)fp8 orChooseNewMailbox:(id *)fp12;
- (id)queryUserToSelectMailbox:(id)fp8;
- (void)storeBeingInvalidated:(id)fp8;
- (BOOL)shouldInvalidateMailbox:(id)fp8;
- (BOOL)isTerminating;
- (BOOL)wakingFromSleep;
- (BOOL)isPaused;
- (void)setIsPaused:(BOOL)fp8;
- (BOOL)personWithEmailIsOnline:(id)fp8;
- (BOOL)openTemporaryAttachments:(id)fp8 applicationBundle:(id)fp12;
- (void)informUserOfIOErrorWithStateIn:(unsigned int *)fp8;
- (void)informUserOfBusyDatabaseWithRecoverer:(id)fp8 diagnosis:(unsigned int *)fp12;
@end

@protocol MVMailboxSelectionOwner
- (id)selectedMailboxes;
- (id)selectedMailbox;
- (id)sortedSectionItemsForTimeMachine;
- (BOOL)isSelectedMailboxSpecial;
- (void)selectPathsToMailboxes:(id)fp8;
- (BOOL)mailboxIsExpanded:(id)fp8;
- (BOOL)sectionIsExpanded:(id)fp8;
- (void)revealMailbox:(id)fp8;
- (id)mailboxSelectionWindow;
@end

@protocol MVSelectionOwner
- (id)selection;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (id)messageStore;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
@end

@protocol MailboxesChooserCycleDelegate
- (id)mailboxBeingEdited;
@end

@protocol MailboxesOutlineViewControllerDelegate
- (void)selectAllMessages;
- (void)focusMessages;
@end

@protocol MessageBrowserController <NSObject, MVSelectionOwner>
- (id)messageBrowserView;
- (BOOL)isSelectionVisible;
- (void)showSelectionAndCenter:(BOOL)fp8;
- (void)updateTextViewerToSelection;
- (id)messagesToTransfer;
- (void)willTransferMessages:(id)fp8 toMailbox:(id)fp12 deleteOriginals:(BOOL)fp16;
- (void)transfer:(id)fp8 didCompleteWithError:(id)fp12;
- (id)messageToSelectIfEntireSelectionRemoved;
- (void)selectNextMessage:(BOOL)fp8;
- (void)selectPreviousMessage:(BOOL)fp8;
- (void)selectNextMessageMovingDownward:(BOOL)fp8;
- (void)selectNextMessageMovingUpward:(BOOL)fp8;
- (BOOL)includeDeleted;
- (void)setIncludeDeleted:(BOOL)fp8;
- (BOOL)shouldDeleteGivenCurrentState;
- (void)deleteSelectionAllowingMoveToTrash:(BOOL)fp8;
- (void)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12 allowUndo:(BOOL)fp16;
- (void)undeleteMessagesAllowingUndo:(BOOL)fp8;
- (void)undeleteMessages:(id)fp8 allowUndo:(BOOL)fp12;
@end

@protocol MessageConsumer
- (void)newMessagesAvailable:(id)fp8;
- (void)newMessagesAvailable:(id)fp8 ranks:(id)fp12;
- (BOOL)shouldCancel;
@end

@protocol MessageContentDisplay <NSObject>
+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (id)contentView;
- (id)textView;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)prepareToRemoveView;
- (void)highlightSearchText:(id)fp8;
- (id)selectedText;
- (id)selectedTextRepresentation;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (struct __CFDictionary *)stringsForURLification;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;
- (id)delegate;
- (void)setDelegate:(id)fp8;
@end

@protocol MessageDeletionTransfer
- (BOOL)canBeginTransfer;
- (void)beginTransfer;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)fp8;
@end

@protocol NSObject
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)fp8;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)respondsToSelector:(SEL)fp8;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned int)retainCount;
- (id)description;
@end

@protocol NSPrintPanelAccessorizing
- (id)localizedSummaryItems;
@end

@protocol NSTextInput
- (void)insertText:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (void)setMarkedText:(id)fp8 selectedRange:(struct _NSRange)fp12;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (int)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)fp8;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct _NSRect)firstRectForCharacterRange:(struct _NSRange)fp8;
- (unsigned int)characterIndexForPoint:(struct _NSPoint)fp8;
- (id)validAttributesForMarkedText;
@end

@protocol QueryProgressMonitor
- (BOOL)shouldCancel;
@end

@protocol SyncableApp
- (id)syncerForDataType:(int)fp8;
- (id)ownerForDataType:(int)fp8;
- (id)interestedPartiesForDataType:(int)fp8;
- (BOOL)tellInterestedPartiesDataWillBeSyncedForDataType:(int)fp8;
- (void)tellInterestedPartiesDataWasSyncedForDataType:(int)fp8;
- (void)client:(id)fp8 mightWantToSyncEntityNames:(id)fp12;
@end

@protocol SyncableDataInterestedParty <NSObject>
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
@end

@protocol SyncableDataOwner <NSObject>
- (BOOL)dataWillBeSyncedVersion:(id *)fp8 data:(id *)fp12;
- (BOOL)dataWasSyncedVersion:(id)fp8 newData:(id)fp12 acceptedChanges:(id)fp16;
@end

@protocol WebHTMLHighlighter
- (struct _NSRect)highlightRectForLine:(struct _NSRect)fp8 representedNode:(id)fp24;
- (void)paintHighlightForBox:(struct _NSRect)fp8 onLine:(struct _NSRect)fp24 behindText:(BOOL)fp40 entireLine:(BOOL)fp44 representedNode:(id)fp48;
- (struct _NSRect)highlightRectForLine:(struct _NSRect)fp8;
- (void)paintHighlightForBox:(struct _NSRect)fp8 onLine:(struct _NSRect)fp24 behindText:(BOOL)fp40 entireLine:(BOOL)fp44;
@end

@interface MailApp (MFUserAgent) <MFUserAgent>
- (void)_runPasswordPanelInMainThreadWithInfo:(struct MailPasswordInfo *)fp8;
- (id)queryUserForPasswordWithMessage:(id)fp8 title:(id)fp12 remember:(char *)fp16;
- (void)_runAlertPanelInMainThreadWithInfo:(struct MailAlertInfo *)fp8;
- (int)runAlertPanelWithTitle:(id)fp8 defaultTitle:(id)fp12 alternateTitle:(id)fp16 otherTitle:(id)fp20 message:(id)fp24;
- (void)runNonModalAlertPanelForObject:(id)fp8 withError:(id)fp12;
- (void)dismissNonModalAlertPanelForObject:(id)fp8;
- (int)informUserOfError:(id)fp8;
- (BOOL)queryUserWithMessageText:(id)fp8 informativeText:(id)fp12 defaultButton:(id)fp16 alternateButton:(id)fp20;
- (BOOL)showCertificateTrustPanelForError:(id)fp8 host:(id)fp12 certificates:(id)fp16;
- (void)_informUserOfDatabaseError:(id)fp8;
- (void)informUserOfIOErrorWithStateIn:(unsigned int *)fp8;
- (void)informUserOfBusyDatabaseWithRecoverer:(id)fp8 diagnosis:(unsigned int *)fp12;
- (id)displayStringForMailbox:(id)fp8;
- (BOOL)queryUserIfNeededToCreateMailbox:(id)fp8 orChooseNewMailbox:(id *)fp12;
- (id)queryUserToSelectMailbox:(id)fp8;
- (void)selectMailboxPanelDone:(id)fp8;
- (int)queryUserForBigMessageAction:(id)fp8;
- (void)downloadBigMessage:(id)fp8;
- (void)storeBeingInvalidated:(id)fp8;
- (BOOL)shouldInvalidateMailbox:(id)fp8;
- (id)sharedAttachmentContextMenu;
- (BOOL)isTerminating;
- (BOOL)wakingFromSleep;
- (BOOL)personWithEmailIsOnline:(id)fp8;
- (BOOL)openTemporaryAttachments:(id)fp8 applicationBundle:(id)fp12;
- (BOOL)isPaused;
- (void)setIsPaused:(BOOL)fp8;
@end

@interface MessageViewerBox : NSBox
{
    BOOL _dragSourceIsAcceptable;
}

- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface MessageViewer : NSResponder <MVMailboxSelectionOwner, MailboxesOutlineViewControllerDelegate>
{
    MessageMall *_messageMall;
    TableViewManager *_tableManager;
    MessageContentController *_contentController;
    MailboxesOutlineViewController *_outlineViewController;
    NSWindow *_window;
    ExpandingSplitView *_splitView;
    NSScrollView *_messageListScrollView;
    MailVerticalSplitView *_verticalSplitView;
    ColorBackgroundView *_viewerContainer;
    ColorBackgroundView *_mailboxesView;
    ActivityViewController *_activityViewController;
    SearchTextField *_searchField;
    NSView *_searchFieldView;
    NSToolbarItem *_searchViewItem;
    NSString *_lastSearchPhrase;
    int _currentSearchArea;
    int _currentSearchField;
    int _currentSearchTarget;
    int _selectedTag;
    NSMenu *_tableHeaderMenu;
    ToDoListController *_toDoController;
    ToDoMall *_toDoMall;
    NSScrollView *_toDoScrollView;
    ToDoListView *_toDoListView;
    NSMenu *_toDoColumnsMenu;
    NSMenu *_toDoSortByMenu;
    NSMenu *_messageColumnsMenu;
    NSMenu *_messageSortByMenu;
    NSMenuItem *_columnsMenuItem;
    NSMenuItem *_sortByMenuItem;
    BOOL _toDoListViewIsShowing;
    BOOL _previewPaneWasVisibleWhenToDoListWasShown;
    NSArray *_toDoMailboxes;
    MessageViewerLazyPopUpButton *newMailboxButton;
    MessageViewerLazyPopUpButton *actionButton;
    VerticalSplitViewHandle *verticalSplitViewHandle;
    MailboxPaneBottomView *mailboxPaneBottomView;
    BOOL _shouldPreventTableViewResize;
    BOOL _shouldMakeTableViewSelectionVisible;
    BOOL _shouldMakeMessageSelectionVisible;
    BOOL _showingDefaultSearchString;
    BOOL _updatingSearchField;
    BOOL _allowShowingDeletedMessages;
    BOOL _suppressWindowTitleUpdates;
    BOOL _didSetupUI;
    float _restoreMailboxPaneToWidthAfterDragOperation;
    float _lastSplitViewPosition;
    float _lastMailboxSplitPosition;
    float _lastDragXPosition;
    NSArray *_mailboxesToDisplayWhenVisible;
    NSToolbar *_toolbar;
    NSMutableDictionary *_toolbarItems;
    NSDictionary *_savedDefaults;
    NSMutableArray *_transferOperations;
    NSMutableDictionary *_viewerContents;
    float _splitViewPositionBeforeSearch;
    SplitterAnimation *_animation;
    SearchSliceView *_searchSliceView;
    BOOL _updatingToolbar;
    float _mailboxesViewWidthAtLastToolbarUpdate;
}

+ (void)initialize;
+ (id)allMessageViewers;
+ (id)allSingleMessageViewers;
+ (id)existingViewerForStore:(id)fp8;
+ (id)existingViewerForMailboxUid:(id)fp8;
+ (id)existingViewerForMessage:(id)fp8;
+ (id)_mailboxUidForTag:(unsigned int)fp8;
+ (id)newViewerForMailboxWithTag:(unsigned int)fp8;
+ (id)existingViewerShowingMessage:(id)fp8;
+ (void)registerNewViewer:(id)fp8;
+ (void)deregisterViewer:(id)fp8;
+ (void)showAllViewers;
+ (id)mailboxUidsBeingViewed;
+ (id)frontmostMessageViewer;
+ (void)searchForString:(id)fp8;
+ (id)_mailboxUidsForPaths:(id)fp8;
+ (void)saveDefaultsWithDelay;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
- (void)revealMessage:(id)fp8;
- (void)revealCurrentMessage;
- (void)_displayFollowup:(id)fp8;
- (void)_cantFindFollowupToMessage:(id)fp8;
- (void)showFollowupsToMessage:(id)fp8;
- (id)_mailboxUidsFromDefaults:(id)fp8;
- (id)initWithSavedDefaults:(id)fp8;
- (id)init;
- (id)plainInit;
- (id)initWithMailboxUids:(id)fp8;
- (void)dealloc;
- (void)_registerForApplicationNotifications;
- (void)_unregisterForApplicationNotifications;
- (void)_registerForStoreNotifications;
- (void)_unregisterForStoreNotifications;
- (void)storeBeingInvalidated:(id)fp8;
- (void)_setStore:(id)fp8;
- (BOOL)_isViewingMailboxUid:(id)fp8;
- (BOOL)_isViewingMessage:(id)fp8;
- (BOOL)_isShowingMessage:(id)fp8;
- (id)window;
- (void)show;
- (void)showAndMakeKey:(BOOL)fp8;
- (void)_setupUIAndOrderFront:(BOOL)fp8 andMakeKey:(BOOL)fp12;
- (id)tableHeaderViewGetDefaultMenu:(id)fp8;
- (id)_toDoController;
- (void)_setUpWindowContents;
- (void)_setupMailboxOutlineView;
- (void)_setupNextKeyViewLoop;
- (void)_setUpMenus;
- (void)takeOverAsSelectionOwner;
- (void)resignAsSelectionOwner;
- (void)windowDidBecomeMain:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)windowWillMiniaturize:(id)fp8;
- (void)openMailboxesPaneToWidth:(float)fp8 byAnimating:(BOOL)fp12;
- (BOOL)mailboxesPaneIsOpen;
- (BOOL)mailboxesPaneIsOpenWideEnoughToUse;
- (void)splitViewDidResizeSubviews:(id)fp8;
- (void)splitViewWillResizeSubviews:(id)fp8;
- (void)dividerDidEndDragSession:(id)fp8;
- (void)splitViewDoubleClickedOnDivider:(id)fp8;
- (void)toggleMailboxesPane:(id)fp8;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;
- (BOOL)splitView:(id)fp8 canCollapseSubview:(id)fp12;
- (float)splitView:(id)fp8 constrainMinCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (float)splitView:(id)fp8 constrainMaxCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (float)maxMailboxesViewWidthAllowed;
- (float)idealMailboxesViewWidth;
- (void)updateMailboxButtonVisibilityForWidth:(float)fp8;
- (float)splitView:(id)fp8 constrainSplitPosition:(float)fp12 ofSubviewAt:(int)fp16;
- (id)selectedMailboxes;
- (id)selectedMailbox:(BOOL)fp8;
- (id)selectedMailbox;
- (BOOL)isSelectedMailboxSpecial;
- (void)selectPathsToMailboxes:(id)fp8;
- (BOOL)mailboxIsExpanded:(id)fp8;
- (BOOL)sectionIsExpanded:(id)fp8;
- (id)expandedItems;
- (id)sortedSectionItemsForTimeMachine;
- (void)revealMailbox:(id)fp8;
- (id)mailboxSelectionWindow;
- (void)setSelectedMailboxes:(id)fp8;
- (id)selectedMessages;
- (void)setSelectedMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (void)outlineViewDoubleClick:(id)fp8;
- (void)selectMailbox:(id)fp8;
- (void)_openBrowserForMessages:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;
- (void)_mailboxWasRenamed:(id)fp8;
- (void)mailboxSelectionChanged:(id)fp8;
- (void)_mallDidOpen;
- (void)_mallStructureDidChange;
- (void)_accountsDidChange:(id)fp8;
- (void)smartMailboxCriteriaChanged:(id)fp8;
- (void)_setMailboxUids:(id)fp8;
- (BOOL)_selectionContainsMessagesWithDeletedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithReadStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithFlaggedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithJunkMailLevelEqualTo:(int)fp8;
- (BOOL)_selectionContainsMessagesWithAttachments;
- (BOOL)atLeastOneSelectedMessageIsInOutbox:(id)fp8;
- (BOOL)atLeastOneSelectedMessageIsInDrafts:(id)fp8;
- (BOOL)_validateActionForToDoList:(SEL)fp8 tag:(int)fp12;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (void)messageWasDisplayedInTextView:(id)fp8;
- (void)messageThreadSummaryWasDisplayedInTextView:(id)fp8;
- (void)checkNewMail:(id)fp8;
- (void)replyMessage:(id)fp8;
- (void)replyAllMessage:(id)fp8;
- (void)replyToSender:(id)fp8;
- (void)replyToOriginalSender:(id)fp8;
- (void)showComposeWindow:(id)fp8;
- (BOOL)_showEditorForNote:(id)fp8;
- (void)showNoteEditor:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)toggleAttachmentsArea:(id)fp8;
- (void)undeleteMessages:(id)fp8;
- (void)deleteMessages:(id)fp8;
- (void)deleteMessagesAllowingMoveToTrash:(BOOL)fp8;
- (void)openMessages:(id)fp8;
- (void)selectAllMessages;
- (void)focusMessages;
- (void)focusMailboxes;
- (void)focusMessage;
- (void)replyViaIM:(id)fp8;
- (void)showAccountInfo:(id)fp8;
- (id)tableManager;
- (id)mailboxesOutlineViewController;
- (void)jumpToSelection:(id)fp8;
- (id)editorWithType:(int)fp8;
- (void)redirectMessage:(id)fp8;
- (void)forwardMessage:(id)fp8;
- (void)forwardAsAttachment:(id)fp8;
- (void)showToDoReferencedMessageInNewWindow:(id)fp8;
- (void)showToDoInList:(id)fp8;
- (id)currentSingleSelectedToDoMailbox;
- (void)displaySelectedMessageInSeparateWindow:(id)fp8;
- (void)renameMailbox:(id)fp8;
- (void)moveMessagesToMailbox:(id)fp8;
- (void)copyMessagesToMailbox:(id)fp8;
- (id)_selectedMessagesWhoseFlag:(unsigned long)fp8 isEqualToState:(BOOL)fp12;
- (void)_changeFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16 undoActionName:(id)fp20;
- (void)markAsRead:(id)fp8;
- (void)markAsUnread:(id)fp8;
- (void)markAsReadFromToolbar:(id)fp8;
- (void)markAsUnreadFromToolbar:(id)fp8;
- (void)markAsUnflagged:(id)fp8;
- (void)markAsFlagged:(id)fp8;
- (void)markAsFlaggedFromToolbar:(id)fp8;
- (void)markAsUnflaggedFromToolbar:(id)fp8;
- (void)changeColor:(id)fp8;
- (void)rebuildTableOfContents:(id)fp8;
- (void)_putMessageDataOntoPasteboard:(id)fp8 attributedString:(id)fp12 shouldDelete:(id)fp16 pasteboardType:(id)fp20;
- (void)_copyMessagesToPasteboard:(id)fp8 deleteWhenCopied:(BOOL)fp12 pasteboardType:(id)fp16 alternateType:(id)fp20;
- (void)_progressAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_showActivityProgressPanelForCopy:(id)fp8;
- (BOOL)_doCopy:(id)fp8 deleteWhenCopied:(BOOL)fp12;
- (void)copy:(id)fp8;
- (void)cut:(id)fp8;
- (int)pasteMessages:(id)fp8 todosByMessage:(id)fp12 unsuccessfulMessages:(id)fp16 flagsToSet:(id)fp20 destinationAccount:(id)fp24 destinationStore:(id)fp28;
- (void)addToDosFromDictionary:(id)fp8 forMessages:(id)fp12 newDocumentIDsByOld:(id)fp16 destinationAccount:(id)fp20;
- (void)_pasteData:(id)fp8 pasteboardType:(id)fp12 alternateData:(id)fp16 alternateType:(id)fp20 destination:(id)fp24;
- (void)paste:(id)fp8;
- (void)startSpeaking:(id)fp8;
- (void)stopSpeaking:(id)fp8;
- (void)speechSynthesizer:(id)fp8 didFinishSpeaking:(BOOL)fp12;
- (void)showPrintPanel:(id)fp8;
- (BOOL)send:(id)fp8 forDraft:(BOOL)fp12 actualMessage:(id)fp16;
- (BOOL)send:(id)fp8 forDraft:(BOOL)fp12;
- (BOOL)send:(id)fp8;
- (void)saveAs:(id)fp8;
- (void)saveAllAttachments:(id)fp8;
- (void)quickLookSelectedAttachments:(id)fp8;
- (id)defaultSearchString;
- (void)showDefaultSearchString;
- (id)_criterionForMailbox:(id)fp8;
- (id)mailboxSearchCriterionForScope:(int)fp8 containsSentMailbox:(char *)fp12 containsTrashMailbox:(char *)fp16 shouldExcludeJunk:(char *)fp20;
- (void)searchIndex:(id)fp8;
- (BOOL)_isShowingSearchResults;
- (unsigned int)_searchResultCount;
- (BOOL)_canSaveSearchWithTarget:(int)fp8;
- (BOOL)_canSearchSelectedMailboxes;
- (void)_showSearchSliceView;
- (void)_hideSearchSliceViewByAnimating:(BOOL)fp8;
- (void)_searchForString:(id)fp8;
- (void)_updateSearchStatus;
- (void)_clearSearchByAnimating:(BOOL)fp8;
- (void)clearSearch:(id)fp8;
- (void)setupSearchParametersForTag:(int)fp8;
- (int)searchField;
- (int)searchTarget;
- (int)searchArea;
- (void)controlTextDidEndEditing:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (void)_removeAttachmentsFromMessages:(id)fp8 fromStores:(id)fp12;
- (void)removeAttachments:(id)fp8;
- (void)scrollBodyToShowToDo:(id)fp8;
- (id)todoTextFromDisplaySelection;
- (BOOL)createToDoWithViewAsKey:(id)fp8;
- (void)_selectAndRevealToDoMailboxForAccount:(id)fp8;
- (id)firstCreateToDoResponder;
- (void)createToDo:(id)fp8;
- (void)sortByTagOfSender:(id)fp8;
- (void)focus:(id)fp8;
- (void)unfocus:(id)fp8;
- (void)openAllThreads:(id)fp8;
- (void)closeAllThreads:(id)fp8;
- (void)toggleThreadedMode:(id)fp8;
- (void)selectThread:(id)fp8;
- (void)selectPreviousInThread:(id)fp8;
- (void)selectNextInThread:(id)fp8;
- (void)showDeletions:(id)fp8;
- (void)hideDeletions:(id)fp8;
- (void)toggleContentsColumn:(id)fp8;
- (void)toggleMessageNumbersColumn:(id)fp8;
- (void)toggleMessageFlagsColumn:(id)fp8;
- (void)toggleFromColumn:(id)fp8;
- (void)togglePresenceColumn:(id)fp8;
- (void)toggleToColumn:(id)fp8;
- (void)toggleDateSentColumn:(id)fp8;
- (void)toggleDateReceivedColumn:(id)fp8;
- (void)toggleLocationColumn:(id)fp8;
- (void)toggleAuthorColumn:(id)fp8;
- (void)toggleSizeColumn:(id)fp8;
- (void)writeDefaultsToArray:(id)fp8;
- (id)_saveDefaults;
- (void)_loadDefaults;
- (void)_setupFromDefaults;
- (id)_countStringForType:(int)fp8 isDrafts:(BOOL)fp12 omitUnread:(BOOL)fp16 totalCount:(unsigned int *)fp20;
- (void)_messageUpdated:(id)fp8;
- (void)_documentsTransferred:(id)fp8;
- (void)_updateWindowTitle;
- (void)_reallyUpdateWindowTitle;
- (void)_updateMallUids:(id)fp8;
- (id)_currentMessageManager;
- (void)_setSplitViewPercentage:(float)fp8 animate:(BOOL)fp12;
- (void)animationDidEnd:(id)fp8;
- (void)messageWasSelected:(id)fp8 fromMessageBrowserController:(id)fp12;
- (void)scrollCurrentlySelectedMessageToTop;
- (void)messageWasDoubleClicked:(id)fp8;
- (void)messageBrowserView:(id)fp8 willStartDragWithEvent:(id)fp12;
- (void)draggedImage:(id)fp8 movedTo:(struct _NSPoint)fp12;
- (void)messageBrowserViewDidEndDragging:(id)fp8;
- (BOOL)transferSelectedMessagesToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
- (BOOL)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12 allowUndo:(BOOL)fp16;
- (void)_reallyAnimateProgressInidicator;
- (void)_updateSearchStatusWithDelay;
- (void)threadDidExpand;
- (void)threadDidCollapse;
- (void)clearUndoRedoStacks;
- (void)searchWillStart;
- (void)searchDidFinish;
- (void)searchDidUpdate;
- (id)selectedMailboxUids;
- (void)performSearch:(id)fp8;
- (void)saveSearch:(id)fp8;
- (void)reapplySortingRules:(id)fp8;
- (void)_returnToSenderSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_bounceMessages:(id)fp8;
- (void)returnToSender:(id)fp8;
- (void)addSenderToAddressBook:(id)fp8;
- (void)markAsJunkMail:(id)fp8;
- (void)markMessagesAsJunkMail:(id)fp8 stores:(id)fp12;
- (void)_deleteJunkedMessages:(id)fp8 inStores:(id)fp12 moveToTrash:(BOOL)fp16;
- (void)synchronouslyMarkAsJunkMail:(id)fp8 inStores:(id)fp12 delete:(BOOL)fp16;
- (void)undoMarkMessagesAsJunkMail:(id)fp8 stores:(id)fp12;
- (void)markAsNotJunkMail:(id)fp8;
- (void)markMessagesAsNotJunkMail:(id)fp8 stores:(id)fp12;
- (void)synchronouslyMarkAsNotJunkMail:(id)fp8 inStores:(id)fp12;
- (BOOL)_transferMessages:(id)fp8 toMailbox:(id)fp12 deleteOriginals:(BOOL)fp16 allowUndo:(BOOL)fp20 isDeleteOperation:(BOOL)fp24;
- (void)_reportError:(id)fp8;
- (void)transfer:(id)fp8 didCompleteWithError:(id)fp12;
- (void)selectMessagesForUndo:(id)fp8;
- (id)undoManagerForMessageTransfer:(id)fp8;
- (void)_updateSearchItemLabel;

@end

@interface MessageViewerLazyPopUpButton : NSPopUpButton
{
    BOOL _didLazyLoadMenu;
    int _menuToUse;
}

- (void)awakeFromNib;
- (void)initializeMenu;
- (void)mouseDown:(id)fp8;
- (int)menuToUse;
- (void)setMenuToUse:(int)fp8;

@end

@interface MessageViewerLazyPopUpButtonCell : ImagePopUpButtonCell
{
}

- (void)accessibilityPerformAction:(id)fp8;

@end

@interface MessageViewer (AppleScript)
- (id)uniqueID;
- (id)objectSpecifier;
- (id)allMessages;
- (id)focusedMessages;
- (void)setFocusedMessages:(id)fp8;
- (int)appleScriptSortColumn;
- (void)setAppleScriptSortColumn:(int)fp8;
- (BOOL)isSortedAscending;
- (void)setIsSortedAscending:(BOOL)fp8;
- (BOOL)previewPaneVisible;
- (void)setPreviewPaneVisible:(BOOL)fp8;
- (id)visibleColumns;
- (void)setVisibleColumns:(id)fp8;
- (id)inbox;
- (id)outbox;
- (id)draftsMailbox;
- (id)sentMailbox;
- (id)trashMailbox;
- (id)junkMailbox;
- (void)setScriptingProperties:(id)fp8;
@end

@interface TableViewManager : NSObject <MessageBrowserController>
{
    ASExtendedTableView *_tableView;
    MessageMall *_messageMall;
    id _delegate;
    NSArray *_tableColumns;
    NSFont *_font;
    NSFont *_boldFont;
    NSFont *_noteFont;
    NSMutableArray *_selection;
    NSArray *_selectionExcludingThreads;
    BOOL _suspendChangesToScrollingAndSelection;
    Message *_currentDisplayedMessage;
    NSMapTable *_storeStateTable;
    NSMutableArray *_draggedMessages;
    NSMutableAttributedString *_truncatedString;
    NSMutableDictionary *_truncatedStringAttributes;
    NSMutableDictionary *_truncatedParagraphStyle;
    NSString *_availableStatusImageName;
    int leftmostTextColumn;
    struct {
        unsigned int includeDeleted:1;
        unsigned int isFocused:1;
        unsigned int sortColumnOrderAscending:1;
        unsigned int isShowingSearchResults:1;
        unsigned int sortColumnOrder:8;
        unsigned int hasScrolledSinceMailboxChange:1;
        unsigned int userChangedSelectionSinceMailboxChange:1;
        unsigned int threadOpeningIsInProgress:1;
        unsigned int threadClosingIsInProgress:1;
        unsigned int doubleClickThreadOpeningIsInProgress:1;
        unsigned int animatingThreadOpening:1;
        unsigned int animatingThreadClosing:1;
        unsigned int animateInSlowMotion:1;
        unsigned int dontUpdateTrackingRects:1;
        unsigned int dontReadWriteStoreSpecificDefaultsToMailbox:1;
        unsigned int useBoldFontForUnreadMessages:1;
        unsigned int clearingSearch:1;
        unsigned int changingSelection:1;
        unsigned int selectionShouldNotChange:1;
        unsigned int searchSortColumnOrder:8;
        unsigned int searchSortColumnOrderAscending:1;
    } _flags;
    NSDictionary *_messageIDsToSelectWhenOpened;
    NSArray *_threadIDsToOpenWhenOpened;
    int colorHighlightLeftEdge;
    int colorHighlightWidth;
    int _windowWidthBeforeSearch;
    VisibleStateObject *_visibleStateBeforeSearch;
    NSMutableSet *_messagesInSelectedThread;
    MessageThread *threadBeingClosed;
    MessageThread *threadBeingOpened;
    struct __CFDictionary *_rowDrawingCache;
    NSMutableSet *_mouseTrackers;
    struct _NSPoint _lastMouseDownInUnreadColumnPoint;
    int _lastMouseDownInUnreadColumnEventNumber;
    struct _NSPoint _currentMouseLocationInWindow;
    float _amountToScrollDownAfterClosingThread;
    int _numberOfSelectedRowsBeforeTogglingThread;
    int _selectedRowBeforeTogglingThread;
    BOOL _unreadColumnResizableAfterResizingColumnsToFit;
    BytesFormatter *_bytesFormatter;
}

+ (void)initialize;
- (void)awakeFromNib;
- (id)tableViewGetDefaultMenu:(id)fp8;
- (id)_bytesFormatter;
- (void)_setBytesFormatter:(id)fp8;
- (void)tableViewScrolled:(id)fp8;
- (void)_setupColumnHeaderIcon:(id)fp8 inColumnWithIdentifier:(id)fp12 accessibilityTitle:(id)fp16 alignment:(unsigned int)fp20;
- (void)_setupTableColumnWidths;
- (void)_configureColumnForEndTruncation:(id)fp8;
- (void)_configureColumnForImageCell:(id)fp8 alignment:(unsigned int)fp12;
- (void)_configureColumnForRolloverCell:(id)fp8 alignment:(unsigned int)fp12 action:(SEL)fp16;
- (void)showFollowupsToMessage:(id)fp8;
- (void)showFollowupsToMessageAtRow:(int)fp8;
- (void)_setupColumnsForTableView;
- (void)dealloc;
- (void)windowWillClose:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)setMessageMall:(id)fp8;
- (void)messagesUpdated:(id)fp8;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (void)setDontReadWriteStoreSpecificDefaultsToMailbox:(BOOL)fp8;
- (void)writeStoreSpecificDefaultsToMailboxUid:(id)fp8;
- (void)readStoreSpecificDefaultsFromMailboxUid:(id)fp8;
- (void)readStoreSpecificDefaultsFromDictionary:(id)fp8;
- (BOOL)canSelectNextMessage;
- (BOOL)canSelectPreviousMessage;
- (void)rulePreferencesChanged:(id)fp8;
- (void)viewerPreferencesChanged:(id)fp8;
- (BOOL)threadHasSelectedMessages:(id)fp8;
- (void)presencePreferenceChanged:(id)fp8;
- (void)threadColorPreferenceChanged:(id)fp8;
- (void)presenceImageChanged:(id)fp8;
- (void)presenceChanged:(id)fp8;
- (void)_updateTableHeaderToMatchCurrentSort;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (id)_columnWithIdentifierTag:(int)fp8;
- (id)_unreadColumn;
- (BOOL)isColumnVisible:(int)fp8;
- (void)setColumn:(int)fp8 toVisible:(BOOL)fp12;
- (void)_setColumn:(int)fp8 toVisible:(BOOL)fp12;
- (int)tableViewNumberOfColumnsToPinToLefthandSide:(id)fp8;
- (void)selectAllMessagesAndMakeFirstResponder;
- (void)makeMessageListFirstResponder;
- (void)updateTableViewRowHeight;
- (void)setFont:(id)fp8;
- (void)setNoteFont:(id)fp8;
- (BOOL)isInThreadedMode;
- (void)toggleThreadedMode;
- (void)threadedModeDidChange:(id)fp8;
- (void)_invalidateSelectionExcludingThreads;
- (BOOL)openThreadAtIndex:(int)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (BOOL)closeThreadAtIndex:(int)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)openAllThreads;
- (void)closeAllThreads;
- (void)toggleThread:(id)fp8;
- (void)toggleThread:(id)fp8 ignoreModifierKeys:(BOOL)fp12;
- (int)_indexOfMessageNearest:(int)fp8 numberOfRows:(int)fp12 threaded:(BOOL)fp16 downward:(BOOL)fp20;
- (BOOL)canSelectPreviousThreadedMessage;
- (BOOL)canSelectNextThreadedMessage;
- (BOOL)canSelectParentOfMessage;
- (BOOL)canSelectFirstReplyToMessage;
- (BOOL)canSelectNextReplyToParent;
- (BOOL)selectionIsExactlyOneOpenThread;
- (void)selectNextMessageMovingDownward:(BOOL)fp8;
- (void)selectNextMessageMovingUpward:(BOOL)fp8;
- (BOOL)stepIntoSelectedThread;
- (BOOL)stepOutOfSelectedThread;
- (BOOL)openSelectedThread;
- (void)selectNextMessage:(BOOL)fp8;
- (void)selectPreviousMessage:(BOOL)fp8;
- (void)selectParentOfMessage;
- (void)selectFirstReplyToMessage;
- (void)selectPeer:(BOOL)fp8;
- (void)selectNextReplyToParent;
- (void)selectPreviousReplyToParent;
- (void)showSelectionAndCenter:(BOOL)fp8;
- (BOOL)isSelectionVisible;
- (void)scrollRowToVisible:(int)fp8 position:(int)fp12;
- (int)tableView:(id)fp8 shouldScrollRowToVisible:(int)fp12;
- (BOOL)_isMessageInSelectedThread:(id)fp8;
- (void)_setNeedsDisplayForMessagesInSet:(id)fp8 highlightOnly:(BOOL)fp12;
- (void)_setNeedsDisplayThreadColumnForMessagesInSet:(id)fp8;
- (void)_updateSelectedThreadList;
- (id)selectedThread;
- (void)_reallyUpdateTextViewerToSelection;
- (void)updateTextViewerToSelection;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12 byExtendingSelection:(BOOL)fp16;
- (void)selectionIsChanging:(id)fp8;
- (void)_selectOrDeselectMembersOfThread:(id)fp8 atIndex:(int)fp12 select:(BOOL)fp16;
- (void)selectionChanged:(id)fp8;
- (void)datesNeedRedisplay;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)_attributesForTruncatedParagraphStyle;
- (id)_colorForMessage:(id)fp8 inRow:(int)fp12;
- (id)_truncatedAttributedStringForString:(id)fp8 message:(id)fp12 row:(int)fp16 shouldIndent:(BOOL)fp20;
- (id)_attributedUpdatedStringForRSSMessage:(id)fp8 row:(int)fp12;
- (id)tableView:(id)fp8 typeSelectStringForTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)tableView:(id)fp8 shouldTypeSelectForEvent:(id)fp12 withCurrentSearchString:(id)fp16;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)_updateColorHighlightEdges;
- (void)tableView:(id)fp8 didDragTableColumn:(id)fp12;
- (void)tableViewDidEndLiveResize:(id)fp8;
- (void)tableViewColumnDidMove:(id)fp8;
- (void)tableViewColumnDidResize:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)tableViewHighlightColor:(id)fp8;
- (int)tableView:(id)fp8 highlightStyleForRow:(int)fp12 inRect:(struct _NSRect *)fp16 color:(id *)fp20;
- (void)doubleClickedMessage:(id)fp8;
- (void)deleteKeyPressed;
- (void)deleteSelectionAllowingMoveToTrash:(BOOL)fp8;
- (id)selectionIncludingThreads:(BOOL)fp8;
- (id)selection;
- (void)_selectMessages:(id)fp8 scrollIfNeeded:(BOOL)fp12;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (void)setCurrentDisplayedMessage:(id)fp8;
- (id)messageStore;
- (id)orderOfFromSubjectDateColumns;
- (id)tableView;
- (BOOL)tableView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)_undoActionNameForMessageCount:(unsigned int)fp8;
- (void)selectMessagesForUndo:(id)fp8;
- (void)_undeleteMessages:(id)fp8 allowUndo:(BOOL)fp12 unreadMessages:(id)fp16;
- (void)undeleteMessages:(id)fp8 allowUndo:(BOOL)fp12;
- (void)_redeleteMessages:(id)fp8 messagesToSelect:(id)fp12;
- (void)deleteMessages:(id)fp8 allowMoveToTrash:(BOOL)fp12 allowUndo:(BOOL)fp16;
- (void)undeleteMessagesAllowingUndo:(BOOL)fp8;
- (BOOL)shouldDeleteGivenCurrentState;
- (void)tableViewDraggedImage:(id)fp8 movedTo:(struct _NSPoint)fp12;
- (unsigned int)tableView:(id)fp8 draggingSourceOperationMaskForLocal:(BOOL)fp12;
- (id)messagesToTransfer;
- (void)willTransferMessages:(id)fp8 toMailbox:(id)fp12 deleteOriginals:(BOOL)fp16;
- (void)transfer:(id)fp8 didCompleteWithError:(id)fp12;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
- (void)tableViewDragWillEnd:(id)fp8 operation:(unsigned int)fp12;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;
- (id)tableView:(id)fp8 namesOfPromisedFilesDroppedAtDestination:(id)fp12 forDraggedRowsWithIndexes:(id)fp16;
- (id)_dragImageForRow:(int)fp8 event:(id)fp12 dragImageOffset:(struct _NSPoint *)fp16;
- (id)tableView:(id)fp8 dragImageForRowsWithIndexes:(id)fp12 event:(id)fp16 dragImageOffset:(struct _NSPoint *)fp20;
- (void)tableView:(id)fp8 willDrawRowsInRange:(struct _NSRange)fp12;
- (void)tableView:(id)fp8 didDrawRowsInRange:(struct _NSRange)fp12;
- (struct _NSRect)frameOfClickedCell;
- (struct _NSPoint)mouseLocationInWindow;
- (void)callWillDisplayCellForClickedCell;
- (void)setButtonCellNeedsDisplay;
- (void)tableView:(id)fp8 gotEvent:(id)fp12;
- (BOOL)shouldTrackMouse:(id)fp8;
- (id)tableView:(id)fp8 rangesForBackgroundShadingInRange:(struct _NSRange)fp12 shadingColors:(id *)fp20 leftColumnColors:(id *)fp24;
- (id)messageMall;
- (int)_indexOfFirstNonDeletedNonSelectedMessage:(int)fp8 withinRowRange:(struct _NSRange)fp12 goUp:(BOOL)fp20;
- (id)messageBrowserView;
- (id)messageToSelectIfEntireSelectionRemoved;
- (BOOL)includeDeleted;
- (void)setIncludeDeleted:(BOOL)fp8;
- (id)noteFont;
- (id)boldFont;
- (void)setBoldFont:(id)fp8;
- (id)font;
- (id)draggedMessages;
- (void)setDraggedMessages:(id)fp8;

@end

@interface TableViewManager (AppleScript)
+ (id)_getDarkerThreadBackgroundColorForThread:(id)fp8;
+ (id)_getThreadBackgroundColorForThread:(id)fp8;
- (int)_columnForAppleScriptColumn:(int)fp8;
- (int)appleScriptSortColumn;
- (void)setAppleScriptSortColumn:(int)fp8;
- (id)appleScriptVisibleColumns;
- (void)setAppleScriptVisibleColumns:(id)fp8;
@end

@interface NSEvent (MailViewerEvent)
- (void)_setModifierFlags:(unsigned int)fp8;
@end

@interface MessageContentController : NSResponder <DocumentEditorManaging>
{
    Message *_message;
    ActivityMonitor *_documentMonitor;
    ActivityMonitor *_urlificationMonitor;
    id <MessageContentDisplay> _currentDisplay;
    id <MessageContentDisplay> _threadDisplay;
    TextMessageDisplay *textDisplay;
    MessageHeaderDisplay *headerDisplay;
    NSView *contentContainerView;
    NSView *junkMailView;
    NSTextField *junkMailMessageField;
    NSButton *junkMailLoadHTMLButton;
    NSView *loadImagesView;
    NSBox *bannerBorderBox;
    NSView *certificateView;
    NSImageView *certificateImage;
    NSTextField *certificateMessageField;
    NSButton *certificateHelpButton;
    NSView *childBannerView;
    NSTextField *childBannerMessageField;
    NSImageView *childBannerImage;
    NSButton *childBannerButton;
    NSButton *childBannerHelpButton;
    NSView *parentBannerView;
    NSTextField *parentBannerMessageField;
    NSImageView *parentBannerImage;
    NSButton *parentBannerButton;
    AttachmentsView *attachmentsView;
    ObjectCache *_documentCache;
    InvocationQueue *invocationQueue;
    double _foregroundLoadStartTime;
    double _backgroundLoadStartTime;
    double _backgroundLoadEndTime;
    NSString *_messageIDToRestoreInitialStateFor;
    struct _NSRect _initialVisibleRect;
    struct _NSRange _initialSelectedRange;
    NSArray *mostRecentHeaderOrder;
    NSTimer *_fadeTimer;
    NSView *_currentBanner;
    BOOL _hideBannerBorder;
    NSTextField *_widthResizableTextFieldInCurrentBanner;
    NSView *_rightNeighborOfWidthResizableTextFieldInCurrentBanner;
    BOOL isForPrinting;
    BOOL showDefaultHeadersStickily;
    MessageViewingState *stickyViewingState;
    MessageViewingState *_viewingState;
    NSMutableDictionary *_editorCache;
    EmbeddedNoteDocumentEditor *_currentEditor;
    NSDictionary *_URLificationStrings;
    NSLock *_URLificationLock;
}

+ (void)setClass:(Class)fp8 forDisplayType:(id)fp12;
- (id)init;
- (id)documentEditors;
- (void)registerDocumentEditor:(id)fp8;
- (void)unregisterDocumentEditor:(id)fp8;
- (void)setIsForPrinting:(BOOL)fp8;
- (void)setContentContainerView:(id)fp8;
- (void)setLoadImagesView:(id)fp8;
- (void)setJunkMailView:(id)fp8;
- (void)setCertificateView:(id)fp8;
- (void)setChildBannerView:(id)fp8;
- (void)setParentBannerView:(id)fp8;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (void)setEditorCache:(id)fp8;
- (void)release;
- (void)dealloc;
- (void)_stopBackgroundMessageLoading:(BOOL)fp8 URLification:(BOOL)fp12 dataDetection:(BOOL)fp16;
- (void)stopAllActivity;
- (id)documentView;
- (id)currentDisplay;
- (void)_updateIfDisplayingMessage:(id)fp8;
- (id)viewingState;
- (void)setViewingState:(id)fp8;
- (void)_fetchDataForMessageAndUpdateDisplay:(id)fp8;
- (void)_messageMayHaveBecomeAvailable;
- (id)_messageTilingView;
- (void)fadeToEmpty;
- (void)_pushDocumentToCache;
- (void)_startBackgroundURLification:(id)fp8;
- (void)_backgroundLoadFinished:(id)fp8;
- (void)_backgroundUrlificationFinished:(id)fp8 urlMatches:(id)fp12;
- (void)setMessage:(id)fp8 headerOrder:(id)fp12;
- (void)_setMessage:(id)fp8 headerOrder:(id)fp12;
- (void)fetchEditorForMessage:(id)fp8 viewingState:(id)fp12;
- (void)editorDidLoad:(id)fp8;
- (void)editorFailedLoad:(id)fp8;
- (id)existingEditor:(Class)fp8 forDocument:(id)fp12;
- (void)_fetchContentsForMessage:(id)fp8 fromStore:(id)fp12 withViewingState:(id)fp16;
- (BOOL)canAddNoteToMessage;
- (BOOL)canAddToDoToMessage;
- (void)webMessageController:(id)fp8 willDisplayMenuItems:(id)fp12;
- (void)addAssociatedToDo:(id)fp8;
- (void)_urlifyWithViewingState:(id)fp8;
- (void)_startBackgroundLoad:(id)fp8;
- (void)_setInvocationQueue:(id)fp8;
- (id)message;
- (void)setMostRecentHeaderOrder:(id)fp8;
- (void)reloadCurrentMessage;
- (void)viewerPreferencesChanged:(id)fp8;
- (void)_removeCurrentBanner;
- (void)_bannerResized:(id)fp8;
- (void)_contentViewResized:(id)fp8;
- (void)_showBannerView:(id)fp8;
- (void)_showLoadImagesBanner;
- (void)_showCertificateBanner;
- (void)_showJunkBanner;
- (BOOL)_showBannerIfMessageIsOutgoingMessageWaitingForParentApproval;
- (BOOL)_showBannerIfMessageIsPermissionRequestFromChild;
- (void)_updateBanner;
- (void)setShowBannerBorder:(BOOL)fp8;
- (void)setShowRevealMessageLink:(BOOL)fp8;
- (BOOL)showRevealMessageLink;
- (void)_addRecentAddress:(id)fp8;
- (void)markAsNotJunkMailClicked:(id)fp8;
- (void)_setJunkLevelToNotJunk;
- (void)approveChildRequest:(id)fp8;
- (void)rejectChildRequest:(id)fp8;
- (void)sendMessage:(id)fp8;
- (void)_messageFlagsDidChange:(id)fp8;
- (void)closeEditors;
- (id)editorForNote:(id)fp8 message:(id)fp12;
- (id)editorForNote:(id)fp8 message:(id)fp12 isPaperless:(BOOL)fp16 willLoad:(char *)fp20;
- (void)_updateEditorDisplay;
- (id)_dataDetectorsContextForMessage:(id)fp8;
- (void)_updateDisplay;
- (void)editorClosed:(id)fp8;
- (void)setCurrentEditor:(id)fp8;
- (void)_setCurrentDisplay:(id)fp8;
- (void)_displayChanged;
- (void)highlightSearchText:(id)fp8;
- (id)attachmentsView;
- (id)textView;
- (id)selectedText;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)clearCache;
- (void)clearCacheForMessage:(id)fp8;
- (void)removeCacheObjectForKey:(id)fp8;
- (void)setCacheObject:(id)fp8 forKey:(id)fp12;
- (id)cacheObjectForKey:(id)fp8;
- (id)viewingStateForMessage:(id)fp8;
- (void)cacheViewingState:(id)fp8 forMessage:(id)fp12;
- (void)initPrintInfo;
- (int)headerDetailLevel;
- (BOOL)showingAllHeaders;
- (void)setShowAllHeaders:(BOOL)fp8;
- (BOOL)remoteAttachmentsAreDownloaded;
- (void)makeStickyInfoFromViewingState:(id)fp8;
- (void)makeStickyShowDefaultHeaders;
- (void)keyDown:(id)fp8;
- (BOOL)pageDown;
- (BOOL)pageUp;
- (BOOL)currentlyViewingSource;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (id)findTarget;
- (BOOL)validateToolbarItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)showAllHeaders:(id)fp8;
- (void)showFilteredHeaders:(id)fp8;
- (void)viewSource:(id)fp8;
- (void)toggleShowControlCharacters:(id)fp8;
- (void)toggleAttachmentsArea:(id)fp8;
- (void)showFirstAlternative:(id)fp8;
- (void)showPreviousAlternative:(id)fp8;
- (void)showNextAlternative:(id)fp8;
- (void)_messageWouldHaveLoadedRemoteURL:(id)fp8;
- (void)downloadRemoteContent:(id)fp8;
- (void)showCertificate:(id)fp8;
- (void)certificateTrustSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)showBestAlternative:(id)fp8;
- (void)changeTextEncoding:(id)fp8;
- (void)makeFontBigger:(id)fp8;
- (void)makeFontSmaller:(id)fp8;
- (void)jumpToSelection:(id)fp8;
- (void)takeFindStringFromSelection:(id)fp8;
- (void)saveAttachments:(id)fp8;
- (void)saveAttachmentsWithoutPrompting:(id)fp8;
- (id)urlificationMonitor;
- (void)setUrlificationMonitor:(id)fp8;
- (id)documentMonitor;
- (void)setDocumentMonitor:(id)fp8;
- (id)currentEditor;
- (id)editorCache;

@end

@interface MessageTextView : NSTextView
{
    struct _NSRect previousVisibleRect;
}

+ (void)initialize;
- (id)defaultFont;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (id)_attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)selectText:(id)fp8;
- (id)hitTest:(struct _NSPoint)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)writablePasteboardTypes;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)textStorageContentWillChange;
- (void)resetCursorRects;
- (void)coalescedResetCursorRects;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (BOOL)moreThanOneAttachmentSelected;
- (id)selectedAttachments;
- (id)imageOfAttachmentsFromRange:(struct _NSRange)fp8 lowerLeft:(struct _NSPoint *)fp16;
- (void)openAttachment:(id)fp8;
- (void)quickLookAttachment:(id)fp8;
- (void)openAttachmentWithApplication:(id)fp8;
- (void)chooseApplicationToOpenAttachment:(id)fp8;
- (void)saveAttachment:(id)fp8;
- (void)saveAttachmentToDownloadsDirectory:(id)fp8;
- (void)deleteAttachment:(id)fp8;
- (void)viewAttachmentInline:(id)fp8;
- (void)importInvitations:(id)fp8;
- (void)_attachmentFinishedDownloading:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface MessageTextContainer : NSTextContainer
{
    struct _NSSize imageSize;
    struct _NSSize linkSize;
}

- (id)initWithContainerSize:(struct _NSSize)fp8;
- (void)setImageSize:(struct _NSSize)fp8;
- (struct _NSSize)imageSize;
- (void)setLinkSize:(struct _NSSize)fp8;
- (struct _NSSize)linkSize;
- (BOOL)isSimpleRectangularTextContainer;
- (BOOL)containsPoint:(struct _NSPoint)fp8;
- (struct _NSRect)lineFragmentRectForProposedRect:(struct _NSRect)fp8 sweepDirection:(unsigned int)fp24 movementDirection:(unsigned int)fp28 remainingRect:(struct _NSRect *)fp32;

@end

@interface MessagePrinter : NSObject
{
    MessageContentController *_contentController;
    NSMutableArray *_messages;
    unsigned int _messageIndex;
    NSString *_originalFilename;
    NSPrintInfo *_printInfo;
    NSPrintOperation *_printOperation;
    unsigned int _scalingBehavior;
    NSWindow *_onscreenWindow;
    NSWindow *_window;
}

+ (id)sharedPrintInfo;
+ (void)_setScalingBehaviorInDefaults:(unsigned int)fp8;
+ (unsigned int)_scalingBehaviorFromDefaults;
+ (void)initialize;
- (void)printMessages:(id)fp8 viewingState:(id)fp12 showDefaultHeaders:(BOOL)fp16 forWindow:(id)fp20;
- (id)_printInfo;
- (void)_setPrintInfo:(id)fp8;
- (unsigned int)scalingBehavior;
- (void)setScalingBehavior:(unsigned int)fp8;
- (void)_setPrintOperation:(id)fp8;
- (id)_printOperation;
- (id)init;
- (void)dealloc;
- (void)_releaseMessages;
- (void)_setMessages:(id)fp8;
- (void)_regularMessageIsReady:(id)fp8;
- (id)_currentMessage;
- (id)_printOperationFromContentController;
- (void)_printNextMessage;
- (void)_cleanUp;
- (unsigned int)_displayIDForWindow:(id)fp8;
- (void)_printInfoDidChange:(id)fp8;
- (struct _NSRect)_windowFrameForBehavior:(unsigned int)fp8 printInfo:(id)fp12;
- (void)_printOperationDidRun:(id)fp8 success:(BOOL)fp12 contextInfo:(id)fp16;
- (id)_messageTitleForMessage:(id)fp8;

@end

@interface RankCell : NSCell
{
    float _rank;
}

- (id)rank;
- (void)setRank:(id)fp8;
- (void)setObjectValue:(id)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface _WebComposeMessageContents : NSObject
{
    int sendFormat;
    NSAttributedString *plainText;
    NSString *topLevelHtmlString;
    NSMutableArray *attachmentsAndHtmlStrings;
    NSMutableArray *urlsForAttachmentsAndHtmlStrings;
    NSArray *_todoIDs;
}

- (void)dealloc;
- (void)addAttachmentOrHtmlString:(id)fp8 withURL:(id)fp12;
- (id)description;
- (id)todoIDs;
- (void)setTodoIDs:(id)fp8;

@end

@interface ComposeBackEnd : NSObject
{
    id _delegate;
    StationeryController *stationeryController;
    NSArray *_originalMessages;
    NSArray *generatedWebArchives;
    int backgroundResourcesLeft;
    DOMNode *stationerySignatureNode;
    NSMutableDictionary *_originalMessageHeaders;
    NSMutableDictionary *_originalMessageBodies;
    WebArchive *_originalMessageWebArchive;
    NSString *_originalMessageBaseURL;
    NSMutableDictionary *_cleanHeaders;
    NSMutableDictionary *_extraRecipients;
    NSMutableDictionary *_directoriesByAttachment;
    NSUndoManager *_undoManager;
    MFUUID *_documentID;
    NSMutableSet *_knownMessageIds;
    InvocationQueue *_saveQueue;
    BOOL _saveThreadCancelFlag;
    NSString *_saveThreadMessageId;
    MailboxUid *_saveThreadMailboxUid;
    struct {
        unsigned int type:4;
        unsigned int sendFormat:2;
        unsigned int contentIsLink:1;
        unsigned int hadChangesBeforeSave:1;
        unsigned int hasChanges:1;
        unsigned int showAllHeaders:1;
        unsigned int includeHeaders:1;
        unsigned int isUndeliverable:1;
        unsigned int isDeliveringMessage:1;
        unsigned int sendWindowsFriendlyAttachments:2;
        unsigned int contentsWasEditedByUser:1;
        unsigned int delegateRespondsToDidChange:1;
        unsigned int delegateRespondsToSenderDidChange:1;
        unsigned int delegateRespondsToDidAppendMessage:1;
        unsigned int delegateRespondsToDidSaveMessage:1;
        unsigned int delegateRespondsToDidBeginLoad:1;
        unsigned int delegateRespondsToDidEndLoad:1;
        unsigned int delegateRespondsToWillCreateMessageWithHeaders:1;
        unsigned int delegateRespondsToShouldSaveMessage:1;
        unsigned int delegateRespondsToShouldDeliverMessage:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForMissingCertificatesForRecipients:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForEncryptionError:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForError:1;
        unsigned int delegateRespondsToDidCancelMessageDeliveryForAttachmentError:1;
        unsigned int signIfPossible:1;
        unsigned int encryptIfPossible:1;
        unsigned int knowsCanSign:1;
        unsigned int canSign:1;
        unsigned int shouldDownloadRemoteAttachments:1;
        unsigned int overrideRemoteAttachmentsPreference:1;
        unsigned int editorHasInitialized:1;
        unsigned int isEditing:1;
        unsigned int isSendFormatInitialized:1;
        unsigned int preferredEncoding;
        unsigned int encodingHint;
    } _flags;
    NSString *_contentForAddressBookUpdate;
    NSString *_vcardPathForAddressBookUpdate;
    BOOL _willCloseEditor;
    EditableWebMessageDocument *_document;
    NSMutableDictionary *_contentsByMessage;
    NSMutableDictionary *_documentsByMessage;
    WebArchive *_initialWebArchive;
    WebArchive *_restoredWebArchive;
    NSMutableDictionary *_attachmentMimeBodiesByURL;
}

+ (id)supportedMailboxUidTypes;
- (void)dealloc;
- (id)init;
- (void)setStateFromBackEnd:(id)fp8;
- (void)setGeneratedWebArchives:(id)fp8;
- (void)editorHasInitialized:(id)fp8;
- (void)setWillCloseEditor:(BOOL)fp8;
- (id)description;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)hasStationery;
- (id)stationeryController;
- (BOOL)hasChanges;
- (void)setHasChanges:(BOOL)fp8;
- (id)undoManager;
- (void)setUndoManager:(id)fp8;
- (void)setType:(int)fp8;
- (int)type;
- (void)setShouldDownloadRemoteAttachments:(BOOL)fp8;
- (void)setIsUndeliverable:(BOOL)fp8;
- (BOOL)isUndeliverable;
- (BOOL)sendWindowsFriendlyAttachments;
- (void)setSendWindowsFriendlyAttachments:(BOOL)fp8;
- (id)originalMessage;
- (id)originalMessageHeaders;
- (id)originalMessageBody;
- (id)_knownMessageIds;
- (void)setOriginalMessage:(id)fp8;
- (void)setOriginalMessages:(id)fp8;
- (id)attachments;
- (id)directoryForAttachment:(id)fp8;
- (BOOL)preserveAddedArchiveBody;
- (id)initialWebArchive;
- (void)setInitialWebArchive:(id)fp8;
- (id)restoredWebArchive;
- (void)setRestoredWebArchive:(id)fp8;
- (id)document;
- (void)generateWebArchiveFromOriginalMessages;
- (void)configureLoadingOfRemoteAttachments;
- (void)setupContentsForView:(id)fp8;
- (BOOL)defaultFormatIsRich;
- (void)_continueToSetupContentsForView:(id)fp8 withArchives:(id)fp12;
- (id)mimeBodyForAttachmentWithURL:(id)fp8;
- (unsigned long)_encodingHint;
- (id)_makeMessageWithContents:(id)fp8 isDraft:(BOOL)fp12 shouldSign:(BOOL)fp16 shouldEncrypt:(BOOL)fp20 shouldSkipSignature:(BOOL)fp24;
- (id)draftMessage;
- (id)message;
- (id)account;
- (void)setAccount:(id)fp8;
- (void)setDeliveryAccount:(id)fp8;
- (id)deliveryAccount;
- (id)sender;
- (id)cleanHeaders;
- (void)setCleanHeaders:(id)fp8;
- (void)setSender:(id)fp8;
- (id)subject;
- (void)setSubject:(id)fp8;
- (id)messageID;
- (void)setShowAllHeaders:(BOOL)fp8;
- (BOOL)includeHeaders;
- (void)setIncludeHeaders:(BOOL)fp8;
- (void)setSendFormat:(int)fp8;
- (int)sendFormat;
- (void)setContentIsLink:(BOOL)fp8;
- (BOOL)contentIsLink;
- (BOOL)okToAddSignatureAutomatically;
- (BOOL)okToLetUserAddSignature;
- (id)signatureId;
- (id)signature;
- (void)setSignature:(id)fp8;
- (void)setStationerySignatureNode:(id)fp8;
- (void)getSignatureElement:(id *)fp8 parent:(id *)fp12 nextSibling:(id *)fp16;
- (id)webArchiveForSignature:(id)fp8;
- (void)setMessagePriority:(int)fp8;
- (int)displayableMessagePriority;
- (void)addHeaders:(id)fp8;
- (id)addressListForHeader:(id)fp8;
- (void)setAddressList:(id)fp8 forHeader:(id)fp12;
- (void)insertAddress:(id)fp8 forHeader:(id)fp12 atIndex:(unsigned int)fp16;
- (void)removeAddressForHeader:(id)fp8 atIndex:(unsigned int)fp12;
- (BOOL)isAddressHeaderKey:(id)fp8;
- (BOOL)deliverMessage;
- (BOOL)isDeliveringMessage;
- (void)_synchronouslyAppendMessageToOutboxWithContents:(id)fp8;
- (void)_backgroundAppendEnded:(id)fp8;
- (void)_backgroundSaveEnded:(id)fp8;
- (void)_backgroundSaveDidChangeMessageId:(id)fp8;
- (id)saveTaskName;
- (BOOL)saveMessage;
- (id)defaultMessageStore;
- (void)removeLastDraft;
- (BOOL)isEditingMessage:(id)fp8;
- (void)setSignIfPossible:(BOOL)fp8;
- (void)setEncryptIfPossible:(BOOL)fp8;
- (id)allRecipients;
- (id)recipientsThatHaveNoKeyForEncryption;
- (unsigned long)preferredEncoding;
- (void)setPreferredEncoding:(unsigned long)fp8;
- (BOOL)canSign;
- (BOOL)canEncryptForAllRecipients;
- (BOOL)isValidSaveDestination:(id)fp8;
- (void)_configureLastDraftInformationFromHeaders:(id)fp8 overwrite:(BOOL)fp12;
- (void)_configureLastDraftInformationFromHeaders:(id)fp8;
- (void)updateDocumentReference:(id)fp8;
- (void)updateSaveDestinationAccount:(id)fp8 mailbox:(id)fp12;
- (void)finishPreparingContentWithEditorSettings:(id)fp8;
- (void)notifyDelegateMonitor:(id)fp8 alreadyDone:(char *)fp12;
- (void)fetchAndCacheMessages;
- (void)generateMessageWebArchives;
- (BOOL)hasContents;
- (BOOL)containsRichText;
- (id)outgoingMessageUsingWriter:(id)fp8 contents:(id)fp12 headers:(id)fp16 isDraft:(BOOL)fp20;
- (id)htmlStringFromRange:(id)fp8 htmlDocument:(id)fp12 removeCustomAttributes:(BOOL)fp16 convertObjectsToImages:(BOOL)fp20 convertEditableElements:(BOOL)fp24;
- (id)_createPlainTextRepresentationIncludeAttachments:(BOOL)fp8;
- (id)plainTextRepresentationOfContents:(id)fp8;
- (void)addBaseURLTagToNode:(id)fp8;
- (void)recursivelyURLifyNode:(id)fp8;
- (void)getContentsForMessage:(id)fp8 body:(id)fp12;
- (id)originalMessageWebArchive;
- (void)setOriginalMessageWebArchive:(id)fp8;
- (id)htmlDocumentForSave;
- (id)makeCopyOfContentsForDraft:(BOOL)fp8;
- (BOOL)attachmentCanBeSentInline:(id)fp8;
- (BOOL)containsAttachments;
- (BOOL)containsAttachmentsThatCouldConfuseWindowsClients;
- (void)_ccOrBccMyselfGivenOriginalMessage:(id)fp8 uniquedRecipientsTable:(id)fp12;
- (void)_setupDefaultRecipientsFirstTime:(BOOL)fp8;
- (id)_allRecipients;
- (void)saveRecipients;
- (id)_fallbackReplyAddress;
- (id)replyAddressForMessage:(id)fp8;
- (id)mailboxUidCreateIfNeeded:(BOOL)fp8;
- (BOOL)isSavingMessage;
- (BOOL)isContentSignificant;
- (BOOL)saveThreadCancelFlag;
- (void)setSaveThreadCancelFlag:(BOOL)fp8;
- (BOOL)_saveThreadShouldCancel;
- (void)_saveThreadUpdateAccount:(id)fp8 mailbox:(id)fp12;
- (void)_saveThreadSetMessageId:(id)fp8 mailboxUid:(id)fp12 overwrite:(id)fp16;
- (void)_saveThreadRemoveLastSave;
- (void)_saveThreadSaveContents:(id)fp8;
- (id)saveThreadMailboxUid;
- (void)setSaveThreadMailboxUid:(id)fp8;
- (id)saveThreadMessageId;
- (void)setSaveThreadMessageId:(id)fp8;
- (id)documentID;
- (void)setDocumentID:(id)fp8;
- (id)originalMessageBaseURL;
- (void)setOriginalMessageBaseURL:(id)fp8;

@end

@interface AddressRectangleView : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;

@end

@interface AddressTextField : AutosizingTextField <NSCopying>
{
    BOOL _addressField;
    BOOL _allowsMultipleAddresses;
    NSMutableArray *trackingRectTags;
    AddressAttachment *expandedAtomAttachment;
    AddressAttachment *attachmentBeingDragged;
    int addressAtomType;
    NSMutableArray *stringsWithNoRecords;
    NSMutableArray *stringsAwaitingRecords;
    NSMutableDictionary *recordsForStrings;
    NSMutableArray *addressRects;
    struct _NSRange draggedSourceAtomsRange;
    BOOL isDraggingFromSelf;
    BOOL isHoveringAddressCard;
    AddressRectangleView *rectangleView;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)insertInScrollViewWithMaxLines:(unsigned int)fp8;
- (void)_scrollToEnd:(id)fp8;
- (void)sizeToFit;
- (void)appendAddressList:(id)fp8 operation:(unsigned int)fp12;
- (unsigned int)insertionPositionForMousePoint:(struct _NSPoint)fp8;
- (void)getAddressRectsForAtoms;
- (id)emailAddressesFromABRecordUIDs:(id)fp8;
- (id)emailAddressesFromFiles:(id)fp8;
- (void)setAddressField:(BOOL)fp8;
- (BOOL)addressField;
- (BOOL)allowsMultipleAddresses;
- (void)setAllowsMultipleAddresses:(BOOL)fp8;
- (int)addressAtomType;
- (void)setAddressAtomType:(int)fp8;
- (void)setExpandedAtomAttachment:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (unsigned int)textView:(id)fp8 draggingEntered:(id)fp12;
- (unsigned int)textView:(id)fp8 draggingUpdated:(id)fp12;
- (void)textView:(id)fp8 draggingExited:(id)fp12;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (void)selectTextBeforePosition:(int)fp8;
- (void)selectTextAfterPosition:(int)fp8;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)expandGroupAddress:(id)fp8;
- (void)editAddress:(id)fp8;
- (void)removeAddress:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)_performOperation:(unsigned int)fp8 usingPasteboard:(id)fp12 sender:(id)fp16;
- (BOOL)performDragOperation:(id)fp8;
- (BOOL)textView:(id)fp8 shouldReadSelectionFromPasteboard:(id)fp12 type:(id)fp16 result:(char *)fp20;
- (void)textView:(id)fp8 draggedImage:(id)fp12 endedAt:(struct _NSPoint)fp16 operation:(unsigned int)fp24;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (void)setAttachmentBeingDragged:(id)fp8;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)textView:(id)fp8 concludeDragOperation:(id)fp12;
- (void)undo:(id)fp8;
- (void)redo:(id)fp8;
- (void)setAttributedStringValue:(id)fp8;
- (void)textDidEndEditing:(id)fp8;
- (BOOL)textShouldEndEditing:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)atomicizeAllAddresses;
- (void)recklesslyAtomicizeAllAddresses;
- (void)domainForMatchingDidChange;
- (void)addressesNeedRedisplay:(id)fp8;
- (void)addressChanged:(id)fp8;
- (void)resetCursorRects;
- (void)viewDidMoveToWindow;
- (void)windowDidResignOrBecomeMainOrKey:(id)fp8;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)fp8;
- (void)_drawScrollViewFocusRing:(id)fp8 clipRect:(struct _NSRect)fp12 needsFullDisplay:(BOOL)fp28;
- (void)setCell:(id)fp8;

@end

@interface NSTextFieldCell (ShouldntTheAppKitBeDoingThis)
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
@end

@interface UnreadQueryProgressMonitor : NSObject <QueryProgressMonitor>
{
    unsigned int sequenceNumber;
    unsigned int librarySequenceNumber;
}

- (id)initWithSequenceNumber:(unsigned int)fp8 librarySequenceNumber:(unsigned int)fp12;
- (BOOL)shouldCancel;

@end

@interface MailboxesController : NSObject
{
    NSMutableArray *_accountsWithChildren;
    NSWindow *_newMailboxPanel;
    NSTextField *_newMailboxField;
    NSTextField *_newMailboxMessage;
    NSButton *_newMailboxOKButton;
    NSPopUpButton *_mailboxPopUp;
    MailboxesChooser *_mailboxesChooser;
    NSWindow *_newCalendarPanel;
    NSTextField *_newCalendarField;
    NSTextField *_newCalendarMessage;
    NSButton *_newCalendarOKButton;
    NSView *_exportChildrenView;
    NSButton *_exportChildrenCheckbox;
    id <MVMailboxSelectionOwner> _currentMailboxSelectionOwner;
    BOOL _currentTransferIsCopy;
    MailboxUid *_selectedParent;
    MailboxUid *_currentTransferMailbox;
    BOOL smartMailboxesNeedSaving;
    BOOL isSavingSyncResults;
    int currentFileVersion;
    id _menuEnabler;
    SEL _menuEnablerSelector;
    NSMutableSet *rootMailboxMenus;
    NSMutableDictionary *_contextualMenus;
}

+ (id)iconForMailboxUid:(id)fp8 smallSize:(BOOL)fp12;
+ (id)filteredMailUserInfoDictionary:(id)fp8;
+ (id)mergeOldMailUserInfoDictionary:(id)fp8 withSyncChanges:(id)fp12;
- (id)menuForMailboxUid:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (void)readDefaults;
- (void)saveDefaults;
- (id)accountsWithChildren;
- (void)_reloadAccountsWithChildren;
- (void)mailboxListingDidChange:(id)fp8;
- (void)setCurrentTransferMailbox:(id)fp8 deletedOriginals:(BOOL)fp12;
- (id)currentTransferMailbox;
- (BOOL)currentTransferDeletesOriginals;
- (id)mailboxSelectionOwner;
- (void)setMailboxSelectionOwnerFrom:(id)fp8;
- (void)resignMailboxSelectionOwnerFor:(id)fp8;
- (id)mailboxSelectionOwnerFromSender:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)_synchronouslyCreateNewMailboxWithName:(id)fp8 parent:(id)fp12;
- (void)_configureNewMailboxPanelForMailbox:(id)fp8;
- (void)newMailbox:(id)fp8;
- (void)newMailboxSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_synchronouslyCreateNewCalendarWithName:(id)fp8 parent:(id)fp12;
- (void)_configureNewCalendarPanelForAccount:(id)fp8;
- (void)newCalendar:(id)fp8;
- (void)newCalendarSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)newSmartMailbox:(id)fp8;
- (void)editSmartMailbox:(id)fp8;
- (void)duplicateSmartMailbox:(id)fp8;
- (void)newFolder:(id)fp8;
- (void)newGroup:(id)fp8;
- (void)mailboxPopUpChanged:(id)fp8;
- (void)_synchronouslyDeleteMailboxes:(id)fp8;
- (void)deleteMailbox:(id)fp8;
- (void)_synchronouslySetName:(id)fp8 andParent:(id)fp12 forMailboxes:(id)fp16;
- (void)renameMailbox:(id)fp8;
- (void)userEditedMailboxName:(id)fp8;
- (void)_exportMailboxSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)_exportMailboxes:(id)fp8 toDir:(id)fp12 includeChildren:(id)fp16;
- (void)exportMailbox:(id)fp8;
- (void)setSpecialMailbox:(id)fp8;
- (void)configureRSSFeeds:(id)fp8;
- (void)toggleShowsUnderInbox:(id)fp8;
- (void)markAllAsRead:(id)fp8;
- (void)_changeReadFlagForMessages:(id)fp8 flag:(BOOL)fp12;
- (id)_unreadMessagesInMailbox:(id)fp8;
- (void)queueUnreadCountUpdate;
- (void)coalesceUnreadCountUpdate;
- (void)libraryMessagesAdded:(id)fp8;
- (void)libraryFlagsChanged:(id)fp8;
- (void)startUnreadCountUpdateWithSequenceNumbers:(id)fp8;
- (void)updateUnreadCountsForSequenceNumber:(id)fp8 librarySequenceNumber:(id)fp12;
- (void)controlTextDidChange:(id)fp8;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)bringUpTransferMenu:(id)fp8;
- (void)_setRootMailboxMenu:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;
- (void)_removeAllItemsFromMenu:(id)fp8;
- (void)resetDynamicMenuContext;
- (void)reallyTearDownDynamicMenus;
- (void)tearDownDynamicMenus:(id)fp8;
- (void)_addMailboxItemsToMenu:(id)fp8 startingFromMailbox:(id)fp12 includeMailboxes:(unsigned int)fp16 selectedMessages:(id)fp20 targetMessageType:(int)fp24;
- (void)_addMailboxItemsToMenu:(id)fp8 startingFromMailbox:(id)fp12;
- (void)setMenuEnabler:(id)fp8 selector:(SEL)fp12;
- (id)_menuItemForMailbox:(id)fp8;
- (void)_addItemsStartingWithMailbox:(id)fp8 toMenu:(id)fp12 withIndentationLevel:(int)fp16 selectedMessages:(id)fp20 targetMessageType:(int)fp24 disableNonStores:(BOOL)fp28;
- (void)addMailboxItemsToMenu:(id)fp8 target:(id)fp12 action:(SEL)fp16 startingAtMailbox:(id)fp20 showUnreadCounts:(BOOL)fp24 includeMailboxes:(unsigned int)fp28 selectedMessages:(id)fp32 targetMessageType:(int)fp36;
- (void)addMailboxItemsToMenu:(id)fp8 target:(id)fp12 action:(SEL)fp16 startingAtMailbox:(id)fp20 showUnreadCounts:(BOOL)fp24 targetMessageType:(int)fp28;
- (void)addMailboxItemsToMenu:(id)fp8 target:(id)fp12 action:(SEL)fp16 includeMailboxes:(unsigned int)fp20 selectedMessages:(id)fp24 targetMessageType:(int)fp28;
- (void)addMailboxItemsToMenu:(id)fp8 target:(id)fp12 action:(SEL)fp16;
- (id)menuItemForMailbox:(id)fp8 target:(id)fp12 action:(SEL)fp16 showUnreadCounts:(BOOL)fp20;
- (BOOL)moveAccount:(id)fp8 toAfterAccount:(id)fp12;
- (BOOL)fileManager:(id)fp8 shouldProceedAfterError:(id)fp12;
- (BOOL)removeAccount:(id)fp8;
- (BOOL)moveMailboxes:(id)fp8 toParentMailbox:(id)fp12;
- (void)_synchronouslyCopyMailboxes:(id)fp8 toParent:(id)fp12 originalParent:(id)fp16;
- (BOOL)copyMailboxes:(id)fp8 toParentMailbox:(id)fp12;
- (BOOL)moveOrCopy:(id)fp8 smartMailboxes:(id)fp12 toIndex:(unsigned int)fp16;
- (void)addSmartMailbox:(id)fp8 select:(BOOL)fp12;
- (void)tentativelyAddSmartMailbox:(id)fp8;
- (void)smartMailboxWasEdited:(id)fp8;
- (void)addSmartMailboxFolder:(id)fp8;
- (void)loadSmartMailboxes;
- (id)smartMailboxes;
- (void)subscribeToRSSFeed:(id)fp8 name:(id)fp12;
- (void)validateAndSubscribeToRSSFeed:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (id)smartMailboxesPath;
- (void)saveSmartMailboxes:(id)fp8;
- (void)writeSmartMailboxesToDisk;
- (id)readSmartMailboxesFromDisk;
- (id)loadDefaultSmartMailboxes;
- (id)smartMailboxesDictionaryRepresentations;
- (id)smartMailboxesDictionaryRepresentationsFilterSyncData:(BOOL)fp8;
- (id)smartMailboxesFromDictionaryRepresentations:(id)fp8;
- (id)smartMailboxesFromDictionaryRepresentations:(id)fp8 andMergeOldUserInfoFromMailboxes:(BOOL)fp12;
- (void)syncSmartMailboxes;
- (BOOL)dataWillBeSyncedVersion:(id *)fp8 data:(id *)fp12;
- (BOOL)dataWasSyncedVersion:(id)fp8 newData:(id)fp12 acceptedChanges:(id)fp16;

@end

@interface FontsAndColorsPreferences : NSPreferencesModule
{
    FontPreferenceContainerView *_mailboxListContainerView;
    FontPreferenceContainerView *_messageListContainerView;
    FontPreferenceContainerView *_messageTextContainerView;
    FontPreferenceContainerView *_noteTextContainerView;
    FontPreferenceContainerView *_fixedWidthContainerView;
    NSArray *_fontPrefContainerViews;
    float _containerSuperViewSpacingY;
    float _containerContainerSpacingY;
    int _changingFontPreference;
    NSMutableDictionary *_midYDict;
    NSFont *_mailboxListFont;
    NSFont *_messageListFont;
    NSFont *_messageFont;
    NSFont *_noteFont;
    NSFont *_fixedWidthFont;
    NSPopUpButton *colorPopupOne;
    NSPopUpButton *colorPopupTwo;
    NSPopUpButton *colorPopupThree;
    NSPopUpButton *lastColorPopupSelected;
    NSTextView *exampleTextView;
    NSArray *_colorList;
    BOOL _isQuotedTextColored;
    BOOL _isPlainTextOfFixedWidth;
}

- (void)initializeFromDefaults;
- (void)growWindowVertically:(float)fp8 animate:(BOOL)fp12;
- (void)updateAutoresizeFlags:(int)fp8;
- (void)layoutFromFontPreference:(int)fp8;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)dealloc;
- (void)replaceExampleTextView;
- (void)awakeFromNib;
- (void)populateFontPrefContainers;
- (void)moduleWillBeRemoved;
- (void)selectFont:(id)fp8;
- (void)toggleColorQuotedText:(id)fp8;
- (void)toggleUseFixedWidthFont:(id)fp8;
- (id)containerViewForFontPreference:(int)fp8;
- (float)sizeContainerView:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)_setOtherColor:(id)fp8 forPopup:(id)fp12;
- (void)_setColor:(id)fp8 forPopup:(id)fp12;
- (void)_updateExampleTextView;
- (void)_updateColorList;
- (void)colorQuotesButtonClicked:(id)fp8;
- (void)colorPopupChanged:(id)fp8;
- (void)colorPicked:(id)fp8;
- (id)fixedWidthFont;
- (void)setFixedWidthFont:(id)fp8;
- (id)noteFont;
- (void)setNoteFont:(id)fp8;
- (id)messageFont;
- (void)setMessageFont:(id)fp8;
- (id)messageListFont;
- (void)setMessageListFont:(id)fp8;
- (id)mailboxListFont;
- (void)setMailboxListFont:(id)fp8;
- (id)colorList;
- (void)setColorList:(id)fp8;
- (BOOL)isPlainTextOfFixedWidth;
- (void)setIsPlainTextOfFixedWidth:(BOOL)fp8;
- (BOOL)isQuotedTextColored;
- (void)setIsQuotedTextColored:(BOOL)fp8;

@end

@interface MailApp (AppleScriptFontsAndColorsPreferences)
- (void)fontsAndColorsPreferencesDidChange:(BOOL)fp8;
- (void)fontsAndColorsPreferencesDidChange;
- (void)setMessageFont:(id)fp8 size:(float)fp12;
- (void)setFixedPitchFont:(id)fp8 size:(float)fp12;
- (BOOL)colorQuotedText;
- (void)setColorQuotedText:(BOOL)fp8;
- (id)messageListFont;
- (void)setMessageListFont:(id)fp8;
- (float)messageListFontSize;
- (void)setMessageListFontSize:(float)fp8;
- (id)messageFont;
- (void)setMessageFont:(id)fp8;
- (float)messageFontSize;
- (void)setMessageFontSize:(float)fp8;
- (BOOL)useFixedWidthFont;
- (void)setUseFixedWidthFont:(BOOL)fp8;
- (id)fixedWidthFont;
- (void)setFixedWidthFont:(id)fp8;
- (float)fixedWidthFontSize;
- (void)setFixedWidthFontSize:(float)fp8;
- (void)setQuotingColor:(int)fp8 forLevel:(int)fp12;
- (int)quotingColorForLevel:(int)fp8;
- (int)quotingColorValue:(id)fp8;
- (int)levelOneQuotingColor;
- (void)setLevelOneQuotingColor:(int)fp8;
- (int)levelTwoQuotingColor;
- (void)setLevelTwoQuotingColor:(int)fp8;
- (int)levelThreeQuotingColor;
- (void)setLevelThreeQuotingColor:(int)fp8;
@end

@interface ComposingPreferences : NSPreferencesModule <AccountStatusDataSourceDelegate>
{
    NSPopUpButton *defaultFormatButton;
    NSButton *alwaysCCMyselfSwitch;
    NSPopUpButton *ccOrBccButton;
    NSButton *replyUsingSameFormatSwitch;
    NSButton *expandAliasesSwitch;
    NSButton *useQuoteBarsSwitch;
    NSPopUpButton *spellCheckingPopUpButton;
    NSButton *replyQuotingSwitch;
    NSMatrix *quotingBehaviorMatrix;
    NSTextField *quotingBehaviorLabel;
    NSButton *matchDomainsSwitch;
    NSTextField *matchingDomainField;
    NSPopUpButton *noteToDoAccountButton;
    NSPopUpButton *sendingAccountButton;
    NSPopUpButton *todoAccountButton;
    NSButton *useAddressCompletionSwitch;
    NSButton *editServerListButton;
    NSPanel *ldapServerPanel;
    NSView *placeHolderView;
    ABLDAP_ConfigController *serverListController;
    BOOL endEditingSimply;
    AccountStatusDataSource *noteToDoAccountDataSource;
}

- (void)dealloc;
- (void)awakeFromNib;
- (void)configureMenuItem:(id)fp8 forAccount:(id)fp12;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)_postComposePreferencesChanged;
- (void)_sizeToFitWithinSuperview:(id)fp8;
- (void)initializeFromDefaults;
- (void)replyUsingSameFormatClicked:(id)fp8;
- (void)useQuoteBarsClicked:(id)fp8;
- (void)replyQuotingBehaviorChanged:(id)fp8;
- (void)quotingBehaviorChanged:(id)fp8;
- (void)spellCheckingBehaviorChanged:(id)fp8;
- (void)alwaysCCMyselfClicked:(id)fp8;
- (void)expandAliasesClicked:(id)fp8;
- (void)defaultMessageFormatChanged:(id)fp8;
- (void)setMessageFormat:(int)fp8;
- (void)useAddressCompletionClicked:(id)fp8;
- (void)_ldapServerListChanged;
- (void)editServerListClicked:(id)fp8;
- (void)matchDomainsClicked:(id)fp8;
- (void)controlTextDidEndEditing:(id)fp8;
- (void)okClicked:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)sendingAccountClicked:(id)fp8;

@end

@interface MailApp (ApplescriptComposingPreferences)
- (int)defaultMessageFormat;
- (void)setDefaultMessageFormat:(int)fp8;
- (BOOL)autosaveComposeWindows;
- (void)setAutosaveComposeWindows:(BOOL)fp8;
- (int)spellCheckingBehavior;
- (void)setSpellCheckingBehavior:(int)fp8;
- (BOOL)checkGrammarWithSpelling;
- (void)setCheckGrammarWithSpelling:(BOOL)fp8;
- (BOOL)expandGroupAddresses;
- (void)setExpandGroupAddresses:(BOOL)fp8;
- (BOOL)useAddressCompletion;
- (void)setUseAddressCompletion:(BOOL)fp8;
- (id)ldapServerNamed:(id)fp8;
- (id)ldapServers;
- (void)insertInLdapServers:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInLdapServers:(id)fp8;
- (void)removeFromLdapServersAtIndex:(unsigned int)fp8;
- (BOOL)replyInSameFormat;
- (void)setReplyInSameFormat:(BOOL)fp8;
- (BOOL)alwaysCCMyself;
- (void)setAlwaysCCMyself:(BOOL)fp8;
- (BOOL)alwaysBCCMyself;
- (void)setAlwaysBCCMyself:(BOOL)fp8;
- (BOOL)includeOriginalMessage;
- (void)setIncludeOriginalMessage:(BOOL)fp8;
- (BOOL)includeAllOfOriginalMessage;
- (void)setIncludeAllOfOriginalMessage:(BOOL)fp8;
- (BOOL)shouldCheckIntranetDomains;
- (BOOL)signOutgoingMessages;
- (void)setSignOutgoingMessages:(BOOL)fp8;
- (BOOL)encryptOutgoingMessages;
- (void)setEncryptOutgoingMessages:(BOOL)fp8;
- (BOOL)inlineSpellCheckingEnabled;
- (void)setInlineSpellCheckingEnabled:(BOOL)fp8;
- (id)intranetDomains;
- (void)setShouldCheckIntranetDomains:(BOOL)fp8 withString:(id)fp12;
@end

@interface ViewerPreferences : NSPreferencesModule
{
    NSButton *_highlightThreadCheckbox;
    NSColorWell *_threadHighlightColorWell;
    NSButton *loadURLsSwitch;
    NSButton *showPresenceSwitch;
    NSButton *showUnreadMessagesInBoldSwitch;
    NSButton *useSmartAddressesSwitch;
    NSPopUpButton *headerDetailPopup;
    NSTableView *customHeaderTable;
    NSButton *addHeaderButton;
    NSButton *removeHeaderButton;
    NSPanel *customHeaderPanel;
    NSMutableArray *filteredHeaders;
    int nextRowToSelectAfterEditing;
    BOOL isEditingHeader;
}

+ (void)postViewingPreferencesChanged;
+ (void)postPresencePreferenceChanged;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)_initializeHeaderDetailLevelPopup;
- (void)_updateCustomHeaderUI;
- (void)initializeFromDefaults;
- (void)loadURLsClicked:(id)fp8;
- (void)showPresenceClicked:(id)fp8;
- (void)useSmartAddressesClicked:(id)fp8;
- (void)editCustomHeadersClicked;
- (void)_customHeaderSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_headerTableBeganEditing:(id)fp8;
- (void)_headerTableEndedEditing:(id)fp8;
- (void)_removeInvalidHeaders;
- (void)_endEditingHeader;
- (void)okClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)removeHeaderClicked:(id)fp8;
- (void)addHeaderClicked:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)headerDetailLevelChanged:(id)fp8;
- (void)highlightThreadClicked:(id)fp8;
- (void)threadHighlightColorChanged:(id)fp8;
- (void)showUnreadMessagesInBoldChanged:(id)fp8;

@end

@interface MailApp (ApplescriptViewerPreferences)
- (BOOL)downloadHTMLAttachments;
- (void)setDownloadHTMLAttachments:(BOOL)fp8;
- (int)headerDetail;
- (void)setHeaderDetail:(int)fp8;
- (BOOL)shouldShowPresence;
- (void)setShouldShowPresence:(BOOL)fp8;
- (BOOL)shouldHighlightThreads;
- (void)setShouldHighlightThreads:(BOOL)fp8;
- (BOOL)shouldShowMailboxesAtLeft;
- (void)setShouldShowUnreadMessagesInBold:(BOOL)fp8;
- (BOOL)shouldShowUnreadMessagesInBold;
@end

@interface AccountDisplayCell : NSTextFieldCell
{
    AccountPreferences *_accountPreferences;
    NSTextFieldCell *_descriptionTextCell;
    NSTextFieldCell *_activeTextCell;
    NSImageCell *_imageCell;
    MailAccount *_account;
}

- (id)initWithAccountPreferences:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)setAccountPreferences:(id)fp8;
- (void)setMailAccount:(id)fp8;
- (struct _NSRect)expansionFrameWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)willBeDisplayed;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface AccountPreferences : NSPreferencesModule <SyncableDataInterestedParty, AccountStatusDataSourceDelegate>
{
    NSMutableArray *_accounts;
    AccountDetails *_accountDetails;
    NSTabView *detailTabView;
    NSTableView *accountsTable;
    NSButton *createAccountButton;
    NSButton *removeAccountButton;
    NSButton *helpButton;
    NSPopUpButton *accountTypePopup;
    NSTextField *accountTypeString;
    NSTextField *accountName;
    NSTextField *fullNameField;
    NSTextField *emailAddressField;
    NSTextField *username;
    NSTextField *hostname;
    NSTextField *password;
    AccountStatusDataSource *_deliveryASDS;
    NSPopUpButton *smtpAccountPopup;
    NSButton *lockDeliveryAccountButton;
    NSView *outlookWebAccessView;
    NSTextField *outlookWebAccessServerName;
    NSButton *editAliasesButton;
    MailAccount *_accountBeingEdited;
    MailAccount *_accountBeingValidated;
    BOOL _accountBeingEditedWasEnabledWhenEditingStarted;
    BOOL _creatingNewAccount;
    BOOL _passwordFieldHasBeenTouched;
    int _indexOfNewAccount;
    struct {
        unsigned int userWantsToQuit:1;
        unsigned int userWantsToClosePrefsPanel:1;
        unsigned int userWantsToChangeSelection:1;
        unsigned int userWantsToCreateNewAccount:1;
        unsigned int userWantsToOpenNewAccountAssistant:1;
    } _flags;
    NSIndexSet *_selectedRows;
    NSString *_selectedToolbarIdentifier;
    BOOL _ignoreTableViewSelectionCallbacks;
    BOOL _registeredForNotifications;
    BOOL _lastPopupSelectionWasITools;
    NSMutableDictionary *_userEnteredInfo;
    NSTextView *accountSupportURLField;
}

+ (void)addAccountType:(id)fp8 class:(Class)fp12;
+ (void)initialize;
+ (void)focusAccount:(id)fp8;
+ (void)editServerList:(id)fp8 selectedAccount:(id)fp12;
+ (void)configureAccountTypePopUp:(id)fp8;
+ (void)selectAccoutType:(Class)fp8 inTypePopup:(id)fp12;
+ (Class)accountClassOfSelectedItemInAccountTypePopup:(id)fp8;
+ (id)ispAccountInfoOfSelectedItemInAccountTypePopup:(id)fp8;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)dealloc;
- (void)awakeFromNib;
- (void)accountsDidChange:(id)fp8;
- (void)initializeFromDefaults;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (void)_saveAccountInfo;
- (void)toggleAccountEnabled:(id)fp8;
- (void)toggleIncludeWhenCheckingForNewMail:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)createNewAccount:(id)fp8;
- (void)_removeAccountBeingCreated;
- (void)editAccount:(id)fp8;
- (void)editMailAccount:(id)fp8;
- (void)removeAccountSheetDidEnd:(id)fp8 returnCode:(int)fp12 account:(id)fp16;
- (void)removeAccount:(id)fp8;
- (BOOL)isAccountInformationDirty;
- (void)_handleRequestToSwitchAwayFromSelectedAccountWithResponse:(BOOL)fp8;
- (void)saveAccountSheetDidEnd:(id)fp8 returnCode:(int)fp12 context:(void *)fp16;
- (BOOL)allowSwitchingAwayFromSelectedAccount;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (void)_clearAccountUI;
- (id)selectedAccount;
- (void)_reloadDeliveryAccountPopup:(id)fp8;
- (void)_setupUIForAccountBeingEdited;
- (void)_runAccountDetailPanelForAccount:(id)fp8;
- (void)saveAccountBeingEdited;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (void)_setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (void)_updateAccountTypePopup;
- (BOOL)newSettingsAreValid;
- (void)accountTypePopupWillPopup:(id)fp8;
- (void)accountTypeChanged:(id)fp8;
- (void)editAliases:(id)fp8;
- (void)editServerList:(id)fp8 selectedAccount:(id)fp12;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)_accountAtRow:(int)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)tableView:(id)fp8 toolTipForCell:(id)fp12 rect:(struct _NSRect *)fp16 tableColumn:(id)fp20 row:(int)fp24 mouseLocation:(struct _NSPoint)fp28;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)selectionShouldChangeInTableView:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (void)controlTextDidChange:(id)fp8;
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
- (id)accountTypeNameForAccountClass:(Class)fp8;
- (id)_newAccountName;
- (Class)_newAccountClass;

@end

@interface MailApp (ApplescriptAccountPreferences)
- (void)_insertInAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInAccounts:(id)fp8;
- (void)insertInIToolsAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInIToolsAccounts:(id)fp8;
- (void)insertInImapAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInImapAccounts:(id)fp8;
- (void)insertInPopAccounts:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInPopAccounts:(id)fp8;
- (void)removeFromAccountsAtIndex:(unsigned int)fp8;
- (id)deliveryAccounts;
@end

@interface IMAPAccountDetails : AccountDetails
{
    NSButton *_compactWhenClosing;
    NSPopUpButton *_messageCaching;
    NSTextField *_serverPathPrefix;
    BOOL warnedAboutCachingAndIndexing;
    NSButton *_keepDraftsOnServer;
    NSButton *_keepSentMessagesOnServer;
    NSButton *_keepTrashOnServer;
    NSButton *_keepJunkOnServer;
    NSButton *_useIDLECommand;
}

- (Class)accountClass;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)didDisplayTabViewItem:(id)fp8;
- (void)_confirmCacheChangeSheetEnded:(id)fp8 alertReturn:(int)fp12 context:(void *)fp16;
- (void)cachePolicyChanged:(id)fp8;

@end

@interface AccountDetails : NSObject
{
    NSView *_detailView;
    NSButton *_enableAccountCheckbox;
    NSTextField *_directory;
    NSButton *_chooseDirectoryButton;
    NSTextField *_portNumberField;
    NSButton *_autoFetch;
    NSButton *_sslSwitch;
    NSPopUpButton *_authenticationPopup;
    NSTextField *_domainLabel;
    NSTextField *_domainField;
    SpecialMailboxes *_specialMailboxes;
    MailAccount *_account;
    AuthScheme *_authScheme;
}

+ (id)accountDetailsForAccountClass:(Class)fp8;
+ (id)accountDetailsNibName;
- (id)init;
- (void)dealloc;
- (Class)accountClass;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (void)_updateDomainUI;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (id)detailView;
- (void)setupAccountFromValuesInSpecialMailboxesUI:(id)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (id)setupSpecialMailboxesUIFromValuesInAccount:(id)fp8;
- (void)didDisplayTabViewItem:(id)fp8;
- (void)openAccountPathDialog:(id)fp8;
- (void)accountPathDialogDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)accountPath;
- (void)setAccountPath:(id)fp8;
- (BOOL)userWantsAccountActive;
- (void)sslChanged:(id)fp8;
- (void)authenticationChanged:(id)fp8;
- (void)_specialMailboxesDidChange:(id)fp8;

@end

@interface POPAccountDetails : AccountDetails
{
    NSButton *_deleteMessagesOnServer;
    NSTextField *_bigMessageWarningSize;
    NSButton *_removeSeenMessagesButton;
    NSPopUpButton *_removeIntervalPopup;
    ActivityMonitor *_deleteMessagesMonitor;
    BOOL _deleteObserverActive;
}

- (id)init;
- (Class)accountClass;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (int)_popDeletionPolicyFromUI;
- (void)setupAccountFromValuesInUI:(id)fp8 forValidation:(BOOL)fp12;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)_confirmDeleteSheetDidEnd:(id)fp8 returnValue:(int)fp12 sender:(id)fp16;
- (void)warnIfDeleteMessages:(id)fp8;
- (void)deleteSeenMessagesNow:(id)fp8;
- (void)deleteSeenMessagesSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)removeMessagesButtonClicked:(id)fp8;
- (void)_deleteServerMessagesCompleted:(id)fp8;
- (void)_deleteServerMessagesStarted:(id)fp8;

@end

@interface SignatureBundle : MVMailBundle <SyncableDataOwner>
{
    NSMutableDictionary *_signatures;
    NSMutableArray *accounts;
    BOOL _isDirty;
    BOOL _isSavingSyncResults;
    NSMutableDictionary *_lastDefaultSignatures;
    int fileVersionNumber;
}

+ (void)initialize;
+ (id)allSignaturesAccount;
+ (id)_reallyOldSignaturesPath;
+ (id)_oldSignaturesPath;
+ (id)signaturesFolderPath;
+ (id)signaturesPlistPath;
- (id)init;
- (void)dealloc;
- (void)loadLastDefaultSignatures;
- (id)signatureAccounts;
- (BOOL)updateAccountList;
- (id)loadFromDictionary:(id)fp8;
- (BOOL)deleteSignaturesNotPresentInNewSignatures:(id)fp8;
- (id)signatures;
- (id)fixAccountIdsInPlist:(id)fp8;
- (unsigned int)numberOfSignatures;
- (id)signaturesForAccount:(id)fp8;
- (id)signatureAtIndex:(int)fp8 forAccount:(id)fp12;
- (id)signatureAtIndex:(int)fp8;
- (void)removeSignatureAtIndex:(int)fp8;
- (void)removeSignature:(id)fp8;
- (void)removeSignatureAtIndex:(int)fp8 forAccount:(id)fp12;
- (void)insertSignature:(id)fp8 atIndex:(int)fp12 forAccount:(id)fp16;
- (void)insertSignature:(id)fp8 atIndex:(int)fp12;
- (void)addSignature:(id)fp8;
- (void)signatureNameChanged:(id)fp8;
- (void)saveChangesToDisk;
- (id)dictionaryRepresentationIncludingSyncInformation:(BOOL)fp8;
- (void)setDefaultSignatureId:(id)fp8 forAccountId:(id)fp12;
- (void)setDefaultSignature:(id)fp8 forAccount:(id)fp12;
- (id)defaultSignatureForAccount:(id)fp8;
- (int)signatureSelectionMethodForAccount:(id)fp8;
- (void)setSignatureSelectionMethod:(int)fp8 forAccount:(id)fp12;
- (id)activeSignatureWithName:(id)fp8;
- (id)activeSignatureWithId:(id)fp8;
- (BOOL)showComposeAccessoryView:(char *)fp8;
- (BOOL)showComposeAccessoryView;
- (void)setShowsComposeAccessoryView:(BOOL)fp8;
- (void)unsetShowsComposeAccessoryView;
- (BOOL)placeSignatureAboveQuotedText;
- (void)setPlaceSignatureAboveQuotedText:(BOOL)fp8;
- (void)configurePopUpButton:(id)fp8 forAccount:(id)fp12 defaultSignature:(id)fp16 selectionMethod:(int)fp20 showAccount:(BOOL)fp24;
- (void)syncSignatures;
- (BOOL)dataWillBeSyncedVersion:(id *)fp8 data:(id *)fp12;
- (BOOL)dataWasSyncedVersion:(id)fp8 newData:(id)fp12 acceptedChanges:(id)fp16;

@end

@interface AllSignaturesAccount : NSObject
{
}

- (id)uniqueId;
- (id)displayName;

@end

@interface SignaturePreferences : NSPreferencesModule
{
    NSTableView *_signaturesTable;
    NSTableView *_accountsTable;
    NSPopUpButton *_selectPopup;
    ColorBackgroundView *_webViewBackground;
    EditingMessageWebView *_webView;
    EditingWebMessageController *_controller;
    NSButton *_textRichnessButton;
    NSTextField *_textRichnessMessageField;
    NSButton *_removeButton;
    NSButton *_placeSignatureAboveQuote;
    unsigned int _addingNewSignature:1;
    unsigned int _appIsTerminating:1;
    unsigned int _loadedInitialHTML:1;
    MailAccount *_selectedAccount;
    MailAccount *_allSignaturesAccount;
    NSString *defaultFontName;
    WebArchive *savedWebArchive;
    BOOL _currentSignatureHasChanges;
}

- (void)dealloc;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (id)imageForPreferenceNamed:(id)fp8;
- (void)_validateButtonState;
- (void)defaultSignatureChanged:(id)fp8;
- (void)initializeFromDefaults;
- (void)setSelectedAccount:(id)fp8;
- (void)saveChanges;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)willBeDisplayed;
- (void)moduleWasInstalled;
- (BOOL)moduleCanBeRemoved;
- (void)moduleWillBeRemoved;
- (BOOL)preferencesWindowShouldClose;
- (void)registerForNotifications;
- (void)unregisterForNotifications;
- (void)accountsDidChange:(id)fp8;
- (void)awakeFromNib;
- (void)determineDefaultFontName;
- (void)defaultFontMayHaveChanged:(id)fp8;
- (void)createSignature:(id)fp8;
- (id)defaultSignatureContentForSelectedAccount;
- (BOOL)endEditingOfSignatureOkayToReload:(BOOL)fp8 needsToReload:(char *)fp12;
- (void)removeSignatureSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)deleteKey:(id)fp8;
- (void)removeSignature:(id)fp8;
- (BOOL)allowsRichText;
- (void)changeSignatureRichness:(id)fp8;
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
- (void)webViewDidChangeTypingStyle:(id)fp8;
- (void)webViewDidChange:(id)fp8;
- (void)_updatePopup;
- (BOOL)validateMenuItem:(id)fp8;
- (void)placeSignatureAboveQuotedText:(id)fp8;
- (BOOL)_validateValuesInUI;
- (void)_updateWebView;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (BOOL)webView:(id)fp8 shouldInsertNode:(id)fp12 replacingDOMRange:(id)fp16 givenAction:(int)fp20;
- (id)webView:(id)fp8 shouldReplaceSelectionWithWebArchive:(id)fp12 givenAction:(int)fp16;
- (void)webView:(id)fp8 didAddMailAttachment:(id)fp12;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webArchiveForEditedSignature;
- (void)displaySelectedSignatureDetails;
- (int)numberOfRowsInTableView:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)truncatingAttributes;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (BOOL)selectionShouldChangeInTableView:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (float)splitView:(id)fp8 constrainMinCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (float)splitView:(id)fp8 constrainMaxCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;

@end

@interface DeletingTableView : NSTableView
{
}

- (void)keyDown:(id)fp8;
- (void)_userSelectIndexesInRange:(struct _NSRange)fp8 toIndex:(int)fp16 byExtendingSelection:(BOOL)fp20 indexType:(int)fp24;

@end

@interface MailApp (ApplescriptSignaturePreferences)
- (id)signatures;
- (BOOL)chooseSignatureWhenComposing;
- (void)setChooseSignatureWhenComposing:(BOOL)fp8;
- (id)selectedSignature;
- (void)setSelectedSignature:(id)fp8;
@end

@interface MailSorterPreferences : NSPreferencesModule <SyncableDataInterestedParty>
{
    NSTableView *rulesTable;
    NSButton *editButton;
    NSButton *duplicateButton;
    NSButton *removeButton;
    NSPanel *ruleDetailPanel;
    NSTextField *ruleNameField;
    NSMutableArray *_actionViews;
    NSMenu *_actionMenu;
    NSScrollView *_actionContainer;
    NSView *_soundActionView;
    NSView *_colorActionView;
    NSView *_transferActionView;
    NSView *_copyActionView;
    NSView *_autoReplyActionView;
    NSView *_autoForwardActionView;
    NSView *_autoRedirectActionView;
    NSView *_markDeletedActionView;
    NSView *_markAsReadActionView;
    NSView *_markAsFlaggedActionView;
    NSView *_stopEvaluatingRulesActionView;
    NSView *_runAppleScriptActionView;
    NSView *_notifyUserActionView;
    NSPopUpButton *colorPopup;
    NSPopUpButton *colorStylePopup;
    SoundPopUpButton *soundPopup;
    AddressTextField *_forwardRecipientsField;
    AddressTextField *_redirectRecipientsField;
    NSPanel *responseMessageTextPanel;
    NSTextView *responseMessageTextView;
    NSTextField *appleScriptPathField;
    CriteriaUIHelper *criteriaUIHelper;
    MailboxesChooser *destinationChooser;
    MailboxesChooser *copyDestinationChooser;
    BOOL colorPanelShouldBeHidden;
    int currentlySelectedRow;
    MessageRule *_ruleBeingValidated;
    MessageRule *_ruleBeingEdited;
    DraggingTextView *addressFieldEditor;
    BOOL isDuplicatingRule;
    BOOL hasPendingChanges;
}

- (void)dealloc;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)awakeFromNib;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (id)viewForPreferenceNamed:(id)fp8;
- (id)preferencesNibName;
- (id)imageForPreferenceNamed:(id)fp8;
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
- (void)_validateButtonState;
- (void)initializeFromDefaults;
- (void)saveChanges;
- (void)createRule:(id)fp8;
- (void)duplicateRule:(id)fp8;
- (void)editRule:(id)fp8;
- (void)removeRuleSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)removeRule:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (int)tableView:(id)fp8 highlightStyleForRow:(int)fp12 inRect:(struct _NSRect *)fp16 color:(id *)fp20;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (BOOL)tableView:(id)fp8 writeRows:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)_setOtherColor:(id)fp8;
- (void)removeAction:(id)fp8;
- (id)_actionViewForTag:(int)fp8;
- (void)addActionForTag:(int)fp8 atIndex:(int)fp12;
- (void)_configureColorPopupForColorStyle:(int)fp8;
- (void)_configureActionsForRule:(id)fp8;
- (void)addressesNeedRedisplay:(id)fp8;
- (void)addAction:(id)fp8;
- (void)_validateActionMenuItem:(id)fp8 currentTag:(int)fp12;
- (void)runRuleDetailPanelForRule:(id)fp8 inWindow:(id)fp12;
- (void)_ruleDetailSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)applyRulesSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)okClicked:(id)fp8;
- (void)alertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)cancelClicked:(id)fp8;
- (void)colorChanged:(id)fp8;
- (void)colorPicked:(id)fp8;
- (void)colorStyleChanged:(id)fp8;
- (void)setResponseMessageClicked:(id)fp8;
- (void)responseMessageOKClicked:(id)fp8;
- (void)responseMessageCancelClicked:(id)fp8;
- (void)flagsToApplyChanged:(id)fp8;
- (void)chooseAppleScriptPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)chooseAppleScriptClicked:(id)fp8;
- (void)mailboxSelected:(id)fp8;
- (void)actionPopupWillPopup:(id)fp8;
- (void)actionPopupChanged:(id)fp8;
- (id)titleForSoundFile:(id)fp8;

@end

@interface MailApp (ApplescriptMailSorterPreferences)
- (id)rules;
- (void)insertInRules:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInRules:(id)fp8;
- (void)removeFromRulesAtIndex:(unsigned int)fp8;
@end

@interface _AutosizingClipView : NSClipView
{
}

- (void)viewFrameChanged:(id)fp8;

@end

@interface AutosizingScrollView : NSScrollView
{
    float _maxHeight;
    unsigned int _resizingContent:1;
    unsigned int _UNUSED:31;
}

+ (struct _NSSize)frameSizeForContentSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(unsigned int)fp24;
+ (struct _NSSize)contentSizeForFrameSize:(struct _NSSize)fp8 hasHorizontalScroller:(BOOL)fp16 hasVerticalScroller:(BOOL)fp20 borderType:(unsigned int)fp24;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)tile;
- (void)docViewFrameChanged;
- (void)setMaxHeight:(float)fp8;
- (float)maxHeight;
- (void)setTag:(int)fp8;
- (int)tag;

@end

@interface NSClipView (AutosizingScrollViewAdditions)
- (void)setAutomagicallyResizes:(BOOL)fp8;
@end

@interface AutosizingTextField : NSTextField
{
    float _minimumHeight;
}

- (void)_editorResized;
- (void)_adjustWidth:(float)fp8 ofEditor:(id)fp12;
- (void)_adjustWidthBy:(float)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)sizeToFit;
- (void)_setupTextView:(id)fp8;
- (void)didAddSubview:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (float)minimumHeight;
- (void)setMinimumHeight:(float)fp8;
- (void)dealloc;

@end

@interface DeliveryQueue : InvocationQueue
{
    unsigned int _isBackgroundProcessingEnabled:1;
    unsigned int _resetDeliveryQueueWhenDoneWithCurrentMessage:1;
    MessageStore *_outboxStore;
    int _indexOfLastMessageToProcess;
    NSMutableDictionary *_errorResponses;
    NSMutableSet *_accountsOnHold;
    NSMutableDictionary *_alternateDeliveryAccounts;
    BOOL _queueIsActive;
    double _beginDeliveryTime;
    ActivityMonitor *_deliveryMonitor;
}

+ (id)sharedDeliveryQueue;
- (id)init;
- (void)dealloc;
- (void)setBackgroundProcessingEnabled:(BOOL)fp8;
- (BOOL)isBackgroundProcessingEnabled;
- (id)deliveryMonitor;
- (void)setDeliveryMonitor:(id)fp8;
- (void)processDeliveryQueueStartingAtIndex:(unsigned int)fp8;
- (void)_deliverQueuedMessages:(unsigned int)fp8;
- (int)appendMessageToQueue:(id)fp8 replacingOriginalMessage:(id)fp12;
- (void)resetStateAndReprocessQueue;
- (void)resetStateAndReprocessQueueIfNecessary;
- (void)_resetStateAndReprocessQueueIfNecessary;
- (id)outboxStore;
- (void)setOutboxStore:(id)fp8;
- (BOOL)_openOutboxStoreIfNeeded;
- (void)_closeOutboxStore;
- (BOOL)deliveryQueueContainsMessage:(id)fp8;
- (int)_performDeliveryOfMessage:(id)fp8 accountUsed:(id *)fp12;
- (void)cancelDeliveryOfMessage:(id)fp8;
- (void)_networkConfigurationChanged:(id)fp8;
- (void)_deliveryAccountsDidChange:(id)fp8;
- (void)setAlternateDeliveryAccount:(id)fp8 forAccount:(id)fp12;
- (void)unfreezeDeliveryAccount:(id)fp8 reprocessQueue:(BOOL)fp12;
- (id)alternateDeliveryAccountForAccount:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)_isMessageBeingEdited:(id)fp8;

@end

@interface ScriptableMessageTextStorage : MessageTextStorage
{
}

- (void)replaceCharactersInRange:(struct _NSRange)fp8 withAttributedString:(id)fp16;
- (void)addAttribute:(id)fp8 value:(id)fp12 range:(struct _NSRange)fp16;
- (void)setAttributes:(id)fp8 range:(struct _NSRange)fp12;

@end

@interface ComposeBackEnd_Scripting : ComposeBackEnd
{
    MessageTextStorage *_textStorage;
}

- (void)dealloc;
- (void)setTextStorage:(id)fp8;
- (id)textStorage;
- (id)content;
- (void)setContent:(id)fp8;
- (void)_pushTextStorage;
- (void)_convertTextStorage;
- (void)_coalescedConvertTextStorage;

@end

@interface ComposeBackEnd (ScriptingSupport)
+ (id)_messageEditorForComposeBackEnd:(id)fp8 window:(id *)fp12;
- (BOOL)isVisible;
- (void)setIsVisible:(BOOL)fp8;
- (id)appleScriptSender;
- (void)setAppleScriptSender:(id)fp8;
- (id)appleScriptSubject;
- (void)setAppleScriptSubject:(id)fp8;
- (id)content;
- (void)setContent:(id)fp8;
- (id)messageSignature;
- (void)setMessageSignature:(id)fp8;
- (void)_addRecipientsForKey:(id)fp8 toArray:(id)fp12;
- (id)recipients;
- (id)toRecipients;
- (id)ccRecipients;
- (id)bccRecipients;
- (void)insertRecipient:(id)fp8 atIndex:(unsigned int)fp12 inHeaderWithKey:(id)fp16;
- (void)insertInToRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInToRecipients:(id)fp8;
- (void)insertInCcRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInCcRecipients:(id)fp8;
- (void)insertInBccRecipients:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInBccRecipients:(id)fp8;
- (void)removeFromToRecipientsAtIndex:(unsigned int)fp8;
- (void)removeFromCcRecipientsAtIndex:(unsigned int)fp8;
- (void)removeFromBccRecipientsAtIndex:(unsigned int)fp8;
- (void)replaceFormattedAddress:(id)fp8 withAddress:(id)fp12 forKey:(id)fp16;
- (id)handleSaveMessageCommand:(id)fp8;
- (id)handleSendMessageCommand:(id)fp8;
- (id)handleCloseScriptCommand:(id)fp8;
- (id)uniqueID;
- (id)objectSpecifier;
- (void)setHtmlContent:(id)fp8;
- (void)setVcardPath:(id)fp8;
@end

@interface MouseTrackingWindow : NSWindow
{
}

- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (void)displayIfNeeded;
- (BOOL)performKeyEquivalent:(id)fp8;
- (void)selectKeyViewFollowingView:(id)fp8;
- (void)selectKeyViewPrecedingView:(id)fp8;

@end

@interface NSWindow (BetterDescription)
- (id)debugDescription;
@end

@interface FlippedView : NSView
{
}

- (BOOL)isFlipped;
- (BOOL)isOpaque;

@end

@interface ActivityViewer : NSObject
{
    FlippedView *_docView;
    NSScrollView *_scrollView;
    NSPanel *_window;
    NSMutableArray *entries;
    int _numActiveEntries;
    NSTimer *_updateTimer;
}

- (id)init;
- (void)dealloc;
- (void)initializeFromDefaults;
- (void)awakeFromNib;
- (void)_handleNewActivity:(id)fp8;
- (void)_updateAllEntries;
- (void)_addViewToViewerWindow:(id)fp8;
- (void)_appendEntry:(id)fp8;
- (void)removeEntry:(id)fp8;
- (void)_tileViews;
- (BOOL)hasBackgroundActivity;
- (int)countOfBackgroundActivities;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)isActivityViewerVisible;
- (void)toggleActivityViewerVisible;
- (id)statusMessageForTarget:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (struct _NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(struct _NSRect)fp12;

@end

@interface MailApp (ActivityViewerScripting)
- (int)backgroundThreadCount;
@end

@interface MailNotificationCenter : NSNotificationCenter
{
    NSHashTable *_nameTable;
}

- (void)addObserver:(id)fp8 selector:(SEL)fp12 name:(id)fp16 object:(id)fp20;
- (void)addObserverInMainThread:(id)fp8 selector:(SEL)fp12 name:(id)fp16 object:(id)fp20;
- (void)postNotification:(id)fp8;
- (void)postNotificationName:(id)fp8 object:(id)fp12 userInfo:(id)fp16;
- (void)_postNotificationWithMangledName:(id)fp8 object:(id)fp12 userInfo:(id)fp16;
- (void)removeSafeObserver:(id)fp8;
- (void)removeObserver:(id)fp8 name:(id)fp12 object:(id)fp16;

@end

@interface NSNotificationCenter (ToReplaceCenterWithOurOwn)
+ (id)allocWithZone:(struct _NSZone *)fp8;
@end

@interface Signature : NSObject <NSCopying>
{
    NSString *_uniqueId;
    NSString *_name;
    NSData *_webArchiveData;
    unsigned int _isRich:1;
    unsigned int _isSavedAsRich:1;
    unsigned int _readFromTextFile;
    unsigned int _isDirty:1;
}

- (void)dealloc;
- (id)initWithName:(id)fp8;
- (id)initWithName:(id)fp8 uniqueId:(id)fp12;
- (id)initWithDictionary:(id)fp8;
- (BOOL)saveContentToDisk;
- (void)removeContentFromDisk;
- (id)dictionaryRepresentationIncludingWebArchiveData:(BOOL)fp8;
- (id)dictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)uniqueId;
- (void)setName:(id)fp8;
- (id)name;
- (id)webArchive;
- (void)setWebArchive:(id)fp8;
- (id)attributedString;
- (id)textValue;
- (void)setTextValue:(id)fp8;
- (void)setIsRich:(BOOL)fp8;
- (BOOL)isRich;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;

@end

@interface MailApp (ApplescriptSignature)
- (void)insertInSignatures:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInSignatures:(id)fp8;
- (void)removeFromSignaturesAtIndex:(unsigned int)fp8;
@end

@interface Signature (Applescript)
- (id)signatureName;
- (void)setSignatureName:(id)fp8;
- (id)signatureContents;
- (void)setSignatureContents:(id)fp8;
- (id)objectSpecifier;
@end

@interface iToolsAccountDetails : IMAPAccountDetails
{
}

+ (id)accountDetailsNibName;
- (Class)accountClass;
- (void)setupUIFromValuesInAccount:(id)fp8;

@end

@interface AttachmentManager : NSObject
{
    NSMutableArray *_openedAttachmentPaths;
    NSMutableDictionary *_openedAttachmentMessageIDs;
    NSMutableArray *_messageIDPurgeQueue;
    NSTimer *_purgeTimer;
    int _purgeBehavior;
    NSMutableDictionary *_previewedAttachments;
}

+ (void)_registerDefaults;
+ (id)sharedInstance;
+ (id)openedAttachmentListPath;
+ (BOOL)attachmentPurgingIsEnabled;
- (int)attachmentPurgingBehavior;
- (id)init;
- (void)dealloc;
- (void)initializeAttachmentPurging;
- (void)enableAttachmentPurging;
- (void)disableAttachmentPurging;
- (void)setAttachmentPurgingBehavior:(int)fp8;
- (void)beginLoadingInlineAttachmentsForDisplay:(id)fp8;
- (void)cancelLoadingInlineAttachmentsForDisplay:(id)fp8;
- (BOOL)dragAbortedBecauseOneOrMoreAttachmentsNotDownloaded:(id)fp8 inView:(id)fp12;
- (void)_confirmDownloadSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (BOOL)dragAttachments:(id)fp8 startPoint:(struct _NSPoint)fp12 view:(id)fp20 event:(id)fp24 image:(id)fp28 delegate:(id)fp32;
- (id)pathsForDraggedAttachments:(id)fp8 fromView:(id)fp12;
- (void)_openFromDownloadedNotification:(id)fp8;
- (void)_downloadCompleted:(id)fp8;
- (id)_urlForAttachment:(id)fp8 attachmentDirectory:(id)fp12;
- (void)addAttachmentToQuickLookPanel:(id)fp8 attachmentDirectory:(id)fp12 window:(id)fp16;
- (struct _NSRect)previewPanel:(id)fp8 frameForURL:(id)fp12;
- (id)previewPanel:(id)fp8 transitionImageForURL:(id)fp12 frame:(struct _NSRect *)fp16;
- (BOOL)previewPanel:(id)fp8 shouldOpenURL:(id)fp12;
- (void)windowWillClose:(id)fp8;
- (void)quickLookAttachments:(id)fp8 window:(id)fp12;
- (void)quickLookAttachmentsFromMessages:(id)fp8 window:(id)fp12;
- (void)openAttachments:(id)fp8 applicationURL:(struct __CFURL *)fp12 window:(id)fp16 delegate:(id)fp20;
- (void)openAttachmentsWithDictionary:(id)fp8;
- (void)saveAttachmentsFromMessages:(id)fp8 window:(id)fp12;
- (void)runSavePanelForAttachments:(id)fp8 window:(id)fp12;
- (void)saveAttachmentsToDownloadDirectory:(id)fp8 window:(id)fp12;
- (BOOL)openTemporaryAttachments:(id)fp8 applicationBundle:(id)fp12 window:(id)fp16;
- (BOOL)openInvitationAttachments:(id)fp8 openImmediately:(BOOL)fp12;
- (void)chooseApplicationToOpenAttachments:(id)fp8 needsSave:(BOOL)fp12 window:(id)fp16 delegate:(id)fp20;
- (void)prepareAttributedString:(id)fp8 forPrinter:(id)fp12;
- (void)_confirmExecutableSheetDidEnd:(id)fp8 alertReturn:(int)fp12 context:(id)fp16;
- (BOOL)openFileURL:(id)fp8 stayInBackground:(BOOL)fp12 window:(id)fp16;
- (BOOL)openFileAtPath:(id)fp8 withApplication:(id)fp12 stayInBackground:(BOOL)fp16;
- (void)configureOpenWithMenu:(id)fp8 forAttachments:(id)fp12;
- (id)contextualMenuForAttachments:(id)fp8 clickedAttachment:(id)fp12 forEditing:(BOOL)fp16;
- (void)saveAttachments:(id)fp8 toDirectory:(id)fp12 makePathsUnique:(BOOL)fp16 window:(id)fp20;
- (void)writeImageAttachmentToPasteboard:(id)fp8;

@end

@interface QuickLookEmptyView : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;

@end

@interface AttachmentManager (Internal)
- (long)_openFullPath:(id)fp8 withAppURL:(struct __CFURL *)fp12 options:(unsigned int)fp16;
- (void)_openPathsForAttachmentsWithDictionary:(id)fp8;
- (void)_chooseApplicationSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (void)_immediatelySaveFileWrapper:(id)fp8 path:(id)fp12 window:(id)fp16;
- (void)_saveAttachment:(id)fp8 path:(id)fp12 window:(id)fp16;
- (id)_saveAttachments:(id)fp8 toDirectory:(id)fp12 makePathsUnique:(BOOL)fp16;
- (id)_saveAttachments:(id)fp8 toDirectory:(id)fp12;
- (void)_saveAttachmentsFromMessages:(id)fp8 toDirectory:(id)fp12;
- (void)_savePanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (void)_reportCantOpenSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(struct SheetContext *)fp16;
- (BOOL)_sameAttachmentAsBefore:(id)fp8 path:(id)fp12;
- (BOOL)_immediatelyOpenAttachment:(id)fp8 path:(id)fp12 window:(id)fp16 application:(struct __CFURL *)fp20 reason:(int)fp24 exists:(BOOL)fp28;
- (BOOL)_immediatelyOpenAttachment:(id)fp8 path:(id)fp12 window:(id)fp16 application:(struct __CFURL *)fp20 reason:(int)fp24;
- (void)_setupOpenedAttachmentsMessageIDMap;
- (void)_addOrReplaceEntry:(id)fp8 inAttachmentList:(id)fp12;
- (void)_addPurgeEntryForAttachmentAtPath:(id)fp8 modDate:(id)fp12 messageID:(id)fp16 partNumber:(id)fp20;
- (void)_scheduleAttachmentListSave;
- (void)_saveOpenedAttachmentsList;
- (BOOL)_allMessagesWithMessageIDAreDeletedOrTrashed:(id)fp8;
- (void)_synchronouslyPurgeAttachments;
- (void)_finishTerminatingAttachmentPurge;
- (void)_reallyPurgeAttachments;
- (void)_purgeAttachments:(id)fp8;
- (void)_purgeMessageIDs;
- (void)_scheduleMessageIDPurge;
- (void)_schedulePurgeOfMessageIDs:(id)fp8;
- (void)_messageDeleted:(id)fp8;
- (void)_handleMessageDeleted:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (BOOL)_immediatelyOpenAttachment:(id)fp8 withApplicationURL:(struct __CFURL *)fp12 window:(id)fp16 attachmentDirectory:(id)fp20 reason:(int)fp24;
- (id)_pathForSavedFileWrapper:(id)fp8 directory:(id)fp12 makePathUnique:(BOOL)fp16;
- (void)_noteFileSystemChanged:(id)fp8;
@end

@interface NSTextAttachmentCell (MailQuickLookAdditions)
- (struct _NSRect)quickLookRectForFrame:(struct _NSRect)fp8;
- (id)quickLookTransitionImage;
@end

@interface MessageViewer (MessageViewerToolbar)
- (void)setupToolbar;
- (BOOL)validateToolbarItem:(id)fp8;
- (id)previousIdentifierForUpgradingToolbar:(id)fp8;
- (id)toolbar:(id)fp8 upgradedItemIdentifiers:(id)fp12;
- (void)configureSegmentedItem:(id)fp8 withDictionary:(id)fp12 forSegment:(int)fp16;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (void)setupSearchView:(BOOL)fp8;
- (void)_handleCancelSearchButton:(id)fp8;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (void)_reallyUpdateToolbar;
- (void)_updateToolbarForResizing:(BOOL)fp8;
- (void)toolbarDidRemoveItem:(id)fp8;
- (void)toolbarWillAddItem:(id)fp8;
- (void)toolbarDidMoveItem:(id)fp8;
- (void)toolbarDidReplaceAllItems:(id)fp8;
- (void)_mailboxesViewFrameChanged;
- (void)_mailboxesViewDidEndLiveResize;
@end

@interface ColorBackgroundView (MessageViewerAdditions)
- (void)viewDidEndLiveResize;
@end

@interface MessageTextStorage : NSConcreteTextStorage
{
    BOOL _isRichText;
    unsigned int _delegateRespondsToAttachmentsAdded:1;
    unsigned int _delegateRespondsToAttachmentsDeleteded:1;
    unsigned int _delegateRespondsToContentWillChange:1;
}

- (id)defaultFont;
- (BOOL)isRichText;
- (void)setRichText:(BOOL)fp8;
- (void)fixParagraphStyleAttributeInRange:(struct _NSRange)fp8;
- (void)fixQuotingDisplayAttributesInRange:(struct _NSRange)fp8;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withAttributedString:(id)fp16;

@end

@interface MailToolbar : NSToolbar
{
}

- (BOOL)_allowsSizeMode:(unsigned int)fp8;

@end

@interface NSToolbar (MailAdditions)
+ (void)configureSegmentedItem:(id)fp8 withDictionary:(id)fp12 forSegment:(int)fp16;
+ (id)segmentedItemForItemIdentifier:(id)fp8 withDictionary:(id)fp12;
+ (id)borderlessItemForItemIdentifier:(id)fp8 withDictionary:(id)fp12;
+ (id)segmentedOrBorderlessItemForItemIdentifier:(id)fp8 withDictionary:(id)fp12;
- (id)itemWithTag:(int)fp8;
- (void)upgradeIfNecessary;
- (id)configureToolbarItems;
@end

@interface SearchTextField : NSSearchField
{
    struct {
        unsigned int dontDisplaySearchScope:1;
        unsigned int reserver:31;
    } _flags;
}

- (void)awakeFromNib;
- (BOOL)isDisplayingGraySearchScope;
- (void)displayGraySearchScopeIfAppropriate:(id)fp8;
- (void)removeGraySearchScope;
- (BOOL)becomeFirstResponder;
- (void)selectText:(id)fp8;
- (void)_cancelKey:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;

@end

@interface NSFont (MailAdditions)
+ (id)addressFieldFont;
+ (id)prefsAddressFieldFont;
+ (id)messageFont;
+ (void)setMessageFont:(id)fp8;
+ (id)fixedWidthFont;
+ (void)setFixedWidthFont:(id)fp8;
+ (id)mailboxListFont;
+ (void)setMailboxListFont:(id)fp8;
+ (id)messageListFont;
+ (void)setMessageListFont:(id)fp8;
+ (id)noteFont;
+ (void)setNoteFont:(id)fp8;
+ (id)noteMessageListFont;
+ (id)fontWithBaseFont:(id)fp8 overlayFont:(id)fp12;
+ (id)validFontName:(id)fp8 fixedPitchOnly:(BOOL)fp12;
- (BOOL)isEqualNameAndSize:(id)fp8;
@end

@interface NSUserDefaults (FontAdditions)
- (id)mailboxListFont;
- (void)setMailboxListFont:(id)fp8;
- (id)noteFont;
- (void)setNoteFont:(id)fp8;
- (id)messageListFont;
- (void)setMessageListFont:(id)fp8;
- (id)mailboxListFontName;
- (float)mailboxListFontSize;
- (id)messageListFontName;
- (float)messageListFontSize;
- (void)setMessageListFontName:(id)fp8;
- (void)setMessageListFontSize:(float)fp8;
- (id)defaultNoteFontName;
- (id)defaultNoteFontSize;
- (id)defaultNoteFontAttributes;
- (id)defaultNoteMessageListFontName;
@end

@interface SubjectFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)fp8;
- (id)attributedStringForObjectValue:(id)fp8 withDefaultAttributes:(id)fp12;
- (id)editingStringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;
- (BOOL)isPartialStringValid:(id)fp8 newEditingString:(id *)fp12 errorDescription:(id *)fp16;

@end

@interface ActivityViewEntry : NSObject
{
    NSView *_box;
    NSProgressIndicator *_progressBar;
    NSTextField *_statusField;
    NSButton *_stopButton;
    NSTextField *_taskNameField;
    ActivityMonitor *_activity;
    int _lastChangeCount;
    ActivityViewer *_viewer;
}

- (id)initForViewer:(id)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)setMonitoredActivity:(id)fp8;
- (id)monitoredActivity;
- (void)update;
- (void)_handleActivityEnded;
- (void)stop:(id)fp8;
- (BOOL)inUse;
- (void)setupUI;
- (id)view;

@end

@interface MailboxesChooser : NSObject
{
    NSPopUpButton *popUpButton;
    MailboxUid *_selectedMailbox;
    NSArray *_selectedMessages;
    id <MailboxesChooserCycleDelegate> cycleDelegate;
    NSArray *_additionalMenuItems;
    int _selectedTag;
    unsigned int _includedMailboxes;
    int _targetMessageType;
    id _realTarget;
    SEL _realAction;
}

- (void)dealloc;
- (id)init;
- (void)cellWillPopUp:(id)fp8;
- (void)disableCyclicItemsInMenu:(id)fp8;
- (void)disableCyclicMailboxesInItems:(id)fp8;
- (void)reset;
- (void)awakeFromNib;
- (void)_cancelMenuTracking:(id)fp8;
- (id)popUpButton;
- (void)setPopUpButton:(id)fp8;
- (void)_mailboxWasRenamed:(id)fp8;
- (void)_ensureSelectionIsValid:(id)fp8;
- (void)_popUpPressed:(id)fp8;
- (void)setSelectedMailbox:(id)fp8;
- (void)setSelectedMailbox:(id)fp8 selectedTag:(int)fp12;
- (id)selectedMailbox;
- (id)selectedMessages;
- (void)setSelectedMessages:(id)fp8;
- (BOOL)includesRegularMailboxes;
- (void)setIncludesRegularMailboxes:(BOOL)fp8;
- (BOOL)includesSmartMailboxes;
- (void)setIncludesSmartMailboxes:(BOOL)fp8;
- (BOOL)includesAllContainerMailboxes;
- (void)setIncludesAllContainerMailboxes:(BOOL)fp8;
- (id)additionalMenuItems;
- (void)setAdditionalMenuItems:(id)fp8;
- (id)cycleDelegate;
- (void)setCycleDelegate:(id)fp8;
- (int)targetMessageType;
- (void)setTargetMessageType:(int)fp8;

@end

@interface MouseTracker : NSObject
{
    NSView *_view;
    struct _NSRect _trackingRect;
    int _trackingRectTag;
    BOOL _mouseOver;
    id _delegate;
}

- (id)initWithTrackingRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (struct _NSRect)trackingRect;
- (id)view;
- (BOOL)mouseOver;
- (void)_updateMouseIsOver;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)mouseMoved:(id)fp8;

@end

@interface VisibleStateObject : NSObject
{
    struct visible_state vs;
    NSMutableDictionary *selectedMessageIDs;
    NSMutableArray *openThreadIDs;
}

- (void)dealloc;

@end

@interface TableViewManager (FilteredList_Management)
- (void)mallStructureWillChange:(id)fp8;
- (void)setMailboxUids:(id)fp8 isSettingUpUI:(BOOL)fp12;
- (void)storeStructureChanged:(id)fp8;
- (void)messagesCompacted:(id)fp8;
- (void)messageFlagsChanged:(id)fp8;
- (void)_scrollToHappyPlace;
- (void)_recordVisibleState:(struct visible_state *)fp8 deletedAreGoingAway:(BOOL)fp12 considerPinToEnd:(BOOL)fp16;
- (BOOL)_restoreVisibleState:(struct visible_state *)fp8 forceSelToVisible:(BOOL)fp12;
- (void)dumpVisibleState;
- (int)indexOfTopmostVisibleMessageMustBeSelected:(BOOL)fp8 okayIfDeleted:(BOOL)fp12;
- (int)indexOfLastReadMessage;
- (id)persistentVisibleStateCreateIfNecessary:(BOOL)fp8;
- (void)_saveScrollAndSelection:(BOOL)fp8;
- (void)saveScrollAndSelection;
- (BOOL)restoreScrollAndSelection;
- (void)_setScrollAndSelectionForThreadOpenedOrClosed:(id)fp8 flag:(BOOL)fp12 clickedRow:(int)fp16 rowToSelectInOpeningThread:(int)fp20;
- (id)selectedMessageIDs;
- (id)openThreadIDs;
- (void)setSelectedMessageIDs:(id)fp8 openThreadIDs:(id)fp12;
- (void)clearSearch;
- (BOOL)isShowingSearchResults;
- (BOOL)rankColumnIsVisible;
- (void)searchForString:(id)fp8 in:(int)fp12 withOptions:(int)fp16;
- (BOOL)isFocused;
- (void)setFocusedMessages:(id)fp8;
- (BOOL)isSortedByRank;
- (BOOL)isSortedByDateReceived;
- (BOOL)isSortedChronologically;
- (int)sortColumn;
- (int)searchSortColumn;
- (void)setSortColumn:(int)fp8 ascending:(BOOL)fp12;
- (BOOL)isSortedAscending;
- (void)setIsSortedAscending:(BOOL)fp8;
- (BOOL)isSearchSortedAscending;
- (int)state;
- (id)filteredMessages;
- (void)clearTrackingRects;
- (void)updateTrackingRects;
- (int)_indexOfMemberToSelectWhenOpeningThread:(id)fp8;
- (double)_getAnimationDuration:(int)fp8;
- (id)_createHiliteImage;
- (id)_createBackgroundImage;
- (id)_createSnapshotOfRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (id)_createSnapshotOfRow:(int)fp8 styleMask:(unsigned int)fp12 backing:(unsigned int)fp16 defer:(BOOL)fp20;
- (BOOL)_isRowVisible:(int)fp8;
- (struct _NSSize)_calculateTruncationAmountUsingRowHeight:(float)fp8 collapseOrExpandAmount:(float)fp12 invisibleThreadAmountAbove:(float)fp16 invisibleThreadAmountBelow:(float)fp20;
- (void)_animateThreadCollapsing:(int)fp8 threadRow:(int)fp12 clickedRow:(int)fp16;
- (float)_animateThreadOpening:(id)fp8 threadMessageCount:(int)fp12 threadRow:(int)fp16 rowToBeSelected:(int)fp20;
- (void)searchFinished:(id)fp8;
- (void)tableView:(id)fp8 willMoveToWindow:(id)fp12;
- (void)tableViewDidMoveToWindow:(id)fp8;
- (BOOL)selectMessageWithIDIfExists:(id)fp8;
@end

@interface MVMailBundle : NSObject
{
}

+ (id)allBundles;
+ (id)composeAccessoryViewOwners;
+ (void)registerBundle;
+ (id)sharedInstance;
+ (BOOL)hasPreferencesPanel;
+ (id)preferencesOwnerClassName;
+ (id)preferencesPanelName;
+ (BOOL)hasComposeAccessoryViewOwner;
+ (id)composeAccessoryViewOwnerClassName;
- (void)dealloc;
- (void)_registerBundleForNotifications;

@end

@interface MVComposeAccessoryViewOwner : NSObject
{
    NSView *accessoryView;
}

+ (id)composeAccessoryViewOwner;
+ (id)composeAccessoryViewNibName;
- (id)init;
- (void)setupUIForMessage:(id)fp8;
- (id)composeAccessoryView;
- (BOOL)messageWillBeDelivered:(id)fp8;
- (BOOL)messageWillBeSaved:(id)fp8;

@end

@interface CompletionWindow : NSWindow
{
}

- (BOOL)wantsScrollWheelEvent:(id)fp8;

@end

@interface OldCompletionController : NSObject
{
    NSControl *_editingField;
    NSWindow *_editingWindow;
    NSString *_currentPartialString;
    NSString *_previousString;
    NSWindow *_completionWindow;
    NSTableView *_completionTableView;
    id _selectedRecord;
    NSString *_selectedAddress;
    NSString *_completedAddress;
    NSMutableArray *_matchingRecords;
    NSMutableArray *_matchingAddresses;
    NSMutableArray *_ldapMatches;
    ABLDAP_Manager *_ldapManager;
    ABLDAP_Server *_dirServicesServer;
    NSTimer *_ldapTimer;
    NSThread *_dirServicesServerThread;
    NSTimer *_dirServicesServerTimer;
    NSProgressIndicator *progressIndicator;
    ActivityMonitor *completionMonitor;
    BOOL showListAsSoonAsPossible;
    BOOL ldapSearchIsComplete;
    BOOL ldapSearchIsPending;
    BOOL localSearchIsComplete;
    BOOL showingPartialLDAPSearchResults;
}

+ (void)initialize;
+ (void)_doCompletionWindowPlacement:(id)fp8;
- (id)init;
- (void)setProgressIndicatorVisible:(BOOL)fp8;
- (void)awakeFromNib;
- (void)_stopTimer;
- (void)_startTimer;
- (void)_disconnectAllLDAPConnections:(id)fp8;
- (void)userDidSelectText:(id)fp8;
- (void)_reset:(id)fp8;
- (id)selectedRecord;
- (id)completedAddress;
- (void)setCompletedAddress:(id)fp8;
- (void)textFieldDidAtomicizeAllAddresses:(id)fp8;
- (void)cancelAllCompletions;
- (void)cancelThisCompletion;
- (BOOL)_acceptCurrentCompletion;
- (void)selectTableViewRow:(id)fp8;
- (void)setEditingField:(id)fp8;
- (id)stringToComplete:(id)fp8;
- (void)_showSelectedLineInField;
- (void)_showSelectedLine;
- (void)_showCompletionListWindow:(unsigned int)fp8;
- (void)orderOutCompletionWindow:(id)fp8;
- (void)placementViewFrameChanged:(id)fp8;
- (void)_displayFilteredResultsShowList:(BOOL)fp8 showSelectedLine:(BOOL)fp12;
- (void)updateList:(id)fp8;
- (void)endUpdateList:(id)fp8;
- (void)appendLDAPResultsToMatchingRecords;
- (void)mergeLDAPMatchesIntoMatchingRecords;
- (void)completeStringUsingLDAP:(id)fp8;
- (void)completeString:(id)fp8;
- (void)addressBookSearchCompleted:(id)fp8;
- (void)forceListToPopup;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)control:(id)fp8 textShouldEndEditing:(id)fp12;
- (void)controlTextDidChange:(id)fp8;
- (BOOL)shouldChangeTextInRange:(struct _NSRange)fp8 replacementString:(id)fp16;
- (void)tableViewSelectionDidChange:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (BOOL)control:(id)fp8 textShouldBeginEditing:(id)fp12;
- (void)dealloc;

@end

@interface OldCompletionController (AsyncLookupOfDirServicesServer)
- (void)initDirectoryServicesServer;
- (void)askABForDirectoryServicesServer:(id)fp8;
- (void)directoryServicesServerLookupCompleted;
- (void)directoryServicesServerLookupCancelled:(id)fp8;
- (void)setDirectoryServicesServer:(id)fp8;
- (id)directoryServicesServer;
@end

@interface AttachmentLoader : NSObject
{
    MessageStore *_store;
    ActivityMonitor *_monitor;
    NSMutableArray *_entries;
}

+ (id)loaderForAttachment:(id)fp8 window:(id)fp12 reason:(int)fp16 application:(id)fp20 attachmentDirectory:(id)fp24;
+ (id)loaderForSavingAttachment:(id)fp8 window:(id)fp12 path:(id)fp16;
+ (void)startLoadingInlineAttachments:(id)fp8 window:(id)fp12 delegate:(id)fp16;
+ (void)cancelInlineLoads:(id)fp8 window:(id)fp12;
- (void)dealloc;

@end

@interface _AttachmentQueueEntry : NSObject
{
    NSWindow *window;
    NSTextAttachment *attachment;
    int reason;
    NSString *attachDir;
    union {
        NSURL *applicationURL;
        NSString *savePath;
    } opSpecific;
}

+ (id)newWithWindow:(id)fp8 attachment:(id)fp12 reason:(int)fp16 opSpecific:(id)fp20 attachmentDirectory:(id)fp24;
- (BOOL)isEqual:(id)fp8;
- (void)dealloc;

@end

@interface AttachmentLoader (Internal)
+ (id)_loaderForStore:(id)fp8;
+ (id)_makeLoaderForStore:(id)fp8;
- (id)init;
- (void)_cancelInlineLoadsForWindow:(id)fp8;
- (void)_didFetchFileWrapper:(id)fp8 forQueueEntry:(id)fp12;
- (void)_processAttachmentQueue;
- (void)_setMonitor:(id)fp8;
- (void)_monitorQuit;
- (void)_mailboxBecameInvalid;
- (void)_setStore:(id)fp8;
- (void)_startBackgroundThreadIfNeeded;
- (void)_addAttachmentsToFetch:(id)fp8 fromWindow:(id)fp12 delegate:(id)fp16;
- (BOOL)_addOrReprioritizeEntryEqualTo:(id)fp8;
@end

@interface AddressCommentCommand : NSScriptCommand
{
}

- (id)_getAddressCommentForObject:(id)fp8;
- (id)executeCommand;
- (id)performDefaultImplementation;

@end

@interface UncommentedAddressCommand : NSScriptCommand
{
}

- (id)_getUncommentedAddressForObject:(id)fp8;
- (id)executeCommand;
- (id)performDefaultImplementation;

@end

@interface MailToCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface MailApp : NSApplication <SyncableApp>
{
    id <MVSelectionOwner> selectionOwner;
    NSMenu *_mailboxesContextMenu;
    NSMenu *_addButtonMenu;
    NSMenu *_messageViewerContextMenu;
    NSMenu *_composeAttachmentContextMenu;
    NSMenu *_viewAttachmentContextMenu;
    NSMenuItem *textEncodingMenuItem;
    MailboxesController *mailboxesController;
    NSString *_noMailSoundPath;
    NSString *_fetchErrorSoundPath;
    DockCountController *_dockCountController;
    NSPanel *_selectMailboxPanel;
    MailboxesChooser *_selectMailboxChooser;
    NSMutableArray *_stationeryBundlesToInstall;
    NSWindow *_errorDiagnosisWindow;
    DynamicErrorWindowController *_errorDiagnosisWindowController;
    unsigned int *_errorDiagnosisResult;
    DeliveryQueue *_deliveryQueue;
    ActivityViewer *_activityViewer;
    ActivityViewerMailSound *_activityViewerMailSound;
    NSMutableArray *_terminationHandlers;
    unsigned int _autoLaunchHidden:1;
    unsigned int _shouldPlayFetchErrorSound:1;
    unsigned int _appHasFinishedLaunching:1;
    unsigned int _synchronizingAllAccounts:1;
    unsigned int _groupingByThreadDefaultsToOn:1;
    unsigned int _updateEmailAliasesOnNextActivation:1;
    unsigned int _paused:1;
    unsigned int _isAppleInternal:1;
    unsigned int _isExceptionStackTracingDisabled:1;
    unsigned int _terminateReply:4;
    unsigned int _currentHandlerIndex:22;
    NSMutableSet *_accountsCurrentlySynchronizing;
    int numberOfAccountsEmptyingTrash;
    int currentPasswordPanelCount;
    NSMutableDictionary *_composeMessages;
    id <Syncer> _syncer;
    BOOL accountsAreNew;
    BOOL useAddressAtoms;
    BOOL runningEmptyTrashSheet;
    BOOL childWindowVisible;
    NSMutableArray *_appleEventDescriptorQueue;
}

+ (void)_forceClassInitialization;
- (id)init;
- (BOOL)appHasFinishedLaunching;
- (BOOL)isChildWindowVisible;
- (void)setChildWindowVisible:(BOOL)fp8;
- (BOOL)isAppleInternal;
- (void)setIsAppleInternal:(BOOL)fp8;
- (BOOL)isExceptionStackTracingDisabled;
- (void)setIsExceptionStackTracingDisabled:(BOOL)fp8;
- (BOOL)shouldLogExceptionStackTraces;
- (void)sendEvent:(id)fp8;
- (void)presencePreferenceChanged:(id)fp8;
- (void)_accountInfoDidChange:(id)fp8;
- (void)showViewerWindow:(id)fp8;
- (BOOL)_showViewerWindow:(id)fp8;
- (BOOL)applicationOpenUntitledFile:(id)fp8;
- (void)configurePerformanceLoggingDefaults;
- (void)_systemTimeChanged;
- (void)_midnightPassed;
- (void)_setupMidnightTimer;
- (void)_checkTimerAndFireDate:(id)fp8;
- (void)checkTimersAfterSleeping;
- (void)_updateEmailAliases;
- (void)performDelayedInitialization;
- (void)_synchronouslyTellSyncServicesToRegisterAndSync;
- (id)localizedFullPath:(id)fp8;
- (void)applicationDidFinishLaunching:(id)fp8;
- (BOOL)needToCreateLibrary;
- (void)reportException:(id)fp8;
- (void)reportException:(id)fp8 invocation:(id)fp12;
- (void)reallyFinishLaunching;
- (BOOL)accountsAreNew;
- (void)_restoreMessagesFromDefaults;
- (void)_setupInitialState;
- (int)_loadBundlesFromPath:(id)fp8;
- (void)_loadBundles;
- (id)_mailboxBeingViewed;
- (BOOL)_isMailboxBeingViewedSpecial;
- (id)_accountBeingViewed;
- (void)runPageLayout:(id)fp8;
- (BOOL)validateToolbarItem:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)moreThanOneAccountCanGoOffline;
- (void)disconnectAllAccounts:(id)fp8;
- (void)connectAllAccounts:(id)fp8;
- (void)connectThisAccount:(id)fp8;
- (void)disconnectThisAccount:(id)fp8;
- (void)disconnectAllAccountsFromContextMenu:(id)fp8;
- (void)connectAllAccountsFromContextMenu:(id)fp8;
- (void)connectThisAccountFromContextMenu:(id)fp8;
- (void)disconnectThisAccountFromContextMenu:(id)fp8;
- (void)connectAllAccountsFromToolbar:(id)fp8;
- (void)disconnectAllAccountsFromToolbar:(id)fp8;
- (void)toggleAccountOnlineStatus:(id)fp8;
- (void)addToAccountsCurrentlySynchronizing:(id)fp8;
- (void)removeFromAccountsCurrentlySynchronizing:(id)fp8;
- (BOOL)isAccountCurrentlySynchronizing:(id)fp8;
- (void)clearAccountsCurrentlySynchronizing;
- (void)performSynchronizationForAccounts:(id)fp8;
- (void)synchronizeAccount:(id)fp8;
- (void)_networkConfigurationChanged:(id)fp8;
- (void)handleNetworkConfigurationChange;
- (void)_emailAddressesApproved:(id)fp8;
- (void)_emailsRejected:(id)fp8;
- (void)showConnectionDoctor:(id)fp8;
- (void)showInfoPanel:(id)fp8;
- (void)showComposeWindow:(id)fp8;
- (void)showNoteEditor:(id)fp8;
- (void)newViewerWindow:(id)fp8;
- (void)selectMailbox:(id)fp8;
- (void)showMediaBrowser:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)showAddressHistoryPanel:(id)fp8;
- (void)showSearchPanel:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)showActivityViewer:(id)fp8;
- (void)showPreferencesPanel:(id)fp8;
- (void)collectFeedback:(id)fp8;
- (void)addAccount:(id)fp8;
- (void)importMailboxes:(id)fp8;
- (void)showReleaseNotes:(id)fp8;
- (void)showAccountInfo:(id)fp8;
- (void)alwaysSendWindowsFriendlyAttachments:(id)fp8;
- (void)sendWindowsFriendlyAttachments:(id)fp8;
- (void)alwaysAttachFilesAtEnd:(id)fp8;
- (void)attachFilesAtEnd:(id)fp8;
- (void)insertOriginalAttachments:(id)fp8;
- (void)_resetMenuItemWithTag:(int)fp8;
- (id)_mailboxMenu;
- (id)_getMenuItemInMessageMenuWithTag:(int)fp8;
- (void)_getActiveAccountsThatCanGoOffline:(id)fp8 fetch:(id)fp12 sync:(id)fp16 deleteToTrash:(id)fp20 doesNotDeleteToTrash:(id)fp24;
- (void)_synchronizeAccountListMenuWithTagIfNeeded:(int)fp8;
- (void)bringUpOnlineOfflineMenu:(id)fp8;
- (void)bringUpSynchronizeAccountMenu:(id)fp8;
- (void)bringUpEmptyTrashMenu:(id)fp8;
- (void)bringUpGetNewMailMenu:(id)fp8;
- (void)_removeExtraSeparatorsInMailboxMenu;
- (void)_removeAllItemsInAccountMenuWithTag:(int)fp8;
- (void)_setupAccountMenuItems;
- (void)_setupCheckSpellingSubMenu;
- (void)accountsChanged:(id)fp8;
- (void)editAccount:(id)fp8;
- (void)_confirmEmptyTrashSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_emptyTrashInAccounts:(id)fp8;
- (void)emptyTrashInAccount:(id)fp8;
- (void)compactSelectedMailboxes:(id)fp8;
- (void)toggleSmallIconsInDrawer:(id)fp8;
- (void)_evaluateUsersJunkMailNeeds;
- (void)showToolbarItemForJunkMail:(BOOL)fp8;
- (void)eraseJunkMail:(id)fp8;
- (void)toggleThreadedMode:(id)fp8;
- (BOOL)groupingByThreadDefaultsToOn;
- (void)setGroupingByThreadDefaultsToOn:(BOOL)fp8;
- (BOOL)shouldAutoFetchForMessageType:(int)fp8;
- (void)_setShouldAutoFetch:(BOOL)fp8 forMessageType:(int)fp12;
- (int)autoFetchFrequencyForMessageType:(int)fp8;
- (void)setAutoFetchFrequency:(int)fp8 forMessageType:(int)fp12;
- (void)_checkNewMail:(BOOL)fp8;
- (void)doBackgroundFetch:(BOOL)fp8;
- (void)checkNewMailInAccount:(id)fp8;
- (void)checkNewMail:(id)fp8;
- (void)checkNewMailInSelectedAccount:(id)fp8;
- (void)autoFetchMail:(id)fp8;
- (void)backgroundFetchCompleted:(id)fp8;
- (void)resetAutoFetchTimer;
- (void)fetchErrorHasOccurred;
- (BOOL)application:(id)fp8 openFile:(id)fp12;
- (BOOL)handleOpenMessage:(id)fp8;
- (void)handleStationeryBundles;
- (void)application:(id)fp8 openFiles:(id)fp12;
- (void)applicationDidUnhide:(id)fp8;
- (void)updateEmailAliasesOnNextActivation;
- (void)applicationDidBecomeActive:(id)fp8;
- (id)openStoreWithMailboxUid:(id)fp8;
- (id)openStoreWithMailboxUid:(id)fp8 andMakeKey:(BOOL)fp12;
- (id)_messageEditorWithAttributedString:(id)fp8 headers:(id)fp12;
- (void)addressManagerLoaded;
- (id)activityViewer;
- (id)textEncodingMenuItem;
- (void)loadMailboxesContextMenuNib;
- (id)addButtonMenu;
- (id)mailboxesContextMenu;
- (id)messageViewerContextMenu;
- (id)viewAttachmentContextMenu;
- (id)composeAttachmentContextMenu;
- (BOOL)useAddressAtoms;
- (id)mailboxesController;
- (void)preferencesChanged:(id)fp8;
- (BOOL)handleMailToURL:(id)fp8;
- (void)_handleToDo:(id)fp8 withAction:(id)fp12;
- (void)_handleNote:(id)fp8 withAction:(id)fp12;
- (void)_handleMsg:(id)fp8 withAction:(id)fp12;
- (BOOL)handleMailItemURI:(id)fp8;
- (BOOL)handleMessageURL:(id)fp8;
- (BOOL)handleClickOnURL:(id)fp8 visibleText:(id)fp12 message:(id)fp16 window:(id)fp20 dontSwitch:(BOOL)fp24;
- (id)applicationVersion;
- (id)frameworkVersion;
- (void)mailDocuments:(id)fp8;
- (id)messageEditor;
- (void)mailAttributedString:(id)fp8;
- (void)mailSelection:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (void)mailDocument:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (void)mailTo:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (id)deliveryQueue;
- (void)setSelectionFrom:(id)fp8;
- (void)resignSelectionFor:(id)fp8;
- (id)selection;
- (id)selectionOwner;
- (id)preferredAccountBasedOnSelection;
- (id)preferredReplyAddressBasedOnCurrentSelection;
- (BOOL)applicationShouldHandleReopen:(id)fp8 hasVisibleWindows:(BOOL)fp12;
- (id)mailSyncBundle;
- (Class)notesSyncClass;
- (id)syncer;
- (id)syncerForDataType:(int)fp8;
- (id)interestedPartiesForDataType:(int)fp8;
- (BOOL)tellInterestedPartiesDataWillBeSyncedForDataType:(int)fp8;
- (void)tellInterestedPartiesDataWasSyncedForDataType:(int)fp8;
- (id)ownerForDataType:(int)fp8;
- (void)client:(id)fp8 mightWantToSyncEntityNames:(id)fp12;
- (void)syncAllDataTypesIfNeeded;
- (BOOL)syncAllDataTypes;
- (void)quitNoMatterWhat;
- (void)terminateNoConfirm;
- (void)_approveQuitIfFinished;
- (void)_cleanupFinished;
- (void)cleanUpAccount:(id)fp8;
- (void)_cleanOldDatabases:(id)fp8;
- (unsigned int)applicationShouldTerminate:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)applicationWillTerminate:(id)fp8;
- (void)addTerminationHandler:(id)fp8;
- (void)removeTerminationHandler:(id)fp8;
- (void)handler:(id)fp8 approvedQuit:(BOOL)fp12;

@end

@interface MailApp (AppleScript)
- (void)_runTestNamed:(id)fp8 iteration:(unsigned int)fp12;
- (void)application:(id)fp8 runTest:(unsigned int)fp12 duration:(double)fp16;
- (void)openSelectedFolder:(id)fp8;
- (id)indicesOfObjectsByEvaluatingObjectSpecifier:(id)fp8;
- (id)applescriptSelection;
- (id)accounts;
- (id)_accountsOfClass:(Class)fp8;
- (id)popAccounts;
- (id)imapAccounts;
- (id)iToolsAccounts;
- (void)insertInDeliveryAccounts:(id)fp8 atIndex:(int)fp12;
- (void)insertInDeliveryAccounts:(id)fp8;
- (void)removeFromDeliveryAccountsAtIndex:(unsigned int)fp8;
- (id)messageViewers;
- (id)valueInMessageViewersWithUniqueID:(id)fp8;
- (void)insertInMessageViewers:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMessageViewers:(id)fp8;
- (void)removeFromMessageViewersAtIndex:(unsigned int)fp8;
- (id)inbox;
- (id)outbox;
- (id)draftsMailbox;
- (id)sentMailbox;
- (id)trashMailbox;
- (id)junkMailbox;
- (id)mailboxes;
- (id)valueInMailboxesWithName:(id)fp8;
- (void)removeFromMailboxesAtIndex:(unsigned int)fp8;
- (void)insertInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMailboxes:(id)fp8;
- (void)replaceInMailboxes:(id)fp8 atIndex:(unsigned int)fp12;
- (id)messageEditors;
- (void)insertInMessageEditors:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInMessageEditors:(id)fp8;
- (void)removeFromMessageEditorsAtIndex:(unsigned int)fp8;
- (void)_insertInComposeMessagesIfAbsent:(id)fp8;
- (id)composeMessages;
- (void)insertInComposeMessages:(id)fp8 atIndex:(unsigned int)fp12;
- (void)insertInComposeMessages:(id)fp8;
- (void)removeFromComposeMessagesAtIndex:(unsigned int)fp8;
- (void)removeFromComposeMessages:(id)fp8;
- (id)valueInComposeMessagesWithUniqueID:(id)fp8;
- (id)_objectSpecifierForObject:(id)fp8 inArray:(id)fp12 withKey:(id)fp16;
- (id)uniqueIDForComposeMessage:(id)fp8;
- (id)objectSpecifierForComposeMessage:(id)fp8;
- (BOOL)shouldAutoFetch;
- (void)setShouldAutoFetch:(BOOL)fp8;
- (int)autoFetchFrequency;
- (void)setAutoFetchFrequency:(int)fp8;
- (BOOL)useKeychain;
- (void)setUseKeychain:(BOOL)fp8;
- (BOOL)logAllSocketActivity;
- (void)setLogAllSocketActivity:(BOOL)fp8;
- (id)logActivityOnPorts;
- (void)setLogActivityOnPorts:(id)fp8;
- (id)logActivityOnHosts;
- (void)setLogActivityOnHosts:(id)fp8;
- (id)logMessages;
- (id)memoryStatistics;
- (id)userEmail;
- (id)handleCheckMailCommand:(id)fp8;
- (id)handleSynchronizeAccountCommand:(id)fp8;
- (id)handleImportMboxCommand:(id)fp8;
@end

@interface MailApp (AppleEvents)
- (void)_registerAppleEventQueue;
- (void)_registerAppleEventHandlers;
- (void)_unregisterAppleEventHandlers;
- (void)queueAppleEvent:(id)fp8 replyEvent:(id)fp12;
- (void)handleGURLAppleEvent:(id)fp8 replyEvent:(id)fp12;
- (void)handleMailWebPageEvent:(id)fp8 replyEvent:(id)fp12;
- (void)handleMailWebLinkEvent:(id)fp8 replyEvent:(id)fp12;
- (void)handlePeabodyEvent:(id)fp8 replyEvent:(id)fp12;
@end

@interface TextEncodingMenuDelegate : NSObject
{
    NSArray *_displayedCharsets;
}

- (void)dealloc;
- (id)displayedCharsets;
- (void)setDisplayedCharsets:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;

@end

@interface DeliveryAccountArrayController : NSArrayController
{
}

- (id)newObject;

@end

@interface SMTPSettings : NSObject <AccountStatusDataSourceDelegate>
{
    NSArrayController *deliveryAccountsController;
    NSPanel *panel;
    NSTableView *accountTable;
    NSTableColumn *conflictColumn;
    AccountStatusDataSource *_deliveryASDS;
    NSMutableArray *_accountsInConflict;
    NSMutableDictionary *_cachedAccountEmployment;
    NSMutableDictionary *_cachedAccountEmploymentStrings;
    BOOL _didRegisterForNotifications;
    NSMutableArray *_deliveryAccounts;
}

+ (void)initialize;
+ (id)sharedPanel;
- (id)init;
- (void)dealloc;
- (void)awakeFromNib;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)runSheetRelativeToWindow:(id)fp8 selectedAccount:(id)fp12 didEndDelegate:(id)fp16;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)dismissPanel:(id)fp8;
- (void)_syncBindings;
- (BOOL)_validateAccounts;
- (void)_accountInfoDidChange:(id)fp8;
- (BOOL)_checkForConflicts;
- (void)_removeInvalidAccounts;
- (void)_recacheAccountEmployment;
- (void)_restoreMailAccountDefaultAccounts;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (id)deliveryAccounts;
- (void)setDeliveryAccounts:(id)fp8;

@end

@interface MessageEditor : NSObject
{
}

+ (id)sharedMessageEditor;
- (id)init;
- (id)retain;
- (unsigned int)retainCount;
- (void)release;
- (id)autorelease;
- (id)objectSpecifier;
- (void)setBackEnd:(id)fp8;

@end

@interface Message (MailViewerAdditions)
- (void)handleOpenAppleEvent:(id)fp8;
- (id)handleReplyToMessage:(id)fp8;
- (id)handleForwardMessage:(id)fp8;
- (id)handleRedirectMessage:(id)fp8;
- (void)handleBounceMessage:(id)fp8;
@end

@interface PasswordPanel : NSObject
{
    NSPanel *_passwordPanel;
    NSSecureTextField *_passwordField;
    NSTextField *_passwordMessage;
    NSTextField *_passwordTitle;
    NSButton *_rememberPassword;
}

+ (id)passwordPanel;
- (void)dealloc;
- (id)init;
- (void)setTitle:(id)fp8;
- (void)setMessage:(id)fp8;
- (id)message;
- (id)promptModallyForPassword;
- (void)setCanRememberPassword:(BOOL)fp8;
- (BOOL)canRememberPassword;
- (void)setRememberPassword:(BOOL)fp8;
- (BOOL)rememberPassword;
- (void)passwordPanelOK:(id)fp8;
- (void)passwordPanelCancel:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;

@end

@interface NSPopUpButton (MailAdditions)
- (void)_selectItemWithTagAndSynchronizeTitle:(int)fp8;
- (float)sizeToFitWidth;
- (void)reloadData;
@end

@interface MessageSaver : NSObject
{
    NSArray *_messages;
    NSSet *_stores;
    NSSavePanel *_savePanel;
    NSWindow *_window;
    NSString *_path;
    unsigned int _haveAttachments:1;
    unsigned int _hideExtension:1;
    unsigned int _includeAttachments:1;
    unsigned int _saveFormat:4;
    unsigned int _headerDetailLevel:4;
    NSPopUpButton *formatPopup;
    NSButton *includeAttachmentsSwitch;
}

+ (void)initialize;
+ (void)saveMessages:(id)fp8 headerDetailLevel:(int)fp12 preferredFormat:(int)fp16 window:(id)fp20;
- (void)dealloc;
- (void)saveMessagesWithoutPrompting:(id)fp8 toFilename:(id)fp12 headerDetailLevel:(int)fp16 format:(int)fp20;
- (void)setMessages:(id)fp8;
- (void)setHeaderDetailLevel:(int)fp8;
- (void)setSaveFormat:(int)fp8;
- (void)setWindow:(id)fp8;
- (void)savePanelDidEnd:(id)fp8 alertReturn:(int)fp12 context:(void *)fp16;
- (void)runSavePanelForStationery;
- (void)runSavePanel;
- (void)updateSavePanelUI;
- (void)saveMessages;
- (void)handleSaveError:(id)fp8;
- (void)changeFormat:(id)fp8;
- (void)changeIncludeAttachments:(id)fp8;
- (id)separator;

@end

@interface ColorBackgroundView : NSView
{
    int _tag;
    NSColor *_color;
    NSImage *image;
    NSArray *_colors;
    BOOL _isFlipped;
    float _rowHeight;
    float _rowOffset;
}

- (void)dealloc;
- (int)tag;
- (void)setTag:(int)fp8;
- (BOOL)isFlipped;
- (void)setFlipped:(BOOL)fp8;
- (BOOL)isOpaque;
- (id)backgroundColor;
- (id)backgroundColors;
- (void)setBackgroundColors:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundImage;
- (void)setBackgroundImage:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (id)colorForRow:(unsigned int)fp8;
- (float)rowOffset;
- (void)setRowOffset:(float)fp8;
- (float)rowHeight;
- (void)setRowHeight:(float)fp8;

@end

@interface LDAPServer : NSObject
{
    NSString *_searchBase;
    NSString *_serverAddress;
    NSNumber *_port;
    int _scope;
    NSString *_entryName;
    NSNumber *_enabled;
    NSString *_uid;
}

- (void)updateLDAPServers;
- (id)initWithDescription:(id)fp8 serverAddress:(id)fp12 searchBase:(id)fp16 enabled:(id)fp20 port:(int)fp24 scope:(int)fp28 uid:(id)fp32;
- (id)serverAddress;
- (void)setServerAddress:(id)fp8;
- (id)searchBase;
- (void)setSearchBase:(id)fp8;
- (id)entryName;
- (void)setEntryName:(id)fp8;
- (BOOL)oldIsActive;
- (void)setOldIsActive:(BOOL)fp8;
- (BOOL)enabled;
- (void)setEnabled:(BOOL)fp8;
- (id)uid;
- (id)port;
- (void)setPort:(id)fp8;
- (int)scope;
- (void)setScope:(int)fp8;
- (int)scopeForInt:(int)fp8;
- (int)intForScope:(int)fp8;
- (id)description;
- (id)objectSpecifier;
- (void)dealloc;

@end

@interface AuthSchemeValueTransformer : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)fp8;
- (id)reverseTransformedValue:(id)fp8;

@end

@interface AuthSchemeBindingProxy : NSObject
{
    AuthScheme *_authScheme;
    BOOL _isSeparator;
}

+ (id)noneProxy;
+ (id)separatorProxy;
- (id)init;
- (id)initWithAuthScheme:(id)fp8;
- (id)humanReadableName;
- (id)name;
- (BOOL)isEqual:(id)fp8;
- (unsigned int)hash;
- (BOOL)isSeparator;
- (void)setIsSeparator:(BOOL)fp8;
- (id)authScheme;
- (void)setAuthScheme:(id)fp8;

@end

@interface DeliveryAccount (MailUIExtras)
- (id)remoteMailAccountsEmployedByString;
@end

@interface Account (MailUIExtras)
+ (BOOL)_existsAccountOfClass:(Class)fp8;
+ (BOOL)exchangeAccountExists;
+ (BOOL)iToolsAccountExists;
+ (BOOL)primaryiToolsAccountExists;
+ (id)mailAccountWithName:(id)fp8;
+ (id)mailAccountOfClass:(Class)fp8 withHostname:(id)fp12 username:(id)fp16;
+ (id)displayTypeString;
- (void)_addAuthScheme:(id)fp8 toPopUp:(id)fp12;
- (void)configureAuthenticationPopUp:(id)fp8;
- (void)configureAuthenticationPopUp:(id)fp8 withAuthSchemes:(id)fp12;
- (id)authSchemeBindingProxies;
@end

@interface DateCell : NSTextFieldCell
{
    NSFont *_lastFont;
    NSMutableDictionary *_drawingAttributes;
    int _dateDetailLevel;
    float _lastWidth;
    _Bool _lastStringWasRTL;
}

+ (void)initialize;
+ (void)resetDateFormats;
- (id)initTextCell:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setFont:(id)fp8;
- (void)setTextColor:(id)fp8;
- (void)setAlignment:(unsigned int)fp8;
- (void)setNeedsDisplay:(BOOL)fp8;
- (BOOL)underlinesText;
- (void)setUnderlinesText:(BOOL)fp8;
- (void)updateLocale;
- (void)setTimeIntervalSince1970:(double)fp8;
- (void)setObjectValue:(id)fp8;
- (float)minimumWidth;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)stringValue;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8 forParameter:(id)fp12;

@end

@interface DateCell (Internal)
- (void)_generalInit;
- (void)setLastFont:(id)fp8;
- (float)_widthOfStringWithTimeFormat:(id)fp8 withDatePrefix:(id)fp12;
- (float)_widthOfLongestDateStringWithLevel:(int)fp8 format:(id)fp12;
- (void)_saveWidthsToDefaults;
- (BOOL)_readWidthsFromDefaults;
- (void)_updateDateColumnDetailLevelWidths;
- (void)_updateDateColumnDetailLevels;
@end

@interface LabelledTextAttachmentCell : NSTextAttachmentCell
{
    NSMutableAttributedString *_attrString;
    NSImage *_image;
    NSImage *_dimmedImage;
    NSColor *_highlightedColor;
    NSString *_label;
    unsigned int _linkState:2;
    unsigned int _isDisplayingLabel:1;
    unsigned int drawWithBorder:1;
    float _maxWidth;
    NSView *containingView;
    struct _NSRect attachmentDrawingRect;
    struct _NSSize fixedSize;
    BOOL sizeIsFixed;
}

- (id)controlView;
- (id)labelFont;
- (id)labelColor;
- (id)initWithTextAttachment:(id)fp8;
- (void)dealloc;
- (void)setLabel:(id)fp8;
- (id)label;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setIsDisplayingLabel:(BOOL)fp8;
- (BOOL)isDisplayingLabel;
- (id)attributedString;
- (void)_makeString;
- (void)_discardDimmedImage;
- (id)dimmedImage;
- (void)setAttachment:(id)fp8;
- (void)setDrawWithBorder:(BOOL)fp8;
- (void)setMaxWidth:(float)fp8;
- (struct _NSSize)cellSize;
- (struct _NSPoint)cellBaselineOffset;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (BOOL)trackLink:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(int)fp32;
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
- (int)linkState;
- (void)setLinkState:(int)fp8;
- (id)highlightedColor;
- (void)setHighlightedWithColor:(id)fp8;
- (struct _NSRect)_rectForImageInRect:(struct _NSRect)fp8;
- (struct _NSRect)_rectForLinkInRect:(struct _NSRect)fp8;
- (struct _NSRect)quickLookRectForFrame:(struct _NSRect)fp8;
- (id)quickLookTransitionImage;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityActionNames;
- (void)accessibilityPerformAction:(id)fp8;
- (void)showMenu;

@end

@interface ResizingTextAttachmentCell : NSTextAttachmentCell
{
    BOOL stretchImageToFitCellFrame;
}

- (void)setStretchImageToFitCellFrame:(BOOL)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface NSTextAttachmentCell (ForNeatAttachmentFeatures)
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
@end

@interface MailTextAttachment : MimeTextAttachment
{
    unsigned int _isPossibleToDisplayAttachmentInline:1;
    unsigned int _isPossibleToDisplayAttachmentAsView:1;
    unsigned int _isDisplayingAttachmentInline:1;
    unsigned int _shouldDisplayInlineByDefault:1;
    unsigned int _isImageBeingResized:1;
    NSFileWrapper *_originalFileWrapper;
    NSImage *_originalImage;
    struct _NSSize _originalImageSize;
    struct _NSSize _maxImageSize;
    struct _NSSize _lastMaxImageSize;
}

+ (void)initialize;
+ (id)replacementAttachmentForAttachment:(id)fp8;
- (id)initWithFileWrapper:(id)fp8;
- (void)dealloc;
- (id)initWithMimePart:(id)fp8 andFileWrapper:(id)fp12;
- (id)initWithMimePart:(id)fp8 andFileWrapper:(id)fp12 iconOnly:(BOOL)fp16;
- (BOOL)shouldDisplayInlineByDefault;
- (void)setShouldDisplayInlineByDefault:(BOOL)fp8;
- (void)setIsPossibleToDisplayAttachmentInline:(BOOL)fp8;
- (BOOL)isPossibleToDisplayAttachmentInline;
- (BOOL)isDisplayingAttachmentInline;
- (void)setIsDisplayingAttachmentInline:(BOOL)fp8;
- (BOOL)hasData;
- (void)updateFromPath:(id)fp8 contentID:(id)fp12;
- (id)attachmentCell;
- (id)_getInlineImage;
- (void)_configureLabelForCell:(id)fp8;
- (id)toolTip;
- (void)setIsPartOfStationery:(BOOL)fp8;
- (BOOL)isPartOfStationery;
- (BOOL)isPDF;
- (BOOL)isScalable;
- (BOOL)isFullSize;
- (id)_originalImage;
- (void)_setupOriginalImageIfNeeded;
- (struct _NSSize)_originalImageSize;
- (id)originalFileWrapper;
- (struct _NSSize)maxImageSize;
- (struct _NSSize)originalImageSize;
- (void)resizingStarted:(struct _NSSize)fp8;
- (void)resizingFinished:(id)fp8 imageSize:(struct _NSSize)fp12 fileExtension:(id)fp20 fileType:(unsigned long)fp24 maxImageSize:(struct _NSSize)fp28;

@end

@interface MailTextAttachment (CustomAttachmentViewManagement)
+ (void)registerViewingClass:(Class)fp8 forMimeTypes:(id)fp12;
@end

@interface NSAttributedString (MailTextAttachments)
- (id)attributedStringByRemovingPartialAttachmentsInRange:(struct _NSRange)fp8;
@end

@interface NSMutableAttributedString (MailTextAttachments)
- (void)convertToMailAttachmentsInRange:(struct _NSRange)fp8;
- (void)makeExportable;
@end

@interface ViewTextAttachmentCell : NSViewTextAttachmentCell
{
    NSView *_view;
    struct _NSSize _viewSize;
}

- (void)_viewFrameChanged;
- (void)_viewFrameChanged:(id)fp8;
- (id)initWithView:(id)fp8;
- (id)controlView;
- (id)view;
- (id)viewWithFrame:(struct _NSRect)fp8 forView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (struct _NSSize)cellSize;
- (void)releaseView:(id)fp8;
- (void)dealloc;

@end

@interface ConcreteMessageMall : MessageMall
{
    NSMutableArray *_selectedMailboxUids;
    NSMutableArray *_allStores;
    NSMutableDictionary *_allMessagesByStore;
    NSMutableSet *_allNonDeletedMessagesSet;
    NSMutableDictionary *_sortedMessagesByStore;
    NSMutableDictionary *_sortedNonDeletedMessagesByStore;
    NSMutableArray *_filteredMessages;
    NSMutableArray *_filteredThreads;
    NSMutableSet *_hiddenMessages;
    NSMutableSet *_undeletedMessages;
    NSMutableSet *_focusedMessages;
    NSMutableDictionary *_searchRanks;
    float _highestSearchRank;
    MessageCriterion *_activeSearchCriterion;
    NSMutableSet *_deletedSearchResults;
    NSMutableSet *_storesBeingOpened;
    NSString *_sortOrder;
    NSMutableDictionary *_messageThreadingDataByMessage;
    NSMutableDictionary *_messagesByMessageIDHeaderDigest;
    NSMutableDictionary *_messagesByInReplyToHeaderDigest;
    NSMutableDictionary *_messagesBySubject;
    NSMutableDictionary *_messagesByID;
    NSMutableSet *_searchMonitors;
    NSMutableArray *_sortedFilteredMessages;
}

- (void)dealloc;
- (id)init;

@end

@interface MessageMall : SafeObserver <MessageConsumer>
{
    InvocationQueue *_filterTasks;
    InvocationQueue *_userTasks;
    unsigned int _sortedAscending:1;
    unsigned int _wantsToBeSortedAscending:1;
    unsigned int _includeDeleted:1;
    unsigned int _focused:1;
    unsigned int _showingSearchResults:1;
    unsigned int _searchTaskIsRunning:1;
    unsigned int _isInThreadedMode:1;
    unsigned int _wantsToBeInThreadedMode:1;
    unsigned int _postedSearchFinished:1;
    unsigned int _displayingToColumn:1;
    unsigned int _sortedFilteredMessagesIsValid:1;
    unsigned int _selectionIncludesSmartMailbox:1;
    int _activeSearchField;
    int _activeSearchTarget;
    unsigned int _currentSearchID;
    unsigned int _currentFilterSeriesID;
    NSString *_displayName;
}

+ (id)allocWithZone:(struct _NSZone *)fp8;
+ (id)allMessageMalls;
+ (void)registerMall:(id)fp8;
+ (void)deregisterMall:(id)fp8;
- (id)init;
- (id)willDealloc;
- (void)dealloc;
- (BOOL)isOpened;
- (BOOL)filteredListIncludesAllMessages;
- (int)filteredMessagesCount;
- (id)filteredMessageAtIndex:(unsigned int)fp8;
- (id)filteredMessages;
- (void)setupRowDrawingInfo:(struct __CFDictionary *)fp8;
- (unsigned int)indexOfMessageByLibraryID:(id)fp8;
- (BOOL)selectionIncludesSmartMailbox;
- (BOOL)useLibraryIDNumbering;
- (id)sortedMessagesForStore:(id)fp8;
- (unsigned int)indexOfMessage:(id)fp8 inStore:(id)fp12 messages:(id)fp16;
- (unsigned int)indexOfMessage:(id)fp8;
- (id)numberForMessage:(id)fp8;
- (int)indexOfFilteredDocument:(id)fp8;
- (int)indexOfFilteredMessage:(id)fp8;
- (id)filteredThreads;
- (void)clearFilteredMessages;
- (BOOL)isFocused;
- (void)setFocusedMessages:(id)fp8;
- (void)_setFocusedMessages:(id)fp8;
- (BOOL)isShowingSearchResults;
- (int)currentSearchField;
- (int)currentSearchTarget;
- (void)setSortOrder:(id)fp8 ascending:(BOOL)fp12;
- (id)sortOrder;
- (void)sortMessages:(id)fp8;
- (BOOL)includeDeleted;
- (void)setIncludeDeleted:(BOOL)fp8;
- (BOOL)isSortedAscending;
- (BOOL)isSortedByDateReceived;
- (void *)sortFunctionForName:(id)fp8;
- (void *)sortFunction;
- (id)expandedMailboxes:(id)fp8;
- (void)setMailboxUids:(id)fp8;
- (void)_addNonDeletedMessagesInArray:(id)fp8 fromStore:(id)fp12;
- (id)_storeForMailbox:(id)fp8 fromStores:(id)fp12 cache:(id)fp16;
- (id)_storeForMailbox:(id)fp8 cache:(id)fp12;
- (void)_removeDeletedMessagesInArray:(id)fp8;
- (void)_removeMessagesInStores:(id)fp8 fromMessages:(id)fp12 storeCache:(id)fp16;
- (void)_rebuildNonDeletedMessagesForStoresOfMessagesInArray:(id)fp8;
- (id)_addStore:(id)fp8 shouldReturnRetainedMessages:(BOOL)fp12;
- (void)_filterInMessages:(id)fp8;
- (void)_filterInMessagesSynchronously:(id)fp8;
- (void)_filterOutMessages:(id)fp8 ignoreShowDeletedPreference:(BOOL)fp12;
- (BOOL)_filterOutMessagesSynchronously:(id)fp8;
- (void)_resortUsingFunction:(void *)fp8;
- (void)_refilter;
- (void)_invertFilteredList;
- (id)_backgroundInvertFilteredList;
- (void)_gatherCountsFromStoresForTotalCount:(unsigned int *)fp8 totalSize:(unsigned int *)fp12 deletedCount:(unsigned int *)fp16 deletedSize:(unsigned int *)fp20;
- (void)totalCount:(unsigned int *)fp8 andSize:(unsigned int *)fp12;
- (void)deletedCount:(unsigned int *)fp8 andSize:(unsigned int *)fp12;
- (unsigned int)totalCount;
- (unsigned int)unreadCount;
- (void)hideMessages:(id)fp8;
- (void)unhideMessages:(id)fp8;
- (void)rebuildTableOfContentsAsynchronously;
- (void)structureDidChange;
- (void)structureDidChangeFromOpeningThread:(id)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (void)structureDidChangeByClosingThread:(id)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)structureDidChangeWithChangedThreads:(id)fp8;
- (id)threadForMessageID:(id)fp8;
- (void)updateFilteredListForMessages:(id)fp8 flags:(id)fp12;
- (void)setFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16;
- (void)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;
- (void)setJunkMailLevel:(int)fp8 forMessages:(id)fp12 trainJunkMailDatabase:(BOOL)fp16;
- (void)setJunkMailLevel:(int)fp8 forMessages:(id)fp12;
- (BOOL)canCompact;
- (void)doCompact;
- (BOOL)canRebuild;
- (void)_updateDisplayName;
- (id)displayName;
- (id)criterionForString:(id)fp8 type:(int)fp12 scope:(int)fp16;
- (void)performLibrarySearchWithCriterion:(id)fp8 ID:(unsigned int)fp12;
- (id)threadSearchSequenceNumber;
- (BOOL)shouldCancel;
- (void)newMessagesAvailable:(id)fp8 ranks:(id)fp12;
- (void)newMessagesAvailable:(id)fp8;
- (void)filterInLibrarySearchResults:(id)fp8 ranks:(id)fp12 sequenceNumber:(id)fp16;
- (id)mailboxSearchCriterionForScope:(int)fp8;
- (id)textSearchCriterionForSearchField:(int)fp8 queryString:(id)fp12;
- (void)searchForCriterion:(id)fp8;
- (void)searchForString:(id)fp8 in:(int)fp12 withOptions:(int)fp16;
- (void)reallySearchWithCriterion:(id)fp8 ID:(unsigned int)fp12;
- (void)_searchFinished;
- (void)_cancelSearch;
- (BOOL)isSearching;
- (id)copySearchRankForMessage:(id)fp8;
- (void)_normalizeSearchRanks;
- (id)mailboxUid;
- (id)allMailboxUids;
- (id)selectedMailboxUids;
- (void)messageColorsNeedToBeReevaluated;
- (BOOL)isReadOnly;
- (id)stores;
- (int)compareByNumberMessage:(id)fp8 andMessage:(id)fp12 sortedAscending:(BOOL)fp16;
- (BOOL)deletedFlagForMessage:(id)fp8;
- (BOOL)_deletedFlagForMessage:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (BOOL)_shouldDisplayMessage:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (id)_messagesThatShouldBeDisplayed:(id)fp8 hiddenMessages:(id)fp12 undeletedMessages:(id)fp16;
- (void)_componentMessageFlagsChanged:(id)fp8;
- (void)_componentStoreDidOpen:(id)fp8;
- (void)_componentStoreStructureChanged:(id)fp8;
- (void)reload:(id)fp8;
- (void)_componentStoreMessagesWereUpdated:(id)fp8;
- (void)handleMessagesUpdated:(id)fp8;
- (void)_componentStoreMessagesWereAdded:(id)fp8;
- (void)handleMessagesAdded:(id)fp8;
- (void)_componentStoreMessagesCompacted:(id)fp8;
- (void)_performFilterTask:(id)fp8 seriesID:(unsigned int)fp12;
- (void)_filterTaskCompleted:(id)fp8 seriesID:(unsigned int)fp12;
- (void)structureWillChangeFromOpeningThread:(id)fp8;
- (void)structureWillChangeFromClosingThread:(id)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (void)structureWillChange;
- (id)_backgroundResortUsingSortFunction:(void *)fp8;
- (void)_removeMembersOfOpenThreads:(id)fp8;
- (id)_insertMembersOfOpenThreads:(id)fp8 usingSortFunction:(void *)fp12 context:(struct _MessageSortingInformation)fp16;
- (id)_backgroundRefilterMessages:(id)fp8 stores:(id)fp12;
- (id)_backgroundMergeMessages:(id)fp8;
- (id)_backgroundSortNewFilteredMessages:(id)fp8;
- (void)_removeThreadedMessagesIn:(id)fp8 from:(id)fp12;
- (void)_mergeMessages:(id)fp8 intoMessages:(id)fp12 newThreads:(id *)fp16 changedThreads:(id *)fp20 usingComparator:(void *)fp24;
- (id)_backgroundFilterOutMessages:(id)fp8 ignoreShowDeletedPreference:(BOOL)fp12;
- (BOOL)isInThreadedMode;
- (void)setIsInThreadedMode:(BOOL)fp8;
- (void)toggleThreadedMode;
- (BOOL)needThreadingInfo;
- (void)setDisplayingToColumn:(BOOL)fp8;
- (BOOL)needTo;
- (unsigned int)loadOptions;
- (id)_backgroundResetThreadInfoAndGroupByThread;
- (id)_backgroundGroupMessagesByThread;
- (id)_backgroundUngroupThreads;
- (void)openThreadAtIndex:(int)fp8 animate:(BOOL)fp12;
- (BOOL)openThreadAtIndex:(int)fp8 andSelectMessage:(id)fp12 animate:(BOOL)fp16;
- (id)quietlyOpenThreadAtIndex:(unsigned int)fp8;
- (BOOL)closeThreadAtIndex:(int)fp8 focusRow:(int)fp12 animate:(BOOL)fp16;
- (id)quietlyCloseThreadAtIndex:(unsigned int)fp8;
- (void)openThreadsWithIDs:(id)fp8;
- (void)openAllThreads;
- (void)closeAllThreads;
- (BOOL)loadFullThreadsForMessages:(id)fp8;
- (void)_setFilteredMessages:(id)fp8;
- (void)_setFilteredMessages:(id)fp8 changedMessages:(id)fp12 filteredThreads:(id)fp16 changedThreads:(id)fp20 changedFlags:(id)fp24 messagesFilteredIn:(id)fp28 messagesFilteredOut:(id)fp32 forSeriesID:(unsigned int)fp36;
- (void)routeMessages:(id)fp8 fromStores:(id)fp12;
- (void)_unlockedAddMessagesInSameThreadAsMessage:(id)fp8 toSetOrArray:(id)fp12;
- (void)addMessagesInSameThreadAsMessage:(id)fp8 toSet:(id)fp12;
- (id)repliesToMessage:(id)fp8;
- (id)parentOfMessage:(id)fp8;
- (BOOL)messageIsPartOfAThread:(id)fp8;
- (id)messageForMessageID:(id)fp8;
- (id)threadForMessage:(id)fp8;
- (id)threadAtIndex:(unsigned int)fp8;
- (id)filteredThreadForMessage:(id)fp8;
- (id)unfilteredThreadForMessage:(id)fp8;
- (id)filteredThreadsForMessages:(id)fp8;
- (void)_deduceThreadHierarchyForMessages:(id)fp8 firstTime:(BOOL)fp12;
- (void)_clearThreadInfo;
- (void)updateThreadingDictionaryForMessages:(id)fp8;
- (void)removeMessagesFromThreadingDictionary:(id)fp8;
- (void)_resetThreadInfoFromFilteredMessages;
- (void)_updateThreadInfoForMessages:(id)fp8;
- (int)_appendDescriptionOfDictionaryMemoryUsage:(id)fp8 named:(id)fp12 toString:(id)fp16;
- (id)memoryUsageDescription;

@end

@interface FilteredListInfo : NSObject
{
    NSMutableArray *filteredMessages;
    NSArray *changedMessages;
    NSMutableArray *filteredThreads;
    NSArray *changedThreads;
    NSDictionary *changedFlags;
    NSMutableArray *messagesFilteredIn;
    NSMutableArray *messagesFilteredOut;
    int taskType;
}

+ (id)infoForType:(int)fp8;
- (void)dealloc;

@end

@interface MessageThreadingData : NSObject
{
    Message *parent;
    NSMutableSet *replies;
    MessageThread *thread;
}

- (id)description;
- (void)dealloc;

@end

@interface QuickTimeAttachmentView : NSView
{
    NSURL *_url;
    id _qtMovieView;
    unsigned int _isInteractive:1;
    MailTextAttachment *_attachment;
}

+ (void)initialize;
+ (id)viewForFileWrapper:(id)fp8;
- (void)setURL:(id)fp8;
- (id)URL;
- (void)setAttachment:(id)fp8;
- (void)webPlugInStart;
- (void)viewWillMoveToSuperview:(id)fp8;
- (id)menuForEventDelegate:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)dealloc;
- (void)setFrame:(struct _NSRect)fp8;
- (void)mouseDraggedDelegate:(id)fp8;
- (void)mouseDragged:(id)fp8;

@end

@interface AddressPicker : NSWindowController
{
    ABPeoplePickerView *pickerView;
    BOOL selectionIsValid;
}

+ (void)showOrHideAddressPicker;
+ (BOOL)isAddressPickerVisible;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
- (void)showOrHideWindow;
- (BOOL)isWindowVisible;
- (void)saveDefaults;
- (void)dealloc;
- (void)awakeFromNib;
- (id)windowNibName;
- (void)searchIndex:(id)fp8;
- (void)putSelectionInTo:(id)fp8;
- (void)putSelectionInCC:(id)fp8;
- (void)putSelectionInBCC:(id)fp8;
- (void)putSelectionInBestHeader:(id)fp8;
- (void)putSelectionInHeader:(id)fp8;
- (id)formattedAddressForRecord:(id)fp8;
- (void)setSelectionIsValid:(BOOL)fp8;
- (void)_ensureSelectionIsValid:(id)fp8;

@end

@interface AddressHistoryController : NSObject
{
    NSTableView *historyTableView;
    NSButton *addToAddressBookButton;
    NSWindow *window;
    NSSearchField *searchField;
    NSMutableArray *historyRecords;
    NSString *sortColumn;
    BOOL sortIsAscending;
    NSImage *sortAscendingImage;
    NSImage *sortDescendingImage;
    NSImage *addressBookPersonImage;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)showAddressHistory;
- (void)addToAddressBook:(id)fp8;
- (void)deleteFromHistory:(id)fp8;
- (void)searchIndex:(id)fp8;
- (void)search:(id)fp8;
- (void)cancelSearch:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)openAddressBook:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)sortHistory;
- (void)showColumnSortIndicator;
- (id)tableView:(id)fp8 toolTipForCell:(id)fp12 rect:(struct _NSRect *)fp16 tableColumn:(id)fp20 row:(int)fp24 mouseLocation:(struct _NSPoint)fp28;

@end

@interface Message (Chat)
+ (id)chatURLForEmails:(id)fp8;
@end

@interface PresenceTracker : NSObject
{
    NSMutableDictionary *_emailToPerson;
    NSMutableDictionary *_abPersonToStatus;
    BOOL _isListening;
    NSImage *_availableStatusImage;
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)retain;
- (unsigned int)retainCount;
- (void)release;
- (id)autorelease;
- (id)availableStatusImage;
- (id)init;
- (void)cacheInformationForABPerson:(id)fp8;
- (BOOL)personWithEmailIsOnline:(id)fp8;
- (id)addressCardUIDForEmail:(id)fp8;
- (void)clearCache;
- (void)clearOnlineStatus;
- (void)reloadCache;
- (void)updateStatusForABPerson:(id)fp8 withStatus:(id)fp12;
- (void)startListening;
- (void)stopListening;
- (void)imPersonStatusChangedNotification:(id)fp8;
- (void)imStatusImagesChangedAppearanceNotification:(id)fp8;
- (void)abDatabaseChangedExternallyNotification:(id)fp8;

@end

@interface NonModalAlert : NSObject
{
    id _representedObject;
    NSPanel *_panel;
    NSTextField *_title;
    NSTextField *_message;
}

+ (void)runNonModalForObject:(id)fp8 error:(id)fp12;
+ (void)dismissNonModalAlertForObject:(id)fp8;
- (void)dealloc;
- (id)initWithError:(id)fp8 representedObject:(id)fp12;
- (void)show;
- (id)representedObject;
- (void)okClicked:(id)fp8;

@end

@interface NSAlert (MFErrorSupport)
+ (id)createAlertForError:(id)fp8 defaultButton:(id)fp12 alternateButton:(id)fp16 otherButton:(id)fp20;
- (void)setEscapeKeyEquivalentOnButtonWithTitle:(id)fp8;
@end

@interface NSObject (NonModalAlertPanel)
- (void)runNonModalAlertWithError:(id)fp8;
- (void)dismissNonModalAlert;
@end

@interface NSTextView (AtomicAddress)
- (void)fixAtomSelectionForSelectionRange:(struct _NSRange)fp8;
- (void)fixJoiningOfSelectedAtoms;
@end

@interface NSArray (AtomicAddress)
- (id)atomicAddressesOfType:(int)fp8;
- (id)attributedStringOfAddressesAttachments:(id *)fp8 type:(int)fp12;
@end

@interface NSAttributedString (AtomicAddress)
+ (id)atomicAddressFromDictionary:(id)fp8;
- (BOOL)containsOnlyAtoms;
- (id)unatomicAddress;
- (id)dictionaryRepresentation;
- (id)atomicAddresses;
- (id)allAddresses;
- (id)addressAttachments;
- (id)unatomicAddresses;
- (id)replaceAttachmentsWithAddressesIncludeName:(BOOL)fp8;
- (BOOL)containsAddressAttachments;
- (id)stringWithAtomsExpanded;
- (id)stringOfAddressesWithAtomsExpandedIncludeName:(BOOL)fp8;
- (id)mutableCopyWithNewAttachments:(id *)fp8;
- (struct _NSRange)convertPlainTextRange:(struct _NSRange)fp8;
- (struct _NSRange)convertToPlainTextRange:(struct _NSRange)fp8;
- (void)testSpotlighting;
- (BOOL)knownToHaveNoRecord;
- (id)addressBookRecord;
- (void)displayCommasExceptAtEnd;
- (void)displayCommasForAllAddresses;
@end

@interface NSString (AtomicAddress)
- (id)atomicAddress;
- (id)atomicAddressStringForRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressStringForRepresentedRecord:(id)fp8 type:(int)fp12 showComma:(BOOL)fp16;
- (id)atomicAddressArrayForRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressWithRepresentedRecord:(id)fp8 type:(int)fp12;
- (id)atomicAddressWithRepresentedRecord:(id)fp8 type:(int)fp12 showComma:(BOOL)fp16;
@end

@interface DraggingTextView : NSTextView
{
}

+ (id)addressingFieldEditorForObject:(id)fp8;
- (void)dealloc;
- (void)mouseDown:(id)fp8;
- (id)typingAttributes;
- (void)selectAll:(id)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(unsigned int)fp16 stillSelecting:(BOOL)fp20;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(unsigned int)fp16;
- (void)replaceCharactersInRange:(struct _NSRange)fp8 withString:(id)fp16;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)delayedLayoutInvalidation:(id)fp8;
- (void)doCommandBySelector:(SEL)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)readSelectionFromPasteboard:(id)fp8 type:(id)fp12;
- (id)readablePasteboardTypes;
- (id)writablePasteboardTypes;
- (id)dragImageForSelectionWithEvent:(id)fp8 origin:(struct _NSPoint *)fp12;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)acceptableDragTypes;
- (BOOL)dragSelectionWithEvent:(id)fp8 offset:(struct _NSSize)fp12 slideBack:(BOOL)fp20;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (id)searchString;
- (struct _NSRange)selectedSearchRange;
- (void)showSearchResultsRange:(struct _NSRange)fp8;
- (id)menuForEvent:(id)fp8;
- (id)attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)concludeDragOperation:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;

@end

@interface AddressAttachment : NSTextAttachment
{
    NSString *address;
    NSString *name;
    int type;
    id addressBookRecord;
    BOOL isInitializing;
    BOOL suppressNotifications;
    BOOL isSenderAddress;
    BOOL isOriginalSenderAddress;
    BOOL knownToHaveNoRecord;
    BOOL shouldDisplayFullAddress;
    NSFont *preferredFont;
}

+ (void)initialize;
+ (void)getRecordsForAddresses:(id)fp8;
+ (id)attributesForType:(int)fp8;
+ (void)resetAttributes;
+ (BOOL)addressIsExternal:(id)fp8;
+ (id)colorForExternalDomain;
+ (int)addressDisplayMode;
+ (void)setAddressDisplayMode:(int)fp8;
- (id)initWithAddress:(id)fp8 record:(id)fp12 type:(int)fp16;
- (id)initWithAddress:(id)fp8 record:(id)fp12 type:(int)fp16 showComma:(BOOL)fp20;
- (id)initWithFileWrapper:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)adjustFontSizeBy:(int)fp8;
- (id)drawingAttributes;
- (BOOL)isInitializing;
- (void)setAddress:(id)fp8;
- (id)address;
- (id)pasteboardString;
- (id)nonemptyAddress;
- (void)setName:(id)fp8;
- (id)name;
- (id)formattedAddress;
- (id)quotedFormattedAddress;
- (id)nameOrAddressForDisplay;
- (id)addressDomain;
- (void)writeToPasteboard:(id)fp8;
- (id)vCardString;
- (id)vCardRepresentation;
- (id)dictionaryRepresentation;
- (BOOL)hasToolTip;
- (id)toolTip;
- (int)type;
- (void)addressDisplayModeChanged:(id)fp8;
- (void)setAddressBookRecord:(id)fp8;
- (id)addressBookRecord;
- (void)removeAddressBookRecord;
- (void)setKnownToHaveNoRecord:(BOOL)fp8;
- (BOOL)knownToHaveNoRecord;
- (BOOL)isInAddressBook;
- (BOOL)isSenderAddress;
- (void)setIsSenderAddress;
- (BOOL)isOriginalSenderAddress;
- (void)setIsOriginalSenderAddress;
- (void)domainForMatchingDidChange;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (void)setRightSideHasSelectedText:(BOOL)fp8;
- (void)setRightSideHasSelectedAtom:(BOOL)fp8;
- (void)setLeftSideHasSelection:(BOOL)fp8;
- (id)attachmentCell;
- (void)onlinePresenceChanged:(id)fp8;
- (void)antialiasingSettingsChanged:(id)fp8;

@end

@interface AddressAttachmentCell : NSTextAttachmentCell
{
    AddressAttachment *attachment;
    struct _NSRect drawingRect;
    struct _NSRect hotSpot;
    struct _NSRect onlineHotSpot;
    NSMenu *menu;
    unsigned int characterIndex;
    struct _NSSize cellSize;
    BOOL isSpotlighted;
    BOOL shouldTestForSpotlighting;
    BOOL shouldShowComma;
    NSMutableDictionary *textAttributesRegular;
    NSMutableDictionary *textAttributesWhiteText;
    NSMutableDictionary *textAttributesTruncatedRegular;
    NSMutableDictionary *textAttributesTruncatedWhiteText;
    NSView *containingView;
    unsigned int isSelected:1;
    unsigned int leftSideHasSelection:1;
    unsigned int rightSideHasSelectedText:1;
    unsigned int rightSideHasSelectedAtom:1;
    unsigned int overrideRightSideSelection:1;
    unsigned int overrideLeftSideSelection:1;
    unsigned int hideLeftSideMargin:1;
    unsigned int subtractLeftSideMarginFromRightSide:1;
    unsigned int menuIsVisible:1;
}

+ (void)initialize;
+ (int)sizeForCellOfType:(int)fp8 withAddress:(id)fp12;
+ (float)heightForAtomType:(int)fp8;
+ (BOOL)isOnLineAddress:(id)fp8;
+ (void)_changePresenceImage;
- (id)initImageCell:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)addressAttachment;
- (void)setAttachment:(id)fp8;
- (void)dealloc;
- (int)characterIndex;
- (struct _NSRect)drawingRect;
- (struct _NSRect)visibleRect;
- (struct _NSRect)atomBoundsRectForCellFrame:(struct _NSRect)fp8;
- (struct _NSRect)atomBoundsRect;
- (id)dragImage;
- (id)textAttributesWhiteText;
- (id)textAttributesTruncatedWhiteText;
- (id)textAttributesRegular;
- (id)textAttributesTruncatedRegular;
- (id)view:(id)fp8 stringForToolTip:(int)fp12 point:(struct _NSPoint)fp16 userData:(void *)fp24;
- (void)resetCursorAndToolTipRect:(struct _NSRect)fp8 inView:(id)fp24;
- (id)menu;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)isOnLine;
- (void)openChat:(id)fp8;
- (void)openNewMessage:(id)fp8;
- (void)addToAddressBook:(id)fp8;
- (void)removeRecordFromAddressBook:(id)fp8 forRecent:(id)fp12;
- (void)openInAddressBook:(id)fp8;
- (void)createSmartMailbox:(id)fp8;
- (void)removeFromAddressHistory:(id)fp8;
- (void)changeAddress:(id)fp8;
- (void)copyAddressToClipboard:(id)fp8;
- (void)searchInSpotlight:(id)fp8;
- (BOOL)isSelected;
- (void)setIsSelected:(BOOL)fp8;
- (BOOL)rightSideHasSelectedText;
- (void)setRightSideHasSelectedText:(BOOL)fp8;
- (void)setRightSideHasSelectedAtom:(BOOL)fp8;
- (BOOL)leftSideHasSelection;
- (void)setLeftSideHasSelection:(BOOL)fp8;
- (void)setOverrideRightSideSelection:(BOOL)fp8;
- (void)setOverrideLeftSideSelection:(BOOL)fp8;
- (void)testSpotlighting;
- (void)setShouldShowComma:(BOOL)fp8;
- (BOOL)shouldDrawCommaRightNow;
- (void)selectedAddressChanged;
- (void)_presenceImageChanged:(id)fp8;
- (void)fontChanged;
- (void)sizeChanged;
- (void)addressBookRecordChanged;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24 characterIndex:(unsigned int)fp28 layoutManager:(id)fp32;
- (void)_drawAtomPartsWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24;
- (void)_drawAtomWithRect:(struct _NSRect)fp8 cellFrame:(struct _NSRect)fp24 inView:(id)fp40;
- (struct _NSPoint)textDrawPointInRect:(struct _NSRect)fp8 ofView:(id)fp24;
- (struct _NSSize)cellSize;
- (struct _NSSize)sizeOfString:(id)fp8;
- (struct _NSRect)cellFrameForTextContainer:(id)fp8 proposedLineFragment:(struct _NSRect)fp12 glyphPosition:(struct _NSPoint)fp28 characterIndex:(unsigned int)fp36;
- (struct _NSPoint)cellBaselineOffset;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32 untilMouseUp:(BOOL)fp36;
- (BOOL)wantsToTrackMouse;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8;
- (BOOL)wantsToTrackMouseForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 atCharacterIndex:(unsigned int)fp32;
- (BOOL)shouldBeSpotlightedInView:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)delayedMouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)otherAtomBecameSpotlighted:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (void)showMenu;

@end

@interface _MenuItemThatDoesNotRetainRepresentedObject : NSMenuItem
{
    id _representedObject;
}

- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;

@end

@interface SingleMessageViewer : MessageViewer <MVSelectionOwner>
{
    NSView *_messageContentView;
    SpotlightBar *_spotlightBar;
    BOOL nibLoaded;
}

+ (id)viewerForMessage:(id)fp8 showAllHeaders:(BOOL)fp12 viewingState:(id)fp16;
+ (void)restoreFromDefaults;
+ (void)saveDefaultsOmittingViewer:(id)fp8;
- (void)_updateWindowTitle;
- (void)loadMessageWindowNib;
- (id)initForViewingMessage:(id)fp8 showAllHeaders:(BOOL)fp12 viewingState:(id)fp16 fromDefaults:(BOOL)fp20;
- (id)initWithSavedDefaults:(id)fp8;
- (void)dealloc;
- (id)_messageIDDictionary;
- (void)_adjustNewSingleViewerWindowFrame;
- (void)_setupFromDefaults;
- (void)showAndMakeKey:(BOOL)fp8;
- (void)_restoreViewer;
- (id)_saveDefaults;
- (void)takeOverAsSelectionOwner;
- (void)resignAsSelectionOwner;
- (id)selectedMessages;
- (void)messageFlagsDidChange:(id)fp8;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (void)messagesCompacted:(id)fp8;
- (void)setupToolbar;
- (id)previousIdentifierForUpgradingToolbar:(id)fp8;
- (id)toolbar:(id)fp8 upgradedItemIdentifiers:(id)fp12;
- (BOOL)_isViewingMessage:(id)fp8;
- (BOOL)_selectionContainsMessagesWithReadStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithFlaggedStatusEqualTo:(BOOL)fp8;
- (BOOL)_selectionContainsMessagesWithJunkMailLevelEqualTo:(int)fp8;
- (BOOL)_selectionContainsMessagesWithAttachments;
- (void)deleteMessages:(id)fp8;
- (void)deleteMessagesAllowingMoveToTrash:(BOOL)fp8;
- (void)replyMessage:(id)fp8;
- (void)replyAllMessage:(id)fp8;
- (void)replyToSender:(id)fp8;
- (void)replyToOriginalSender:(id)fp8;
- (void)forwardMessage:(id)fp8;
- (void)redirectMessage:(id)fp8;
- (BOOL)send:(id)fp8;
- (void)editorDidLoad:(id)fp8;
- (BOOL)replaceWithEditorForType:(int)fp8;
- (void)_changeFlag:(id)fp8 state:(BOOL)fp12 forMessages:(id)fp16 undoActionName:(id)fp20;
- (void)keyDown:(id)fp8;
- (id)selection;
- (void)selectMessages:(id)fp8;
- (id)currentDisplayedMessage;
- (id)messageStore;
- (BOOL)transferSelectionToMailbox:(id)fp8 deleteOriginals:(BOOL)fp12;
- (void)_showSpotlightBarWithSearchString:(id)fp8;
- (void)_hideSpotlightBar;
- (void)setSearchString:(id)fp8;
- (void)setShowRevealMessageLink:(BOOL)fp8;
- (void)revealMessage:(id)fp8;

@end

@interface MessageViewingState : NSObject
{
    NSAttributedString *_headerAttributedString;
    NSDictionary *_addressAttachments;
    NSDictionary *_plainAddresses;
    NSSet *_expandedAddressKeys;
    NSAttributedString *_attachmentsDescription;
    NSArray *_headerOrder;
    NSArray *_attachments;
    Message *_message;
    ActivityMonitor *_monitor;
    MimeBody *mimeBody;
    id document;
    MFError *error;
    int headerIndent;
    int headerFontAdjustmentDebt;
    unsigned int preferredAlternative:23;
    unsigned int accountWasOffline:1;
    unsigned int dontCache:1;
    unsigned int showAllHeaders:1;
    unsigned int showDefaultHeaders:1;
    unsigned int isPrinting:1;
    unsigned int viewSource:1;
    unsigned int showControlChars:1;
    unsigned int showAttachments:1;
    unsigned int downloadRemoteURLs:1;
    unsigned int triedToDownloadRemoteURLs:1;
    unsigned int messageIsFromMicrosoft:1;
    unsigned int isChildRequestForSenders:1;
    int displayType;
    unsigned int preferredEncoding;
    NSString *sender;
    NSString *senderName;
    int priority;
    NSString *childAddress;
    NSArray *requestedAddressesFromChild;
    id <MessageContentDisplay> displayer;
    id editor;
}

+ (void)initialize;
- (void)release;
- (void)dealloc;
- (id)init;
- (id)editor;
- (void)setEditor:(id)fp8;
- (void)editorClosed:(id)fp8;
- (id)mimeBody;
- (id)attachments;
- (id)headerAttributedString;
- (void)setHeaderAttributedString:(id)fp8;
- (id)plainAddresses;
- (void)setPlainAddresses:(id)fp8;
- (id)addressAttachments;
- (void)setAddressAttachments:(id)fp8;
- (id)expandedAddressKeys;
- (void)setExpandedAddressKeys:(id)fp8;
- (id)attachmentsDescription;
- (void)setAttachmentsDescription:(id)fp8;
- (id)headerOrder;
- (void)setHeaderOrder:(id)fp8;
- (int)headerDetailLevel;
- (id)description;
- (id)monitor;
- (void)setMonitor:(id)fp8;
- (id)message;
- (void)setMessage:(id)fp8;

@end

@interface NSAttributedString (ViewingStateAttachmentCaching)
- (id)userAttachments;
@end

@interface TextMessageDisplay : NSObject <MessageContentDisplay>
{
    NSScrollView *messageScroll;
    MessageTextView *textView;
    MessageBody *messageBody;
    BOOL needsSetUp;
    NSInvocation *displayChangedInvocation;
    id _delegate;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)dealloc;
- (id)findTarget;
- (id)contentView;
- (id)textView;
- (void)awakeFromNib;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)prepareToRemoveView;
- (id)selectedTextRepresentation;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedText;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)highlightSearchText:(id)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (void)displayAttributedString:(id)fp8;
- (id)messageTextView:(id)fp8 willReturnMenu:(id)fp12 forEvent:(id)fp16;
- (struct __CFDictionary *)stringsForURLification;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;
- (void)_setDisplayChangedInvocation:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface FadingMessageDisplay : NSObject <MessageContentDisplay>
{
    NSTimer *_fadeTimer;
    int _fadeStepCounter;
    TextMessageDisplay *_textMessageDisplay;
    NSImageView *_snapshotView;
    MessageTilingView *_originalView;
    LoadingOverlay *_loadingOverlay;
    NSProgressIndicator *_progressIndicator;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)dealloc;
- (void)showMessageProgress;
- (void)loadingOverlayDidEnd:(id)fp8 returnCode:(int)fp12;
- (void)fadeOneNotch:(id)fp8;
- (id)contentView;
- (id)textView;
- (id)copySnapshotOfRect:(struct _NSRect)fp8 inView:(id)fp24;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)prepareToRemoveView;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)selectedTextRepresentation;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedText;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)highlightSearchText:(id)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (void)setTextMessageDisplay:(id)fp8;
- (id)findTarget;
- (struct __CFDictionary *)stringsForURLification;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;

@end

@interface FindPanel : NSObject
{
    NSButton *findNextButton;
    NSTextField *findTextField;
    NSButton *ignoreCaseButton;
    NSMatrix *replaceAllScopeMatrix;
    NSTextField *replaceTextField;
    NSTextField *statusField;
    NSString *findString;
    BOOL lastFindWasSuccessful;
}

+ (id)sharedInstance;
- (id)init;
- (void)_appDidActivate;
- (void)dealloc;
- (id)findString;
- (void)setFindString:(id)fp8;
- (void)setFindString:(id)fp8 writeToPasteboard:(BOOL)fp12;
- (id)findPanel;
- (void)orderFrontFindPanel:(id)fp8;
- (void)findNextAndOrderFindPanelOut:(id)fp8;
- (void)findNext:(id)fp8;
- (void)findPrevious:(id)fp8;
- (void)ignoreCaseButtonClicked:(id)fp8;
- (void)replace:(id)fp8;
- (void)replaceAndFind:(id)fp8;
- (void)replaceAll:(id)fp8;

@end

@interface WebHTMLView (FindPanelStuff)
- (BOOL)canReplace;
- (unsigned int)replaceString:(id)fp8 withString:(id)fp12 options:(unsigned int)fp16;
@end

@interface NSString (FindPanelSupport)
- (struct _NSRange)findString:(id)fp8 selectedRange:(struct _NSRange)fp12 options:(unsigned int)fp20 wrap:(BOOL)fp24;
@end

@interface NSTextView (FindPanelSupport)
- (void)jumpToSelection:(id)fp8;
- (void)takeFindStringFromSelection:(id)fp8;
- (BOOL)findString:(id)fp8 options:(unsigned int)fp12;
- (BOOL)canReplace;
- (unsigned int)replaceString:(id)fp8 withString:(id)fp12 options:(unsigned int)fp16;
@end

@interface MessageListCell : NSImageCell
{
    NSTextFieldCell *_textCell;
    NSString *_stringValue;
    float _maxHeight;
    float _maxWidth;
    int contentType;
    int contentCount;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (id)_textCell;
- (void)setFont:(id)fp8;
- (void)setMaxHeight:(float)fp8;
- (float)maxHeight;
- (void)setMaxWidth:(float)fp8;
- (float)maxWidth;
- (struct _NSSize)_imageSizeForCellFrame:(struct _NSRect)fp8;
- (struct _NSPoint)_drawOriginForSize:(struct _NSSize)fp8 inRect:(struct _NSRect)fp16;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setObjectValue:(id)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)setContentType:(int)fp8;
- (void)setContentCount:(int)fp8;
- (id)contentValue;
- (BOOL)isRepresentedAsStaticText;
- (BOOL)isRepresentedAsButton;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityActionNames;

@end

@interface MessageListHeaderCell : NSTableHeaderCell
{
    MessageListCell *_realCell;
    unsigned int _imageAlignment;
    NSString *_accessibilityTitle;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setImageAlignment:(unsigned int)fp8;
- (void)setAccessibilityTitle:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface MessageHeaderDisplay : NSObject
{
    MessageHeaderView *headerView;
    MessageContentController *contentController;
    MessageTextContainer *specialContainer;
    NSImageView *senderImageView;
    NSString *unloadedSender;
    float oldHeaderViewWidth;
    BOOL isCalculatingAddressLines;
    BOOL isForPrinting;
    BOOL isViewingSource;
    MessageViewingState *_viewingState;
}

+ (id)copyHeadersForMessage:(id)fp8 viewingState:(id)fp12;
+ (id)_copyRSSHeadersForMessage:(id)fp8 viewingState:(id)fp12;
+ (void)_addAddressesToString:(id)fp8 addressStrings:(id)fp12 plainAddresses:(id)fp16 addressAttachments:(id)fp20 key:(id)fp24 viewingState:(id)fp28 tabPosition:(int)fp32 range:(struct _NSRange *)fp36;
+ (void)_setSendersFromAddressAttachments:(id)fp8;
+ (void)_stripTrailingReturns:(id)fp8;
+ (void)setUpAttachmentsDescriptionForMessage:(id)fp8 viewingState:(id)fp12;
+ (id)formattedAttachmentsSizeForAttachments:(id)fp8;
+ (id)formattedAttachmentsSizeForMessage:(id)fp8;
+ (int)numberOfAddressesThatFitOnTwoLinesAttachments:(id)fp8 strings:(id)fp12 inTextContainer:(id)fp16 withIndent:(int)fp20 andVerticalLocation:(int)fp24 forPrinting:(BOOL)fp28;
+ (id)linkForMoreAddressesCount:(int)fp8 headerKey:(id)fp12 font:(id)fp16;
+ (id)copyViewingState:(id)fp8;
+ (void)setUpEncryptionAndSignatureImageForMessage:(id)fp8 viewingState:(id)fp12;
+ (id)orderedKeys:(id)fp8 withTableViewOrder:(id)fp12;
+ (id)regularParagraphStyleForTabPosition:(int)fp8;
+ (id)regularParagraphStyleForTabPosition:(int)fp8 paragraphSpacing:(int)fp12;
+ (id)addressParagraphStyleForTabPosition:(int)fp8 withLineBreakMode:(unsigned int)fp12 forPrinting:(BOOL)fp16;
+ (void)setTabsWithPosition:(int)fp8 inAttributedString:(id)fp12 withKeys:(id)fp16 addressKeys:(id)fp20 addressAttachments:(id)fp24 forPrinting:(BOOL)fp28;
+ (id)attributedStringOfLength:(int)fp8 usingAttachments:(id)fp12 startingAtIndex:(int)fp16 strings:(id)fp20 newAttachments:(id *)fp24 forPrinting:(BOOL)fp28;
+ (void)rangeOfAddresses:(struct _NSRange *)fp8 rangeOfLink:(struct _NSRange *)fp12 forKey:(id)fp16 inAttributedString:(id)fp20;
- (void)dealloc;
- (id)viewingState;
- (void)setViewingState:(id)fp8;
- (void)awakeFromNib;
- (void)setUp;
- (id)unloadedSender;
- (void)setUnloadedSender:(id)fp8;
- (void)display:(id)fp8;
- (void)prepareToRemoveView;
- (void)displayAttributedString:(id)fp8;
- (void)headerViewFrameChanged:(id)fp8;
- (void)recalculateAddressLinesShouldDisplay:(BOOL)fp8;
- (void)updateSubjectURLMatches:(id)fp8;
- (void)showAllAddressesForKey:(id)fp8;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)selectedText;
- (void)_addressBookChanged:(id)fp8;
- (void)_addressPhotoLoaded:(id)fp8;
- (id)textView;
- (void)textView:(id)fp8 clickedOnCell:(id)fp12 event:(id)fp16 inRect:(struct _NSRect)fp20 atIndex:(unsigned int)fp36;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
- (void)setIsForPrinting:(BOOL)fp8;

@end

@interface MessageTilingView : NSView
{
    NSTextView *headerView;
    NSView *bodyView;
    WebView *editorView;
    AttachmentsView *attachmentsView;
    NSImageView *senderImageView;
    NSTextView *revealLinkView;
    unsigned int _doneInitializing:1;
    unsigned int _tilingSubviews:1;
    unsigned int _resizingFromSuperview:1;
    unsigned int _bodyViewIsLoaded:1;
    unsigned int _okayToResize:1;
    unsigned int _hasResizedBody:1;
    unsigned int _showRevealMessageLink:1;
    int _separator;
    NSView *accessibilityLinkedView;
}

- (void)awakeFromNib;
- (void)dealloc;
- (id)attachmentsView;
- (id)senderImageView;
- (id)bodyView;
- (id)editorView;
- (void)setEditorView:(id)fp8;
- (void)setBodyView:(id)fp8;
- (void)setUpAccessiblityLinks;
- (void)setUpAccessiblityLinksFromView:(id)fp8;
- (void)showAttachmentsView:(BOOL)fp8;
- (void)setHeaderBodySeparator:(int)fp8;
- (void)_updateRevealLinkPosition;
- (void)showSenderImage:(BOOL)fp8;
- (BOOL)isFlipped;
- (void)subviewFrameChanged:(id)fp8;
- (struct _NSSize)contentSize;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (void)tile;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setBodyViewIsLoaded:(BOOL)fp8;
- (BOOL)knowsPageRange:(struct _NSRange *)fp8;
- (BOOL)isOpaque;
- (void)mouseDown:(id)fp8;
- (void)setShowRevealMessageLink:(BOOL)fp8;
- (BOOL)showRevealMessageLink;
- (id)_textAttributesForRevealLink;
- (id)_revealLinkString;
- (id)revealLinkView;
- (id)_revealLinkView;
- (BOOL)showRevealMessageLinkView;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (void)textOrWebViewSelectionChanged:(id)fp8;

@end

@interface RevealLinkView : NSTextView
{
}

- (void)mouseDown:(id)fp8;
- (void)resetCursorRects;

@end

@interface SenderImageCell : NSImageCell
{
}

- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface NSView (TilingSupport)
- (void)adjustForTilingView:(id)fp8 oldSize:(struct _NSSize)fp12;
- (float)desiredWidth;
@end

@interface MessageHeaderView : NSTextView
{
    NSMutableArray *trackingRectTags;
    BOOL isTrackingMouse;
    NSImage *_backgroundImageCap;
    NSImage *_tilingBackgroundImage;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)_certificateSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_securityButtonClicked:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)trackHeaderAddresses:(id)fp8 replacingPreviousAddresses:(BOOL)fp12;
- (void)addressAtomsWereUpdated:(id)fp8;
- (void)addressAttachmentSizeChanged:(id)fp8;
- (void)addressAppearanceChanged:(id)fp8;
- (void)setSelectedRange:(struct _NSRange)fp8 affinity:(unsigned int)fp16 stillSelecting:(BOOL)fp20;
- (void)setSelectedRange:(struct _NSRange)fp8;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)fp8 granularity:(unsigned int)fp16;
- (void)setTilingBackgroundImage:(id)fp8;
- (id)tilingBackgroundImage;
- (void)setBackgroundImageCap:(id)fp8;
- (id)backgroundImageCap;
- (struct _NSRect)_cellFrameForAttachment:(id)fp8 atCharIndex:(int)fp12;
- (void)_removeCursorRects;
- (void)resetCursorRects;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)viewDidMoveToWindow;
- (void)didChangeText;
- (id)writablePasteboardTypes;
- (BOOL)writeSelectionToPasteboard:(id)fp8 type:(id)fp12;
- (id)menuForEvent:(id)fp8;
- (id)attachmentForPoint:(struct _NSPoint)fp8;
- (id)attachmentForEvent:(id)fp8;
- (id)undoManager;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface SlideshowButtonCell : NSButtonCell
{
    struct _NSSize _labelSize;
}

- (id)initWithTitle:(id)fp8;
- (id)attributedTitle;
- (void)_calcLabelSize;
- (void)setFont:(id)fp8;
- (void)setTitle:(id)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface SaveAttachmentsButtonCell : NSActionCell
{
    struct _NSSize _labelSize;
    NSMenu *_menu;
    NSTimer *_menuTimer;
    struct _NSRect _trackingRect;
    BOOL _sendSelectionAction;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (id)initWithTitle:(id)fp8;
- (void)_invalidateMenuTimer;
- (void)dealloc;
- (id)menu;
- (id)attributedTitle;
- (void)_calcLabelSize;
- (void)setFont:(id)fp8;
- (void)setTitle:(id)fp8;
- (struct _NSSize)cellSizeForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)startTrackingAt:(struct _NSPoint)fp8 inView:(id)fp16;
- (BOOL)continueTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24;
- (void)stopTracking:(struct _NSPoint)fp8 at:(struct _NSPoint)fp16 inView:(id)fp24 mouseIsUp:(BOOL)fp28;
- (BOOL)_sendActionFrom:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)_trackMenu;
- (void)performClick:(id)fp8;
- (void)_displayDelayedMenu;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface AttachmentsView : NSView
{
    NSButton *disclosureButton;
    NSTextField *descriptionField;
    MessageTextView *attachmentsTextView;
    NSImage *paperclip;
    struct _NSPoint paperclipPoint;
    int headerIndent;
    struct _NSRect rectToAvoid;
    NSArray *_attachments;
    id _delegate;
    NSControl *_saveButton;
    NSButton *_quickLookButton;
}

+ (id)newAttachmentsView;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isFlipped;
- (void)_saveAllAttachmentsWithoutPrompting:(id)fp8;
- (void)_saveAllAttachments:(id)fp8;
- (void)_saveAttachment:(id)fp8;
- (void)_doQuickLook:(id)fp8;
- (void)_addAttachmentsToIPhoto:(id)fp8;
- (BOOL)attachmentsIncludePhoto;
- (void)_configureSaveMenu:(id)fp8;
- (void)_saveButtonWillPopUp:(id)fp8;
- (void)_clearSaveButtonMenu;
- (void)_configureButtons;
- (void)display:(id)fp8;
- (void)prepareToRemoveView;
- (void)showAttachmentsArea:(BOOL)fp8 viewingState:(id)fp12;
- (void)textViewSelectionChanged:(id)fp8;
- (void)clearSelection:(id)fp8;
- (void)positionSubviews;
- (void)positionSubviewsShowingAttachmentsTextView:(BOOL)fp8;
- (void)dontDrawInSenderImage;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;
- (void)saveAllAttachments:(id)fp8;
- (id)attachmentContextMenuForEvent:(id)fp8;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16 atIndex:(unsigned int)fp32;
- (void)textView:(id)fp8 draggedCell:(id)fp12 inRect:(struct _NSRect)fp16 event:(id)fp32 atIndex:(unsigned int)fp36;
- (void)attachmentsTextViewFrameChanged:(id)fp8;
- (void)viewFrameDidChange:(id)fp8;
- (void)mouseDown:(id)fp8;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)attachments;
- (void)setAttachments:(id)fp8;

@end

@interface DefaultApplicationPopUpButton : NSPopUpButton
{
    NSURL *_appURL;
    int _index;
    NSArray *_schemes;
}

- (id)mainScheme;
- (void)setHandler:(id)fp8 forScheme:(id)fp12;
- (id)imageForURL:(id)fp8;
- (int)addItemToPopup:(id)fp8;
- (void)populateSchemeHandlerPopupWithURL:(id)fp8;
- (id)copyDefaultURLForScheme:(id)fp8;
- (void)selectDefaultMailClientAtIndex:(int)fp8;
- (void)selectItemInPopup:(id)fp8;
- (void)setNewApplication;
- (void)selectNewAppSelected:(id)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)configurePopUpForURLSchemes:(id)fp8 usingExampleURLString:(id)fp12;

@end

@interface WebMessageDisplay : WebMessageController <MessageContentDisplay>
{
    NSInvocation *_displayChangedInvocation;
    ActivityMonitor *urlificationMonitor;
    float _textSizeMultiplier;
    MessageViewingState *_viewingState;
}

+ (void)initialize;
+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
+ (Class)documentClass;
+ (id)webResourcesForAttachments:(id)fp8 urls:(id)fp12;
- (id)initWithDocument:(id)fp8;
- (void)dealloc;
- (id)contentView;
- (id)textView;
- (void)documentResized;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)prepareToRemoveView;
- (void)invalidateViewingState;
- (BOOL)isOkayToDownloadAttachment:(id)fp8;
- (void)attachmentFinishedDownloading:(id)fp8;
- (void)highlightSearchText:(id)fp8;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedTextRepresentation;
- (id)selectedText;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (struct __CFDictionary *)stringsForURLification;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;
- (BOOL)scrollVerticallyBy:(float)fp8;
- (float)verticalPageScrollDistance;
- (BOOL)scrollHorizontallyBy:(float)fp8;
- (void)webView:(id)fp8 didWriteSelectionToPasteboard:(id)fp12;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)_setDisplayChangedInvocation:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface WebFrameView (MailExtras)
+ (void)swizzleKeyDown;
- (BOOL)_scrollVerticallyBy:(float)fp8;
- (float)_verticalPageScrollDistance;
- (float)_verticalKeyboardScrollDistance;
- (BOOL)_scrollHorizontallyBy:(float)fp8;
- (float)_horizontalKeyboardScrollDistance;
@end

@interface WebHTMLView (MailExtras)
- (void)takeFindStringFromSelection:(id)fp8;
- (BOOL)findString:(id)fp8 options:(unsigned int)fp12;
- (id)enclosingTilingView;
- (BOOL)autoscroll:(id)fp8;
@end

@interface MessageWebView : TilingWebView
{
}

- (void)keyDown:(id)fp8;
- (void)layoutResizingAttachmentViews;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)viewWillMoveToWindow:(id)fp8;
- (void)setTextSizeMultiplier:(float)fp8;

@end

@interface MailNSClipView : NSClipView
{
    BOOL preventScrolling;
}

- (void)setPreventScrolling:(BOOL)fp8;
- (void)scrollToPoint:(struct _NSPoint)fp8;

@end

@interface NSClipView (ToReplaceViewWithOurOwn)
+ (id)allocWithZone:(struct _NSZone *)fp8;
@end

@interface ApplescriptEmailImporter : EmailImporter
{
    NSMutableArray *_mailboxArray;
}

+ (id)explanatoryText;
- (id)prepareForImport;
- (id)statusLine;
- (void)readMailbox:(id)fp8 intoURL:(id)fp12;
- (void)importFinished;
- (id)scriptName;
- (id)messageSourceForMessage:(id)fp8;
- (id)processMessageViaApplescript:(int)fp8 url:(id)fp12 currentMailbox:(id)fp16;
- (id)dataForMessageString:(id)fp8;
- (BOOL)topLevelMailboxes;
- (id)subMailboxes:(id)fp8;
- (void)prepareImportArray;
- (void)dealloc;

@end

@interface EmailImporter : Importer
{
    NSString *_rootFolderPath;
    NSArray *_sourceFolderPaths;
    NSArray *_sourcePaths;
    NSString *_destinationFolderPath;
    NSString *_attachmentBeingSearchedFor;
    NSString *_lastDirectoryFound;
    NSString *_temporaryImportFolderPath;
    char *_lineDelimiter;
    char *_fromSpaceSeparator;
    NSData *_newline;
    NSData *_greaterThanSign;
    NSData *_fromSpace;
    BOOL _errorsDuringImport;
}

- (id)init;
- (void)performImport;
- (void)revealMailbox:(id)fp8;
- (void)importFinished;
- (id)importFinishedText;
- (id)statusLine;
- (void)cleanup;
- (void)readMailbox:(id)fp8 intoURL:(id)fp12;
- (void)processUserSelection;
- (void)importMailbox:(id)fp8;
- (id)preProcessSourceData:(id)fp8;
- (char *)lineDelimiter;
- (id)regexForAttachmentName:(id)fp8;
- (id)destinationFolderPath;
- (id)destinationFolderName;
- (void)setLineDelimiter:(char *)fp8;
- (char *)fromSpaceSeparator;
- (void)setFromSpaceSeparator:(char *)fp8;
- (id)rootFolder;
- (void)setRootFolder:(id)fp8;
- (id)sourceFolders;
- (void)setSourceFolders:(id)fp8;
- (id)sourceList;
- (void)setSourceList:(id)fp8;
- (void)setErrorsDuringImport:(BOOL)fp8;
- (BOOL)errorsDuringImport;
- (id)messageWithImporterData:(id)fp8;
- (void)addMessagesToLibrary:(id)fp8 withMailbox:(id)fp12;
- (void)updateSubjectStringForMessageHeaders:(id)fp8;
- (void)convertChar:(BOOL)fp8 toChar:(BOOL)fp12 inBytes:(char *)fp16 length:(int)fp20;
- (id)validItemsFromPaths:(id)fp8 validitySelector:(SEL)fp12;
- (id)searchForValidItemsInsideDirectory:(id)fp8 validitySelector:(SEL)fp12 limit:(int)fp16 searchDepth:(int)fp20;
- (id)searchForValidItemInsideDirectory:(id)fp8 validitySelector:(SEL)fp12 searchDepth:(int)fp16;
- (id)uniqueDirectoriesForItems:(id)fp8;
- (id)longestCommonPathForItems:(id)fp8;
- (id)regenerateMessageData:(id)fp8 isHTML:(BOOL)fp12 isRich:(BOOL)fp16;
- (id)createAttachmentText:(id)fp8 isHTML:(BOOL)fp12;
- (id)locateAttachments:(id)fp8 inFolder:(id)fp12;
- (id)copyAttachmentsToMailFolder:(id)fp8;
- (id)_newline;
- (id)_greaterThanSign;
- (id)_fromSpace;
- (id)mailboxForImportItem:(id)fp8;
- (void)dealloc;

@end

@interface EntourageEmailImporter : ApplescriptEmailImporter
{
}

+ (id)name;
- (id)creatorCode;

@end

@interface EudoraEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
+ (id)explanatoryText;
- (char *)fromString;
- (BOOL)isValidMailbox:(id)fp8;
- (id)preProcessSourceData:(id)fp8;
- (struct _NSRange)_rangeOfDataContainedByTag:(char *)fp8 endTag:(char *)fp12 inData:(id)fp16;
- (void)_stripTag:(char *)fp8 fromData:(id)fp12;
- (id)_attachmentsInEudoraMessage:(id)fp8;
- (BOOL)_isAttachmentBeingSearchedFor:(id)fp8;

@end

@interface FilesystemEmailImporter : EmailImporter
{
    char *fromSpaceDelimiter;
}

- (id)prepareForImport;
- (float)progressValueForMailboxAtPath:(id)fp8;
- (void)processUserSelection;
- (void)readMailbox:(id)fp8 intoURL:(id)fp12;
- (id)pathExtension;
- (char *)fromString;
- (BOOL)isValidMailbox:(id)fp8;
- (void)sniffLineDelimiterFromData:(id)fp8;
- (void)verifyFromSpaceHeaderForScanner:(id)fp8 dataLength:(int)fp12;

@end

@interface Importer : NSObject
{
    ImportAssistant *_delegate;
    NSMutableArray *_importArray;
    NSString *_applicationString;
    NSArray *_importFields;
    BOOL _importCanceled;
}

+ (id)explanatoryText;
+ (id)name;
- (id)init;
- (id)name;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)importArray;
- (void)clearImportArray;
- (id)importArrayEnumerator;
- (void)addItemToImportArray:(id)fp8;
- (int)countOfEnabledItems;
- (BOOL)importCanceled;
- (void)setImportCanceled:(BOOL)fp8;
- (id)importFields;
- (void)setImportFields:(id)fp8;
- (void)sortArray:(id)fp8;
- (id)statusLine;
- (id)importFinishedText;
- (id)creatorCode;
- (void)cleanup;
- (id)prepareForImport;
- (void)performImport;
- (void)importFinished;
- (void)_runApplescript:(id)fp8 andReturnArray:(id)fp12;
- (id)runApplescript:(id)fp8;
- (id)arrayFromDescriptor:(id)fp8;
- (BOOL)setApplicationString;
- (void)dealloc;

@end

@interface MailEmailImporter : FilesystemEmailImporter <AddProgressMonitor>
{
    ImportItem *_currentItem;
    unsigned int _currentItemMessageIndex;
    unsigned int _currentItemMessageCount;
    int _currentBlockSize;
}

+ (id)name;
+ (id)explanatoryText;
- (id)pathExtension;
- (float)progressValueForMailboxAtPath:(id)fp8;
- (id)prepareForImport;
- (BOOL)isValidMailbox:(id)fp8;
- (void)importMailbox:(id)fp8;
- (void)setFractionDone:(float)fp8;

@end

@interface MboxEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
+ (id)explanatoryText;
- (id)prepareForImport;
- (char *)fromString;

@end

@interface NetscapeEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
+ (id)explanatoryText;
- (id)pathExtension;
- (char *)fromString;

@end

@interface ImportItem : NSObject
{
    BOOL _isEnabled;
    NSString *_displayName;
    float _progressValue;
    float _progressStart;
    NSString *_fullPath;
    NSString *_relativePath;
    int _itemCount;
    id _identifier;
    int _subfolderCount;
    id _importFields;
}

- (BOOL)isEnabled;
- (void)setIsEnabled:(BOOL)fp8;
- (id)displayName;
- (void)setDisplayName:(id)fp8;
- (float)progressValue;
- (void)setProgressValue:(float)fp8;
- (float)progressStart;
- (void)setProgressStart:(float)fp8;
- (id)fullPath;
- (void)setFullPath:(id)fp8;
- (id)relativePath;
- (void)setRelativePath:(id)fp8;
- (int)itemCount;
- (void)setItemCount:(int)fp8;
- (id)identifier;
- (void)setIdentifier:(id)fp8;
- (int)subfolderCount;
- (void)setSubfolderCount:(int)fp8;
- (id)importFields;
- (void)setImportFields:(id)fp8;

@end

@interface GeneralPreferences : NSPreferencesModule
{
    NSPopUpButton *fetchFrequencyPopup;
    SoundPopUpButton *newMailSoundPopup;
    NSButton *playMailSoundsCheckbox;
    NSString *soundFile;
    NSPopUpButton *dockBadgePopup;
    DefaultApplicationPopUpButton *defaultMailClientPopUp;
    NSButton *indexDecryptedMessagesButton;
    NSButton *indexTrashButton;
    NSButton *indexJunkButton;
    NSPopUpButton *downloadFolderPopup;
    NSPopUpButton *addInvitationsPopup;
    NSPopUpButton *attachmentDeletionPopup;
    NSWindow *dotMacSyncingWindow;
}

- (BOOL)isResizable;
- (void)_updateAddInvitationsPopup;
- (void)_addInvitationsBehaviorChanged:(id)fp8;
- (void)_setupDockCountPopup;
- (void)awakeFromNib;
- (void)dealloc;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (void)initializeFromDefaults;
- (void)fetchFrequencyChanged:(id)fp8;
- (void)indexDecryptedMessagesButtonClicked:(id)fp8;
- (void)indexTrashButtonClicked:(id)fp8;
- (void)indexJunkButtonClicked:(id)fp8;
- (void)showMoreInfoAboutDotMac:(id)fp8;
- (void)showDotMacSystemPrefs:(id)fp8;
- (void)newMailSoundDidChange:(id)fp8;
- (id)titleForSoundFile:(id)fp8;
- (void)playSoundsClicked:(id)fp8;
- (void)dockBadgePopupChanged:(id)fp8;
- (void)_openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)chooseNewDownloadFolder:(id)fp8;
- (void)addInvitationsPopupChanged:(id)fp8;
- (void)attachmentDeletionPopupChanged:(id)fp8;

@end

@interface MailApp (ApplescriptGeneralPreferences)
- (BOOL)playOtherMailSounds;
- (void)setPlayOtherMailSounds:(BOOL)fp8;
- (id)newMailSoundPath;
- (void)setNewMailSoundPath:(id)fp8;
- (id)newMailSound;
- (void)setNewMailSound:(id)fp8;
- (id)downloadFolderPath;
- (void)setDownloadFolderPath:(id)fp8;
- (BOOL)indexDecryptedMessages;
- (void)setIndexDecryptedMessages:(BOOL)fp8;
@end

@interface JunkPreferences : NSPreferencesModule <SyncableDataInterestedParty>
{
    NSButton *_advancedButton;
    NSMatrix *_junkMailMode;
    NSButton *_junkMailOnOffSwitch;
    NSMatrix *_junkMailWhitelist;
    int _junkMailBehavior;
}

+ (void)initialize;
- (void)moduleWillBeRemoved;
- (void)moduleWasInstalled;
- (BOOL)isResizable;
- (void)_messageRuleChanged:(id)fp8;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;
- (id)imageForPreferenceNamed:(id)fp8;
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
- (id)labelColor;
- (void)initializeFromDefaults;
- (void)junkMailToggled:(id)fp8;
- (void)whitelistChanged:(id)fp8;
- (int)junkMailBehavior;
- (void)setJunkMailBehavior:(int)fp8;
- (BOOL)isEnabled;
- (BOOL)isAdvancedEnabled;
- (void)changeJunkMailBehavior:(id)fp8;
- (void)resetJunkMailMap:(id)fp8;
- (void)showCustomJunkMailSettings:(id)fp8;

@end

@interface AddressLayoutManager : NSLayoutManager
{
    BOOL isDrawingBackground;
}

- (void)drawBackgroundForGlyphRange:(struct _NSRange)fp8 atPoint:(struct _NSPoint)fp16;
- (struct _NSRect *)rectArrayForCharacterRange:(struct _NSRange)fp8 withinSelectedCharacterRange:(struct _NSRange)fp16 inTextContainer:(id)fp24 rectCount:(unsigned int *)fp28;

@end

@interface ExchangeAccountDetails : IMAPAccountDetails
{
}

+ (id)accountDetailsNibName;
- (Class)accountClass;

@end

@interface RolloverButtonCell : MessageListCell
{
    id _target;
    SEL _action;
}

- (void)setTarget:(id)fp8;
- (void)setAction:(SEL)fp8;
- (id)target;
- (SEL)action;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (void)_sendActionFrom:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;
- (id)accessibilityActionDescription:(id)fp8;

@end

@interface TableHeaderView : NSTableHeaderView
{
    BOOL _noSeparatorLines;
}

+ (id)updateHeaderViewForTableView:(id)fp8;
- (BOOL)drawsSeparatorLines;
- (void)setDrawsSeparatorLines:(BOOL)fp8;
- (BOOL)_drawingEndSeparator;

@end

@interface ThreadDisplay : NSObject <MessageContentDisplay>
{
    NSView *contentView;
    NSTextField *subjectField;
    NSTextField *originatorField;
    NSTextField *countsField;
    ASExtendedTableView *summaryTable;
    MessageThread *_thread;
    NSMutableArray *_messages;
    NSMutableDictionary *_attributes;
    float _deltaY;
    unsigned int _currentRow:16;
    unsigned int _enterCount:16;
    struct __CFSet *_trackingRectTags;
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (void)awakeFromNib;
- (void)dealloc;
- (id)contentView;
- (id)textView;
- (void)_resetTrackingRectsForTableView:(id)fp8;
- (void)_adjustViewHeightsIncludingRoundedView:(BOOL)fp8;
- (void)_adjustColumnsBasedOnTableManager:(id)fp8;
- (BOOL)_updateFlagsColumnWidth;
- (BOOL)_updateContentsColumnWidth;
- (void)_updateFlagsColumnWidth:(BOOL)fp8 updateContentsColumn:(BOOL)fp12;
- (void)_reloadMessages;
- (void)_mallStructureChanged:(id)fp8;
- (void)_messageFlagsChanged:(id)fp8;
- (void)_mallSortChanged:(id)fp8;
- (void)_tableSuperviewFrameChanged:(id)fp8;
- (void)_tableViewScrolled:(id)fp8;
- (void)_datesNeedRedisplay;
- (void)_windowDidBecomeKey:(id)fp8;
- (void)_windowDidResignKey:(id)fp8;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)prepareToRemoveView;
- (void)highlightSearchText:(id)fp8;
- (id)selectedTextRepresentation;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedText;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (struct __CFDictionary *)stringsForURLification;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;
- (id)_colorForMessage:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (void)_updateCurrentRow:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)tableView:(id)fp8 willMoveToWindow:(id)fp12;
- (void)tableViewDidMoveToWindow:(id)fp8;

@end

@interface ClickableCell : NSTextFieldCell
{
}

- (id)accessibilityAttributeNames;
- (id)accessibilityActionNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface RoundedView : NSView
{
    NSColor *_backgroundColor;
    NSColor *_borderColor;
}

- (BOOL)isFlipped;
- (void)dealloc;
- (void)drawRect:(struct _NSRect)fp8;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)fp8;
- (id)borderColor;
- (void)setBorderColor:(id)fp8;

@end

@interface WebMessageController : NSObject
{
    WebMessageDocument *_document;
    MessageWebView *_webView;
    NSView *_mainFrameDocumentView;
    NSString *_sender;
    id _delegate;
    BOOL _finishedFirstLayout;
}

+ (void)initialize;
- (id)initWithDocument:(id)fp8;
- (void)setWebView:(id)fp8;
- (id)webView;
- (void)setSender:(id)fp8;
- (void)setDocument:(id)fp8;
- (void)documentResized;
- (BOOL)hasFinishedLoading;
- (BOOL)hasFinishedFirstLayout;
- (void)webView:(id)fp8 didFirstLayoutInFrame:(id)fp12;
- (void)stopLoading;
- (void)dealloc;
- (void)adjustFontSizeBy:(int)fp8;
- (void)refreshWithViewingState:(id)fp8;
- (id)mainFrameDocumentView;
- (void)setMainFrameDocumentView:(id)fp8;
- (void)_openLink:(id)fp8;
- (void)_openLinkBehind:(id)fp8;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (id)document;

@end

@interface WebMessageController (Internal)
- (BOOL)adjustSpellingAndGrammarMenuItems:(id)fp8;
@end

@interface WebMessageController (WebViewDelegateMethods)
- (BOOL)_isInternalURL:(id)fp8;
- (BOOL)considerBaseURLsInternal;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNewWindowAction:(id)fp12 request:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 didStartProvisionalLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (unsigned int)webView:(id)fp8 dragDestinationActionMaskForDraggingInfo:(id)fp12;
- (id)webView:(id)fp8 plugInViewWithArguments:(id)fp12;
- (id)webView:(id)fp8 contextMenuItemsForElement:(id)fp12 defaultMenuItems:(id)fp16;
- (void)download:(id)fp8 decideDestinationWithSuggestedFilename:(id)fp12;
@end

@interface ImagePopUpButtonCell : NSPopUpButtonCell
{
    NSImage *image;
    NSImage *alternateImage;
    NSImage *inactiveImage;
}

- (void)dealloc;
- (float)_extraWidthForCellHeight:(float)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)setImage:(id)fp8;
- (id)image;
- (void)setAlternateImage:(id)fp8;
- (id)alternateImage;
- (void)setInactiveImage:(id)fp8;
- (id)inactiveImage;

@end

@interface DeleteMailboxTransfer : NSObject <MessageDeletionTransfer>
{
    NSInvocation *invocation;
}

- (BOOL)canBeginTransfer;
- (void)beginTransfer;
- (void)dealloc;

@end

@interface TransferOperation : NSObject
{
    MessageStore *sourceStore;
    MailboxUid *destinationMailboxUid;
    NSMutableArray *sourceMessages;
    NSMutableArray *unreadSourceMessages;
    NSMutableArray *destinationMessageIDs;
    NSMutableArray *documentIDs;
    BOOL editableDocuments;
}

- (void)dealloc;
- (id)initWithSourceStore:(id)fp8 destinationMailboxUid:(id)fp12 editableDocuments:(BOOL)fp16;
- (id)sourceStore;
- (id)sourceLibraryStore;
- (id)destinationMailboxUid;
- (void)addSourceMessage:(id)fp8;
- (void)removeSourceMessages:(id)fp8;

@end

@interface MessageTransfer : NSObject <MessageDeletionTransfer>
{
    id _delegate;
    NSMutableArray *_operations;
    BOOL _deleteOriginals;
    BOOL _registeredForUndo;
    BOOL _allowsUndo;
    BOOL _isDeleteOperation;
    NSMutableArray *_todosAdded;
    NSMutableArray *_todosDeleted;
    NSMutableArray *_severedToDoProperties;
}

+ (void)initialize;
+ (void)_undo:(id)fp8;
+ (void)_redo:(id)fp8;
+ (BOOL)shouldProceedWithMailboxDeletions:(id)fp8;
+ (void)queueMailboxDeletions:(id)fp8;
- (void)dealloc;
- (id)initWithMessages:(id)fp8 targetMailboxUid:(id)fp12 isDeleteOperation:(BOOL)fp16;
- (BOOL)canBeginTransfer;
- (void)beginTransfer;
- (void)_completedTransferWithError:(id)fp8;
- (void)clearMessageLinksForToDos:(id)fp8 addingToDoPropertiesToArray:(id)fp12;
- (void)restoreMessageLinksFromToDoProperties:(id)fp8;
- (void)_undo;
- (void)_redo;
- (id)copyToDos:(id)fp8 destinationAccount:(id)fp12 makeUnique:(BOOL)fp16 newDocumentIDsByOld:(id)fp20;
- (void)deleteToDosForNotes:(id)fp8;
- (void)moveToDosForNotes:(id)fp8 destinationAccount:(id)fp12;
- (void)copyToDosForNotes:(id)fp8 newDocumentIDsByOld:(id)fp12 destinationAccount:(id)fp16;
- (void)clearToDoMessageLinks:(id)fp8;
- (void)handleToDosForOperation:(id)fp8 newDocumentIDsByOld:(id)fp12 missedMessages:(id)fp16;
- (void)postWillBeginDocumentTransferNotification:(id)fp8;
- (void)postDidEndDocumentTransferNotification:(id)fp8 result:(int)fp12 destinationAccount:(id)fp16 missedMessages:(id)fp20;
- (void)_synchronouslyPerformTransfer;
- (id)destinationMailboxes;
- (id)sourceStores;
- (id)_undoActionNameForMessageCount:(unsigned int)fp8;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)fp8;
- (BOOL)deleteOriginals;
- (void)setDeleteOriginals:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface ActivityProgressPanel : NSObject
{
    NSPanel *_progressPanel;
    NSProgressIndicator *_progressBar;
    NSTextField *_statusMessage;
    ActivityMonitor *_monitor;
    NSTimer *_timer;
}

- (id)init;
- (void)_invalidateTimer;
- (void)dealloc;
- (void)setActivityMonitor:(id)fp8;
- (id)activityMonitor;
- (void)setStatusMessage:(id)fp8;
- (id)statusMessage;
- (id)panel;
- (void)_updateProgressBar;
- (void)activityStarted:(id)fp8;
- (void)activityEnded:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface NSTextStorage (AttachmentAttrFixCategory)
- (void)fixAttributesInRange:(struct _NSRange)fp8;
@end

@interface AccountSetupAssistant : Assistant <AccountSetupValidatorDelegate>
{
    NSView *_topView;
    NSTabView *_tabView;
    NSView *_summaryContainerView;
    NSPopUpButton *_incomingTypePopUp;
    NSPopUpButton *_incomingAuthPopUp;
    NSPopUpButton *_outgoingAuthPopUp;
    NSView *_firstKeyViewForBasicInformation;
    NSView *_firstKeyViewForIncomingServer;
    NSView *_firstKeyViewForIncomingSecurity;
    NSView *_firstKeyViewForOutgoingServer;
    NSView *_firstKeyViewForOutgoingSecurity;
    NSView *_lastKeyViewForBasicInformation;
    NSView *_lastKeyViewForIncomingServer;
    NSView *_lastKeyViewForIncomingSecurity;
    NSView *_lastKeyViewForOutgoingServer;
    NSView *_lastKeyViewForOutgoingSecurity;
    NSView *_firstResponderForBasicInformation;
    NSView *_firstResponderForIncomingServer;
    BOOL _canUseSimplifiedSetup;
    BOOL _shouldUseSimplifiedSetup;
    BOOL _canGoBack;
    NSString *_nextButtonTitle;
    int _selectedTab;
    NSMutableArray *_previousTabs;
    NSDictionary *_receivingAccountInfo;
    NSDictionary *_deliveryAccountLookup;
    NSArray *_deliveryAccountKeys;
    MailAccount *_receivingAccount;
    SMTPAccount *_deliveryAccount;
    AccountSummary *_summary;
    AccountSetupValidator *_validator;
    int _receivingValidationStatus;
    int _deliveryValidationStatus;
    NSString *_windowTitle;
    NSString *_firstPaneTitle;
    NSString *_firstPaneDescription;
    NSView *_simplifiedAccountSetupCheckBoxSection;
    NSString *_name;
    NSString *_emailAddress;
    NSString *_password;
    BOOL _isEmailAddressValid;
    int _incomingAccountClassIndex;
    NSString *_incomingDescription;
    NSString *_incomingMailServer;
    NSString *_incomingUserName;
    NSString *_incomingOutlookServer;
    NSNumber *_incomingPortNumber;
    BOOL _isIncomingMailServerValid;
    BOOL _isIncomingUserNameValid;
    BOOL _isIncomingOutlookServerValid;
    BOOL _hideIncomingOutlookServer;
    BOOL _hideExchange;
    BOOL _hideDotMac;
    BOOL _incomingAuthUseSSL;
    AuthScheme *_incomingAuthScheme;
    NSString *_incomingAuthDomainName;
    NSString *_outgoingDescription;
    NSString *_outgoingMailServer;
    BOOL _outgoingUseOnly;
    BOOL _outgoingUseAuthentication;
    NSString *_outgoingUserName;
    NSString *_outgoingPassword;
    NSNumber *_outgoingPortNumber;
    BOOL _isOutgoingMailServerValid;
    BOOL _outgoingAuthUseSSL;
    AuthScheme *_outgoingAuthScheme;
    NSString *_outgoingAuthDomainName;
    NSAttributedString *_statusMessage;
    BOOL _showStatusAlert;
    BOOL _takeAccountOnline;
}

- (id)initWithAssistentManager:(id)fp8 isForStartup:(BOOL)fp12;
- (void)dealloc;
- (id)_usernameForEmailAddress:(id)fp8 ispAccount:(id)fp12;
- (void)_syncBindings;
- (void)_setupLegacyStuff;
- (void)_animateSimplifiedSetupCheckBox;
- (id)_statusMessageAttributes;
- (id)_statusMessageWithString:(id)fp8;
- (void)_clearPropertyValues;
- (void)_loadDefaultPropertyValues;
- (void)_loadPropertiesFromReceivingInfo:(id)fp8;
- (void)_loadPropertiesFromDeliveryInfo:(id)fp8 reset:(BOOL)fp12;
- (void)_updateAccountsFromPropertiesAtTab:(int)fp8;
- (BOOL)_shouldSkip:(int)fp8;
- (void)start;
- (void)stop;
- (void)goForward;
- (void)goBackward;
- (BOOL)shouldStop;
- (void)_pushTab:(int)fp8;
- (int)_popTab;
- (void)setupKeyViewLoop;
- (BOOL)_validateTab:(int)fp8;
- (void)_registerObservers;
- (void)_unregisterObservers;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (BOOL)validateOutgoingMailServer:(id *)fp8 error:(id *)fp12;
- (void)_updateNextButtonTitle;
- (void)_updateDeliveryAccountLookupFromInfos:(id)fp8;
- (void)_updateAccountInfoFromEmailAddress;
- (void)_validateReceivingAccount;
- (void)_validateDeliveryAccount;
- (void)_clearValidator;
- (void)_extractSecuritySettingsFromValidator:(id)fp8;
- (void)validator:(id)fp8 didChangeState:(int)fp12;
- (void)validatorDidFail:(id)fp8;
- (void)validatorDidFinish:(id)fp8;
- (void)_addNewAccount;
- (BOOL)takeAccountOnline;
- (void)setTakeAccountOnline:(BOOL)fp8;
- (BOOL)showStatusAlert;
- (void)setShowStatusAlert:(BOOL)fp8;
- (id)statusMessage;
- (void)setStatusMessage:(id)fp8;
- (id)outgoingAuthDomainName;
- (void)setOutgoingAuthDomainName:(id)fp8;
- (id)outgoingAuthScheme;
- (void)setOutgoingAuthScheme:(id)fp8;
- (BOOL)outgoingAuthUseSSL;
- (void)setOutgoingAuthUseSSL:(BOOL)fp8;
- (BOOL)isOutgoingMailServerValid;
- (void)setIsOutgoingMailServerValid:(BOOL)fp8;
- (id)outgoingPortNumber;
- (void)setOutgoingPortNumber:(id)fp8;
- (id)outgoingPassword;
- (void)setOutgoingPassword:(id)fp8;
- (id)outgoingUserName;
- (void)setOutgoingUserName:(id)fp8;
- (BOOL)outgoingUseAuthentication;
- (void)setOutgoingUseAuthentication:(BOOL)fp8;
- (BOOL)outgoingUseOnly;
- (void)setOutgoingUseOnly:(BOOL)fp8;
- (id)outgoingMailServer;
- (void)setOutgoingMailServer:(id)fp8;
- (id)outgoingDescription;
- (void)setOutgoingDescription:(id)fp8;
- (id)incomingAuthDomainName;
- (void)setIncomingAuthDomainName:(id)fp8;
- (id)incomingAuthScheme;
- (void)setIncomingAuthScheme:(id)fp8;
- (BOOL)incomingAuthUseSSL;
- (void)setIncomingAuthUseSSL:(BOOL)fp8;
- (BOOL)hideDotMac;
- (void)setHideDotMac:(BOOL)fp8;
- (BOOL)hideExchange;
- (void)setHideExchange:(BOOL)fp8;
- (BOOL)hideIncomingOutlookServer;
- (void)setHideIncomingOutlookServer:(BOOL)fp8;
- (BOOL)isIncomingOutlookServerValid;
- (void)setIsIncomingOutlookServerValid:(BOOL)fp8;
- (BOOL)isIncomingUserNameValid;
- (void)setIsIncomingUserNameValid:(BOOL)fp8;
- (BOOL)isIncomingMailServerValid;
- (void)setIsIncomingMailServerValid:(BOOL)fp8;
- (id)incomingPortNumber;
- (void)setIncomingPortNumber:(id)fp8;
- (id)incomingOutlookServer;
- (void)setIncomingOutlookServer:(id)fp8;
- (id)incomingUserName;
- (void)setIncomingUserName:(id)fp8;
- (id)incomingMailServer;
- (void)setIncomingMailServer:(id)fp8;
- (id)incomingDescription;
- (void)setIncomingDescription:(id)fp8;
- (int)incomingAccountClassIndex;
- (void)setIncomingAccountClassIndex:(int)fp8;
- (BOOL)isEmailAddressValid;
- (void)setIsEmailAddressValid:(BOOL)fp8;
- (id)password;
- (void)setPassword:(id)fp8;
- (id)emailAddress;
- (void)setEmailAddress:(id)fp8;
- (id)name;
- (void)setName:(id)fp8;
- (id)firstPaneDescription;
- (void)setFirstPaneDescription:(id)fp8;
- (id)firstPaneTitle;
- (void)setFirstPaneTitle:(id)fp8;
- (id)windowTitle;
- (void)setWindowTitle:(id)fp8;
- (int)deliveryValidationStatus;
- (void)setDeliveryValidationStatus:(int)fp8;
- (int)receivingValidationStatus;
- (void)setReceivingValidationStatus:(int)fp8;
- (id)validator;
- (void)setValidator:(id)fp8;
- (id)summary;
- (void)setSummary:(id)fp8;
- (id)deliveryAccount;
- (void)setDeliveryAccount:(id)fp8;
- (id)receivingAccount;
- (void)setReceivingAccount:(id)fp8;
- (id)deliveryAccountKeys;
- (void)setDeliveryAccountKeys:(id)fp8;
- (id)deliveryAccountLookup;
- (void)setDeliveryAccountLookup:(id)fp8;
- (id)receivingAccountInfo;
- (void)setReceivingAccountInfo:(id)fp8;
- (id)previousTabs;
- (void)setPreviousTabs:(id)fp8;
- (int)selectedTab;
- (void)setSelectedTab:(int)fp8;
- (id)nextButtonTitle;
- (void)setNextButtonTitle:(id)fp8;
- (BOOL)canGoBack;
- (void)setCanGoBack:(BOOL)fp8;
- (BOOL)shouldUseSimplifiedSetup;
- (void)setShouldUseSimplifiedSetup:(BOOL)fp8;
- (BOOL)canUseSimplifiedSetup;
- (void)setCanUseSimplifiedSetup:(BOOL)fp8;

@end

@interface Assistant : NSObject
{
    NSView *_parentView;
    NSButton *_backButton;
    NSButton *_forwardButton;
    NSButton *_cancelButton;
    NSButton *_helpButton;
    id _delegate;
}

- (id)initWithAssistentManager:(id)fp8;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (void)start;
- (void)stop;
- (void)goForward;
- (void)goBackward;
- (BOOL)shouldStop;
- (void)weAreDone;
- (id)windowTitle;
- (void)setupKeyViewLoop;

@end

@interface AssistantManager : NSObject
{
    NSWindow *_window;
    NSView *_assistantContainerView;
    NSButton *_backButton;
    NSButton *_forwardButton;
    NSButton *_cancelButton;
    NSButton *_helpButton;
    int _type;
    Assistant *_assistant;
}

+ (void)openAssistantOfType:(int)fp8 modalForWindow:(id)fp12;
+ (void)openStartupAssistant;
+ (BOOL)isImporting;
- (id)_createAssistantOfType:(int)fp8;
- (id)init;
- (void)_setAssistant:(id)fp8;
- (id)_initWithType:(int)fp8;
- (void)dealloc;
- (id)assistantContainerView;
- (id)backButton;
- (id)forwardButton;
- (id)cancelButton;
- (id)helpButton;
- (void)back:(id)fp8;
- (void)forward:(id)fp8;
- (void)cancel:(id)fp8;
- (void)_start;
- (void)_showInWindow:(id)fp8;
- (void)_windowDidBecomeKey:(id)fp8;
- (void)_sheetWillBegin:(id)fp8;
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_terminate;
- (void)assistantDidFinish:(id)fp8;
- (void)windowWillClose:(id)fp8;

@end

@interface TransparentImageView : NSImageView
{
    NSView *_backgroundView;
}

- (void)drawRect:(struct _NSRect)fp8;
- (void)awakeFromNib;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface NSBezierPath (MailAdditions)
+ (id)roundedRectPathInRect:(struct _NSRect)fp8 radius:(float)fp24;
@end

@interface ImportAssistant : Assistant
{
    NSView *_topView;
    NSTabView *_tabView;
    NSMatrix *_importClients;
    NSTextField *_explanatoryTextInImportClientTab;
    NSProgressIndicator *_progressWheelInImportClientTab;
    NSTextField *_statusLineInImportClientTab;
    NSMatrix *_importTypes;
    NSTextField *_explanatoryText;
    NSProgressIndicator *_progressWheel;
    NSTextField *_statusLine;
    NSTableView *_tableView;
    NSProgressIndicator *_progressBar;
    NSTextField *_textFieldAbove;
    NSTextField *_textFieldBelow;
    NSTextField *_importFinished;
    NSArray *_clients;
    NSDictionary *_client;
    int currentTab;
    id _importer;
    NSMutableArray *_importers;
    NSMutableArray *_startingImporters;
    double _currentTime;
    double _referenceTime;
    double _interval;
}

- (id)initWithAssistentManager:(id)fp8;
- (id)windowTitle;
- (void)start;
- (BOOL)shouldStop;
- (void)stop;
- (void)goForward;
- (void)goBackward;
- (void)importClientSelected:(id)fp8;
- (void)createNewImporter;
- (void)runImporter;
- (void)presentAlertSheetWithString:(id)fp8;
- (void)moveToTab:(int)fp8;
- (void)importFinished;
- (void)askForMailboxLocation;
- (void)askForMailboxLocationOrFileTypes:(id)fp8 allowFiles:(BOOL)fp12;
- (void)openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)setStatusLine:(id)fp8;
- (void)clearStatusLine;
- (void)updateTextField:(id)fp8 withValue:(id)fp12;
- (void)setTextFieldAbove:(id)fp8;
- (void)setTextFieldBelow:(id)fp8;
- (void)setExplanatoryText:(id)fp8;
- (void)reloadTableView;
- (void)initializeProgressIndicator;
- (void)_updateProgressIndicatorByValue:(id)fp8;
- (void)_updateProgressIndicatorToValue:(id)fp8;
- (void)_setProgressStartOnItem:(id)fp8;
- (void)updateProgressIndicatorWithFraction:(float)fp8 ofItem:(id)fp12;
- (void)updateProgressIndicatorWithItem:(id)fp8;
- (void)updateProgressIndicatorByValue:(float)fp8;
- (BOOL)shouldUpdateTextFields;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (id)tableView:(id)fp8 toolTipForCell:(id)fp12 rect:(struct _NSRect *)fp16 tableColumn:(id)fp20 row:(int)fp24 mouseLocation:(struct _NSPoint)fp28;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)dealloc;

@end

@interface StartupManager : NSObject
{
}

+ (id)sharedManager;
- (id)_setupAccountType:(int)fp8 hostname:(id)fp12 username:(id)fp16 password:(id)fp20 emailAddress:(id)fp24 fullUserName:(id)fp28 smtp:(id)fp32 outlookWebSever:(id)fp36 synchronize:(BOOL)fp40;
- (BOOL)runStartupPanel;
- (BOOL)setupAccountsAndSynchronize:(BOOL)fp8;

@end

@interface AccountInfo : NSObject
{
    NSWindow *_window;
    NSView *_topView;
    NSTabView *_tabView;
    NSPopUpButton *_accountPopup;
    NSTabViewItem *_mailboxListTab;
    AccountSummary *_summary;
    SpecialMailboxes *_specialMailboxes;
    NSView *_specialMailboxesView;
    Quota *_quota;
    IMAPMailboxes *_mailboxes;
    MailAccount *_account;
    NSMutableSet *_tabViewItemsThatHaveBeenSetup;
    struct _NSRect _oldFrame;
    struct _NSRect _newFrame;
}

+ (void)showForAccount:(id)fp8 withTab:(id)fp12;
- (id)initWithMailAccount:(id)fp8;
- (void)dealloc;
- (void)_configureAccountPopupSelectingAccount:(id)fp8;
- (id)_selectedAccount;
- (void)_setAccount:(id)fp8 setupSelectedTab:(BOOL)fp12;
- (void)_setupTabViewItem:(id)fp8 oldTabViewItem:(id)fp12;
- (void)_commitSpecialMailboxesChanges;
- (void)_accountsDidChange:(id)fp8;
- (void)_specialMailboxesDidChange:(id)fp8;
- (void)_showWithTab:(id)fp8;
- (void)accountPopupChanged:(id)fp8;
- (void)tabView:(id)fp8 willSelectTabViewItem:(id)fp12;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;
- (void)windowWillClose:(id)fp8;

@end

@interface SpecialMailboxes : NSObject
{
    NSView *_view;
    NSPopUpButton *_sentMessagesAgePopup;
    NSPopUpButton *_junkAgePopup;
    NSPopUpButton *_trashAgePopup;
    NSButton *_trashCheckbox;
    NSButton *_notesInInbox;
    BOOL _storeNotesInInbox;
}

+ (id)specialMailboxesForAccountClass:(Class)fp8;
- (void)dealloc;
- (id)view;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (BOOL)setupAccountFromValuesInUI:(id)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (BOOL)moveDeletedMailToTrash;
- (void)postSpecialMailboxesDidChangeNotification:(id)fp8;
- (void)moveToTrashClicked:(id)fp8;
- (BOOL)storeNotesInInbox;
- (void)setStoreNotesInInbox:(BOOL)fp8;

@end

@interface IMAPAccountSpecialMailboxes : SpecialMailboxes
{
    NSButton *_keepDraftsOnServer;
    NSButton *_keepSentMessagesOnServer;
    NSButton *_keepTrashOnServer;
    NSButton *_keepJunkOnServer;
    BOOL _storeNotesOnServer;
}

+ (void)initialize;
- (id)init;
- (BOOL)storeNotesInInbox;
- (void)setupUIFromValuesInAccount:(id)fp8;
- (BOOL)setupAccountFromValuesInUI:(id)fp8;
- (BOOL)isAccountInformationDirty:(id)fp8;
- (void)setUIElementsEnabled:(BOOL)fp8;
- (void)moveToTrashClicked:(id)fp8;
- (BOOL)storeNotesOnServer;
- (void)setStoreNotesOnServer:(BOOL)fp8;

@end

@interface POPAccountSpecialMailboxes : SpecialMailboxes
{
}

- (id)init;
- (BOOL)setupAccountFromValuesInUI:(id)fp8;

@end

@interface Quota : NSObject
{
    NSView *_view;
    SizeEngine *_sizeEngine;
    NSTimer *_statusTimer;
}

+ (id)quotaForMailAccount:(id)fp8;
- (void)dealloc;
- (id)account;
- (void)_accountOfflineStatusDidChange:(id)fp8;
- (id)view;
- (void)refresh;
- (void)engineDidStart;
- (void)engineDidFinish;
- (void)updateProgress:(id)fp8;
- (void)_updateProgress:(id)fp8;
- (void)_stopProgress:(id)fp8;
- (void)engineUpdated:(id)fp8;
- (unsigned int)numberOfSortDescriptors;
- (const struct _QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned int)fp8;
- (void)accountInfoWillHideView:(id)fp8;
- (void)accountInfoWillShowView:(id)fp8;

@end

@interface QuotaBar : NSView
{
    NSLevelIndicator *_levelIndicator;
}

- (id)_labelFont;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setQuotaUsed:(unsigned long long)fp8 limit:(unsigned long long)fp16;
- (void)drawRect:(struct _NSRect)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface AccountSummary : NSObject
{
    NSView *_view;
    NSTextField *_accountDescription;
    NSTextField *_fullname;
    NSTextField *_emailAddress;
    NSTextField *_userName;
    NSTextField *_incomingServer;
    NSTextField *_incomingServerSSLMode;
    NSTextField *_outgoingServer;
    NSTextField *_outgoingServerSSLMode;
    NSTextField *_outlookServer;
    NSTextField *_outlookServerLabel;
}

- (id)init;
- (void)setupUIWithAccount:(id)fp8 deliveryAccount:(id)fp12;
- (void)setupUIWithAccount:(id)fp8;
- (id)view;

@end

@interface ConnectionDoctor : NSObject <AccountStatusDataSourceDelegate>
{
    NSTableView *_tableView;
    NSImageView *_internetStatusIndicator;
    NSProgressIndicator *_internetStatusProgressIndicator;
    NSTextField *_internetStatusField;
    NSButton *_checkStatusButton;
    NSButton *_assistMeButton;
    NSTextView *_ispInfoField;
    NSDrawer *_detailDrawer;
    NSButton *_detailButton;
    NSTextView *_detailTextView;
    AccountStatusDataSource *_deliveryASDS;
    NSMutableString *_detailBuffer;
    NSArray *_savedLogClasses;
    NSMutableDictionary *_progressIndicators;
}

+ (id)sharedInstance;
- (void)dealloc;
- (void)awakeFromNib;
- (void)show;
- (void)_willCheckInternetConnection:(id)fp8;
- (void)_didCheckInternetConnection:(id)fp8;
- (void)_willRefreshStatusForAllAccounts:(id)fp8;
- (void)_didRefreshStatusForAllAccounts:(id)fp8;
- (void)checkAccounts:(id)fp8;
- (void)assistMeClicked:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)toggleDetail:(id)fp8;
- (void)_flushLog;
- (void)logBytes:(const char *)fp8 length:(int)fp12;
- (void)flushLog;

@end

@interface ImageResizer : NSObject
{
    NSData *_sourceData;
    NSString *_sourceFilename;
    unsigned int _sourceFileType;
    id _representedObject;
    struct _NSRect _maxBounds;
    unsigned long _maxFileBytes;
    struct _NSSize _sourceSize;
    struct _NSSize _destSize;
    struct PointerDataRefRecord **_dataRef;
    struct ComponentInstanceRecord *_importer;
    struct ComponentInstanceRecord *_exporter;
    struct UserDataRecord **_userDataHandle;
    char **_colorProfile;
    BOOL _notThreadSafe;
    NSData *_resultData;
    ActivityMonitor *_monitor;
}

+ (void)initialize;
+ (BOOL)isFileResizableImage:(id)fp8;
+ (struct _NSSize)scaleSize:(struct _NSSize)fp8 toFitSize:(struct _NSSize)fp16;
+ (struct _NSSize)scaleSize:(struct _NSSize)fp8 toContainSize:(struct _NSSize)fp16;
- (id)initWithImageData:(id)fp8 sourceFilename:(id)fp12 sourceFileType:(unsigned long)fp16;
- (void)dealloc;
- (void)setRepresentedObject:(id)fp8;
- (id)representedObject;
- (void)setMaxImageSize:(struct _NSSize)fp8;
- (struct _NSSize)maxImageSize;
- (void)setMaxFileBytes:(unsigned int)fp8;
- (unsigned int)maxFileBytes;
- (id)sourceFilename;
- (void)resizeImage;
- (BOOL)isResizing;
- (void)cancel;
- (id)resultFileExtension;
- (unsigned long)resultFileType;
- (id)resultImageData;
- (struct _NSSize)resultImageSize;
- (void)_didFinishResizingWithResultCode:(int)fp8;
- (void)_resizeImage;
- (void)_getUserData;
- (BOOL)_prepareSourceData;
- (BOOL)_createImporter;
- (BOOL)_prepareImporter;
- (unsigned long)_getExportTypeForImporterMainThread;
- (BOOL)_createExporter;
- (BOOL)_prepareExporter;
- (void)_releaseDataRef;
- (void)_releaseImporter;
- (void)_releaseExporter;
- (void)_releaseUserData;
- (void)_releaseColorProfile;

@end

@interface SmartMailboxEditor : NSObject
{
    MailboxUid *mailboxBeingEdited;
    MailboxUid *mailboxBeingValidated;
    CriteriaUIHelper *criteriaUIHelper;
    NSTextField *nameField;
    NSTextField *groupNameField;
    NSTextField *searchStringField;
    NSTextView *mailboxesTextView;
    NSPopUpButton *searchAreaPopup;
    NSButton *includeTrashCheckbox;
    NSButton *includeSentCheckbox;
    NSView *criteriaView;
    BOOL editedMailboxIsNew;
}

+ (BOOL)isEditingInProgress;
+ (BOOL)mailboxIsEditable:(id)fp8;
- (void)dealloc;
- (void)editSmartMailbox:(id)fp8 suggestedName:(id)fp12 isNew:(BOOL)fp16;
- (void)createNewMailboxGroup;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)okClicked:(id)fp8;
- (void)alertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)cancelClicked:(id)fp8;
- (void)saveEditedMailbox;
- (void)searchAreaChanged:(id)fp8;

@end

@interface CriteriaUIHelper : NSObject
{
    NSMutableArray *criteriaViews;
    NSTextField *nameField;
    NSScrollView *criteriaContainer;
    NSPopUpButton *allCriteriaMustBeMetPopUp;
    NSButton *includeTrashCheckbox;
    NSButton *includeSentCheckbox;
    NSTextField *performActionLabel;
    NSScrollView *actionContainer;
    CriterionView *criterionView;
    NSPanel *headerListPanel;
    NSTableView *headerListTable;
    NSButton *addHeaderButton;
    BOOL isEditingHeader;
    BOOL criteriaWillBeUsedForMailboxes;
    BOOL includeNoJunkCriterion;
    id _objectWithCriteria;
    int searchArea;
    NSString *previousTitle;
}

+ (id)packageUserCriteria:(id)fp8 withNoJunk:(BOOL)fp12 noTrash:(BOOL)fp16 noSent:(BOOL)fp20 allUserCriteriaMustBeSatisfied:(BOOL)fp24;
+ (void)unpackUserCriteria:(id *)fp8 noJunkCriterion:(id *)fp12 noTrashCriterion:(id *)fp16 noSentCriterion:(id *)fp20 allCriteriaMustBeSatisfield:(char *)fp24 fromCriteria:(id)fp28;
+ (id)headerList;
- (BOOL)criteriaWillBeUsedForMailboxes;
- (void)setCriteriaWillBeUsedForMailboxes:(BOOL)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (id)newCriterion;
- (void)putCriteriaFromUIIntoObject:(id)fp8;
- (void)sentMessagesMailboxCriterionAdded;
- (void)trashMailboxCriterionAdded;
- (void)configureCriteriaForObject:(id)fp8;
- (void)addCriterion:(id)fp8;
- (id)createNewCriterionViewForSender:(id)fp8;
- (void)removeCriterion:(id)fp8;
- (void)removeView:(id)fp8 fromViews:(id)fp12 inContainer:(id)fp16;
- (void)userHasSelectedSenderInAddressBook:(char *)fp8 senderInAddressHistory:(char *)fp12;
- (void)editHeaderList;
- (void)configureAllCriterionMenus;
- (void)resetHeaderListForObjectsWithCriteria:(id)fp8;
- (void)_endEditingHeader;
- (void)headerListOkClicked:(id)fp8;
- (void)headerListCancelClicked:(id)fp8;
- (void)updateHeaderListUI;
- (void)_headerTableBeganEditing:(id)fp8;
- (void)_headerTableEndedEditing:(id)fp8;
- (void)addHeaderClicked:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)_removeInvalidHeaders;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tileViews:(id)fp8 inContainer:(id)fp12 withChangeAtRow:(int)fp16 removeIsEnabled:(BOOL)fp20;
- (void)connectNextKeyViewChain;
- (void)setSearchArea:(int)fp8;
- (id)previousTitle;
- (void)setPreviousTitle:(id)fp8;
- (int)searchArea;

@end

@interface NSView (ResizingAnimation)
- (void)setFrame:(struct _NSRect)fp8 animate:(BOOL)fp24;
- (void)setFrame:(struct _NSRect)fp8 animate:(BOOL)fp24 repositionOtherSiblings:(BOOL)fp28;
@end

@interface LibraryImportAssistant : Assistant
{
    NSView *introView;
    NSView *patienceView;
    NSView *doneView;
    NSView *errorView;
    NSView *recoveryIntroView;
    NSTextField *mailboxStatusField;
    NSTextField *messageStatusField;
    NSTextField *timeRemainingField;
    NSProgressIndicator *progressBar;
    NSButton *showNewFeaturesButton;
    NSTextField *newFeaturesTextField;
    ActivityMonitor *activityMonitor;
    NSTimer *updateTimer;
    int state;
    BOOL importWasSuccessful;
    BOOL accountsAreNewlyCreated;
}

- (id)initWithAssistentManager:(id)fp8;
- (void)dealloc;
- (void)setAccountsAreNewlyCreated:(BOOL)fp8;
- (void)start;
- (void)stop;
- (void)_permissionErrorSheetDone:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)_checkAccountDirectoryPermissions;
- (void)goForward;
- (id)windowTitle;
- (void)updateProgress:(id)fp8;
- (float)runningAverageWithNewValue:(float)fp8;
- (id)formattedTimeForSeconds:(float)fp8;
- (void)synchronouslyDoTheImport;
- (void)showNewFeatures:(id)fp8;

@end

@interface IMAPQuotaMessageViewer : MessageViewer
{
}

+ (id)existingIMAPQuotaMessageViewerForMailboxUid:(id)fp8;
- (void)_setupUI;
- (void)_setUpWindowContents;

@end

@interface IMAPQuota : Quota
{
    NSPopUpButton *_quotaPopup;
    NSTextField *_quotaPopupLabel;
    NSView *_quotaContainerView;
    QuotaBar *_quotaBar;
    NSTextField *_usageField;
    NSTextField *_capacityField;
    NSTableView *_quotaTable;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_progressField;
    NSTextField *_statusField;
    NSButton *_showMessagesButton;
    NSMutableArray *_mailboxes;
    struct _QuotaSimpleSortDescriptor _simpleSortDescs[3];
}

- (id)initWithIMAPAccount:(id)fp8;
- (void)dealloc;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 sortDescriptorsDidChange:(id)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)quotaPopupChanged:(id)fp8;
- (void)_showMessagesInMailboxAtRow:(int)fp8;
- (void)showMessages:(id)fp8;
- (void)doubleClickedMailbox:(id)fp8;

@end

@interface IMAPQuota (Internal)
- (id)_selectedQuotaName;
- (id)_iconForMailboxUid:(id)fp8;
- (id)_nameForMailboxUid:(id)fp8;
- (void)_updateQuotaBarWithSize:(unsigned long long)fp8 maxSize:(unsigned long long)fp16 count:(unsigned long)fp24 maxCount:(unsigned long)fp28;
- (void)_updateStatusField;
- (void)_engineStatusChanged:(id)fp8;
- (void)_updateQuotaPopupWithQuotaNames:(id)fp8;
- (void)engineDidStart;
- (void)engineDidFinish;
- (void)updateProgress:(id)fp8;
- (void)engineUpdated:(id)fp8;
- (void)_updateUIForQuotaName:(id)fp8 updateTable:(BOOL)fp12;
- (void)_syncSortDescriptors;
- (unsigned int)numberOfSortDescriptors;
- (const struct _QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned int)fp8;
- (void)_resortMailboxes;
- (id)_stringForSize:(unsigned long long)fp8 andCount:(unsigned long)fp16 isCapacity:(BOOL)fp20;
- (void)_updateMailbox:(id)fp8 usage:(id)fp12;
@end

@interface POPQuota : Quota
{
    NSPopUpButton *_showMessagesPopup;
    NSTextField *_usageField;
    NSTableView *_quotaTable;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_progressField;
    NSButton *_deleteButton;
    NSMutableAttributedString *_truncatedString;
    NSMutableDictionary *_truncatedParagraphStyle;
    struct _QuotaSimpleSortDescriptor _simpleSortDescs[5];
    NSMutableArray *_messageIDs;
}

- (id)initWithPOPAccount:(id)fp8;
- (void)dealloc;
- (void)deleteFromServer:(id)fp8;
- (void)deleteMessagesSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)_shouldShowMessage:(id)fp8 showMessageType:(int)fp12;
- (id)_filterMessages:(id)fp8 showMessageType:(int)fp12;
- (void)_updateUsageField;
- (void)showMessagesPopupChanged:(id)fp8;
- (void)engineDidStart;
- (void)engineDidFinish;
- (void)updateProgress:(id)fp8;
- (void)engineUpdated:(id)fp8;
- (unsigned int)numberOfSortDescriptors;
- (const struct _QuotaSimpleSortDescriptor *)sortDescriptorAtIndex:(unsigned int)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)_truncatedAttributedStringForString:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 sortDescriptorsDidChange:(id)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)_syncSortDescriptors;
- (void)_resortMessages;
- (int)_addMessage:(id)fp8;
- (BOOL)_updateMessage:(id)fp8;
- (void)_deleteServerMessagesStarted:(id)fp8;
- (void)_deleteServerMessagesCompleted:(id)fp8;

@end

@interface MailDeleteCommand : NSDeleteCommand
{
    id _originalScriptCommandDefinition;
}

- (id)initWithCommandDescription:(id)fp8;
- (void)dealloc;
- (id)performDefaultImplementation;

@end

@interface MailCopyCommand : NSCloneCommand
{
    id _originalScriptCommandDefinition;
}

- (id)initWithCommandDescription:(id)fp8;
- (void)dealloc;
- (id)performDefaultImplementation;

@end

@interface MailMoveCommand : NSMoveCommand
{
    id _originalScriptCommandDefinition;
}

+ (void)_performBackgroundCommand:(id)fp8 copyMessages:(id)fp12 fromStores:(id)fp16 toMailboxUid:(id)fp20 shouldDelete:(BOOL)fp24;
- (id)initWithCommandDescription:(id)fp8;
- (void)dealloc;
- (id)performDefaultImplementation;

@end

@interface OptionalView : NSView
{
    NSButton *_optionSwitch;
    NSView *_primaryView;
    struct _NSRect _originalFrame;
    BOOL _isResizing;
    BOOL _isCustomizing;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)didAddSubview:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (void)subviewFrameDidChange:(id)fp8;
- (id)primaryView;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;
- (id)optionSwitch;
- (void)sizeToFit;
- (float)minXIncludingOptionSwitch:(BOOL)fp8;
- (float)minXOffsetIncludingOptionSwitch:(BOOL)fp8;

@end

@interface ComposeHeaderView : NSView
{
    id _delegate;
    NSPopUpButton *_disclosureButton;
    NSMenu *_actionMenu;
    OptionalView *_toOptionalView;
    OptionalView *_ccOptionalView;
    OptionalView *_subjectOptionalView;
    OptionalView *_bccOptionalView;
    OptionalView *_replyToOptionalView;
    OptionalView *_accountOptionalView;
    OptionalView *_signatureOptionalView;
    OptionalView *_priorityOptionalView;
    OptionalView *_securityOptionalView;
    OptionalView *_deliveryOptionalView;
    NSView *_messageContentView;
    NSPopUpButton *_signaturePopUp;
    NSPopUpButton *_accountPopUp;
    NSPopUpButton *_deliveryPopUp;
    NSButton *_cancelButton;
    NSButton *_okButton;
    NSImage *borderImage;
    unsigned int _showCcView:1;
    unsigned int _showBccView:1;
    unsigned int _showReplyToView:1;
    unsigned int _showAccountView:1;
    unsigned int _showSignatureView:1;
    unsigned int _showPriorityView:1;
    unsigned int _showSecurityView:1;
    unsigned int _showDeliveryView:1;
    BOOL _tempShowDeliveryView;
    unsigned int _accountFieldEnabled:1;
    unsigned int _deliveryFieldEnabled:1;
    unsigned int _signatureFieldEnabled:1;
    unsigned int _securityFieldEnabled:1;
    unsigned int _resizingViews:1;
    unsigned int _customizing:1;
    unsigned int _changesCancelled:1;
    NSViewAnimation *_animation;
    float _nextShownFrameOrigin;
    float _nextHiddenFrameOrigin;
    float _heightDelta;
    id _lastFirstResponder;
    float _signaturePopUpMaxWidth;
    float _accountPopUpMaxWidth;
    OptionalView *_togglingOptionalView;
    BOOL _customizationShouldStick;
}

- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)messageContentView;
- (void)setMessageContentView:(id)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)viewWillMoveToWindow:(id)fp8;
- (BOOL)isCustomizing;
- (void)dealloc;
- (void)_restoreFirstResponder;
- (void)_noteCurrentFirstResponder;
- (void)_popDisclosureButtonToFront;
- (void)_readVisibleStateFromOptionCheckboxes;
- (void)beginListeningForChildFrameChangeNotifications;
- (void)_setupMenuItemWithAction:(SEL)fp8 withState:(BOOL)fp12;
- (void)_setupActionMenuItemState;
- (void)awakeFromNib;
- (float)_positionView:(id)fp8 yOffset:(float)fp12;
- (BOOL)_shouldShowSecurityViewWhenNotCustomizing;
- (BOOL)_shouldShowSecurityViewWhenCustomizing;
- (BOOL)_shouldShowSecurityView;
- (BOOL)_shouldShowAccountViewWhenNotCustomizing;
- (BOOL)_shouldShowAccountViewWhenCustomizing;
- (BOOL)_shouldShowAccountView;
- (BOOL)_shouldShowSignatureViewWhenNotCustomizing;
- (BOOL)_shouldShowSignatureViewWhenCustomizing;
- (BOOL)_shouldShowSignatureView;
- (BOOL)_shouldShowDeliveryViewWhenNotCustomizing;
- (void)_deliveryViewAppearanceConditionsDidChange:(id)fp8;
- (void)_recomputeShowDeliveryView;
- (BOOL)_shouldShowDeliveryViewWhenCustomizing;
- (BOOL)_shouldShowDeliveryView;
- (BOOL)_shouldShowPriorityViewWhenNotCustomizing;
- (BOOL)_shouldShowPriorityViewWhenCustomizing;
- (BOOL)_shouldShowPriorityView;
- (struct _NSRect)_calculatePriorityFrame:(struct _NSRect)fp8;
- (void)_calculateAccountFrame:(struct _NSRect *)fp8 deliveryFrame:(struct _NSRect *)fp12 signatureFrame:(struct _NSRect *)fp16;
- (void)subviewFrameDidChange:(id)fp8;
- (BOOL)isDisplayingBottomControls;
- (BOOL)isDisplayingFatBottomControls;
- (void)fixupTabRing;
- (void)tile;
- (void)_addView:(id)fp8 toList:(id)fp12 isVisible:(BOOL)fp16 adjustYOrigin:(BOOL)fp20;
- (void)_recordUserCustomization;
- (void)_customizeHeaders:(BOOL)fp8 duration:(float)fp12;
- (void)resizeWithOldSuperviewSize:(struct _NSSize)fp8;
- (void)_enableActionMenu:(BOOL)fp8;
- (void)sanityCheckHiddenessOfViewsInAnimationList:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)_finishCustomizingSavingChanges:(BOOL)fp8;
- (void)done:(id)fp8;
- (void)_toggleCcOrBccOrReplyToField:(id)fp8;
- (void)toggleCcFieldVisibility:(id)fp8;
- (void)toggleBccFieldVisibility:(id)fp8;
- (void)toggleReplyToFieldVisibility:(id)fp8;
- (void)temporarilyToggleCcFieldVisibility;
- (void)temporarilyToggleBccFieldVisibility;
- (void)temporarilyToggleReplyToFieldVisibility;
- (void)_toggleAccountOrDeliveryOrSignatureOrPriorityOrSecurityField:(id)fp8;
- (void)togglePriorityFieldVisibility:(id)fp8;
- (void)temporarilyTogglePriorityFieldVisibility;
- (void)configureHeaders:(id)fp8;
- (void)configureAccountPopUpSize;
- (void)configureSignaturePopUpSize;
- (void)setCcFieldVisible:(BOOL)fp8 andSetDefault:(BOOL)fp12;
- (void)setCcFieldVisible:(BOOL)fp8;
- (void)setBccFieldVisible:(BOOL)fp8 andSetDefault:(BOOL)fp12;
- (void)setBccFieldVisible:(BOOL)fp8;
- (void)setReplyToFieldVisible:(BOOL)fp8 andSetDefault:(BOOL)fp12;
- (void)setReplyToFieldVisible:(BOOL)fp8;
- (void)setAccountFieldVisible:(BOOL)fp8;
- (void)setSignatureFieldVisible:(BOOL)fp8;
- (void)setDeliveryFieldVisible:(BOOL)fp8;
- (void)setPriorityFieldVisible:(BOOL)fp8 andSetDefault:(BOOL)fp12;
- (void)setPriorityFieldVisible:(BOOL)fp8;
- (void)setSecurityFieldVisible:(BOOL)fp8;
- (BOOL)securityFieldVisible;
- (BOOL)showCcHeader;
- (BOOL)showBccHeader;
- (BOOL)showReplyToHeader;
- (void)setAccountFieldEnabled:(BOOL)fp8;
- (void)setSignatureFieldEnabled:(BOOL)fp8;
- (void)setDeliveryFieldEnabled:(BOOL)fp8;
- (void)setSecurityFieldEnabled:(BOOL)fp8;

@end

@interface PhotoExporter : GenericAttachmentFetcher
{
}

+ (BOOL)isPhotoFile:(id)fp8;
+ (void)exportPhotoAttachments:(id)fp8;
- (void)_exportAttachments:(id)fp8;
- (void)downloadedAllAttachments;

@end

@interface NSPreferencesModule (ActiveModule)
+ (id)activeInstance;
@end

@interface NSPreferences (ActiveModule)
- (id)activeModule;
- (id)currentModule;
@end

@interface DOMDocument (MailExtras)
- (id)createBlockPlaceholder;
@end

@interface DOMHTMLElement (MailQuoteLevel)
- (int)quoteLevelDelta;
@end

@interface DOMElement (MailExtras)
- (BOOL)isBlockLevelElement;
- (BOOL)hasMarginsOfZero;
@end

@interface DOMRange (MailExtras)
- (id)firstNode;
- (id)lastNode;
- (BOOL)isEquivalentToCollapsedRange;
- (BOOL)includeTemporarySelectionMarkers;
- (void)hoistRange;
- (id)stringValue;
- (id)attributedStringWithDocument:(id)fp8;
- (void)getBlockBoundaryParent:(id *)fp8 nextSibling:(id *)fp12 atStart:(BOOL)fp16;
- (void)fixIfEndpointIsAtBeginningOfLine;
- (void)fixIfStartIsAtEndOfContainerNode;
- (void)balanceContainers;
- (id)rangeOfContainingBlock;
- (BOOL)containsRichText;
- (void)attachments:(id *)fp8 urls:(id *)fp12 fromDocument:(id)fp16;
- (id)attachmentsFromDocument:(id)fp8;
- (void)insertTextAtBeginning:(id)fp8 atEnd:(id)fp12;
- (id)stringRepresentation;
- (BOOL)isEqualToRange:(id)fp8;
- (BOOL)containsRange:(id)fp8;
- (void)setWithStringRepresentation:(id)fp8;
- (BOOL)isEditable;
- (BOOL)containsListElements;
- (BOOL)hasNoSignificantContentsOrWhitespace;
- (BOOL)hasNoSignificantContentsOtherThanAttachments;
- (BOOL)hasNoSignificantContents;
@end

@interface DOMCharacterData (MailExtras)
- (id)debugDescription;
@end

@interface DOMNode (MailExtras)
- (id)XPathRelativeTo:(id)fp8;
- (void)_removeStrayLinefeedsAtEnd;
- (void)_removeStrayLinefeedsAtBeginning;
- (void)removeStrayLinefeeds;
- (BOOL)isTemporaryCursorMarker;
- (BOOL)_mail_isAttached;
- (id)nextSiblingOrAunt;
- (id)nextNode;
- (id)previousNode;
- (id)_mail_traverseNextNodeStayingWithin:(id)fp8;
- (id)_mail_traverseNextSiblingStayingWithin:(id)fp8;
- (id)_mail_traversePreviousNode;
- (id)stringValue;
- (id)appendBlockPlaceholder;
- (BOOL)isBlockLevelElement;
- (id)blockNodeAncestor;
- (BOOL)isBody;
- (BOOL)isListElement;
- (BOOL)hasNoContents;
- (BOOL)_hasNoSignificantContentsOrWhitespace:(BOOL)fp8 orAttachments:(BOOL)fp12;
- (BOOL)hasNoSignificantContents;
- (BOOL)hasNoSignificantContentsOrWhitespace;
- (BOOL)hasNoSignificantContentsOtherThanAttachments;
- (int)quoteLevel;
- (int)quoteLevelDelta;
- (id)containingBlockQuote;
- (id)highestContainingBlockQuote;
- (id)firstDescendantBlockQuote;
- (BOOL)isDescendantOfNode:(id)fp8;
- (id)commonAncestorWithNode:(id)fp8;
- (unsigned int)offsetOfChild:(id)fp8;
- (BOOL)isAtBeginningOfContainerNode:(id)fp8;
- (BOOL)isAtEndOfContainerNode:(id)fp8;
- (id)nestedListElement;
- (id)descendantNamed:(id)fp8;
- (id)firstContainingNodeWithNameInArray:(id)fp8;
- (id)topmostContainingNodeWithNameInArray:(id)fp8;
- (id)containingListItem;
- (id)precedingListItem;
- (int)outlineNestingLevel;
- (id)topmostEditableAncestor;
- (BOOL)isInEditableRegion;
- (BOOL)containsOnlySelectionMarkers;
- (id)containingListElement;
- (BOOL)containsRichText;
- (BOOL)_isAppleStringAttachmentSpan;
- (void)recursivelyRemoveMailAttributes:(BOOL)fp8 convertObjectsToImages:(BOOL)fp12 convertEditableElements:(BOOL)fp16;
- (void)restoreEditableElementsEdited:(id *)fp8 unedited:(id *)fp12;
- (void)recursivelyRemoveMailAttributes;
- (void)recursivelyFixParagraphs;
- (void)fixParagraphsAndQuotesFromMicrosoftNodesToRemove:(id)fp8;
- (void)fixParagraphsAndQuotesFromMicrosoft;
- (id)attributedStringWithDocument:(id)fp8;
- (BOOL)convertInternalImagesToObjects;
- (id)stationeryDynamicElementNodes;
- (void)stationeryDynamicElementNodes:(id *)fp8;
- (id)tilingElements;
- (id)tilingDiv;
- (id)editableElements;
- (void)editableElements:(id *)fp8;
- (id)descendantsWithClassName:(id)fp8;
- (void)descendants:(id *)fp8 withClassName:(id)fp12;
- (id)objectElementChildNodes;
- (void)objectElementChildNodes:(id *)fp8;
- (id)stationeryAttachmentPlaceholderNodes;
- (void)stationeryAttachmentPlaceholderNodes:(id *)fp8;
- (id)findElementWithTag:(id)fp8 andClass:(id)fp12;
- (id)findElementWithTag:(id)fp8 className:(id)fp12 andIdName:(id)fp16;
- (void)addInlineBackgroundImagesURLSToArray:(id)fp8;
- (BOOL)convertInlineStationeryBackgroundImageURLs;
- (void)convertBackgroundImageURLsUsingDictionary:(id)fp8;
@end

@interface WebPreferences (MessageDefaultsSupport)
+ (id)standardMailWebPreferences;
+ (id)standardNoteWebPreferences;
- (void)configureMailPreferences;
- (void)configureStandardFont:(id)fp8 fixedFont:(id)fp12;
- (void)configureNotePreferences;
- (void)configureMessagePreferences;
- (void)_performDelayedEnablingOnMainThread;
- (void)_performDelayedEnabling;
@end

@interface NSView (LocatingFrameViews)
- (id)enclosingFrameView;
- (id)enclosingWebView;
- (id)enclosingScrollViewIgnoringWebScrollbars;
@end

@interface WebFrame (SizingExtras)
- (void)_setSize:(struct _NSSize)fp8 ofElement:(id)fp16;
- (void)adjustToDocumentView;
- (void)adjustAttachmentView:(id)fp8;
- (void)selectAttachmentView:(id)fp8;
@end

@interface WebView (MailExtras)
- (void)setAllDelegates:(id)fp8;
@end

@interface WebView (DOMInspecting)
- (void)showWebInspector:(id)fp8;
@end

@interface DOMHTMLImageElement (MailHTMLAttachments)
- (BOOL)getAttachment:(id *)fp8 andNewElement:(id *)fp12 usingResources:(id)fp16 includingRemote:(BOOL)fp20 buildAttachmentsForObjectElements:(BOOL)fp24;
@end

@interface DOMHTMLObjectElement (MailHTMLAttachments)
- (BOOL)getAttachment:(id *)fp8 andNewElement:(id *)fp12 usingResources:(id)fp16 includingRemote:(BOOL)fp20 buildAttachmentsForObjectElements:(BOOL)fp24;
@end

@interface DOMElement (MailHTMLAttachments)
- (BOOL)getAttachment:(id *)fp8 andNewElement:(id *)fp12 usingResources:(id)fp16 includingRemote:(BOOL)fp20 buildAttachmentsForObjectElements:(BOOL)fp24;
@end

@interface WebArchive (MailHTMLAttachments)
- (id)convertAttachmentsInFragment:(id)fp8 convertRemoteImages:(BOOL)fp12;
@end

@interface DOMNode (MailHTMLAttachments)
- (id)convertAttachmentsForResources:(id)fp8 convertRemoteImages:(BOOL)fp12 buildAttachmentsForObjectElements:(BOOL)fp16;
@end

@interface WebArchive (MailHTMLToAttributedString)
- (id)attributedString;
@end

@interface NSAttributedString (MailAttributedStringToHTML)
- (id)webArchiveForRange:(struct _NSRange)fp8 signatureID:(id *)fp16 fixUpNewlines:(BOOL)fp20;
- (id)webArchiveForRange:(struct _NSRange)fp8 signatureID:(id *)fp16;
- (id)webArchiveForRange:(struct _NSRange)fp8 fixUpNewlines:(BOOL)fp16;
- (id)webArchiveForRange:(struct _NSRange)fp8;
@end

@interface NSNib (MailSharedNibLoading)
+ (BOOL)loadSharedNib:(int)fp8 owner:(id)fp12;
@end

@interface _ComposeAttachmentEnumerator : NSEnumerator
{
    DOMNode *_currentNode;
    DOMNode *_containerNode;
    DOMNode *_endNode;
    EditableWebMessageDocument *_document;
    unsigned int acceptDeleted:1;
    unsigned int acceptNonDeleted:1;
    unsigned int createdIterator:1;
}

- (id)initWithDocument:(id)fp8 options:(int)fp12 range:(id)fp16;
- (void)dealloc;
- (short)acceptNode:(id)fp8;
- (id)nextObject;
- (id)document;
- (void)setDocument:(id)fp8;
- (id)endNode;
- (void)setEndNode:(id)fp8;
- (id)containerNode;
- (void)setContainerNode:(id)fp8;
- (id)currentNode;
- (void)setCurrentNode:(id)fp8;

@end

@interface EditableWebMessageDocument : WebMessageDocument
{
    DOMHTMLDocument *_htmlDocument;
    DOMHTMLElement *_contentElement;
    NSMutableDictionary *savedUserContent;
    NSMutableDictionary *savedUserAttachments;
    NSMutableArray *orderedUserAttachmentsURLs;
    NSMutableArray *savedUserImages;
}

- (void)dealloc;
- (id)htmlDocument;
- (void)setHTMLDocument:(id)fp8;
- (id)contentElement;
- (void)setContentElement:(id)fp8;
- (id)contentFragment;
- (id)flattenedContentFragment;
- (void)setBaseURL:(id)fp8;
- (void)saveUserContent:(id)fp8;
- (id)savedUserContent;
- (void)forgetSavedContentWithKeys:(id)fp8;
- (void)saveUserAttachments:(id)fp8 withOrdering:(id)fp12;
- (id)savedUserAttachmentsOrdering;
- (id)savedUserAttachmentForURL:(id)fp8;
- (void)removeSavedUserAttachmentWithURL:(id)fp8;
- (id)orderedCompositeImagesAndTheirURLs:(id *)fp8;
- (void)saveUserImagesFromCompositeImages;
- (id)savedUserImagesFromCompositeImages;
- (void)insertSavedUserImagesIntoCompositeImages;
- (void)forgetAllSavedContentAttachmentsAndImages;
- (id)userImageDictionaryFromAttachment:(id)fp8 withURL:(id)fp12;
- (id)attachments;
- (id)backgroundImageAttachments;
- (void)saveAttachmentsWithURLsAsBackgroundAttachments:(id)fp8;
- (id)attachmentsIncludingBackgrounds;
- (void)removeAllAttachments;
- (void)removeAllCompositeImageAttachments;
- (void)removeAllBackgroundAttachments;
- (id)attachmentForURL:(id)fp8;
- (id)attachmentForURLString:(id)fp8;
- (id)prepareToAddArchive:(id)fp8 attachmentDelegate:(id)fp12;
- (id)prepareToAddArchive:(id)fp8;
- (void)copyBackgroundImageFromURL:(id)fp8 toURL:(id)fp12;
- (id)attachmentElementEnumeratorWithOptions:(int)fp8;
- (id)attachmentElementEnumeratorForRange:(id)fp8 withOptions:(int)fp12;

@end

@interface WebMessageDocument (Attachments)
- (id)mimeBodyForAttachmentWithURL:(id)fp8;
- (void)addAttachmentsFromResource:(id)fp8 attachmentDelegate:(id)fp12;
- (void)addAttachmentsFromArchive:(id)fp8 attachmentDelegate:(id)fp12;
- (id)userAttachments;
@end

@interface EditingWebMessageController : WebMessageController
{
}

- (void)setMainFrameDocumentView:(id)fp8;
- (BOOL)scrollVerticallyBy:(float)fp8;
- (float)verticalPageScrollDistance;
- (BOOL)considerBaseURLsInternal;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface NSString (HTMLConversion)
- (id)markupString;
- (id)webArchiveForRange:(struct _NSRange)fp8;
- (id)webArchiveForRange:(struct _NSRange)fp8 signatureID:(id *)fp16;
@end

@interface AttachmentDragSession : NSObject
{
    NSView *_sourceView;
    NSMutableArray *_attachments;
}

- (void)dealloc;
- (id)retain;
- (id)autorelease;
- (void)release;
- (id)initWithSourceView:(id)fp8 attachments:(id)fp12;
- (id)sourceView;
- (id)attachments;
- (BOOL)startDragFromPoint:(struct _NSPoint)fp8 event:(id)fp16 image:(id)fp20;
- (unsigned int)draggingSourceOperationMaskForLocal:(BOOL)fp8;
- (void)draggedImage:(id)fp8 beganAt:(struct _NSPoint)fp12;
- (void)draggedImage:(id)fp8 endedAt:(struct _NSPoint)fp12 operation:(unsigned int)fp20;
- (void)draggedImage:(id)fp8 movedTo:(struct _NSPoint)fp12;
- (BOOL)ignoreModifierKeysWhileDragging;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)fp8;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;

@end

@interface NSView (AttachmentDragSession)
- (BOOL)isCurrentAttachmentDragSourceView;
@end

@interface TemporaryItemManager : NSObject
{
    NSString *_path;
    NSTimer *_timer;
}

+ (void)cleanupAllItems;
+ (id)temporaryItemManagerWithRelativePath:(id)fp8 cleanupInterval:(double)fp12;
- (void)dealloc;
- (id)path;
- (id)expirationDate;
- (void)_setUpTimer:(id)fp8;
- (void)setExpirationDate:(id)fp8;
- (void)cleanUpDirectory;
- (BOOL)fileManager:(id)fp8 shouldProceedAfterError:(id)fp12;

@end

@interface DOMHTMLDocument (MailExtrasDeprecated)
- (id)createEmptyLineNode;
@end

@interface DOMHTMLDocument (MailExtras)
+ (id)listElements;
- (BOOL)containsSelectionMarkers;
- (id)createDocumentFragmentWithMarkupString:(id)fp8;
- (id)createFragmentForStringLosingBR:(id)fp8;
- (id)createMessageQuoteElement;
- (id)createNonemptyDivElementWithPlainStyle;
- (id)createFragmentForWebArchive:(id)fp8;
- (id)createFragmentForWebArchive:(id)fp8 baseURL:(id)fp12;
- (id)createFragmentForWebArchive:(id)fp8 baseURL:(id)fp12 bodyAsDiv:(BOOL)fp16;
- (id)createSpanElementWithTabs:(int)fp8;
- (id)createFragmentForURL:(id)fp8 text:(id)fp12;
- (id)head;
- (id)backgroundImageURLs;
- (BOOL)convertStationeryBackgroundImageURLs;
- (id)createElement:(id)fp8 class:(id)fp12 id:(id)fp16 editable:(id)fp20;
- (struct __CFDictionary *)stringsAndTextNodes;
@end

@interface DOMDocumentFragment (MailExtras)
- (id)unwrappedFragment;
@end

@interface DOMHTMLObjectElement (AttachmentLocator)
- (void)attachment:(id *)fp8 url:(id *)fp12 fromDocument:(id)fp16;
@end

@interface DOMHTMLElement (MailExtras)
+ (BOOL)isRichTextStyleNotCheckingFont:(id)fp8;
+ (BOOL)isRichTextStyleCheckingOnlyFont:(id)fp8;
+ (BOOL)isRichTextStyle:(id)fp8;
- (BOOL)isRichTextElementType;
- (BOOL)isRichTextElement;
- (void)recursivelyRemoveMailAttributes:(BOOL)fp8 convertObjectsToImages:(BOOL)fp12 convertEditableElements:(BOOL)fp16;
- (void)restoreEditableElementsEdited:(id *)fp8 unedited:(id *)fp12;
- (void)attachment:(id *)fp8 url:(id *)fp12 fromDocument:(id)fp16;
- (BOOL)hasClassName:(id)fp8;
@end

@interface DOMCSSValue (MailExtras)
- (BOOL)matchesFontFamily:(id)fp8;
@end

@interface EditingMessageWebView : TilingWebView
{
    DOMHTMLElement *_contentElement;
    DOMNode *cursorPositionNode;
    struct {
        unsigned int delegateRespondsToCanInsertFromDraggingInfo:1;
        unsigned int delegateRespondsToCanInsertFromPasteboard:1;
        unsigned int removingAttachments:1;
    } _flags;
}

+ (id)insertablePasteboardTypes;
- (id)mailPreferredPboardTypeFromTypes:(id)fp8 pasteboard:(id)fp12 isForDrag:(BOOL)fp16 preferHTML:(BOOL)fp20;
- (void)setEditingDelegate:(id)fp8;
- (BOOL)replaceSelectionWithPasteboardContentsPasteboard:(id)fp8 pasteboardType:(id)fp12 action:(int)fp16 options:(int)fp20;
- (BOOL)replaceSelectionWithPasteboardContentsDraggingInfo:(id)fp8 pasteboardType:(id)fp12 action:(int)fp16 options:(int)fp20;
- (BOOL)_replaceSelectionWithPasteboardContentsDraggingInfo:(id)fp8 pasteboard:(id)fp12 pasteboardType:(id)fp16 action:(int)fp20 options:(int)fp24;
- (BOOL)replaceSelectionUsingContext:(id)fp8;
- (BOOL)replaceSelectionWithFragment:(id)fp8 attachments:(id)fp12 pasteboard:(id)fp16 types:(id)fp20 action:(int)fp24 options:(int)fp28 isPlainText:(BOOL)fp32;
- (BOOL)isContentEditable;
- (id)contentElement;
- (void)setContentElement:(id)fp8;
- (void)dealloc;
- (BOOL)isSelectionInContentElement;
- (BOOL)selectionCouldBeMadeIntoALink;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (void)deleteNode:(id)fp8;
- (void)deleteRange:(id)fp8;
- (void)replaceNode:(id)fp8 oldNode:(id)fp12;
- (void)insertNode:(id)fp8 parent:(id)fp12 nextSibling:(id)fp16;
- (void)insertNode:(id)fp8 parent:(id)fp12 offset:(int)fp16;
- (void)setValue:(id)fp8 forAttribute:(id)fp12 ofElement:(id)fp16;
- (void)setStyleProperty:(id)fp8 value:(id)fp12 priority:(id)fp16 ofElement:(id)fp20;
- (BOOL)removingAttachments;
- (BOOL)removeHeadFromDocument:(id)fp8;
- (BOOL)removeFormattingFromTree:(id)fp8 forDocument:(id)fp12;
- (BOOL)removeRichNodesAndStyleFromTree:(id)fp8 forDocument:(id)fp12;
- (void)consolidateTextAndWhitespaceInTree:(id)fp8;
- (void)removeAllFormatting;
- (void)removeAllFormattingFromContentElementOnly:(BOOL)fp8 includingAttachments:(BOOL)fp12;
- (void)insertTemporarySelectionMarkersForRange:(id)fp8;
- (void)restoreSelectionFromTemporaryMarkers;
- (void)restoreSelectionFromTemporaryMarkers:(BOOL)fp8;
- (void)deleteTemporarySelectionMarkersFromDocument:(id)fp8;
- (id)temporaryEndingSelectionMarker;
- (id)temporaryStartingSelectionMarker;
- (id)selectedAnchor;
- (BOOL)isFirstLineOfDocument;
- (id)selectedContainerWithNameInArray:(id)fp8;
- (void)saveSelectionForUndo;
- (void)insertNode:(id)fp8 atRange:(id)fp12;
- (id)insertablePasteboardTypes;
- (void)registerForDraggedTypes:(id)fp8;
- (void)saveMessageToDrafts:(id)fp8;
- (unsigned int)draggingEntered:(id)fp8;
- (unsigned int)draggingUpdated:(id)fp8;
- (void)draggingExited:(id)fp8;
- (BOOL)prepareForDragOperation:(id)fp8;
- (BOOL)performDragOperation:(id)fp8;
- (void)concludeDragOperation:(id)fp8;
- (BOOL)wantsPeriodicDraggingUpdates;
- (void)dragImage:(id)fp8 at:(struct _NSPoint)fp12 offset:(struct _NSSize)fp20 event:(id)fp28 pasteboard:(id)fp32 source:(id)fp36 slideBack:(BOOL)fp40;
- (void)undo:(id)fp8;
- (void)redo:(id)fp8;
- (void)paste:(id)fp8;
- (void)pasteAsQuotation:(id)fp8;
- (void)pasteWithCurrentStyle:(id)fp8;
- (void)setCursorPositionNode:(id)fp8;
- (BOOL)becomeFirstResponder;
- (void)editLink:(id)fp8;
- (void)removeLink:(id)fp8;
- (void)addHorizontalRule:(id)fp8;
- (void)increaseIndentation:(id)fp8;
- (void)decreaseIndentation:(id)fp8;
- (void)changeIndentationIfAllowed:(int)fp8;
- (void)changeIndentation:(int)fp8;
- (BOOL)removeAllQuotingFromTree:(id)fp8;
- (void)changeQuoteLevel:(id)fp8;
- (void)splitUpBlockQuotesOverlappingStartOfRange:(id)fp8;
- (void)splitUpBlockQuotesOverlappingEndOfRange:(id)fp8;
- (int)compareRange:(id)fp8 toEndOfNode:(id)fp12;
- (void)removeBlockQuoteFromTree:(id)fp8;
- (void)removeFragmentBlockQuote:(id)fp8;
- (void)makeFontBigger:(id)fp8;
- (void)makeFontSmaller:(id)fp8;
- (void)viewWillStartLiveResize;
- (void)toggleVisibilityOfSublist:(id)fp8 ofItem:(id)fp12;
- (void)changeDocumentBackgroundColorToColor:(id)fp8;
- (void)viewDidEndLiveResize;
- (void)layoutResizingAttachmentViews;

@end

@interface WebHTMLView (MailAdditions)
- (void)changeDocumentBackgroundColor:(id)fp8;
@end

@interface SplitterAnimation : NSAnimation
{
    ExpandingSplitView *_splitView;
    float _startPercentage;
    float _endPercentage;
}

- (id)initWithSplitView:(id)fp8 endPercentage:(float)fp12;
- (id)initWithSplitView:(id)fp8 endPercentage:(float)fp12 duration:(double)fp16;
- (void)dealloc;
- (void)_updatePercentage;
- (void)setCurrentProgress:(float)fp8;

@end

@interface ComposeSpellChecker : NSSpellChecker
{
}

- (void)setPostCompletedNotification:(BOOL)fp8 forSpellDocumentWithTag:(int)fp12;
- (int)currentSpellDocumentTag;
- (void)_mail_postingTimerFired:(id)fp8;
- (void)_mail_spellPanelDidClose:(id)fp8;
- (struct _NSRange)checkSpellingOfString:(id)fp8 startingAt:(int)fp12 language:(id)fp16 wrap:(BOOL)fp20 inSpellDocumentWithTag:(int)fp24 wordCount:(int *)fp28;
- (id)spellingPanel;
- (void)closeSpellDocumentWithTag:(int)fp8;

@end

@interface NSSpellChecker (AllocationOverride)
+ (id)allocWithZone:(struct _NSZone *)fp8;
@end

@interface GenericAttachmentFetcher : NSObject
{
    NSArray *_attachments;
    NSMutableSet *_attachmentsBeingDownloaded;
}

- (void)dealloc;
- (void)finalize;
- (id)initWithAttachments:(id)fp8;
- (void)_downloadCompleted:(id)fp8;
- (void)beginBackgroundLoad;
- (void)cancelBackgroundLoad;
- (id)downloadedAttachments;
- (void)_saveAttachments:(id)fp8 itemManager:(id)fp12;
- (void)beginSaveOfAttachments:(id)fp8 toTemporaryFolderWithName:(id)fp12 taskName:(id)fp16;
- (void)didFinishBackgroundLoadOfAttachment:(id)fp8;
- (void)downloadedAllAttachments;
- (void)didSaveAttachments:(id)fp8 paths:(id)fp12;
- (void)didSaveAttachment:(id)fp8 toPath:(id)fp12;
- (double)temporaryFolderTimeout;

@end

@interface TemporaryAttachmentOpener : GenericAttachmentFetcher
{
    NSString *_applicationPath;
}

- (id)initWithAttachments:(id)fp8 applicationPath:(id)fp12;
- (void)dealloc;
- (void)downloadedAllAttachments;
- (void)_openAttachmentAtPath:(id)fp8;
- (void)didSaveAttachment:(id)fp8 toPath:(id)fp12;
- (double)temporaryFolderTimeout;

@end

@interface HyperlinkEditor : NSObject
{
    NSTextField *_linkTextField;
    NSButton *_okButton;
    EditingMessageWebView *_webView;
    id _delegate;
    DOMHTMLAnchorElement *_selectedAnchor;
    DOMNode *_selectionContents;
    NSString *_replacementLink;
}

- (void)dealloc;
- (id)initForWebView:(id)fp8 delegate:(id)fp12;
- (void)editLink;
- (void)removeSelectedLink;
- (void)orderOutPanel:(id)fp8;
- (void)controlTextDidChange:(id)fp8;

@end

@interface HyperlinkEditor (Internal)
- (void)_sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_setReplacementLink:(id)fp8;
@end

@interface SearchSliceView : NSView
{
    NSButton *_saveButton;
    NSProgressIndicator *_progressIndicator;
    NSMutableArray *_fieldButtons;
    NSMutableArray *_targetButtons;
    unsigned int _layingOutItems:1;
    double _lastLayoutTime;
    BOOL _canContentSearchSelectedMailboxes;
    struct _NSPoint separatorOrigin;
    int _searchField;
    int _searchTarget;
    int _searchArea;
    id _delegate;
}

- (id)createSearchButton;
- (void)_addButtonForSearchField:(int)fp8 inArea:(int)fp12;
- (void)_addButtonForSearchTarget:(int)fp8;
- (void)_updateUIToReflectSearchArea;
- (void)_updateUIToReflectSearchTarget;
- (void)_updateUIToReflectSearchField;
- (id)typeButtonWithTag:(int)fp8;
- (void)_updateContentSearchButtonEnabledState;
- (void)_updateUI;
- (void)_layoutItems;
- (void)_addFieldButtonsForSearchArea:(int)fp8;
- (void)_setupView;
- (id)initWithFrame:(struct _NSRect)fp8 searchField:(int)fp24 searchTarget:(int)fp28 searchArea:(int)fp32;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (id)targetButtonWithTag:(int)fp8;
- (void)setCanSearchSelectedMailbox:(BOOL)fp8;
- (void)setCanContentSearchSelectedMailboxes:(BOOL)fp8;
- (void)setSearchTarget:(int)fp8;
- (void)setSearchField:(int)fp8;
- (void)startProgressAnimation;
- (void)stopProgressAnimation;
- (void)setCanSaveSearch:(BOOL)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)searchFieldButtonAction:(id)fp8;
- (void)searchTargetButtonAction:(id)fp8;
- (void)saveButtonAction:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)viewWillStartLiveResize;
- (void)viewDidEndLiveResize;
- (BOOL)_anySearchMailboxesAreCached;
- (id)delegate;
- (int)searchArea;
- (void)setSearchArea:(int)fp8;
- (int)searchTarget;
- (int)searchField;

@end

@interface NSString (MailAdditions)
- (void)_drawInRect:(struct _NSRect)fp8 font:(id)fp24 color:(id)fp28 truncate:(BOOL)fp32;
- (void)drawEtchedInRect:(struct _NSRect)fp8 withTopColor:(id)fp24 bottomColor:(id)fp28 shadowBelow:(BOOL)fp32 font:(id)fp36 centered:(BOOL)fp40 flipped:(BOOL)fp44 truncate:(BOOL)fp48;
@end

@interface MailVerticalSplitView : NSView
{
    NSMutableSet *collapsedSubviews;
    id delegate;
    BOOL isPaneSplitter;
    BOOL adjustSubviewsBeforeDrawing;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setIsPaneSplitter:(BOOL)fp8;
- (BOOL)isPaneSplitter;
- (BOOL)isVertical;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (float)maximumAllowedWidthForFirstSubview;
- (void)adjustSubviews;
- (void)adjustSubviewsToNewSecondaryWidth:(float)fp8 byAnimating:(BOOL)fp12;
- (float)dividerThickness;
- (BOOL)isSubviewCollapsed:(id)fp8;
- (BOOL)acceptsFirstMouse:(id)fp8;
- (void)didAddSubview:(id)fp8;
- (struct _NSRect)dividerFrame;
- (struct _NSRect)cursorRectFrame;
- (float)dividerPosition;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (CDAnonymousStruct2)_dividerDragParamsForIndex:(unsigned int)fp8 originalPosition:(float)fp12;
- (CDAnonymousStruct1)_resultOfDividerDragToPosition:(float)fp8 withParams:(const CDAnonymousStruct2 *)fp12;
- (void)_presentDividerDragResult:(const CDAnonymousStruct1 *)fp8 withParams:(const CDAnonymousStruct2 *)fp12;
- (id)hitTest:(struct _NSPoint)fp8;
- (void)mimicDoubleClickOnDivider;
- (void)mouseDown:(id)fp8;
- (CDAnonymousStruct2)beginDividerDragging;
- (void)dragDividerToLocation:(float)fp8 withInfo:(CDAnonymousStruct2)fp12;
- (void)endDividerDragging;
- (BOOL)mouseDownCanMoveWindow;
- (void)resetCursorRects;
- (void)replaceSubview:(id)fp8 with:(id)fp12;
- (void)resizeSubviewsWithOldSize:(struct _NSSize)fp8;
- (void)setAutoresizesSubviews:(BOOL)fp8;
- (BOOL)shouldBeTreatedAsInkEvent:(id)fp8;
- (void)willRemoveSubview:(id)fp8;
- (id)description;

@end

@interface VerticalSplitViewHandle : NSView
{
    MailVerticalSplitView *splitView;
    NSImage *image;
    BOOL drawShadowAtLeft;
    BOOL drawsShadowAtAll;
    NSImage *shadow;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)setSplitView:(id)fp8;
- (void)setDrawShadowAtLeft:(BOOL)fp8;
- (float)handleWidth;
- (BOOL)isOpaque;
- (void)setDrawsShadow:(BOOL)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)mouseDown:(id)fp8;
- (void)resetCursorRects;

@end

@interface MailboxPaneBottomView : NSView
{
    NSView *rightButton;
    VerticalSplitViewHandle *splitViewHandle;
    NSImage *buttonEdge;
    NSImage *filler;
}

- (void)awakeFromNib;
- (void)dealloc;
- (BOOL)isOpaque;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface MailPreferences : NSPreferences
{
}

+ (void)configureFetchFrequencyPopUp:(id)fp8 forMessageType:(int)fp12;
- (id)init;
- (id)windowTitle;
- (void)changeFont:(id)fp8;
- (unsigned int)validModesForFontPanel:(id)fp8;
- (BOOL)fontManager:(id)fp8 willIncludeFont:(id)fp12;
- (void)windowWillClose:(id)fp8;

@end

@interface EmailAliasUpdater : NSObject
{
    NSMutableArray *_updaters;
    NSMutableSet *_lastUpdateAccounts;
    BOOL _needsSave;
    NSMutableArray *_usersToBeEdited;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (id)_updaterForAccount:(id)fp8;
- (id)_currentUpdater;
- (void)_kickOffNextUpdater;
- (id)_updateAccount:(id)fp8;
- (void)_startUpdaters;
- (void)update;
- (void)updateIfFirstTime;
- (void)aliasUpdater:(id)fp8 didFinishWithError:(id)fp12;
- (void)_accountsChanged:(id)fp8;
- (void)_openWebmailPreferencesURLForUser:(id)fp8 usingWebmailPreferencesURL:(id)fp12;
- (void)_openWebmailPreferencesURL;
- (void)_fetchWebmailPreferencesURL;
- (void)openWebmailPreferencesURLForUser:(id)fp8;

@end

@interface DocMacAliasUpdater : NSObject
{
    iToolsAccount *_account;
    ISS_DMMemberAccount *_dmAccount;
    id _delegate;
    int _state;
    NSDate *_syncDate;
}

- (id)_createDictionaryFromAlias:(id)fp8;
- (id)_aliasesFromXMLData:(id)fp8;
- (id)initWithIToolsAccount:(id)fp8;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)_transactionDidFinishWithError:(id)fp8;
- (void)fetchIfModifiedSinceLastUpdate;
- (id)account;
- (int)state;
- (void)transactionSuccessful:(id)fp8;
- (void)transactionHadError:(id)fp8;
- (void)transactionAborted:(id)fp8;

@end

@interface AccountCell : NSActionCell
{
    NSString *subtitle;
    MailAccount *account;
}

- (id)initTextCell:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setAccount:(id)fp8;
- (void)setSubtitle:(id)fp8;
- (id)subtitle;
- (id)title;
- (id)icon;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawString:(id)fp8 inRect:(struct _NSRect)fp12 withAttributes:(id)fp28;

@end

@interface MailToolbarSpaceItemWithPin : NSToolbarItem
{
    NSView *_pin;
}

+ (id)itemIdentifier;
- (id)initWithPin:(id)fp8;
- (id)initWithItemIdentifier:(id)fp8;
- (id)init;
- (void)dealloc;
- (id)menuFormRepresentation;
- (BOOL)isSeparatorItem;
- (BOOL)wantsToDrawIconInDisplayMode:(unsigned int)fp8;
- (BOOL)wantsToDrawLabelInDisplayMode:(unsigned int)fp8;
- (BOOL)wantsToDrawIconIntoLabelAreaInDisplayMode:(unsigned int)fp8;
- (BOOL)_needsRedisplayWhenBeginningToolbarEditing;
- (BOOL)_emptyContents;
- (BOOL)hasContents;
- (BOOL)allowsDuplicatesInToolbar;
- (void)_updateSizeForDisplayMode:(unsigned int)fp8;
- (void)configureForDisplayMode:(unsigned int)fp8 andSizeMode:(unsigned int)fp12;
- (void)updateWidth;

@end

@interface MailToolbarSpace : NSView
{
    MailToolbarSpaceItemWithPin *_spaceItem;
}

- (id)initWithSize:(struct _NSSize)fp8 forSpaceItem:(id)fp16;
- (void)drawRect:(struct _NSRect)fp8;
- (void)viewDidMoveToWindow;

@end

@interface SpotlightBar : NSView
{
    NSString *_searchString;
    NSTextField *_textField;
    NSButton *_searchButton;
}

- (void)_setupView;
- (id)initWithFrame:(struct _NSRect)fp8 searchString:(id)fp24;
- (void)dealloc;
- (void)setSearchString:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)searchButtonAction:(id)fp8;

@end

@interface FlatPopUpButtonCell : NSPopUpButtonCell
{
    BOOL _useThinLeftMargin;
}

+ (void)loadCapGraphics;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (float)_menuLocationHorizontalOffset;
- (void)_drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)useThinLeftMargin;
- (void)setUseThinLeftMargin:(BOOL)fp8;

@end

@interface FlatPopUpButton : NSPopUpButton
{
}

@end

@interface FlatPopUpButton (MailAdditions)
- (float)sizeToFitWidth;
@end

@interface InvitationAttachmentOpener : TemporaryAttachmentOpener
{
    BOOL _openImmediately;
}

- (id)initWithAttachments:(id)fp8 openImmediately:(BOOL)fp12;
- (void)_saveAttachmentsToICalCaches:(id)fp8;
- (void)beginSaveOfAttachments:(id)fp8 toTemporaryFolderWithName:(id)fp12 taskName:(id)fp16;

@end

@interface NSWorkspace (MailAdditions)
+ (BOOL)isApplicationWithBundleIDRunning:(id)fp8;
@end

@interface MessageWebHTMLView : WebHTMLView
{
    NSArray *attachmentsForContextualMenu;
}

- (void)dealloc;
- (id)selectedAttributedString;
- (id)attachmentsForContextualMenu;
- (void)setAttachmentsForContextualMenu:(id)fp8;
- (void)willShowContextualMenuForAttachment:(id)fp8;
- (id)selectedAttachments;
- (BOOL)selectionIsOneAttachment;
- (BOOL)moreThanOneAttachmentSelected;
- (id)attachmentForEvent:(id)fp8;
- (void)openAttachment:(id)fp8;
- (void)quickLookAttachment:(id)fp8;
- (void)quickLookSelectedAttachments:(id)fp8;
- (void)saveAttachment:(id)fp8;
- (void)saveAttachmentToDownloadsDirectory:(id)fp8;
- (id)editingDelegate;
- (void)viewAttachmentInline:(id)fp8;
- (void)openAttachmentWithApplication:(id)fp8;
- (void)chooseApplicationToOpenAttachment:(id)fp8;
- (void)importInvitations:(id)fp8;
- (void)insertBulletedList:(id)fp8;
- (void)insertNumberedList:(id)fp8;
- (void)convertToNumberedList:(id)fp8;
- (void)convertToBulletedList:(id)fp8;
- (void)increaseListNestingLevel:(id)fp8;
- (void)decreaseListNestingLevel:(id)fp8;
- (void)insertList:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (void)writeSelectionWithPasteboardTypes:(id)fp8 toPasteboard:(id)fp12;
- (void)addResourcesToWebArchiveOnPasteboard:(id)fp8;
- (void)keyDown:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)floatLeft:(id)fp8;
- (void)floatRight:(id)fp8;
- (void)floatNone:(id)fp8;
- (BOOL)canFloatSelectedElement;
- (void)setSelectionFloat:(id)fp8 undoTitle:(id)fp12;

@end

@interface WebHTMLView (ToReplaceViewWithOurOwn)
+ (id)allocWithZone:(struct _NSZone *)fp8;
@end

@interface NSEvent (NSEventAdditions)
+ (id)eventByChangingKeyEvent:(id)fp8 toCharacters:(id)fp12;
- (unsigned short)characterCodeWithCarbonModifiers:(unsigned long)fp8;
- (BOOL)isCommandEqualBelowPlusKeyDown;
- (BOOL)isCommandUnderscoreAboveMinusKeyDown;
- (BOOL)isLeftMouseUpDown;
@end

@interface IMAPMailboxes : NSObject
{
    NSView *_mailboxesView;
    NSSearchField *_searchField;
    NSOutlineView *_mailboxesOutline;
    NSButton *_subscribeButton;
    NSButton *_unsubscribeButton;
    NSProgressIndicator *_fetchProgressIndicator;
    NSTextField *_fetchStatusField;
    NSImageView *_statusImageView;
    IMAPAccount *_account;
    IMAPGateway *_gateway;
    NSPredicate *_predicate;
    NSArray *_mailboxes;
    NSArray *_filteredMailboxes;
    ActivityMonitor *_mailboxListMonitor;
    InvocationQueue *_subscribeQueue;
}

- (id)init;
- (void)dealloc;
- (id)_alertIcon;
- (void)updateUIForOnlineState:(id)fp8;
- (void)setUIEnabled:(BOOL)fp8;
- (void)_setupNotifications;
- (void)setupUIWithAccount:(id)fp8;
- (void)_mailboxFetchCompleted:(id)fp8 forAccount:(id)fp12;
- (id)_recursivelyCreateMailboxEntriesForList:(id)fp8 subscribedList:(id)fp12 inLocalPath:(id)fp16 remotePath:(id)fp20 forAccount:(id)fp24;
- (void)_fetchMailboxListingForAccount:(id)fp8;
- (id)view;
- (void)_startSubscriptionRequest;
- (void)_reallyStartSubscriptionRequest:(id)fp8;
- (void)_stopSubscriptionRequest:(id)fp8;
- (void)_reallyStopSubscriptionRequest:(id)fp8 refreshList:(id)fp12;
- (void)_handleSubscriptionRequest:(BOOL)fp8 forItem:(id)fp12 refreshSet:(id)fp16 recursive:(BOOL)fp20;
- (void)_handleSubscriptionRequest:(BOOL)fp8;
- (void)subscribeButtonClicked:(id)fp8;
- (void)unsubscribeButtonClicked:(id)fp8;
- (void)filterMailboxList:(id)fp8;
- (void)clearFilteredMailboxes;
- (void)_clearFilteredMailboxes:(id)fp8;
- (id)predicate;
- (id)_mailboxEntryForPath:(id)fp8;
- (id)_mailboxEntryForMailboxUid:(id)fp8;
- (void)_updateEntryTreeForChangedEntry:(id)fp8 oldValue:(BOOL)fp12;
- (void)_reallySetSubscribedState:(BOOL)fp8 forMailboxPath:(id)fp12 parentUid:(id)fp16 account:(id)fp20 refreshListing:(BOOL)fp24;
- (void)_reallySetSubscribedState:(id)fp8 parentUid:(id)fp12 account:(id)fp16 forMailboxPath:(id)fp20;
- (void)_setSubscribedState:(BOOL)fp8 forMailboxPath:(id)fp12 parentUid:(id)fp16;
- (void)_handleError:(id)fp8 settingSubscribedState:(id)fp12 forMailboxPath:(id)fp16 account:(id)fp20;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (BOOL)outlineView:(id)fp8 shouldSelectItem:(id)fp12;
- (void)outlineView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (void)accountInfoWillHideView:(id)fp8;
- (void)accountInfoWillShowView:(id)fp8;

@end

@interface _IMAPMailboxEntry : NSObject
{
    NSString *_name;
    NSString *_path;
    BOOL _subscribed;
    NSArray *_children;
    NSArray *_filteredChildren;
    MailboxUid *_uid;
    BOOL _isNoSelect;
    BOOL _hasEnabledDescendants;
    _IMAPMailboxEntry *_parent;
    IMAPMailboxes *_controller;
}

- (void)dealloc;
- (int)compare:(id)fp8;
- (id)filteredChildren;
- (BOOL)isPathValidForCurrentFilter;
- (BOOL)isValidForCurrentFilter;

@end

@interface ButtonIconTextCell : NSButtonCell
{
    NSImage *_icon;
    BOOL _cellEnabled;
    struct _NSRect _cellRect;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setIcon:(id)fp8;
- (id)icon;
- (struct _NSSize)iconSizeForFrame:(struct _NSRect)fp8;
- (void)setCellEnabled:(BOOL)fp8;
- (BOOL)cellEnabled;
- (struct _NSRect)drawTitle:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface TypeAheadWindow : NSWindow
{
    TypeAheadResponder *_typeAheadResponder;
    BOOL sendMouseDownNotifications;
}

- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32 screen:(id)fp36;
- (void)dealloc;
- (void)setTypeAheadInitialFirstResponder;
- (void)sendEvent:(id)fp8;
- (void)sendMouseDownNotifications:(BOOL)fp8;
- (void)flushTypeAheadEvents;

@end

@interface TypeAheadResponder : NSView
{
    NSMutableArray *_savedEvents;
    NSWindow *_typeAheadWindow;
}

- (id)initWithWindow:(id)fp8;
- (void)dealloc;
- (void)saveEvent:(id)fp8;
- (void)flushEvents;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)keyDown:(id)fp8;
- (void)keyUp:(id)fp8;

@end

@interface SearchHistory : NSObject
{
    BOOL _timerScheduled;
    NSMutableDictionary *_defaults;
}

+ (id)sharedInstance;
- (id)init;
- (int)searchFieldForString:(id)fp8 andArea:(int)fp12 initWithFieldIfAbsent:(int)fp16;
- (void)setSearchField:(int)fp8 forString:(id)fp12 andArea:(int)fp16;
- (void)pruneOldHistoryItems;
- (void)writeChangesToDisk:(id)fp8;
- (void)cleanUpAndCommitChanges;

@end

@interface CriterionView : ColorBackgroundView <MailboxesChooserCycleDelegate>
{
    CriteriaUIHelper *owner;
    NSButton *removeButton;
    NSButton *addButton;
    NSView *headerCriteriaView;
    NSView *simpleCriteriaView;
    NSView *accountOrGroupView;
    NSView *mailboxesView;
    NSView *daysOldDatesView;
    NSView *simpleDatesView;
    NSView *daysAgoDatesView;
    NSView *inThelastDaysDatesView;
    NSView *daysAgoRangeDatesView;
    NSView *beforeAfterDatesView;
    NSView *dateRangeDatesView;
    NSView *messageTypeView;
    NSView *textToDoCriteriaView;
    NSView *simpleToDoCriteriaView;
    NSView *toDoCalendarView;
    NSView *toDoDaysAgoView;
    NSView *toDoInTheLastDaysView;
    NSView *toDoDateRangeView;
    NSView *toDoExactDateView;
    NSView *toDoMailboxesView;
    NSView *toDoSimpleDateView;
    NSView *currentView;
    NSPopUpButton *criterionPopUp;
    NSPopUpButton *qualifierPopUp;
    NSTextField *expressionStringField;
    NSTextField *expressionNumberField;
    NSTextField *expressionOtherNumberField;
    NSDatePicker *dateFieldPicker;
    NSDatePicker *otherDateFieldPicker;
    NSPopUpButton *unitsPopUp;
    NSMenu *criterionMenu;
    NSMenu *dateQualifierMenu;
    struct _NSRect defaultCriterionPopupFrame;
    struct _NSRect defaultQualifierPopupFrame;
    struct _NSRect defaultExpressionFieldFrame;
    BOOL isSmartMailboxCriterion;
    NSString *expressionGuess;
    MailboxUid *mailboxBeingEdited;
    int _criterionType;
    int _criterionTypeForOtherArea;
}

- (void)dealloc;
- (int)criterionType;
- (void)setCriterionType:(int)fp8;
- (id)mailboxBeingEdited;
- (void)awakeFromNib;
- (void)setIsSmartMailboxCriterion:(BOOL)fp8 mailbox:(id)fp12;
- (id)menuUsingInfo:(struct menuItemInfo *)fp8 length:(int)fp12;
- (void)configureForCriterion:(id)fp8;
- (id)criterion;
- (void)_setEnglishStringsForPopUpMenuHeaderItems:(id)fp8;
- (void)configureViewForQualifierTag:(int)fp8 criterion:(id)fp12;
- (void)insertBestGuessForExpressionField;
- (id)subcriteriaForRelativeDatesFrom:(int)fp8 to:(int)fp12 units:(int)fp16 criterionType:(int)fp20;
- (id)timeSince1970StringFromDatePicker:(id)fp8 atEndOfDay:(BOOL)fp12;
- (void)putHeaderCriteriaInPopUpMenu;
- (void)populateQualifierPopup;
- (void)qualifierPopupChanged:(id)fp8;
- (void)criterionPopupWillPopup:(id)fp8;
- (void)criterionPopupChanged:(id)fp8;
- (void)makeRemoveButtonEnabled:(BOOL)fp8;
- (void)setExpressionGuess:(id)fp8;
- (void)_mailboxCriterionPopUpChangedSelection:(id)fp8;
- (void)ownerSearchAreaChanged:(id)fp8;

@end

@interface ThunderbirdEmailImporter : FilesystemEmailImporter
{
}

+ (id)name;
+ (id)explanatoryText;
- (id)pathExtension;
- (char *)fromString;

@end

@interface DockCountController : NSObject
{
    MailboxUid *_mailBadgeMailbox;
    int _mailBadgeScope;
}

+ (id)sharedInstance;
- (void)dealloc;
- (id)init;
- (void)clearCountAndStopUpdating;
- (void)_setDockBadgeForCount:(id)fp8;
- (void)_mailboxWillBeInvalidated:(id)fp8;
- (void)_setMailBadgeMailbox:(id)fp8;
- (id)mailBadgeMailbox;
- (void)_updateUnreadCount;
- (void)unreadCountChanged:(id)fp8;
- (int)mailBadgeScope;
- (void)setMailBadgeScope:(int)fp8 mailbox:(id)fp12;

@end

@interface MessageBrowser : SingleMessageViewer
{
    NSMutableArray *_messages;
    unsigned int _includeDeleted:1;
    int _currentIndex;
    int _previousIndex;
    int _nextIndex;
    int _firstIndex;
    int _lastIndex;
    NSMutableDictionary *_messagesByID;
    NSMenu *_previousMenu;
    NSMenu *_nextMenu;
}

+ (void)restoreFromDefaults;
+ (id)browserForMessages:(id)fp8 isSortedAscending:(BOOL)fp12 includeDeleted:(BOOL)fp16;
- (id)initWithSavedDefaults:(id)fp8;
- (id)_saveDefaults;
- (void)_setupFromDefaults;
- (void)dealloc;
- (BOOL)_validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateToolbarItem:(id)fp8;
- (BOOL)replaceWithEditorForType:(int)fp8;
- (void)_close;
- (int)_newCurrentIndexFromCurrentIndex:(int)fp8;
- (void)messageFlagsDidChange:(id)fp8;
- (void)messagesCompacted:(id)fp8;
- (void)_reallyRedeleteMessage:(id)fp8;
- (void)_redeleteMessage:(id)fp8;
- (void)_reallyUndeleteMessage:(id)fp8;
- (void)_undeleteMessage:(id)fp8;
- (void)_reallyDeleteMessage:(id)fp8 allowMoveToTrash:(BOOL)fp12;
- (void)deleteMessagesAllowingMoveToTrash:(BOOL)fp8;
- (void)setupToolbar;
- (void)showNextMessage:(id)fp8;
- (void)showPreviousMessage:(id)fp8;
- (void)showFirstMessage:(id)fp8;
- (void)keyDown:(id)fp8;
- (id)_initWithMessages:(id)fp8 isSortedAscending:(BOOL)fp12 includeDeleted:(BOOL)fp16;
- (void)_showMessage:(id)fp8;
- (void)_menuItemSelected:(id)fp8;
- (id)_imageForMessage:(id)fp8;
- (void)_addMessage:(id)fp8 toMenu:(id)fp12;
- (void)_updateMenuItemImagesForMenu:(id)fp8;
- (void)_updatePreviousNextMenuItemImages;
- (BOOL)_shouldDisplayMessage:(id)fp8;
- (void)_updatePreviousNextMenus;
- (void)_updateFirstAndLastIndex;
- (void)_nextMessageIndex:(int *)fp8 previousIndex:(int *)fp12 fromCurrentIndex:(int)fp16;
- (void)_updatePreviousAndNextIndex;
- (void)_showMessageAtIndex:(int)fp8;
- (BOOL)_isMessageIndexValid:(int)fp8;
- (int)_firstMessageIndex;
- (int)_lastMessageIndex;
- (int)_previousMessageIndex;
- (int)_nextMessageIndex;
- (void)_showFirstMessage;
- (void)_showLastMessage;
- (void)_showPreviousMessage;
- (void)_showNextMessage;

@end

@interface DocumentEditor : NSObject
{
    WebViewEditor *webViewEditor;
    HeadersEditor *headersEditor;
    NSWindow *_window;
    EditingMessageWebView *composeWebView;
    ComposeBackEnd *_backEnd;
    NSToolbar *_toolbar;
    NSMutableDictionary *_toolbarItems;
    EditingWebMessageController *webMessageController;
    LoadingOverlay *loadingOverlay;
    NSDictionary *settings;
    struct {
        unsigned int userSavedMessage:1;
        unsigned int userWantsToCloseWindow:1;
        unsigned int userKnowsSaveFailed:1;
        unsigned int registeredForNotifications:1;
        unsigned int alwaysSave:1;
        unsigned int userCanApplyStationery:1;
        unsigned int autoShowEditor:1;
        unsigned int isLoaded:1;
        unsigned int isAutoSaving:1;
    } _flags;
    int _messageType;
    struct _NSPoint _originalCascadePoint;
    NSMutableDictionary *_bodiesByAttachmentURL;
    NSOperationQueue *operationQueue;
    NSOperation *loadInterfaceOperation;
    NSOperation *showInterfaceOperation;
    NSOperation *prepareContentOperation;
    NSOperation *loadInitialDocumentOperation;
    NSOperation *finishLoadingEditorOperation;
    id _loadDelegate;
}

+ (void)initialize;
+ (id)autoSaveTimer;
+ (void)setAutosaveTimer:(id)fp8;
+ (id)_documentEditors;
+ (id)documentEditors;
+ (id)typedDocumentEditors;
+ (void)registerDocumentEditor:(id)fp8;
+ (void)unregisterDocumentEditor:(id)fp8;
+ (int)documentType;
+ (id)documentWebPreferences;
+ (id)existingEditorForMessage:(id)fp8 editorClass:(Class)fp12;
+ (id)editorsForDocumentID:(id)fp8 editorClass:(Class)fp12;
+ (id)existingEditorForMessage:(id)fp8;
+ (void)saveDefaults;
+ (void)restoreFromDefaults;
+ (void)showEditorWithSavedState:(id)fp8;
+ (void)setNeedsAutosave;
+ (void)autoSaveTimerFired;
- (id)documentID;
- (BOOL)isEditingDocumentID:(id)fp8;
- (id)description;
- (id)initWithType:(int)fp8 settings:(id)fp12 backEnd:(id)fp16;
- (BOOL)isLoaded;
- (void)setLoaded:(BOOL)fp8;
- (BOOL)isAutoSaving;
- (BOOL)load;
- (id)loadInterfaceOperation;
- (id)showInterfaceOperation;
- (id)prepareContentOperation;
- (id)loadInitialDocumentOperation;
- (void)loadInitialDocument;
- (id)finishLoadingEditorOperation;
- (BOOL)isFinishedLoading;
- (void)markFinishedLoading;
- (void)performOperationAfterLoad:(id)fp8;
- (void)finishLoadingEditor;
- (void)setShowInterfaceOperation:(id)fp8;
- (void)setLoadInterfaceOperation:(id)fp8;
- (void)setPrepareContentOperation:(id)fp8;
- (void)setLoadInitialDocumentOperation:(id)fp8;
- (void)setFinishLoadingEditorOperation:(id)fp8;
- (Class)backEndClass;
- (void)release;
- (void)dealloc;
- (BOOL)loadEditorNib;
- (id)operationQueue;
- (void)setOperationQueue:(id)fp8;
- (int)editorSharedNib;
- (void)show;
- (void)setHeaders:(id)fp8;
- (id)backEnd;
- (void)setBackEnd:(id)fp8;
- (id)webViewEditor;
- (id)headersEditor;
- (id)webMessageDocument;
- (id)toolbar;
- (id)window;
- (BOOL)autoShowEditor;
- (void)setAutoShowEditor:(BOOL)fp8;
- (BOOL)userCanApplyStationery;
- (void)setUserCanApplyStationery:(BOOL)fp8;
- (BOOL)wantsToClose;
- (void)setWantsToClose:(BOOL)fp8;
- (void)readDefaultsFromDictionary:(id)fp8;
- (void)writeDefaultsToDictionary:(id)fp8;
- (void)saveState;
- (void)_appendDefaultsToArray:(id)fp8;
- (id)_frameSaveName;
- (void)prepareContent;
- (void)backEndDidLoadInitialContent:(id)fp8;
- (id)webArchiveFromSettings:(id)fp8;
- (void)continueLoadingInitialContent;
- (void)postDocumentEditorDidFinishSetup;
- (void)_registerForNotificationsIfNeeded;
- (void)_setupSpellingAndGrammarChecking;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (void)backEnd:(id)fp8 didBeginBackgroundLoadActivity:(id)fp12;
- (void)loadingOverlayDidEnd:(id)fp8 returnCode:(int)fp12;
- (BOOL)autoSave;
- (BOOL)canSave;
- (BOOL)shouldSave;
- (void)saveMessageDueToUserAction:(BOOL)fp8;
- (void)backEnd:(id)fp8 willCreateMessageWithHeaders:(id)fp12;
- (BOOL)backEnd:(id)fp8 shouldSaveMessage:(id)fp12;
- (void)setUserSavedMessage:(BOOL)fp8;
- (BOOL)hasChanges;
- (void)reportSaveFailure:(id)fp8;
- (id)associatedMessage;
- (void)backEnd:(id)fp8 didUpdateMessage:(id)fp12;
- (void)backEndDidSaveMessage:(id)fp8 result:(int)fp12;
- (void)backEndDidChange:(id)fp8;
- (void)webViewDidChange:(id)fp8;
- (void)updateWindowContent;
- (void)updateUIAfterAppleScriptModification:(id)fp8;
- (void)composePrefsChanged;
- (void)mailAttachmentsAdded:(id)fp8;
- (void)openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)mimeBodyForAttachmentWithURL:(id)fp8;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (void)makeRichText:(id)fp8;
- (void)makePlainText:(id)fp8;
- (void)toggleRich:(id)fp8;
- (void)insertNumberedList:(id)fp8;
- (void)insertBulletedList:(id)fp8;
- (void)convertToNumberedList:(id)fp8;
- (void)convertToBulletedList:(id)fp8;
- (void)increaseListNestingLevel:(id)fp8;
- (void)decreaseListNestingLevel:(id)fp8;
- (void)saveDocument:(id)fp8;
- (void)saveChangedDocument:(id)fp8;
- (void)saveMessageToDrafts:(id)fp8;
- (void)performClose:(id)fp8;
- (void)messageSizeDidChange:(id)fp8;
- (void)insertFile:(id)fp8;
- (void)removeAttachments:(id)fp8;
- (void)createToDo:(id)fp8;
- (void)changeTextEncoding:(id)fp8;
- (void)showPrintPanel:(id)fp8;
- (void)searchIndex:(id)fp8;
- (void)changeSpellCheckingBehavior:(id)fp8;
- (void)toggleCheckGrammarWithSpelling:(id)fp8;
- (void)showAddressPanel:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)windowDidMove:(id)fp8;
- (id)shouldSaveTitle;
- (id)shouldSaveDescription;
- (id)shouldSaveHelptag;
- (void)beginDocumentMove;
- (void)endDocumentMove;
- (void)documentsWillBeginTransfer:(id)fp8;
- (void)documentsDidEndTransfer:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)forceClose;
- (void)closeConfirmSheetDidEnd:(id)fp8 returnCode:(int)fp12 forSave:(void *)fp16;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (id)loadDelegate;
- (void)setLoadDelegate:(id)fp8;
- (id)settings;
- (void)setSettings:(id)fp8;

@end

@interface DocumentEditor (DocumentEditorToolbar)
- (BOOL)validateToolbarItem:(id)fp8;
- (void)setupToolbar;
- (id)toolbarIdentifier;
- (void)_synchronizeChangeReplyItem:(id)fp8 messageType:(int)fp12;
- (void)toggleReplyType:(int)fp8;
- (void)updateSendButtonStateInToolbar;
- (void)toolbarWillAddItem:(id)fp8;
- (void)configureSegmentedItem:(id)fp8 withDictionary:(id)fp12 forSegment:(int)fp16;
- (id)previousIdentifierForUpgradingToolbar:(id)fp8;
- (id)toolbar:(id)fp8 upgradedItemIdentifiers:(id)fp12;
- (id)toolbar:(id)fp8 itemForItemIdentifier:(id)fp12 willBeInsertedIntoToolbar:(BOOL)fp16;
- (id)toolbarDefaultItemIdentifiers:(id)fp8;
- (id)toolbarAllowedItemIdentifiers:(id)fp8;
- (id)menuForListsItem;
@end

@interface HeadersEditor : NSObject <AccountStatusDataSourceDelegate>
{
    MailDocumentEditor *documentEditor;
    OldCompletionController *completionController;
    ComposeHeaderView *composeHeaderView;
    NSPopUpButton *fromPopup;
    NSPopUpButton *signaturePopup;
    NSPopUpButton *priorityPopup;
    NSButton *signButton;
    NSButton *encryptButton;
    AccountStatusDataSource *_deliveryASDS;
    NSPopUpButton *deliveryPopUp;
    AddressTextField *toField;
    AddressTextField *ccField;
    NSTextField *subjectField;
    AddressTextField *bccField;
    AddressTextField *replyToField;
    DraggingTextView *addressFieldEditor;
    NSMutableArray *accessoryViewOwners;
    BOOL chatShouldBeEnabled;
    BOOL _hasChanges;
}

- (void)setUpFieldsAndButtons;
- (void)finishSetUp;
- (void)setAGoodFirstResponder;
- (void)configureButtonsAndPopUps;
- (void)initializePriorityPopUp;
- (void)composePrefsChanged;
- (void)mailAccountsDidChange;
- (void)accountInfoDidChange:(id)fp8;
- (void)windowDidBecomeKey:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)updatePriorityPopUpMakeActive:(BOOL)fp8;
- (void)updateSecurityControls;
- (void)updateSignButtonImages;
- (void)updateSignButtonTooltip;
- (void)updateEncryptButtonImages;
- (void)updateEncryptButtonTooltip;
- (void)updateFromAndSignatureControls;
- (void)updateSignatureControlOverridingExistingSignature:(BOOL)fp8;
- (void)updateDeliveryAccountControl;
- (void)configureDeliveryPopupButton;
- (float)deliveryPopUpSizeToFitWidth;
- (void)updateCcOrBccMyselfFieldWithSender:(id)fp8 oldSender:(id)fp12;
- (void)updatePresenceButtonState;
- (void)presenceChanged:(id)fp8;
- (void)presencePreferenceChanged:(id)fp8;
- (void)updatePresenceButtonStateForAddresses:(id)fp8;
- (void)webViewDidLoadStationery:(id)fp8;
- (void)setupAddressField:(id)fp8;
- (void)_setupField:(id)fp8 withAddressesForKey:(id)fp12 visibleSelector:(SEL)fp16;
- (void)_configureTextField:(id)fp8 isAddressField:(BOOL)fp12;
- (id)fieldForHeader:(id)fp8;
- (id)headerKeyForView:(id)fp8;
- (void)enableCompletion:(BOOL)fp8 forTextField:(id)fp12;
- (void)loadHeadersFromBackEnd;
- (void)textFieldBeganOrEndedEditing:(id)fp8;
- (void)recipientsDidChange:(id)fp8;
- (void)subjectChanged;
- (void)addressFieldChanged;
- (BOOL)headerFieldIsNonEmpty:(id)fp8;
- (id)windowWillReturnFieldEditor:(id)fp8 toObject:(id)fp12;
- (void)setHeaders:(id)fp8;
- (void)appendAddresses:(id)fp8 toHeader:(id)fp12;
- (void)setInlineSpellCheckingEnabled:(BOOL)fp8;
- (void)setCheckGrammarWithSpelling:(BOOL)fp8;
- (void)turnOffEncryption;
- (void)changeSignatureFrom:(id)fp8 to:(id)fp12;
- (BOOL)messageIsToBeSigned;
- (BOOL)messageIsToBeEncrypted;
- (BOOL)messageHasRecipients;
- (BOOL)canSignFromAnyAccount;
- (BOOL)chatShouldBeEnabled;
- (BOOL)isOkayToSaveMessage:(id)fp8;
- (void)editServerList:(id)fp8 selectedAccount:(id)fp12;
- (void)toggleAccountLock:(id)fp8;
- (void)setSelectedAccount:(id)fp8;
- (void)setDeliveryAccount:(id)fp8;
- (id)deliveryAccount;
- (id)mailAccount;
- (void)accountStatusDidChange:(id)fp8;
- (void)changeHeaderField:(id)fp8;
- (void)changeFromHeader:(id)fp8;
- (void)setMessagePriority:(id)fp8;
- (void)securityControlChanged:(id)fp8;
- (void)_recipientsWithoutKeysSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)chatWithRecipients:(id)fp8;
- (void)editSignatures:(id)fp8;
- (void)changeSignature:(id)fp8;
- (void)composeHeaderViewWillBeginCustomization:(id)fp8;
- (void)composeHeaderViewDidEndCustomization:(id)fp8;
- (BOOL)headerCustomizationIsInProgress;
- (void)addCcHeader:(id)fp8;
- (void)addBccHeader:(id)fp8;
- (void)addReplyToHeader:(id)fp8;
- (void)_clearFieldIfHidden:(id)fp8;
- (void)prepareToCloseWindow;
- (void)dealloc;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)validateToolbarItem:(id)fp8;
- (id)senderMarkupStringIncludeBrackets:(BOOL)fp8;
- (BOOL)hasChanges;
- (void)setHasChanges:(BOOL)fp8;

@end

@interface MailDocumentEditor : DocumentEditor
{
    DeliveryFailure *deliveryFailure;
    ColorBackgroundView *stationeryPane;
    StationerySelector *stationerySelector;
    NSTextField *stationeryNameTextField;
    NSButton *stationeryNameSaveButton;
    ColorBackgroundView *borderView;
    NSScroller *fakeScroller;
    NSViewAnimation *stationeryPaneAnimator;
    StationeryAnimator *stationeryTransitionAnimator;
    BOOL shouldAnimateTransitions;
    NSView *imageStatusView;
    NSTextField *imageFileSizeLabel;
    NSTextField *imageFileSizeTextField;
    NSPopUpButton *imageSizePopup;
    NSProgressIndicator *imageResizingProgressWheel;
    NSTextField *imageResizingProgressField;
    NSMutableArray *_imageResizers;
    unsigned int _textLengthForLastEstimatedMessageSize;
    unsigned int _signatureOverhead;
    unsigned int _encryptionOverhead;
    BOOL sendWhenFinishLoading;
    BOOL showAllHeaders;
    BOOL hasIncludedAttachmentsFromOriginal;
    NSMutableArray *_unapprovedRecipients;
    NSMutableArray *userActionQueue;
    Stationery *_stationeryWaitingToBeLoaded;
}

+ (int)documentType;
+ (id)documentEditors;
+ (id)createEditorWithType:(int)fp8 settings:(id)fp12;
+ (void)restoreDraftMessage:(id)fp8 withSavedState:(id)fp12;
+ (void)emailAddressesApproved:(id)fp8;
+ (void)emailsRejected:(id)fp8;
+ (void)_emailAddresses:(id)fp8 approvedOrRejected:(BOOL)fp12;
+ (void)handleFailedDeliveryOfMessage:(id)fp8 store:(id)fp12 error:(id)fp16;
- (id)init;
- (id)initWithBackEnd:(id)fp8;
- (id)initWithType:(int)fp8 settings:(id)fp12;
- (id)initWithType:(int)fp8 settings:(id)fp12 backEnd:(id)fp16;
- (BOOL)load;
- (void)finishLoadingEditor;
- (void)dealloc;
- (void)show;
- (int)messageType;
- (void)changeReplyMode:(id)fp8;
- (void)replyMessage:(id)fp8;
- (void)replyAllMessage:(id)fp8;
- (void)loadInitialDocument;
- (void)backEndDidLoadInitialContent:(id)fp8;
- (void)attachmentFinishedDownloading:(id)fp8;
- (id)document;
- (id)webView;
- (id)webArchiveFromSettings:(id)fp8;
- (void)continueLoadingInitialContent;
- (float)animationDuration;
- (void)showOrHideStationery:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (BOOL)stationeryPaneIsVisible;
- (id)currentStationery;
- (void)setStationeryWaitingToBeLoaded:(id)fp8;
- (void)loadStationery:(id)fp8;
- (void)stationeryAnimatorDidFinishAnimating;
- (void)loadStationery:(id)fp8 animate:(BOOL)fp12;
- (void)saveAsStationery:(id)fp8;
- (void)continueSaveAsStationery:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)controlTextDidChange:(id)fp8;
- (void)cancelSaveAsStationery:(id)fp8;
- (void)saveSaveAsStationery:(id)fp8;
- (void)saveAsStationeryErrorSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)queueUserAction:(id)fp8;
- (void)handleQueuedUserActions;
- (BOOL)canSave;
- (void)saveMessageToDrafts:(id)fp8;
- (void)backEnd:(id)fp8 willCreateMessageWithHeaders:(id)fp12;
- (BOOL)backEnd:(id)fp8 shouldSaveMessage:(id)fp12;
- (void)backEndDidChange:(id)fp8;
- (void)backEndSenderDidChange:(id)fp8;
- (void)removeAttachments:(id)fp8;
- (void)createToDo:(id)fp8;
- (void)insertOriginalAttachments:(id)fp8;
- (BOOL)_restoreOriginalAttachments;
- (void)alwaysSendWindowsFriendlyAttachments:(id)fp8;
- (void)sendWindowsFriendlyAttachments:(id)fp8;
- (void)_setSendWindowsFriendlyAttachments:(BOOL)fp8;
- (void)alwaysAttachFilesAtEnd:(id)fp8;
- (void)attachFilesAtEnd:(id)fp8;
- (void)insertFile:(id)fp8;
- (void)openPanelSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)_sendButtonShouldBeEnabled;
- (void)_setUnapprovedRecipients:(id)fp8;
- (void)askApprovalSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)send:(id)fp8;
- (void)sendMessageAfterChecking:(id)fp8;
- (void)backEndDidCancelMessageDeliveryForAttachmentError:(id)fp8;
- (void)attachmentErrorSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)cancelSendingStationery:(id)fp8;
- (void)continueSendingStationery:(id)fp8;
- (void)emptyMessageSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)malformedAddressSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)noRecipientsSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)backEndDidAppendMessageToOutbox:(id)fp8 result:(int)fp12;
- (BOOL)backEnd:(id)fp8 shouldDeliverMessage:(id)fp12;
- (void)_setMessageStatusOnOriginalMessage;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForError:(id)fp12;
- (void)reportDeliveryFailure:(id)fp8;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForMissingCertificatesForRecipients:(id)fp12;
- (id)missingCertificatesMessageForRecipients:(id)fp8 uponDelivery:(BOOL)fp12;
- (void)backEnd:(id)fp8 didCancelMessageDeliveryForEncryptionError:(id)fp12;
- (void)shouldDeliverMessageAlertWithoutEncryptionSheetDidDismiss:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)setDeliveryAccount:(id)fp8;
- (id)deliveryAccount;
- (void)changeSignature:(id)fp8;
- (void)imageSizePopupChanged:(id)fp8;
- (void)messageSizeDidChange:(id)fp8;
- (void)encryptionStatusDidChange;
- (void)updateAttachmentStatus;
- (unsigned char)_isAttachmentScalable:(id)fp8;
- (unsigned char)_attachmentsContainScalableImage:(id)fp8 scalables:(id)fp12;
- (void)_updateImageSizePopup;
- (BOOL)_imageStatusHidden;
- (void)_showImageStatusView;
- (void)_hideImageStatusView;
- (struct _NSSize)_imageSizeForTag:(int)fp8;
- (struct _NSSize)_selectedImageSize;
- (id)_maxImageSizeAsString;
- (void)_processNextImageResizer;
- (void)_ImageResizeDidFinish:(id)fp8;
- (BOOL)_isResizingImages;
- (id)_resizerForAttatchment:(id)fp8;
- (BOOL)_resizeAttachment:(id)fp8;
- (BOOL)_resizeImageAttachments:(id)fp8;
- (unsigned long long)textLengthEstimate;
- (unsigned int)_signatureOverhead;
- (unsigned int)_encryptionOverhead;
- (unsigned long long)_estimateMessageSize;
- (void)_saveImageSizeToDefaults;
- (void)_setImageSizePopupToSize:(id)fp8;
- (id)attachmentStatusNeighbourView;
- (void)_mailAttachmentsDeleted;
- (void)mailAttachmentsDeleted:(id)fp8;
- (void)mailAttachmentsAdded:(id)fp8;
- (BOOL)windowShouldClose:(id)fp8;
- (void)appendMessages:(id)fp8;
- (void)appendMessageArray:(id)fp8;
- (void)_appendMessages:(id)fp8 withWebArchives:(id)fp12;
- (void)_generateWebArchivesToAppendForMessages:(id)fp8;
- (void)makeRichText:(id)fp8;
- (void)makePlainText:(id)fp8;
- (void)makeFontBigger:(id)fp8;
- (void)makeFontSmaller:(id)fp8;
- (void)addCcHeader:(id)fp8;
- (void)addBccHeader:(id)fp8;
- (void)addReplyToHeader:(id)fp8;
- (void)setMessagePriority:(id)fp8;

@end

@interface MailWebViewEditor : WebViewEditor <DOMEventListener>
{
    BOOL needToFinishMakingPlainAfterRemovingStationery;
    NSArray *backgroundTilingElements;
    NSArray *backgroundTilingDivs;
    NSArray *backgroundTilingFixedSizes;
    NSMutableArray *uneditedEditableElements;
    NSMutableArray *editedEditableElements;
    DOMNode *editableElementWithMouseDown;
    BOOL shouldAttachFilesAtEnd;
}

- (id)insertablePasteboardTypes;
- (void)prepareToGoAway;
- (void)dealloc;
- (void)setUp;
- (void)setBackEnd:(id)fp8;
- (BOOL)allowQuoting;
- (void)setAllowsRichText:(BOOL)fp8;
- (id)alertForConvertingToRichText;
- (BOOL)webView:(id)fp8 shouldInsertAttachments:(id)fp12 context:(id)fp16;
- (BOOL)isOkayToLoadStationery;
- (void)continueCannotInsertStationery:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)shouldAttachFilesAtEnd;
- (void)_insertAttributedStringOfAttachments:(id)fp8 allAttachmentsAreOkay:(BOOL)fp12;
- (void)continueShouldInsertAttachments:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)isOkayToInsertAttachment:(id)fp8;
- (void)insertAttributedStringOfAttachments:(id)fp8 allAttachmentsAreOkay:(BOOL)fp12;
- (void)continueInsertAttributedStringOfAttachments:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)webView:(id)fp8 canInsertFromPasteboard:(id)fp12 forDrag:(BOOL)fp16;
- (void)prepareToRemoveStationery;
- (void)webViewDidLoadStationery:(id)fp8;
- (void)stationeryDidFinishLoadingResources:(id)fp8;
- (void)handleEvent:(id)fp8;
- (void)doOrUndoEditingInSignatureWithInfo:(id)fp8;
- (id)editedEditableElements;
- (void)mouseDownDidHappen:(id)fp8 inWebView:(id)fp12;
- (void)mouseUpDidHappen:(id)fp8 inWebView:(id)fp12;
- (void)webViewDidChange:(id)fp8;
- (id)replaceOldSignatureWithNewSignature:(id)fp8;
- (void)webViewDidChangeSelection:(id)fp8;
- (BOOL)webView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (BOOL)insertNewline:(id)fp8;
- (void)webView:(id)fp8 didWriteSelectionToPasteboard:(id)fp12;
- (void)changeDocumentBackgroundColorWithContext:(id)fp8;
- (void)continueChangeDocumentBackgroundColor:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (id)backgroundTilingFixedSizes;
- (void)setBackgroundTilingFixedSizes:(id)fp8;
- (id)backgroundTilingDivs;
- (void)setBackgroundTilingDivs:(id)fp8;
- (id)backgroundTilingElements;
- (void)setBackgroundTilingElements:(id)fp8;
- (void)setShouldAttachFilesAtEnd:(BOOL)fp8;

@end

@interface WebViewEditor : NSObject
{
    EditingMessageWebView *webView;
    DocumentEditor *documentEditor;
    ComposeBackEnd *backEnd;
    HyperlinkEditor *hyperlinkEditor;
    EditingWebMessageController *messageController;
    WebFrame *frameAllowedToLoadContent;
    NSArray *attachmentsForContextualMenu;
    BOOL finalSpellCheckingIsInProgress;
    NSMutableSet *largeFilesAddedWhileEditing;
    BOOL containsRichText;
    BOOL containsRichTextFlagIsValid;
    BOOL needToCheckRichnessInRange;
    NSDictionary *infoForRichnessTest;
}

- (id)init;
- (void)dealloc;
- (void)earlySetUp;
- (void)setUp;
- (void)close;
- (id)webView;
- (BOOL)useDesignMode;
- (id)documentEditor;
- (void)setBackEnd:(id)fp8;
- (id)document;
- (void)setMessageController:(id)fp8;
- (void)setFrameAllowedToLoadContent:(id)fp8;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)setInlineSpellCheckingEnabled:(BOOL)fp8;
- (void)setCheckGrammarWithSpelling:(BOOL)fp8;
- (BOOL)startFinalSpellCheck;
- (void)endFinalSpellCheck;
- (void)finalSpellCheckCompleted:(id)fp8;
- (void)setFinalSpellCheckingIsInProgress:(BOOL)fp8;
- (BOOL)finalSpellCheckingIsInProgress;
- (void)updateIgnoredWordsForHeader:(id)fp8;
- (BOOL)validateUserInterfaceItem:(id)fp8;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (void)_editLink;
- (void)editLink;
- (void)continueEditLink:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)removeSelectedLink;
- (void)insertList:(id)fp8;
- (BOOL)allowQuoting;
- (void)increaseIndentation;
- (void)decreaseIndentation;
- (void)changeIndentationIfAllowed:(int)fp8;
- (void)continueChangeIndentation:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)selectionIsInList;
- (BOOL)selectionIsInListType:(id)fp8;
- (BOOL)selectionIsInEmptyListItem;
- (void)insertNumberedList:(id)fp8;
- (void)insertBulletedList:(id)fp8;
- (void)_insertListWithNumbers:(BOOL)fp8 undoTitle:(id)fp12;
- (void)insertListWithNumbers:(BOOL)fp8 undoTitle:(id)fp12;
- (void)continueInsertListWithNumbers:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (void)convertToNumberedList:(id)fp8;
- (void)convertToBulletedList:(id)fp8;
- (void)convertListFromType:(id)fp8 toType:(id)fp12 undoTitle:(id)fp16;
- (void)increaseListNestingLevel:(id)fp8;
- (void)decreaseListNestingLevel:(id)fp8;
- (void)_setFloat:(id)fp8 ofNode:(id)fp12 inView:(id)fp16 undoTitle:(id)fp20;
- (void)setFloat:(id)fp8 ofNode:(id)fp12 inView:(id)fp16 undoTitle:(id)fp20;
- (void)continueSetFloat:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)webView:(id)fp8 shouldShowDeleteInterfaceForElement:(id)fp12;
- (BOOL)webView:(id)fp8 canInsertFromPasteboard:(id)fp12 forDrag:(BOOL)fp16;
- (BOOL)allowsRichText;
- (void)removeAllFormattingFromWebView;
- (void)setAllowsRichText:(BOOL)fp8;
- (BOOL)containsRichText;
- (void)setContainsRichText:(BOOL)fp8;
- (void)invalidateRichTextCache;
- (void)changeSendFormatInBackEndAndView:(int)fp8;
- (void)checkRichnessForEditedRange:(id)fp8;
- (BOOL)webView:(id)fp8 shouldDeleteDOMRange:(id)fp12;
- (void)webViewDidInsertRichText:(id)fp8;
- (BOOL)webView:(id)fp8 shouldApplyStyle:(id)fp12 toElementsInDOMRange:(id)fp16;
- (void)continueShouldApplyStyle:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (id)alertForConvertingToRichText;
- (void)beginConvertToRichTextAlert:(id)fp8 context:(id)fp12;
- (void)convertToRichAlertDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)isSelectionEditable;
- (void)appendFragment:(id)fp8 toDocument:(id)fp12 asQuote:(BOOL)fp16;
- (void)appendWebArchive:(id)fp8 toDocument:(id)fp12 asQuote:(BOOL)fp16;
- (void)appendAttributedString:(id)fp8 toDocument:(id)fp12 asQuote:(BOOL)fp16;
- (BOOL)webView:(id)fp8 shouldInsertText:(id)fp12 replacingDOMRange:(id)fp16 givenAction:(int)fp20;
- (BOOL)webView:(id)fp8 shouldInsertNode:(id)fp12 replacingDOMRange:(id)fp16 givenAction:(int)fp20;
- (void)webViewDidChange:(id)fp8;
- (BOOL)webView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (id)validRangeFromSelection:(id)fp8;
- (id)webView:(id)fp8 shouldReplaceSelectionWithWebArchive:(id)fp12 givenAction:(int)fp16;
- (BOOL)webView:(id)fp8 shouldInsertAttachments:(id)fp12 context:(id)fp16;
- (void)webView:(id)fp8 didAddMailAttachment:(id)fp12;
- (void)webView:(id)fp8 willRemoveMailAttachment:(id)fp12;
- (BOOL)removeAttachmentsLeavingPlaceholder:(BOOL)fp8;
- (void)replaceRiskyAttachmentsWithLinks;
- (id)selectedAttachments;
- (id)attachmentForEvent:(id)fp8;
- (id)selectedAttachmentNode;
- (id)directoryForAttachment:(id)fp8;
- (void)removeAttachments:(id)fp8;
- (void)viewAttachments:(id)fp8 inLine:(BOOL)fp12;
- (void)redisplayChangedAttachment:(id)fp8;
- (void)addFileWrappersForPaths:(id)fp8;
- (void)insertAttributedStringOfAttachments:(id)fp8 allAttachmentsAreOkay:(BOOL)fp12;
- (BOOL)isOkayToInsertAttachment:(id)fp8;
- (void)pasteAsMarkup;
- (void)saveDocument:(id)fp8;
- (void)saveChangedDocument:(id)fp8;
- (id)largeFilesAddedWhileEditing;
- (void)largeFileAdded:(id)fp8;
- (void)webViewWillStartLiveResize:(id)fp8;
- (void)webViewDidEndLiveResize:(id)fp8;
- (id)infoForRichnessTest;
- (void)setInfoForRichnessTest:(id)fp8;

@end

@interface MessageListColumnManager : NSObject
{
    BOOL blockSavingColumnPreferences;
    NSArray *tableColumns;
    NSDictionary *viewerPreferences;
}

+ (id)sharedManager;
+ (void)setSharedManager:(id)fp8;
- (id)initWithTableColumns:(id)fp8 viewerPreferences:(id)fp12;
- (void)saveColumnPreferencesToDefaults:(id)fp8;
- (void)takeDefaultsForMailboxes:(id)fp8 isThreaded:(BOOL)fp12 isSearching:(BOOL)fp16 searchTarget:(int)fp20 fromCurrentColumnsInTableView:(id)fp24;
- (id)tableColumnPreferencesForMailboxType:(id)fp8;
- (int)widthAndPosition:(int *)fp8 forColumn:(id)fp12 inTableView:(id)fp16 mailboxes:(id)fp20 isThreaded:(BOOL)fp24 isSearching:(BOOL)fp28;
- (int)widthAndPosition:(int *)fp8 forColumn:(id)fp12 mailboxes:(id)fp16 isThreaded:(BOOL)fp20 isSearching:(BOOL)fp24 locationIsVisible:(BOOL)fp28 rankIsVisible:(BOOL)fp32;
- (id)convertNormalSettingsFromPreleopardDefaults;
- (void)replaceColumn:(int)fp8 byColumn:(int)fp12 inSettings:(id)fp16;
- (void)setColumn:(int)fp8 isVisible:(BOOL)fp12 inSettings:(id)fp16;
- (id)visibleTableColumnSettingsForMailboxes:(id)fp8 multipleMailboxes:(BOOL)fp12 ofType:(id)fp16 withLastViewedDate:(BOOL)fp20 isThreaded:(BOOL)fp24 isSearching:(BOOL)fp28 searchTarget:(int)fp32 searchField:(int)fp36;
- (id)typeOfMailboxes:(id)fp8 multiple:(char *)fp12;
- (id)widthKeyForMailboxType:(id)fp8 isThreaded:(BOOL)fp12 isSearching:(BOOL)fp16 locationIsVisible:(BOOL)fp20 rankIsVisible:(BOOL)fp24;
- (BOOL)columnsList:(id)fp8 containsColumn:(int)fp12;
- (BOOL)column:(id)fp8 isAnAutomaticInsertColumnForMailboxType:(id)fp12 mailboxes:(id)fp16 multipleMailboxes:(BOOL)fp20 isSearching:(BOOL)fp24 searchTarget:(int)fp28 searchField:(int)fp32;
- (BOOL)someMailboxUsesLastViewedDateCriterion:(id)fp8;
- (void)showColumnsInTableView:(id)fp8 allColumns:(id)fp12 forMailboxes:(id)fp16 isThreaded:(BOOL)fp20 threadingHasChanged:(BOOL)fp24;
- (void)showColumnsInTableView:(id)fp8 allColumns:(id)fp12 forSearchTarget:(int)fp16 searchField:(int)fp20 mailboxes:(id)fp24 isThreaded:(BOOL)fp28;
- (void)sizeColumnsToFitInTableView:(id)fp8 forMailboxes:(id)fp12 isThreaded:(BOOL)fp16 threadingDidChange:(BOOL)fp20;
- (void)column:(id)fp8 wasMadeVisible:(BOOL)fp12 inTableView:(id)fp16 forMailboxes:(id)fp20 isSearching:(BOOL)fp24 searchTarget:(int)fp28 searchField:(int)fp32;
- (int)calcUnreadColumnWidth:(id)fp8 forUnreadCountString:(id)fp12;
- (void)setUpUnreadColumnMinWidth:(id)fp8 isThreaded:(BOOL)fp12;
- (void)setupUnreadColumnWidthInTableView:(id)fp8 forMailboxes:(id)fp12 isThreaded:(BOOL)fp16;

@end

@interface MailboxUid (MessageListAdditions)
- (BOOL)smartMailboxUsesLastViewedDate;
@end

@interface ActivityViewController : NSObject
{
    NSTextField *_titleTextField;
    ExpandingSplitView *_splitView;
    ColorBackgroundView *_contentView;
    ColorBackgroundView *_mailActivityView;
    NSButton *_mailActivityViewToggleButton;
    MailVerticalSplitView *_verticalSplitView;
    NSMutableArray *_viewQueue;
    NSMutableSet *_viewsPendingHide;
    NSArray *_activeBackgroundColors;
    NSArray *_inactiveBackgroundColors;
    SplitterAnimation *_splitterAnimation;
    ActivityAggregator *_activityAggregator;
    float _activityViewHeight;
    float _mailActivityViewHeight;
    BOOL _isVisible;
    BOOL _isAwake;
    BOOL _isHidePostponingDisabled;
    BOOL _isViewQueueAnimating;
    BOOL _hasActiveAppearance;
}

- (id)init;
- (void)dealloc;
- (void)unregisterObservedKeyPaths;
- (void)setVerticalSplitView:(id)fp8;
- (void)setSplitterAnimation:(id)fp8;
- (void)setVisible:(BOOL)fp8;
- (void)setVisible:(BOOL)fp8 animate:(BOOL)fp12;
- (void)setViewFrameSize:(id)fp8;
- (void)setViewFrameOrigin:(id)fp8;
- (id)backgroundColorsForContentView;
- (id)backgroundColorForViewQueueIndex:(unsigned int)fp8;
- (void)setHasActiveAppearance:(BOOL)fp8;
- (void)handleWindowKeyOrMainChangeNotification:(id)fp8;
- (void)awakeFromNib;
- (void)configureBackgroundColors;
- (void)configureActivityAggegateViews;
- (void)configureTitleTextField;
- (void)finishAwake;
- (void)toggleDisplay:(id)fp8;
- (void)updateBackgroundColors;
- (void)updateViewsInQueue;
- (void)addViewToQueue:(id)fp8;
- (BOOL)removeViewFromQueue:(id)fp8;
- (void)showView:(id)fp8;
- (void)hideView:(id)fp8;
- (void)popView:(id)fp8;
- (void)hideViews:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)animationDidEnd:(id)fp8;
- (void)splitView:(id)fp8 resizeSubviewsWithOldSize:(struct _NSSize)fp12;
- (float)splitView:(id)fp8 constrainMinCoordinate:(float)fp12 ofSubviewAt:(int)fp16;
- (void)setSplitViewPercentage:(float)fp8 animate:(BOOL)fp12;
- (void)splitViewDidResizeSubviews:(id)fp8;
- (BOOL)isHidePostponingDisabled;
- (void)setIsHidePostponingDisabled:(BOOL)fp8;
- (id)verticalSplitView;
- (BOOL)isVisible;
- (BOOL)isViewQueueAnimating;
- (void)setIsViewQueueAnimating:(BOOL)fp8;
- (BOOL)hasActiveAppearance;
- (id)inactiveBackgroundColors;
- (void)setInactiveBackgroundColors:(id)fp8;
- (id)activeBackgroundColors;
- (void)setActiveBackgroundColors:(id)fp8;

@end

@interface ActivityAggregateView : ColorBackgroundView
{
    NSTextField *_nameTextField;
    NSTextField *_rateTextField;
    NSTextField *_statusTextField;
    NSButton *_stopButton;
    NSProgressIndicator *_progressIndicator;
    float _nameTextFieldSpace;
    float _rateTextFieldSpace;
    float _statusTextFieldSpace;
    float _progressIndicatorSpace;
    NSViewAnimation *_fadeInAnimation;
    NSViewAnimation *_fadeOutAnimation;
    ActivityAggregate *_activityAggregate;
}

- (id)fadeInAnimation;
- (id)fadeOutAnimation;
- (id)activityAggregate;
- (BOOL)yes;
- (void)setActivityAggregate:(id)fp8;
- (void)setHidden:(BOOL)fp8;
- (void)setHidden:(BOOL)fp8 withFade:(BOOL)fp12 duration:(double)fp16 resetAggregate:(BOOL)fp24;
- (void)awakeFromNib;
- (void)prepareForSlumber;
- (void)awakeFromSlumber;
- (void)updateNameTextField;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)hideShowRate;
- (void)frameDidChange:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)dealloc;

@end

@interface RSSArticleDisplay : WebMessageDisplay
{
}

+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
+ (Class)documentClass;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (void)webView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;

@end

@interface NoteComposeBackEnd : ComposeBackEnd
{
    MailAccount *_account;
    NSString *_summary;
    NSString *_creationDateHeader;
    LibraryMessage *_associatedMessage;
    NSString *_backgroundColor;
    NSDictionary *_onLoadToDosByID;
    NSDictionary *_onLoadToDosByPreviousID;
    NSSet *_onLoadDeletedToDoIDs;
}

+ (id)supportedMailboxUidTypes;
- (void)setStateFromBackEnd:(id)fp8;
- (id)summary;
- (void)setSummary:(id)fp8;
- (id)sender;
- (BOOL)preserveAddedArchiveBody;
- (id)backgroundColor;
- (BOOL)defaultFormatIsRich;
- (id)account;
- (id)mailboxUidCreateIfNeeded:(BOOL)fp8;
- (id)generatedSubject;
- (void)setSubject:(id)fp8;
- (void)_backgroundSaveEnded:(id)fp8;
- (void)updateToDosInContent:(id)fp8 documentID:(id)fp12 referencedMessageID:(id)fp16;
- (id)htmlDocumentForSave;
- (id)htmlStringFromRange:(id)fp8 htmlDocument:(id)fp12 removeCustomAttributes:(BOOL)fp16 convertObjectsToImages:(BOOL)fp20 convertEditableElements:(BOOL)fp24;
- (id)outgoingMessageUsingWriter:(id)fp8 contents:(id)fp12 headers:(id)fp16 isDraft:(BOOL)fp20;
- (id)saveTaskName;
- (BOOL)isPaperless;
- (BOOL)hasChanges;
- (BOOL)saveMessage;
- (id)todoDocumentID;
- (BOOL)isEditingMessage:(id)fp8;
- (void)updateDocumentReference:(id)fp8;
- (void)finishPreparingContentWithEditorSettings:(id)fp8;
- (id)description;
- (void)dealloc;
- (id)onLoadDeletedToDoIDs;
- (void)setOnLoadDeletedToDoIDs:(id)fp8;
- (id)onLoadToDosByPreviousID;
- (void)setOnLoadToDosByPreviousID:(id)fp8;
- (id)onLoadToDosByID;
- (void)setOnLoadToDosByID:(id)fp8;
- (void)setBackgroundColor:(id)fp8;
- (id)creationDateHeader;
- (void)setCreationDateHeader:(id)fp8;
- (id)associatedMessage;
- (void)setAssociatedMessage:(id)fp8;
- (void)setAccount:(id)fp8;

@end

@interface NoteDocumentEditor : DocumentEditor
{
    MailDocumentEditor *_mailEditor;
    id _webViewFrameLoadDelegate;
    id _webViewPolicyDelegate;
    id _webViewUIDelegate;
    id _webViewDownloadDelegate;
    id _webViewResourceLoadDelegate;
    struct {
        unsigned int isFirstView:1;
        unsigned int isLastView:1;
        unsigned int isPaperless:1;
        unsigned int isPaused:1;
        unsigned int isClosed:1;
        unsigned int preventClose:1;
        unsigned int otherEditorHasChanges:1;
    } _noteFlags;
}

+ (BOOL)usesCustomScroller;
+ (int)documentType;
+ (id)documentEditors;
+ (id)documentWebPreferences;
+ (void)restoreDraftMessage:(id)fp8 withSavedState:(id)fp12;
+ (id)createEditorWithSettings:(id)fp8;
+ (id)createEditorWithEditor:(id)fp8;
+ (id)editorForNote:(id)fp8;
+ (id)editorWithSettings:(id)fp8;
- (BOOL)otherEditorHasChanges;
- (void)setOtherEditorHasChanges:(BOOL)fp8;
- (BOOL)isFirstView;
- (void)setIsFirstView:(BOOL)fp8;
- (BOOL)isLastView;
- (void)setIsLastView:(BOOL)fp8;
- (BOOL)isPaperless;
- (void)setIsPaperless:(BOOL)fp8;
- (BOOL)isPaused;
- (void)setIsPaused:(BOOL)fp8;
- (BOOL)isClosed;
- (void)setIsClosed:(BOOL)fp8;
- (BOOL)preventClose;
- (void)setPreventClose:(BOOL)fp8;
- (BOOL)isSelectionEditable;
- (BOOL)displayToDoMessageReference;
- (void)showPrintPanel:(id)fp8;
- (void)printOperationDidRun:(id)fp8 success:(BOOL)fp12 contextInfo:(void *)fp16;
- (id)initWithType:(int)fp8 settings:(id)fp12 backEnd:(id)fp16;
- (id)loadInterfaceOperation;
- (void)loadNotePaper;
- (void)finishLoadingEditor;
- (BOOL)windowShouldClose:(id)fp8;
- (void)didLoadNotePaper;
- (BOOL)load;
- (id)documentModifiedNotification;
- (id)editorID;
- (void)documentClosed:(id)fp8;
- (void)documentModified:(id)fp8;
- (void)beginDocumentMove;
- (void)endDocumentMove;
- (id)loadInitialDocumentOperation;
- (id)mailEditor;
- (void)setMailEditor:(id)fp8;
- (void)dealloc;
- (id)shouldSaveTitle;
- (id)shouldSaveDescription;
- (id)shouldSaveHelptag;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (BOOL)validateMenuItem:(id)fp8;
- (BOOL)canSave;
- (BOOL)hasChanges;
- (void)pause;
- (void)resume;
- (void)makePaperbacked;
- (void)addTitleAndFooter;
- (void)webViewDidChange:(id)fp8;
- (void)backupWebViewDelegates;
- (void)restoreWebViewDelegates;
- (id)resource;
- (id)_frameSaveName;
- (id)contentWebFrame;
- (void)composePrefsChanged;
- (void)reportSaveFailure:(id)fp8;
- (void)_mailAccountsDidChange;
- (Class)backEndClass;
- (int)editorSharedNib;
- (id)toolbarIdentifier;
- (void)editorDidLoad:(id)fp8;
- (void)editorFailedLoad:(id)fp8;
- (void)show;
- (void)forceClose;
- (void)backEndDidLoadInitialContent:(id)fp8;
- (void)themeWebFrameScrollers:(id)fp8;
- (void)send:(id)fp8;
- (BOOL)_sendButtonShouldBeEnabled;

@end

@interface DocumentEditor (NoteDocumentEditorAdditions)
- (id)noteWebViewEditor;
@end

@interface WebFrame (NoWarnings)
- (id)documentScrollView;
@end

@interface NoteScroller : NSScroller
{
}

+ (void)initialize;
+ (float)scrollerWidth;
+ (float)scrollerWidthForControlSize:(unsigned int)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;
- (void)drawKnob;
- (struct _NSRect)adjustRect:(struct _NSRect)fp8 forPart:(unsigned int)fp24;
- (struct _NSRect)rectForPart:(unsigned int)fp8;
- (unsigned int)testPart:(struct _NSPoint)fp8;
- (struct _NSRect)_drawingRectForPart:(unsigned int)fp8;

@end

@interface NoteScrollBarsView : WebDynamicScrollBarsView
{
}

+ (Class)_verticalScrollerClass;
- (void)setDrawsBackground:(BOOL)fp8;

@end

@interface NoteWindow : TypeAheadWindow
{
}

- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (BOOL)isFloating;
- (void)setIsFloating:(BOOL)fp8;
- (void)setToolbar:(id)fp8;
- (void)makeKeyAndOrderFront:(id)fp8;

@end

@interface NoteWindowContentView : NSView
{
    WebView *_webView;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)awakeFromNib;

@end

@interface ContainerView : NSView
{
    struct CGSize shadowOffset;
    NSColor *marginColor;
    struct CGColor *shadowColor;
    float _minMarginTop;
    float _minMarginBottom;
    float _minMarginLeft;
    float _minMarginRight;
    NSView *_contentView;
}

- (id)contentView;
- (void)setContentView:(id)fp8;
- (float)minMarginTop;
- (void)setMinMarginTop:(float)fp8;
- (float)minMarginBottom;
- (void)setMinMarginBottom:(float)fp8;
- (float)minMarginLeft;
- (void)setMinMarginLeft:(float)fp8;
- (float)minMarginRight;
- (void)setMinMarginRight:(float)fp8;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)drawRect:(struct _NSRect)fp8;
- (void)updateContentFrame:(struct _NSRect)fp8;
- (void)updateContentFrame;
- (void)setFrame:(struct _NSRect)fp8;

@end

@interface NoteDisplay : NSObject <MessageContentDisplay>
{
    WebView *noteView;
    NSScrollView *originalView;
    int displayCount;
}

+ (Class)documentClass;
+ (id)copyDocumentForMessage:(id)fp8 viewingState:(id)fp12;
- (id)initWithDocument:(id)fp8;
- (void)display:(id)fp8 inContainerView:(id)fp12 replacingView:(id)fp16 invokeWhenDisplayChanged:(id)fp20;
- (void)restorePreviousDisplay;
- (void)prepareToRemoveView;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)documentResized;
- (id)contentView;
- (id)textView;
- (id)selectedTextRepresentation;
- (void)setSelectedTextRepresentation:(id)fp8;
- (id)selectedText;
- (id)selectedWebArchive;
- (id)attachmentsInSelection;
- (id)webArchiveBaseURL:(id *)fp8;
- (void)highlightSearchText:(id)fp8;
- (void)adjustFontSizeBy:(int)fp8 viewingState:(id)fp12;
- (id)findTarget;
- (void)updateURLMatches:(id)fp8 viewingState:(id)fp12;
- (struct __CFDictionary *)stringsForURLification;
- (void)detectDataInMessage:(id)fp8 usingContext:(id)fp12;
- (id)originalView;
- (void)setOriginalView:(id)fp8;
- (id)noteView;
- (void)setNoteView:(id)fp8;

@end

@interface NoteView : NSView
{
    WebView *_webView;
}

+ (float)margin;
+ (BOOL)isNoteURL:(id)fp8;
+ (BOOL)isToDoURL:(id)fp8;
+ (float)ruleHeight;
+ (id)ruleColor;
+ (id)opaqueRuleColor;
+ (id)stationeryRuleGIF;
+ (void)setStationeryRuleGIFData:(id)fp8;
+ (id)stationeryPaddingTop;
+ (void)setStationeryPaddingTop:(id)fp8;
+ (id)ruleImageSize:(struct _NSSize)fp8 width:(float)fp16 color:(id)fp20 type:(unsigned int)fp24;
+ (id)ruleImageStringForHeight:(id)fp8;
+ (void)updateFontAndRule:(id)fp8;
- (id)webView;
- (void)setWebView:(id)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (void)dealloc;

@end

@interface ToDoAlarmView : NSView
{
    ToDoAlarmViewController *_alarmViewController;
    ToDoPlusMinusButton *_minusButton;
    NSTextField *_alarmLabel;
    NSPopUpButton *_alarmTypePopUp;
    NSPopUpButton *_dayOffsetTypePopUp;
    NSTextField *_atLabel;
    ToDoDatePicker *_timePicker;
    NSTextField *_numDaysTextEdit;
    ToDoDatePicker *_reminderDatePicker;
    NSPopUpButton *_soundPopUp;
    NSPopUpButton *_emailPopUp;
    NSPopUpButton *_filePopUp;
    ToDoAlarmViewController *_controller;
    int _minimumHeight;
    int _alarmParameterRowHeight;
    int _reminderDatePickerRowHeight;
    int _minusButtonVOffset;
    int _alarmLabelVOffset;
    int _alarmTypePopUpVOffset;
    int _alarmParameterPopUpVOffset;
    int _numDaysTextEditYOffset;
    int _dayOffsetTypeYOffset;
    int _dayOffsetTypeXOffset;
    BOOL _usingExtraSoundPopUpMenuItem;
    BOOL _usingExtraEmailPopUpMenuItem;
    BOOL _usingExtraFilePopUpMenuItem;
    BOOL _enabled;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)finishInitialLayout;
- (id)_disabledTextColor;
- (id)_enabledTextColor;
- (void)drawRect:(struct _NSRect)fp8;
- (id)alarm;
- (void)setAlarm:(id)fp8;
- (BOOL)enabled;
- (void)setEnabled:(BOOL)fp8;
- (id)controller;
- (void)reLayoutWithoutNotification;
- (void)resetKeyViewLoop;
- (id)firstKeyView;
- (id)lastKeyView;
- (void)reLayout;
- (void)adjustSoundMenu;
- (void)adjustEmailMenu;
- (void)adjustFileMenu;
- (void)reconcileFileMenuWithAlarmValue;
- (void)selectAndInsertMenuItemName:(id)fp8 forFilePath:(id)fp12;
- (id)currentDirectoryForFile;

@end

@interface ToDoAlarmView (Internal)
- (void)_updateFilePopUp:(id)fp8;
- (void)_loadDynamicFilesFromDefaults;
- (void)_storeDynamicFilesInDefaults;
- (void)_numberOfDaysChanged:(id)fp8;
@end

@interface ToDoAlarmViewController : NSObject
{
    ToDoAlarmView *_alarmView;
    ToDoAlarm *_alarm;
    NSWindow *_window;
}

- (id)init;
- (id)initWithWindow:(id)fp8;
- (void)dealloc;
- (id)window;
- (id)alarmView;
- (id)alarm;
- (void)setAlarm:(id)fp8;
- (void)changeAlarmType:(id)fp8;
- (void)changeDayOffsetType:(id)fp8;
- (void)changeOffsetDays:(id)fp8;
- (void)changeAlarmTime:(id)fp8;
- (void)changeReminderDate:(id)fp8;
- (void)changeSound:(id)fp8;
- (void)changeEmailAddress:(id)fp8;
- (void)changeFile:(id)fp8;
- (void)selectArbitraryFile:(id)fp8;
- (void)addAlarm:(id)fp8;
- (void)removeAlarm:(id)fp8;

@end

@interface ToDoAlarmViewController (Internal)
- (void)commitFileToOpen:(id)fp8;
- (void)userSelectedFileToOpen:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)alarmChanged:(id)fp8;
- (id)undoManager;
@end

@interface ToDoAlarmView (ForUseByAlarmViewController)
- (void)updateViewForChangedProperties:(unsigned int)fp8;
@end

@interface ToDoBackgroundView : NSView
{
    ToDoOverallController *_overallController;
    NSColor *titleTextColor;
    NSColor *titlebarTopLineColor;
    NSColor *titlebarBottomLineColor;
    CIColor *titlebarTopGradientColor;
    CIColor *titlebarBottomGradientColor;
    NSColor *viewAreaTopLineColor;
    NSColor *viewAreaBottomLineColor;
    CIColor *viewAreaTopGradientColor;
    CIColor *viewAreaBottomGradientColor;
    CIColor *windowBorderColor;
    struct CGRect viewFrame;
    struct CGRect titlebarFrame;
    struct CGPath *_windowClipPath;
    struct CGPath *_borderClipPath;
    NSButton *_dueDateCheckBox;
    NSDatePicker *_dueDatePicker;
    ToDoMultipleAlarmsView *_multipleAlarmsView;
    ToDoPlusMinusButton *_addAlarmButton;
    NSTextField *_addAlarmLabel;
    NSButton *_priorityCheckBox;
    NSPopUpButton *_priorityPopUp;
    NSTextField *_calendarLabel;
    NSPopUpButton *_calendarPopUp;
    BOOL _dueDateSubControlsAreEnabled;
    BOOL _prioritySubControlsAreEnabled;
    int _dueDateControlsSectionHeight;
    int _addAlarmSectionHeight;
    int _priorityAndCalendarControlsSectionHeight;
    int _addAlarmButtonVOffset;
    int _addAlarmLabelVOffset;
    int _priorityCheckBoxVOffset;
    int _priorityPopUpVOffset;
    int _calendarLabelVOffset;
    int _calendarPopUpVOffset;
}

- (void)dealloc;
- (BOOL)isFlipped;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;
- (void)finishInitialLayout;
- (struct CGPath *)windowClipPath;
- (void)setWindowClipPath:(struct CGPath *)fp8;
- (void)setBorderClipPath:(struct CGPath *)fp8;
- (void)setTitleTextColor:(id)fp8;
- (void)setTitlebarTopLineColor:(id)fp8;
- (void)setTitlebarBottomLineColor:(id)fp8;
- (void)setTitlebarTopGradientColor:(id)fp8;
- (void)setTitlebarBottomGradientColor:(id)fp8;
- (void)setViewAreaTopLineColor:(id)fp8;
- (void)setViewAreaBottomLineColor:(id)fp8;
- (void)setViewAreaTopGradientColor:(id)fp8;
- (void)setViewAreaBottomGradientColor:(id)fp8;
- (struct CGPath *)todoRoundedWindowPathForRect:(struct CGRect)fp8;
- (void)updateWindowClipPath;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)drawRect:(struct _NSRect)fp8;
- (void)multipleAlarmsSubViewLayoutChanged:(id)fp8;
- (void)reLayout;
- (BOOL)canBecomeKeyView;
- (BOOL)dueDateSubControlsAreEnabled;
- (void)setDueDateSubControlsAreEnabled:(BOOL)fp8;
- (BOOL)prioritySubControlsAreEnabled;
- (void)setPrioritySubControlsAreEnabled:(BOOL)fp8;
- (id)toDo;
- (void)setToDo:(id)fp8;

@end

@interface ToDoCheckBoxButtonCell : NSButtonCell
{
    NSImageCell *imageCell;
    NSImage *_pressedImage;
    NSImage *_pressedAlternateImage;
    BOOL _overdue;
    NSImage *_overdueImage;
    BOOL _hasKeyboardFocus;
    BOOL _hasMouseFocus;
}

- (id)initTextCell:(id)fp8;
- (id)initImageCell:(id)fp8;
- (id)initWithCell:(id)fp8;
- (void)awakeFromNib;
- (void)_generalInitWithCell:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)hasFocus;
- (BOOL)hasKeyboardFocus;
- (void)setHasKeyboardFocus:(BOOL)fp8;
- (BOOL)hasMouseFocus;
- (void)setHasMouseFocus:(BOOL)fp8;
- (void)setFont:(id)fp8;
- (void)setBackgroundStyle:(int)fp8;
- (void)setControlSize:(unsigned int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (id)pressedImage;
- (void)setPressedImage:(id)fp8;
- (id)pressedAlternateImage;
- (void)setPressedAlternateImage:(id)fp8;
- (BOOL)isOverdue;
- (void)setIsOverdue:(BOOL)fp8;
- (id)overdueImage;
- (void)setOverdueImage:(id)fp8;
- (struct _NSRect)drawTitle:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawImage:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface ToDoColorSwatch : NSView
{
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface ToDoDatePicker : NSDatePicker
{
}

- (void)awakeFromNib;
- (void)setFrame:(struct _NSRect)fp8;
- (void)setFrameSize:(struct _NSSize)fp8;
- (void)setBounds:(struct _NSRect)fp8;
- (void)setBoundsSize:(struct _NSSize)fp8;

@end

@interface ToDoWindowCloseAnimation : ToDoWindowOpenAnimation
{
}

- (id)initWithWindow:(id)fp8;
- (float)currentValue;

@end

@interface ToDoWindowOpenAnimation : ToDoWindowAnimation
{
}

- (float)currentValue;
- (void)setCurrentProgress:(float)fp8;

@end

@interface ToDoWindowRelocateAnimation : ToDoWindowAnimation
{
    struct _NSPoint _startPoint;
    struct _NSPoint _endPoint;
}

- (id)initWithWindow:(id)fp8;
- (void)setCurrentProgress:(float)fp8;
- (struct _NSPoint)startPoint;
- (void)setStartPoint:(struct _NSPoint)fp8;
- (struct _NSPoint)endPoint;
- (void)setEndPoint:(struct _NSPoint)fp8;

@end

@interface ToDoWindowAnimation : NSAnimation
{
    NSWindow *_window;
}

- (id)initWithWindow:(id)fp8;
- (id)window;
- (void)setWindow:(id)fp8;

@end

@interface ToDoDetailsWindowController : ChildWindowController
{
    struct {
        unsigned int animateShowWindow:1;
        unsigned int animateClose:1;
        unsigned int animateMoveWindowToPoint:1;
        unsigned int animating:1;
        unsigned int delegateRespondsToShouldAnimateCloseWindow:1;
        unsigned int delegateRespondsToShouldAnimateShowWindow:1;
        unsigned int delegateRespondsToShouldAnimateMoveWindow:1;
        unsigned int delegateRespondsToUndoManagerForWindow:1;
        unsigned int reserved:24;
    } _moreFlags;
}

+ (id)sharedInstance;
- (id)windowWillReturnUndoManager:(id)fp8;
- (id)initWithWindow:(id)fp8;
- (id)window;
- (id)windowNibName;
- (void)loadWindow;
- (id)todo;
- (void)setToDo:(id)fp8;
- (void)setDelegate:(id)fp8;
- (BOOL)shouldAnimateShowWindow;
- (void)setShouldAnimateShowWindow:(BOOL)fp8;
- (BOOL)shouldAnimateClose;
- (void)setShouldAnimateClose:(BOOL)fp8;
- (BOOL)shouldAnimateMoveWindowToPoint;
- (void)setShouldAnimateMoveWindowToPoint:(BOOL)fp8;
- (BOOL)isAnimating;
- (void)parentWindowDidResignKey:(id)fp8;
- (void)parentWindowDidResize:(id)fp8;
- (void)parentWindowDidMove:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)window:(id)fp8 didProcessEvent:(id)fp12;
- (BOOL)_shouldAnimateWindowClose;
- (BOOL)_shouldAnimateShowWindow;
- (BOOL)_shouldAnimateMoveWindowToPoint;
- (void)showWindow:(id)fp8;
- (void)animateShowWindow:(id)fp8;
- (BOOL)canClose;
- (void)close;
- (void)closeImmediately;
- (void)animateClose;
- (void)animateMoveWindowToPoint:(struct _NSPoint)fp8;
- (void)moveWindowToPoint:(struct _NSPoint)fp8;
- (void)animationDidEnd:(id)fp8;
- (BOOL)animationShouldStart:(id)fp8;

@end

@interface ToDoDetailsWindow : ChildWindow
{
    unsigned int _visualOrigin;
    float _scaleFactor;
    float _baseX;
    float _baseY;
}

- (void)finishInitialLayout;
- (void)selectKeyViewFollowingView:(id)fp8;
- (void)selectKeyViewPrecedingView:(id)fp8;
- (void)recalculateKeyViewLoop;
- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (id)toDo;
- (void)setToDo:(id)fp8;
- (unsigned int)visualOrigin;
- (void)setVisualOrigin:(unsigned int)fp8;
- (BOOL)isVisualOriginTop;
- (BOOL)isVisualOriginLeft;
- (float)scaleFactor;
- (void)setScaleFactor:(float)fp8;
- (void)orderOut:(id)fp8;
- (void)setFrameOrigin:(struct _NSPoint)fp8;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface ToDoDetailsWindow (InternalMethods)
- (void)_saveBaseTranslation;
@end

@interface ToDoMultipleAlarmsView : NSView
{
    NSMutableArray *_alarmViews;
    BOOL _collapsed;
    BOOL _enabled;
    BOOL _reLayoutEnabled;
    id _controller;
    NSView *_followingKeyView;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)drawRect:(struct _NSRect)fp8;
- (struct _NSRect)bounds;
- (struct _NSRect)frame;
- (id)alarms;
- (void)setAlarms:(id)fp8;
- (unsigned int)indexOfAlarmView:(id)fp8;
- (void)removeAlarmViewOnly:(id)fp8;
- (BOOL)collapsed;
- (void)setCollapsed:(BOOL)fp8;
- (BOOL)enabled;
- (void)setEnabled:(BOOL)fp8;
- (BOOL)reLayoutEnabled;
- (void)setReLayoutEnabled:(BOOL)fp8;
- (void)alarmSubViewLayoutChanged:(id)fp8;
- (void)reLayout;

@end

@interface ToDoMultipleAlarmsView (Internal)
- (void)alarmInserted:(id)fp8;
- (void)alarmRemoved:(id)fp8;
- (void)allAlarmsRemoved:(id)fp8;
- (void)removeAllAlarmViews;
@end

@interface ToDoMultipleAlarmsViewController : NSObject
{
    ToDoMultipleAlarmsView *_multipleAlarmsView;
    ToDoAlarms *_alarms;
}

- (void)dealloc;
- (void)minimizeAlarms:(BOOL)fp8;
- (void)enableAlarms:(BOOL)fp8;
- (void)registerSubController:(id)fp8;
- (void)unregisterSubController:(id)fp8;
- (void)alarmSubControllerAddAlarmRequested:(id)fp8;
- (void)alarmSubControllerRemoveAlarmRequested:(id)fp8;
- (void)addAlarm:(id)fp8;
- (id)alarms;
- (void)setAlarms:(id)fp8;

@end

@interface ToDoMultipleAlarmsViewController (Internal)
- (id)undoManager;
@end

@interface ToDoOverallController : NSObject
{
    NSWindow *_toDoWindow;
    ToDoMultipleAlarmsViewController *_multipleAlarmsViewController;
    ToDo *_todo;
}

- (void)dealloc;
- (id)todo;
- (void)setTodo:(id)fp8;
- (void)changeDueDateEnabled:(id)fp8;
- (void)changeDueDate:(id)fp8;
- (void)changePriorityEnabled:(id)fp8;
- (void)changePriority:(id)fp8;
- (void)changeCalendar:(id)fp8;

@end

@interface ToDoOverallController (Internal)
- (void)toDoChanged:(id)fp8;
- (id)undoManager;
@end

@interface ToDoBackgroundView (ForUseByOverallController)
- (void)updateViewForChangedProperties:(unsigned int)fp8;
@end

@interface ToDoPlusMinusButton : NSButton
{
}

- (void)awakeFromNib;
- (void)setUseMinusIcon;
- (void)setUsePlusIcon;

@end

@interface ToDoPopUpButtonCell : NSPopUpButtonCell
{
}

- (id)_originalPopupImage;
- (id)_tintedPopupImage;
- (id)_popupImage;
- (id)_enabledTextColor;
- (id)_disabledTextColor;
- (id)initWithMenu:(id)fp8 andCell:(id)fp12;
- (float)leadingSpace;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSSize)cellSize;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface ToDoSmallCheckBoxButton : NSButton
{
}

- (void)awakeFromNib;

@end

@interface ToDoSmallPopupButton : NSPopUpButton
{
}

- (void)awakeFromNib;

@end

@interface BezierHighlighter : NSObject <WebHTMLHighlighter>
{
    NSBezierPath *_lightPath;
    NSBezierPath *_darkPath;
    struct _NSRect _combinedBounds;
    NSColor *_lightColor;
    NSColor *_darkColor;
}

+ (void)initialize;
+ (id)sharedHighlighter;
+ (id)sharedGrayHighlighter;
- (void)dealloc;
- (id)initWithDarkColor:(id)fp8 lightColor:(id)fp12;
- (void)paintInRect:(struct _NSRect)fp8 clipAt:(struct _NSRect)fp24 clipOut:(BOOL)fp40;
- (struct _NSRect)highlightRectForLine:(struct _NSRect)fp8;
- (void)paintHighlightForBox:(struct _NSRect)fp8 onLine:(struct _NSRect)fp24 behindText:(BOOL)fp40 entireLine:(BOOL)fp44;
- (struct _NSPoint)hPaddingForToDoLineId:(id)fp8;
- (struct _NSRect)highlightRectForLine:(struct _NSRect)fp8 representedNode:(id)fp24;
- (void)paintHighlightForBox:(struct _NSRect)fp8 onLine:(struct _NSRect)fp24 behindText:(BOOL)fp40 entireLine:(BOOL)fp44 representedNode:(id)fp48;

@end

@interface FlatTableView : NSTableView
{
    NSImage *selectionHighlightLeftEndCap;
    NSImage *selectionHighlightCenter;
    NSImage *selectionHighlightRightEndCap;
    NSImage *dropDestinationLeftEndCap;
    NSImage *dropDestinationCenter;
    NSImage *dropDestinationRightEndCap;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)highlightSelectionInClipRect:(struct _NSRect)fp8;
- (void)_drawDropHighlightBackgroundForRow:(int)fp8;
- (void)_drawDropHighlightOnRow:(int)fp8;
- (void)highlightRow:(int)fp8 withLeftEndCap:(id)fp12 center:(id)fp16 rightEndCap:(id)fp20;
- (id)_highlightColorForCell:(id)fp8;
- (void)tile;
- (BOOL)isOpaque;

@end

@interface FlatTableViewDataCell : NSTextFieldCell
{
}

- (id)initTextCell:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface Stationery : NSObject
{
    NSDictionary *descriptionDictionary;
    NSDictionary *localizedDescriptionDictionary;
    NSBundle *bundle;
    NSString *html;
    NSMutableDictionary *imageData;
    NSImage *thumbnailImage;
    NSMutableDictionary *overrideImageDictionary;
    NSMutableDictionary *overrideStyleDictionary;
    BOOL isCustom;
    NSArray *colors;
    NSString *uniqueIDForBaseURL;
}

- (id)initWithPath:(id)fp8;
- (id)init;
- (void)dealloc;
- (BOOL)isUserSelectable;
- (BOOL)isCustom;
- (void)setIsCustom:(BOOL)fp8;
- (BOOL)isUserCreatedCustomStationery;
- (void)markAsUserCreatedCustomStationery;
- (id)overrideImageDictionary;
- (id)overrideStyleDictionary;
- (id)webArchive;
- (id)resourcesForImages:(id)fp8 typeIsBackground:(BOOL)fp12 URLsAlreadySaved:(id)fp16;
- (id)html;
- (BOOL)hasImages;
- (id)pathToBackgroundTile;
- (id)backgroundTile;
- (struct _NSPoint)patternPhaseForView:(id)fp8;
- (id)uniqueIDForBaseURL;
- (void)setUniqueIDForBaseURL:(id)fp8;
- (id)colors;
- (id)defaultColor;
- (float)letterTopMargin;
- (float)letterWidth;
- (id)nextColorAfterColor:(id)fp8;
- (id)imagePathsForColor:(id)fp8;
- (id)backgroundImagePathsForColor:(id)fp8 previousColor:(id)fp12;
- (id)imagesInCompositeImagesForColor:(id)fp8;
- (id)fontsForColor:(id)fp8;
- (void)changeFolderAndDisplayNameTo:(id)fp8;
- (id)stationeryID;
- (id)folderName;
- (id)displayName;
- (id)thumbnailImagePath;
- (id)thumbnailImage;
- (id)setThumbnailImage:(id)fp8;
- (id)headers;
- (void)setMinimumWidth:(float)fp8;
- (void)setStationeryName:(id)fp8;
- (void)setHTML:(id)fp8;
- (id)addImageWithData:(id)fp8 name:(id)fp12;
- (void)setValue:(id)fp8 forHeader:(id)fp12;
- (BOOL)saveToPath:(id)fp8 error:(id *)fp12;
- (void)addValueToDescription:(id)fp8 forKey:(id)fp12;
- (void)addOverrideImage:(id)fp8 name:(id)fp12;
- (void)addOverrideStyle:(id)fp8 elementId:(id)fp12;
- (id)bundlePath;
- (void)setBundlePath:(id)fp8;
- (BOOL)isEqual:(id)fp8;
- (id)description;

@end

@interface StationeryCompositeImage : NSObject
{
    NSData *baseImageData;
    NSData *overlayImageData;
    NSArray *masks;
    NSMutableArray *userImages;
    StationeryCompositeImageView *view;
    NSString *contentID;
    NSString *mimeType;
    NSString *preferredFilename;
    BOOL isReadOnly;
    int index;
    unsigned long long totalStationeryImagesDataSize;
}

- (id)init;
- (id)initWithData:(id)fp8;
- (id)data;
- (void)dealloc;
- (BOOL)isValid;
- (void)setView:(id)fp8;
- (void)setBaseImageData:(id)fp8;
- (id)baseImage;
- (void)setOverlayImageData:(id)fp8;
- (id)overlayImage;
- (void)setMasks:(id)fp8;
- (id)masks;
- (void)addUserImage:(id)fp8;
- (id)userImages;
- (id)userImagesToSave;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (int)numberOfDropZones;
- (id)dataForCompositedImage;
- (id)mimeTypeForCompositedImage;
- (id)filenameForCompositedImage;
- (void)setIsReadOnly:(BOOL)fp8;
- (BOOL)isReadOnly;
- (void)setIndex:(int)fp8;
- (int)index;
- (unsigned long long)approximateSize;
- (void)setContentID:(id)fp8;
- (id)contentID;
- (void)setMimeType:(id)fp8;
- (id)mimeType;
- (void)setPreferredFilename:(id)fp8;
- (id)preferredFilename;
- (void)setFilename:(id)fp8;
- (id)filename;
- (BOOL)isPlaceholder;
- (id)fileWrapper;

@end

@interface StationeryCompositeImageMask : NSObject
{
    NSData *maskImageData;
    NSImage *maskImage;
    struct _NSSize dropZoneOffset;
    float dropZoneAngle;
    struct _NSSize dropZoneSize;
    NSData *placeholderImageData;
    NSImage *placeholderImage;
}

- (void)dealloc;
- (BOOL)isValid;
- (void)setMaskImageData:(id)fp8;
- (id)maskImage;
- (void)setPlaceholderImageData:(id)fp8;
- (id)placeholderImage;
- (void)discardPlaceholderImage;
- (void)setDropZoneOffset:(struct _NSSize)fp8;
- (struct _NSSize)dropZoneOffset;
- (void)setDropZoneAngle:(float)fp8;
- (float)dropZoneAngle;
- (void)setDropZoneSize:(struct _NSSize)fp8;
- (struct _NSSize)dropZoneSize;
- (void)encodeWithCoder:(id)fp8;
- (id)initWithCoder:(id)fp8;
- (struct _NSRect)dropZoneBoundingBox;
- (struct _NSRect)dropZoneRect;
- (struct _NSSize)actualMaskSize;

@end

@interface StationeryDynamicElement : NSObject
{
    int type;
    NSString *dateFormat;
}

+ (id)dynamicElementFromDOMElement:(id)fp8;
- (id)initWithType:(int)fp8;
- (int)type;
- (void)setDateFormat:(id)fp8;
- (id)fragmentToReplaceHTMLObjectBackEnd:(id)fp8;
- (id)description;

@end

@interface StationeryThumbnailCreator : NSObject
{
    id delegate;
    NSArray *stationeryPaths;
    NSString *categoryDisplayName;
    int currentStationeryIndex;
    int backgroundResourcesLeft;
    Stationery *currentStationery;
    WebView *webView;
    EditableWebMessageDocument *webMessageDocument;
    NSBitmapImageRep *snapshot;
}

- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (void)createThumbnailsForCustomStationeriesWithPaths:(id)fp8;
- (void)createWebView;
- (void)moveOnToTheNextStationery;
- (id)webView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (void)webView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)takeSnapshot;
- (void)scaleSnapshotAndSendToDelegate;

@end

@interface StationeryLoader : NSObject
{
    NSMutableDictionary *categoriesByDisplayName;
    NSMutableArray *orderedCategoryDisplayNames;
    NSMutableDictionary *orderedStationeryByCategoryDisplayName;
}

+ (id)sharedInstance;
+ (id)pathForCustomCategory;
+ (id)pathForCustomCategoryResources;
+ (void)purgeDeletedCustomStationery;
- (void)dealloc;
- (id)stationeryWithID:(id)fp8;
- (id)stationeryWithPath:(id)fp8;
- (id)pathForStationeryWithID:(id)fp8;
- (id)dictionaryForStationeryWithPath:(id)fp8 inCategoryWithDisplayName:(id)fp12;
- (id)dictionaryForStationeryWithPath:(id)fp8 inCategoryWithDisplayName:(id)fp12 position:(int *)fp16;
- (void)updateStationery;
- (id)orderedCategoryDisplayNamesIncludingFavorites;
- (id)orderedCategoryDictionaries;
- (id)orderedStationeryDictionariesForCategoryWithDisplayName:(id)fp8;
- (id)pathForFavoritesList;
- (void)createAppleUserCompanyBundleIfNecessary;
- (id)bundlePathForCategoryWithFolderName:(id)fp8 company:(id)fp12 type:(int)fp16;
- (id)pathForStationeryNamed:(id)fp8 inCategoryWithDisplayName:(id)fp12;
- (id)cachedTOCWithName:(id)fp8;
- (void)cacheTOC:(id)fp8 withName:(id)fp12;
- (id)cacheNameForCompany:(id)fp8 categoryDisplayName:(id)fp12 type:(int)fp16;
- (void)updateCategories;
- (id)companyTOCWithName:(id)fp8 type:(int)fp12 isFromCache:(char *)fp16;
- (void)combinePartialTOCs:(id)fp8;
- (id)newDictionaryForCustomCategoryForCompany:(BOOL)fp8;
- (id)validatedCompanyCategoryDictionary:(id)fp8 categoryFolderName:(id)fp12 companyBundle:(id)fp16 type:(int)fp20;
- (id)validatedStationeryDictionary:(id)fp8 withName:(id)fp12 categoryBundle:(id)fp16 needsThumbnail:(char *)fp20;
- (void)updateStationeryInCategoryWithDisplayName:(id)fp8;
- (id)categoryTOCForCategoryFolderName:(id)fp8 company:(id)fp12 type:(int)fp16 categoryDisplayName:(id)fp20;
- (void)thumbnailCreatorDidCompletelyFinish:(id)fp8;
- (void)thumbnailCreatorDidCreateThumbnailForCustomStationery:(id)fp8;
- (void)thumbnailCreator:(id)fp8 didCreateThumbnail:(id)fp12 forCustomStationeryWithPath:(id)fp16;
- (BOOL)stationery:(id)fp8 isInCategoryWithDisplayName:(id)fp12;
- (BOOL)customStationeryWithNameExists:(id)fp8 index:(int *)fp12;
- (void)addToFavoritesStationeryWithPath:(id)fp8 inCategoryWithDisplayName:(id)fp12;
- (void)addToFavoritesInPosition:(int)fp8 stationeryWithPath:(id)fp12 inCategoryWithDisplayName:(id)fp16;
- (BOOL)recursivelyCreateDirectory:(id)fp8 error:(id *)fp12;
- (BOOL)saveCustomStationery:(id)fp8 error:(id *)fp12;
- (BOOL)saveCustomStationery:(id)fp8 byMovingFromPath:(id)fp12 error:(id *)fp16;
- (BOOL)installStationery:(id)fp8;
- (void)deleteStationeryWithDictionary:(id)fp8 fromCategoryWithDisplayName:(id)fp12 undoManager:(id)fp16;
- (void)reinsertStationeryWithInformation:(id)fp8;
- (void)purgeDeletedCustomStationery:(id)fp8;
- (void)synchronouslyPurgeDeletedCustomStationery:(id)fp8;

@end

@interface StationerySelector : NSObject
{
    NSTableView *categoriesTableView;
    ThumbnailMatrix *thumbnailMatrix;
    MailDocumentEditor *documentEditor;
    NSView *selectorPane;
    ColorBackgroundView *horizontalScrollerBackground;
    EmptyFavoritesMessageView *emptyFavoritesMessageView;
    NSScrollView *thumbnailsScrollView;
    NSImageView *thumbnailLeftSideShadowView;
    float minimumScrollViewContentOriginX;
    StationeryLoader *stationeryLoader;
    NSArray *categoryDictionaries;
    NSArray *stationeryDictionaries;
    NSMutableArray *deletedStationery;
    NSMutableDictionary *scrollPositionByCategory;
    BOOL isFirstShowOfCategoriesForFavorites;
    BOOL isFirstShowOfCategoriesForExistingStationery;
    BOOL hasRegisteredForNewThumbnailImageNotifications;
}

- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (float)stationeryPaneHeight;
- (float)horizontalScrollerWidth;
- (float)scrollerValue;
- (float)scrollerProportion;
- (void)showStationery;
- (void)refreshStationery;
- (void)stationeryDidChange:(id)fp8;
- (BOOL)selectionShouldChangeInTableView:(id)fp8;
- (void)selectCategory:(id)fp8;
- (float)tableView:(id)fp8 heightOfRow:(int)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)saveThumbnailScrollPosition;
- (void)restoreThumbnailScrollPosition;
- (void)displayStationery:(id)fp8 showDeleteButtons:(BOOL)fp12 beginningAtIndex:(int)fp16;
- (void)setStationeryDictionaries:(id)fp8;
- (void)selectStationery:(id)fp8;
- (void)clearStationerySelection;
- (void)deleteStationery:(id)fp8;
- (void)startDragSessionFromIndex:(int)fp8 withImage:(id)fp12 event:(id)fp16;
- (BOOL)handleDropIntoFavorites;
- (void)thumbnailImageIsAvailable:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (BOOL)draggingPasteboardContainsStationery;
- (void)thumbnailsDidScroll:(id)fp8;

@end

@interface EmptyFavoritesMessageView : NSView
{
}

- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)isOpaque;

@end

@interface ThumbnailButtonCell : NSButtonCell
{
    NSButton *deleteButton;
    int trackingRectTag;
}

- (id)initImageCell:(id)fp8;
- (void)dealloc;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)drawImage:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (struct _NSRect)drawTitle:(id)fp8 withFrame:(struct _NSRect)fp12 inView:(id)fp28;
- (void)setDeleteButton:(id)fp8;
- (void)setTrackingRectTag:(int)fp8;
- (int)trackingRectTag;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (unsigned int)focusRingType;

@end

@interface ThumbnailMatrix : NSMatrix
{
    BOOL shouldShowButtons;
}

- (void)awakeFromNib;
- (void)highlightCell:(BOOL)fp8 atRow:(int)fp12 column:(int)fp16;
- (void)showDeleteButtons:(BOOL)fp8 beginningAtIndex:(int)fp12;
- (void)addButtonAtIndex:(int)fp8;
- (struct _NSRect)frameOfThumbnailAtIndex:(int)fp8;
- (BOOL)_performDragFromMouseDown:(id)fp8;

@end

@interface NoteWebViewEditor : WebViewEditor <DOMEventListener>
{
    WebHTMLView *_documentView;
    NSUndoManager *_undoManager;
    BOOL _ignoreToDoNotifications;
    NSMutableDictionary *_todoAnimations;
    NSString *_todoElementIdShowingDeleteButton;
}

+ (id)todoDateFormatter;
- (BOOL)useDesignMode;
- (BOOL)hasContent;
- (id)contentDocument;
- (id)userContentRange;
- (void)beginDocumentEditableContext;
- (void)endDocumentEditableContext;
- (void)pause;
- (void)resume;
- (id)documentColor;
- (void)setDocumentColor:(id)fp8;
- (void)goPaperless;
- (void)makePaperbacked;
- (BOOL)thawToDos;
- (void)addTitle:(id)fp8;
- (void)addEmptyFooter;
- (void)appendText:(id)fp8;
- (void)clearSelection;
- (void)setInitialSelection;
- (BOOL)selectionContainsAnyToDos;
- (void)setUp;
- (void)close;
- (void)hideIfEmptyPaperlessNote;
- (void)minimizeContentElement;
- (void)maximizeContentElement;
- (BOOL)webView:(id)fp8 shouldChangeSelectedDOMRange:(id)fp12 toDOMRange:(id)fp16 affinity:(unsigned int)fp20 stillSelecting:(BOOL)fp24;
- (BOOL)isPaperless;
- (void)todosWereAdded:(id)fp8;
- (void)todosWereDeleted:(id)fp8;
- (void)webViewFrameChanged:(id)fp8;
- (void)webViewWillStartLiveResize:(id)fp8;
- (void)webViewDidEndLiveResize:(id)fp8;
- (void)handleEvent:(id)fp8;
- (void)hideLastShownToDoDeleteButton;
- (void)showDeleteButtonForToDo:(id)fp8;
- (void)showDeleteButtonForToDo:(id)fp8 animate:(BOOL)fp12;
- (void)animationDidStop:(id)fp8;
- (void)animationDidEnd:(id)fp8;
- (void)hideDeleteButtonForToDo:(id)fp8;
- (void)createToDo:(id)fp8;
- (void)createToDo:(id)fp8 referringMessage:(id)fp12 referringRange:(id)fp16;
- (void)appendToDoWithText:(id)fp8 referringMessage:(id)fp12 referringRange:(id)fp16;
- (void)createToDoWithContext:(id)fp8;
- (void)appendToDoWithContext:(id)fp8;
- (void)sendFakeMouseMovedEvent;
- (void)smartDeleteToDoElement:(id)fp8;
- (void)stripToDoElements:(id)fp8;
- (void)deleteToDoElements:(id)fp8;
- (void)untodoToDoElements:(id)fp8;
- (void)updateToDoElements:(id)fp8;
- (void)updateToDoElement:(id)fp8 todo:(id)fp12;
- (id)fragmentFromToDos:(id)fp8;
- (void)deleteContent;
- (void)appendTodos:(id)fp8;
- (id)todos;
- (void)setTodos:(id)fp8;
- (id)webView:(id)fp8 contextMenuItemsForElement:(id)fp12 defaultMenuItems:(id)fp16;
- (id)createToDo;
- (id)createToDoWithToDo:(id)fp8;
- (id)createToDoWithToDoID:(id)fp8;
- (id)createToDoReferencingMessage:(id)fp8 range:(id)fp12;
- (id)todoInsertionTypeName:(int)fp8;
- (void)setSelectionFromToDo:(id)fp8 type:(int)fp12;
- (void)webMessageController:(id)fp8 willDisplayMenuItems:(id)fp12;
- (id)insertToDo:(id)fp8 contentArchive:(id)fp12;
- (id)insertToDo:(id)fp8 contentText:(id)fp12;
- (id)replaceSelectedTextWithNewline;
- (id)replaceSelectedListItemsWithNewline;
- (void)insertToDosWithTexts:(id)fp8;
- (void)convertLinesIntoToDos;
- (void)smartConvertListItemsIntoToDos;
- (void)smartInsertToDo:(id)fp8;
- (void)insertNewlineIfNeededAfterToDo:(id)fp8;
- (void)deleteToDosFromElements:(id)fp8;
- (id)documentView;
- (void)dealloc;
- (id)webFrameBridge;
- (void)untodoTodoNode:(id)fp8;
- (void)removeTodoNode:(id)fp8;
- (void)removeEventListenersForToDoElement:(id)fp8;
- (void)addEventListenersForToDoElement:(id)fp8;
- (void)todoView:(id)fp8 didLoadToDoID:(id)fp12;
- (void)selectDOMRange:(id)fp8 previousRange:(id)fp12;
- (void)preselectDOMRangeForDetodo:(id)fp8 previousRange:(id)fp12;
- (void)postselectDOMRangeForDetodo:(id)fp8 previousRange:(id)fp12;
- (void)toDoContentHasChanged;
- (BOOL)validateAction:(SEL)fp8 tag:(int)fp12;
- (id)undoManagerForWebView:(id)fp8;
- (void)removeAllFormattingFromWebView;
- (id)alertForConvertingToRichText;
- (void)webView:(id)fp8 didWriteSelectionToPasteboard:(id)fp12;
- (void)webView:(id)fp8 willPerformDragSourceAction:(int)fp12 fromPoint:(struct _NSPoint)fp16 withPasteboard:(id)fp24;
- (BOOL)adjustFontStyle:(id)fp8 beforeApplyingToElementsInDOMRange:(id)fp12;
- (BOOL)webView:(id)fp8 shouldApplyStyle:(id)fp12 toElementsInDOMRange:(id)fp16;
- (void)continueShouldApplyStyle:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)webView:(id)fp8 shouldInsertAttachmentsInWebArchive:(id)fp12 context:(id)fp16;
- (void)continueShouldInsertAttachmentsInWebArchive:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (id)createToDoElementWithToDo:(id)fp8 contentFragment:(id)fp12;
- (id)createToDoElementWithToDo:(id)fp8 contentArchive:(id)fp12;
- (id)createToDoElementWithToDoElement:(id)fp8 todosOnPasteboard:(id)fp12 oldToNewID:(id)fp16;
- (void)addToDos:(id)fp8;
- (BOOL)webView:(id)fp8 shouldMoveRangeAfterDelete:(id)fp12 replacingRange:(id)fp16;
- (void)webView:(id)fp8 willReplaceSelectionWithFragment:(id *)fp12 pasteboard:(id)fp16 type:(id)fp20 options:(int)fp24;
- (BOOL)webView:(id)fp8 shouldDeleteDOMRange:(id)fp12;
- (BOOL)webView:(id)fp8 shouldInsertNode:(id)fp12 replacingDOMRange:(id)fp16 givenAction:(int)fp20;
- (BOOL)webView:(id)fp8 shouldInsertText:(id)fp12 replacingDOMRange:(id)fp16 givenAction:(int)fp20;
- (BOOL)webView:(id)fp8 shouldShowDeleteInterfaceForElement:(id)fp12;
- (BOOL)webView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (void)moveSelectionToEndOfDocument:(id)fp8;
- (void)moveSelectionToStartOfDocument:(id)fp8;
- (void)growSelection:(id)fp8;
- (void)selectToDoCheckbox:(id)fp8;
- (void)deleteAndUnToDo:(id)fp8 todoElement:(id)fp12 deleteSelector:(SEL)fp16;
- (BOOL)deleteBackward:(id)fp8;
- (BOOL)deleteForward:(id)fp8;
- (BOOL)insertNewlineIgnoringFieldEditor:(id)fp8;
- (BOOL)insertNewline:(id)fp8;
- (BOOL)ignoreToDoNotifications;
- (void)setIgnoreToDoNotifications:(BOOL)fp8;
- (id)undoManager;
- (void)setUndoManager:(id)fp8;
- (id)todoElementIdShowingDeleteButton;
- (void)setTodoElementIdShowingDeleteButton:(id)fp8;

@end

@interface ToDoTextFieldCell : NSTextFieldCell
{
}

- (id)initWithCell:(id)fp8;
- (id)_enabledTextColor;
- (id)_disabledTextColor;
- (void)setEnabled:(BOOL)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface ToDoTextField : NSTextField
{
}

- (void)awakeFromNib;

@end

@interface AnimationView : NSView
{
    CIContext *drawingContext;
    StationeryAnimator *animator;
}

- (void)dealloc;
- (void)reset;
- (void)setAnimator:(id)fp8;
- (void)drawRect:(struct _NSRect)fp8;

@end

@interface StationeryAnimator : NSObject
{
    Stationery *_stationery;
    StationeryController *_stationeryController;
    WebView *_webView;
    AnimationView *_animationView;
    id _finishDelegate;
    CIImage *_startImage;
    CIImage *_middleImage;
    CIImage *_endImage;
    CIFilter *_transitionFilter;
    double _animationStartTime;
    NSTimer *_timer;
    int _animatorStatus;
}

- (id)init;
- (void)dealloc;
- (void)reset;
- (void)startAnimation;
- (BOOL)isAnimating;
- (void)webViewDidLoadStationery:(id)fp8;
- (void)startSecondPhaseOfAnimation;
- (void)timerFired:(id)fp8;
- (void)endAnimation;
- (id)currentImage;
- (id)finishDelegate;
- (void)setFinishDelegate:(id)fp8;
- (id)webView;
- (void)setWebView:(id)fp8;
- (id)stationeryController;
- (void)setStationeryController:(id)fp8;
- (id)stationery;
- (void)setStationery:(id)fp8;

@end

@interface NSString (ToDoAdditions)
+ (id)nodeIDForTodoID:(id)fp8 nodeClass:(id)fp12;
- (id)todoIDFromNodeID:(id)fp8;
@end

@interface EmbeddedNoteDocumentEditor : NoteDocumentEditor
{
    MessageViewingState *_viewingState;
    NoteDocumentEditor *_contentSaverEditor;
    id <DocumentEditorManaging> _manager;
}

+ (BOOL)usesCustomScroller;
+ (void)saveDefaults;
+ (void)restoreDraftMessage:(id)fp8 withSavedState:(id)fp12;
+ (id)createEditorForNote:(id)fp8 message:(id)fp12 isPaperless:(BOOL)fp16;
- (void)didLoadNotePaper;
- (int)editorSharedNib;
- (id)embeddedView;
- (id)resource;
- (void)setManager:(id)fp8;
- (void)webViewDidChange:(id)fp8;
- (void)beginDocumentMove;
- (void)endDocumentMove;
- (void)saveAndClose;
- (void)saveCloseAndRelease;
- (void)forceClose;
- (void)dealloc;
- (id)showInterfaceOperation;
- (void)animateEditorFrame:(struct _NSRect)fp8;
- (void)animateOutIfNeeded;
- (BOOL)animateInIfNeeded;
- (void)performInvocationAfterLoad:(id)fp8;
- (void)appendText:(id)fp8;
- (void)appendToDoWithText:(id)fp8 referringMessage:(id)fp12 referringRange:(id)fp16;
- (void)createToDo:(id)fp8 referringMessage:(id)fp12 referringRange:(id)fp16;
- (void)backEndDidSaveMessage:(id)fp8 result:(int)fp12;
- (void)editorDidLoad:(id)fp8;
- (id)manager;
- (id)contentSaverEditor;
- (void)setContentSaverEditor:(id)fp8;
- (id)viewingState;
- (void)setViewingState:(id)fp8;

@end

@interface MiniEmbeddedNoteDocumentEditor : EmbeddedNoteDocumentEditor
{
}

- (id)resource;
- (id)contentWebFrame;
- (BOOL)displayToDoMessageReference;
- (BOOL)load;

@end

@interface RSSPreferences : NSPreferencesModule
{
    NSPopUpButton *defaultReaderPopup;
    NSPopUpButton *fetchFrequencyPopup;
    NSPopUpButton *deletionFrequencyPopup;
    DefaultWebAppPopUpController *_defaultReaderController;
}

- (void)dealloc;
- (void)awakeFromNib;
- (void)initializeFromDefaults;
- (void)defaultRSSReaderChanged:(id)fp8;
- (void)fetchFrequencyChanged:(id)fp8;
- (void)deletionIntervalChanged:(id)fp8;
- (BOOL)isResizable;
- (id)titleForIdentifier:(id)fp8;
- (id)windowTitle;

@end

@interface MailMediaBrowser : NSObject
{
    ILMediaBrowserView *browser;
    NSPanel *panel;
}

+ (id)sharedInstance;
- (void)toggle;

@end

@interface EventDelegateWindow : NSWindow
{
    id _eventDelegate;
}

- (id)eventDelegate;
- (void)setEventDelegate:(id)fp8;
- (void)sendEvent:(id)fp8;

@end

@interface ToDoAlarmCell : NSTextFieldCell
{
    NSCell *imageCell;
    NSCell *textCell;
    BOOL _hasKeyboardFocus;
    BOOL _hasMouseFocus;
    BOOL _mouseDownInButton;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (id)initTextCell:(id)fp8;
- (void)awakeFromNib;
- (void)_generalInit;
- (BOOL)hasFocus;
- (BOOL)hasKeyboardFocus;
- (void)setHasKeyboardFocus:(BOOL)fp8;
- (BOOL)hasMouseFocus;
- (void)setHasMouseFocus:(BOOL)fp8;
- (void)setLineBreakMode:(unsigned int)fp8;
- (void)setAlignment:(unsigned int)fp8;
- (void)setFont:(id)fp8;
- (void)setBackgroundStyle:(int)fp8;
- (void)setControlSize:(unsigned int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (id)_alarmImage;
- (id)_indicatorImage;
- (id)_plusImageForState:(BOOL)fp8;
- (id)_addAlarmStringForIndicator;
- (id)_textColorForCellFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)indicatorRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)indicatorLabelRectForBounds:(struct _NSRect)fp8;
- (void)drawImageWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawIndicatorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawIndicatorLabelWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)addTrackingAreasForView:(id)fp8 inRect:(struct _NSRect)fp12 withUserInfo:(id)fp28 mouseLocation:(struct _NSPoint)fp32;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (id)accessibilityAttributeNames;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface ToDoCalendarCell : ToDoListPopUpButtonCell
{
}

- (id)initTextCell:(id)fp8 pullsDown:(BOOL)fp12;
- (void)awakeFromNib;
- (void)_generalInit;
- (void)setObjectValue:(id)fp8;
- (id)accessibilityAttributeValue:(id)fp8;

@end

@interface ToDoListDateCell : NSTextFieldCell
{
    NSCell *textCell;
    NSPopUpButtonCell *buttonCell;
    BOOL _mouseDownInButton;
    BOOL _hasKeyboardFocus;
    BOOL _hasMouseFocus;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (id)initTextCell:(id)fp8;
- (void)awakeFromNib;
- (void)_generalInit;
- (void)dealloc;
- (id)placeholderString;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)hasFocus;
- (BOOL)hasKeyboardFocus;
- (void)setHasKeyboardFocus:(BOOL)fp8;
- (BOOL)hasMouseFocus;
- (void)setHasMouseFocus:(BOOL)fp8;
- (void)setMenu:(id)fp8;
- (void)setLineBreakMode:(unsigned int)fp8;
- (void)setAlignment:(unsigned int)fp8;
- (void)setBackgroundStyle:(int)fp8;
- (void)setControlSize:(unsigned int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (void)setFont:(id)fp8;
- (id)_indicatorImage;
- (void)resetWidths;
- (BOOL)drawsBackground;
- (void)updateFormatterForWidth:(float)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)buttonRectForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (struct _NSRect)buttonHitTestRectForRect:(struct _NSRect)fp8;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)addTrackingAreasForView:(id)fp8 inRect:(struct _NSRect)fp12 withUserInfo:(id)fp28 mouseLocation:(struct _NSPoint)fp32;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (id)menuForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface ToDoDateFormatter : NSDateFormatter
{
    unsigned int _dateStyle;
    BOOL shouldUseRelativeDate;
}

+ (int)dayInterval:(id)fp8;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)shouldUseRelativeDate;
- (void)setShouldUseRelativeDate:(BOOL)fp8;
- (unsigned int)timeStyle;
- (void)setTimeStyle:(unsigned int)fp8;
- (id)stringFromDate:(id)fp8;
- (id)dateFromString:(id)fp8;
- (float)widthOfDate:(id)fp8 withAttributes:(id)fp12;
- (float)widthOfLongestDateStringWithAttributes:(id)fp8;
- (id)stringForObjectValue:(id)fp8;
- (id)attributedStringForObjectValue:(id)fp8 withDefaultAttributes:(id)fp12;
- (id)editingStringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;

@end

@interface ToDoListCheckBoxCell : ToDoCheckBoxButtonCell
{
}

- (id)initTextCell:(id)fp8;
- (id)initImageCell:(id)fp8;
- (void)awakeFromNib;
- (void)_generalInit;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (void)addTrackingAreasForView:(id)fp8 inRect:(struct _NSRect)fp12 withUserInfo:(id)fp28 mouseLocation:(struct _NSPoint)fp32;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface ToDoListView : NSTableView
{
    int _mouseRow;
    int _mouseCol;
    NSCell *_mouseCell;
    NSTableColumn *focusedTableColumn;
    BOOL _editing;
}

- (id)init;
- (id)initWithCoder:(id)fp8;
- (void)dealloc;
- (void)updateTrackingAreas;
- (id)preparedCellAtColumn:(int)fp8 row:(int)fp12;
- (void)setMouseCell:(id)fp8 row:(int)fp12 column:(int)fp16;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)updateCell:(id)fp8;
- (id)mouseCell;
- (int)mouseRow;
- (int)mouseColumn;
- (void)keyDown:(id)fp8;
- (void)showTableColumnsFromArray:(id)fp8 allColumns:(id)fp12;
- (id)menuForEvent:(id)fp8;
- (BOOL)canFocusCell:(id)fp8 atTableColumn:(id)fp12 row:(int)fp16;
- (id)focusedTableColumn;

@end

@interface ToDoListController : NSObject
{
    ToDoListView *_listView;
    ToDoMall *_todoMall;
    id _delegate;
    NSMutableSet *_selection;
    NSFont *_font;
    NSFont *_boldFont;
    NSMenu *_headerMenu;
    NSMenu *_contextMenu;
    NSMenu *_calendarMenu;
    NSMenu *_priorityMenu;
    NSMenu *_dueDateMenu;
    NSMenu *_completeDateMenu;
    struct {
        unsigned int showAlertForPastDue:1;
        unsigned int showIncompleteInBold:1;
        unsigned int allowSubjectEditing:1;
        unsigned int allowDateDueEditing:1;
        unsigned int allowDateCompletedEditing:1;
        unsigned int allowPriorityEditing:1;
        unsigned int allowCalendarEditing:1;
        unsigned int isShowingSearchResults:1;
        unsigned int allowTableEditingWhenShowingDetails:1;
        unsigned int reserved:23;
    } _flags;
    BOOL _applyingUserDefaults;
    ChildWindowController *_childController;
    int _childWindowAttachmentRow;
    BOOL _userDidEditText;
    ToDoListDatePanel *_datePanel;
}

- (id)init;
- (void)awakeFromNib;
- (void)finalizeSetupAndAttachMall:(id)fp8;
- (void)setCalendarMenu:(id)fp8;
- (id)calendarMenu;
- (void)setPriorityMenu:(id)fp8;
- (id)priorityMenu;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)setMailboxUids:(id)fp8;
- (void)reload:(id)fp8;
- (id)selectedItems;
- (BOOL)selectionIsEditable;
- (id)font;
- (id)boldFont;
- (void)setFont:(id)fp8;
- (float)fontSize;
- (void)setFontSize:(float)fp8;
- (BOOL)showsAlertForPastDue;
- (void)setShowsAlertForPastDue:(BOOL)fp8;
- (BOOL)showsIncompleteItemsInBold;
- (void)sethowsIncompleteItemsInBold:(BOOL)fp8;
- (void)changeCalendar:(id)fp8;
- (void)changePriority:(id)fp8;
- (void)changeDateDue:(id)fp8;
- (void)changeDateComplete:(id)fp8;
- (void)removeAlarms:(id)fp8;
- (void)editAlarms:(id)fp8;
- (void)deleteSelected:(id)fp8;
- (void)toggleCompleted:(id)fp8;
- (void)showToDoMessageReference:(id)fp8 inSeparateWindow:(BOOL)fp12;
- (void)jumpToMessage:(id)fp8;
- (void)toggleColumnVisible:(id)fp8;
- (void)selectItems:(id)fp8;
- (void)selectToDo:(id)fp8;
- (void)editSelectedToDo:(id)fp8;
- (void)editSelectedToDoAndDisplayDetails:(id)fp8;
- (void)editToDo:(id)fp8;
- (void)jumpToiCal:(id)fp8;
- (void)clearSearch;
- (BOOL)isShowingSearchResults;
- (void)searchForString:(id)fp8 in:(int)fp12 withSelectedMailboxes:(id)fp16 withOptions:(int)fp20;
- (BOOL)validateMenuItem:(id)fp8;
- (void)menuNeedsUpdate:(id)fp8;
- (void)viewerPreferencesChanged:(id)fp8;
- (void)applySettingsFromDefaults:(id)fp8;
- (void)saveSettingsToDefaults:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 sortDescriptorsDidChange:(id)fp12;
- (BOOL)tableView:(id)fp8 shouldMakeFocusedCell:(id)fp12;
- (BOOL)tableView:(id)fp8 writeRowsWithIndexes:(id)fp12 toPasteboard:(id)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(unsigned int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(unsigned int)fp20;
- (void)controlTextDidBeginEditing:(id)fp8;
- (void)controlTextDidChange:(id)fp8;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
- (void)moveLeft:(id)fp8;
- (void)toDoListContentsWillCompletelyChange;
- (void)toDoListContentsCompletelyChanged;
- (void)toDoListWasSorted;
- (void)toDosAddedAtIndexes:(id)fp8;
- (void)toDosDeletedAtIndexes:(id)fp8;
- (void)toDosUpdatedAtIndexes:(id)fp8;
- (BOOL)selectionShouldChangeInTableView:(id)fp8;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)tableView:(id)fp8 didDragTableColumn:(id)fp12;
- (BOOL)tableView:(id)fp8 shouldEditTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (BOOL)tableView:(id)fp8 shouldSelectTableColumn:(id)fp12;
- (id)tableView:(id)fp8 toolTipForCell:(id)fp12 rect:(struct _NSRect *)fp16 tableColumn:(id)fp20 row:(int)fp24 mouseLocation:(struct _NSPoint)fp28;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableViewBoundsDidChange:(id)fp8;
- (void)tableViewFrameDidChange:(id)fp8;
- (void)tableViewColumnDidMove:(id)fp8;
- (void)tableViewColumnDidResize:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)sortByTagOfSender:(id)fp8;
- (void)makeToDoListFirstResponder;
- (id)detailsWindowController:(id)fp8 undoManagerForWindow:(id)fp12;
- (void)displayAlarmsWindowForRows:(id)fp8;
- (void)displayDetailsWindowForRow:(int)fp8;
- (void)_childController;
- (BOOL)childWindowIsVisible;
- (void)closeChildWindow;
- (id)childWindowController;
- (void)setChildWindowController:(id)fp8;
- (void)windowDidSelectNextKeyView:(id)fp8;
- (void)childWindowDidBecomeKey:(id)fp8;
- (void)childWindowWillClose:(id)fp8;
- (void)listViewBoundsOrFrameDidChange:(id)fp8;
- (struct _NSPoint)childWindowController:(id)fp8 bestFrameOriginForWindow:(id)fp12;
- (void)cut:(id)fp8;
- (void)copy:(id)fp8;
- (void)paste:(id)fp8;
- (BOOL)canInsertFromPasteboard;

@end

@interface NSView (MailAppKitAdditions)
- (id)subviewWithTag:(int)fp8;
@end

@interface ToDoListController (InternalMethods)
- (void)_initCalendarMenu;
- (void)_initPriorityMenu;
- (void)_updateSelection;
- (void)_updateColumnInfo;
- (id)_selectedCalendars;
- (id)_disabledGrayTextForNoPriority;
- (id)undoManager;
- (void)deleteToDosWithUndo:(id)fp8;
- (void)addAndSelectToDosWithUndo:(id)fp8;
- (void)_setDetailsWindowRelatedColumnsEditable:(BOOL)fp8;
- (BOOL)selectNextToDoMovingDownward:(BOOL)fp8;
- (void)copyToDos:(id)fp8 toPasteboard:(id)fp12;
- (unsigned int)addToDosFromPasteboard:(id)fp8;
- (void)_setColumnWithTag:(unsigned int)fp8 visible:(BOOL)fp12;
- (id)_sortDescriptorsFromArchivedData:(id)fp8;
- (BOOL)_todosHaveAlarms:(id)fp8;
- (BOOL)_dueDateEnabledForToDos:(id)fp8;
- (void)_applyDateFromUserSheetWithMessage:(id)fp8 forToDos:(id)fp12 applyDateSelector:(SEL)fp16;
- (void)_changeDueDate:(id)fp8 forToDos:(id)fp12;
- (void)_changeCompletedDate:(id)fp8 forToDos:(id)fp12;
- (void)_editToDo:(id)fp8 withTableColumn:(id)fp12;
@end

@interface ToDoTableHeaderCell : NSTableHeaderCell
{
    NSImage *_image;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)setStringValue:(id)fp8;
- (unsigned int)lineBreakMode;
- (id)image;
- (void)setImage:(id)fp8;
- (struct _NSRect)imageRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface ToDoTitleCell : NSTextFieldCell
{
    NSCell *titleCell;
    NSCell *linkCell;
    BOOL _mouseDownInLinkButton;
    SEL _linkButtonAction;
    BOOL _expanding;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (id)initTextCell:(id)fp8;
- (void)awakeFromNib;
- (void)_generalInit;
- (void)setLineBreakMode:(unsigned int)fp8;
- (void)setAlignment:(unsigned int)fp8;
- (void)setFont:(id)fp8;
- (void)setBackgroundStyle:(int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (SEL)linkButtonAction;
- (void)setLinkButtonAction:(SEL)fp8;
- (struct _NSRect)linkButtonRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (id)attributedTitle;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawLinkButtonWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)expansionFrameWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithExpansionFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)editWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 event:(id)fp36;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (void)addTrackingAreasForView:(id)fp8 inRect:(struct _NSRect)fp12 withUserInfo:(id)fp28 mouseLocation:(struct _NSPoint)fp32;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (void)accessibilityPerformAction:(id)fp8;

@end

@interface MailScroller : NSScroller
{
    NSImage *paddingImage;
    NSImage *hiddenImage;
    NSImage *slotStartImage;
    NSImage *slotMiddleImage;
    NSImage *slotEndImage;
    NSImage *knobStartImage;
    NSImage *knobMiddleImage;
    NSImage *knobEndImage;
    float startPadding;
    float endPadding;
    BOOL isVertical;
}

- (id)initWithFrame:(struct _NSRect)fp8 isVertical:(BOOL)fp24;
- (void)dealloc;
- (struct _NSRect)_rectWithRect:(struct _NSRect)fp8 offset:(float)fp24 length:(float)fp28;
- (float)_getLengthFromSize:(struct _NSSize)fp8;
- (float)_getLengthFromImage:(id)fp8;
- (struct _NSRect)_drawingRectForCustomPart:(int)fp8;
- (struct _NSRect)_drawingRectForPart:(unsigned int)fp8;
- (struct _NSRect)rectForPart:(unsigned int)fp8;
- (BOOL)isUseful;
- (void)drawImage:(id)fp8 asPart:(int)fp12 withDirtyRect:(struct _NSRect)fp16;
- (void)drawRect:(struct _NSRect)fp8;
- (void)setImagesFlipped:(BOOL)fp8;
- (BOOL)isOpaque;
- (BOOL)isVertical;
- (void)setIsVertical:(BOOL)fp8;
- (float)endPadding;
- (void)setEndPadding:(float)fp8;
- (float)startPadding;
- (void)setStartPadding:(float)fp8;
- (id)knobEndImage;
- (void)setKnobEndImage:(id)fp8;
- (id)knobMiddleImage;
- (void)setKnobMiddleImage:(id)fp8;
- (id)knobStartImage;
- (void)setKnobStartImage:(id)fp8;
- (id)slotEndImage;
- (void)setSlotEndImage:(id)fp8;
- (id)slotMiddleImage;
- (void)setSlotMiddleImage:(id)fp8;
- (id)slotStartImage;
- (void)setSlotStartImage:(id)fp8;
- (id)hiddenImage;
- (void)setHiddenImage:(id)fp8;
- (id)paddingImage;
- (void)setPaddingImage:(id)fp8;

@end

@interface ToDoMall : NSObject
{
    NSMutableArray *_toDoStores;
    NSMutableArray *_toDoList;
    NSMutableArray *_sortDescriptors;
    NSMutableSet *_toDoIDs;
    id _delegate;
    BOOL _delegateRespondsToListContentsWillCompletelyChange;
    BOOL _delegateRespondsToListContentsCompletelyChanged;
    BOOL _delegateRespondsToListWasSorted;
    BOOL _delegateRespondsToAddedAtIndex;
    BOOL _delegateRespondsToDeletedAtIndex;
    BOOL _delegateRespondsToUpdatedAtIndex;
}

- (id)init;
- (void)dealloc;
- (void)setMailboxUids:(id)fp8;
- (id)sortDescriptors;
- (void)setSortDescriptors:(id)fp8;
- (unsigned int)count;
- (unsigned int)incompleteCount;
- (id)toDoAtIndex:(unsigned int)fp8;
- (unsigned int)indexOfToDo:(id)fp8;
- (id)indexesOfToDos:(id)fp8;
- (id)toDosAtIndexes:(id)fp8;
- (void)addToDos:(id)fp8;
- (void)deleteToDos:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)searchForString:(id)fp8 in:(int)fp12 withSelectedMailboxes:(id)fp16 withOptions:(int)fp20;
- (id)criterionForString:(id)fp8 in:(int)fp12 withSelectedMailboxes:(id)fp16 withOptions:(int)fp20 breakWords:(BOOL)fp24;
- (void)reallySearchForString:(id)fp8 in:(int)fp12 withSelectedMailboxes:(id)fp16 withOptions:(int)fp20;
- (void)clearSearchResults;

@end

@interface ToDoMall (Internal)
- (void)clearOutOldMailboxes;
- (void)addStoreAndToDosForMailbox:(id)fp8;
- (void)registerForNotificationsForStore:(id)fp8;
- (void)sortList;
- (void)insertToDos:(id)fp8 preSorted:(BOOL)fp12;
- (void)containedStoreAddedToDos:(id)fp8;
- (void)containedStoreRemovedToDos:(id)fp8;
- (void)containedStoreUpdatedToDos:(id)fp8;
- (void)containedStoreCountsChanged:(id)fp8;
@end

@interface LibraryUpgradeAssistant : Assistant
{
    NSView *introView;
    NSView *patienceView;
    NSView *epilogueView;
    NSView *errorView;
    NSButton *showNewFeaturesButton;
    LibraryUpgrader *libraryUpgrader;
    NSView *currentView;
    int state;
}

- (id)libraryUpgrader;
- (void)setLibraryUpgrader:(id)fp8;
- (id)initWithAssistentManager:(id)fp8;
- (void)dealloc;
- (id)windowTitle;
- (int)state;
- (void)setState:(int)fp8;
- (id)currentView;
- (void)setCurrentView:(id)fp8;
- (void)start;
- (void)stop;
- (void)goForward;
- (void)requestUserAttention;
- (void)upgrader:(id)fp8 didRunForObject:(id)fp12;
- (void)upgrader:(id)fp8 didFailRunWithError:(id)fp12 forObject:(id)fp16;
- (void)showNewFeatures:(id)fp8;

@end

@interface MailDocumentEditor_Scripting : MailDocumentEditor
{
}

- (Class)backEndClass;

@end

@interface AccountStatusDataSource : SafeObserver
{
    NSPopUpButton *_popUp;
    NSTableView *_table;
    NSTextView *_ispInfoField;
    NSMutableDictionary *_progressIndicators;
    unsigned int _accountFlags;
    BOOL _disabled;
    NSObject<AccountStatusDataSourceDelegate> *_delegate;
    AccountStatus *_statusProvider;
    NSArray *_accounts;
    Account *_selectedAccount;
    BOOL _allowNone;
    BOOL _allowAddServer;
    BOOL _allowEditServerList;
    BOOL _allowConnectionDoctor;
    BOOL _omitStatus;
    BOOL _selectedAccountIsLocked;
    BOOL _delegateWantsTableDataSourceInvocations;
    BOOL _allowAccountLocking;
    BOOL _beConservative;
    BOOL _usesOfflineStatusString;
}

- (id)initWithDelegate:(id)fp8 forAccounts:(unsigned int)fp12;
- (void)dealloc;
- (void)setDelegate:(id)fp8;
- (void)_synchronizePopUpWithSelectedAccount;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (id)displayStringWithOfflineStatus:(id)fp8 ofAccount:(id)fp12;
- (void)refresh;
- (void)enable;
- (void)disable;
- (void)configurePopUpButton:(id)fp8;
- (float)popUpSizeToFitWidth:(id)fp8;
- (int)numberOfItemsInMenu:(id)fp8;
- (unsigned int)menuItemIndexOfAccount:(id)fp8;
- (BOOL)menu:(id)fp8 updateItem:(id)fp12 atIndex:(int)fp16 shouldCancel:(BOOL)fp20;
- (id)_configureMenuItem:(id)fp8 forAccount:(id)fp12;
- (void)_popUpButtonWillPopUp:(id)fp8;
- (void)_selectAccount:(id)fp8;
- (void)showConnectionDoctor:(id)fp8;
- (void)addServer:(id)fp8;
- (void)editServerList:(id)fp8;
- (void)toggleAccountLock:(id)fp8;
- (void)configureTable:(id)fp8 ispInfoField:(id)fp12 handleDoubleClick:(BOOL)fp16 useOfflineStatusString:(BOOL)fp20;
- (void)tableViewWillBecomeVisible:(id)fp8;
- (void)tableViewWillHide:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (unsigned int)tableRowIndexOfAccount:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)_removeAllIndicators:(id)fp8;
- (void)_tableViewDoubleClickAction:(id)fp8;
- (void)_willRefreshStatusForAllAccounts:(id)fp8;
- (void)_didUpdateAccountStatus:(id)fp8;
- (void)_accountInfoDidChange:(id)fp8;
- (void)_reloadAccounts;
- (void)_addUI:(id)fp8;
- (void)_removeUI:(id)fp8;
- (void)_updateUI;
- (void)_updateUIWithAccountState:(id)fp8;
- (BOOL)beConservative;
- (void)setBeConservative:(BOOL)fp8;
- (BOOL)allowAccountLocking;
- (void)setAllowAccountLocking:(BOOL)fp8;
- (BOOL)delegateWantsTableDataSourceInvocations;
- (void)setDelegateWantsTableDataSourceInvocations:(BOOL)fp8;
- (BOOL)selectedAccountIsLocked;
- (void)setSelectedAccountIsLocked:(BOOL)fp8;
- (BOOL)omitStatus;
- (void)setOmitStatus:(BOOL)fp8;
- (BOOL)allowConnectionDoctor;
- (void)setAllowConnectionDoctor:(BOOL)fp8;
- (BOOL)allowEditServerList;
- (void)setAllowEditServerList:(BOOL)fp8;
- (BOOL)allowAddServer;
- (void)setAllowAddServer:(BOOL)fp8;
- (BOOL)allowNone;
- (void)setAllowNone:(BOOL)fp8;
- (id)selectedAccount;
- (void)setSelectedAccount:(id)fp8;
- (id)accounts;
- (void)setAccounts:(id)fp8;
- (id)statusProvider;
- (void)setStatusProvider:(id)fp8;

@end

@interface OfflineStringFormatter : NSFormatter
{
    AccountStatusDataSource *datasource;
    int row;
}

- (id)initWithDatasource:(id)fp8;
- (void)setRow:(int)fp8;
- (id)stringForObjectValue:(id)fp8;
- (id)attributedStringForObjectValue:(id)fp8 withDefaultAttributes:(id)fp12;
- (id)editingStringForObjectValue:(id)fp8;
- (BOOL)getObjectValue:(id *)fp8 forString:(id)fp12 errorDescription:(id *)fp16;

@end

@interface DeliveryFailure : NSObject <AccountStatusDataSourceDelegate>
{
    NSPanel *_panel;
    NSTextField *_errorLabel;
    NSTextField *_errorDescriptionLabel;
    NSTableView *_table;
    NSView *_contents;
    AccountStatusDataSource *_deliveryASDS;
    MailDocumentEditor *_editor;
    MFError *_error;
}

- (id)initWithDocumentEditor:(id)fp8;
- (void)dealloc;
- (void)awakeFromNib;
- (void)reportError:(id)fp8;
- (void)runChooseAlternateDeliveryAccountSheet;
- (void)sendLater:(id)fp8;
- (void)editMessage:(id)fp8;
- (void)tryOtherAccount:(id)fp8;
- (void)editServerList:(id)fp8;
- (void)_chooseAlternateDeliveryAccountSheetClosed:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_sheetDidClose:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_deliveryAccountsDidChange:(id)fp8;
- (void)_postDeliveryFailureHappened;
- (void)_tile;
- (void)_retile;

@end

@interface ProgressIndicatorCell : NSImageCell
{
    NSProgressIndicator *_progressIndicator;
}

- (void)setProgressIndicator:(id)fp8;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)dealloc;

@end

@interface VerticallyCenteredTextFieldCell : NSTextFieldCell
{
}

- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;

@end

@interface BindingsEnabledMenu : NSMenu
{
}

- (id)addItemWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16;
- (id)insertItemWithTitle:(id)fp8 action:(SEL)fp12 keyEquivalent:(id)fp16 atIndex:(unsigned int)fp20;

@end

@interface DefaultWebAppPopUpController : NSObject
{
    NSPopUpButton *_defaultWebApp;
    NSOpenPanel *_selectAppPanel;
    NSDictionary *_webApp;
    int _webIndex;
    NSArray *_schemes;
    NSArray *_fileExtensions;
    unsigned int _OSType;
    NSURL *_sampleURL;
}

- (struct __CFURL *)urlForEntry:(id)fp8;
- (int)indexOfItemInPopUp:(id)fp8 closestToValue:(id)fp12;
- (void)setAppPopUp:(id)fp8 toValue:(id)fp12;
- (BOOL)handleApplicationPopUp:(id)fp8 withSheetDidEndSelector:(SEL)fp12;
- (BOOL)populateSchemeHandlerPopupWithURL:(id)fp8 forPopup:(id)fp12;
- (void)populateWebPopUpWithDefault;
- (id)dictionaryForScheme:(id)fp8;
- (void)setHandler:(id)fp8 forScheme:(id)fp12 saveAndRefresh:(BOOL)fp16;
- (void)setDefaultLSWeakBindingsForApp:(id)fp8;
- (void)setNewWebApplication;
- (void)webAppSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)webApplicationSelected:(id)fp8;
- (void)populatePopUp;
- (void)showDefaultInPopUp;
- (id)initWithPopUp:(id)fp8 schemes:(id)fp12 fileExtensions:(id)fp16 OSType:(unsigned long)fp20 sampleURL:(id)fp24;
- (void)dealloc;
- (void)menuNeedsUpdate:(id)fp8;
- (BOOL)menuHasKeyEquivalent:(id)fp8 forEvent:(id)fp12 target:(id *)fp16 action:(SEL *)fp20;

@end

@interface IOErrorWindowDelegate : NSObject <DynamicErrorWindowDelegate>
{
}

- (BOOL)displayIndeterminateProgress;
- (id)errorMessageForErrorDiagnosis:(unsigned int)fp8;
- (id)errorDescriptionForErrorDiagnosis:(unsigned int)fp8;
- (id)leftButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (id)rightButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (unsigned int)helpTopicForDiagnosis:(unsigned int)fp8;
- (void)leftActionSelectedWithDiagnosis:(unsigned int)fp8;
- (void)rightActionSelectedWithDiagnosis:(unsigned int)fp8;

@end

@interface WebViewLoadOperation : ConcurrentOperation
{
    WebView *webView;
    NSData *data;
    NSURLRequest *urlRequest;
    unsigned int frameCount;
    unsigned int loadedFrameCount;
    id frameLoadDelegate;
    NSInvocation *loadInvocation;
    NSInvocation *didLoadInvocation;
}

- (id)initWithWebView:(id)fp8;
- (id)initWithWebView:(id)fp8 data:(id)fp12;
- (id)initWithWebView:(id)fp8 urlRequest:(id)fp12;
- (id)initWithWebView:(id)fp8 loadInvocation:(id)fp12;
- (id)initWithWebView:(id)fp8 loadInvocation:(id)fp12 didLoadInvocation:(id)fp16;
- (void)setWebView:(id)fp8;
- (void)setData:(id)fp8;
- (void)setUrlRequest:(id)fp8;
- (void)setLoadInvocation:(id)fp8;
- (void)setDidLoadInvocation:(id)fp8;
- (id)description;
- (void)dealloc;
- (void)start;
- (void)startOnMain;
- (void)end;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;

@end

@interface StationeryController : NSObject
{
    Stationery *stationery;
    BOOL isStationeryLoaded;
    NSString *currentColor;
    float letterTopMargin;
    float letterWidth;
    id savedResourceLoadDelegate;
    id savedFrameLoadDelegate;
    int numberOfResourcesNotYetLoaded;
    BOOL isLoadingStationery;
    BOOL isChangingStationeryColor;
    BOOL isLoadingResources;
    BOOL shouldAnimateTransitions;
    WebView *webView;
    ComposeBackEnd *composeBackEnd;
    EditableWebMessageDocument *messageDocument;
    NSMutableDictionary *fontElementsWithColors;
    NSMutableArray *colorsThatHaveBeenDisplayed;
    NSTimer *flushWindowTimer;
}

- (void)dealloc;
- (BOOL)isUpdatingWebView;
- (void)setComposeBackEnd:(id)fp8;
- (void)setWebView:(id)fp8;
- (id)stationery;
- (void)setStationery:(id)fp8;
- (BOOL)isStationeryLoaded;
- (void)setStationeryIsLoaded:(BOOL)fp8;
- (id)color;
- (void)setColor:(id)fp8;
- (void)showColorOptions;
- (void)loadStationery:(id)fp8;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)finishLoadingStationery;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)webView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (void)webView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;
- (void)webView:(id)fp8 didLoadResourceFromMemoryCache:(id)fp12 response:(id)fp16 length:(int)fp20 fromDataSource:(id)fp24;
- (void)timerDidFire:(id)fp8;
- (void)webViewDidFinishLoadingAllResources;
- (void)userClickedOnStationeryBackground:(id)fp8;
- (void)changeStationeryColor:(id)fp8;
- (id)mimeBodyForAttachmentWithURL:(id)fp8;
- (id)stationeryFromCurrentMessageError:(id *)fp8;

@end

@interface MailTimeMachineController : NSObject
{
    MessageViewer *_messageViewer;
    BOOL _savingTOC;
    struct OpaqueEventHandlerRef *_helperAppEventHandler;
    struct ProcessSerialNumber _helperAppPSN;
    struct _NSRect _mailFrame;
}

+ (id)sharedController;
- (id)init;
- (void)registerTimeMachineHandlers;
- (void)unregisterTimeMachineHandlers;
- (void)handleAppleEvent:(id)fp8;
- (void)nowWouldBeAGoodTimeToTerminate:(id)fp8;
- (void)_approvedQuit;
- (void)_saveTableOfContents;
- (void)_thread_saveTableOfContents:(id)fp8;
- (void)_threadedSaveTableOfContentsEnded:(id)fp8;
- (BOOL)_timingOutSaveTableOfContents;
- (void)_threadedSaveTableOfContentsWithEndedSelector:(SEL)fp8;
- (void)_threadedSaveTableOfContents;
- (id)_formattedAddressForAddress:(id)fp8;
- (id)_mailTimeMachineDescriptionForMessage:(id)fp8 withColumns:(id)fp12 andMall:(id)fp16 selected:(BOOL)fp20;
- (void)_launchTimeMachineHelperApp;
- (void)_startWatchingHelperApp;
- (void)_stopWatchingHelperApp;
- (void)_enterTimeMachineMode;
- (void)_prepareExitTimeMachineModeWithDisplayState:(id)fp8;
- (void)_exitTimeMachineModeWithDisplayState:(id)fp8;

@end

@interface MessageViewer (TimeMachine)
- (id)toolbarConfigurationDict;
- (float)mailboxesPaneWidth;
- (float)previewSplitPercentage;
@end

@interface ToDoListPopUpButtonCell : NSPopUpButtonCell
{
    NSCell *textCell;
    NSCell *indicatorCell;
    BOOL _expanding;
    BOOL _hasKeyboardFocus;
    BOOL _hasMouseFocus;
}

- (id)initTextCell:(id)fp8 pullsDown:(BOOL)fp12;
- (void)awakeFromNib;
- (void)_generalInitWithString:(id)fp8;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (BOOL)hasFocus;
- (BOOL)hasKeyboardFocus;
- (void)setHasKeyboardFocus:(BOOL)fp8;
- (BOOL)hasMouseFocus;
- (void)setHasMouseFocus:(BOOL)fp8;
- (void)setLineBreakMode:(unsigned int)fp8;
- (void)setAlignment:(unsigned int)fp8;
- (void)setFont:(id)fp8;
- (void)setBackgroundStyle:(int)fp8;
- (void)setControlSize:(unsigned int)fp8;
- (void)setEnabled:(BOOL)fp8;
- (id)attributedTitle;
- (struct _NSRect)titleRectForBounds:(struct _NSRect)fp8;
- (struct _NSRect)indicatorRectForBounds:(struct _NSRect)fp8;
- (void)drawTitleWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)_indicatorImage;
- (void)drawBorderAndBackgroundWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (struct _NSRect)expansionFrameWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithExpansionFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)menuForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (void)addTrackingAreasForView:(id)fp8 inRect:(struct _NSRect)fp12 withUserInfo:(id)fp28 mouseLocation:(struct _NSPoint)fp32;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;

@end

@interface ToDoListPriorityCell : ToDoListPopUpButtonCell
{
}

- (void)setObjectValue:(id)fp8;

@end

@interface TilingWebView : WebView
{
    unsigned int _isAdjusting:1;
    unsigned int _disableSizeToFit:1;
    float _leftMargin;
    float _minHeight;
}

- (BOOL)disableSizeToFit;
- (void)setDisableSizeToFit:(BOOL)fp8;
- (id)initWithFrame:(struct _NSRect)fp8 frameName:(id)fp24 groupName:(id)fp28;
- (void)adjustForTilingView:(id)fp8 oldSize:(struct _NSSize)fp12;
- (BOOL)createToDoUsing:(id)fp8;
- (void)sizeToFit;
- (float)minHeight;
- (void)setMinHeight:(float)fp8;
- (float)leftMargin;
- (void)setLeftMargin:(float)fp8;

@end

@interface NSWindow (KeyViewNotifications)
- (void)notifyWillSelectKeyViewFollowingView:(id)fp8;
- (void)notifyDidSelectKeyViewFollowingView:(id)fp8;
- (void)notifyWillSelectKeyViewPrecedingView:(id)fp8;
- (void)notifyDidSelectKeyViewPrecedingView:(id)fp8;
- (void)notifyDidRecalculateKeyViewLoop;
@end

@interface FeedbackCollector : NSObject
{
    WebView *metricsWebView;
    NSButton *includeMetricsCheckbox;
    NSWindow *window;
    NSProgressIndicator *spinner;
    NSTextField *collectingTextField;
    NSView *statusContainerView;
    NSButton *continueButton;
    NSMutableString *feedbackHTMLString;
    BOOL sendMetricsImmediately;
    BOOL currentlyLoading;
}

+ (id)sharedInstance;
- (id)init;
- (void)dealloc;
- (void)run;
- (void)collectMetrics;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (void)sendMetricsIfRequested;
- (void)cleanUpWindow;
- (void)loadStringIntoWebView;
- (BOOL)windowShouldClose:(id)fp8;
- (void)continue:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface DOMHTMLDocument (ToDoExtras)
- (id)stripFrozenToDoElement:(id)fp8;
- (id)thawFrozenToDoElement:(id)fp8 todo:(id)fp12 displayReference:(BOOL)fp16;
- (id)todoElementById:(id)fp8;
- (void)freezeToDoElement:(id)fp8;
- (void)freezeToDos;
- (id)todoPriorityForKey:(int)fp8;
- (id)createFrozenToDoElement:(id)fp8 todoElement:(id)fp12;
- (void)resumeToDos;
- (void)pauseToDos;
- (id)createAddNotesButtonElement;
- (id)createEmbedElement:(id)fp8 mode:(id)fp12 class:(id)fp16 id:(id)fp20 todoID:(id)fp24;
- (id)addNotesButtonElement;
- (id)addNotesContainerElement;
- (id)createToDoElement:(id)fp8 displayReference:(BOOL)fp12;
@end

@interface DOMElement (ToDoExtras)
- (void)setToDoEditable:(BOOL)fp8;
- (void)setToDoContentEditable:(BOOL)fp8;
- (id)todoContentFragment;
- (void)setTodoContentFragment:(id)fp8;
- (id)frozenToDoContentFragment;
- (id)todoID;
- (id)frozenToDoID;
- (void)todoElementFlatten;
- (void)frozenToDoElementFlatten;
- (void)updateTodoDateElementWithToDo:(id)fp8;
- (void)updateTodoElementWithEditor:(id)fp8;
@end

@interface DOMRange (ToDoExtras)
- (id)entireTodos;
- (BOOL)_hasToDoElements:(id)fp8 partialOK:(BOOL)fp12;
- (id)enclosingToDoElement;
- (BOOL)isWithinToDo;
- (BOOL)containsAnyToDos;
- (BOOL)containsEntireToDos;
- (id)anyTodoElements;
- (id)entireTodoElements;
- (BOOL)containsToDoCheckbox:(id)fp8;
- (BOOL)containsToDoCheckboxAndContent:(id)fp8;
- (id)effectiveToDoRangeIfDifferent;
@end

@interface DOMNode (ToDoExtras)
- (id)_elementsWithIDPrefix:(id)fp8 className:(id)fp12;
- (id)todoIDs;
- (id)todoElements;
- (id)frozenToDoIDs;
- (id)frozenToDoElements;
- (id)enclosingToDoElement;
- (BOOL)isToDoElement;
- (BOOL)isFrozenToDoElement;
- (BOOL)isToDoBodyElement;
- (BOOL)isToDoContentElement;
- (id)frozenToDoContentElement;
- (id)rangeBeforeToDo;
- (id)rangeAfterToDo;
- (id)visualRangeBeforeToDo;
- (id)visualRangeAfterToDo;
- (id)contentRange;
- (id)todoUserContentRange;
- (id)todoUserContent;
- (void)setTodoUserContent:(id)fp8;
- (id)todoBodyElement;
- (id)todoCheckboxElement;
- (id)todoDateElement;
- (id)todoContentElement;
- (id)todoRowElement;
- (id)todoDeleteElement;
- (id)todoDeleteDivElement;
- (void)flattenTodoElements;
- (BOOL)todoDeleteButtonIsVisible;
- (void)setTodoDeleteButtonIsVisible:(BOOL)fp8;
@end

@interface ToDoAlarmEditorController : NSObject
{
    ToDoAlarmEditorView *_view;
    NSArray *_todos;
    ToDoAlarms *_commonAlarms;
    NSMutableArray *_uncommonAlarms;
    unsigned int _uncommonCount;
}

- (id)undoManager;
- (void)_updateAlarms;
- (id)init;
- (void)dealloc;
- (void)setToDos:(id)fp8;
- (id)toDos;
- (void)removeOtherAlarms:(id)fp8;
- (void)addAlarm:(id)fp8;
- (void)toDoAlarms:(id)fp8 alarmRemoved:(id)fp12;

@end

@interface ToDoAlarmEditorView : NSView
{
    ToDoMultipleAlarmsView *_alarmsView;
    ToDoPlusMinusButton *_addAlarmButton;
    NSTextField *_addAlarmLabel;
    NSTextField *_otherAlarmsText;
    ToDoPlusMinusButton *_otherAlarmsClearButton;
    float _addAlarmSectionHeight;
    float _otherAlarmsSectionHeight;
    float _verticalInset;
    BOOL _enabled;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)awakeFromNib;
- (void)drawRect:(struct _NSRect)fp8;
- (void)finishInitialLayout;
- (void)reLayout;
- (void)alarmsLayoutChanged:(id)fp8;
- (void)setAlarms:(id)fp8;
- (id)alarms;
- (void)setOtherAlarmsLabel:(id)fp8;
- (void)setOtherAlarmsHidden:(BOOL)fp8;
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)fp8;

@end

@interface ToDoCommonAlarmsProxy : ToDoAlarm
{
    NSMutableArray *_alarms;
    BOOL _propogateChanges;
}

+ (id)alarmProxyWithAlarms:(id)fp8;
- (id)initWithAlarm:(id)fp8;
- (id)initWithAlarms:(id)fp8;
- (void)dealloc;
- (id)alarms;
- (void)setAlarms:(id)fp8;
- (void)setPropogateChanges:(BOOL)fp8;
- (void)setHasNotChanged;
- (void)setEnabled:(BOOL)fp8;
- (void)setType:(int)fp8;
- (void)setOffsetType:(int)fp8;
- (void)setOffsetDays:(unsigned int)fp8;
- (void)setReminderDate:(id)fp8;
- (void)setTime:(int)fp8;
- (void)setSound:(id)fp8;
- (void)setEmailAddress:(id)fp8;
- (void)setUrl:(id)fp8;
- (void)setUnrecognizedData:(id)fp8;
- (int)offsetType;

@end

@interface ToDoMenuDatePickerCell : NSDatePickerCell
{
    int _position;
}

- (void)setPosition:(int)fp8;
- (int)position;
- (struct _NSRect)drawingRectForBounds:(struct _NSRect)fp8;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (unsigned int)hitTestForEvent:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28;
- (BOOL)trackMouse:(id)fp8 inRect:(struct _NSRect)fp12 ofView:(id)fp28 untilMouseUp:(BOOL)fp32;

@end

@interface ToDoMenuDatePicker : NSDatePicker
{
}

+ (id)menuDatePicker;
- (id)init;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)setPosition:(int)fp8;
- (int)position;

@end

@interface ToDoAlarmEditorWindow : ChildWindow
{
    ToDoAlarmEditorController *_alarmEditorController;
}

- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (id)toDos;
- (void)setToDos:(id)fp8;
- (BOOL)accessibilityIsIgnored;

@end

@interface ToDoAlarmEditorWindowController : ChildWindowController
{
}

+ (id)sharedInstance;
- (id)toDos;
- (void)setToDos:(id)fp8;
- (id)window;
- (id)windowNibName;
- (void)showWindow:(id)fp8;
- (void)close;
- (void)closeImmediately;
- (void)closeWindowTimerFired:(id)fp8;

@end

@interface NSColor (ToDoColors)
+ (id)todoDetailsWindowLabelColor;
+ (id)todoDetailsWindowTextColor;
+ (id)todoDetailsWindowDisabledTextColor;
@end

@interface ToDoCloseButton : NSButton
{
}

- (void)awakeFromNib;

@end

@interface NSMenu (MailAppKitAdditions)
- (void)removeAllItems;
@end

@interface ChildWindowController : NSWindowController
{
    NSWindow *_parentWindow;
    id _delegate;
    struct {
        unsigned int windowIsOpen:1;
        unsigned int shareKey:1;
        unsigned int closeWhenResigningKey:1;
        unsigned int delegateRespondsToBestFrameOriginForWindow:1;
        unsigned int viewPostingSheet:1;
        unsigned int reserved:27;
    } _flags;
    NSView *_firstKeyView;
    NSView *_lastKeyView;
}

- (id)initWithWindow:(id)fp8;
- (void)dealloc;
- (id)window;
- (id)parentWindow;
- (void)setParentWindow:(id)fp8;
- (BOOL)sharesKey;
- (void)setSharesKey:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (BOOL)shouldCloseWhenResigningKey;
- (void)setShouldCloseWhenResigningKey:(BOOL)fp8;
- (id)firstKeyView;
- (id)lastKeyView;
- (BOOL)isWindowOpen;
- (void)addNotifications;
- (void)removeNotifications;
- (void)showWindow:(id)fp8;
- (BOOL)canClose;
- (void)closeWindow:(id)fp8;
- (void)close;
- (void)closeImmediately;
- (struct _NSPoint)bestWindowFrameOrigin;
- (void)closeIfNecessaryForEvent:(id)fp8 before:(BOOL)fp12;
- (void)viewWillPostSheet:(id)fp8;
- (void)viewDonePostingSheet:(id)fp8;
- (void)menuDidBeginTracking:(id)fp8;
- (void)parentWindowDidResignKey:(id)fp8;
- (void)parentWindowWillClose:(id)fp8;
- (void)parentWindowWillBeginSheet:(id)fp8;
- (void)parentWindowDidResize:(id)fp8;
- (void)parentWindowDidMove:(id)fp8;
- (void)parentWindowDidUpdate:(id)fp8;
- (void)windowWillClose:(id)fp8;
- (void)windowDidResignKey:(id)fp8;
- (void)windowDidResize:(id)fp8;
- (void)window:(id)fp8 didProcessEvent:(id)fp12;

@end

@interface ChildWindow : EventDelegateWindow
{
    BOOL canBecomeKeyWindow;
    BOOL canBecomeMainWindow;
}

- (id)initWithContentRect:(struct _NSRect)fp8 styleMask:(unsigned int)fp24 backing:(unsigned int)fp28 defer:(BOOL)fp32;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (void)setCanBecomeKeyWindow:(BOOL)fp8;
- (void)setCanBecomeMainWindow:(BOOL)fp8;

@end

@interface MailApp (Help)
- (void)openHelpTopic:(id)fp8;
@end

@interface ActivityViewerMailSound : NSObject
{
}

- (id)init;
- (void)dealloc;
- (void)beginFetch:(BOOL)fp8;
- (void)_monitoredActivityStarted:(id)fp8;
- (void)_monitoredActivityEnded:(id)fp8;
- (BOOL)_isActivityInteresting:(id)fp8 isStarting:(BOOL)fp12;
- (void)_mailFetchComplete:(id)fp8;

@end

@interface AccountSetupValidatorAttempt : NSObject
{
    unsigned int _portNumber;
    BOOL _usesSSL;
}

+ (id)_attemptWithPortNumber:(unsigned int)fp8 usesSSL:(BOOL)fp12;
+ (id)attemptsForAccount:(id)fp8 accountInfo:(id)fp12;
- (BOOL)usesSSL;
- (void)setUsesSSL:(BOOL)fp8;
- (unsigned int)portNumber;
- (void)setPortNumber:(unsigned int)fp8;

@end

@interface AccountSetupValidator : NSObject
{
    NSArray *_attempts;
    Account *_account;
    Connection *_connection;
    AuthScheme *_preferredAuthScheme;
    ActivityMonitor *_validationActivity;
    NSString *_password;
    BOOL _usedSSL;
    id <AccountSetupValidatorDelegate> _delegate;
}

+ (id)validatorWithAccount:(id)fp8 accountInfo:(id)fp12 delegate:(id)fp16;
- (id)_initWithAccount:(id)fp8 accountInfo:(id)fp12 delegate:(id)fp16;
- (void)dealloc;
- (void)cancel;
- (void)_sendValidatorDidChangeState:(id)fp8;
- (void)_sendValidatorDidFail;
- (void)_sendValidatorDidFinish;
- (void)_updateState:(int)fp8;
- (BOOL)_connectIfNeeded;
- (void)_disconnect;
- (BOOL)_attemptInitialConnection;
- (BOOL)_attemptAuthentication;
- (void)_validate;
- (BOOL)usedSSL;
- (void)setUsedSSL:(BOOL)fp8;
- (id)password;
- (void)setPassword:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (id)preferredAuthScheme;
- (void)setPreferredAuthScheme:(id)fp8;
- (id)validationActivity;
- (void)setValidationActivity:(id)fp8;
- (id)connection;
- (void)setConnection:(id)fp8;
- (id)account;
- (void)setAccount:(id)fp8;
- (id)attempts;
- (void)setAttempts:(id)fp8;

@end

@interface PDFAttachmentView : PDFView
{
    MailTextAttachment *attachment;
    PDFDocument *savedDocument;
}

+ (void)initialize;
+ (id)viewForFileWrapper:(id)fp8;
- (BOOL)isForEditing;
- (void)viewWillMoveToSuperview:(id)fp8;
- (void)layoutWebView:(id)fp8;
- (void)turnOffInlineDisplay;
- (void)setFrameSizeAndAutoScale:(id)fp8;
- (id)menuForEvent:(id)fp8;
- (void)resizeToFit;
- (void)dealloc;
- (void)scaleFactorDidChange:(id)fp8;
- (void)pageDidChange:(id)fp8;
- (void)setDisplayMode:(int)fp8;
- (void)documentDidUnlock:(id)fp8;
- (void)mouseDown:(id)fp8;
- (void)mouseDragged:(id)fp8;
- (id)attachment;
- (void)setAttachment:(id)fp8;

@end

@interface SegmentedToolbarItem : NSToolbarItemGroup
{
    NSMutableArray *alternateLabels;
}

- (id)initWithItemIdentifier:(id)fp8;
- (void)dealloc;
- (void)setAlternateLabels:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)configureForDisplayMode:(unsigned int)fp8 andSizeMode:(unsigned int)fp12;
- (void)validate;
- (id)control;
- (void)controlAction:(id)fp8;
- (void)setSegmentCount:(int)fp8;
- (id)methodSignatureForSelector:(SEL)fp8;
- (void)forwardInvocation:(id)fp8;
- (id)labelForSegment:(int)fp8;
- (void)setLabel:(id)fp8 forSegment:(int)fp12;
- (id)alternateLabelForSegment:(int)fp8;
- (void)setAlternateLabel:(id)fp8 forSegment:(int)fp12;
- (id)paletteLabelForSegment:(int)fp8;
- (void)setPaletteLabel:(id)fp8 forSegment:(int)fp12;
- (SEL)actionForSegment:(int)fp8;
- (void)setAction:(SEL)fp8 forSegment:(int)fp12;
- (id)targetForSegment:(int)fp8;
- (void)setTarget:(id)fp8 forSegment:(int)fp12;
- (void)setTag:(int)fp8 forSegment:(int)fp12;
- (void)setToolTip:(id)fp8 forSegment:(int)fp12;
- (void)setMenu:(id)fp8 forSegment:(int)fp12;

@end

@interface SegmentedToolbarItemSegmentItem : NSToolbarItem
{
    SegmentedToolbarItem *parent;
    int segmentNumber;
}

- (id)menuFormRepresentation;
- (void)setToolTip:(id)fp8;
- (void)_setToolTip:(id)fp8;
- (void)setTag:(int)fp8;
- (void)_setTag:(int)fp8;
- (void)setImage:(id)fp8;
- (int)segmentNumber;
- (void)setSegmentNumber:(int)fp8;
- (id)parent;
- (void)setParent:(id)fp8;

@end

@interface SegmentedToolbarItemSegmentedCell : NSSegmentedCell
{
}

- (double)_menuDelayTimeForSegment:(int)fp8;

@end

@interface BorderlessToolbarItem : NSToolbarItem
{
}

- (id)initWithItemIdentifier:(id)fp8;
- (void)configureForDisplayMode:(unsigned int)fp8 andSizeMode:(unsigned int)fp12;
- (void)validate;
- (id)control;
- (void)setLabel:(id)fp8;
- (id)image;
- (void)setImage:(id)fp8;
- (id)inactiveImage;
- (void)setInactiveImage:(id)fp8;
- (id)pressedImage;
- (void)setPressedImage:(id)fp8;

@end

@interface BorderlessButton : NSButton
{
    NSImage *activeImage;
    NSImage *inactiveImage;
}

- (BOOL)isOpaque;
- (void)dealloc;
- (void)setEnabled:(BOOL)fp8;
- (id)inactiveImage;
- (void)setInactiveImage:(id)fp8;
- (id)activeImage;
- (void)setActiveImage:(id)fp8;

@end

@interface LoadingOverlay : NSObject
{
    NSView *_overlayView;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_statusMessageField;
    NSButton *_cancelButton;
    ActivityMonitor *_monitor;
    id _modalDelegate;
}

- (id)initWithModalDelegate:(id)fp8;
- (void)dealloc;
- (void)displayInSuperview:(id)fp8;
- (void)displayInSuperviewAfterDelay:(id)fp8;
- (void)setActivityMonitor:(id)fp8;
- (void)setStatusMessage:(id)fp8;
- (id)statusMessage;
- (void)showCancelButton:(BOOL)fp8;
- (void)activityEnded:(id)fp8;
- (void)cancel:(id)fp8;
- (id)modalDelegate;
- (void)setModalDelegate:(id)fp8;
- (id)overlayView;
- (id)activityMonitor;

@end

@interface FontPreferenceContainerView : NSView
{
    NSButton *_selectButton;
    NSTextField *_labelTextField;
    NSTextField *_sampleTextField;
    struct _NSRect _myOriginalFrame;
    struct _NSRect _sampleTextFieldOriginalFrame;
    float _buttonOffset;
    float _labelOffset;
    float _sampleOffset;
    SEL getSEL;
    SEL setSEL;
}

- (void)awakeFromNib;
- (void)layoutVertically;
- (void)sizeToFit;
- (SEL)setSEL;
- (void)setSetSEL:(SEL)fp8;
- (SEL)getSEL;
- (void)setGetSEL:(SEL)fp8;

@end

@interface BusyStatusErrorWindowDelegate : NSObject <DynamicErrorWindowDelegate>
{
    DatabaseRecoverer *_recoverer;
}

- (void)dealloc;
- (id)initWithRecoverer:(id)fp8;
- (BOOL)displayIndeterminateProgress;
- (id)errorMessageForErrorDiagnosis:(unsigned int)fp8;
- (id)errorDescriptionForErrorDiagnosis:(unsigned int)fp8;
- (id)leftButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (id)rightButtonTextForErrorDiagnosis:(unsigned int)fp8;
- (void)leftActionSelectedWithDiagnosis:(unsigned int)fp8;
- (void)rightActionSelectedWithDiagnosis:(unsigned int)fp8;
- (unsigned int)helpTopicForDiagnosis:(unsigned int)fp8;
- (id)_stringForDatabase;
- (id)recoverer;
- (void)setRecoverer:(id)fp8;

@end

@interface DynamicErrorWindowController : NSWindowController
{
    NSTextField *_message;
    NSTextField *_explanation;
    NSButton *_leftButton;
    NSProgressIndicator *_progressIndicator;
    NSButton *_rightButton;
    NSButton *_helpButton;
    int _diagnosisCode;
    double _distanceToRightEdge;
    double _distanceBetweenButtons;
    double _distanceToBottomEdge;
    double _distanceFromProgresBarToButtons;
    double _progressIndicatorHeight;
    id <DynamicErrorWindowDelegate> _delegate;
}

- (id)initWithDelegate:(id)fp8;
- (void)dealloc;
- (void)updateTextFieldHeightForNewContent:(id)fp8;
- (void)updateTextField:(id)fp8 withText:(id)fp12 belowControl:(id)fp16;
- (void)collectBasicWindowMetrics;
- (void)relocateButton:(id)fp8 relativeTo:(float)fp12;
- (void)awakeFromNib;
- (void)setDelegate:(id)fp8;
- (void)updateWindowLayout;
- (void)errorDiagnosedAs:(int)fp8;
- (void)leftActionSelected:(id)fp8;
- (void)rightActionSelected:(id)fp8;

@end

@interface ToDoCloseButtonCell : NSButtonCell
{
}

- (id)initWithCell:(id)fp8;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;

@end

@interface GoogleAccountSetupEnabler : AccountSetupEnabler
{
    BOOL _isEnabling;
}

+ (BOOL)canHandleHostname:(id)fp8;
- (void)synchronouslyEnable;
- (void)connection:(id)fp8 didReceiveAuthenticationChallenge:(id)fp12;
- (void)connectionDidFinishLoading:(id)fp8;
- (void)connection:(id)fp8 didFailWithError:(id)fp12;

@end

@interface AccountSetupEnabler : NSObject
{
    Account *_account;
}

+ (id)enablerForAccount:(id)fp8;
+ (BOOL)canHandleHostname:(id)fp8;
- (id)initWithAccount:(id)fp8;
- (void)dealloc;
- (void)synchronouslyEnable;

@end

@interface PrintingAccessoryViewController : NSViewController <NSPrintPanelAccessorizing>
{
    MessagePrinter *_messagePrinter;
    NSMatrix *_scalingBehaviorMatrix;
}

- (id)initWithMessagePrinter:(id)fp8;
- (void)setScalingBehavior:(unsigned int)fp8;
- (void)updateScalingBehavior:(id)fp8;
- (void)setRepresentedObject:(id)fp8;
- (unsigned int)scalingBehavior;
- (id)stringForScalingBehavior;
- (id)keyPathsForValuesAffectingPreview;
- (id)localizedSummaryItems;

@end

@interface PrintingAccessoryViewController (PrintingAccessoryViewControllerInternal)
- (void)_updateViews;
- (void)awakeFromNib;
@end

@interface MailboxesOutlineView : NSOutlineView
{
    BOOL allowsSelectAll;
    BOOL acceptsFirstResponderOnMouseDown;
    BOOL showsUnnecessaryDisclosureTriangles;
}

- (id)initWithCoder:(id)fp8;
- (struct _NSRect)frameOfOutlineCellAtRow:(int)fp8;
- (void)keyDown:(id)fp8;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)mouseDown:(id)fp8;
- (void)mouseUp:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)editColumn:(int)fp8 row:(int)fp12 withEvent:(id)fp16 select:(BOOL)fp20;
- (id)menuForEvent:(id)fp8;
- (BOOL)canFocusCell:(id)fp8 atTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)shouldCollapseAutoExpandedItemsForDeposited:(BOOL)fp8;
- (BOOL)inLiveResize;
- (BOOL)showsUnnecessaryDisclosureTriangles;
- (void)setShowsUnnecessaryDisclosureTriangles:(BOOL)fp8;
- (BOOL)acceptsFirstResponderOnMouseDown;
- (void)setAcceptsFirstResponderOnMouseDown:(BOOL)fp8;
- (BOOL)allowsSelectAll;
- (void)setAllowsSelectAll:(BOOL)fp8;

@end

@interface MailboxesOutlineViewController : NSObject <MVMailboxSelectionOwner>
{
    MailboxesOutlineView *outlineView;
    id <MailboxesOutlineViewControllerDelegate> delegate;
    BOOL useLargeIcons;
    BOOL isReloading;
    BOOL wantsToEditInline;
    NSTextFieldCell *textCell;
    MailboxListCell *mailboxCell;
    NSMutableDictionary *trackingAreasByItem;
    NSMutableDictionary *progressIndicatorsByItem;
    NSMutableDictionary *activitiesByItem;
    id rolledOverItem;
    int rolledOverIndicator;
    BOOL mouseIsDown;
    float idealOutlineViewWidth;
}

+ (void)allViewersAreClosed;
- (id)init;
- (void)awakeFromNib;
- (void)dealloc;
- (float)minimizedOutlineViewWidth;
- (float)minimumWidthNeededToUseMailboxes;
- (void)makeMailboxesListFirstResponder;
- (void)editNameOfMailbox:(id)fp8;
- (BOOL)canSelectMailbox:(id)fp8;
- (float)adjustWidthForScroller:(float)fp8;
- (id)firstChildIfCollapsedSpecialMailbox:(id)fp8;
- (unsigned int)badgeCountForItem:(id)fp8;
- (int)alertStateForItem:(id)fp8;
- (void)clearTrackingAreasForItem:(id)fp8;
- (void)clearProgressIndicatorsForItem:(id)fp8;
- (void)reallyClearProgressIndicator:(id)fp8;
- (void)redisplayRowsForItems:(id)fp8 afterClearingProgressIndicators:(id)fp12;
- (void)configureCell:(id)fp8 forItem:(id)fp12;
- (void)saveSelectionAndReloadItem:(id)fp8 reloadChildren:(BOOL)fp12;
- (void)setOutlineViewRowHeight;
- (BOOL)isTopLevelItem:(id)fp8;
- (id)mailboxesForActivity:(id)fp8;
- (id)persistentObjectsForItems:(id)fp8;
- (void)monitoredActivityStarted:(id)fp8;
- (void)monitoredActivityEnded:(id)fp8;
- (void)monitoredActivityAddedTarget:(id)fp8;
- (void)monitoredActivityRemovedTarget:(id)fp8;
- (void)cellDidAddTrackingAreas:(id)fp8;
- (void)mouseEntered:(id)fp8;
- (void)mouseExited:(id)fp8;
- (BOOL)handleMouseDown:(id)fp8;
- (BOOL)handleMouseUp:(id)fp8;
- (void)subscriptionClickedForItem:(id)fp8;
- (void)alertClickedForItem:(id)fp8;
- (void)offlineAlertSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)toggleShowsUnderInboxForItem:(id)fp8;
- (void)accountAdded:(id)fp8;
- (void)accountsChanged:(id)fp8;
- (void)accountOfflineStatusDidChange:(id)fp8;
- (void)mailboxListingDidChange:(id)fp8;
- (void)mailboxPublicStatusDidChange:(id)fp8;
- (void)sectionListingDidChange:(id)fp8;
- (void)toDoIncompleteCountChanged:(id)fp8;
- (void)userInfoDidChange:(id)fp8;
- (void)viewerPreferencesChanged:(id)fp8;
- (id)selectedMailboxes;
- (id)selectedMailbox;
- (BOOL)isSelectedMailboxSpecial;
- (void)selectPathsToMailboxes:(id)fp8;
- (BOOL)mailboxIsExpanded:(id)fp8;
- (BOOL)sectionIsExpanded:(id)fp8;
- (id)expandedItems;
- (id)sortedSectionItemsForTimeMachine;
- (void)revealMailbox:(id)fp8;
- (void)_revealMailbox:(id)fp8;
- (id)mailboxSelectionWindow;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (void)outlineView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (void)renameFailureSheetEnded:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)outlineView:(id)fp8 itemForPersistentObject:(id)fp12;
- (id)outlineView:(id)fp8 persistentObjectForItem:(id)fp12;
- (BOOL)outlineView:(id)fp8 writeItems:(id)fp12 toPasteboard:(id)fp16;
- (void)pasteboard:(id)fp8 provideDataForType:(id)fp12;
- (BOOL)outlineView:(id)fp8 acceptDrop:(id)fp12 item:(id)fp16 childIndex:(int)fp20;
- (unsigned int)outlineView:(id)fp8 validateDrop:(id)fp12 proposedItem:(id)fp16 proposedChildIndex:(int)fp20;
- (id)outlineView:(id)fp8 dataCellForTableColumn:(id)fp12 item:(id)fp16;
- (id)outlineView:(id)fp8 toolTipForCell:(id)fp12 rect:(struct _NSRect *)fp16 tableColumn:(id)fp20 item:(id)fp24 mouseLocation:(struct _NSPoint)fp28;
- (BOOL)outlineView:(id)fp8 isGroupItem:(id)fp12;
- (BOOL)outlineView:(id)fp8 shouldCollapseItem:(id)fp12;
- (BOOL)outlineView:(id)fp8 shouldEditTableColumn:(id)fp12 item:(id)fp16;
- (id)outlineView:(id)fp8 selectionIndexesForProposedSelection:(id)fp12;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (void)outlineViewItemDidExpand:(id)fp8;
- (void)scrollOutlineViewRectToVisible:(id)fp8;
- (void)outlineViewItemDidCollapse:(id)fp8;
- (void)outlineViewSelectionDidChange:(id)fp8;
- (id)outlineView:(id)fp8 menuForEvent:(id)fp12 item:(id)fp16;
- (void)selectAllInOutlineView:(id)fp8;
- (void)setFirstResponderAfterMouseDownOnOutlineView:(id)fp8;
- (BOOL)outlineView:(id)fp8 doCommandBySelector:(SEL)fp12;
- (BOOL)outlineView:(id)fp8 willEditTableColumn:(id)fp12 item:(id)fp16;
- (float)idealOutlineViewWidth;
- (void)setIdealOutlineViewWidth:(float)fp8;
- (id)outlineView;
- (BOOL)useLargeIcons;
- (void)setUseLargeIcons:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;

@end

@interface MailboxesOutlineViewStateStorage : NSObject
{
    BOOL shouldShowOutbox;
    BOOL shouldShowDrafts;
    BOOL shouldShowTrash;
    BOOL shouldShowJunk;
    BOOL shouldShowNotes;
    BOOL shouldShowToDos;
    NSArray *draggedMailboxes;
    NSArray *sectionItems;
    NSArray *visibleSectionItems;
    NSArray *visibleMailboxes;
    NSArray *visibleReminders;
    BOOL isListeningForDocumentEditorNotifications;
    BOOL isListeningForMessagesAdded;
    BOOL isListeningForToDos;
}

+ (id)sharedInstance;
- (BOOL)draftsHasMessageWithNoWindow;
- (id)init;
- (void)dealloc;
- (void)setShouldShowVariablesByResettingFirst:(BOOL)fp8;
- (void)readSectionItemsFromDefaults;
- (void)writeSectionItemsToDefaults;
- (void)recalculateVisibleSectionItems;
- (void)resetSectionItems;
- (void)clearAndResetShouldShowVariables;
- (void)setShouldShowVariables;
- (void)reload;
- (void)moveSectionItem:(id)fp8 beforeItem:(id)fp12;
- (void)messagesWereAddedToMailboxes:(id)fp8;
- (void)toDosWereAddedToStores:(id)fp8;
- (void)deliveryFailureHappened:(id)fp8;
- (void)editorClosed:(id)fp8;
- (void)editorUserSaved:(id)fp8;
- (id)visibleReminders;
- (void)setVisibleReminders:(id)fp8;
- (id)visibleMailboxes;
- (void)setVisibleMailboxes:(id)fp8;
- (id)visibleSectionItems;
- (void)setVisibleSectionItems:(id)fp8;
- (id)sectionItems;
- (void)setSectionItems:(id)fp8;
- (id)draggedMailboxes;
- (void)setDraggedMailboxes:(id)fp8;
- (BOOL)shouldShowToDos;
- (void)setShouldShowToDos:(BOOL)fp8;
- (BOOL)shouldShowNotes;
- (void)setShouldShowNotes:(BOOL)fp8;
- (BOOL)shouldShowJunk;
- (void)setShouldShowJunk:(BOOL)fp8;
- (BOOL)shouldShowTrash;
- (void)setShouldShowTrash:(BOOL)fp8;
- (BOOL)shouldShowDrafts;
- (void)setShouldShowDrafts:(BOOL)fp8;
- (BOOL)shouldShowOutbox;
- (void)setShouldShowOutbox:(BOOL)fp8;

@end

@interface MailboxesScrollView : NSScrollView
{
}

- (void)tile;

@end

@interface MailboxListCell : NSTextFieldCell
{
    int rolledOverIndicator;
    BOOL isClickedOn;
    BOOL isPublicOrShared;
    BOOL shouldReverseArrowIndicator;
    int alertState;
    int feedInboxState;
    NSImage *icon;
    unsigned int badgeCount;
    NSProgressIndicator *progressIndicator;
    id item;
}

- (void)showProgressIndicator:(id)fp8 fractionDone:(double)fp12;
- (void)startProgressIndicatorAnimation:(id)fp8;
- (void)positionProgressIndicatorInRect:(struct _NSRect)fp8;
- (id)badgeTextColor;
- (id)badgeColor;
- (id)indicatorColorForRollover:(BOOL)fp8;
- (void)controlTintChanged:(id)fp8;
- (id)drawIndicator:(int)fp8 withImage:(id)fp12 circled:(BOOL)fp16 cellFrame:(struct _NSRect *)fp20 trackingAreaTarget:(id)fp24;
- (id)badgeTextAttributes;
- (void)drawBadgeCenteredInRect:(struct _NSRect)fp8;
- (float)badgeWidth;
- (float)idealWidth;
- (id)initTextCell:(id)fp8;
- (id)initImageCell:(id)fp8;
- (id)copyWithZone:(struct _NSZone *)fp8;
- (void)dealloc;
- (void)drawWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawInteriorWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)selectWithFrame:(struct _NSRect)fp8 inView:(id)fp24 editor:(id)fp28 delegate:(id)fp32 start:(int)fp36 length:(int)fp40;
- (struct _NSRect)expansionFrameWithFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (void)drawWithExpansionFrame:(struct _NSRect)fp8 inView:(id)fp24;
- (id)toolTipForPoint:(struct _NSPoint)fp8 rect:(struct _NSRect *)fp16 trackingAreas:(id)fp20;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)fp8;
- (BOOL)accessibilityIsAttributeSettable:(id)fp8;
- (BOOL)shouldReverseArrowIndicator;
- (void)setShouldReverseArrowIndicator:(BOOL)fp8;
- (id)item;
- (void)setItem:(id)fp8;
- (id)progressIndicator;
- (void)setProgressIndicator:(id)fp8;
- (unsigned int)badgeCount;
- (void)setBadgeCount:(unsigned int)fp8;
- (id)icon;
- (void)setIcon:(id)fp8;
- (int)feedInboxState;
- (void)setFeedInboxState:(int)fp8;
- (int)alertState;
- (void)setAlertState:(int)fp8;
- (BOOL)isPublicOrShared;
- (void)setIsPublicOrShared:(BOOL)fp8;
- (BOOL)isClickedOn;
- (void)setIsClickedOn:(BOOL)fp8;
- (int)rolledOverIndicator;
- (void)setRolledOverIndicator:(int)fp8;

@end

@interface ToDoListDatePanel : NSObject
{
    ToDoListView *_listView;
    SEL _selectorToApply;
    id _target;
    NSArray *_todos;
    NSTextField *_messageTextField;
    NSDatePicker *_datePicker;
}

- (id)initWithListView:(id)fp8;
- (void)dealloc;
- (void)requestDateWithMessage:(id)fp8 forToDos:(id)fp12 applyDateSelector:(SEL)fp16 toTarget:(id)fp20;
- (void)confirm:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface ToDoListDatePanel (Internal)
- (void)_clearState;
@end

@interface DOMCSSStylePropertyAnimation : NSAnimation
{
    NSString *_property;
    float _startValue;
    float _endValue;
    DOMCSSStyleDeclaration *_style;
}

- (id)initWithDuration:(double)fp8 animationCurve:(unsigned int)fp16 element:(id)fp20 property:(id)fp24;
- (void)dealloc;
- (BOOL)isIncreasing;
- (void)reset;
- (void)reverse;
- (void)setCurrentProgress:(float)fp8;
- (id)style;
- (void)setStyle:(id)fp8;
- (float)startValue;
- (void)setStartValue:(float)fp8;
- (float)endValue;
- (void)setEndValue:(float)fp8;
- (id)property;
- (void)setProperty:(id)fp8;

@end

@interface NSPasteboard (ToDoUIPasteboardSupport)
- (id)extractToDosForMailboxUid:(id)fp8;
- (id)extractToDosForMailboxUid:(id)fp8 oldToNewID:(id)fp12;
@end

@interface NSMutableArray (ToDoUIPasteboardSupport)
- (void)addUniqueToDo:(id)fp8 inCalendar:(id)fp12 mailboxUid:(id)fp16 oldToNewId:(id)fp20;
@end

@interface ToDoMissingCalendarsPanel : NSObject
{
    int _mode;
    NSString *_calendarName;
    NSPopUpButton *_calendarMenu;
    NSTextField *_headingText;
    NSTextField *_detailsText;
}

- (id)init;
- (void)dealloc;
- (void)showWithCalendarNames:(id)fp8 accountName:(id)fp12;
- (int)selectedMode;
- (id)calendarName;
- (void)confirm:(id)fp8;
- (void)cancel:(id)fp8;

@end

@interface SelfAnimatingProgressIndicator : NSProgressIndicator
{
}

- (void)setIndeterminate:(BOOL)fp8;

@end

@interface RSSFeedSubscriber : NSObject
{
    int _state;
    NSString *_errorString;
    ActivityMonitor *_monitor;
}

+ (void)initialize;
+ (BOOL)isFeedURLString:(id)fp8;
+ (id)subscriber;
- (void)subscribeWithURLString:(id)fp8 title:(id)fp12 addToInbox:(BOOL)fp16 autodiscover:(BOOL)fp20;
- (void)subscribeWithURLStrings:(id)fp8 titles:(id)fp12 addToInbox:(BOOL)fp16 autodiscover:(BOOL)fp20;
- (void)dealloc;
- (void)cancel;
- (void)_updateState:(id)fp8 status:(id)fp12;
- (void)_workerUpdateState:(int)fp8 status:(id)fp12;
- (void)_workerSubscribeWithURLStrings:(id)fp8 titles:(id)fp12 addToInbox:(id)fp16 autodiscover:(id)fp20;
- (BOOL)isIdle;
- (BOOL)isFetching;
- (BOOL)didFail;
- (BOOL)didSucceed;
- (id)errorString;
- (void)setErrorString:(id)fp8;
- (int)state;
- (void)setState:(int)fp8;

@end

@interface RSSAddFeedController : NSObject <SyncableDataInterestedParty>
{
    NSWindow *_window;
    NSMatrix *_viewChoice;
    NSView *_searchSection;
    NSView *_containerView;
    NSView *_safariBookmarksView;
    NSTextField *_customURLView;
    BookmarksManager *_bookmarksManager;
    NSTableView *_feeds;
    MailboxesOutlineView *_sidebar;
    NSTreeController *_sidebarController;
    NSArrayController *_feedController;
    BOOL _isSyncing;
    BOOL _isSpinning;
    BOOL _isShowingCustomField;
    BOOL _showInInbox;
    BOOL _showAlert;
    NSString *_statusMessage;
    BOOL _rememberViewChanges;
    struct _NSSize _safariBookmarksSize;
    struct _NSSize _customURLSize;
    NSViewAnimation *_currentAnimation;
    RSSFeedSubscriber *_subscriber;
}

+ (id)sharedInstance;
- (id)init;
- (void)_setContainerSubview:(id)fp8;
- (void)setShowCustomFeedField:(BOOL)fp8 animate:(BOOL)fp12 forFirstTime:(BOOL)fp16;
- (float)animation:(id)fp8 valueForProgress:(float)fp12;
- (void)animationDidEnd:(id)fp8;
- (void)_orderWindowFront;
- (void)_orderWindowOutWithCode:(unsigned int)fp8;
- (void)sheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_doTweaksWhichShouldBeInTheNib;
- (void)_showAndRememberViewChanges:(BOOL)fp8 customURLString:(id)fp12;
- (void)show;
- (void)showWithCustomURLString:(id)fp8;
- (void)addClicked:(id)fp8;
- (void)cancelClicked:(id)fp8;
- (void)syncClicked:(id)fp8;
- (void)changeView:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (BOOL)dataWillBeSynced;
- (void)dataWasSynced;
- (void)_subscribeToCustomURL;
- (void)controlTextDidChange:(id)fp8;
- (void)_setupBookmarks;
- (void)_activateBookmarks;
- (void)_deactivateBookmarks;
- (void)_updateContextFromNotification:(id)fp8;
- (void)_bookmarksDidChange:(id)fp8;
- (void)_subscribeToSafariBookmarks;
- (id)_bookmarkAtRow:(int)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 shouldSelectRow:(int)fp12;
- (void)tableViewSingleClick:(id)fp8;
- (void)tableViewDoubleClick:(id)fp8;
- (void)outlineView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 item:(id)fp20;
- (struct _NSSize)customURLSize;
- (void)setCustomURLSize:(struct _NSSize)fp8;
- (struct _NSSize)safariBookmarksSize;
- (void)setSafariBookmarksSize:(struct _NSSize)fp8;
- (BOOL)rememberViewChanges;
- (void)setRememberViewChanges:(BOOL)fp8;
- (id)subscriber;
- (void)setSubscriber:(id)fp8;
- (id)currentAnimation;
- (void)setCurrentAnimation:(id)fp8;
- (id)statusMessage;
- (void)setStatusMessage:(id)fp8;
- (BOOL)showAlert;
- (void)setShowAlert:(BOOL)fp8;
- (BOOL)showInInbox;
- (void)setShowInInbox:(BOOL)fp8;
- (BOOL)isShowingCustomField;
- (void)setIsShowingCustomField:(BOOL)fp8;
- (BOOL)isSpinning;
- (void)setIsSpinning:(BOOL)fp8;
- (BOOL)isSyncing;
- (void)setIsSyncing:(BOOL)fp8;
- (id)bookmarksManager;
- (void)setBookmarksManager:(id)fp8;

@end

